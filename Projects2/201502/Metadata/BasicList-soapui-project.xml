<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="BasicList" resourceRoot="${projectDir}" soapui-version="4.6.1" abortOnError="false" runType="SEQUENTIAL" activeEnvironment="Default" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="MetadataBasicCreate_ContentProvider"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value="C:\Documents and Settings\ankit.nidhi\My Documents\Reports20042012"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="MetadataBasicCreate_ContentProvider" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:endpoint>${#Project#Device_HostName}</con:endpoint><con:endpoint>${#Project#Batch_HostName}</con:endpoint><con:endpoint>${#Project#Query_HostName}</con:endpoint></con:endpoints><con:resource name="MetadataBasicCreate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/"><con:settings/><con:parameters/><con:method name="POST MetadataBasic" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>401 400 409 403</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:Error</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:Errors</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>202 200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>405 503</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>503 500 404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>500 400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain</con:mediaType><con:status>200 202 201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>202 201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>202</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>202</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>409 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Metadata POST" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="PUT MetadataBasic" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>202 200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>400 404 409 403</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:Errors</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>500 400 405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain</con:mediaType><con:status>200 202</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Global#HOST}:${#Global#PORT}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Head MetadataBasicCreate" method="HEAD"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="GET MetadataBasicCreate" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:BasicAsset</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Delete MetadataBasicCreate" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Option MetadataBasicCreate" method="OPTIONS"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>503 401</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="MetadataBasicGet" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}"><con:settings/><con:parameters/><con:method name="GET MetadataBasic" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>401 400 404 403</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:Error</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>500 503 404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>405 404 503</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=ISO-8859-1</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:BasicAsset</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=iso-8859-1</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:BasicAsset</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 404 403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:BasicAsset</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="OPTIONS MetadataBasic" method="OPTIONS"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>401 400 404</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:Error</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="PUT MetadataBasic" method="PUT"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>401 400 404 403</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:Error</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200 202</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>405 404</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:BasicAsset</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain</con:mediaType><con:status>200 202</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>202</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>500 412</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>202</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>404 403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="POST MetadataBasic" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>401 400 404</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:Error</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="DELETE MetadataBasic" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>401 400 404 403</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:Error</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>405 503 404</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>400 405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>202 200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/06/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="HEAD MetadataBasic" method="HEAD"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>401 400 404</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:Error</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="MetadataBasicDelete" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/urn:dece:cid:file:greatmedia.mp4"><con:settings/><con:parameters/><con:method name="Method 1" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:Errors</con:element></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="DECE" value="urn:dece:org:org:dece:9 urn:dece:accountid:org:dece:2 urn:dece:userid:org:dece:2" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="MetadataBasicDelete 2" path="/rest/${#Projectl#REST_API_Version}/Asset/Metadata/Basic/${#TestCase#CID}"><con:settings/><con:parameters/><con:method name="Method 1" method="DELETE"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="MetadataBasicCreate RTR" path="/rest/${#Projectl#REST_API_Version}/Asset/Metadata/Basic/"><con:settings/><con:parameters/><con:method name="POST MetadataBasic" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>401 400 409</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:Error</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:Errors</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>202</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Metadata POST" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="PUT MetadataBasic" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>202</con:status><con:params/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://${#Global#HOST}:${#Global#PORT}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Head MetadataBasicCreate" method="HEAD"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>503</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="GET MetadataBasicCreate" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>503</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Delete MetadataBasicCreate" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="MetadataBasicGet for Delete" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CIDDelete}"><con:settings/><con:parameters/><con:method name="GET MetadataBasic" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>401 400 404</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:Error</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>500 503 404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>405 404</con:status><con:params/></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="OPTIONS MetadataBasic" method="OPTIONS"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>401 400 404</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:Error</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="PUT MetadataBasic" method="PUT"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>401 400 404</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:Error</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="POST MetadataBasic" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>401 400 404</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:Error</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="DELETE MetadataBasic" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>401 400 404</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:Error</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>400 405</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="HEAD MetadataBasic" method="HEAD"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>401 400 404</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:Error</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="MetadataBasicGetWithUpdateNum" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}"><con:settings/><con:parameters><con:parameter><con:name>updatenum</con:name><con:value>1</con:value><con:style>QUERY</con:style><con:default>1</con:default></con:parameter></con:parameters><con:method name="GET MetadataBasic" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>401 400 404</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:Error</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>500 503 404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>405 404 503</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=ISO-8859-1</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:BasicAsset</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=iso-8859-1</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:BasicAsset</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 404 403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:BasicAsset</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="OPTIONS MetadataBasic" method="OPTIONS"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>401 400 404</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:Error</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="PUT MetadataBasic" method="PUT"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>401 400 404 403</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:Error</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200 202</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>405 404</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:BasicAsset</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain</con:mediaType><con:status>200 202</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>202</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="POST MetadataBasic" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>401 400 404</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:Error</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="DELETE MetadataBasic" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>401 400 404 403</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:Error</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>405 503 404</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>400 405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>202 200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="HEAD MetadataBasic" method="HEAD"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>401 400 404</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:Error</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="ResourceUpdate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}/ResourceStatus/Current/Update"><con:settings/><con:parameters/><con:method name="Method 1" method="PUT"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>303</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ResourceStatus</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 409 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="MetaDataBasicList" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List"><con:settings/><con:parameters/><con:method name="GET MetadataBasicList" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:BasicAssetList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>304</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:BasicAsset</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>304</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>304</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>304</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>304</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>304</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>304</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="POST MetedataBasicList" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="PUT MetadataBasicList" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:BasicAsset</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/06/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="DELETE MetadataBasicList" method="DELETE"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="HEAD MetadataBasciList" method="HEAD"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="OPTION MetadataBasciList" method="OPTIONS"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="MetadataBasicListOn" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List?FilterClass=urn:dece:type:viewfilter:lastmodifieddate&amp;OnOrAfter=${#TestCase#onorafter}"><con:settings/><con:parameters/><con:method name="GET OnMetadataBasicList" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="FilterOffset" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List?FilterClass=urn:dece:type:viewfilter:lastmodifieddate&amp;OnOrAfter=${#TestCase#onorafter}&amp;FilterOffset=${#TestCase#offset}&amp;FilterCount=${#TestCase#filtercount}"><con:settings/><con:parameters/><con:method name="GET-FilterOffset" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="EncodedMetadataBasicListOn" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List?FilterClass=urn%3Adece%3Atype%3Aviewfilter%3Alastmodifieddate&amp;OnOrAfter=${#TestCase#onorafter}"><con:settings/><con:parameters/><con:method name="GET OnMetadataBasicList" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="encodedFilterOffset" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List?FilterClass=urn%3Adece%3Atype%3Aviewfilter%3Alastmodifieddate&amp;OnOrAfter=${#TestCase#onorafter}&amp;FilterOffset=${#TestCase#offset}&amp;FilterCount=${#TestCase#filtercount}"><con:settings/><con:parameters/><con:method name="GET-FilterOffset" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="MetadataBasicUpdateWithUpdateNum" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:endpoint>${#Project#Batch_HostName}</con:endpoint><con:endpoint>${#Project#Device_HostName}</con:endpoint><con:endpoint>${#Project#Query_HostName}</con:endpoint></con:endpoints><con:resource name="BasicGet" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}?updatenum=${#TestCase#UpdateNum}"><con:settings/><con:parameters/><con:method name="Method 1" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:BasicAsset</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>404 400 403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>404 401</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="ResourceStatusUpdate" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:endpoint>${#Project#Device_HostName}</con:endpoint><con:endpoint>${#Project#Batch_HostName}</con:endpoint><con:endpoint>${#Project#Query_HostName}</con:endpoint></con:endpoints><con:resource name="BasicListResourceStatusUpdate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}/ResourceStatus/Current/Update"><con:settings/><con:parameters/><con:method name="PUT-BasicListResourceStatusUpdate" method="PUT"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite name="SetupScripts"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Setup" searchProperties="true" id="98c89041-7ee1-4aa0-ab8d-c335afc208b5"><con:settings/><con:testStep type="groovy" name="Set ENV Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

log.info("Set Environment properties!!!");
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def projectPath = groovyUtils.projectPath
log.info("Project Path : '" + projectPath + "'");

def eNV = context.expand( '${#Project#ENV}' )
log.info("Environment: '" + eNV+ "'");

def propertiesPath = null;

if (System.properties['os.name'].toLowerCase().contains('windows')) 
	{
    		log.info "it's Windows OS!!";
    		File temp = new File( projectPath + "\\..\\..\\..\\Properties\\");
    		propertiesPath = temp.getCanonicalPath();
	} 
else 
	{
    		log.info "it's Linux OS!!";
    		File temp = new File(projectPath + "/../../../Properties/");
    		propertiesPath = temp.getCanonicalPath();
	}
	
log.info("Properties File Location : '" + propertiesPath+ "'");


def propMap=[:]
BufferedReader reader = new BufferedReader(new FileReader(propertiesPath + "/" + eNV +"project.properties"));
log.info("Load property file : '" + propertiesPath + "/" + eNV +"project.properties"+ "'");
String line;
while ((line = reader.readLine()) != null)
	{
		if (line.trim().length()==0) continue;
		if (line.charAt(0)=='#') continue;

		int delimPosition = line.indexOf("=");
		String key = line.substring(0, delimPosition-0).trim();
		String value = line.substring(delimPosition+1).trim();
		propMap.put(key, value);
	}

propMap.each{ k, v -> tP.setPropertyValue(k,v)}

</script></con:config></con:testStep><con:testStep type="groovy" name="Set_CoordinatorSchema"><con:settings/><con:config><script>
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

log.info "V2: "+tP.getPropertyValue("versionMinor");

def v2 = context.expand( '${#Project#versionMinor}' )
def schema = tP.getPropertyValue("coordinatorSchema_"+v2);

tP.setPropertyValue("Coordinator_Schema",schema);
log.info "Setting the coordinatorSchema value ---- "+schema;


def mdschema = tP.getPropertyValue("md_schema_"+v2);
tP.setPropertyValue("md_schema",mdschema);
log.info "Setting the metadata schema  value ---- "+mdschema;</script></con:config></con:testStep><con:testStep type="datasource" name="Country" disabled="true"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">US&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">GB&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">CA&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">IE&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">AU&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">NZ&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">AT&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">DE&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">CH&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">FR&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">BE&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">NL&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">LU&lt;/con:entry></row></con:configuration></con:dataSource><con:property>Country</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="groovy" name="TOUSetup" disabled="true"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def tP = testSuite.getProject();

def dBHost = context.expand( '${#Project#targetSystem}' )

def country = context.expand( '${Country#Country}' )

def a = new dbUtils.dbUtils(log,dBHost);
String sql = """select consent_version from (select
	            consent_version            
	            from
	            CONSENT
	            where
	            CONSENT_URN = 'urn:dece:type:policy:TermsOfUse'
	            and
	            COUNTRY = '""" + country + """'
	            order by
	            consent_version desc)
	            where rownum &lt; 2""";             
	log.info sql;
        
        results = a.SelectFromDB(sql,dBHost);

//                            a.dbConnClose();
       assert results.length() > 0;
       log.info "results" + results;

       def myXML = new XmlSlurper().parseText(results);   

       log.info myXML.ResultSet.Row.CONSENT_VERSION.text();
                testCase.setPropertyValue("Consent_Version",myXML.ResultSet.Row.CONSENT_VERSION.text());
                

def consent_Version = context.expand( '${#TestCase#Consent_Version}' )

tP.setPropertyValue("TOU_"+country,consent_Version);


</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" disabled="true"><con:settings/><con:config><dataSourceStep>Country</dataSourceStep><targetStep>TOUSetup</targetStep></con:config></con:testStep><con:testStep type="groovy" name="Identify_flaky" disabled="true"><con:settings/><con:config><script>
//TestCase
def testCase  = testRunner.getTestCase();
def microService = context.expand( '${#Project#microService}' ).toString();
ArrayList&lt;String> Suit_lst=new ArrayList&lt;String>();
//Get Arguments
 
def project = context.testCase.testSuite.project;

for (suiteName in project.testSuiteList) {
//log.info suiteName.name;
Suit_lst.add(suiteName.name);
  
}
def projectName =project.name;


ArrayList&lt;String> Tstep=new ArrayList&lt;String>();

def f = new File("C:\\flaky\\$projectName"+".csv");
f.append("\r\n TestSuite Name "+","+"Flaky TestCase Name"+","+"Comments");

//TC_DECE_10277_MetadataBasicCreate_FUNC_CTP_Invocation_with_method_POST_CID_ISTC_Format_Passing_Two_Unencoded_Colon_Negative_flaky
for (String suit : Suit_lst)
{  def testSuite = suit;
     def TCList  = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
     def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

   for(i = 0; i &lt;= TCCount - 1; i++)
     {                                              
                def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
                def tstSuite=testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite)
                testStepList  = targetTestCase.getTestStepList();
                testStepCount = targetTestCase.getTestStepCount();
               
				if(targetTestCase.name.endsWith("_flaky"))
				{   
			       log.info "##################  $tstSuite.name  #####################";
				  log.info targetTestCase.name
//				  targetTestCase.setDisabled(true)

				  f.append("\r\n"+tstSuite.name+","+targetTestCase.name+"");
				}
                      
                
    } 
}                                                                                             
</script></con:config></con:testStep><con:properties><con:property><con:name>Consent_Version</con:name><con:value>20121024</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>48eef7a0-e5f2-4926-99bb-c9ecd11b1888</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c0f3550c-c4aa-4ddc-abb8-3d629c23599f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Enable testsuite by version" searchProperties="true" id="c7102017-1dfd-4593-97af-5f103602e151"><con:settings/><con:testStep type="groovy" name="Enable testsuite"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TSuite1 = testProject.getTestSuiteByName("P0_Cache_TestCases_1/11");
def TSuite2 = testProject.getTestSuiteByName("P0_Cache_TestCases_2015/02");


def rEST_API_Version = context.expand( '${#Project#versionMajor}/${#Project#versionMinor}' )

def eNV =  context.expand( '${#Project#ENV}' )

if(eNV=="QALP1"||eNV=="QALP1PC")
{
	if (rEST_API_Version=="2015/02")
	{
		TSuite1.setDisabled(true);
		TSuite2.setDisabled(false);
	}
	else
	{
		TSuite1.setDisabled(true);
		TSuite2.setDisabled(true);
	}
     	
}

else
{
	if (rEST_API_Version=="1/11")
	{
		TSuite1.setDisabled(false);
		TSuite2.setDisabled(true);
	}
	else
	{
		TSuite1.setDisabled(true);
		TSuite2.setDisabled(true);
	}
}

</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="P0_MetadataBasicList"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Users\ktella\Desktop\Meatadata_Sprint_4.0.3_Reports\R4\R4_MetadataBasicList\P0_MetadataBasicList</con:setting></con:settings><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10002_MetadataBasicList__PERM_Access_Control_Rights_Content Provider_Successful" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="a60c1084-214d-412d-94bc-ecbc1fbb262a"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="dddf1415-6279-47d6-880b-0faffc3bd484"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_109572034.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">109572034</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>APID_GET_DELETE</con:name><con:value>:</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2bfbb410-9901-4b23-affe-ef4e61d46ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d7fea0fc-95e1-448f-807c-8e39570ad09f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>650a1023-f0c1-44d6-aade-9f3237e379e6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7c6bf38a-3431-49b4-a801-6e3c93ce7fbb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ccbc5bab-a051-4dfd-92a7-fd70d2af4063</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>77bf99b2-4fac-49cd-9fad-5a48730627e9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13884bc8-e323-48f6-83c1-3fa91532de23</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>69cdbd2e-0cc6-4061-91a1-23be865ae3f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ab924b21-ac6a-4c3b-842b-3cc8c2438bc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10003_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-DDThh:mm:ss.60TZD" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="b9b11afb-26f0-410b-9a24-ced33d310d5c"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="9000eccc-7255-44c5-95af-c4312aaea049"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_356841548.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">356841548</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>2013-06-25T19%3A20%3A30.60%2B01%3A00</con:value></con:property><con:property><con:name>APID_GET_DELETE</con:name><con:value>:</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>77a4683f-ec3f-4812-bb0e-b73e7b0fdc17</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10004_MetadataBasicList_FUNC_DateFormat_With_Offset_5_FilterCount_10" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="e0204b10-3fb7-4353-89a1-ec445af1aa57"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="77a4683f-ec3f-4812-bb0e-b73e7b0fdc17"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-FilterOffset")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-FilterOffset")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_867606322.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">867606322</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>1997-07-16T19%3A20%3A30.45%2B01%3A00</con:value></con:property><con:property><con:name>offset</con:name><con:value>5</con:value></con:property><con:property><con:name>filtercount</con:name><con:value>10</con:value></con:property><con:property><con:name>APID_GET_DELETE</con:name><con:value>:</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>dddf1415-6279-47d6-880b-0faffc3bd484</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10005_MetadataBasicList__PERM_Access_Control_Rights_Content Provider_Successful B HOST" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="f1803e79-1698-45e0-ba67-0bb2d5c8834e"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("B HOST Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("B HOST Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("B HOST Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("B HOST Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_262624102.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">262624102</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>APID_GET_DELETE</con:name><con:value>:</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2bfbb410-9901-4b23-affe-ef4e61d46ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d7fea0fc-95e1-448f-807c-8e39570ad09f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>650a1023-f0c1-44d6-aade-9f3237e379e6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7c6bf38a-3431-49b4-a801-6e3c93ce7fbb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ccbc5bab-a051-4dfd-92a7-fd70d2af4063</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>77bf99b2-4fac-49cd-9fad-5a48730627e9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13884bc8-e323-48f6-83c1-3fa91532de23</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>69cdbd2e-0cc6-4061-91a1-23be865ae3f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ab924b21-ac6a-4c3b-842b-3cc8c2438bc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10006_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-DDThh:mm:ss.60TZD B HOST" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="ea4f4be7-a5a4-4e86-b083-2e91b62afafb"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("B HOST Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("B HOST Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("B HOST Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("B HOST Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_974100264.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">974100264</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>2013-06-25T19%3A20%3A30.60%2B01%3A00</con:value></con:property><con:property><con:name>APID_GET_DELETE</con:name><con:value>:</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>77a4683f-ec3f-4812-bb0e-b73e7b0fdc17</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10007_MetadataBasicList_FUNC_DateFormat_With_Offset_5_FilterCount_10 B HOST" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="8de11257-6fe9-452c-8652-fb8beab4806c"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("B HOST Test Cases Containing APIs").getTestCaseByName("GET-FilterOffset")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("B HOST Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("B HOST Test Cases Containing APIs").getTestCaseByName("GET-FilterOffset")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("B HOST Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_796661278.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">796661278</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>1997-07-16T19%3A20%3A30.45%2B01%3A00</con:value></con:property><con:property><con:name>offset</con:name><con:value>5</con:value></con:property><con:property><con:name>filtercount</con:name><con:value>10</con:value></con:property><con:property><con:name>APID_GET_DELETE</con:name><con:value>:</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>dddf1415-6279-47d6-880b-0faffc3bd484</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10008_MetadataBasicList_METH_Invocation_with utf-8" searchProperties="true" id="6a55440b-f6f6-4689-a4f7-f3788c7e2982"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET MetadataList");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET MetadataList"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" methodName="GET MetadataBasicList" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET MetadataList" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Content-Type" value="application/xml;charset=utf-8" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request><![CDATA[<!-- Build 6.2 Test Sample XML file generated by XMLSpy v2008 sp1 (http://www.altova.com)--><dece:BasicAsset 
xsi:schemaLocation="http://www.decellc.org/schema/2010/10/dece Coordinator%20Interface%20Schema-v0171.xsd" 

xmlns:dece="http://www.decellc.org/schema/2011/08/coordinator" 
xmlns:md="http://www.movielabs.com/md" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<!--<dece:BasicData ContentID="urn:dece:cid:FILE:STOPANDGO.TXT">-->
<dece:BasicData ContentID="urn:dece:cid:IMDB:Romeo and Juliet version 180280">
		<md:UpdateNum>180280</md:UpdateNum>
		<md:LocalizedInfo default="true" language="en-US">
			<md:TitleDisplay19>StrngTitleDis3nd</md:TitleDisplay19>
			<md:TitleDisplay60>StringTitleDisplay60</md:TitleDisplay60>
			<md:TitleSort>StringTitleSort</md:TitleSort>
			<md:ArtReference resolution="13002x13002">http://www.altova2.com</md:ArtReference>
			<md:Summary190 cast="true">StringSummary190</md:Summary190>
			<md:Summary400 cast="true">StringSummary400</md:Summary400>
			<md:Summary4000 cast="true">StringSummary4000</md:Summary4000>
			<md:DisplayIndicators>CC</md:DisplayIndicators>
			<md:DisplayIndicators>DD</md:DisplayIndicators>
			<md:Genre>Action</md:Genre>
			<md:Genre>Horror</md:Genre>
			<md:Keyword>StringKeyword</md:Keyword>
			<md:VersionNotes>String</md:VersionNotes>
			<md:Region>
				<md:country>AA</md:country>
			</md:Region>
			<md:Region>
				<md:country>US</md:country>
			</md:Region>
			<md:OriginalTitle>StringOriginalTitle</md:OriginalTitle>
			<md:CopyrightLine>StringCopyrightLine</md:CopyrightLine>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction scheme="string">4.36</md:JobFunction>
					<md:JobDisplay>Visual Effects Artist</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String1</md:Character>
					<md:Character>String122</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Name>
					<md:DisplayName>String</md:DisplayName>
					<md:SortName>String</md:SortName>
					<md:FirstGivenName>String</md:FirstGivenName>
					<md:SecondGivenName>String</md:SecondGivenName>
					<md:FamilyName>String</md:FamilyName>
					<md:Suffix>String</md:Suffix>
					<md:Moniker>String</md:Moniker>
				</md:Name>
				<md:Identifier>
					<md:Identifier>String1</md:Identifier>
					<md:Namespace>String1</md:Namespace>
					<md:ReferenceLocation>http://www.altova1.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Gender>male</md:Gender>
			</md:PeopleLocal>
		</md:LocalizedInfo>
		<md:RunLength>P1Y2M3DT10H30M0S</md:RunLength>
		<md:ReleaseYear>2001</md:ReleaseYear>
		<md:ReleaseDate>2010-08-13</md:ReleaseDate>
		<md:ReleaseHistory>
			<md:ReleaseType>DVD</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">2010-08-13</md:Date>
			<md:Description>String324342342</md:Description>
			<md:ReleaseOrg organizationID="Stringggfsg">
				<md:DisplayName>Stringsgs</md:DisplayName>
				<md:SortName>Stringsdgsdf</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:ReleaseHistory>
			<md:ReleaseType>Hospitality</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">2010-08-13</md:Date>
			<md:Description>String5465464</md:Description>
			<md:ReleaseOrg organizationID="String456456">
				<md:DisplayName>String45645633</md:DisplayName>
				<md:SortName>String34534533</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:WorkType>Album</md:WorkType>
		<md:PictureColorType>color</md:PictureColorType>
		<md:PictureFormat>Letterbox</md:PictureFormat>
		<md:ThreeD>true</md:ThreeD>
		<md:AltIdentifier>
			<md:Namespace>String</md:Namespace>
			<md:Identifier>String</md:Identifier>
			<md:Location>http://www.altova.com</md:Location>
		</md:AltIdentifier>
		<md:AltIdentifier>
			<md:Namespace>String1221</md:Namespace>
			<md:Identifier>String1221</md:Identifier>
			<md:Location>http://www.altova122121.com</md:Location>
		</md:AltIdentifier>
		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>MPAA</md:System>
        			<md:Value>PG-13</md:Value>
        			<md:LinkToLogo>http://www.mpaa.org/_images/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet>
<!--		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>TVPG</md:System>
        			<md:Value>TV-Y7</md:Value>
        			<md:LinkToLogo>http://www.tvguidelines.org/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet> -->
<!--		<md:RatingSet>
			<md:NotRated>true</md:NotRated>
			<md:AdultContent>true</md:AdultContent>
		</md:RatingSet> -->
		<md:People>
			<md:Job>
				<md:JobFunction scheme="string">27.13</md:JobFunction>
				<md:JobDisplay>String55</md:JobDisplay>
				<md:BillingBlockOrder>55</md:BillingBlockOrder>
				<md:Character>String55</md:Character>
				<md:Character>String55222</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="string">28.2</md:JobFunction>
				<md:JobDisplay>String66</md:JobDisplay>
				<md:BillingBlockOrder>66</md:BillingBlockOrder>
				<md:Character>String66</md:Character>
				<md:Character>String62126</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String77</md:DisplayName>
				<md:SortName>String77</md:SortName>
				<md:FirstGivenName>String77</md:FirstGivenName>
				<md:SecondGivenName>String77</md:SecondGivenName>
				<md:FamilyName>String77</md:FamilyName>
				<md:Suffix>String77</md:Suffix>
				<md:Moniker>String77</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String88</md:Identifier>
				<md:Namespace>String</md:Namespace>
				<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:People>
			<md:Job>
				<md:JobFunction scheme="String">28</md:JobFunction>
				<md:JobDisplay>String99</md:JobDisplay>
				<md:BillingBlockOrder>99</md:BillingBlockOrder>
				<md:Character>String99</md:Character>
				<md:Character>Strindfsdffdg99</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="String">27.14</md:JobFunction>
				<md:JobDisplay>String111</md:JobDisplay>
				<md:BillingBlockOrder>111</md:BillingBlockOrder>
				<md:Character>String111</md:Character>
				<md:Character>String111wrwewewewe</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String222</md:DisplayName>
				<md:SortName>String222</md:SortName>
				<md:FirstGivenName>String222</md:FirstGivenName>
				<md:SecondGivenName>String222</md:SecondGivenName>
				<md:FamilyName>String222</md:FamilyName>
				<md:Suffix>String222</md:Suffix>
				<md:Moniker>String222</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String333</md:Identifier>
				<md:Namespace>String333</md:Namespace>
				<md:ReferenceLocation>http://www.altova333.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Identifier>
				<md:Identifier>String444</md:Identifier>
				<md:Namespace>String444</md:Namespace>
				<md:ReferenceLocation>http://www.altova444.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:CountryOfOrigin>
			<md:country>AA</md:country>
		</md:CountryOfOrigin>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:SequenceInfo>
			<md:Number>0</md:Number>
			<md:HouseSequence>String</md:HouseSequence>
		</md:SequenceInfo>
		<md:Parent relationshipType="ispieceof">
		<!--	<md:ParentContentID>urn:dece:cid:org:mystudio:0067</md:ParentContentID>-->
			<md:ParentContentID>urn:dece:cid:org:mystudio:0005</md:ParentContentID> 
		</md:Parent>
	</dece:BasicData>
	<dece:ResourceStatus>
		<dece:Current>
			<dece:Value>urn:dece:type:status:active</dece:Value>
			<dece:Description>2010-08-01T09:30:47.0Z</dece:Description>
		</dece:Current>
		<dece:History>
			<dece:Prior>
				<dece:Value>urn:dece:type:status:suspended</dece:Value>
				<dece:Description>temp suspension</dece:Description>
			</dece:Prior>
			<dece:Prior>
				<dece:Value>urn:dece:type:status:active</dece:Value>
				<dece:Description>active</dece:Description>
			</dece:Prior>
		</dece:History>
	</dece:ResourceStatus>
</dece:BasicAsset>]]></con:request><con:assertion type="GroovyScriptAssertion" disabled="true"><con:configuration><scriptText>


	assert ((com.eviware.soapui.support.types.StringList)messageExchange.responseHeaders["#status#"]).containsValue("HTTP/1.1 405 Method Not Allowed")
		
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>nodeId</con:name><con:value>urn:dece:org:org:dece:2</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:ISSN:3297-7017</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1/CON_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>34543e49-569c-4ea3-aef8-72a77db98207</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a64c596e-6fc2-4a60-ba4b-66487961f0d4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>QC_TestPlanDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestLabDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestSet</con:name><con:value/></con:property><con:property><con:name>add</con:name><con:value>{a,b-> a+b}</con:value></con:property><con:property><con:name>add</con:name><con:value>{a,b-> a+b}</con:value></con:property><con:property><con:name>add</con:name></con:property><con:property><con:name>add</con:name></con:property><con:property><con:name>nodeid</con:name><con:value>nodeIdCON</con:value></con:property></con:properties><con:setupScript/><con:tearDownScript/><con:reportParameters/></con:testSuite><con:testSuite name="P0_Cache_TestCases_2015/02"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Multiple Pages</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Users\pgour\Desktop\Build_4.0 Reports\R4\P0_cache\BasicList</con:setting></con:settings><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10009_MetadataBasicListGET_HEAD_MetadataBasicListGET_If-None-Match_304 Not Modified" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="02b40046-b2bb-4fb0-bc22-b970cd5da754" disabled="true"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="bf7f6ec5-cc36-4ac6-b8e4-4891c465493c"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="1-SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("HEAD-ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="HEAD-ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="HEAD MetadataBasciList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HEAD-ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="1- Extact The Response Header" id="9e9f0487-b652-481c-af37-6402c72546ec"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('HEAD-ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus1", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="1-Process The Response and Header" id="85f0d65f-6d6f-47a1-830e-82be60ecaa5a"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate1");
def httpStatus 			= tC.getPropertyValue("httpStatus1");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-None-Match" value="${#Project#ETag} " xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header" id="58bf873e-d19c-4533-83c4-505f682ce54e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header" id="33532fdf-c217-46f1-a953-670f7e63c668"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">854328</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1PC/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>304</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 304 Not Modified</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">max-age=86400</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"0C3392B621D03207E05305991F0A22E7:26121DD1"</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bf7f6ec5-cc36-4ac6-b8e4-4891c465493c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10010_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicListGET_If-None-Match_200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="2d4ad55e-1c03-487d-adb3-8f09b69dadf2"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="1dd7e9b2-4bef-415b-a202-70c57dadbe55"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet" id="827b916f-1e28-4e09-a3b1-4277e92b82fc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator" id="c84efce6-9a9f-451a-a364-34e1d6550219"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate" id="84eb76f6-7ed9-4b5e-892e-d1f59edcdcc6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="b5fa94df-3d9f-44ab-8780-96f3b7664031"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-None-Match" value="${#Project#ETag} " xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET" id="0ee63d93-9ff3-4e01-97c7-b39a0eec43a1"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET" id="ca52cc4c-f9db-4f4e-b814-a552b12840ba"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_361863352.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">361863352</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>200</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value/></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value>max-age=31536000</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E347E2263688BC3DE0401F0A07993B47"</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>APID_GET_DELETE</con:name><con:value>:</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c84efce6-9a9f-451a-a364-34e1d6550219</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84eb76f6-7ed9-4b5e-892e-d1f59edcdcc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>827b916f-1e28-4e09-a3b1-4277e92b82fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ee63d93-9ff3-4e01-97c7-b39a0eec43a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca52cc4c-f9db-4f4e-b814-a552b12840ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1dd7e9b2-4bef-415b-a202-70c57dadbe55</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10011_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicGET_MetadataBasicUpdate_If-Match_11_MetadataBasicListGET_If-None-Match_07_200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="0a38b485-f238-42bf-8f5a-ba0f4b8baa6b"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet 1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-None-Match" value="${#Project#ETag} " xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_529369732.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">529369732</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>200</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value/></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>ExpectedReturnCodeStatusUpdate</con:name><con:value>303</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c84efce6-9a9f-451a-a364-34e1d6550219</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84eb76f6-7ed9-4b5e-892e-d1f59edcdcc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cc35e0c7-a380-4c8b-ae66-32296920307e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>827b916f-1e28-4e09-a3b1-4277e92b82fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ee63d93-9ff3-4e01-97c7-b39a0eec43a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca52cc4c-f9db-4f4e-b814-a552b12840ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a0982206-2f5a-4a60-9d0d-7ad49555beff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6026b1a1-d686-4d71-8cc2-1a393782d1c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>350b9df6-cb2e-4d1f-ac15-bc16033bb612</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3aa5fccb-0b90-47c8-97e9-3baa69eb6a1b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1b16748c-2a14-4065-9828-86bbf5f796cc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d8152490-6513-4744-87ef-7e8c2d941ea9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>11c6fd60-63f1-4e3d-ad09-f877d0165a39</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>24bcd834-b626-4f72-9be8-2e7146d20424</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10012_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicGET_MetadataBasicUpdate_If-Match_MetadataBasicListGET_If-None-Match_200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="34237e0b-3075-43aa-a869-2f330a7f28ee"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="e69b96c9-5eeb-434a-af18-2c0303650afe"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet 1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("PUT - MetadataBasicReourceStatusUpdate_Active-Pending")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-None-Match" value="${#Project#ETag} " xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_196811774.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">196811774</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>200</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value/></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>ExpectedReturnCodeStatusUpdate</con:name><con:value>303</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c84efce6-9a9f-451a-a364-34e1d6550219</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84eb76f6-7ed9-4b5e-892e-d1f59edcdcc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cc35e0c7-a380-4c8b-ae66-32296920307e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>827b916f-1e28-4e09-a3b1-4277e92b82fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ee63d93-9ff3-4e01-97c7-b39a0eec43a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca52cc4c-f9db-4f4e-b814-a552b12840ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a0982206-2f5a-4a60-9d0d-7ad49555beff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6026b1a1-d686-4d71-8cc2-1a393782d1c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>350b9df6-cb2e-4d1f-ac15-bc16033bb612</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e69b96c9-5eeb-434a-af18-2c0303650afe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10013_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicGET_MetadataBasicDelete_If-Match_MetadataBasicListGET_If-None-Match_404 Not Found" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="2bc97bfe-e49c-4713-a33a-bea94ba4420b"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="1b16748c-2a14-4065-9828-86bbf5f796cc"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet 1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete" id="3aa5fccb-0b90-47c8-97e9-3baa69eb6a1b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-None-Match" value="${#Project#ETag} " xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_600870838.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">600870838</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>200</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value/></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>ExpectedReturnCodeStatusUpdate</con:name><con:value>303</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c84efce6-9a9f-451a-a364-34e1d6550219</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84eb76f6-7ed9-4b5e-892e-d1f59edcdcc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cc35e0c7-a380-4c8b-ae66-32296920307e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>827b916f-1e28-4e09-a3b1-4277e92b82fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ee63d93-9ff3-4e01-97c7-b39a0eec43a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca52cc4c-f9db-4f4e-b814-a552b12840ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a0982206-2f5a-4a60-9d0d-7ad49555beff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6026b1a1-d686-4d71-8cc2-1a393782d1c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>350b9df6-cb2e-4d1f-ac15-bc16033bb612</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3aa5fccb-0b90-47c8-97e9-3baa69eb6a1b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1b16748c-2a14-4065-9828-86bbf5f796cc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10014_MetadataBasicListGET_HEAD_MetadataBasicListGET_If-Modified-Since_304 Not Modified" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="09ad956a-fd89-4498-b5cb-2d2ad59064f0"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="92112f02-6a59-4b20-9ae2-f919c1488600"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="1-SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("HEAD-ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="HEAD-ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="HEAD MetadataBasciList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HEAD-ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="1- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('HEAD-ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;*/
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus1", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
tP.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
tP.setPropertyValue("Last-Modified", Last_Modified);
</script></con:config></con:testStep><con:testStep type="groovy" name="1-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate1");
def httpStatus 			= tC.getPropertyValue("httpStatus1");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Modified-Since" value="${#Project#Last-Modified}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">854328</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1PC/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>304</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 304 Not Modified</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">max-age=86400</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"0BF7EB61620B02DAE05307991F0A1F58:26121DD1"</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>92112f02-6a59-4b20-9ae2-f919c1488600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10015_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicListGET_If-Modified-Since_200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="d0ac3dd1-a26a-43d4-bc8c-d9e6d4d714fe"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="12158310-fb29-4bfc-80f5-b21f6ebdd441"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Modified-Since" value=" ${#Project#Last-Modified}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_293020860.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">293020860</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>200</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value/></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value>max-age=31536000</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E347E2263688BC3DE0401F0A07993B47"</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c84efce6-9a9f-451a-a364-34e1d6550219</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84eb76f6-7ed9-4b5e-892e-d1f59edcdcc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cc35e0c7-a380-4c8b-ae66-32296920307e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>827b916f-1e28-4e09-a3b1-4277e92b82fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ee63d93-9ff3-4e01-97c7-b39a0eec43a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca52cc4c-f9db-4f4e-b814-a552b12840ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a0982206-2f5a-4a60-9d0d-7ad49555beff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>12158310-fb29-4bfc-80f5-b21f6ebdd441</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10016_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicGET_MetadataBasicResourceStatusUpdate_If-Unmodified-Since_MetadataBasicListGET_If-Modified-Since_HTTP/1.1 200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="24e9a251-9d60-4206-a18e-c04c8d72cdc3"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="7520a803-c6fd-4471-8928-16269640be20"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet 1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicReourceStatusUpdate_Active-Pending"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("PUT - MetadataBasicReourceStatusUpdate_Active-Pending_If-Unmodified-Since")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Modified-Since" value="${#Project#Last-Modified}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_274039487.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">274039487</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>200</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value/></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>ExpectedReturnCodeStatusUpdate</con:name><con:value>303</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c84efce6-9a9f-451a-a364-34e1d6550219</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84eb76f6-7ed9-4b5e-892e-d1f59edcdcc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cc35e0c7-a380-4c8b-ae66-32296920307e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>827b916f-1e28-4e09-a3b1-4277e92b82fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ee63d93-9ff3-4e01-97c7-b39a0eec43a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca52cc4c-f9db-4f4e-b814-a552b12840ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a0982206-2f5a-4a60-9d0d-7ad49555beff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6026b1a1-d686-4d71-8cc2-1a393782d1c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>350b9df6-cb2e-4d1f-ac15-bc16033bb612</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7520a803-c6fd-4471-8928-16269640be20</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10017_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicGET_MetadataBasicUpdate_If-Unmodified-Since_MetadataBasicListGET_If-Modified-Since_200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="85f9e732-ca33-4ea0-ab67-c945fa12fade" disabled="true"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="6eac0c1b-417c-495f-886e-490fc842fe97"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet 1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("PUT - MetadataBasicCreate_If-Unmodified-Since")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Modified-Since" value="${#Project#Last-Modified}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_614363565.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">614363565</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>200</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value/></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>ExpectedReturnCodeStatusUpdate</con:name><con:value>303</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ETag</con:name><con:value>"06C53DD4799D5587E05307991F0AF8FF:26121DD1"</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value>t=1414815766 VFRgFgofmIgAADUcI8AAAAAC urn:dece:org:org:dece:CON 10.31.173.1</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c84efce6-9a9f-451a-a364-34e1d6550219</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84eb76f6-7ed9-4b5e-892e-d1f59edcdcc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cc35e0c7-a380-4c8b-ae66-32296920307e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>827b916f-1e28-4e09-a3b1-4277e92b82fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ee63d93-9ff3-4e01-97c7-b39a0eec43a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca52cc4c-f9db-4f4e-b814-a552b12840ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a0982206-2f5a-4a60-9d0d-7ad49555beff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6026b1a1-d686-4d71-8cc2-1a393782d1c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>350b9df6-cb2e-4d1f-ac15-bc16033bb612</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6eac0c1b-417c-495f-886e-490fc842fe97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10018_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicGET_MetadataBasicDelete_If-Unmodified-Since_MetadataBasicListGET_If-Modified-Since_404 Not Found" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="ac0dd120-70eb-4385-9a0e-7e88c8dbfe99"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="5a70039b-f43e-46f8-8fcb-df2c5ab4a23d"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet 1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataBasicGet 1" id="2e4b8063-b17a-4af1-aa66-466efd3370c4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("DELETE - MetadataBasicCreate_If-Unmodified-Since")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Modified-Since" value="${#Project#Last-Modified}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_821719983.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">821719983</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1PC/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>200</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value/></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>ExpectedReturnCodeStatusUpdate</con:name><con:value>303</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value>max-age=86400</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"EE7F144639074EA5E0401F0A059923D1:26121DD1"</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value>t=1388164871 Ur23BgofmIgAACqxGb8AAACp urn:dece:org:org:dece:CON 10.31.153.241</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c84efce6-9a9f-451a-a364-34e1d6550219</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84eb76f6-7ed9-4b5e-892e-d1f59edcdcc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cc35e0c7-a380-4c8b-ae66-32296920307e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>827b916f-1e28-4e09-a3b1-4277e92b82fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ee63d93-9ff3-4e01-97c7-b39a0eec43a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca52cc4c-f9db-4f4e-b814-a552b12840ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a0982206-2f5a-4a60-9d0d-7ad49555beff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6026b1a1-d686-4d71-8cc2-1a393782d1c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>350b9df6-cb2e-4d1f-ac15-bc16033bb612</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3aa5fccb-0b90-47c8-97e9-3baa69eb6a1b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5a70039b-f43e-46f8-8fcb-df2c5ab4a23d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e4b8063-b17a-4af1-aa66-466efd3370c4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10108_MetadataBasicListGET_HEAD_02_MetadataBasicListGET_If-None-Match_11_304 Not Modified" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="020c54b0-675e-47d2-9ffc-96290ab7f647"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 2015/02" id="6594d703-62ac-4794-8f86-f70a520f314c"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_02");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="1-SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("HEAD-ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="HEAD-ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="HEAD MetadataBasciList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HEAD-ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="1- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('HEAD-ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus1", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="1-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate1");
def httpStatus 			= tC.getPropertyValue("httpStatus1");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 1/11" id="669e8dc6-d638-454d-81d9-6b39ccdca37a"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_11");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-None-Match" value="${#Project#ETag} " xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:testStep type="groovy" name="Set back version 2015/02"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_02");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">854328</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>304</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 304 Not Modified</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ETag</con:name><con:value>"06C57FE9651802B6E05307991F0AC218:26121DD1"</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">t=1414815925 VFRgtQofmIgAADRPE7gAAAAX urn:dece:org:org:dece:CON 10.31.173.1</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bf7f6ec5-cc36-4ac6-b8e4-4891c465493c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>669e8dc6-d638-454d-81d9-6b39ccdca37a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6594d703-62ac-4794-8f86-f70a520f314c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10109_MetadataBasicListGET_MetadataBasicCreate_02_MetadataBasicListGET_If-None-Match_11_200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="a5f07b35-9df6-46a7-a074-894dbcc0ca3e"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 2015/02" id="c2fb5e96-558a-4ed5-a6ef-f57b2d124cea"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_02");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Set version 1/11" id="6ac0bc08-1461-4bcc-8cc7-2d7c1cc75d6e"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_11");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Change url" id="9b16b914-72b4-4764-9349-f2380cf2f86a"><con:settings/><con:config><script><![CDATA[//Random Number Generator

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/* ${Groovy Script to encode ALID} */


import org.apache.commons.lang.StringUtils;
def rEST_API_Version = context.expand( '${#Project#versionMajor}/${#Project#versionMinor}' )

def r4Profile = context.expand( '${#Project#R4Profile}' )
def r4APID_GET_DELETE = context.expand( '${#Project#R4APID_GET_DELETE}' )
def r3Profile = context.expand( '${#Project#R3Profile}' )
def r3APID_GET_DELETE = context.expand( '${#Project#R3APID_GET_DELETE}' )
def aLID = context.expand( '${#TestCase#ALID}' )


if(rEST_API_Version=="1/07"||rEST_API_Version=="1/11"||rEST_API_Version=="2015/02")

{

tP.setPropertyValue("Profile", r4Profile);
tP.setPropertyValue("APID_GET_DELETE", r4APID_GET_DELETE)	
//${Groovy Script to encode R4-APID}
log.info "ALID = "+aLID

int indexofforthcolon;
int counter = 0;
		for( int j=0; j<aLID.length(); j++ )
		{
   				if( aLID.charAt(j) == ':' ) 
   				{
       					 counter++;
						if(counter==4)
						{
							indexofforthcolon=j;
						}	 
   				} 
		}
		
String firstsubpart;
firstsubpart=aLID.substring(0,indexofforthcolon);
log.info firstsubpart;
String[] splitalid=aLID.split(":",2);
log.info splitalid.toString();
String content = "&amp;";
log.info  "Return Value :" 
      for (String retval: aLID.split(":", 5))
      {
      //log.info retval
      String container = retval;
      boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
	if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
      log.info URLEncoder.encode (tmpString, "UTF-8")
   	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (tmpString, "UTF-8"));
   	def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
  
    }
    else 
    {
    	log.info URLEncoder.encode (retval, "UTF-8")
    	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (retval, "UTF-8"));
    def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
     
    }
   }    
}


if(rEST_API_Version=="1/06")
{
	tP.setPropertyValue("Profile", r3Profile);
	tP.setPropertyValue("APID_GET_DELETE", r3APID_GET_DELETE);	
//ALID (not encoded) to be used in the request xml
log.info "ALID = "+aLID

String container = aLID;
String content = "&amp;";

//Processing the APIDs containing &amp; in its content
boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
     tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (tmpString, "UTF-8"));

//Encoded ALID (ALID_GET_DELETE) to be used in the URL for Update/Get/Delete operations after removing &amp; from it.

def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
	
}
else {

tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (aLID, "UTF-8"));
def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
}
}]]></script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-None-Match" value="${#Project#ETag} " xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set back version 2015/02"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_02");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_949452857.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">949452857</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1PC/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>200</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value/></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value>max-age=31536000</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E347E2263688BC3DE0401F0A07993B47"</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>APID_GET_DELETE</con:name><con:value>:</con:value></con:property><con:property><con:name>ALID_GET_DELETE</con:name><con:value>:</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c84efce6-9a9f-451a-a364-34e1d6550219</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84eb76f6-7ed9-4b5e-892e-d1f59edcdcc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>827b916f-1e28-4e09-a3b1-4277e92b82fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ee63d93-9ff3-4e01-97c7-b39a0eec43a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca52cc4c-f9db-4f4e-b814-a552b12840ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1dd7e9b2-4bef-415b-a202-70c57dadbe55</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6ac0bc08-1461-4bcc-8cc7-2d7c1cc75d6e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2fb5e96-558a-4ed5-a6ef-f57b2d124cea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b16b914-72b4-4764-9349-f2380cf2f86a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10110_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicGET_MetadataBasicResourceStatusUpdate_If-Match_02_MetadataBasicListGET_If-None-Match_11_200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="e57d6008-e61f-4821-97b5-a96c4265c211"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 2015/02" id="683fbd0b-0775-40aa-bdda-126e0aed2c13"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_02");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet 1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicReourceStatusUpdate_Active-Pending"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("PUT - MetadataBasicReourceStatusUpdate_Active-Pending")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 1/11" id="7548efe4-3082-4d00-9339-0b30cd267ef5"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_11");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Change url" id="0bcd6901-b016-4a52-aa0a-8ed40920184c"><con:settings/><con:config><script><![CDATA[//Random Number Generator

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/* ${Groovy Script to encode ALID} */


import org.apache.commons.lang.StringUtils;
def rEST_API_Version = context.expand( '${#Project#versionMajor}/${#Project#versionMinor}' )

def r4Profile = context.expand( '${#Project#R4Profile}' )
def r4APID_GET_DELETE = context.expand( '${#Project#R4APID_GET_DELETE}' )
def r3Profile = context.expand( '${#Project#R3Profile}' )
def r3APID_GET_DELETE = context.expand( '${#Project#R3APID_GET_DELETE}' )
def aLID = context.expand( '${#TestCase#ALID}' )


if(rEST_API_Version=="1/07"||rEST_API_Version=="1/11"||rEST_API_Version=="2015/02")

{

tP.setPropertyValue("Profile", r4Profile);
tP.setPropertyValue("APID_GET_DELETE", r4APID_GET_DELETE)	
//${Groovy Script to encode R4-APID}
log.info "ALID = "+aLID

int indexofforthcolon;
int counter = 0;
		for( int j=0; j<aLID.length(); j++ )
		{
   				if( aLID.charAt(j) == ':' ) 
   				{
       					 counter++;
						if(counter==4)
						{
							indexofforthcolon=j;
						}	 
   				} 
		}
		
String firstsubpart;
firstsubpart=aLID.substring(0,indexofforthcolon);
log.info firstsubpart;
String[] splitalid=aLID.split(":",2);
log.info splitalid.toString();
String content = "&amp;";
log.info  "Return Value :" 
      for (String retval: aLID.split(":", 5))
      {
      //log.info retval
      String container = retval;
      boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
	if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
      log.info URLEncoder.encode (tmpString, "UTF-8")
   	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (tmpString, "UTF-8"));
   	def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
  
    }
    else 
    {
    	log.info URLEncoder.encode (retval, "UTF-8")
    	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (retval, "UTF-8"));
    def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
     
    }
   }    
}


if(rEST_API_Version=="1/06")
{
	tP.setPropertyValue("Profile", r3Profile);
	tP.setPropertyValue("APID_GET_DELETE", r3APID_GET_DELETE);	
//ALID (not encoded) to be used in the request xml
log.info "ALID = "+aLID

String container = aLID;
String content = "&amp;";

//Processing the APIDs containing &amp; in its content
boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
     tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (tmpString, "UTF-8"));

//Encoded ALID (ALID_GET_DELETE) to be used in the URL for Update/Get/Delete operations after removing &amp; from it.

def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
	
}
else {

tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (aLID, "UTF-8"));
def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
}
}]]></script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-None-Match" value="${#Project#ETag} " xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:testStep type="groovy" name="Set back version 2015/02"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_02");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_857479217.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">857479217</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1PC/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>200</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value/></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>ExpectedReturnCodeStatusUpdate</con:name><con:value>303</con:value></con:property><con:property><con:name>ALID_GET_DELETE</con:name><con:value>:</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c84efce6-9a9f-451a-a364-34e1d6550219</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84eb76f6-7ed9-4b5e-892e-d1f59edcdcc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cc35e0c7-a380-4c8b-ae66-32296920307e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>827b916f-1e28-4e09-a3b1-4277e92b82fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ee63d93-9ff3-4e01-97c7-b39a0eec43a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca52cc4c-f9db-4f4e-b814-a552b12840ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a0982206-2f5a-4a60-9d0d-7ad49555beff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6026b1a1-d686-4d71-8cc2-1a393782d1c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5655063d-1a8b-49e2-a305-08a867ad394d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7548efe4-3082-4d00-9339-0b30cd267ef5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>683fbd0b-0775-40aa-bdda-126e0aed2c13</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0bcd6901-b016-4a52-aa0a-8ed40920184c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10111_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicGET_MetadataBasicUpdate_If-Match_02_MetadataBasicListGET_If-None-Match_11_200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="8a347b6d-6adf-4105-aecc-d5fa327ba643"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 2015/02" id="11c6fd60-63f1-4e3d-ad09-f877d0165a39"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_02");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet 1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 1/11" id="d8152490-6513-4744-87ef-7e8c2d941ea9"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_11");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Change url" id="24bcd834-b626-4f72-9be8-2e7146d20424"><con:settings/><con:config><script><![CDATA[//Random Number Generator

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/* ${Groovy Script to encode ALID} */


import org.apache.commons.lang.StringUtils;
def rEST_API_Version = context.expand( '${#Project#versionMajor}/${#Project#versionMinor}' )

def r4Profile = context.expand( '${#Project#R4Profile}' )
def r4APID_GET_DELETE = context.expand( '${#Project#R4APID_GET_DELETE}' )
def r3Profile = context.expand( '${#Project#R3Profile}' )
def r3APID_GET_DELETE = context.expand( '${#Project#R3APID_GET_DELETE}' )
def aLID = context.expand( '${#TestCase#ALID}' )


if(rEST_API_Version=="1/07"||rEST_API_Version=="1/11"||rEST_API_Version=="2015/02")

{

tP.setPropertyValue("Profile", r4Profile);
tP.setPropertyValue("APID_GET_DELETE", r4APID_GET_DELETE)	
//${Groovy Script to encode R4-APID}
log.info "ALID = "+aLID

int indexofforthcolon;
int counter = 0;
		for( int j=0; j<aLID.length(); j++ )
		{
   				if( aLID.charAt(j) == ':' ) 
   				{
       					 counter++;
						if(counter==4)
						{
							indexofforthcolon=j;
						}	 
   				} 
		}
		
String firstsubpart;
firstsubpart=aLID.substring(0,indexofforthcolon);
log.info firstsubpart;
String[] splitalid=aLID.split(":",2);
log.info splitalid.toString();
String content = "&amp;";
log.info  "Return Value :" 
      for (String retval: aLID.split(":", 5))
      {
      //log.info retval
      String container = retval;
      boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
	if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
      log.info URLEncoder.encode (tmpString, "UTF-8")
   	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (tmpString, "UTF-8"));
   	def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
  
    }
    else 
    {
    	log.info URLEncoder.encode (retval, "UTF-8")
    	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (retval, "UTF-8"));
    def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
     
    }
   }    
}


if(rEST_API_Version=="1/06")
{
	tP.setPropertyValue("Profile", r3Profile);
	tP.setPropertyValue("APID_GET_DELETE", r3APID_GET_DELETE);	
//ALID (not encoded) to be used in the request xml
log.info "ALID = "+aLID

String container = aLID;
String content = "&amp;";

//Processing the APIDs containing &amp; in its content
boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
     tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (tmpString, "UTF-8"));

//Encoded ALID (ALID_GET_DELETE) to be used in the URL for Update/Get/Delete operations after removing &amp; from it.

def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
	
}
else {

tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (aLID, "UTF-8"));
def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
}
}]]></script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-None-Match" value="${#Project#ETag} " xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:testStep type="groovy" name="Set back version 2015/02"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_02");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_947580537.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">947580537</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1PC/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>200</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value/></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>ExpectedReturnCodeStatusUpdate</con:name><con:value>303</con:value></con:property><con:property><con:name>ALID_GET_DELETE</con:name><con:value>:</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c84efce6-9a9f-451a-a364-34e1d6550219</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84eb76f6-7ed9-4b5e-892e-d1f59edcdcc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cc35e0c7-a380-4c8b-ae66-32296920307e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>827b916f-1e28-4e09-a3b1-4277e92b82fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ee63d93-9ff3-4e01-97c7-b39a0eec43a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca52cc4c-f9db-4f4e-b814-a552b12840ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a0982206-2f5a-4a60-9d0d-7ad49555beff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6026b1a1-d686-4d71-8cc2-1a393782d1c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>350b9df6-cb2e-4d1f-ac15-bc16033bb612</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3aa5fccb-0b90-47c8-97e9-3baa69eb6a1b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1b16748c-2a14-4065-9828-86bbf5f796cc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d8152490-6513-4744-87ef-7e8c2d941ea9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>11c6fd60-63f1-4e3d-ad09-f877d0165a39</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>24bcd834-b626-4f72-9be8-2e7146d20424</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10112_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicGET_MetadataBasicDelete_If-Match_02_MetadataBasicListGET_If-None-Match_11_404 Not Found" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="a01f8f0a-4d0d-4a68-97a2-0b22bcd41148"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 2015/02" id="eb612e19-0fc5-4e08-9cda-0aeb76e9794e"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_02");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet 1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 1/11" id="1a31f1ce-d4cd-4bbb-9caa-68acd401ba3a"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_11");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Change url" id="7523ada9-66b7-407b-9d29-83923ae0b81b"><con:settings/><con:config><script><![CDATA[//Random Number Generator

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/* ${Groovy Script to encode ALID} */


import org.apache.commons.lang.StringUtils;
def rEST_API_Version = context.expand( '${#Project#versionMajor}/${#Project#versionMinor}' )

def r4Profile = context.expand( '${#Project#R4Profile}' )
def r4APID_GET_DELETE = context.expand( '${#Project#R4APID_GET_DELETE}' )
def r3Profile = context.expand( '${#Project#R3Profile}' )
def r3APID_GET_DELETE = context.expand( '${#Project#R3APID_GET_DELETE}' )
def aLID = context.expand( '${#TestCase#ALID}' )


if(rEST_API_Version=="1/07"||rEST_API_Version=="1/11"||rEST_API_Version=="2015/02")

{

tP.setPropertyValue("Profile", r4Profile);
tP.setPropertyValue("APID_GET_DELETE", r4APID_GET_DELETE)	
//${Groovy Script to encode R4-APID}
log.info "ALID = "+aLID

int indexofforthcolon;
int counter = 0;
		for( int j=0; j<aLID.length(); j++ )
		{
   				if( aLID.charAt(j) == ':' ) 
   				{
       					 counter++;
						if(counter==4)
						{
							indexofforthcolon=j;
						}	 
   				} 
		}
		
String firstsubpart;
firstsubpart=aLID.substring(0,indexofforthcolon);
log.info firstsubpart;
String[] splitalid=aLID.split(":",2);
log.info splitalid.toString();
String content = "&amp;";
log.info  "Return Value :" 
      for (String retval: aLID.split(":", 5))
      {
      //log.info retval
      String container = retval;
      boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
	if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
      log.info URLEncoder.encode (tmpString, "UTF-8")
   	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (tmpString, "UTF-8"));
   	def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
  
    }
    else 
    {
    	log.info URLEncoder.encode (retval, "UTF-8")
    	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (retval, "UTF-8"));
    def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
     
    }
   }    
}


if(rEST_API_Version=="1/06")
{
	tP.setPropertyValue("Profile", r3Profile);
	tP.setPropertyValue("APID_GET_DELETE", r3APID_GET_DELETE);	
//ALID (not encoded) to be used in the request xml
log.info "ALID = "+aLID

String container = aLID;
String content = "&amp;";

//Processing the APIDs containing &amp; in its content
boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
     tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (tmpString, "UTF-8"));

//Encoded ALID (ALID_GET_DELETE) to be used in the URL for Update/Get/Delete operations after removing &amp; from it.

def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
	
}
else {

tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (aLID, "UTF-8"));
def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
}
}]]></script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-None-Match" value="${#Project#ETag} " xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:testStep type="groovy" name="Set back version 2015/02"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_02");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_939875384.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">939875384</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>200</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value/></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>ExpectedReturnCodeStatusUpdate</con:name><con:value>303</con:value></con:property><con:property><con:name>ALID_GET_DELETE</con:name><con:value>:</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c84efce6-9a9f-451a-a364-34e1d6550219</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84eb76f6-7ed9-4b5e-892e-d1f59edcdcc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cc35e0c7-a380-4c8b-ae66-32296920307e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>827b916f-1e28-4e09-a3b1-4277e92b82fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ee63d93-9ff3-4e01-97c7-b39a0eec43a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca52cc4c-f9db-4f4e-b814-a552b12840ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a0982206-2f5a-4a60-9d0d-7ad49555beff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6026b1a1-d686-4d71-8cc2-1a393782d1c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>350b9df6-cb2e-4d1f-ac15-bc16033bb612</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3aa5fccb-0b90-47c8-97e9-3baa69eb6a1b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1b16748c-2a14-4065-9828-86bbf5f796cc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1a31f1ce-d4cd-4bbb-9caa-68acd401ba3a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eb612e19-0fc5-4e08-9cda-0aeb76e9794e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7523ada9-66b7-407b-9d29-83923ae0b81b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10113_MetadataBasicListGET_HEAD_02_MetadataBasicListGET_If-Modified-Since_11_304 Not Modified" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="59b2652d-b4fd-445e-a90f-9e9dba3e6179"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 2015/02" id="1d0e083e-8b68-4a6e-9154-4384e3a50cc7"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_02");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="1-SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("HEAD-ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="HEAD-ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="HEAD MetadataBasciList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HEAD-ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="1- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('HEAD-ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus1", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="1-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate1");
def httpStatus 			= tC.getPropertyValue("httpStatus1");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 1/11" id="7d29f922-aa42-4614-a3cc-8ed90b7a5391"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_11");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Change url" id="f0130bd1-ddaa-43eb-804a-c183eb19299f"><con:settings/><con:config><script><![CDATA[//Random Number Generator

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/* ${Groovy Script to encode ALID} */


import org.apache.commons.lang.StringUtils;
def rEST_API_Version = context.expand( '${#Project#versionMajor}/${#Project#versionMinor}' )

def r4Profile = context.expand( '${#Project#R4Profile}' )
def r4APID_GET_DELETE = context.expand( '${#Project#R4APID_GET_DELETE}' )
def r3Profile = context.expand( '${#Project#R3Profile}' )
def r3APID_GET_DELETE = context.expand( '${#Project#R3APID_GET_DELETE}' )
def aLID = context.expand( '${#TestCase#ALID}' )


if(rEST_API_Version=="1/07"||rEST_API_Version=="1/11"||rEST_API_Version=="2015/02")

{

tP.setPropertyValue("Profile", r4Profile);
tP.setPropertyValue("APID_GET_DELETE", r4APID_GET_DELETE)	
//${Groovy Script to encode R4-APID}
log.info "ALID = "+aLID

int indexofforthcolon;
int counter = 0;
		for( int j=0; j<aLID.length(); j++ )
		{
   				if( aLID.charAt(j) == ':' ) 
   				{
       					 counter++;
						if(counter==4)
						{
							indexofforthcolon=j;
						}	 
   				} 
		}
		
String firstsubpart;
firstsubpart=aLID.substring(0,indexofforthcolon);
log.info firstsubpart;
String[] splitalid=aLID.split(":",2);
log.info splitalid.toString();
String content = "&amp;";
log.info  "Return Value :" 
      for (String retval: aLID.split(":", 5))
      {
      //log.info retval
      String container = retval;
      boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
	if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
      log.info URLEncoder.encode (tmpString, "UTF-8")
   	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (tmpString, "UTF-8"));
   	def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
  
    }
    else 
    {
    	log.info URLEncoder.encode (retval, "UTF-8")
    	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (retval, "UTF-8"));
    def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
     
    }
   }    
}


if(rEST_API_Version=="1/06")
{
	tP.setPropertyValue("Profile", r3Profile);
	tP.setPropertyValue("APID_GET_DELETE", r3APID_GET_DELETE);	
//ALID (not encoded) to be used in the request xml
log.info "ALID = "+aLID

String container = aLID;
String content = "&amp;";

//Processing the APIDs containing &amp; in its content
boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
     tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (tmpString, "UTF-8"));

//Encoded ALID (ALID_GET_DELETE) to be used in the URL for Update/Get/Delete operations after removing &amp; from it.

def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
	
}
else {

tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (aLID, "UTF-8"));
def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
}
}]]></script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Modified-Since" value=" ${#Project#Last-Modified}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:testStep type="groovy" name="Set back version 2015/02"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_02");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">854328</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>304</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 304 Not Modified</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ETag</con:name><con:value>"06C59DBE5B057D27E05305991F0A6A88:26121DD1"</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">t=1414816428 VFRiqwofmIgAADUcI9cAAAAC urn:dece:org:org:dece:CON 10.31.173.1</con:value></con:property><con:property><con:name>ALID_GET_DELETE</con:name><con:value>:</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>92112f02-6a59-4b20-9ae2-f919c1488600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7d29f922-aa42-4614-a3cc-8ed90b7a5391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1d0e083e-8b68-4a6e-9154-4384e3a50cc7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f0130bd1-ddaa-43eb-804a-c183eb19299f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10114_MetadataBasicListGET_MetadataBasicCreate_02_MetadataBasicListGET_If-Modified-Since_11_200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="df0613a5-4812-4ec9-8a36-1794b6506865"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 2015/02" id="b1cc395b-cf93-4f89-9e90-5cd3860e6434"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_02");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Set version 1/11" id="ca8c3237-d697-4ffd-9ac8-a2f621efc07d"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_11");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Change url" id="16ae5dd7-73f9-4716-a274-bf50e771d7ab"><con:settings/><con:config><script><![CDATA[//Random Number Generator

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/* ${Groovy Script to encode ALID} */


import org.apache.commons.lang.StringUtils;
def rEST_API_Version = context.expand( '${#Project#versionMajor}/${#Project#versionMinor}' )

def r4Profile = context.expand( '${#Project#R4Profile}' )
def r4APID_GET_DELETE = context.expand( '${#Project#R4APID_GET_DELETE}' )
def r3Profile = context.expand( '${#Project#R3Profile}' )
def r3APID_GET_DELETE = context.expand( '${#Project#R3APID_GET_DELETE}' )
def aLID = context.expand( '${#TestCase#ALID}' )


if(rEST_API_Version=="1/07"||rEST_API_Version=="1/11"||rEST_API_Version=="2015/02")

{

tP.setPropertyValue("Profile", r4Profile);
tP.setPropertyValue("APID_GET_DELETE", r4APID_GET_DELETE)	
//${Groovy Script to encode R4-APID}
log.info "ALID = "+aLID

int indexofforthcolon;
int counter = 0;
		for( int j=0; j<aLID.length(); j++ )
		{
   				if( aLID.charAt(j) == ':' ) 
   				{
       					 counter++;
						if(counter==4)
						{
							indexofforthcolon=j;
						}	 
   				} 
		}
		
String firstsubpart;
firstsubpart=aLID.substring(0,indexofforthcolon);
log.info firstsubpart;
String[] splitalid=aLID.split(":",2);
log.info splitalid.toString();
String content = "&amp;";
log.info  "Return Value :" 
      for (String retval: aLID.split(":", 5))
      {
      //log.info retval
      String container = retval;
      boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
	if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
      log.info URLEncoder.encode (tmpString, "UTF-8")
   	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (tmpString, "UTF-8"));
   	def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
  
    }
    else 
    {
    	log.info URLEncoder.encode (retval, "UTF-8")
    	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (retval, "UTF-8"));
    def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
     
    }
   }    
}


if(rEST_API_Version=="1/06")
{
	tP.setPropertyValue("Profile", r3Profile);
	tP.setPropertyValue("APID_GET_DELETE", r3APID_GET_DELETE);	
//ALID (not encoded) to be used in the request xml
log.info "ALID = "+aLID

String container = aLID;
String content = "&amp;";

//Processing the APIDs containing &amp; in its content
boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
     tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (tmpString, "UTF-8"));

//Encoded ALID (ALID_GET_DELETE) to be used in the URL for Update/Get/Delete operations after removing &amp; from it.

def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
	
}
else {

tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (aLID, "UTF-8"));
def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
}
}]]></script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Modified-Since" value=" ${#Project#Last-Modified}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:testStep type="groovy" name="Set back version 2015/02"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_02");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_658162410.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">658162410</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>200</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value/></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value>max-age=31536000</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E347E2263688BC3DE0401F0A07993B47"</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ALID_GET_DELETE</con:name><con:value>:</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c84efce6-9a9f-451a-a364-34e1d6550219</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84eb76f6-7ed9-4b5e-892e-d1f59edcdcc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cc35e0c7-a380-4c8b-ae66-32296920307e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>827b916f-1e28-4e09-a3b1-4277e92b82fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ee63d93-9ff3-4e01-97c7-b39a0eec43a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca52cc4c-f9db-4f4e-b814-a552b12840ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a0982206-2f5a-4a60-9d0d-7ad49555beff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>12158310-fb29-4bfc-80f5-b21f6ebdd441</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca8c3237-d697-4ffd-9ac8-a2f621efc07d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b1cc395b-cf93-4f89-9e90-5cd3860e6434</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>16ae5dd7-73f9-4716-a274-bf50e771d7ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10115_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicGET_MetadataBasicResourceStatusUpdate_If-Unmodified-Since_02_MetadataBasicListGET_If-Modified-Since_11_ 200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="bc18634f-afc3-4416-b40d-2c465e51815b"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 2015/02" id="c2f7e120-2766-49bc-bf15-be6bd6297793"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_02");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet 1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicReourceStatusUpdate_Active-Pending"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("PUT - MetadataBasicReourceStatusUpdate_Active-Pending_If-Unmodified-Since")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 1/11" id="5aaeacf9-6224-4150-8a9d-f5ca0ce31eb8"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_11");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Change url" id="67ef7399-078e-4a51-8ca1-ffc5a92eb219"><con:settings/><con:config><script><![CDATA[//Random Number Generator

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/* ${Groovy Script to encode ALID} */


import org.apache.commons.lang.StringUtils;
def rEST_API_Version = context.expand( '${#Project#versionMajor}/${#Project#versionMinor}' )

def r4Profile = context.expand( '${#Project#R4Profile}' )
def r4APID_GET_DELETE = context.expand( '${#Project#R4APID_GET_DELETE}' )
def r3Profile = context.expand( '${#Project#R3Profile}' )
def r3APID_GET_DELETE = context.expand( '${#Project#R3APID_GET_DELETE}' )
def aLID = context.expand( '${#TestCase#ALID}' )


if(rEST_API_Version=="1/07"||rEST_API_Version=="1/11"||rEST_API_Version=="2015/02")

{

tP.setPropertyValue("Profile", r4Profile);
tP.setPropertyValue("APID_GET_DELETE", r4APID_GET_DELETE)	
//${Groovy Script to encode R4-APID}
log.info "ALID = "+aLID

int indexofforthcolon;
int counter = 0;
		for( int j=0; j<aLID.length(); j++ )
		{
   				if( aLID.charAt(j) == ':' ) 
   				{
       					 counter++;
						if(counter==4)
						{
							indexofforthcolon=j;
						}	 
   				} 
		}
		
String firstsubpart;
firstsubpart=aLID.substring(0,indexofforthcolon);
log.info firstsubpart;
String[] splitalid=aLID.split(":",2);
log.info splitalid.toString();
String content = "&amp;";
log.info  "Return Value :" 
      for (String retval: aLID.split(":", 5))
      {
      //log.info retval
      String container = retval;
      boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
	if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
      log.info URLEncoder.encode (tmpString, "UTF-8")
   	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (tmpString, "UTF-8"));
   	def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
  
    }
    else 
    {
    	log.info URLEncoder.encode (retval, "UTF-8")
    	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (retval, "UTF-8"));
    def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
     
    }
   }    
}


if(rEST_API_Version=="1/06")
{
	tP.setPropertyValue("Profile", r3Profile);
	tP.setPropertyValue("APID_GET_DELETE", r3APID_GET_DELETE);	
//ALID (not encoded) to be used in the request xml
log.info "ALID = "+aLID

String container = aLID;
String content = "&amp;";

//Processing the APIDs containing &amp; in its content
boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
     tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (tmpString, "UTF-8"));

//Encoded ALID (ALID_GET_DELETE) to be used in the URL for Update/Get/Delete operations after removing &amp; from it.

def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
	
}
else {

tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (aLID, "UTF-8"));
def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
}
}]]></script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Modified-Since" value="${#Project#Last-Modified}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:testStep type="groovy" name="Set back version 2015/02"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_02");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_113772713.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">113772713</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1PC/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>200</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value/></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>ExpectedReturnCodeStatusUpdate</con:name><con:value>303</con:value></con:property><con:property><con:name>ALID_GET_DELETE</con:name><con:value>:</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c84efce6-9a9f-451a-a364-34e1d6550219</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84eb76f6-7ed9-4b5e-892e-d1f59edcdcc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cc35e0c7-a380-4c8b-ae66-32296920307e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>827b916f-1e28-4e09-a3b1-4277e92b82fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ee63d93-9ff3-4e01-97c7-b39a0eec43a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca52cc4c-f9db-4f4e-b814-a552b12840ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a0982206-2f5a-4a60-9d0d-7ad49555beff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6026b1a1-d686-4d71-8cc2-1a393782d1c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>350b9df6-cb2e-4d1f-ac15-bc16033bb612</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7520a803-c6fd-4471-8928-16269640be20</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5aaeacf9-6224-4150-8a9d-f5ca0ce31eb8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2f7e120-2766-49bc-bf15-be6bd6297793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67ef7399-078e-4a51-8ca1-ffc5a92eb219</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10116_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicGET_MetadataBasicUpdate_If-Unmodified-Since_02_MetadataBasicListGET_If-Modified-Since_11_200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="3785e6cd-e21e-4811-9ede-2eaa758b67f8" disabled="true"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 2015/02" id="53f6fc5a-725d-4275-8988-c68ac39bcdc3"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_02");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet 1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("PUT - MetadataBasicCreate_If-Unmodified-Since")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 1/11" id="86602d69-077c-4319-b575-494db52ab46f"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_11");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Change url" id="99ac9d46-2c1f-4fe2-81ad-48db3cd8b3b4"><con:settings/><con:config><script><![CDATA[//Random Number Generator

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/* ${Groovy Script to encode ALID} */


import org.apache.commons.lang.StringUtils;
def rEST_API_Version = context.expand( '${#Project#versionMajor}/${#Project#versionMinor}' )

def r4Profile = context.expand( '${#Project#R4Profile}' )
def r4APID_GET_DELETE = context.expand( '${#Project#R4APID_GET_DELETE}' )
def r3Profile = context.expand( '${#Project#R3Profile}' )
def r3APID_GET_DELETE = context.expand( '${#Project#R3APID_GET_DELETE}' )
def aLID = context.expand( '${#TestCase#ALID}' )


if(rEST_API_Version=="1/07"||rEST_API_Version=="1/11"||rEST_API_Version=="2015/02")

{

tP.setPropertyValue("Profile", r4Profile);
tP.setPropertyValue("APID_GET_DELETE", r4APID_GET_DELETE)	
//${Groovy Script to encode R4-APID}
log.info "ALID = "+aLID

int indexofforthcolon;
int counter = 0;
		for( int j=0; j<aLID.length(); j++ )
		{
   				if( aLID.charAt(j) == ':' ) 
   				{
       					 counter++;
						if(counter==4)
						{
							indexofforthcolon=j;
						}	 
   				} 
		}
		
String firstsubpart;
firstsubpart=aLID.substring(0,indexofforthcolon);
log.info firstsubpart;
String[] splitalid=aLID.split(":",2);
log.info splitalid.toString();
String content = "&amp;";
log.info  "Return Value :" 
      for (String retval: aLID.split(":", 5))
      {
      //log.info retval
      String container = retval;
      boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
	if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
      log.info URLEncoder.encode (tmpString, "UTF-8")
   	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (tmpString, "UTF-8"));
   	def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
  
    }
    else 
    {
    	log.info URLEncoder.encode (retval, "UTF-8")
    	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (retval, "UTF-8"));
    def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
     
    }
   }    
}


if(rEST_API_Version=="1/06")
{
	tP.setPropertyValue("Profile", r3Profile);
	tP.setPropertyValue("APID_GET_DELETE", r3APID_GET_DELETE);	
//ALID (not encoded) to be used in the request xml
log.info "ALID = "+aLID

String container = aLID;
String content = "&amp;";

//Processing the APIDs containing &amp; in its content
boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
     tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (tmpString, "UTF-8"));

//Encoded ALID (ALID_GET_DELETE) to be used in the URL for Update/Get/Delete operations after removing &amp; from it.

def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
	
}
else {

tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (aLID, "UTF-8"));
def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
}
}]]></script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Modified-Since" value="${#Project#Last-Modified}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:testStep type="groovy" name="Set back version 2015/02"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_02");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_316869129.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">316869129</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>200</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value/></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>ExpectedReturnCodeStatusUpdate</con:name><con:value>303</con:value></con:property><con:property><con:name>ALID_GET_DELETE</con:name><con:value>:</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c84efce6-9a9f-451a-a364-34e1d6550219</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84eb76f6-7ed9-4b5e-892e-d1f59edcdcc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cc35e0c7-a380-4c8b-ae66-32296920307e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>827b916f-1e28-4e09-a3b1-4277e92b82fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ee63d93-9ff3-4e01-97c7-b39a0eec43a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca52cc4c-f9db-4f4e-b814-a552b12840ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a0982206-2f5a-4a60-9d0d-7ad49555beff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6026b1a1-d686-4d71-8cc2-1a393782d1c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>350b9df6-cb2e-4d1f-ac15-bc16033bb612</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6eac0c1b-417c-495f-886e-490fc842fe97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>86602d69-077c-4319-b575-494db52ab46f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53f6fc5a-725d-4275-8988-c68ac39bcdc3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>99ac9d46-2c1f-4fe2-81ad-48db3cd8b3b4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10117_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicGET_MetadataBasicDelete_If-Unmodified-Since_02_MetadataBasicListGET_If-Modified-Since_11_404 Not Found" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="058eba47-1119-4643-86bb-eb55af25818b"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 2015/02" id="7f109a9b-2169-48a1-b772-0eec902a1a43"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_02");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet 1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataBasicGet 1" id="35b6e1bf-7dec-420f-9be8-9adfe8538230"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET" id="2edc04e2-1181-4c8e-9e71-3e928cb3f43b"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("DELETE - MetadataBasicCreate_If-Unmodified-Since")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 1/11" id="151d7321-ca0b-4a9e-8de8-16bf60b3273f"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_11");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Change url" id="a5ead746-0eae-43a4-b3d9-4a813c5e5d3c"><con:settings/><con:config><script><![CDATA[//Random Number Generator

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/* ${Groovy Script to encode ALID} */


import org.apache.commons.lang.StringUtils;
def rEST_API_Version = context.expand( '${#Project#versionMajor}/${#Project#versionMinor}' )

def r4Profile = context.expand( '${#Project#R4Profile}' )
def r4APID_GET_DELETE = context.expand( '${#Project#R4APID_GET_DELETE}' )
def r3Profile = context.expand( '${#Project#R3Profile}' )
def r3APID_GET_DELETE = context.expand( '${#Project#R3APID_GET_DELETE}' )
def aLID = context.expand( '${#TestCase#ALID}' )


if(rEST_API_Version=="1/07"||rEST_API_Version=="1/11"||rEST_API_Version=="2015/02")

{

tP.setPropertyValue("Profile", r4Profile);
tP.setPropertyValue("APID_GET_DELETE", r4APID_GET_DELETE)	
//${Groovy Script to encode R4-APID}
log.info "ALID = "+aLID

int indexofforthcolon;
int counter = 0;
		for( int j=0; j<aLID.length(); j++ )
		{
   				if( aLID.charAt(j) == ':' ) 
   				{
       					 counter++;
						if(counter==4)
						{
							indexofforthcolon=j;
						}	 
   				} 
		}
		
String firstsubpart;
firstsubpart=aLID.substring(0,indexofforthcolon);
log.info firstsubpart;
String[] splitalid=aLID.split(":",2);
log.info splitalid.toString();
String content = "&amp;";
log.info  "Return Value :" 
      for (String retval: aLID.split(":", 5))
      {
      //log.info retval
      String container = retval;
      boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
	if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
      log.info URLEncoder.encode (tmpString, "UTF-8")
   	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (tmpString, "UTF-8"));
   	def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
  
    }
    else 
    {
    	log.info URLEncoder.encode (retval, "UTF-8")
    	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (retval, "UTF-8"));
    def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
     
    }
   }    
}


if(rEST_API_Version=="1/06")
{
	tP.setPropertyValue("Profile", r3Profile);
	tP.setPropertyValue("APID_GET_DELETE", r3APID_GET_DELETE);	
//ALID (not encoded) to be used in the request xml
log.info "ALID = "+aLID

String container = aLID;
String content = "&amp;";

//Processing the APIDs containing &amp; in its content
boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
     tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (tmpString, "UTF-8"));

//Encoded ALID (ALID_GET_DELETE) to be used in the URL for Update/Get/Delete operations after removing &amp; from it.

def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
	
}
else {

tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (aLID, "UTF-8"));
def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
}
}]]></script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Modified-Since" value="${#Project#Last-Modified}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Set back version 2015/02"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_02");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_712686802.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">712686802</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>200</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value/></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>ExpectedReturnCodeStatusUpdate</con:name><con:value>303</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value>max-age=86400</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"F0659E1BA799CA55E0401F0A05994DA1:26121DD1"</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value>t=1392106113 UvnagAofmIgAAAXb180AAACL urn:dece:org:org:dece:CON 10.31.153.241</con:value></con:property><con:property><con:name>ALID_GET_DELETE</con:name><con:value>:</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c84efce6-9a9f-451a-a364-34e1d6550219</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84eb76f6-7ed9-4b5e-892e-d1f59edcdcc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cc35e0c7-a380-4c8b-ae66-32296920307e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>827b916f-1e28-4e09-a3b1-4277e92b82fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ee63d93-9ff3-4e01-97c7-b39a0eec43a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca52cc4c-f9db-4f4e-b814-a552b12840ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a0982206-2f5a-4a60-9d0d-7ad49555beff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6026b1a1-d686-4d71-8cc2-1a393782d1c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>350b9df6-cb2e-4d1f-ac15-bc16033bb612</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3aa5fccb-0b90-47c8-97e9-3baa69eb6a1b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5a70039b-f43e-46f8-8fcb-df2c5ab4a23d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>151d7321-ca0b-4a9e-8de8-16bf60b3273f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7f109a9b-2169-48a1-b772-0eec902a1a43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a5ead746-0eae-43a4-b3d9-4a813c5e5d3c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2edc04e2-1181-4c8e-9e71-3e928cb3f43b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>35b6e1bf-7dec-420f-9be8-9adfe8538230</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10118_MetadataBasicListGET_HEAD_MetadataBasicListGET_If-None-Match_304 Not Modified_with Empty Authorization Header" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="39e91a4f-d194-429d-bef4-b10c99008cb6" disabled="true"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="1-SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("HEAD-ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="HEAD-ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="HEAD MetadataBasciList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HEAD-ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="1- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('HEAD-ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;*/
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus1", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
tP.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
tP.setPropertyValue("Last-Modified", Last_Modified);
</script></con:config></con:testStep><con:testStep type="groovy" name="1-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate1");
def httpStatus 			= tC.getPropertyValue("httpStatus1");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value=""/>
  &lt;con:entry key="If-None-Match" value="${#Project#ETag} "/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">854328</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1PC/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>304</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">max-age=86400</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"0BF7E8B196876F5AE05307991F0A2538:26121DD1"</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bf7f6ec5-cc36-4ac6-b8e4-4891c465493c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>nodeid</con:name><con:value>nodeIdCON</con:value></con:property></con:properties><con:setupScript/><con:tearDownScript/><con:reportParameters/></con:testSuite><con:testSuite name="P0_Cache_TestCases_1/11" disabled="true"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Multiple Pages</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Users\pgour\Desktop\Build_4.0 Reports\R4\P0_cache\BasicList</con:setting></con:settings><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10009_MetadataBasicListGET_HEAD_MetadataBasicListGET_If-None-Match_304 Not Modified" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="90b44196-ddcb-4d34-861b-34eda6240fe9"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="1-SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("HEAD-ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="HEAD-ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="HEAD MetadataBasciList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HEAD-ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="1- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('HEAD-ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus1", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="1-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate1");
def httpStatus 			= tC.getPropertyValue("httpStatus1");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-None-Match" value="${#Project#ETag} " xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">854328</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP3LBSPC/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>304</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 304 Not Modified</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value>max-age=86400</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"06A4321B54422334E0533E991E0AAE00:26121DD1"</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bf7f6ec5-cc36-4ac6-b8e4-4891c465493c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10010_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicListGET_If-None-Match_200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="4c899fe0-5493-4d31-a880-9679124fcd86"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-None-Match" value="${#Project#ETag} " xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_323342648.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">323342648</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP3LBSPC/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>200</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value/></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value>max-age=31536000</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E347E2263688BC3DE0401F0A07993B47"</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>APID_GET_DELETE</con:name><con:value>:</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c84efce6-9a9f-451a-a364-34e1d6550219</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84eb76f6-7ed9-4b5e-892e-d1f59edcdcc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>827b916f-1e28-4e09-a3b1-4277e92b82fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ee63d93-9ff3-4e01-97c7-b39a0eec43a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca52cc4c-f9db-4f4e-b814-a552b12840ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1dd7e9b2-4bef-415b-a202-70c57dadbe55</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10011_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicGET_MetadataBasicUpdate_If-Match_11_MetadataBasicListGET_If-None-Match_07_200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="22acd5ed-526b-4c77-9a7f-e14259b308fd"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet 1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-None-Match" value="${#Project#ETag} " xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_448644965.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">448644965</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP3LBSPC/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>200</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value/></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>ExpectedReturnCodeStatusUpdate</con:name><con:value>303</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c84efce6-9a9f-451a-a364-34e1d6550219</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84eb76f6-7ed9-4b5e-892e-d1f59edcdcc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cc35e0c7-a380-4c8b-ae66-32296920307e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>827b916f-1e28-4e09-a3b1-4277e92b82fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ee63d93-9ff3-4e01-97c7-b39a0eec43a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca52cc4c-f9db-4f4e-b814-a552b12840ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a0982206-2f5a-4a60-9d0d-7ad49555beff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6026b1a1-d686-4d71-8cc2-1a393782d1c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>350b9df6-cb2e-4d1f-ac15-bc16033bb612</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3aa5fccb-0b90-47c8-97e9-3baa69eb6a1b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1b16748c-2a14-4065-9828-86bbf5f796cc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d8152490-6513-4744-87ef-7e8c2d941ea9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>11c6fd60-63f1-4e3d-ad09-f877d0165a39</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>24bcd834-b626-4f72-9be8-2e7146d20424</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10012_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicGET_MetadataBasicUpdate_If-Match_MetadataBasicListGET_If-None-Match_200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="4eccf814-a0ad-4320-93e5-1edf140cfc24"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet 1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("PUT - MetadataBasicReourceStatusUpdate_Active-Pending")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-None-Match" value="${#Project#ETag} " xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_409201991.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">409201991</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP3LBSPC/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>200</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value/></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>ExpectedReturnCodeStatusUpdate</con:name><con:value>303</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c84efce6-9a9f-451a-a364-34e1d6550219</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84eb76f6-7ed9-4b5e-892e-d1f59edcdcc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cc35e0c7-a380-4c8b-ae66-32296920307e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>827b916f-1e28-4e09-a3b1-4277e92b82fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ee63d93-9ff3-4e01-97c7-b39a0eec43a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca52cc4c-f9db-4f4e-b814-a552b12840ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a0982206-2f5a-4a60-9d0d-7ad49555beff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6026b1a1-d686-4d71-8cc2-1a393782d1c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>350b9df6-cb2e-4d1f-ac15-bc16033bb612</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e69b96c9-5eeb-434a-af18-2c0303650afe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10013_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicGET_MetadataBasicDelete_If-Match_MetadataBasicListGET_If-None-Match_404 Not Found" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="3e007ae3-d2a1-4ffe-89a2-0028e90cb992"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet 1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-None-Match" value="${#Project#ETag} " xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_804294335.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">804294335</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP3LBSPC/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>200</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value/></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>ExpectedReturnCodeStatusUpdate</con:name><con:value>303</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c84efce6-9a9f-451a-a364-34e1d6550219</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84eb76f6-7ed9-4b5e-892e-d1f59edcdcc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cc35e0c7-a380-4c8b-ae66-32296920307e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>827b916f-1e28-4e09-a3b1-4277e92b82fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ee63d93-9ff3-4e01-97c7-b39a0eec43a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca52cc4c-f9db-4f4e-b814-a552b12840ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a0982206-2f5a-4a60-9d0d-7ad49555beff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6026b1a1-d686-4d71-8cc2-1a393782d1c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>350b9df6-cb2e-4d1f-ac15-bc16033bb612</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3aa5fccb-0b90-47c8-97e9-3baa69eb6a1b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1b16748c-2a14-4065-9828-86bbf5f796cc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10014_MetadataBasicListGET_HEAD_MetadataBasicListGET_If-Modified-Since_304 Not Modified" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="b66fff82-ce16-47e7-9fc1-1e50313cc51d"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="1-SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("HEAD-ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="HEAD-ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="HEAD MetadataBasciList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HEAD-ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="1- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('HEAD-ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus1", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="1-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate1");
def httpStatus 			= tC.getPropertyValue("httpStatus1");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Modified-Since" value=" ${#Project#Last-Modified}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">854328</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP3LBSPC/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>304</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 304 Not Modified</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value>max-age=86400</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"06C6B4D905BA7340E0533D991E0A4FE0:26121DD1"</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>92112f02-6a59-4b20-9ae2-f919c1488600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10015_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicListGET_If-Modified-Since_200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="1304a69f-b84e-404a-be73-09e2fb57aad3"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Modified-Since" value=" ${#Project#Last-Modified}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_710464543.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">710464543</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP3LBSPC/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>200</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value/></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value>max-age=31536000</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E347E2263688BC3DE0401F0A07993B47"</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c84efce6-9a9f-451a-a364-34e1d6550219</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84eb76f6-7ed9-4b5e-892e-d1f59edcdcc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cc35e0c7-a380-4c8b-ae66-32296920307e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>827b916f-1e28-4e09-a3b1-4277e92b82fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ee63d93-9ff3-4e01-97c7-b39a0eec43a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca52cc4c-f9db-4f4e-b814-a552b12840ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a0982206-2f5a-4a60-9d0d-7ad49555beff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>12158310-fb29-4bfc-80f5-b21f6ebdd441</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10016_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicGET_MetadataBasicResourceStatusUpdate_If-Unmodified-Since_MetadataBasicListGET_If-Modified-Since_HTTP/1.1 200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="8b8abd5d-7967-492f-bb0e-ffdfe4897824"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet 1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicReourceStatusUpdate_Active-Pending"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("PUT - MetadataBasicReourceStatusUpdate_Active-Pending_If-Unmodified-Since")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Modified-Since" value="${#Project#Last-Modified}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_670005309.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">670005309</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP3LBSPC/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>200</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value/></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>ExpectedReturnCodeStatusUpdate</con:name><con:value>303</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c84efce6-9a9f-451a-a364-34e1d6550219</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84eb76f6-7ed9-4b5e-892e-d1f59edcdcc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cc35e0c7-a380-4c8b-ae66-32296920307e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>827b916f-1e28-4e09-a3b1-4277e92b82fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ee63d93-9ff3-4e01-97c7-b39a0eec43a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca52cc4c-f9db-4f4e-b814-a552b12840ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a0982206-2f5a-4a60-9d0d-7ad49555beff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6026b1a1-d686-4d71-8cc2-1a393782d1c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>350b9df6-cb2e-4d1f-ac15-bc16033bb612</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7520a803-c6fd-4471-8928-16269640be20</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10017_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicGET_MetadataBasicUpdate_If-Unmodified-Since_MetadataBasicListGET_If-Modified-Since_200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="077a5167-a3e9-4505-bf35-072c3e5bdb7c"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet 1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("PUT - MetadataBasicCreate_If-Unmodified-Since")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Modified-Since" value="${#Project#Last-Modified}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_979828833.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">979828833</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP3LBSPC/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>200</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value/></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>ExpectedReturnCodeStatusUpdate</con:name><con:value>303</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value>max-age=86400</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"EE7F144638B44EA5E0401F0A059923D1:26121DD1"</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value>t=1388164801 Ur22wQofmIgAAB6-JFsAAAAd urn:dece:org:org:dece:CON 10.31.153.241</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c84efce6-9a9f-451a-a364-34e1d6550219</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84eb76f6-7ed9-4b5e-892e-d1f59edcdcc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cc35e0c7-a380-4c8b-ae66-32296920307e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>827b916f-1e28-4e09-a3b1-4277e92b82fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ee63d93-9ff3-4e01-97c7-b39a0eec43a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca52cc4c-f9db-4f4e-b814-a552b12840ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a0982206-2f5a-4a60-9d0d-7ad49555beff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6026b1a1-d686-4d71-8cc2-1a393782d1c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>350b9df6-cb2e-4d1f-ac15-bc16033bb612</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6eac0c1b-417c-495f-886e-490fc842fe97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10018_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicGET_MetadataBasicDelete_If-Unmodified-Since_MetadataBasicListGET_If-Modified-Since_404 Not Found" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="6335f2ce-97d9-4839-98ed-f46276ba2066"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet 1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataBasicGet 1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("DELETE - MetadataBasicCreate_If-Unmodified-Since")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Modified-Since" value="${#Project#Last-Modified}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_737796557.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">737796557</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP3LBSPC/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>200</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value/></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>ExpectedReturnCodeStatusUpdate</con:name><con:value>303</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value>max-age=86400</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"EE7F144639074EA5E0401F0A059923D1:26121DD1"</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value>t=1388164871 Ur23BgofmIgAACqxGb8AAACp urn:dece:org:org:dece:CON 10.31.153.241</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c84efce6-9a9f-451a-a364-34e1d6550219</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84eb76f6-7ed9-4b5e-892e-d1f59edcdcc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cc35e0c7-a380-4c8b-ae66-32296920307e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>827b916f-1e28-4e09-a3b1-4277e92b82fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ee63d93-9ff3-4e01-97c7-b39a0eec43a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca52cc4c-f9db-4f4e-b814-a552b12840ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a0982206-2f5a-4a60-9d0d-7ad49555beff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6026b1a1-d686-4d71-8cc2-1a393782d1c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>350b9df6-cb2e-4d1f-ac15-bc16033bb612</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3aa5fccb-0b90-47c8-97e9-3baa69eb6a1b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5a70039b-f43e-46f8-8fcb-df2c5ab4a23d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e4b8063-b17a-4af1-aa66-466efd3370c4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10108_MetadataBasicListGET_HEAD_11_MetadataBasicListGET_If-None-Match_07_304 Not Modified" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="08d28377-e8ff-411f-afdf-468609578fc9"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 1/11"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_11");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="1-SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("HEAD-ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="HEAD-ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="HEAD MetadataBasciList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HEAD-ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="1- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('HEAD-ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus1", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="1-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate1");
def httpStatus 			= tC.getPropertyValue("httpStatus1");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 1/07"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_07");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-None-Match" value="${#Project#ETag} " xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:testStep type="groovy" name="Set back version 1/11"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_11");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">854328</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP3LBSPC/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>304</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 304 Not Modified</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value>max-age=86400</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"06C6C8E97CFE5F15E0533E991E0A2264:26121DD1"</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bf7f6ec5-cc36-4ac6-b8e4-4891c465493c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>669e8dc6-d638-454d-81d9-6b39ccdca37a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6594d703-62ac-4794-8f86-f70a520f314c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10109_MetadataBasicListGET_MetadataBasicCreate_11_MetadataBasicListGET_If-None-Match_07_200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="d542b5e4-b2d0-4017-9ef2-de4f75260726"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 1/11"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_11");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Set version 1/07"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_07");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Change url"><con:settings/><con:config><script><![CDATA[//Random Number Generator

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/* ${Groovy Script to encode ALID} */


import org.apache.commons.lang.StringUtils;
def rEST_API_Version = context.expand( '${#Project#versionMajor}/${#Project#versionMinor}' )

def r4Profile = context.expand( '${#Project#R4Profile}' )
def r4APID_GET_DELETE = context.expand( '${#Project#R4APID_GET_DELETE}' )
def r3Profile = context.expand( '${#Project#R3Profile}' )
def r3APID_GET_DELETE = context.expand( '${#Project#R3APID_GET_DELETE}' )
def aLID = context.expand( '${#TestCase#ALID}' )


if(rEST_API_Version=="1/07"||rEST_API_Version=="1/11"||rEST_API_Version=="2015/02")

{

tP.setPropertyValue("Profile", r4Profile);
tP.setPropertyValue("APID_GET_DELETE", r4APID_GET_DELETE)	
//${Groovy Script to encode R4-APID}
log.info "ALID = "+aLID

int indexofforthcolon;
int counter = 0;
		for( int j=0; j<aLID.length(); j++ )
		{
   				if( aLID.charAt(j) == ':' ) 
   				{
       					 counter++;
						if(counter==4)
						{
							indexofforthcolon=j;
						}	 
   				} 
		}
		
String firstsubpart;
firstsubpart=aLID.substring(0,indexofforthcolon);
log.info firstsubpart;
String[] splitalid=aLID.split(":",2);
log.info splitalid.toString();
String content = "&amp;";
log.info  "Return Value :" 
      for (String retval: aLID.split(":", 5))
      {
      //log.info retval
      String container = retval;
      boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
	if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
      log.info URLEncoder.encode (tmpString, "UTF-8")
   	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (tmpString, "UTF-8"));
   	def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
  
    }
    else 
    {
    	log.info URLEncoder.encode (retval, "UTF-8")
    	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (retval, "UTF-8"));
    def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
     
    }
   }    
}


if(rEST_API_Version=="1/06")
{
	tP.setPropertyValue("Profile", r3Profile);
	tP.setPropertyValue("APID_GET_DELETE", r3APID_GET_DELETE);	
//ALID (not encoded) to be used in the request xml
log.info "ALID = "+aLID

String container = aLID;
String content = "&amp;";

//Processing the APIDs containing &amp; in its content
boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
     tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (tmpString, "UTF-8"));

//Encoded ALID (ALID_GET_DELETE) to be used in the URL for Update/Get/Delete operations after removing &amp; from it.

def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
	
}
else {

tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (aLID, "UTF-8"));
def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
}
}]]></script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-None-Match" value="${#Project#ETag} " xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set back version 1/11"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_11");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_422096683.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">422096683</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP3LBSPC/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>200</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value/></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value>max-age=31536000</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E347E2263688BC3DE0401F0A07993B47"</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>APID_GET_DELETE</con:name><con:value>:</con:value></con:property><con:property><con:name>ALID_GET_DELETE</con:name><con:value>:</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c84efce6-9a9f-451a-a364-34e1d6550219</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84eb76f6-7ed9-4b5e-892e-d1f59edcdcc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>827b916f-1e28-4e09-a3b1-4277e92b82fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ee63d93-9ff3-4e01-97c7-b39a0eec43a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca52cc4c-f9db-4f4e-b814-a552b12840ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1dd7e9b2-4bef-415b-a202-70c57dadbe55</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6ac0bc08-1461-4bcc-8cc7-2d7c1cc75d6e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2fb5e96-558a-4ed5-a6ef-f57b2d124cea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b16b914-72b4-4764-9349-f2380cf2f86a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10110_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicGET_MetadataBasicResourceStatusUpdate_If-Match_11_MetadataBasicListGET_If-None-Match_07_200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="6a39db90-9d38-4046-a157-5eea1204444c"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 1/11"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_11");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet 1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicReourceStatusUpdate_Active-Pending"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("PUT - MetadataBasicReourceStatusUpdate_Active-Pending")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 1/07"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_07");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Change url"><con:settings/><con:config><script><![CDATA[//Random Number Generator

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/* ${Groovy Script to encode ALID} */


import org.apache.commons.lang.StringUtils;
def rEST_API_Version = context.expand( '${#Project#versionMajor}/${#Project#versionMinor}' )

def r4Profile = context.expand( '${#Project#R4Profile}' )
def r4APID_GET_DELETE = context.expand( '${#Project#R4APID_GET_DELETE}' )
def r3Profile = context.expand( '${#Project#R3Profile}' )
def r3APID_GET_DELETE = context.expand( '${#Project#R3APID_GET_DELETE}' )
def aLID = context.expand( '${#TestCase#ALID}' )


if(rEST_API_Version=="1/07"||rEST_API_Version=="1/11"||rEST_API_Version=="2015/02")

{

tP.setPropertyValue("Profile", r4Profile);
tP.setPropertyValue("APID_GET_DELETE", r4APID_GET_DELETE)	
//${Groovy Script to encode R4-APID}
log.info "ALID = "+aLID

int indexofforthcolon;
int counter = 0;
		for( int j=0; j<aLID.length(); j++ )
		{
   				if( aLID.charAt(j) == ':' ) 
   				{
       					 counter++;
						if(counter==4)
						{
							indexofforthcolon=j;
						}	 
   				} 
		}
		
String firstsubpart;
firstsubpart=aLID.substring(0,indexofforthcolon);
log.info firstsubpart;
String[] splitalid=aLID.split(":",2);
log.info splitalid.toString();
String content = "&amp;";
log.info  "Return Value :" 
      for (String retval: aLID.split(":", 5))
      {
      //log.info retval
      String container = retval;
      boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
	if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
      log.info URLEncoder.encode (tmpString, "UTF-8")
   	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (tmpString, "UTF-8"));
   	def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
  
    }
    else 
    {
    	log.info URLEncoder.encode (retval, "UTF-8")
    	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (retval, "UTF-8"));
    def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
     
    }
   }    
}


if(rEST_API_Version=="1/06")
{
	tP.setPropertyValue("Profile", r3Profile);
	tP.setPropertyValue("APID_GET_DELETE", r3APID_GET_DELETE);	
//ALID (not encoded) to be used in the request xml
log.info "ALID = "+aLID

String container = aLID;
String content = "&amp;";

//Processing the APIDs containing &amp; in its content
boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
     tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (tmpString, "UTF-8"));

//Encoded ALID (ALID_GET_DELETE) to be used in the URL for Update/Get/Delete operations after removing &amp; from it.

def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
	
}
else {

tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (aLID, "UTF-8"));
def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
}
}]]></script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-None-Match" value="${#Project#ETag} " xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:testStep type="groovy" name="Set back version 1/11"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_11");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_957918288.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">957918288</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP3LBSPC/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>200</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value/></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>ExpectedReturnCodeStatusUpdate</con:name><con:value>303</con:value></con:property><con:property><con:name>ALID_GET_DELETE</con:name><con:value>:</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c84efce6-9a9f-451a-a364-34e1d6550219</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84eb76f6-7ed9-4b5e-892e-d1f59edcdcc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cc35e0c7-a380-4c8b-ae66-32296920307e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>827b916f-1e28-4e09-a3b1-4277e92b82fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ee63d93-9ff3-4e01-97c7-b39a0eec43a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca52cc4c-f9db-4f4e-b814-a552b12840ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a0982206-2f5a-4a60-9d0d-7ad49555beff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6026b1a1-d686-4d71-8cc2-1a393782d1c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5655063d-1a8b-49e2-a305-08a867ad394d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7548efe4-3082-4d00-9339-0b30cd267ef5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>683fbd0b-0775-40aa-bdda-126e0aed2c13</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0bcd6901-b016-4a52-aa0a-8ed40920184c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10111_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicGET_MetadataBasicUpdate_If-Match_11_MetadataBasicListGET_If-None-Match_07_200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="ece2ea48-d1b3-43ae-87b0-0b94259e1ded"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 1/11"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_11");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet 1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 1/07"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_07");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Change url"><con:settings/><con:config><script><![CDATA[//Random Number Generator

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/* ${Groovy Script to encode ALID} */


import org.apache.commons.lang.StringUtils;
def rEST_API_Version = context.expand( '${#Project#versionMajor}/${#Project#versionMinor}' )

def r4Profile = context.expand( '${#Project#R4Profile}' )
def r4APID_GET_DELETE = context.expand( '${#Project#R4APID_GET_DELETE}' )
def r3Profile = context.expand( '${#Project#R3Profile}' )
def r3APID_GET_DELETE = context.expand( '${#Project#R3APID_GET_DELETE}' )
def aLID = context.expand( '${#TestCase#ALID}' )


if(rEST_API_Version=="1/07"||rEST_API_Version=="1/11"||rEST_API_Version=="2015/02")

{

tP.setPropertyValue("Profile", r4Profile);
tP.setPropertyValue("APID_GET_DELETE", r4APID_GET_DELETE)	
//${Groovy Script to encode R4-APID}
log.info "ALID = "+aLID

int indexofforthcolon;
int counter = 0;
		for( int j=0; j<aLID.length(); j++ )
		{
   				if( aLID.charAt(j) == ':' ) 
   				{
       					 counter++;
						if(counter==4)
						{
							indexofforthcolon=j;
						}	 
   				} 
		}
		
String firstsubpart;
firstsubpart=aLID.substring(0,indexofforthcolon);
log.info firstsubpart;
String[] splitalid=aLID.split(":",2);
log.info splitalid.toString();
String content = "&amp;";
log.info  "Return Value :" 
      for (String retval: aLID.split(":", 5))
      {
      //log.info retval
      String container = retval;
      boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
	if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
      log.info URLEncoder.encode (tmpString, "UTF-8")
   	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (tmpString, "UTF-8"));
   	def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
  
    }
    else 
    {
    	log.info URLEncoder.encode (retval, "UTF-8")
    	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (retval, "UTF-8"));
    def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
     
    }
   }    
}


if(rEST_API_Version=="1/06")
{
	tP.setPropertyValue("Profile", r3Profile);
	tP.setPropertyValue("APID_GET_DELETE", r3APID_GET_DELETE);	
//ALID (not encoded) to be used in the request xml
log.info "ALID = "+aLID

String container = aLID;
String content = "&amp;";

//Processing the APIDs containing &amp; in its content
boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
     tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (tmpString, "UTF-8"));

//Encoded ALID (ALID_GET_DELETE) to be used in the URL for Update/Get/Delete operations after removing &amp; from it.

def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
	
}
else {

tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (aLID, "UTF-8"));
def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
}
}]]></script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-None-Match" value="${#Project#ETag} " xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:testStep type="groovy" name="Set back version 1/11"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_11");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_909664271.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">909664271</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP3LBSPC/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>200</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value/></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>ExpectedReturnCodeStatusUpdate</con:name><con:value>303</con:value></con:property><con:property><con:name>ALID_GET_DELETE</con:name><con:value>:</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c84efce6-9a9f-451a-a364-34e1d6550219</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84eb76f6-7ed9-4b5e-892e-d1f59edcdcc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cc35e0c7-a380-4c8b-ae66-32296920307e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>827b916f-1e28-4e09-a3b1-4277e92b82fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ee63d93-9ff3-4e01-97c7-b39a0eec43a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca52cc4c-f9db-4f4e-b814-a552b12840ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a0982206-2f5a-4a60-9d0d-7ad49555beff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6026b1a1-d686-4d71-8cc2-1a393782d1c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>350b9df6-cb2e-4d1f-ac15-bc16033bb612</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3aa5fccb-0b90-47c8-97e9-3baa69eb6a1b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1b16748c-2a14-4065-9828-86bbf5f796cc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d8152490-6513-4744-87ef-7e8c2d941ea9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>11c6fd60-63f1-4e3d-ad09-f877d0165a39</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>24bcd834-b626-4f72-9be8-2e7146d20424</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10112_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicGET_MetadataBasicDelete_If-Match_11_MetadataBasicListGET_If-None-Match_07_404 Not Found" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="6e6c6171-1692-4562-9651-5b3672138100"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 1/11"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_11");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet 1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 1/07"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_07");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Change url"><con:settings/><con:config><script><![CDATA[//Random Number Generator

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/* ${Groovy Script to encode ALID} */


import org.apache.commons.lang.StringUtils;
def rEST_API_Version = context.expand( '${#Project#versionMajor}/${#Project#versionMinor}' )

def r4Profile = context.expand( '${#Project#R4Profile}' )
def r4APID_GET_DELETE = context.expand( '${#Project#R4APID_GET_DELETE}' )
def r3Profile = context.expand( '${#Project#R3Profile}' )
def r3APID_GET_DELETE = context.expand( '${#Project#R3APID_GET_DELETE}' )
def aLID = context.expand( '${#TestCase#ALID}' )


if(rEST_API_Version=="1/07"||rEST_API_Version=="1/11"||rEST_API_Version=="2015/02")

{

tP.setPropertyValue("Profile", r4Profile);
tP.setPropertyValue("APID_GET_DELETE", r4APID_GET_DELETE)	
//${Groovy Script to encode R4-APID}
log.info "ALID = "+aLID

int indexofforthcolon;
int counter = 0;
		for( int j=0; j<aLID.length(); j++ )
		{
   				if( aLID.charAt(j) == ':' ) 
   				{
       					 counter++;
						if(counter==4)
						{
							indexofforthcolon=j;
						}	 
   				} 
		}
		
String firstsubpart;
firstsubpart=aLID.substring(0,indexofforthcolon);
log.info firstsubpart;
String[] splitalid=aLID.split(":",2);
log.info splitalid.toString();
String content = "&amp;";
log.info  "Return Value :" 
      for (String retval: aLID.split(":", 5))
      {
      //log.info retval
      String container = retval;
      boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
	if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
      log.info URLEncoder.encode (tmpString, "UTF-8")
   	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (tmpString, "UTF-8"));
   	def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
  
    }
    else 
    {
    	log.info URLEncoder.encode (retval, "UTF-8")
    	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (retval, "UTF-8"));
    def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
     
    }
   }    
}


if(rEST_API_Version=="1/06")
{
	tP.setPropertyValue("Profile", r3Profile);
	tP.setPropertyValue("APID_GET_DELETE", r3APID_GET_DELETE);	
//ALID (not encoded) to be used in the request xml
log.info "ALID = "+aLID

String container = aLID;
String content = "&amp;";

//Processing the APIDs containing &amp; in its content
boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
     tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (tmpString, "UTF-8"));

//Encoded ALID (ALID_GET_DELETE) to be used in the URL for Update/Get/Delete operations after removing &amp; from it.

def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
	
}
else {

tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (aLID, "UTF-8"));
def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
}
}]]></script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-None-Match" value="${#Project#ETag} " xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:testStep type="groovy" name="Set back version 1/11"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_11");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_639627420.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">639627420</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP3LBSPC/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>200</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value/></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>ExpectedReturnCodeStatusUpdate</con:name><con:value>303</con:value></con:property><con:property><con:name>ALID_GET_DELETE</con:name><con:value>:</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c84efce6-9a9f-451a-a364-34e1d6550219</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84eb76f6-7ed9-4b5e-892e-d1f59edcdcc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cc35e0c7-a380-4c8b-ae66-32296920307e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>827b916f-1e28-4e09-a3b1-4277e92b82fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ee63d93-9ff3-4e01-97c7-b39a0eec43a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca52cc4c-f9db-4f4e-b814-a552b12840ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a0982206-2f5a-4a60-9d0d-7ad49555beff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6026b1a1-d686-4d71-8cc2-1a393782d1c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>350b9df6-cb2e-4d1f-ac15-bc16033bb612</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3aa5fccb-0b90-47c8-97e9-3baa69eb6a1b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1b16748c-2a14-4065-9828-86bbf5f796cc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1a31f1ce-d4cd-4bbb-9caa-68acd401ba3a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eb612e19-0fc5-4e08-9cda-0aeb76e9794e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7523ada9-66b7-407b-9d29-83923ae0b81b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10113_MetadataBasicListGET_HEAD_11_MetadataBasicListGET_If-Modified-Since_07_304 Not Modified" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="86586962-957a-4276-b50d-205f417d3e74"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 1/11"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_11");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="1-SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("HEAD-ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="HEAD-ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="HEAD MetadataBasciList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HEAD-ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="1- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('HEAD-ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus1", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="1-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate1");
def httpStatus 			= tC.getPropertyValue("httpStatus1");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 1/07"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_07");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Change url"><con:settings/><con:config><script><![CDATA[//Random Number Generator

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/* ${Groovy Script to encode ALID} */


import org.apache.commons.lang.StringUtils;
def rEST_API_Version = context.expand( '${#Project#versionMajor}/${#Project#versionMinor}' )

def r4Profile = context.expand( '${#Project#R4Profile}' )
def r4APID_GET_DELETE = context.expand( '${#Project#R4APID_GET_DELETE}' )
def r3Profile = context.expand( '${#Project#R3Profile}' )
def r3APID_GET_DELETE = context.expand( '${#Project#R3APID_GET_DELETE}' )
def aLID = context.expand( '${#TestCase#ALID}' )


if(rEST_API_Version=="1/07"||rEST_API_Version=="1/11"||rEST_API_Version=="2015/02")

{

tP.setPropertyValue("Profile", r4Profile);
tP.setPropertyValue("APID_GET_DELETE", r4APID_GET_DELETE)	
//${Groovy Script to encode R4-APID}
log.info "ALID = "+aLID

int indexofforthcolon;
int counter = 0;
		for( int j=0; j<aLID.length(); j++ )
		{
   				if( aLID.charAt(j) == ':' ) 
   				{
       					 counter++;
						if(counter==4)
						{
							indexofforthcolon=j;
						}	 
   				} 
		}
		
String firstsubpart;
firstsubpart=aLID.substring(0,indexofforthcolon);
log.info firstsubpart;
String[] splitalid=aLID.split(":",2);
log.info splitalid.toString();
String content = "&amp;";
log.info  "Return Value :" 
      for (String retval: aLID.split(":", 5))
      {
      //log.info retval
      String container = retval;
      boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
	if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
      log.info URLEncoder.encode (tmpString, "UTF-8")
   	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (tmpString, "UTF-8"));
   	def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
  
    }
    else 
    {
    	log.info URLEncoder.encode (retval, "UTF-8")
    	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (retval, "UTF-8"));
    def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
     
    }
   }    
}


if(rEST_API_Version=="1/06")
{
	tP.setPropertyValue("Profile", r3Profile);
	tP.setPropertyValue("APID_GET_DELETE", r3APID_GET_DELETE);	
//ALID (not encoded) to be used in the request xml
log.info "ALID = "+aLID

String container = aLID;
String content = "&amp;";

//Processing the APIDs containing &amp; in its content
boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
     tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (tmpString, "UTF-8"));

//Encoded ALID (ALID_GET_DELETE) to be used in the URL for Update/Get/Delete operations after removing &amp; from it.

def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
	
}
else {

tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (aLID, "UTF-8"));
def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
}
}]]></script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Modified-Since" value=" ${#Project#Last-Modified}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:testStep type="groovy" name="Set back version 1/11"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_11");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">854328</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP3LBSPC/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>304</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 304 Not Modified</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value>max-age=86400</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"06C6DCA4A5617703E0533E991E0A8B1B:26121DD1"</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ALID_GET_DELETE</con:name><con:value>:</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>92112f02-6a59-4b20-9ae2-f919c1488600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7d29f922-aa42-4614-a3cc-8ed90b7a5391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1d0e083e-8b68-4a6e-9154-4384e3a50cc7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f0130bd1-ddaa-43eb-804a-c183eb19299f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10114_MetadataBasicListGET_MetadataBasicCreate_11_MetadataBasicListGET_If-Modified-Since_07_200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="dcab4d64-abe1-4510-bb5c-6625fe96d565"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 1/11"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_11");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Set version 1/07"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_07");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Change url"><con:settings/><con:config><script><![CDATA[//Random Number Generator

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/* ${Groovy Script to encode ALID} */


import org.apache.commons.lang.StringUtils;
def rEST_API_Version = context.expand( '${#Project#versionMajor}/${#Project#versionMinor}' )

def r4Profile = context.expand( '${#Project#R4Profile}' )
def r4APID_GET_DELETE = context.expand( '${#Project#R4APID_GET_DELETE}' )
def r3Profile = context.expand( '${#Project#R3Profile}' )
def r3APID_GET_DELETE = context.expand( '${#Project#R3APID_GET_DELETE}' )
def aLID = context.expand( '${#TestCase#ALID}' )


if(rEST_API_Version=="1/07"||rEST_API_Version=="1/11"||rEST_API_Version=="2015/02")

{

tP.setPropertyValue("Profile", r4Profile);
tP.setPropertyValue("APID_GET_DELETE", r4APID_GET_DELETE)	
//${Groovy Script to encode R4-APID}
log.info "ALID = "+aLID

int indexofforthcolon;
int counter = 0;
		for( int j=0; j<aLID.length(); j++ )
		{
   				if( aLID.charAt(j) == ':' ) 
   				{
       					 counter++;
						if(counter==4)
						{
							indexofforthcolon=j;
						}	 
   				} 
		}
		
String firstsubpart;
firstsubpart=aLID.substring(0,indexofforthcolon);
log.info firstsubpart;
String[] splitalid=aLID.split(":",2);
log.info splitalid.toString();
String content = "&amp;";
log.info  "Return Value :" 
      for (String retval: aLID.split(":", 5))
      {
      //log.info retval
      String container = retval;
      boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
	if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
      log.info URLEncoder.encode (tmpString, "UTF-8")
   	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (tmpString, "UTF-8"));
   	def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
  
    }
    else 
    {
    	log.info URLEncoder.encode (retval, "UTF-8")
    	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (retval, "UTF-8"));
    def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
     
    }
   }    
}


if(rEST_API_Version=="1/06")
{
	tP.setPropertyValue("Profile", r3Profile);
	tP.setPropertyValue("APID_GET_DELETE", r3APID_GET_DELETE);	
//ALID (not encoded) to be used in the request xml
log.info "ALID = "+aLID

String container = aLID;
String content = "&amp;";

//Processing the APIDs containing &amp; in its content
boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
     tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (tmpString, "UTF-8"));

//Encoded ALID (ALID_GET_DELETE) to be used in the URL for Update/Get/Delete operations after removing &amp; from it.

def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
	
}
else {

tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (aLID, "UTF-8"));
def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
}
}]]></script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Modified-Since" value=" ${#Project#Last-Modified}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:testStep type="groovy" name="Set back version 1/11"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_11");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_352870552.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">352870552</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP3LBSPC/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>200</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value/></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value>max-age=31536000</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E347E2263688BC3DE0401F0A07993B47"</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ALID_GET_DELETE</con:name><con:value>:</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c84efce6-9a9f-451a-a364-34e1d6550219</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84eb76f6-7ed9-4b5e-892e-d1f59edcdcc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cc35e0c7-a380-4c8b-ae66-32296920307e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>827b916f-1e28-4e09-a3b1-4277e92b82fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ee63d93-9ff3-4e01-97c7-b39a0eec43a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca52cc4c-f9db-4f4e-b814-a552b12840ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a0982206-2f5a-4a60-9d0d-7ad49555beff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>12158310-fb29-4bfc-80f5-b21f6ebdd441</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca8c3237-d697-4ffd-9ac8-a2f621efc07d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b1cc395b-cf93-4f89-9e90-5cd3860e6434</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>16ae5dd7-73f9-4716-a274-bf50e771d7ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10115_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicGET_MetadataBasicResourceStatusUpdate_If-Unmodified-Since_11_MetadataBasicListGET_If-Modified-Since_07_ 200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="15ffb931-7b7e-47b6-9272-36d232f94b58"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 1/11"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_11");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet 1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicReourceStatusUpdate_Active-Pending"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("PUT - MetadataBasicReourceStatusUpdate_Active-Pending_If-Unmodified-Since")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 1/07"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_07");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Change url"><con:settings/><con:config><script><![CDATA[//Random Number Generator

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/* ${Groovy Script to encode ALID} */


import org.apache.commons.lang.StringUtils;
def rEST_API_Version = context.expand( '${#Project#versionMajor}/${#Project#versionMinor}' )

def r4Profile = context.expand( '${#Project#R4Profile}' )
def r4APID_GET_DELETE = context.expand( '${#Project#R4APID_GET_DELETE}' )
def r3Profile = context.expand( '${#Project#R3Profile}' )
def r3APID_GET_DELETE = context.expand( '${#Project#R3APID_GET_DELETE}' )
def aLID = context.expand( '${#TestCase#ALID}' )


if(rEST_API_Version=="1/07"||rEST_API_Version=="1/11"||rEST_API_Version=="2015/02")

{

tP.setPropertyValue("Profile", r4Profile);
tP.setPropertyValue("APID_GET_DELETE", r4APID_GET_DELETE)	
//${Groovy Script to encode R4-APID}
log.info "ALID = "+aLID

int indexofforthcolon;
int counter = 0;
		for( int j=0; j<aLID.length(); j++ )
		{
   				if( aLID.charAt(j) == ':' ) 
   				{
       					 counter++;
						if(counter==4)
						{
							indexofforthcolon=j;
						}	 
   				} 
		}
		
String firstsubpart;
firstsubpart=aLID.substring(0,indexofforthcolon);
log.info firstsubpart;
String[] splitalid=aLID.split(":",2);
log.info splitalid.toString();
String content = "&amp;";
log.info  "Return Value :" 
      for (String retval: aLID.split(":", 5))
      {
      //log.info retval
      String container = retval;
      boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
	if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
      log.info URLEncoder.encode (tmpString, "UTF-8")
   	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (tmpString, "UTF-8"));
   	def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
  
    }
    else 
    {
    	log.info URLEncoder.encode (retval, "UTF-8")
    	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (retval, "UTF-8"));
    def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
     
    }
   }    
}


if(rEST_API_Version=="1/06")
{
	tP.setPropertyValue("Profile", r3Profile);
	tP.setPropertyValue("APID_GET_DELETE", r3APID_GET_DELETE);	
//ALID (not encoded) to be used in the request xml
log.info "ALID = "+aLID

String container = aLID;
String content = "&amp;";

//Processing the APIDs containing &amp; in its content
boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
     tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (tmpString, "UTF-8"));

//Encoded ALID (ALID_GET_DELETE) to be used in the URL for Update/Get/Delete operations after removing &amp; from it.

def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
	
}
else {

tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (aLID, "UTF-8"));
def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
}
}]]></script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Modified-Since" value="${#Project#Last-Modified}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:testStep type="groovy" name="Set back version 1/11"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_11");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_148150457.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">148150457</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP3LBSPC/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>200</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value/></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>ExpectedReturnCodeStatusUpdate</con:name><con:value>303</con:value></con:property><con:property><con:name>ALID_GET_DELETE</con:name><con:value>:</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c84efce6-9a9f-451a-a364-34e1d6550219</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84eb76f6-7ed9-4b5e-892e-d1f59edcdcc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cc35e0c7-a380-4c8b-ae66-32296920307e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>827b916f-1e28-4e09-a3b1-4277e92b82fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ee63d93-9ff3-4e01-97c7-b39a0eec43a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca52cc4c-f9db-4f4e-b814-a552b12840ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a0982206-2f5a-4a60-9d0d-7ad49555beff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6026b1a1-d686-4d71-8cc2-1a393782d1c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>350b9df6-cb2e-4d1f-ac15-bc16033bb612</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7520a803-c6fd-4471-8928-16269640be20</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5aaeacf9-6224-4150-8a9d-f5ca0ce31eb8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2f7e120-2766-49bc-bf15-be6bd6297793</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67ef7399-078e-4a51-8ca1-ffc5a92eb219</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10116_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicGET_MetadataBasicUpdate_If-Unmodified-Since_11_MetadataBasicListGET_If-Modified-Since_07_200 OK" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="345ec7ce-4e9c-44e8-b4e8-af08935beaed"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 1/11"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_11");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet 1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("PUT - MetadataBasicCreate_If-Unmodified-Since")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 1/07"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_07");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Change url"><con:settings/><con:config><script><![CDATA[//Random Number Generator

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/* ${Groovy Script to encode ALID} */


import org.apache.commons.lang.StringUtils;
def rEST_API_Version = context.expand( '${#Project#versionMajor}/${#Project#versionMinor}' )

def r4Profile = context.expand( '${#Project#R4Profile}' )
def r4APID_GET_DELETE = context.expand( '${#Project#R4APID_GET_DELETE}' )
def r3Profile = context.expand( '${#Project#R3Profile}' )
def r3APID_GET_DELETE = context.expand( '${#Project#R3APID_GET_DELETE}' )
def aLID = context.expand( '${#TestCase#ALID}' )


if(rEST_API_Version=="1/07"||rEST_API_Version=="1/11"||rEST_API_Version=="2015/02")

{

tP.setPropertyValue("Profile", r4Profile);
tP.setPropertyValue("APID_GET_DELETE", r4APID_GET_DELETE)	
//${Groovy Script to encode R4-APID}
log.info "ALID = "+aLID

int indexofforthcolon;
int counter = 0;
		for( int j=0; j<aLID.length(); j++ )
		{
   				if( aLID.charAt(j) == ':' ) 
   				{
       					 counter++;
						if(counter==4)
						{
							indexofforthcolon=j;
						}	 
   				} 
		}
		
String firstsubpart;
firstsubpart=aLID.substring(0,indexofforthcolon);
log.info firstsubpart;
String[] splitalid=aLID.split(":",2);
log.info splitalid.toString();
String content = "&amp;";
log.info  "Return Value :" 
      for (String retval: aLID.split(":", 5))
      {
      //log.info retval
      String container = retval;
      boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
	if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
      log.info URLEncoder.encode (tmpString, "UTF-8")
   	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (tmpString, "UTF-8"));
   	def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
  
    }
    else 
    {
    	log.info URLEncoder.encode (retval, "UTF-8")
    	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (retval, "UTF-8"));
    def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
     
    }
   }    
}


if(rEST_API_Version=="1/06")
{
	tP.setPropertyValue("Profile", r3Profile);
	tP.setPropertyValue("APID_GET_DELETE", r3APID_GET_DELETE);	
//ALID (not encoded) to be used in the request xml
log.info "ALID = "+aLID

String container = aLID;
String content = "&amp;";

//Processing the APIDs containing &amp; in its content
boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
     tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (tmpString, "UTF-8"));

//Encoded ALID (ALID_GET_DELETE) to be used in the URL for Update/Get/Delete operations after removing &amp; from it.

def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
	
}
else {

tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (aLID, "UTF-8"));
def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
}
}]]></script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Modified-Since" value="${#Project#Last-Modified}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:testStep type="groovy" name="Set back version 1/11"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_11");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_887752246.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">887752246</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP3LBSPC/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>200</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value/></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>ExpectedReturnCodeStatusUpdate</con:name><con:value>303</con:value></con:property><con:property><con:name>ALID_GET_DELETE</con:name><con:value>:</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c84efce6-9a9f-451a-a364-34e1d6550219</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84eb76f6-7ed9-4b5e-892e-d1f59edcdcc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cc35e0c7-a380-4c8b-ae66-32296920307e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>827b916f-1e28-4e09-a3b1-4277e92b82fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ee63d93-9ff3-4e01-97c7-b39a0eec43a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca52cc4c-f9db-4f4e-b814-a552b12840ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a0982206-2f5a-4a60-9d0d-7ad49555beff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6026b1a1-d686-4d71-8cc2-1a393782d1c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>350b9df6-cb2e-4d1f-ac15-bc16033bb612</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6eac0c1b-417c-495f-886e-490fc842fe97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>86602d69-077c-4319-b575-494db52ab46f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53f6fc5a-725d-4275-8988-c68ac39bcdc3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>99ac9d46-2c1f-4fe2-81ad-48db3cd8b3b4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10117_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicGET_MetadataBasicDelete_If-Unmodified-Since_11_MetadataBasicListGET_If-Modified-Since_07_404 Not Found" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="d9b15b80-05d0-4980-b84f-dcc3758fbd56"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 1/11"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_11");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet 1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataBasicGet 1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("DELETE - MetadataBasicCreate_If-Unmodified-Since")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set version 1/07"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_07");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:testStep type="groovy" name="Change url"><con:settings/><con:config><script><![CDATA[//Random Number Generator

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/* ${Groovy Script to encode ALID} */


import org.apache.commons.lang.StringUtils;
def rEST_API_Version = context.expand( '${#Project#versionMajor}/${#Project#versionMinor}' )

def r4Profile = context.expand( '${#Project#R4Profile}' )
def r4APID_GET_DELETE = context.expand( '${#Project#R4APID_GET_DELETE}' )
def r3Profile = context.expand( '${#Project#R3Profile}' )
def r3APID_GET_DELETE = context.expand( '${#Project#R3APID_GET_DELETE}' )
def aLID = context.expand( '${#TestCase#ALID}' )


if(rEST_API_Version=="1/07"||rEST_API_Version=="1/11"||rEST_API_Version=="2015/02")

{

tP.setPropertyValue("Profile", r4Profile);
tP.setPropertyValue("APID_GET_DELETE", r4APID_GET_DELETE)	
//${Groovy Script to encode R4-APID}
log.info "ALID = "+aLID

int indexofforthcolon;
int counter = 0;
		for( int j=0; j<aLID.length(); j++ )
		{
   				if( aLID.charAt(j) == ':' ) 
   				{
       					 counter++;
						if(counter==4)
						{
							indexofforthcolon=j;
						}	 
   				} 
		}
		
String firstsubpart;
firstsubpart=aLID.substring(0,indexofforthcolon);
log.info firstsubpart;
String[] splitalid=aLID.split(":",2);
log.info splitalid.toString();
String content = "&amp;";
log.info  "Return Value :" 
      for (String retval: aLID.split(":", 5))
      {
      //log.info retval
      String container = retval;
      boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
	if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
      log.info URLEncoder.encode (tmpString, "UTF-8")
   	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (tmpString, "UTF-8"));
   	def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
  
    }
    else 
    {
    	log.info URLEncoder.encode (retval, "UTF-8")
    	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (retval, "UTF-8"));
    def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
     
    }
   }    
}


if(rEST_API_Version=="1/06")
{
	tP.setPropertyValue("Profile", r3Profile);
	tP.setPropertyValue("APID_GET_DELETE", r3APID_GET_DELETE);	
//ALID (not encoded) to be used in the request xml
log.info "ALID = "+aLID

String container = aLID;
String content = "&amp;";

//Processing the APIDs containing &amp; in its content
boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
     tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (tmpString, "UTF-8"));

//Encoded ALID (ALID_GET_DELETE) to be used in the URL for Update/Get/Delete operations after removing &amp; from it.

def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
	
}
else {

tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (aLID, "UTF-8"));
def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
tC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
}
}]]></script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Modified-Since" value="${#Project#Last-Modified}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Set back version 1/11"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Set Version V2_11");

log.info myTC;

def runnerTC = myTC.run( null , false )



</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_978050205.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">978050205</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP3LBSPC/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>200</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value/></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>ExpectedReturnCodeStatusUpdate</con:name><con:value>303</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value>max-age=86400</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"F0659E1BA799CA55E0401F0A05994DA1:26121DD1"</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value>t=1392106113 UvnagAofmIgAAAXb180AAACL urn:dece:org:org:dece:CON 10.31.153.241</con:value></con:property><con:property><con:name>ALID_GET_DELETE</con:name><con:value>:</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c84efce6-9a9f-451a-a364-34e1d6550219</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84eb76f6-7ed9-4b5e-892e-d1f59edcdcc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cc35e0c7-a380-4c8b-ae66-32296920307e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>827b916f-1e28-4e09-a3b1-4277e92b82fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0ee63d93-9ff3-4e01-97c7-b39a0eec43a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca52cc4c-f9db-4f4e-b814-a552b12840ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a0982206-2f5a-4a60-9d0d-7ad49555beff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6026b1a1-d686-4d71-8cc2-1a393782d1c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>350b9df6-cb2e-4d1f-ac15-bc16033bb612</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3aa5fccb-0b90-47c8-97e9-3baa69eb6a1b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5a70039b-f43e-46f8-8fcb-df2c5ab4a23d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>151d7321-ca0b-4a9e-8de8-16bf60b3273f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7f109a9b-2169-48a1-b772-0eec902a1a43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a5ead746-0eae-43a4-b3d9-4a813c5e5d3c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2edc04e2-1181-4c8e-9e71-3e928cb3f43b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>35b6e1bf-7dec-420f-9be8-9adfe8538230</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10118_MetadataBasicListGET_HEAD_MetadataBasicListGET_If-None-Match_304 Not Modified_with Empty Authorization Header" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="1-SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("HEAD-ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="HEAD-ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="HEAD MetadataBasciList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HEAD-ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="1- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('HEAD-ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus1", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="1-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate1");
def httpStatus 			= tC.getPropertyValue("httpStatus1");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET_ETagCheck");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET_ETagCheck"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_ETagCheck" mediaType="application/xml" sslKeystore="CON_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value=""/>
  &lt;con:entry key="If-None-Match" value="${#Project#ETag} "/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="2- Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
//String connection = null;
//String contentType   = null;
//String contentLength = null;
//String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		/*case "Location": 
			contentLocation = value[0];
			break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;*/
	}
}


//tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus2", status);
//tC.setPropertyValue("httpConnect", connection);
//tC.setPropertyValue("httpContentType", contentType);
//tC.setPropertyValue("httpContentLength", contentLength);
//tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="2-Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate2");
def httpStatus 			= tC.getPropertyValue("httpStatus2");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "304":  
		if (httpStatus != "HTTP/1.1 304 Not Modified") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs_Cache").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET_ETagCheck');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control = null;
String ETag = null;
//String Expires   = null;
//String Last_Modified = null;
String x_Transaction_Info = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		/*case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;*/
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
//tC.setPropertyValue("Expires", Expires);
//tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus2}' )

if(httpStatus=='HTTP/1.1 304 Not Modified')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==false)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==false)
assert 1==2

/*def Expires=tC.getPropertyValue("Expires")
if(Expires==false)
assert 1==2

def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==false)
assert 1==2
*/
def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==false)
assert 1==2


}</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">854328</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP3LBSPC/CON_concat.pem</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate1</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate2</con:name><con:value>304</con:value></con:property><con:property><con:name>httpStatus1</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpStatus2</con:name><con:value>HTTP/1.1 304 Not Modified</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value>max-age=86400</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"06A4321B54422334E0533E991E0AAE00:26121DD1"</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7670e146-31cf-479d-9f96-3aba9ce58098</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e9f0487-b652-481c-af37-6402c72546ec</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>85f0d65f-6d6f-47a1-830e-82be60ecaa5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58bf873e-d19c-4533-83c4-505f682ce54e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33532fdf-c217-46f1-a953-670f7e63c668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bf7f6ec5-cc36-4ac6-b8e4-4891c465493c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>nodeid</con:name><con:value>nodeIdCON</con:value></con:property></con:properties><con:setupScript/><con:tearDownScript/><con:reportParameters/></con:testSuite><con:testSuite name="MetadataBasicList Content Provider"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">/opt/dece/Reports/Sprint 3.5.1/R4/BasicList</con:setting></con:settings><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10022_MetadataBasicList_METH_invocation_with_method_HEAD" searchProperties="true" id="5907e32c-b67c-4a67-8128-27bca7c153fa"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="8a83ee85-ba28-4b91-9538-54efabdfe326"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("HEAD MetadataListCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="HEAD MetadataListCreate"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" methodName="HEAD MetadataBasciList" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HEAD MetadataListCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="DECE" value="${#TestCase#nodeId}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!--Sample XML file generated by XMLSpy v2008 sp1 (http://www.altova.com)-->
<dece:BasicAsset xsi:schemaLocation="http://www.decellc.org/schema/2010/10/dece Coordinator%20Interface%20Schema-v0171.xsd" xmlns:dece="http://www.decellc.org/schema/2011/08/coordinator" xmlns:md="http://www.movielabs.com/md" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<dece:BasicData ContentID="urn:dece:cid:ISAN:1111-3MDP-2222-2222-G-2222-2222-Q">
		<md:UpdateNum>1</md:UpdateNum>
		<md:LocalizedInfo default="true" language="en-us">
			<md:TitleDisplay19>String</md:TitleDisplay19>
			<md:TitleDisplay60>String</md:TitleDisplay60>
			<md:TitleSort>String</md:TitleSort>
			<md:ArtReference resolution="String">http://www.altova.com</md:ArtReference>
			<md:ArtReference resolution="String">http://www.altova.com</md:ArtReference>
			<md:Summary190 cast="true">String</md:Summary190>
			<md:Summary400 cast="true">String</md:Summary400>
			<md:Summary4000 cast="true">String</md:Summary4000>
			<md:DisplayIndicators>CC</md:DisplayIndicators>
			<md:DisplayIndicators>CC</md:DisplayIndicators>
			<md:Genre>String</md:Genre>
			<md:Genre>String</md:Genre>
			<md:Keyword>String</md:Keyword>
			<md:Keyword>String</md:Keyword>
			<md:VersionNotes>String</md:VersionNotes>
			<md:Region>
				<md:country>AA</md:country>
			</md:Region>
			<md:Region>
				<md:country>AA</md:country>
			</md:Region>
			<md:OriginalTitle>String</md:OriginalTitle>
			<md:CopyrightLine>String</md:CopyrightLine>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction scheme="String">String</md:JobFunction>
					<md:JobDisplay>String</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String</md:Character>
					<md:Character>String</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Job>
					<md:JobFunction scheme="String">String</md:JobFunction>
					<md:JobDisplay>String</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String</md:Character>
					<md:Character>String</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Name>
					<md:DisplayName>String</md:DisplayName>
					<md:SortName>String</md:SortName>
					<md:FirstGivenName>String</md:FirstGivenName>
					<md:SecondGivenName>String</md:SecondGivenName>
					<md:FamilyName>String</md:FamilyName>
					<md:Suffix>String</md:Suffix>
					<md:Moniker>String</md:Moniker>
				</md:Name>
				<md:Identifier>
					<md:Identifier>String</md:Identifier>
					<md:Namespace>String</md:Namespace>
					<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Identifier>
					<md:Identifier>String</md:Identifier>
					<md:Namespace>String</md:Namespace>
					<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Gender>male</md:Gender>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction scheme="String">String</md:JobFunction>
					<md:JobDisplay>String</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String</md:Character>
					<md:Character>String</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Job>
					<md:JobFunction scheme="String">String</md:JobFunction>
					<md:JobDisplay>String</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String</md:Character>
					<md:Character>String</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Name>
					<md:DisplayName>String</md:DisplayName>
					<md:SortName>String</md:SortName>
					<md:FirstGivenName>String</md:FirstGivenName>
					<md:SecondGivenName>String</md:SecondGivenName>
					<md:FamilyName>String</md:FamilyName>
					<md:Suffix>String</md:Suffix>
					<md:Moniker>String</md:Moniker>
				</md:Name>
				<md:Identifier>
					<md:Identifier>String</md:Identifier>
					<md:Namespace>String</md:Namespace>
					<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Identifier>
					<md:Identifier>String</md:Identifier>
					<md:Namespace>String</md:Namespace>
					<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Gender>male</md:Gender>
			</md:PeopleLocal>
		</md:LocalizedInfo>
		<md:LocalizedInfo default="true" language="en-us">
			<md:TitleDisplay19>String</md:TitleDisplay19>
			<md:TitleDisplay60>String</md:TitleDisplay60>
			<md:TitleSort>String</md:TitleSort>
			<md:ArtReference resolution="String">http://www.altova.com</md:ArtReference>
			<md:ArtReference resolution="String">http://www.altova.com</md:ArtReference>
			<md:Summary190 cast="true">String</md:Summary190>
			<md:Summary400 cast="true">String</md:Summary400>
			<md:Summary4000 cast="true">String</md:Summary4000>
			<md:DisplayIndicators>CC</md:DisplayIndicators>
			<md:DisplayIndicators>CC</md:DisplayIndicators>
			<md:Genre>String</md:Genre>
			<md:Genre>String</md:Genre>
			<md:Keyword>String</md:Keyword>
			<md:Keyword>String</md:Keyword>
			<md:VersionNotes>String</md:VersionNotes>
			<md:Region>
				<md:country>AA</md:country>
			</md:Region>
			<md:Region>
				<md:country>AA</md:country>
			</md:Region>
			<md:OriginalTitle>String</md:OriginalTitle>
			<md:CopyrightLine>String</md:CopyrightLine>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction scheme="String">String</md:JobFunction>
					<md:JobDisplay>String</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String</md:Character>
					<md:Character>String</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Job>
					<md:JobFunction scheme="String">String</md:JobFunction>
					<md:JobDisplay>String</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String</md:Character>
					<md:Character>String</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Name>
					<md:DisplayName>String</md:DisplayName>
					<md:SortName>String</md:SortName>
					<md:FirstGivenName>String</md:FirstGivenName>
					<md:SecondGivenName>String</md:SecondGivenName>
					<md:FamilyName>String</md:FamilyName>
					<md:Suffix>String</md:Suffix>
					<md:Moniker>String</md:Moniker>
				</md:Name>
				<md:Identifier>
					<md:Identifier>String</md:Identifier>
					<md:Namespace>String</md:Namespace>
					<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Identifier>
					<md:Identifier>String</md:Identifier>
					<md:Namespace>String</md:Namespace>
					<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Gender>male</md:Gender>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction scheme="String">String</md:JobFunction>
					<md:JobDisplay>String</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String</md:Character>
					<md:Character>String</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Job>
					<md:JobFunction scheme="String">String</md:JobFunction>
					<md:JobDisplay>String</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String</md:Character>
					<md:Character>String</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Name>
					<md:DisplayName>String</md:DisplayName>
					<md:SortName>String</md:SortName>
					<md:FirstGivenName>String</md:FirstGivenName>
					<md:SecondGivenName>String</md:SecondGivenName>
					<md:FamilyName>String</md:FamilyName>
					<md:Suffix>String</md:Suffix>
					<md:Moniker>String</md:Moniker>
				</md:Name>
				<md:Identifier>
					<md:Identifier>String</md:Identifier>
					<md:Namespace>String</md:Namespace>
					<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Identifier>
					<md:Identifier>String</md:Identifier>
					<md:Namespace>String</md:Namespace>
					<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Gender>male</md:Gender>
			</md:PeopleLocal>
		</md:LocalizedInfo>
		<md:RunLength>P1Y2M3DT10H30M0S</md:RunLength>
		<md:ReleaseYear>2001</md:ReleaseYear>
		<md:ReleaseDate>1967-08-13</md:ReleaseDate>
		<md:ReleaseHistory>
			<md:ReleaseType>String</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">1967-08-13</md:Date>
			<md:Description>String</md:Description>
			<md:ReleaseOrg organizationID="String">
				<md:DisplayName>String</md:DisplayName>
				<md:SortName>String</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:ReleaseHistory>
			<md:ReleaseType>String</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">1967-08-13</md:Date>
			<md:Description>String</md:Description>
			<md:ReleaseOrg organizationID="String">
				<md:DisplayName>String</md:DisplayName>
				<md:SortName>String</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:WorkType>String</md:WorkType>
		<md:PictureColorType>color</md:PictureColorType>
		<md:PictureFormat>String</md:PictureFormat>
		<md:ThreeD>true</md:ThreeD>
		<md:AltIdentifier>
			<md:Namespace>String</md:Namespace>
			<md:Identifier>String</md:Identifier>
			<md:Location>http://www.altova.com</md:Location>
		</md:AltIdentifier>
		<md:AltIdentifier>
			<md:Namespace>String</md:Namespace>
			<md:Identifier>String</md:Identifier>
			<md:Location>http://www.altova.com</md:Location>
		</md:AltIdentifier>
		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>MPAA</md:System>
        			<md:Value>PG-13</md:Value>
        			<md:LinkToLogo>http://www.mpaa.org/_images/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet>
<!--		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>TVPG</md:System>
        			<md:Value>TV-Y7</md:Value>
        			<md:LinkToLogo>http://www.tvguidelines.org/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet> -->
<!--		<md:RatingSet>
			<md:NotRated>true</md:NotRated>
			<md:AdultContent>true</md:AdultContent>
		</md:RatingSet> -->
		<md:People>
			<md:Job>
				<md:JobFunction scheme="String">String</md:JobFunction>
				<md:JobDisplay>String</md:JobDisplay>
				<md:BillingBlockOrder>0</md:BillingBlockOrder>
				<md:Character>String</md:Character>
				<md:Character>String</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="String">String</md:JobFunction>
				<md:JobDisplay>String</md:JobDisplay>
				<md:BillingBlockOrder>0</md:BillingBlockOrder>
				<md:Character>String</md:Character>
				<md:Character>String</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String</md:DisplayName>
				<md:SortName>String</md:SortName>
				<md:FirstGivenName>String</md:FirstGivenName>
				<md:SecondGivenName>String</md:SecondGivenName>
				<md:FamilyName>String</md:FamilyName>
				<md:Suffix>String</md:Suffix>
				<md:Moniker>String</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String</md:Identifier>
				<md:Namespace>String</md:Namespace>
				<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Identifier>
				<md:Identifier>String</md:Identifier>
				<md:Namespace>String</md:Namespace>
				<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:People>
			<md:Job>
				<md:JobFunction scheme="String">String</md:JobFunction>
				<md:JobDisplay>String</md:JobDisplay>
				<md:BillingBlockOrder>0</md:BillingBlockOrder>
				<md:Character>String</md:Character>
				<md:Character>String</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="String">String</md:JobFunction>
				<md:JobDisplay>String</md:JobDisplay>
				<md:BillingBlockOrder>0</md:BillingBlockOrder>
				<md:Character>String</md:Character>
				<md:Character>String</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String</md:DisplayName>
				<md:SortName>String</md:SortName>
				<md:FirstGivenName>String</md:FirstGivenName>
				<md:SecondGivenName>String</md:SecondGivenName>
				<md:FamilyName>String</md:FamilyName>
				<md:Suffix>String</md:Suffix>
				<md:Moniker>String</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String</md:Identifier>
				<md:Namespace>String</md:Namespace>
				<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Identifier>
				<md:Identifier>String</md:Identifier>
				<md:Namespace>String</md:Namespace>
				<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:CountryOfOrigin>
			<md:country>AA</md:country>
		</md:CountryOfOrigin>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:SequenceInfo>
			<md:Number>0</md:Number>
			<md:HouseSequence>String</md:HouseSequence>
		</md:SequenceInfo>
		<md:Parent relationshipType="ispieceof">
			<md:ParentContentID>http://www.altova.com</md:ParentContentID>
		</md:Parent>
		<md:Parent relationshipType="ispieceof">
			<md:ParentContentID>http://www.altova.com</md:ParentContentID>
		</md:Parent>
	</dece:BasicData>
	<dece:Status>
		<dece:CurrentStatus>
			<dece:Status>urn:dece:type:status:active</dece:Status>
			<dece:StatusDate>2001-12-17T09:30:47.0Z</dece:StatusDate>
			<dece:StatusModifiedBy>urn:dece:</dece:StatusModifiedBy>
			<dece:StatusDescription>String</dece:StatusDescription>
		</dece:CurrentStatus>
		<dece:StatusHistory>
			<dece:PriorStatus>
				<dece:Status>urn:dece:type:status:active</dece:Status>
				<dece:StatusDate>2001-12-17T09:30:47.0Z</dece:StatusDate>
				<dece:StatusModifiedBy>urn:dece:</dece:StatusModifiedBy>
				<dece:StatusDescription>String</dece:StatusDescription>
			</dece:PriorStatus>
			<dece:PriorStatus>
				<dece:Status>urn:dece:type:status:active</dece:Status>
				<dece:StatusDate>2001-12-17T09:30:47.0Z</dece:StatusDate>
				<dece:StatusModifiedBy>urn:dece:</dece:StatusModifiedBy>
				<dece:StatusDescription>String</dece:StatusDescription>
			</dece:PriorStatus>
		</dece:StatusHistory>
	</dece:Status>
</dece:BasicAsset>
]]></con:request><con:assertion type="GroovyScriptAssertion" disabled="true"><con:configuration><scriptText>


	assert ((com.eviware.soapui.support.types.StringList)messageExchange.responseHeaders["#status#"]).containsValue("HTTP/1.1 405 Method Not Allowed")
		

</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>CID</con:name><con:value>urn:dece:cid:ISMN:979-0-060-${#TestCase#RandomNumberGenerated}-5</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:ISMN:979-0-060-${#TestCase#RandomNumberGenerated}-5</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>20630</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/CON_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c4f074af-7771-4778-b8b9-42dffceccbaa</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8a83ee85-ba28-4b91-9538-54efabdfe326</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10023_MetadataBasicList_METH_Invocation_with_method_PUT" searchProperties="true" id="1373474b-d7f6-42d6-9ba9-233e4dd77397"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="fa8982b6-e504-4291-92b6-861bf2fe04b4"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator" id="894443b8-7552-46f7-88cd-10f8814d7fac"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Set Pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("PUT MetadataList");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT MetadataList"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" methodName="PUT MetadataBasicList" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT MetadataList" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="DECE" value="${#TestCase#nodeId}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<dece:BasicAsset xmlns:dece="${#Project#Coordinator_Schema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="${#Project#md_schema}" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="${#Project#Coordinator_Schema} NewXMLSchema.xsd ">
  <dece:BasicData ContentID="${#TestCase#CID}">
    <md:UpdateNum>70</md:UpdateNum>
    <md:LocalizedInfo default="true" language="en">
      <md:TitleDisplay19>${#Project#TitleDisplay19}</md:TitleDisplay19>
      <md:TitleDisplay60>md:TitleDisplay60_Update</md:TitleDisplay60>
      <md:TitleDisplayUnlimited>md:TitleDisplayUnlimited</md:TitleDisplayUnlimited>
      <md:TitleSort>md:TitleSort</md:TitleSort>
      <md:ArtReference resolution="800x1200">http://upload.wikimedia.org/wikipedia/commons/5/5d/City_Hall_in_Slupsk_MG_4151_800x1200.jpg</md:ArtReference>
      
      <md:Summary190 cast="true">md:Summary190</md:Summary190>
      <md:Summary400 cast="true">md:Summary400</md:Summary400>
      <md:Summary4000 cast="true">md:Summary4000</md:Summary4000>
      <md:DisplayIndicators>CC</md:DisplayIndicators>
      <md:Genre id="" level="0" source="http://tempuri.org">md:Genre</md:Genre>
      <md:Keyword>md:Keyword</md:Keyword>
      <md:VersionNotes>md:VersionNotes</md:VersionNotes>
      <md:Region>
        <md:country>US</md:country>
      </md:Region>
      <md:OriginalTitle><![CDATA[en-US_!Dr._POST_ "W" Jones!- _?_@#$%^  *()_+[]{};':",./_?_\|ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€ Ã¢â‚¬â„¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¾ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â¦ÃƒÂ¢Ã¢â€šÂ¬ ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â¡Ãƒâ€¹Ã¢â‚¬ ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â°Ãƒâ€¦ ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â¹Ãƒâ€¦Ã¢â‚¬â„¢Ãƒâ€¦Ã‚Â½ ÃƒÆ’Ã‚Â© ]]]]>><![CDATA[</md:OriginalTitle>
      <md:CopyrightLine><![CDATA[© 2012 Lions Gate Entertainment Inc. All Rights Reserved.]]]]>><![CDATA[</md:CopyrightLine>
      <md:PeopleLocal>
        <md:Job>
          <md:JobFunction scheme="">md:JobFunction</md:JobFunction>
          <md:JobDisplay language="en">md:JobDisplay</md:JobDisplay>
          <md:BillingBlockOrder>0</md:BillingBlockOrder>
          <md:Character>md:Character</md:Character>
          <md:Guest>true</md:Guest>
        </md:Job>
        <md:Name>
          <md:DisplayName language="en">md:DisplayName</md:DisplayName>
          <md:SortName language="en">md:SortName</md:SortName>
          <md:FirstGivenName>md:FirstGivenName</md:FirstGivenName>
          <md:SecondGivenName>md:SecondGivenName</md:SecondGivenName>
          <md:FamilyName>md:FamilyName</md:FamilyName>
          <md:Suffix>md:Suffix</md:Suffix>
          <md:Moniker>md:Moniker</md:Moniker>
        </md:Name>
        <md:Identifier>
          <md:Identifier>md:Identifier</md:Identifier>
          <md:Namespace>md:Namespace</md:Namespace>
          <md:ReferenceLocation>http://tempuri.org</md:ReferenceLocation>
        </md:Identifier>
        <md:Gender>male</md:Gender>
      </md:PeopleLocal>
      <md:TitleAlternate language="en" type="">md:TitleAlternate</md:TitleAlternate>
    </md:LocalizedInfo>
    <md:RunLength>P1D</md:RunLength>
    <md:ReleaseYear>2001</md:ReleaseYear>
    <md:ReleaseDate>2011-07-28T10:00:00Z</md:ReleaseDate>
    <md:ReleaseHistory>
      <md:ReleaseType wide="true">md:ReleaseType</md:ReleaseType>
      <md:DistrTerritory>
        <md:country>US</md:country>
      </md:DistrTerritory>
      <md:Date scheduled="true">2011-07-28T10:00:00Z</md:Date>
      <md:Description>md:Description</md:Description>
      <md:ReleaseOrg organizationID="">
        <md:DisplayName>md:DisplayName</md:DisplayName>
        <md:SortName>md:SortName</md:SortName>
      </md:ReleaseOrg>
    </md:ReleaseHistory>
    <md:WorkType>Movie</md:WorkType>
    <md:PictureColorType>color</md:PictureColorType>
    <md:PictureFormat>md:PictureFormat</md:PictureFormat>
    <md:ThreeD>true</md:ThreeD>
    <md:AltIdentifier>
      <md:Namespace>md:Namespace</md:Namespace>
      <md:Identifier>md:Identifier</md:Identifier>
      <md:Location>http://tempuri.org</md:Location>
    </md:AltIdentifier>
    <md:RatingSet>
      <md:NotRated condition="">true</md:NotRated>
      <md:AdultContent>true</md:AdultContent>
    </md:RatingSet>
    <md:People>
      <md:Job>
        <md:JobFunction scheme="">md:JobFunction</md:JobFunction>
        <md:JobDisplay language="en">md:JobDisplay</md:JobDisplay>
        <md:BillingBlockOrder>0</md:BillingBlockOrder>
        <md:Character>md:Character</md:Character>
        <md:Guest>true</md:Guest>
      </md:Job>
      <md:Name>
        <md:DisplayName language="en">md:DisplayName</md:DisplayName>
        <md:SortName language="en">md:SortName</md:SortName>
        <md:FirstGivenName>md:FirstGivenName</md:FirstGivenName>
        <md:SecondGivenName>md:SecondGivenName</md:SecondGivenName>
        <md:FamilyName>md:FamilyName</md:FamilyName>
        <md:Suffix>md:Suffix</md:Suffix>
        <md:Moniker>md:Moniker</md:Moniker>
      </md:Name>
      <md:Identifier>
        <md:Identifier>md:Identifier</md:Identifier>
        <md:Namespace>md:Namespace</md:Namespace>
        <md:ReferenceLocation>http://tempuri.org</md:ReferenceLocation>
      </md:Identifier>
      <md:Gender>male</md:Gender>
    </md:People>
    <md:CountryOfOrigin>
      <md:country>US</md:country>
    </md:CountryOfOrigin>
    <md:PrimarySpokenLanguage>en</md:PrimarySpokenLanguage>
    <md:AssociatedOrg organizationID="" role="">
      <md:DisplayName>md:DisplayName</md:DisplayName>
      <md:SortName>md:SortName</md:SortName>
    </md:AssociatedOrg>
    <md:SequenceInfo>
      <md:Number>0</md:Number>
      <md:HouseSequence>md:HouseSequence</md:HouseSequence>
    </md:SequenceInfo>
    
  </dece:BasicData>
 
</dece:BasicAsset>]]></con:request><con:assertion type="GroovyScriptAssertion" disabled="true"><con:configuration><scriptText>


	assert ((com.eviware.soapui.support.types.StringList)messageExchange.responseHeaders["#status#"]).containsValue("HTTP/1.1 405 Method Not Allowed")
		
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>nodeId</con:name><con:value>urn:dece:org:org:dece:9</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:FILE:AL_BrazaFileNumber_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/CON_concat.pem</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>716863085</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:FILE:AL_BrazaFileNumber_716863085.txt</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2a000067-519a-4434-bf49-7bcf69ae4ef7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fa8982b6-e504-4291-92b6-861bf2fe04b4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>894443b8-7552-46f7-88cd-10f8814d7fac</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10024_MetadataBasicList_METH_Invocation_with_method_Delete" searchProperties="true" id="b9f1f16b-0a49-498f-a736-844ba2f309e1"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="494671a2-4818-4391-a1c1-ff0d98691fe3"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("Delete MetadataList");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="Delete MetadataList"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" methodName="DELETE MetadataBasicList" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete MetadataList" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!--Sample XML file generated by XMLSpy v2008 sp1 (http://www.altova.com)-->
<dece:BasicAsset xsi:schemaLocation="http://www.decellc.org/schema/2010/10/dece Coordinator%20Interface%20Schema-v0171.xsd" xmlns:dece="http://www.decellc.org/schema/2011/08/coordinator" xmlns:md="http://www.movielabs.com/md" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<dece:BasicData ContentID="urn:dece:cid:ISAN:1111-3MDP-2222-2222-G-2222-2222-Q">
		<md:UpdateNum>1</md:UpdateNum>
		<md:LocalizedInfo default="true" language="en-us">
			<md:TitleDisplay19>String</md:TitleDisplay19>
			<md:TitleDisplay60>String</md:TitleDisplay60>
			<md:TitleSort>String</md:TitleSort>
			<md:ArtReference resolution="String">http://www.altova.com</md:ArtReference>
			<md:ArtReference resolution="String">http://www.altova.com</md:ArtReference>
			<md:Summary190 cast="true">String</md:Summary190>
			<md:Summary400 cast="true">String</md:Summary400>
			<md:Summary4000 cast="true">String</md:Summary4000>
			<md:DisplayIndicators>CC</md:DisplayIndicators>
			<md:DisplayIndicators>CC</md:DisplayIndicators>
			<md:Genre>String</md:Genre>
			<md:Genre>String</md:Genre>
			<md:Keyword>String</md:Keyword>
			<md:Keyword>String</md:Keyword>
			<md:VersionNotes>String</md:VersionNotes>
			<md:Region>
				<md:country>AA</md:country>
			</md:Region>
			<md:Region>
				<md:country>AA</md:country>
			</md:Region>
			<md:OriginalTitle>String</md:OriginalTitle>
			<md:CopyrightLine>String</md:CopyrightLine>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction scheme="String">String</md:JobFunction>
					<md:JobDisplay>String</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String</md:Character>
					<md:Character>String</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Job>
					<md:JobFunction scheme="String">String</md:JobFunction>
					<md:JobDisplay>String</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String</md:Character>
					<md:Character>String</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Name>
					<md:DisplayName>String</md:DisplayName>
					<md:SortName>String</md:SortName>
					<md:FirstGivenName>String</md:FirstGivenName>
					<md:SecondGivenName>String</md:SecondGivenName>
					<md:FamilyName>String</md:FamilyName>
					<md:Suffix>String</md:Suffix>
					<md:Moniker>String</md:Moniker>
				</md:Name>
				<md:Identifier>
					<md:Identifier>String</md:Identifier>
					<md:Namespace>String</md:Namespace>
					<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Identifier>
					<md:Identifier>String</md:Identifier>
					<md:Namespace>String</md:Namespace>
					<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Gender>male</md:Gender>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction scheme="String">String</md:JobFunction>
					<md:JobDisplay>String</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String</md:Character>
					<md:Character>String</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Job>
					<md:JobFunction scheme="String">String</md:JobFunction>
					<md:JobDisplay>String</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String</md:Character>
					<md:Character>String</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Name>
					<md:DisplayName>String</md:DisplayName>
					<md:SortName>String</md:SortName>
					<md:FirstGivenName>String</md:FirstGivenName>
					<md:SecondGivenName>String</md:SecondGivenName>
					<md:FamilyName>String</md:FamilyName>
					<md:Suffix>String</md:Suffix>
					<md:Moniker>String</md:Moniker>
				</md:Name>
				<md:Identifier>
					<md:Identifier>String</md:Identifier>
					<md:Namespace>String</md:Namespace>
					<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Identifier>
					<md:Identifier>String</md:Identifier>
					<md:Namespace>String</md:Namespace>
					<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Gender>male</md:Gender>
			</md:PeopleLocal>
		</md:LocalizedInfo>
		<md:LocalizedInfo default="true" language="en-us">
			<md:TitleDisplay19>String</md:TitleDisplay19>
			<md:TitleDisplay60>String</md:TitleDisplay60>
			<md:TitleSort>String</md:TitleSort>
			<md:ArtReference resolution="String">http://www.altova.com</md:ArtReference>
			<md:ArtReference resolution="String">http://www.altova.com</md:ArtReference>
			<md:Summary190 cast="true">String</md:Summary190>
			<md:Summary400 cast="true">String</md:Summary400>
			<md:Summary4000 cast="true">String</md:Summary4000>
			<md:DisplayIndicators>CC</md:DisplayIndicators>
			<md:DisplayIndicators>CC</md:DisplayIndicators>
			<md:Genre>String</md:Genre>
			<md:Genre>String</md:Genre>
			<md:Keyword>String</md:Keyword>
			<md:Keyword>String</md:Keyword>
			<md:VersionNotes>String</md:VersionNotes>
			<md:Region>
				<md:country>AA</md:country>
			</md:Region>
			<md:Region>
				<md:country>AA</md:country>
			</md:Region>
			<md:OriginalTitle>String</md:OriginalTitle>
			<md:CopyrightLine>String</md:CopyrightLine>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction scheme="String">String</md:JobFunction>
					<md:JobDisplay>String</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String</md:Character>
					<md:Character>String</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Job>
					<md:JobFunction scheme="String">String</md:JobFunction>
					<md:JobDisplay>String</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String</md:Character>
					<md:Character>String</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Name>
					<md:DisplayName>String</md:DisplayName>
					<md:SortName>String</md:SortName>
					<md:FirstGivenName>String</md:FirstGivenName>
					<md:SecondGivenName>String</md:SecondGivenName>
					<md:FamilyName>String</md:FamilyName>
					<md:Suffix>String</md:Suffix>
					<md:Moniker>String</md:Moniker>
				</md:Name>
				<md:Identifier>
					<md:Identifier>String</md:Identifier>
					<md:Namespace>String</md:Namespace>
					<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Identifier>
					<md:Identifier>String</md:Identifier>
					<md:Namespace>String</md:Namespace>
					<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Gender>male</md:Gender>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction scheme="String">String</md:JobFunction>
					<md:JobDisplay>String</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String</md:Character>
					<md:Character>String</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Job>
					<md:JobFunction scheme="String">String</md:JobFunction>
					<md:JobDisplay>String</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String</md:Character>
					<md:Character>String</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Name>
					<md:DisplayName>String</md:DisplayName>
					<md:SortName>String</md:SortName>
					<md:FirstGivenName>String</md:FirstGivenName>
					<md:SecondGivenName>String</md:SecondGivenName>
					<md:FamilyName>String</md:FamilyName>
					<md:Suffix>String</md:Suffix>
					<md:Moniker>String</md:Moniker>
				</md:Name>
				<md:Identifier>
					<md:Identifier>String</md:Identifier>
					<md:Namespace>String</md:Namespace>
					<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Identifier>
					<md:Identifier>String</md:Identifier>
					<md:Namespace>String</md:Namespace>
					<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Gender>male</md:Gender>
			</md:PeopleLocal>
		</md:LocalizedInfo>
		<md:RunLength>P1Y2M3DT10H30M0S</md:RunLength>
		<md:ReleaseYear>2001</md:ReleaseYear>
		<md:ReleaseDate>1967-08-13</md:ReleaseDate>
		<md:ReleaseHistory>
			<md:ReleaseType>String</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">1967-08-13</md:Date>
			<md:Description>String</md:Description>
			<md:ReleaseOrg organizationID="String">
				<md:DisplayName>String</md:DisplayName>
				<md:SortName>String</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:ReleaseHistory>
			<md:ReleaseType>String</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">1967-08-13</md:Date>
			<md:Description>String</md:Description>
			<md:ReleaseOrg organizationID="String">
				<md:DisplayName>String</md:DisplayName>
				<md:SortName>String</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:WorkType>String</md:WorkType>
		<md:PictureColorType>color</md:PictureColorType>
		<md:PictureFormat>String</md:PictureFormat>
		<md:ThreeD>true</md:ThreeD>
		<md:AltIdentifier>
			<md:Namespace>String</md:Namespace>
			<md:Identifier>String</md:Identifier>
			<md:Location>http://www.altova.com</md:Location>
		</md:AltIdentifier>
		<md:AltIdentifier>
			<md:Namespace>String</md:Namespace>
			<md:Identifier>String</md:Identifier>
			<md:Location>http://www.altova.com</md:Location>
		</md:AltIdentifier>
		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>MPAA</md:System>
        			<md:Value>PG-13</md:Value>
        			<md:LinkToLogo>http://www.mpaa.org/_images/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet>
<!--		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>TVPG</md:System>
        			<md:Value>TV-Y7</md:Value>
        			<md:LinkToLogo>http://www.tvguidelines.org/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet> -->
<!--		<md:RatingSet>
			<md:NotRated>true</md:NotRated>
			<md:AdultContent>true</md:AdultContent>
		</md:RatingSet> -->
		<md:People>
			<md:Job>
				<md:JobFunction scheme="String">String</md:JobFunction>
				<md:JobDisplay>String</md:JobDisplay>
				<md:BillingBlockOrder>0</md:BillingBlockOrder>
				<md:Character>String</md:Character>
				<md:Character>String</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="String">String</md:JobFunction>
				<md:JobDisplay>String</md:JobDisplay>
				<md:BillingBlockOrder>0</md:BillingBlockOrder>
				<md:Character>String</md:Character>
				<md:Character>String</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String</md:DisplayName>
				<md:SortName>String</md:SortName>
				<md:FirstGivenName>String</md:FirstGivenName>
				<md:SecondGivenName>String</md:SecondGivenName>
				<md:FamilyName>String</md:FamilyName>
				<md:Suffix>String</md:Suffix>
				<md:Moniker>String</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String</md:Identifier>
				<md:Namespace>String</md:Namespace>
				<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Identifier>
				<md:Identifier>String</md:Identifier>
				<md:Namespace>String</md:Namespace>
				<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:People>
			<md:Job>
				<md:JobFunction scheme="String">String</md:JobFunction>
				<md:JobDisplay>String</md:JobDisplay>
				<md:BillingBlockOrder>0</md:BillingBlockOrder>
				<md:Character>String</md:Character>
				<md:Character>String</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="String">String</md:JobFunction>
				<md:JobDisplay>String</md:JobDisplay>
				<md:BillingBlockOrder>0</md:BillingBlockOrder>
				<md:Character>String</md:Character>
				<md:Character>String</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String</md:DisplayName>
				<md:SortName>String</md:SortName>
				<md:FirstGivenName>String</md:FirstGivenName>
				<md:SecondGivenName>String</md:SecondGivenName>
				<md:FamilyName>String</md:FamilyName>
				<md:Suffix>String</md:Suffix>
				<md:Moniker>String</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String</md:Identifier>
				<md:Namespace>String</md:Namespace>
				<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Identifier>
				<md:Identifier>String</md:Identifier>
				<md:Namespace>String</md:Namespace>
				<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:CountryOfOrigin>
			<md:country>AA</md:country>
		</md:CountryOfOrigin>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:SequenceInfo>
			<md:Number>0</md:Number>
			<md:HouseSequence>String</md:HouseSequence>
		</md:SequenceInfo>
		<md:Parent relationshipType="ispieceof">
			<md:ParentContentID>http://www.altova.com</md:ParentContentID>
		</md:Parent>
		<md:Parent relationshipType="ispieceof">
			<md:ParentContentID>http://www.altova.com</md:ParentContentID>
		</md:Parent>
	</dece:BasicData>
	<dece:Status>
		<dece:CurrentStatus>
			<dece:Status>urn:dece:type:status:active</dece:Status>
			<dece:StatusDate>2001-12-17T09:30:47.0Z</dece:StatusDate>
			<dece:StatusModifiedBy>urn:dece:</dece:StatusModifiedBy>
			<dece:StatusDescription>String</dece:StatusDescription>
		</dece:CurrentStatus>
		<dece:StatusHistory>
			<dece:PriorStatus>
				<dece:Status>urn:dece:type:status:active</dece:Status>
				<dece:StatusDate>2001-12-17T09:30:47.0Z</dece:StatusDate>
				<dece:StatusModifiedBy>urn:dece:</dece:StatusModifiedBy>
				<dece:StatusDescription>String</dece:StatusDescription>
			</dece:PriorStatus>
			<dece:PriorStatus>
				<dece:Status>urn:dece:type:status:active</dece:Status>
				<dece:StatusDate>2001-12-17T09:30:47.0Z</dece:StatusDate>
				<dece:StatusModifiedBy>urn:dece:</dece:StatusModifiedBy>
				<dece:StatusDescription>String</dece:StatusDescription>
			</dece:PriorStatus>
		</dece:StatusHistory>
	</dece:Status>
</dece:BasicAsset>
]]></con:request><con:assertion type="GroovyScriptAssertion" disabled="true"><con:configuration><scriptText>


	assert ((com.eviware.soapui.support.types.StringList)messageExchange.responseHeaders["#status#"]).containsValue("HTTP/1.1 405 Method Not Allowed")
		
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>nodeId</con:name><con:value>urn:dece:org:org:dece:9</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_BrazaFileNumber_23667.txt</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/CON_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ca52365b-46bb-4b5a-b770-1c5c47f3b5d8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>494671a2-4818-4391-a1c1-ff0d98691fe3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10025_MetadataBasicList_METH_Invocation_with_method_GET" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="a64c596e-6fc2-4a60-ba4b-66487961f0d4"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET MetadataList");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET MetadataList"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" methodName="GET MetadataBasicList" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET MetadataList" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="DECE" value="urn:dece:org:org:dece:2" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<!-- Build 6.2 Test Sample XML file generated by XMLSpy v2008 sp1 (http://www.altova.com)--><dece:BasicAsset 
xsi:schemaLocation="http://www.decellc.org/schema/2010/10/dece Coordinator%20Interface%20Schema-v0171.xsd" 

xmlns:dece="http://www.decellc.org/schema/2011/08/coordinator" 
xmlns:md="http://www.movielabs.com/md" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<!--<dece:BasicData ContentID="urn:dece:cid:FILE:STOPANDGO.TXT">-->
<dece:BasicData ContentID="urn:dece:cid:IMDB:Romeo and Juliet version 180280">
		<md:UpdateNum>180280</md:UpdateNum>
		<md:LocalizedInfo default="true" language="en-US">
			<md:TitleDisplay19>StrngTitleDis3nd</md:TitleDisplay19>
			<md:TitleDisplay60>StringTitleDisplay60</md:TitleDisplay60>
			<md:TitleSort>StringTitleSort</md:TitleSort>
			<md:ArtReference resolution="13002x13002">http://www.altova2.com</md:ArtReference>
			<md:Summary190 cast="true">StringSummary190</md:Summary190>
			<md:Summary400 cast="true">StringSummary400</md:Summary400>
			<md:Summary4000 cast="true">StringSummary4000</md:Summary4000>
			<md:DisplayIndicators>CC</md:DisplayIndicators>
			<md:DisplayIndicators>DD</md:DisplayIndicators>
			<md:Genre>Action</md:Genre>
			<md:Genre>Horror</md:Genre>
			<md:Keyword>StringKeyword</md:Keyword>
			<md:VersionNotes>String</md:VersionNotes>
			<md:Region>
				<md:country>AA</md:country>
			</md:Region>
			<md:Region>
				<md:country>US</md:country>
			</md:Region>
			<md:OriginalTitle>StringOriginalTitle</md:OriginalTitle>
			<md:CopyrightLine>StringCopyrightLine</md:CopyrightLine>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction scheme="string">4.36</md:JobFunction>
					<md:JobDisplay>Visual Effects Artist</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String1</md:Character>
					<md:Character>String122</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Name>
					<md:DisplayName>String</md:DisplayName>
					<md:SortName>String</md:SortName>
					<md:FirstGivenName>String</md:FirstGivenName>
					<md:SecondGivenName>String</md:SecondGivenName>
					<md:FamilyName>String</md:FamilyName>
					<md:Suffix>String</md:Suffix>
					<md:Moniker>String</md:Moniker>
				</md:Name>
				<md:Identifier>
					<md:Identifier>String1</md:Identifier>
					<md:Namespace>String1</md:Namespace>
					<md:ReferenceLocation>http://www.altova1.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Gender>male</md:Gender>
			</md:PeopleLocal>
		</md:LocalizedInfo>
		<md:RunLength>P1Y2M3DT10H30M0S</md:RunLength>
		<md:ReleaseYear>2001</md:ReleaseYear>
		<md:ReleaseDate>2010-08-13</md:ReleaseDate>
		<md:ReleaseHistory>
			<md:ReleaseType>DVD</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">2010-08-13</md:Date>
			<md:Description>String324342342</md:Description>
			<md:ReleaseOrg organizationID="Stringggfsg">
				<md:DisplayName>Stringsgs</md:DisplayName>
				<md:SortName>Stringsdgsdf</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:ReleaseHistory>
			<md:ReleaseType>Hospitality</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">2010-08-13</md:Date>
			<md:Description>String5465464</md:Description>
			<md:ReleaseOrg organizationID="String456456">
				<md:DisplayName>String45645633</md:DisplayName>
				<md:SortName>String34534533</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:WorkType>Album</md:WorkType>
		<md:PictureColorType>color</md:PictureColorType>
		<md:PictureFormat>Letterbox</md:PictureFormat>
		<md:ThreeD>true</md:ThreeD>
		<md:AltIdentifier>
			<md:Namespace>String</md:Namespace>
			<md:Identifier>String</md:Identifier>
			<md:Location>http://www.altova.com</md:Location>
		</md:AltIdentifier>
		<md:AltIdentifier>
			<md:Namespace>String1221</md:Namespace>
			<md:Identifier>String1221</md:Identifier>
			<md:Location>http://www.altova122121.com</md:Location>
		</md:AltIdentifier>
		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>MPAA</md:System>
        			<md:Value>PG-13</md:Value>
        			<md:LinkToLogo>http://www.mpaa.org/_images/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet>
<!--		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>TVPG</md:System>
        			<md:Value>TV-Y7</md:Value>
        			<md:LinkToLogo>http://www.tvguidelines.org/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet> -->
<!--		<md:RatingSet>
			<md:NotRated>true</md:NotRated>
			<md:AdultContent>true</md:AdultContent>
		</md:RatingSet> -->
		<md:People>
			<md:Job>
				<md:JobFunction scheme="string">27.13</md:JobFunction>
				<md:JobDisplay>String55</md:JobDisplay>
				<md:BillingBlockOrder>55</md:BillingBlockOrder>
				<md:Character>String55</md:Character>
				<md:Character>String55222</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="string">28.2</md:JobFunction>
				<md:JobDisplay>String66</md:JobDisplay>
				<md:BillingBlockOrder>66</md:BillingBlockOrder>
				<md:Character>String66</md:Character>
				<md:Character>String62126</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String77</md:DisplayName>
				<md:SortName>String77</md:SortName>
				<md:FirstGivenName>String77</md:FirstGivenName>
				<md:SecondGivenName>String77</md:SecondGivenName>
				<md:FamilyName>String77</md:FamilyName>
				<md:Suffix>String77</md:Suffix>
				<md:Moniker>String77</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String88</md:Identifier>
				<md:Namespace>String</md:Namespace>
				<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:People>
			<md:Job>
				<md:JobFunction scheme="String">28</md:JobFunction>
				<md:JobDisplay>String99</md:JobDisplay>
				<md:BillingBlockOrder>99</md:BillingBlockOrder>
				<md:Character>String99</md:Character>
				<md:Character>Strindfsdffdg99</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="String">27.14</md:JobFunction>
				<md:JobDisplay>String111</md:JobDisplay>
				<md:BillingBlockOrder>111</md:BillingBlockOrder>
				<md:Character>String111</md:Character>
				<md:Character>String111wrwewewewe</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String222</md:DisplayName>
				<md:SortName>String222</md:SortName>
				<md:FirstGivenName>String222</md:FirstGivenName>
				<md:SecondGivenName>String222</md:SecondGivenName>
				<md:FamilyName>String222</md:FamilyName>
				<md:Suffix>String222</md:Suffix>
				<md:Moniker>String222</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String333</md:Identifier>
				<md:Namespace>String333</md:Namespace>
				<md:ReferenceLocation>http://www.altova333.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Identifier>
				<md:Identifier>String444</md:Identifier>
				<md:Namespace>String444</md:Namespace>
				<md:ReferenceLocation>http://www.altova444.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:CountryOfOrigin>
			<md:country>AA</md:country>
		</md:CountryOfOrigin>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:SequenceInfo>
			<md:Number>0</md:Number>
			<md:HouseSequence>String</md:HouseSequence>
		</md:SequenceInfo>
		<md:Parent relationshipType="ispieceof">
		<!--	<md:ParentContentID>urn:dece:cid:org:mystudio:0067</md:ParentContentID>-->
			<md:ParentContentID>urn:dece:cid:org:mystudio:0005</md:ParentContentID> 
		</md:Parent>
	</dece:BasicData>
	<dece:ResourceStatus>
		<dece:Current>
			<dece:Value>urn:dece:type:status:active</dece:Value>
			<dece:Description>2010-08-01T09:30:47.0Z</dece:Description>
		</dece:Current>
		<dece:History>
			<dece:Prior>
				<dece:Value>urn:dece:type:status:suspended</dece:Value>
				<dece:Description>temp suspension</dece:Description>
			</dece:Prior>
			<dece:Prior>
				<dece:Value>urn:dece:type:status:active</dece:Value>
				<dece:Description>active</dece:Description>
			</dece:Prior>
		</dece:History>
	</dece:ResourceStatus>
</dece:BasicAsset>]]></con:request><con:assertion type="GroovyScriptAssertion" disabled="true"><con:configuration><scriptText>


	assert ((com.eviware.soapui.support.types.StringList)messageExchange.responseHeaders["#status#"]).containsValue("HTTP/1.1 405 Method Not Allowed")
		
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>nodeId</con:name><con:value>urn:dece:org:org:dece:2</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:ISSN:3297-7017</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/CON_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>34543e49-569c-4ea3-aef8-72a77db98207</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a64c596e-6fc2-4a60-ba4b-66487961f0d4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10026_MetadataBasicList_METH_Invocation_with_method_OPTION" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="39a718d7-0360-4928-8a7d-81bafb59815e"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("Option MetadataBasicList");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="Option MetadataBasicList"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" methodName="OPTION MetadataBasciList" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Option MetadataBasicList" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="DECE" value="${#TestCase#nodeId}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!--Sample XML file generated by XMLSpy v2008 sp1 (http://www.altova.com)-->
<dece:BasicAsset xsi:schemaLocation="http://www.decellc.org/schema/2010/10/dece Coordinator%20Interface%20Schema-v0171.xsd" xmlns:dece="http://www.decellc.org/schema/2011/08/coordinator" xmlns:md="http://www.movielabs.com/md" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<dece:BasicData ContentID="urn:dece:cid:ISAN:1111-3MDP-2222-2222-G-2222-2222-Q">
		<md:UpdateNum>1</md:UpdateNum>
		<md:LocalizedInfo default="true" language="en-us">
			<md:TitleDisplay19>String</md:TitleDisplay19>
			<md:TitleDisplay60>String</md:TitleDisplay60>
			<md:TitleSort>String</md:TitleSort>
			<md:ArtReference resolution="String">http://www.altova.com</md:ArtReference>
			<md:ArtReference resolution="String">http://www.altova.com</md:ArtReference>
			<md:Summary190 cast="true">String</md:Summary190>
			<md:Summary400 cast="true">String</md:Summary400>
			<md:Summary4000 cast="true">String</md:Summary4000>
			<md:DisplayIndicators>CC</md:DisplayIndicators>
			<md:DisplayIndicators>CC</md:DisplayIndicators>
			<md:Genre>String</md:Genre>
			<md:Genre>String</md:Genre>
			<md:Keyword>String</md:Keyword>
			<md:Keyword>String</md:Keyword>
			<md:VersionNotes>String</md:VersionNotes>
			<md:Region>
				<md:country>AA</md:country>
			</md:Region>
			<md:Region>
				<md:country>AA</md:country>
			</md:Region>
			<md:OriginalTitle>String</md:OriginalTitle>
			<md:CopyrightLine>String</md:CopyrightLine>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction scheme="String">String</md:JobFunction>
					<md:JobDisplay>String</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String</md:Character>
					<md:Character>String</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Job>
					<md:JobFunction scheme="String">String</md:JobFunction>
					<md:JobDisplay>String</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String</md:Character>
					<md:Character>String</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Name>
					<md:DisplayName>String</md:DisplayName>
					<md:SortName>String</md:SortName>
					<md:FirstGivenName>String</md:FirstGivenName>
					<md:SecondGivenName>String</md:SecondGivenName>
					<md:FamilyName>String</md:FamilyName>
					<md:Suffix>String</md:Suffix>
					<md:Moniker>String</md:Moniker>
				</md:Name>
				<md:Identifier>
					<md:Identifier>String</md:Identifier>
					<md:Namespace>String</md:Namespace>
					<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Identifier>
					<md:Identifier>String</md:Identifier>
					<md:Namespace>String</md:Namespace>
					<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Gender>male</md:Gender>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction scheme="String">String</md:JobFunction>
					<md:JobDisplay>String</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String</md:Character>
					<md:Character>String</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Job>
					<md:JobFunction scheme="String">String</md:JobFunction>
					<md:JobDisplay>String</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String</md:Character>
					<md:Character>String</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Name>
					<md:DisplayName>String</md:DisplayName>
					<md:SortName>String</md:SortName>
					<md:FirstGivenName>String</md:FirstGivenName>
					<md:SecondGivenName>String</md:SecondGivenName>
					<md:FamilyName>String</md:FamilyName>
					<md:Suffix>String</md:Suffix>
					<md:Moniker>String</md:Moniker>
				</md:Name>
				<md:Identifier>
					<md:Identifier>String</md:Identifier>
					<md:Namespace>String</md:Namespace>
					<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Identifier>
					<md:Identifier>String</md:Identifier>
					<md:Namespace>String</md:Namespace>
					<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Gender>male</md:Gender>
			</md:PeopleLocal>
		</md:LocalizedInfo>
		<md:LocalizedInfo default="true" language="en-us">
			<md:TitleDisplay19>String</md:TitleDisplay19>
			<md:TitleDisplay60>String</md:TitleDisplay60>
			<md:TitleSort>String</md:TitleSort>
			<md:ArtReference resolution="String">http://www.altova.com</md:ArtReference>
			<md:ArtReference resolution="String">http://www.altova.com</md:ArtReference>
			<md:Summary190 cast="true">String</md:Summary190>
			<md:Summary400 cast="true">String</md:Summary400>
			<md:Summary4000 cast="true">String</md:Summary4000>
			<md:DisplayIndicators>CC</md:DisplayIndicators>
			<md:DisplayIndicators>CC</md:DisplayIndicators>
			<md:Genre>String</md:Genre>
			<md:Genre>String</md:Genre>
			<md:Keyword>String</md:Keyword>
			<md:Keyword>String</md:Keyword>
			<md:VersionNotes>String</md:VersionNotes>
			<md:Region>
				<md:country>AA</md:country>
			</md:Region>
			<md:Region>
				<md:country>AA</md:country>
			</md:Region>
			<md:OriginalTitle>String</md:OriginalTitle>
			<md:CopyrightLine>String</md:CopyrightLine>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction scheme="String">String</md:JobFunction>
					<md:JobDisplay>String</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String</md:Character>
					<md:Character>String</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Job>
					<md:JobFunction scheme="String">String</md:JobFunction>
					<md:JobDisplay>String</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String</md:Character>
					<md:Character>String</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Name>
					<md:DisplayName>String</md:DisplayName>
					<md:SortName>String</md:SortName>
					<md:FirstGivenName>String</md:FirstGivenName>
					<md:SecondGivenName>String</md:SecondGivenName>
					<md:FamilyName>String</md:FamilyName>
					<md:Suffix>String</md:Suffix>
					<md:Moniker>String</md:Moniker>
				</md:Name>
				<md:Identifier>
					<md:Identifier>String</md:Identifier>
					<md:Namespace>String</md:Namespace>
					<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Identifier>
					<md:Identifier>String</md:Identifier>
					<md:Namespace>String</md:Namespace>
					<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Gender>male</md:Gender>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction scheme="String">String</md:JobFunction>
					<md:JobDisplay>String</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String</md:Character>
					<md:Character>String</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Job>
					<md:JobFunction scheme="String">String</md:JobFunction>
					<md:JobDisplay>String</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String</md:Character>
					<md:Character>String</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Name>
					<md:DisplayName>String</md:DisplayName>
					<md:SortName>String</md:SortName>
					<md:FirstGivenName>String</md:FirstGivenName>
					<md:SecondGivenName>String</md:SecondGivenName>
					<md:FamilyName>String</md:FamilyName>
					<md:Suffix>String</md:Suffix>
					<md:Moniker>String</md:Moniker>
				</md:Name>
				<md:Identifier>
					<md:Identifier>String</md:Identifier>
					<md:Namespace>String</md:Namespace>
					<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Identifier>
					<md:Identifier>String</md:Identifier>
					<md:Namespace>String</md:Namespace>
					<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Gender>male</md:Gender>
			</md:PeopleLocal>
		</md:LocalizedInfo>
		<md:RunLength>P1Y2M3DT10H30M0S</md:RunLength>
		<md:ReleaseYear>2001</md:ReleaseYear>
		<md:ReleaseDate>1967-08-13</md:ReleaseDate>
		<md:ReleaseHistory>
			<md:ReleaseType>String</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">1967-08-13</md:Date>
			<md:Description>String</md:Description>
			<md:ReleaseOrg organizationID="String">
				<md:DisplayName>String</md:DisplayName>
				<md:SortName>String</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:ReleaseHistory>
			<md:ReleaseType>String</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">1967-08-13</md:Date>
			<md:Description>String</md:Description>
			<md:ReleaseOrg organizationID="String">
				<md:DisplayName>String</md:DisplayName>
				<md:SortName>String</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:WorkType>String</md:WorkType>
		<md:PictureColorType>color</md:PictureColorType>
		<md:PictureFormat>String</md:PictureFormat>
		<md:ThreeD>true</md:ThreeD>
		<md:AltIdentifier>
			<md:Namespace>String</md:Namespace>
			<md:Identifier>String</md:Identifier>
			<md:Location>http://www.altova.com</md:Location>
		</md:AltIdentifier>
		<md:AltIdentifier>
			<md:Namespace>String</md:Namespace>
			<md:Identifier>String</md:Identifier>
			<md:Location>http://www.altova.com</md:Location>
		</md:AltIdentifier>
		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>MPAA</md:System>
        			<md:Value>PG-13</md:Value>
        			<md:LinkToLogo>http://www.mpaa.org/_images/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet>
<!--		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>TVPG</md:System>
        			<md:Value>TV-Y7</md:Value>
        			<md:LinkToLogo>http://www.tvguidelines.org/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet> -->
<!--		<md:RatingSet>
			<md:NotRated>true</md:NotRated>
			<md:AdultContent>true</md:AdultContent>
		</md:RatingSet> -->
		<md:People>
			<md:Job>
				<md:JobFunction scheme="String">String</md:JobFunction>
				<md:JobDisplay>String</md:JobDisplay>
				<md:BillingBlockOrder>0</md:BillingBlockOrder>
				<md:Character>String</md:Character>
				<md:Character>String</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="String">String</md:JobFunction>
				<md:JobDisplay>String</md:JobDisplay>
				<md:BillingBlockOrder>0</md:BillingBlockOrder>
				<md:Character>String</md:Character>
				<md:Character>String</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String</md:DisplayName>
				<md:SortName>String</md:SortName>
				<md:FirstGivenName>String</md:FirstGivenName>
				<md:SecondGivenName>String</md:SecondGivenName>
				<md:FamilyName>String</md:FamilyName>
				<md:Suffix>String</md:Suffix>
				<md:Moniker>String</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String</md:Identifier>
				<md:Namespace>String</md:Namespace>
				<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Identifier>
				<md:Identifier>String</md:Identifier>
				<md:Namespace>String</md:Namespace>
				<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:People>
			<md:Job>
				<md:JobFunction scheme="String">String</md:JobFunction>
				<md:JobDisplay>String</md:JobDisplay>
				<md:BillingBlockOrder>0</md:BillingBlockOrder>
				<md:Character>String</md:Character>
				<md:Character>String</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="String">String</md:JobFunction>
				<md:JobDisplay>String</md:JobDisplay>
				<md:BillingBlockOrder>0</md:BillingBlockOrder>
				<md:Character>String</md:Character>
				<md:Character>String</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String</md:DisplayName>
				<md:SortName>String</md:SortName>
				<md:FirstGivenName>String</md:FirstGivenName>
				<md:SecondGivenName>String</md:SecondGivenName>
				<md:FamilyName>String</md:FamilyName>
				<md:Suffix>String</md:Suffix>
				<md:Moniker>String</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String</md:Identifier>
				<md:Namespace>String</md:Namespace>
				<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Identifier>
				<md:Identifier>String</md:Identifier>
				<md:Namespace>String</md:Namespace>
				<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:CountryOfOrigin>
			<md:country>AA</md:country>
		</md:CountryOfOrigin>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:SequenceInfo>
			<md:Number>0</md:Number>
			<md:HouseSequence>String</md:HouseSequence>
		</md:SequenceInfo>
		<md:Parent relationshipType="ispieceof">
			<md:ParentContentID>http://www.altova.com</md:ParentContentID>
		</md:Parent>
		<md:Parent relationshipType="ispieceof">
			<md:ParentContentID>http://www.altova.com</md:ParentContentID>
		</md:Parent>
	</dece:BasicData>
	<dece:Status>
		<dece:CurrentStatus>
			<dece:Status>urn:dece:type:status:active</dece:Status>
			<dece:StatusDate>2001-12-17T09:30:47.0Z</dece:StatusDate>
			<dece:StatusModifiedBy>urn:dece:</dece:StatusModifiedBy>
			<dece:StatusDescription>String</dece:StatusDescription>
		</dece:CurrentStatus>
		<dece:StatusHistory>
			<dece:PriorStatus>
				<dece:Status>urn:dece:type:status:active</dece:Status>
				<dece:StatusDate>2001-12-17T09:30:47.0Z</dece:StatusDate>
				<dece:StatusModifiedBy>urn:dece:</dece:StatusModifiedBy>
				<dece:StatusDescription>String</dece:StatusDescription>
			</dece:PriorStatus>
			<dece:PriorStatus>
				<dece:Status>urn:dece:type:status:active</dece:Status>
				<dece:StatusDate>2001-12-17T09:30:47.0Z</dece:StatusDate>
				<dece:StatusModifiedBy>urn:dece:</dece:StatusModifiedBy>
				<dece:StatusDescription>String</dece:StatusDescription>
			</dece:PriorStatus>
		</dece:StatusHistory>
	</dece:Status>
</dece:BasicAsset>
]]></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>


	assert ((com.eviware.soapui.support.types.StringList)messageExchange.responseHeaders["#status#"]).containsValue("HTTP/1.1 405 Method Not Allowed")
		

</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>nodeId</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:ISMN:979-0-060-${#TestCase#RandomNumberGenerated}-5</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:ISMN:979-0-060-${#TestCase#RandomNumberGenerated}-5</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>20630</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/CON_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>f9f142b1-4138-43d0-8c2c-3d5a05e88d13</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>39a718d7-0360-4928-8a7d-81bafb59815e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10027_MetadataBasicList_FUNC_DateFormat_Future_Date" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="96a1595b-0bee-41f9-949b-e9a80a11a204"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="21a8dcb9-9426-4d36-8e1f-9757935989f2"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_326115247.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">326115247</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>2015-06-14</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>62addd21-e934-4624-8388-1f70824b3095</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21a8dcb9-9426-4d36-8e1f-9757935989f2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10028_MetadataBasicList_FUNC_DateFormat_Current_SystemDate_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="166c1914-5b8a-441d-9aa3-8913e7ad4943"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="042673d3-8247-4b62-8e5e-1fa114ef856d"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Fetch system date"><con:settings/><con:config><script>import java.util.Date;
import groovy.time.TimeCategory

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

TimeZone.setDefault(TimeZone.getTimeZone('GMT+5:30'))
def today = new Date()
log.info today

use(TimeCategory) {
   tdate=today + 10.minutes
}
log.info tdate
def currentdate= tdate.format("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'")
log.info currentdate

tC.setPropertyValue("onorafter",URLEncoder.encode (currentdate, "UTF-8"));</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">981179</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>2014-03-24T20%3A50%3A03.072Z</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>63830df7-d6a0-42ef-b343-91c65fd53803</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>042673d3-8247-4b62-8e5e-1fa114ef856d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10029_MetadataBasicList_FUNC_DateFormat_Correct_YYYY" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="1db2836a-c0dd-490d-a874-bda96741c7d9"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="afd90acb-f3c1-417c-a4f6-2244c8cd9582"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_168401509.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">168401509</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>2013</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>45ba06d6-eced-49f2-9d66-634f10f87681</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>afd90acb-f3c1-417c-a4f6-2244c8cd9582</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10030_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="459b521e-ab07-4e20-8515-06c97c79de52"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_402738441.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">402738441</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>2013-06</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>459b521e-ab07-4e20-8515-06c97c79de52</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10031_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-DD" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="9eba95b2-e64b-4588-b2a3-acc402d17188"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_748410902.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">748410902</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>2013-06-12</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9eba95b2-e64b-4588-b2a3-acc402d17188</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10032_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-00" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="e88b77eb-f2d6-4f84-8523-fff85fcbc0b2"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="e9e09c41-ae01-4bff-882a-31b571b0c187"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_256526881.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">256526881</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>2013-05-12</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e9e09c41-ae01-4bff-882a-31b571b0c187</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10033_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-DDThh:mmTZD" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="c0170099-10de-48bd-9076-694852289e9b"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="2868d2ca-b2e5-4933-a85c-942527e67742"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_885987196.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">885987196</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>1997-07-16T19%3A45%2B01%3A00</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2868d2ca-b2e5-4933-a85c-942527e67742</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10034_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-DDT00:mmTZD" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="3e0eb005-4e05-441b-80d0-b23ee846428c"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_698690639.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">698690639</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>1997-07-16T00%3A23%2B01%3A00</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3e0eb005-4e05-441b-80d0-b23ee846428c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10035_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-DDT24:mmTZD" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="5285dc40-1260-4938-bdb0-dc0d73a5deb1"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="854b5d42-5709-45bd-bf55-aeba971dc6b3"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_780003449.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">780003449</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>1997-07-16T24%3A23%2B01%3A00</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>854b5d42-5709-45bd-bf55-aeba971dc6b3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10036_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-DDThh:00TZD" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="f97f5bea-94c0-43a8-9259-85059242d55f"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_915063845.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">915063845</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>1997-07-16T19%3A00%2B01%3A00</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f97f5bea-94c0-43a8-9259-85059242d55f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10037_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-DDThh:45TZD" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="f034d2ff-3142-4feb-bb77-ff3d9cf1c9ff"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_537016039.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">537016039</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>1997-07-16T19%3A45%2B01%3A00</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f034d2ff-3142-4feb-bb77-ff3d9cf1c9ff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10038_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-DDThh:mm:ssTZD" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="3ccc8489-0ed0-4611-8450-1e0498916178"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_317914159.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">317914159</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>1997-07-16T19%3A20%3A30%2B01%3A00</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3ccc8489-0ed0-4611-8450-1e0498916178</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10039_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-DDThh:mm:00TZD" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="2901b514-9b4e-4494-9cb5-41a5e461af1a"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="d8cdcfc2-a69e-4425-ad34-48d8c0f9cf68"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_672776681.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">672776681</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>2013-06-25T19%3A20%3A00%2B01%3A00</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d8cdcfc2-a69e-4425-ad34-48d8c0f9cf68</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10040_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-DDThh:mm:45TZD" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="8aee0d37-5214-446d-9c08-ad297f4397e4"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="9134b0a7-e408-4044-8b00-f3cbb6439ac9"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_167126378.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">167126378</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>2013-06-25T19%3A20%3A45%2B01%3A00</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9134b0a7-e408-4044-8b00-f3cbb6439ac9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10041_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-DDThh:mm:ss.sTZD" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="99401d21-5994-4e62-8815-d969cf4047a8"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="edbd7358-ad9f-4614-a940-a6cf1eb48528"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_876436287.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">876436287</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>1997-07-19T15%3A08%3A25.45%2B01%3A00</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>edbd7358-ad9f-4614-a940-a6cf1eb48528</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10042_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-DDThh:mm:ss.00TZD" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="937e4677-9d26-4ac2-a215-ae77ac418f95"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_407812205.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">407812205</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>2013-06-25T19%3A20%3A30.00%2B01%3A00</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>937e4677-9d26-4ac2-a215-ae77ac418f95</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10043_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-DDThh:mm:ss.45TZD" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="d9042596-5f85-472d-a195-fd6dce02bbb9"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_666841987.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">666841987</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>2013-06-25T19%3A20%3A30.45%2B01%3A00</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9042596-5f85-472d-a195-fd6dce02bbb9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10044_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-DDThh:mm:ss.0TZD" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="3590414a-83b2-47d6-9663-68b8604b8963"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_453902213.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">453902213</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>2013-06-25T19%3A20%3A30.0%2B01%3A00</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3590414a-83b2-47d6-9663-68b8604b8963</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10045_MetadataBasicList_FUNC_with_Null_DateFormat_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="21c61a21-878e-42d2-8320-224f59dcb7a8"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="5d37d998-e725-4fa0-91c7-de389492564e"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">272253</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5d37d998-e725-4fa0-91c7-de389492564e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10046_MetadataBasicList_FUNC_DateFormat_Correct_YYYYY_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="694507e7-008a-431d-96a2-1c398df0ef41"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">656704</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>20133</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>694507e7-008a-431d-96a2-1c398df0ef41</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10047_MetadataBasicList_FUNC_DateFormat_YYY_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="ecc2d7e7-80f3-45de-863b-9b2225227d74"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">129081</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>201</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecc2d7e7-80f3-45de-863b-9b2225227d74</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10048_MetadataBasicList_FUNC_DateFormat_YY_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="09a4b393-64dc-449e-9405-2aac5202eb58"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">903709</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>20</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>09a4b393-64dc-449e-9405-2aac5202eb58</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10049_MetadataBasicList_FUNC_DateFormat_Y_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="15159e4d-f739-44b8-8d84-7990b6de7d25"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">701233</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>2</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>15159e4d-f739-44b8-8d84-7990b6de7d25</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10050_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MMM_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="269217a2-ea0c-4fc8-9128-0ce5594d6684"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">790961</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>2013-062</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>269217a2-ea0c-4fc8-9128-0ce5594d6684</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10051_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-M_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="15cc05ec-7d3a-4559-8abd-c377141f6540"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">803841</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>2013-6</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>15cc05ec-7d3a-4559-8abd-c377141f6540</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10052_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-M-D_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="2d525654-cd9b-4a5b-9390-834a0283e6db"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">802570</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>2013-5-3</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d525654-cd9b-4a5b-9390-834a0283e6db</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10053_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-0_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="19e9f5bf-48c9-4b09-a89c-1564d653434c"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">119717</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>2013-05-0</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>19e9f5bf-48c9-4b09-a89c-1564d653434c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10054_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-2_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="86d41f6e-d95c-4c9b-a9a6-8743b19777b4"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">236500</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>2013-05-2</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>86d41f6e-d95c-4c9b-a9a6-8743b19777b4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10055_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-02-29_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="3a4d336c-f635-40ca-ac3a-941899c03052"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">628559</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>2013-02-29</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3a4d336c-f635-40ca-ac3a-941899c03052</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10056_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-38_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="dea7614b-debe-4a3b-b6ac-bdbc9eaf8131"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">268880</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>2013-04-38</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>dea7614b-debe-4a3b-b6ac-bdbc9eaf8131</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10057_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-312_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="7e729aa4-a386-4735-a98a-25725314bbe1"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">702138</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>2013-04-312</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7e729aa4-a386-4735-a98a-25725314bbe1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10058_MetadataBasicList_FUNC_DateFormat_YYYY_Feb_30th_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="45a7aa8c-40aa-4ceb-8bad-fe0b20ae5e12"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">405775</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>2013-20-30</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>45a7aa8c-40aa-4ceb-8bad-fe0b20ae5e12</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10059_MetadataBasicList_FUNC_DateFormat_YYYY_june_31th_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="1d15742c-c186-44b2-a5e5-b753831ca408"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">311047</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>2012-06-31</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1d15742c-c186-44b2-a5e5-b753831ca408</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10060_MetadataBasicList_FUNC_DateFormat_YYYY_Mar_38th_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="ebd0c49c-f54a-46e9-b6c9-1e5984713737"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet" id="2d067c0c-1239-4491-b155-f7ba63ca6896"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">820263</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>2012-03-38</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ebd0c49c-f54a-46e9-b6c9-1e5984713737</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d067c0c-1239-4491-b155-f7ba63ca6896</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10061_MetadataBasicList_FUNC_DateFormat_YYYY_April_31th_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="9a19dec7-69f5-421f-ad50-67a644db87ac"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">771441</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>2012-04-31</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9a19dec7-69f5-421f-ad50-67a644db87ac</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10062_MetadataBasicList_FUNC_DateFormat_YYYY_sept_31th_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="95cc3f1e-1284-4f3e-b1c0-509b87cc1aa0"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">939543</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>2012-09-31</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95cc3f1e-1284-4f3e-b1c0-509b87cc1aa0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10063_MetadataBasicList_FUNC_DateFormat_YYYY_Nov_31th_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="accad235-a951-4214-baf5-62af58e326af"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">601370</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>2012-11-31</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>accad235-a951-4214-baf5-62af58e326af</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10064_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-DDT0:mmTZD_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="7a015a5d-cbcf-44fa-8d7e-c1ee32187b06"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">947286</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>1997-07-16T0%3A23%2B01%3A00</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7a015a5d-cbcf-44fa-8d7e-c1ee32187b06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10065_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-DDT324:mmTZD_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="9fadea67-2f9d-4448-96d4-a04707a0dc85"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">759302</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>1997-07-16T324%3A23%2B01%3A00</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9fadea67-2f9d-4448-96d4-a04707a0dc85</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10066_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-DDT28:mmTZD_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="8b02327b-a162-4902-b75b-78c64b75465c"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">410531</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>1997-07-16T28%3A23%2B01%3A00</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8b02327b-a162-4902-b75b-78c64b75465c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10067_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-DDThh:0TZD_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="ce6b8c81-a498-46a3-9fb3-a67e3c73068a"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">538877</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>1997-07-16T19%3A0%2B01%3A00</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ce6b8c81-a498-46a3-9fb3-a67e3c73068a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10068_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-DDThh:60TZD_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="257fbd04-90af-4e6d-b726-b1b889535baf"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">452185</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>1997-07-16T19%3A60%2B01%3A00</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>257fbd04-90af-4e6d-b726-b1b889535baf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10069_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-DDThh:88TZD_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="d7605f16-56bd-4e79-9139-e13badcd8e4e"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">652569</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>1997-07-16T19%3A88%2B01%3A00</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d7605f16-56bd-4e79-9139-e13badcd8e4e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10070_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-DDThh:102TZD_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="407b6123-cf78-4937-96de-102a0a0adfb6"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">150276</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>1997-07-16T19%3A102%2B01%3A00</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>407b6123-cf78-4937-96de-102a0a0adfb6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10071_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-DDThh:mm:0TZD_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="44798835-0da0-4d83-a777-1d0199a828f2"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">551058</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>2013-06-25T19%3A20%3A0%2B01%3A00</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>44798835-0da0-4d83-a777-1d0199a828f2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10072_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-DDThh:mm:60TZD_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="a0972364-c5e2-4928-b5b9-3dc233c0399c"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">836353</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>2013-06-25T19%3A20%3A60%2B01%3A00</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a0972364-c5e2-4928-b5b9-3dc233c0399c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10073_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-DDThh:mm:80TZD_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="fe5d5242-c421-4139-9dea-c35d888ea129"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">956163</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>2013-06-25T19%3A20%3A80%2B01%3A00</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fe5d5242-c421-4139-9dea-c35d888ea129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10074_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-DDThh:mm:150TZD_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="74802b90-5606-41b0-abe2-6b13a9aa36b6"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">807434</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>2013-06-25T19%3A20%3A150%2B01%3A00</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>74802b90-5606-41b0-abe2-6b13a9aa36b6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10075_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-DDThh:mm:ss.1000TZD_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="3020f702-aa2a-469f-8b07-d905292f3861"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">747574</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>2013-06-25T19%3A20%3A30.1000%2B01%3A00</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3020f702-aa2a-469f-8b07-d905292f3861</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10076_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-DDThh:mm:ss.80000TZD_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="5090021f-04e3-422a-9dda-ef92e1225758"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-OnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">101946</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>2013-06-25T19%3A20%3A30.8000%2B01%3A00</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5090021f-04e3-422a-9dda-ef92e1225758</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10077_MetadataBasicList_FUNC_DateFormat_With_Offset_0_FilterCount_10" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="be58f4f7-8e43-4cfc-bc99-c143c9426299"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="1c0f8919-ee49-4707-bd49-48edba16c867"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-FilterOffset")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-FilterOffset")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_342915296.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">342915296</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>1997-07-16T19%3A20%3A30.45%2B01%3A00</con:value></con:property><con:property><con:name>offset</con:name><con:value>0</con:value></con:property><con:property><con:name>filtercount</con:name><con:value>10</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1c0f8919-ee49-4707-bd49-48edba16c867</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10078_MetadataBasicList_FUNC_DateFormat_With_Offset_8_FilterCount_20" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="b93b40dc-221c-4fa6-a770-d9e94235428f"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-FilterOffset")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-FilterOffset")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_103593156.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">103593156</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>1997-07-16T19%3A20%3A30.45%2B01%3A00</con:value></con:property><con:property><con:name>offset</con:name><con:value>8</con:value></con:property><con:property><con:name>filtercount</con:name><con:value>20</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b93b40dc-221c-4fa6-a770-d9e94235428f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10079_MetadataBasicList_FUNC_DateFormat_With_Offset_1000_FilterCount_20" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="ee259fc7-c286-4799-afe7-4c1e32a3d105"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-FilterOffset")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-FilterOffset")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_737742966.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">737742966</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>1997-07-16T19%3A20%3A30.45%2B01%3A00</con:value></con:property><con:property><con:name>offset</con:name><con:value>1000</con:value></con:property><con:property><con:name>filtercount</con:name><con:value>20</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ee259fc7-c286-4799-afe7-4c1e32a3d105</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10080_MetadataBasicList_FUNC_DateFormat_With_Offset_8_FilterCount_0_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="e2117f6c-e4ff-4a1e-989a-bd7e95916ca9"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-FilterOffset")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">101457</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>1997-07-16T19%3A20%3A30.45%2B01%3A00</con:value></con:property><con:property><con:name>offset</con:name><con:value>8</con:value></con:property><con:property><con:name>filtercount</con:name><con:value>0</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e2117f6c-e4ff-4a1e-989a-bd7e95916ca9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10081_MetadataBasicList_FUNC_DateFormat_With_Offset_0_FilterCount_0_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="20b3528e-ce81-4535-8535-8cae1ff49148"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="bbed71b2-0b66-425c-9be1-b36629650136"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-FilterOffset")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">847141</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>1997-07-16T19%3A20%3A30.45%2B01%3A00</con:value></con:property><con:property><con:name>offset</con:name><con:value>0</con:value></con:property><con:property><con:name>filtercount</con:name><con:value>0</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bbed71b2-0b66-425c-9be1-b36629650136</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10082_MetadataBasicList_FUNC_DateFormat_With_Offset_8_FilterCount_-9_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="dad53d31-6a83-4d27-adc8-35ec708eba73"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-FilterOffset")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">739960</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>1997-07-16T19%3A20%3A30.45%2B01%3A00</con:value></con:property><con:property><con:name>offset</con:name><con:value>8</con:value></con:property><con:property><con:name>filtercount</con:name><con:value>-9</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>dad53d31-6a83-4d27-adc8-35ec708eba73</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10083_MetadataBasicList_FUNC_DateFormat_With_Offset_-5_FilterCount_10_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="2141c30d-367b-4853-9c14-81bf8285ecdd"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-FilterOffset")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">535799</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>1997-07-16T19%3A20%3A30.45%2B01%3A00</con:value></con:property><con:property><con:name>offset</con:name><con:value>-5</con:value></con:property><con:property><con:name>filtercount</con:name><con:value>10</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2141c30d-367b-4853-9c14-81bf8285ecdd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10084_MetadataBasicList_FUNC_DateFormat_With_Offset_a_FilterCount_t_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="32250e16-ec54-40db-bc66-52112ff4844d"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-FilterOffset")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">195972</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>1997-07-16T19%3A20%3A30.45%2B01%3A00</con:value></con:property><con:property><con:name>offset</con:name><con:value>a</con:value></con:property><con:property><con:name>filtercount</con:name><con:value>t</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>32250e16-ec54-40db-bc66-52112ff4844d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10108_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-DDT00:mmTZD_UV-2672" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="31669c0f-bae5-4b8e-8fcf-9b925c10ef74"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-EncodedOnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataListGet" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-EncodedOnOrAfterMetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_260871414.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">260871414</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>1997-07-16T00%3A23%2B01%3A00</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3e0eb005-4e05-441b-80d0-b23ee846428c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10109_MetadataBasicList_FUNC_DateFormat_With_Offset_8_FilterCount_20_UV-2672" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="1d0db833-e3a2-4845-b494-85fbd8a3e5d7"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  tP.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("nodeid")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-EncodedFilterOffset")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataListGet" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-EncodedFilterOffset")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_584737841.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">584737841</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>400</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>onorafter</con:name><con:value>1997-07-16T19%3A20%3A30.45%2B01%3A00</con:value></con:property><con:property><con:name>offset</con:name><con:value>8</con:value></con:property><con:property><con:name>filtercount</con:name><con:value>20</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5379be80-75a5-48e4-b7df-76bad8e0ce2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e5e165d-a682-44cb-b8dd-b1334ad78d6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>950df241-15f0-4b5f-8da4-f881bd492b43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eca2b04f-f5f3-4eaf-8f75-608775dcdc6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b93b40dc-221c-4fa6-a770-d9e94235428f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>QC_TestPlanDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestLabDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestSet</con:name><con:value/></con:property><con:property><con:name>add</con:name><con:value>{a,b-> a+b}</con:value></con:property><con:property><con:name>add</con:name><con:value>{a,b-> a+b}</con:value></con:property><con:property><con:name>add</con:name></con:property><con:property><con:name>add</con:name></con:property><con:property><con:name>nodeid</con:name><con:value>nodeIdCON</con:value></con:property></con:properties><con:setupScript/><con:tearDownScript/><con:reportParameters/></con:testSuite><con:testSuite name="MetadataBasicList Different Roles"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">/opt/dece/Reports/Sprint 3.5.1/R4/BasicList</con:setting></con:settings><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10088_MetadataBasicList__PERM_Access_Control_Rights_Linked LASP_Successful" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="360d3014-6cda-4b19-a8a2-e554ba12a786"><con:settings/><con:testStep type="groovy" name="Copy of Groovy Script Set Node Role_Get"><con:settings/><con:config><script>


/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdLLASP"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdLLASP"));</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Del"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_309541210.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:lasp:linked</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:lasp:linked</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">309541210</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>f41dc6ce-a68e-4899-bc9a-9086f3369cce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>37bb0a43-8f45-4922-84c6-3775693b1bac</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7a30407a-302e-416b-9103-be9ca1960afe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7347b0c-495c-420c-9521-97cbb0d40c1a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3314f98f-6097-4195-b5d4-5d7fba6a7969</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>24300b71-2ef6-4f11-a57d-8eda571580cb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b6379b24-6b75-442e-8bde-630563ac44d3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>78086ba1-22b6-4d0a-8830-1467e648e300</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f4ff050c-9743-45df-888d-e7a8e4adafcf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10089_MetadataBasicList__PERM_Access_Control_Rights_Dynamic LASP_Successful" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Copy of Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDLASP"));</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDLASP"));</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Del"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_214603731.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:lasp:dynamic</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:lasp:dynamic</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">214603731</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c455fcf7-afcf-4867-a92a-23dd6f8111fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f3c5cdca-a97a-4aaa-a9e4-b104ffe28f04</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>baab281f-19d8-4b62-bf3e-110e6cc50441</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>49295237-99e1-4d4b-92e9-3e4eca75acf1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6fcb8bb4-1392-4154-996f-aab843d73366</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>df87fcc3-03b7-499e-80e5-1a7dbe36ca78</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>50b7946b-1e90-4b95-9151-ba0233947f41</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>90a2c1af-9e9e-4bfd-935f-5a8fbdfa5475</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e50a43c7-359b-48e0-9287-29807bc92ffc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10090_MetadataBasicList__PERM_Access_Control_Rights_Coordinator Customer Support_Successful" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="d87db207-f29b-4864-ac53-790305e0ffbc"><con:settings/><con:testStep type="groovy" name="Copy of Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCoordCS"));</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role" id="c6bdbc28-f72d-4cf6-840c-b6514fd84874"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCoordCS"));</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2" id="504d8dd9-8fb3-4625-a360-07e3b64273d4"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Del" disabled="true"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_389871804.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:coordinator:customersupport</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:coordinator:customersupport</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">389871804</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>023a3bfb-3f15-4b9f-8e0a-09f1ed867a42</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3732c7aa-a07c-493d-99de-f8b51466ce8b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b7eb95d1-6065-4334-a96b-e28160e75e3e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ecb2651e-5ff3-4af9-b8f8-51a6b594055b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b9fe3682-9be8-4707-b9d6-cd5a18dde7ed</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c32f4ead-7cf6-4556-926b-058f0108be7d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ce7d3b50-fde6-4b06-9f7d-b571a87c9d59</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>453a2ed9-1dd8-4425-b0df-46070b794b29</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>717e9071-9d64-4c0b-a8b5-b4e9d41e2b8d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c6bdbc28-f72d-4cf6-840c-b6514fd84874</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>504d8dd9-8fb3-4625-a360-07e3b64273d4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10091_MetadataBasicList__PERM_Access_Control_Rights_DECE_Portal_Successful" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Copy of Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportal"));</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportal"));</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Del"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_141773446.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:portal</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:portal</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">141773446</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>bc5b5df0-62b9-4791-8000-f92cc42fe032</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>56f4137e-0772-411f-99ed-6686ba2ef400</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>04679266-8f7e-4681-8b91-5147fbdbfc22</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8649c914-2bca-427c-87c2-56aa0d44c0d8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3e0c3929-b00c-4613-89f5-ba30bf752481</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8b990aa5-1241-4e35-9f19-7c671e7c47f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb4f28ea-ff67-4710-9fbf-0c3efdc24bee</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cbb31c61-c6d2-40f6-b18c-c63b010121c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>10a52c1f-48a3-45ed-b8d7-63253e9318d2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10092_MetadataBasicList__PERM_Access_Control_Rights_Portal_Customer_Support_Successful" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="4695dd81-4b43-4d3e-bd30-dbbcfbd77b57"><con:settings/><con:testStep type="groovy" name="Copy of Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportalCS"));</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportalCS"));</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Del"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_171935958.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:portal:customersupport</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:portal:customersupport</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">171935958</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>a852fb00-b7a3-4b71-8668-cabfd62e95c6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57f02d5c-45a0-47be-a1d4-c4e643a7978f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c8b2ca35-1c58-4ad5-91fd-5ec09342353f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8f4e8ebc-334f-4e32-ada2-d2602e8d183f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0cf8d6d8-31c8-4fcc-a27c-59bb9b0ca818</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>16274844-6a47-4461-aa1e-2cbb9b2fb2f3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4c7ea449-cb3a-470d-9bf5-8cb768d45fea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>11b0b2c5-f66d-40cf-a1ae-14c0bce6b065</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>31309d1a-d818-448c-8f80-6030f039c792</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10093_MetadataBasicList__PERM_Access_Control_Rights_Retailer Customer Support_Successful" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="4f477141-1bae-477f-abcb-0a81ead7f119"><con:settings/><con:testStep type="groovy" name="Copy of Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Del"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_316864060.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:retailer:customersupport</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:retailer:customersupport</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">316864060</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>3e63a8a7-40eb-4f17-be88-1f0704cb950b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4e627b2d-bca3-4926-a278-5ff96305bdfe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8360c252-feda-4fc1-80b3-484c18a64b5a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3db53021-249f-4e83-af6e-ca392a248d25</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>06b1edb8-7d3b-4877-a159-ac20544ed6ce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9db17614-0011-4f72-8a32-6934b699ea4d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b1e712ea-a10a-44a8-ac7b-0bb7376a9c16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3c53fc08-21d2-47d8-a932-c3190169ceb8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c37ea969-028c-4c49-9a4d-c8d2e8f82e9a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10094_MetadataBasicList__PERM_Access_Control_Rights_Linked LASP Customer Support_Successful" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="581b36ac-bf6e-4dd1-880b-e5bec42df4ee"><con:settings/><con:testStep type="groovy" name="Copy of Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdLLASPCS"));</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdLLASPCS"));</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Del"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_782735126.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:lasp:linked:customersupport</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:lasp:linked:customersupport</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">782735126</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>310a3e74-f0f5-41b6-a6bc-fc6c02af930c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f8b379f0-d4cf-4a27-87c5-f5248f70a365</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6a331333-774e-4948-9c7d-737a5d9ea441</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aa8e3772-715e-4a2e-b14f-ed3594b7444f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ab3c83d7-54b3-4f1d-abc5-c4f77be41d14</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>944553b2-3f3c-4be0-b793-53a50a983f40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d669586a-8c44-4d2e-9b69-c72261952e88</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca679ccd-8ff6-40fd-a105-ee0f09299866</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd1a60ea-e69f-42c1-be97-d5cf65341d4c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10095_MetadataBasicList__PERM_Access_Control_Rights_Dynamic LASP Customer Support_Successful" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="a8dc65c6-1fe0-43c6-b9fc-dcc0238fae34"><con:settings/><con:testStep type="groovy" name="Copy of Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDLASPCS"));</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDLASPCS"));</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Del"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_272724104.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:lasp:dynamic:customersupport</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:lasp:dynamic:customersupport</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">272724104</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9096420e-0467-41c4-9b0e-135e33a228e3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1445059f-ced6-4a32-a92a-5f24873e91c8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>375b03da-1064-44f2-8ba9-2f425f8225c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c9bec1a-cd74-4199-9a4e-61f8897db9ad</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d7d29f4-e5e3-42fb-bf26-850d248bb35a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c21cf4b1-8e39-4ca6-909d-6ec0ec5e830b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ce346d29-2936-4584-9198-6ae947b7f360</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f65376d7-9798-4081-afc3-d70627318d4b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e597eb64-cf40-4d4d-ad8d-f55c67a97839</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10096_MetadataBasicList__PERM_Access_Control_Rights_Content Provider_Successful" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="a38308f1-0f60-4d3c-9fb1-415117d52aed"><con:settings/><con:testStep type="groovy" name="Copy of Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="delay" name="Delay1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Del"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_688563129.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">688563129</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2bfbb410-9901-4b23-affe-ef4e61d46ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d7fea0fc-95e1-448f-807c-8e39570ad09f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>650a1023-f0c1-44d6-aade-9f3237e379e6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7c6bf38a-3431-49b4-a801-6e3c93ce7fbb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ccbc5bab-a051-4dfd-92a7-fd70d2af4063</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>77bf99b2-4fac-49cd-9fad-5a48730627e9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13884bc8-e323-48f6-83c1-3fa91532de23</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>69cdbd2e-0cc6-4061-91a1-23be865ae3f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ab924b21-ac6a-4c3b-842b-3cc8c2438bc6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10097_MetadataBasicList__PERM_Access_Control_Rights_Content Provider Customer Support_Successful" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="5c532580-9240-496e-91e4-d22d0b279ba0"><con:settings/><con:testStep type="groovy" name="Copy of Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCONCS"));</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCONCS"));</script></con:config></con:testStep><con:testStep type="delay" name="Delay1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Del"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_770411720.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>2222</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider:customersupport</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider:customersupport</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">770411720</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5b10fa40-8c4b-4f81-b589-a235bc98a046</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d61c104a-b4fc-43a4-ad74-3406c4409131</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8e70774e-5aec-447f-887d-1ecf39746f49</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7fd542aa-3974-4045-8f85-7916cf3a16ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9541468f-b1ea-4b6e-8674-6931c72eb67e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e26e2c2d-2342-4bf1-9669-5159593a4f32</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2c806e21-e9d4-4194-b4c5-b32c7eb13f34</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>29eebf86-6adb-47b2-a1dc-75f08579a57e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>be540e6f-982f-42fe-a682-1b45a147baf0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10098_MetadataBasicList__PERM_Access_Control_Rights_DECE_Successful" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="26931f6b-3c93-4d9e-9024-8a2d979a5f88"><con:settings/><con:testStep type="groovy" name="Copy of Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDECE"));</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDECE"));</script></con:config></con:testStep><con:testStep type="delay" name="Delay1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Del"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="delay" name="Delay2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_269049004.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:dece</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:dece</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">269049004</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>55ca3ea4-6dab-4e30-84a8-a0bc550c5d34</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>64d6b77e-730f-404a-83ce-7a2b8cc382f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>28efcadc-2160-48d8-bd00-09f895b903ba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ad666b01-e985-4e48-8464-06be4f5e1bad</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5b7e7f56-dd7b-4bca-9c54-46d0148ea616</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>abe3efa0-bd39-462b-a3c0-b6c1fb64339b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8695c95a-99cf-434e-a7fd-6fe5749b3222</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d6d6c314-f37f-4067-8d68-1bcf1cc1d697</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>428cf0e2-8ffb-46a7-bb53-8d509204815d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10099_MetadataBasicList__PERM_Access_Control_Rights_DECE Customer Support_Successful" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Copy of Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDECECS"));</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDECECS"));</script></con:config></con:testStep><con:testStep type="delay" name="Delay1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Del"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="delay" name="Delay2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_854770189.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:dece:customersupport</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:dece:customersupport</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">854770189</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>e4184ef0-6dab-41ba-9934-204a52cd2c15</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22dfc2d8-1829-43f9-9d7b-6ade65d2adfc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3d83f32-3019-4086-8282-d079f59a34c6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2001491a-2506-4c59-ac95-a65cf31d8327</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6d4614eb-e7fc-45a7-bbd6-ba3145112775</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fdf53a41-d0ed-41ac-9aa6-3aa195de0881</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ade3b17e-f46b-41fd-a6a5-9c2e5197b6b5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>02cf7ea4-ccfa-4c4d-800e-3aee7d646342</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9ed7f6a9-c3d5-4cb3-a762-8f270ee431ca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10100_MetadataBasicList__PERM_Access_Control_Rights_Access_Portal_Successful" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Copy of Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdAccportal"));</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdAccportal"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Del"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_165913412.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:accessportal</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:accessportal</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">165913412</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>dc0b1027-d34d-4315-9c49-d939b2142162</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>febd8fcb-5f29-49d9-b1b8-a7e6aefaea21</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b17004db-e2dc-4991-9dc2-2af8d23da78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f7cf3441-4fc9-4c70-be4b-87fefcf1c357</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c1527c33-e682-48be-a31f-9041cb163173</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>83cb7a22-f301-429f-a25a-fe0a8d8de460</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>41bbbd0e-aaa6-4093-93d9-70228f2645f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c5689446-c27d-4482-aefd-0e5e80739f3b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3a9de3dd-32f0-42f4-8e13-923c982dee0d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10101_MetadataBasicList__PERM_Access_Control_Rights_Access_Portal_Customer_Support_Successful" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="e9611ed4-ea92-4c12-9795-da714f393c35"><con:settings/><con:testStep type="groovy" name="Copy of Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdAccportalCS"));</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdAccportalCS"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Del"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_426310117.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:accessportal:customersupport</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:accessportal:customersupport</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">426310117</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>e8c53acd-a61a-495a-a6fb-5b1cc512996a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4c02e3be-6fe3-4d36-aeb2-c6fd6fdac2a7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>35b806e2-2849-42d6-ba9c-8b947c971017</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f3faa0a4-94ea-46bd-a079-ad4d949358c6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8ea3f582-a72d-4b61-896b-1384f175a0f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1ab35997-7857-4010-b02f-45ff568d5dd4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7ba43465-d787-42b0-b2f0-f872a6abef0d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a2412775-6273-4e0b-91c2-78e672ca8a9e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>72536cc1-1c13-4d2a-bbf8-b90a84252395</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10102_MetadataBasicList__PERM_Access_Control_Rights_DSP Customer Support_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="523287b9-b71c-40ee-9e69-8d61e776d905"><con:settings/><con:testStep type="groovy" name="Copy of Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDSPCS"));</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDSPCS"));</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Del"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_563144742.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:dsp:customersupport</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:dsp:customersupport</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">563144742</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>403</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>1cdcb26a-68f5-453f-b7e5-06738a3552ad</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e06d021c-dae9-4eac-b45e-8df1fdf69f3f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0f9a71ec-a780-4d87-898c-1875380817b2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>533f8968-a5fb-4cea-ae7f-83994b93f413</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3f438567-39a3-4531-8e54-e985407052b9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>73a1aadd-e5f5-485d-861d-bc9fe91e1cde</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f69358ab-16ff-4335-a908-11b550eff931</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c8013ff1-4f69-49b2-ad2b-ffeafcacb0f3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6b933246-4f58-49de-a4aa-24f5efbf2471</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10103_MetadataBasicList__PERM_Access_Control_Rights_Device_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="2ac3adb1-e9cc-4c3f-9037-5a0441348145"><con:settings/><con:testStep type="groovy" name="Copy of Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDEV"));</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDEV"));</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Del"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_699159114.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:device</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:device</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">699159114</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>403</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>657e7bfc-a43b-47b4-a1d0-10570d48be63</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6a3fb94b-57b6-4021-8bec-ad4cf3308a4a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e5eb399-9124-46c1-99e2-b2f130f3c4d7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>35edd332-cfc4-4b41-958d-f43d9a6f02cf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1d98803e-a13c-4cc0-9b02-0bb0930db846</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>19f247ac-be9d-4e2c-a638-7df75a4292c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1f116e0b-6a91-49a7-9458-60d9274b4954</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>43419608-1139-4fde-b4e4-f46c9045fdd9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b81089a5-48e0-48f5-9318-fc0de8aedc6c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10104_MetadataBasicList__PERM_Access_Control_Rights_Device Customer Support_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Copy of Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDEVCS"));</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDEVCS"));</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Del"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_944475247.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:device:customersupport</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:device:customersupport</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">944475247</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>403</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>45168deb-d5d8-4b52-830e-11ccb78fec66</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8c5f767e-dd96-465c-a399-6f314ea2bc98</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fed3fe1f-f1e9-4017-8a45-1d44d31f6cdf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7cc7ceec-4d4e-4132-8f10-dbb2c39c1a73</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>518412bb-c055-455d-a162-6d63ea40dbb3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7ce01d48-31dc-43d8-adc4-05da8d5ab6d1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7db82bfa-8f8b-4a1c-9687-8eb0a1748b9a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1a574744-1438-4fb3-b439-613e74a085e1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d357b637-71f6-4572-a85f-85240e90c935</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10105_MetadataBasicList__PERM_Access_Control_Rights_DSP_Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Copy of Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDSP"));</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDSP"));</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Del"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_539338706.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:dsp</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:dsp</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">539338706</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>403</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>407f820b-89a5-4850-8a46-3e94c2d3bfb8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>84e160b7-236c-4916-ba31-46e53c332d31</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>62adb61c-449a-4595-ba5d-f41571bfd81e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9707eb0-bb98-45e6-950b-cd7b5824e438</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>efff1862-628d-4209-bfe6-c1b36a2422d8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9445058f-f918-49ab-b0a6-f64ab3082b8e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>09c5c3de-4131-4ecf-9b7e-f11a4e2e61d5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3b314365-8bf4-493d-8497-c1b8ab0d896c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>dcce9bdc-fa94-49a8-9b69-762d5cc11304</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_10106_MetadataBasicList_PERM_Access_Control_Rights_Retailer_Successful" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="a8b4214e-67a2-46e0-9171-d406ca6dbd18"><con:settings/><con:testStep type="groovy" name="Copy of Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Random Number Generator"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Random_Number_Generator")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call MetadataBasicListGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("GET-MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Copy of Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicCreate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("POST - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicUpdate"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PUT - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Get"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));</script></con:config></con:testStep><con:testStep type="delay" name="Delay 2" disabled="true"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterGet"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicListGet"><con:settings/><con:config><script>

/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role_Del" disabled="true"><con:settings/><con:config><script>/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  def nodeoid = tP.getPropertyValue("nodeid");
   def role = tC.getPropertyValue("set_role");
   
  def noderowset = new dbUtils.dbNode(log, tP.getPropertyValue("targetSystem"));

assert noderowset.nodeSetRole(nodeoid, role);
 log.info "nodeoid is \"" + nodeoid + "\" role set to \"" + role + "return code is ";
 log.info "tagetSystem is " + tP.getPropertyValue("targetSystem")

</script></con:config></con:testStep><con:testStep type="groovy" name="Call MetadataBasicDelete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("DELETE - MetadataBasicCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_760839187.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:retailer</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:retailer</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">760839187</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>202</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5ed7a507-d488-4e0f-8dd7-fac6ce48d24b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>97bd424f-28cd-496c-8eb2-400545283490</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4f86b8fd-276b-4390-a789-265f387da2c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>93a13efb-a094-4258-a0fc-15a9619645fa</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>af03cc0c-83fa-4da3-a83c-0ccd5fedb8fb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6768c153-b7ed-41fd-8555-f4694192efa0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f37b8a70-d8b6-4bb2-b560-2bae62b94af4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>61a6f9a2-621f-4e5a-bafd-c90f3d629e2a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>38182c8a-d1cf-4c67-880d-edb701fe9c6b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fac5d7db-8c62-4187-8747-372d7c311a87</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>QC_TestPlanDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestLabDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestSet</con:name><con:value/></con:property><con:property><con:name>add</con:name><con:value>{a,b-> a+b}</con:value></con:property><con:property><con:name>add</con:name><con:value>{a,b-> a+b}</con:value></con:property><con:property><con:name>add</con:name></con:property><con:property><con:name>add</con:name></con:property><con:property><con:name>nodeid</con:name><con:value>${#Project#Set_Node}</con:value></con:property></con:properties><con:setupScript/><con:tearDownScript/><con:reportParameters/></con:testSuite><con:testSuite name="Test Cases Containing APIs" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="POST - MetadataBasicCreate" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="c9a757c3-d605-40b9-9098-3765c93145a1"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
/*
*  Mapping this call only to a retailer node.
*/
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script RandomUpperLowerCase" disabled="true"><con:settings/><con:config><script>import generalUtils.generalUtils;

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();


myGeneralUtils = new generalUtils(log);

//x = "abcd:ef:ghij";
x=tC.getPropertyValue("randomUpperLowerURN");

y = myGeneralUtils.randomizeStringCase(x);

tC.setPropertyValue("randomUpperLowerURN_ReturnValue", y);

 log.info "randomUpperLowerURN_ReturnValue is " + tC.getPropertyValue("randomUpperLowerURN_ReturnValue");
 </script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("CREATE - MetadataBasicCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="CREATE - MetadataBasicCreate"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" methodName="POST MetadataBasic" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CREATE - MetadataBasicCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="discardResponse">false</con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">true</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">true</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@remove_empty_content">true</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<BasicAsset xmlns:ns2="${#Project#md_schema}" xmlns="${#Project#Coordinator_Schema}" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#">
    <BasicData ContentID="${#TestCase#CID}">
        <ns2:UpdateNum>8</ns2:UpdateNum>
        <ns2:LocalizedInfo default="true" language="en-US">
            <ns2:TitleDisplay19>${#Project#TitleDisplay19}</ns2:TitleDisplay19>
            <ns2:TitleDisplay60>A Beautiful Mind</ns2:TitleDisplay60>
            <ns2:TitleSort>Smurfs, The</ns2:TitleSort>
            
    <ns2:ArtReference resolution="800x1200">http://friendak.com/1404/28th_Liftoff_of_the_Space_Shuttle_Columbia_1_16_2003_800x1200_wallpaper.jpg</ns2:ArtReference>
    

            <ns2:Summary190>When the evil wizard Gargamel chases the tiny blue Smurfs out of their village, they tumble from their magical world and into ours.</ns2:Summary190>
            <ns2:Summary400>When the evil wizard Gargamel chases the tiny blue Smurfs out of their village, they tumble from their magical world and into ours -- in fact, smack dab in the middle of Central Park. Just three apples high and stuck in the Big Apple, the Smurfs must find a way to get back to their village before Gargamel tracks them down.</ns2:Summary400>
            <ns2:Genre>Comedy</ns2:Genre>
            <ns2:Genre>Adventure</ns2:Genre>
            <ns2:Genre>Animation</ns2:Genre>
            <ns2:Genre>Fantasy</ns2:Genre>
            <ns2:Genre>Family</ns2:Genre>
            <ns2:VersionNotes>---</ns2:VersionNotes>
            <ns2:OriginalTitle>The Smurfs</ns2:OriginalTitle>
            <ns2:CopyrightLine>Sony</ns2:CopyrightLine>
        </ns2:LocalizedInfo>
        <ns2:LocalizedInfo default="false" language="de">
            <ns2:TitleDisplay19>Die Schlümpfe</ns2:TitleDisplay19>
            <ns2:TitleDisplay60>Die Schlümpfe</ns2:TitleDisplay60>
            <ns2:TitleSort>Schlümpfe, Die</ns2:TitleSort>
            <ns2:ArtReference resolution="800x1200">http://friendak.com/1404/28th_Liftoff_of_the_Space_Shuttle_Columbia_1_16_2003_800x1200_wallpaper.jpg</ns2:ArtReference>
            <ns2:Summary190>Die Schlümpfe verlassen ihre magische Welt &amp; erobern den Großstadt-Dschungel New York.</ns2:Summary190>
            <ns2:Summary400>Die Schlümpfe verlassen ihre magische Welt &amp; erobern den Großstadt-Dschungel New York. Gejagt vom bösen Zauberer Gargamel müssen sie ein schlumpfiges Abenteuer bestehen.</ns2:Summary400>
            <ns2:Genre>Comedy</ns2:Genre>
            <ns2:Genre>Adventure</ns2:Genre>
            <ns2:Genre>Animation</ns2:Genre>
            <ns2:Genre>Fantasy</ns2:Genre>
            <ns2:Genre>Family</ns2:Genre>
            <ns2:VersionNotes>---</ns2:VersionNotes>
            <ns2:OriginalTitle>The Smurfs</ns2:OriginalTitle>
            <ns2:CopyrightLine>Sony</ns2:CopyrightLine>
        </ns2:LocalizedInfo>
        <ns2:RunLength>PT1H43M0.000S</ns2:RunLength>
        <ns2:ReleaseYear>2010</ns2:ReleaseYear>
        <ns2:ReleaseDate>2011-07-28</ns2:ReleaseDate>
        <ns2:ReleaseHistory>
            <ns2:ReleaseType>Premiere</ns2:ReleaseType>
            <ns2:Date scheduled="false">2011-07-28T10:10:10Z</ns2:Date>
        </ns2:ReleaseHistory>
        <ns2:WorkType>Movie</ns2:WorkType>
        <ns2:RatingSet>
            <ns2:Rating>
                <ns2:Region>
                    <ns2:country>US</ns2:country>
                </ns2:Region>
                <ns2:System>ALL</ns2:System>
                <ns2:Value>Exempt</ns2:Value>
            </ns2:Rating>
        </ns2:RatingSet>
    </BasicData>

</BasicAsset>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('CREATE - MetadataBasicCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_10088_MetadataBasicList__PERM_Access_Control_Rights_Linked LASP_Successful</con:value></con:property><con:property><con:name>sName</con:name><con:value>MetadataBasicList Different Roles</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>309541210</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">MdBasic Create Request has been accepted for processing, but the processing has not been completed</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 202 Accepted</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>98</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/2015/02/Asset/Metadata/Basic/urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_309541210.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_309541210.txt</con:value></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>checkdigit</con:name><con:value/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1PC/CON_concat.pem</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="R3-POST - MetadataBasicCreate" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="20a79bd9-012b-40f0-bdf0-3475916ff322"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
/*
*  Mapping this call only to a retailer node.
*/
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script RandomUpperLowerCase" disabled="true"><con:settings/><con:config><script>import generalUtils.generalUtils;

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();


myGeneralUtils = new generalUtils(log);

//x = "abcd:ef:ghij";
x=tC.getPropertyValue("randomUpperLowerURN");

y = myGeneralUtils.randomizeStringCase(x);

tC.setPropertyValue("randomUpperLowerURN_ReturnValue", y);

 log.info "randomUpperLowerURN_ReturnValue is " + tC.getPropertyValue("randomUpperLowerURN_ReturnValue");
 </script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("CREATE - MetadataBasicCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="CREATE - MetadataBasicCreate"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" methodName="POST MetadataBasic" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CREATE - MetadataBasicCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="discardResponse">false</con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">true</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">true</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@remove_empty_content">true</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<BasicAsset xmlns:ns2="${#Project#md_schema}" xmlns="${#Project#Coordinator_Schema}" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#">
    <BasicData ContentID="${#TestCase#CID}">
        <ns2:UpdateNum>8</ns2:UpdateNum>
        <ns2:LocalizedInfo default="true" language="en-US">
            <ns2:TitleDisplay19>${#Project#TitleDisplay19}</ns2:TitleDisplay19>
            <ns2:TitleDisplay60>A Beautiful Mind</ns2:TitleDisplay60>
            <ns2:TitleSort>Smurfs, The</ns2:TitleSort>
            
    <ns2:ArtReference resolution="800x1200">http://friendak.com/1404/28th_Liftoff_of_the_Space_Shuttle_Columbia_1_16_2003_800x1200_wallpaper.jpg</ns2:ArtReference>
    

            <ns2:Summary190>When the evil wizard Gargamel chases the tiny blue Smurfs out of their village, they tumble from their magical world and into ours.</ns2:Summary190>
            <ns2:Summary400>When the evil wizard Gargamel chases the tiny blue Smurfs out of their village, they tumble from their magical world and into ours -- in fact, smack dab in the middle of Central Park. Just three apples high and stuck in the Big Apple, the Smurfs must find a way to get back to their village before Gargamel tracks them down.</ns2:Summary400>
            <ns2:Genre>Comedy</ns2:Genre>
            <ns2:Genre>Adventure</ns2:Genre>
            <ns2:Genre>Animation</ns2:Genre>
            <ns2:Genre>Fantasy</ns2:Genre>
            <ns2:Genre>Family</ns2:Genre>
            <ns2:VersionNotes>---</ns2:VersionNotes>
            <ns2:OriginalTitle>The Smurfs</ns2:OriginalTitle>
            <ns2:CopyrightLine>Sony</ns2:CopyrightLine>
        </ns2:LocalizedInfo>
        <ns2:LocalizedInfo default="false" language="de">
            <ns2:TitleDisplay19>Die Schlümpfe</ns2:TitleDisplay19>
            <ns2:TitleDisplay60>Die Schlümpfe</ns2:TitleDisplay60>
            <ns2:TitleSort>Schlümpfe, Die</ns2:TitleSort>
            <ns2:ArtReference resolution="800x1200">http://friendak.com/1404/28th_Liftoff_of_the_Space_Shuttle_Columbia_1_16_2003_800x1200_wallpaper.jpg</ns2:ArtReference>
            <ns2:Summary190>Die Schlümpfe verlassen ihre magische Welt &amp; erobern den Großstadt-Dschungel New York.</ns2:Summary190>
            <ns2:Summary400>Die Schlümpfe verlassen ihre magische Welt &amp; erobern den Großstadt-Dschungel New York. Gejagt vom bösen Zauberer Gargamel müssen sie ein schlumpfiges Abenteuer bestehen.</ns2:Summary400>
            <ns2:Genre>Comedy</ns2:Genre>
            <ns2:Genre>Adventure</ns2:Genre>
            <ns2:Genre>Animation</ns2:Genre>
            <ns2:Genre>Fantasy</ns2:Genre>
            <ns2:Genre>Family</ns2:Genre>
            <ns2:VersionNotes>---</ns2:VersionNotes>
            <ns2:OriginalTitle>The Smurfs</ns2:OriginalTitle>
            <ns2:CopyrightLine>Sony</ns2:CopyrightLine>
        </ns2:LocalizedInfo>
        <ns2:RunLength>PT1H43M0.000S</ns2:RunLength>
        <ns2:ReleaseYear>2010</ns2:ReleaseYear>
        <ns2:ReleaseDate>2011-07-28</ns2:ReleaseDate>
        <ns2:ReleaseHistory>
            <ns2:ReleaseType>Premiere</ns2:ReleaseType>
            <ns2:Date scheduled="false">2011-07-28T10:10:10Z</ns2:Date>
        </ns2:ReleaseHistory>
        <ns2:WorkType>Movie</ns2:WorkType>
        <ns2:RatingSet>
            <ns2:Rating>
                <ns2:Region>
                    <ns2:country>US</ns2:country>
                </ns2:Region>
                <ns2:System>ALL</ns2:System>
                <ns2:Value>Exempt</ns2:Value>
            </ns2:Rating>
        </ns2:RatingSet>
    </BasicData>

</BasicAsset>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('CREATE - MetadataBasicCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_10107_MetadataBasicList_CreatingBasicMetadata_With_R5_and_R6_And_Getting</con:value></con:property><con:property><con:name>sName</con:name><con:value>MetadataBasicList Different Roles</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>706778597</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">MdBasic Create Request has been accepted for processing, but the processing has not been completed</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 202 Accepted</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>98</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/11/Asset/Metadata/Basic/urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_706778597.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_706778597.txt</con:value></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>checkdigit</con:name><con:value/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/CON_concat.pem</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PUT - MetadataBasicCreate" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="0fcdde82-b317-472d-b60b-747b06906590"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);


tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script RandomUpperLowerCase" disabled="true"><con:settings/><con:config><script>import generalUtils.generalUtils;

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();


myGeneralUtils = new generalUtils(log);

//x = "abcd:ef:ghij";
x=tC.getPropertyValue("randomUpperLowerURN");

y = myGeneralUtils.randomizeStringCase(x);

tC.setPropertyValue("randomUpperLowerURN_ReturnValue", y);

 log.info "randomUpperLowerURN_ReturnValue is " + tC.getPropertyValue("randomUpperLowerURN_ReturnValue");
 </script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("PUT - MetadataBasicCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - MetadataBasicCreate"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" methodName="PUT MetadataBasic" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - MetadataBasicCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<dece:BasicAsset xmlns:dece="${#Project#Coordinator_Schema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="${#Project#md_schema}" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="${#Project#Coordinator_Schema} NewXMLSchema.xsd ">
  <dece:BasicData ContentID="${#TestCase#CID}">
    <md:UpdateNum>70</md:UpdateNum>
    <md:LocalizedInfo default="true" language="en">
      <md:TitleDisplay19>${#Project#TitleDisplay19}</md:TitleDisplay19>
      <md:TitleDisplay60>md:TitleDisplay60_Update</md:TitleDisplay60>
      <md:TitleDisplayUnlimited>md:TitleDisplayUnlimited</md:TitleDisplayUnlimited>
      <md:TitleSort>md:TitleSort</md:TitleSort>
      <md:ArtReference resolution="800x1200">http://upload.wikimedia.org/wikipedia/commons/5/5d/City_Hall_in_Slupsk_MG_4151_800x1200.jpg</md:ArtReference>
      
      <md:Summary190 cast="true">md:Summary190</md:Summary190>
      <md:Summary400 cast="true">md:Summary400</md:Summary400>
      <md:Summary4000 cast="true">md:Summary4000</md:Summary4000>
      <md:DisplayIndicators>CC</md:DisplayIndicators>
      <md:Genre id="" level="0" source="http://tempuri.org">md:Genre</md:Genre>
      <md:Keyword>md:Keyword</md:Keyword>
      <md:VersionNotes>md:VersionNotes</md:VersionNotes>
      <md:Region>
        <md:country>US</md:country>
      </md:Region>
      <md:OriginalTitle><![CDATA[en-US_!Dr._POST_ "W" Jones!- _?_@#$%^  *()_+[]{};':",./_?_\|ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€ Ã¢â‚¬â„¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¾ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â¦ÃƒÂ¢Ã¢â€šÂ¬ ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â¡Ãƒâ€¹Ã¢â‚¬ ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â°Ãƒâ€¦ ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â¹Ãƒâ€¦Ã¢â‚¬â„¢Ãƒâ€¦Ã‚Â½ ÃƒÆ’Ã‚Â© ]]]]>><![CDATA[</md:OriginalTitle>
      <md:CopyrightLine><![CDATA[© 2012 Lions Gate Entertainment Inc. All Rights Reserved.]]]]>><![CDATA[</md:CopyrightLine>
      <md:PeopleLocal>
        <md:Job>
          <md:JobFunction scheme="">md:JobFunction</md:JobFunction>
          <md:JobDisplay language="en">md:JobDisplay</md:JobDisplay>
          <md:BillingBlockOrder>0</md:BillingBlockOrder>
          <md:Character>md:Character</md:Character>
          <md:Guest>true</md:Guest>
        </md:Job>
        <md:Name>
          <md:DisplayName language="en">md:DisplayName</md:DisplayName>
          <md:SortName language="en">md:SortName</md:SortName>
          <md:FirstGivenName>md:FirstGivenName</md:FirstGivenName>
          <md:SecondGivenName>md:SecondGivenName</md:SecondGivenName>
          <md:FamilyName>md:FamilyName</md:FamilyName>
          <md:Suffix>md:Suffix</md:Suffix>
          <md:Moniker>md:Moniker</md:Moniker>
        </md:Name>
        <md:Identifier>
          <md:Identifier>md:Identifier</md:Identifier>
          <md:Namespace>md:Namespace</md:Namespace>
          <md:ReferenceLocation>http://tempuri.org</md:ReferenceLocation>
        </md:Identifier>
        <md:Gender>male</md:Gender>
      </md:PeopleLocal>
      <md:TitleAlternate language="en" type="">md:TitleAlternate</md:TitleAlternate>
    </md:LocalizedInfo>
    <md:RunLength>P1D</md:RunLength>
    <md:ReleaseYear>2001</md:ReleaseYear>
    <md:ReleaseDate>2011-07-28T10:00:00Z</md:ReleaseDate>
    <md:ReleaseHistory>
      <md:ReleaseType wide="true">md:ReleaseType</md:ReleaseType>
      <md:DistrTerritory>
        <md:country>US</md:country>
      </md:DistrTerritory>
      <md:Date scheduled="true">2011-07-28T10:00:00Z</md:Date>
      <md:Description>md:Description</md:Description>
      <md:ReleaseOrg organizationID="">
        <md:DisplayName>md:DisplayName</md:DisplayName>
        <md:SortName>md:SortName</md:SortName>
      </md:ReleaseOrg>
    </md:ReleaseHistory>
    <md:WorkType>Movie</md:WorkType>
    <md:PictureColorType>color</md:PictureColorType>
    <md:PictureFormat>md:PictureFormat</md:PictureFormat>
    <md:ThreeD>true</md:ThreeD>
    <md:AltIdentifier>
      <md:Namespace>md:Namespace</md:Namespace>
      <md:Identifier>md:Identifier</md:Identifier>
      <md:Location>http://tempuri.org</md:Location>
    </md:AltIdentifier>
    <md:RatingSet>
      <md:NotRated condition="">true</md:NotRated>
      <md:AdultContent>true</md:AdultContent>
    </md:RatingSet>
    <md:People>
      <md:Job>
        <md:JobFunction scheme="">md:JobFunction</md:JobFunction>
        <md:JobDisplay language="en">md:JobDisplay</md:JobDisplay>
        <md:BillingBlockOrder>0</md:BillingBlockOrder>
        <md:Character>md:Character</md:Character>
        <md:Guest>true</md:Guest>
      </md:Job>
      <md:Name>
        <md:DisplayName language="en">md:DisplayName</md:DisplayName>
        <md:SortName language="en">md:SortName</md:SortName>
        <md:FirstGivenName>md:FirstGivenName</md:FirstGivenName>
        <md:SecondGivenName>md:SecondGivenName</md:SecondGivenName>
        <md:FamilyName>md:FamilyName</md:FamilyName>
        <md:Suffix>md:Suffix</md:Suffix>
        <md:Moniker>md:Moniker</md:Moniker>
      </md:Name>
      <md:Identifier>
        <md:Identifier>md:Identifier</md:Identifier>
        <md:Namespace>md:Namespace</md:Namespace>
        <md:ReferenceLocation>http://tempuri.org</md:ReferenceLocation>
      </md:Identifier>
      <md:Gender>male</md:Gender>
    </md:People>
    <md:CountryOfOrigin>
      <md:country>US</md:country>
    </md:CountryOfOrigin>
    <md:PrimarySpokenLanguage>en</md:PrimarySpokenLanguage>
    <md:AssociatedOrg organizationID="" role="">
      <md:DisplayName>md:DisplayName</md:DisplayName>
      <md:SortName>md:SortName</md:SortName>
    </md:AssociatedOrg>
    <md:SequenceInfo>
      <md:Number>0</md:Number>
      <md:HouseSequence>md:HouseSequence</md:HouseSequence>
    </md:SequenceInfo>
    
  </dece:BasicData>
 
</dece:BasicAsset>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('PUT - MetadataBasicCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeUpdate");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_796661278.txt</con:value></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>202</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>98</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/2015/02/Asset/Metadata/Basic/urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_796661278.txt</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 202 Accepted</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>796661278</con:value></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value>P0_MetadataBasicList</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_10007_MetadataBasicList_FUNC_DateFormat_With_Offset_5_FilterCount_10 B HOST</con:value></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">MdBasic Update Request has been accepted for processing, but the processing has not been completed</con:value></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1PC/CON_concat.pem</con:value></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GET - MetadataBasicCreate" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="c7e5e899-3464-4e8c-9023-934680b6396a"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script RandomUpperLowerCase" disabled="true"><con:settings/><con:config><script>import generalUtils.generalUtils;

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();


myGeneralUtils = new generalUtils(log);

//x = "abcd:ef:ghij";
x=tC.getPropertyValue("randomUpperLowerURN");

y = myGeneralUtils.randomizeStringCase(x);

tC.setPropertyValue("randomUpperLowerURN_ReturnValue", y);

 log.info "randomUpperLowerURN_ReturnValue is " + tC.getPropertyValue("randomUpperLowerURN_ReturnValue");
 </script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("REST Test Request");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="REST Test Request"><con:settings/><con:config service="MetadataBasicUpdateWithUpdateNum" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}?updatenum=${#TestCase#UpdateNum}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="REST Test Request" mediaType="application/xml" sslKeystore="2222_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="3c0c931a-e669-4225-ab3e-833b21043b00"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("CREATE - MetadataDigitalCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - MetadataBasicCreate"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" methodName="GET MetadataBasic" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - MetadataBasicCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="2222_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request><![CDATA[<!-- Build 7.8.4.1 Test Sample XML file generated by XMLSpy v2008 sp1 (http://www.altova.com)--><dece:BasicAsset 
xsi:schemaLocation="http://www.decellc.org/schema/2010/10/dece Coordinator%20Interface%20Schema-v0171.xsd" 
xmlns:dece="http://www.decellc.org/schema/2011/08/coordinator" 
xmlns:md="http://www.movielabs.com/md" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<!--<dece:BasicData ContentID="urn:dece:cid:FILE:STOPANDGO.TXT">-->
<dece:BasicData ContentID="${#TestCase#CID}">
		<md:UpdateNum>${#TestCase#RandomNumberGenerated}</md:UpdateNum>
		<md:LocalizedInfo default="true" language="en-US">
			<md:TitleDisplay19>StrngTitleDis3nd</md:TitleDisplay19>
			<md:TitleDisplay60>StringTitleDisplay60</md:TitleDisplay60>
			<md:TitleSort>StringTitleSort</md:TitleSort>
			<md:ArtReference resolution="13002x13002">http://www.altova2.com</md:ArtReference>
			<md:Summary190 cast="true">StringSummary190_${#TestCase#RandomNumberGenerated}</md:Summary190>
			<md:Summary400 cast="true">StringSummary400_${#TestCase#RandomNumberGenerated}</md:Summary400>
			<md:Summary4000 cast="true">StringSummary4000_${#TestCase#RandomNumberGenerated}</md:Summary4000>
			<md:DisplayIndicators>CC</md:DisplayIndicators>
			<md:DisplayIndicators>DD</md:DisplayIndicators>
			<md:Genre>Action</md:Genre>
			<md:Genre>Horror</md:Genre>
			<md:Keyword>StringKeyword</md:Keyword>
			<md:VersionNotes>String</md:VersionNotes>
			<md:Region>
				<md:country>AA</md:country>
			</md:Region>
			<md:Region>
				<md:country>US</md:country>
			</md:Region>
			<md:OriginalTitle>StringOriginalTitle</md:OriginalTitle>
			<md:CopyrightLine>StringCopyrightLine</md:CopyrightLine>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction scheme="string">4.36</md:JobFunction>
					<md:JobDisplay>Visual Effects Artist</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String1</md:Character>
					<md:Character>String122</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Name>
					<md:DisplayName>String</md:DisplayName>
					<md:SortName>String</md:SortName>
					<md:FirstGivenName>String</md:FirstGivenName>
					<md:SecondGivenName>String</md:SecondGivenName>
					<md:FamilyName>String</md:FamilyName>
					<md:Suffix>String</md:Suffix>
					<md:Moniker>String</md:Moniker>
				</md:Name>
				<md:Identifier>
					<md:Identifier>String1</md:Identifier>
					<md:Namespace>String1</md:Namespace>
					<md:ReferenceLocation>http://www.altova1.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Gender>male</md:Gender>
			</md:PeopleLocal>
		</md:LocalizedInfo>
		<md:RunLength>P1Y2M3DT10H30M0S</md:RunLength>
		<md:ReleaseYear>2001</md:ReleaseYear>
		<md:ReleaseDate>2010-08-13</md:ReleaseDate>
		<md:ReleaseHistory>
			<md:ReleaseType>PurpleRay</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">2010-08-13</md:Date>
			<md:Description>String324342342</md:Description>
			<md:ReleaseOrg organizationID="Stringggfsg">
				<md:DisplayName>Stringsgs</md:DisplayName>
				<md:SortName>Stringsdgsdf</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:ReleaseHistory>
			<md:ReleaseType>LightBlueRay</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">2010-08-13</md:Date>
			<md:Description>String5465464</md:Description>
			<md:ReleaseOrg organizationID="String456456">
				<md:DisplayName>String45645633</md:DisplayName>
				<md:SortName>String34534533</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:WorkType>Album</md:WorkType>
		<md:PictureColorType>color</md:PictureColorType>
		<md:PictureFormat>Letterbox</md:PictureFormat>
		<md:ThreeD>true</md:ThreeD>
		<md:AltIdentifier>
			<md:Namespace>String</md:Namespace>
			<md:Identifier>String</md:Identifier>
			<md:Location>http://www.altova.com</md:Location>
		</md:AltIdentifier>
		<md:AltIdentifier>
			<md:Namespace>String1221</md:Namespace>
			<md:Identifier>String1221</md:Identifier>
			<md:Location>http://www.altova122121.com</md:Location>
		</md:AltIdentifier>
		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>MPAA</md:System>
        			<md:Value>PG-13</md:Value>
        			<md:LinkToLogo>http://www.mpaa.org/_images/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet>
<!--		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>TVPG</md:System>
        			<md:Value>TV-Y7</md:Value>
        			<md:LinkToLogo>http://www.tvguidelines.org/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet> -->
<!--		<md:RatingSet>
			<md:NotRated>true</md:NotRated>
			<md:AdultContent>true</md:AdultContent>
		</md:RatingSet> -->
		<md:People>
			<md:Job>
				<md:JobFunction scheme="string">27.13</md:JobFunction>
				<md:JobDisplay>String55</md:JobDisplay>
				<md:BillingBlockOrder>55</md:BillingBlockOrder>
				<md:Character>String55</md:Character>
				<md:Character>String55222</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="string">28.2</md:JobFunction>
				<md:JobDisplay>String66</md:JobDisplay>
				<md:BillingBlockOrder>66</md:BillingBlockOrder>
				<md:Character>String66</md:Character>
				<md:Character>String62126</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String77</md:DisplayName>
				<md:SortName>String77</md:SortName>
				<md:FirstGivenName>String77</md:FirstGivenName>
				<md:SecondGivenName>String77</md:SecondGivenName>
				<md:FamilyName>String77</md:FamilyName>
				<md:Suffix>String77</md:Suffix>
				<md:Moniker>String77</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String88</md:Identifier>
				<md:Namespace>String</md:Namespace>
				<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:People>
			<md:Job>
				<md:JobFunction scheme="String">28</md:JobFunction>
				<md:JobDisplay>String99</md:JobDisplay>
				<md:BillingBlockOrder>99</md:BillingBlockOrder>
				<md:Character>String99</md:Character>
				<md:Character>Strindfsdffdg99</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="String">27.14</md:JobFunction>
				<md:JobDisplay>String111</md:JobDisplay>
				<md:BillingBlockOrder>111</md:BillingBlockOrder>
				<md:Character>String111</md:Character>
				<md:Character>String111wrwewewewe</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String222</md:DisplayName>
				<md:SortName>String222</md:SortName>
				<md:FirstGivenName>String222</md:FirstGivenName>
				<md:SecondGivenName>String222</md:SecondGivenName>
				<md:FamilyName>String222</md:FamilyName>
				<md:Suffix>String222</md:Suffix>
				<md:Moniker>String222</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String333</md:Identifier>
				<md:Namespace>String333</md:Namespace>
				<md:ReferenceLocation>http://www.altova333.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Identifier>
				<md:Identifier>String444</md:Identifier>
				<md:Namespace>String444</md:Namespace>
				<md:ReferenceLocation>http://www.altova444.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:CountryOfOrigin>
			<md:country>AA</md:country>
		</md:CountryOfOrigin>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:SequenceInfo>
			<md:Number>0</md:Number>
			<md:HouseSequence>String</md:HouseSequence>
		</md:SequenceInfo>
		<md:Parent relationshipType="ispieceof">
		<!--	<md:ParentContentID>urn:dece:cid:org:mystudio:0067</md:ParentContentID>-->
			<md:ParentContentID>urn:dece:cid:org:mystudio:0005</md:ParentContentID> 
		</md:Parent>
	</dece:BasicData>
	<dece:ResourceStatus>
		<dece:Current>
			<dece:Value>urn:dece:type:status:active</dece:Value>
			<dece:Description>2010-08-01T09:30:47.0Z</dece:Description>
		</dece:Current>
		<dece:History>
			<dece:Prior>
				<dece:Value>urn:dece:type:status:suspended</dece:Value>
				<dece:Description>temp suspension</dece:Description>
			</dece:Prior>
			<dece:Prior>
				<dece:Value>urn:dece:type:status:active</dece:Value>
				<dece:Description>active</dece:Description>
			</dece:Prior>
		</dece:History>
	</dece:ResourceStatus>
</dece:BasicAsset>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - MetadataBasicCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeGet");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Assert 1000 threshold Pagination"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus == 'HTTP/1.1 200 OK')
{
def response = context.expand( '${GET - MetadataBasicCreate#Response}' )
log.info response

def records = new XmlSlurper().parseText(response)
log.info records
def pagination=records.BasicData.LocalizedInfo.size()

if(pagination > 1000)
assert 1==2;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract The Response Header ETag"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - MetadataBasicCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String ETag = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "ETag": 
			ETag = value[0]; 
			break;
	}
}

tP.setPropertyValue("ETag", ETag);
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET - MetadataBasicCreate');
		def expXML = tStep.httpRequest.response.getResponseContent();
		
		String Cache_Control = null;
		String ETag = null;
		String Expires   = null;
		String Last_Modified = null;
		String x_Transaction_Info = null;
		String Vary=null;
		tStep.httpRequest.response.responseHeaders.each() {	 header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					}
		}

			tC.setPropertyValue("Cache-Control", Cache_Control);
			tC.setPropertyValue("ETag", ETag);
			tC.setPropertyValue("Expires", Expires);
			tC.setPropertyValue("Last-Modified", Last_Modified);
			tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
			tC.setPropertyValue("Vary", Vary);
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET - MetadataBasicCreate');
		def expXML = tStep.httpRequest.response.getResponseContent();
		String Vary=null;
		String Cache_Control = null;
		String ETag = null;
		//String Expires   = null;
		//String Last_Modified = null;
		String x_Transaction_Info = null;
		
		tStep.httpRequest.response.responseHeaders.each() { header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				/*case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;*/
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					
			}
		}
		
		tC.setPropertyValue("Cache-Control", Cache_Control);
		tC.setPropertyValue("ETag", ETag);
		//tC.setPropertyValue("Expires", Expires);
		//tC.setPropertyValue("Last-Modified", Last_Modified);
		tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
		tC.setPropertyValue("Vary", Vary);
	}


</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==null)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==null)
		assert 1==2
		
		def Expires=tC.getPropertyValue("Expires")
		if(Expires==null)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==null)
		assert 1==2
		
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==null)
		assert 1==2
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==false)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==false)
		assert 1==2
		
		/*def Expires=tC.getPropertyValue("Expires")
		if(Expires==false)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==false)
		assert 1==2
		*/
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==false)
		assert 1==2

		def Vary=tC.getPropertyValue("Vary")
		if(Vary==null)
		assert 1==2

	}</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00011_MetadataBasicList__PERM_Access_Control_Rights_DSP_Negative</con:value></con:property><con:property><con:name>sName</con:name><con:value>MetadataBasicList</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>564742</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>403</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 404 Not Found</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn%3Adece%3Acid%3Afile%3AAL_WEB_PORTAL_NUMBERS_564742.txt</con:value></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>UpdateNum</con:name><con:value>8</con:value></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/New Certs for 1.0.1.12A/2222_concat.pem</con:value></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>3c0c931a-e669-4225-ab3e-833b21043b00</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DELETE - MetadataBasicCreate" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="0006d075-aecb-4483-bb69-1b7d23be662a"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script RandomUpperLowerCase" disabled="true"><con:settings/><con:config><script>import generalUtils.generalUtils;

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();


myGeneralUtils = new generalUtils(log);

//x = "abcd:ef:ghij";
x=tC.getPropertyValue("randomUpperLowerURN");

y = myGeneralUtils.randomizeStringCase(x);

tC.setPropertyValue("randomUpperLowerURN_ReturnValue", y);

 log.info "randomUpperLowerURN_ReturnValue is " + tC.getPropertyValue("randomUpperLowerURN_ReturnValue");
 </script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("DELETE - MetadataBasicCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - MetadataBasicCreate"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" methodName="DELETE MetadataBasic" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - MetadataBasicCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<!-- Build 7.8.4.1 Test Sample XML file generated by XMLSpy v2008 sp1 (http://www.altova.com)--><dece:BasicAsset 
xsi:schemaLocation="http://www.decellc.org/schema/2010/10/dece Coordinator%20Interface%20Schema-v0171.xsd" 
xmlns:dece="http://www.decellc.org/schema/2011/08/coordinator" 
xmlns:md="http://www.movielabs.com/md" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<!--<dece:BasicData ContentID="urn:dece:cid:FILE:STOPANDGO.TXT">-->
<dece:BasicData ContentID="${#TestCase#CID}">
		<md:UpdateNum>${#TestCase#RandomNumberGenerated}</md:UpdateNum>
		<md:LocalizedInfo default="true" language="en-US">
			<md:TitleDisplay19>StrngTitleDis3nd</md:TitleDisplay19>
			<md:TitleDisplay60>StringTitleDisplay60</md:TitleDisplay60>
			<md:TitleSort>StringTitleSort</md:TitleSort>
			<md:ArtReference resolution="13002x13002">http://www.altova2.com</md:ArtReference>
			<md:Summary190 cast="true">StringSummary190_${#TestCase#RandomNumberGenerated}</md:Summary190>
			<md:Summary400 cast="true">StringSummary400_${#TestCase#RandomNumberGenerated}</md:Summary400>
			<md:Summary4000 cast="true">StringSummary4000_${#TestCase#RandomNumberGenerated}</md:Summary4000>
			<md:DisplayIndicators>CC</md:DisplayIndicators>
			<md:DisplayIndicators>DD</md:DisplayIndicators>
			<md:Genre>Action</md:Genre>
			<md:Genre>Horror</md:Genre>
			<md:Keyword>StringKeyword</md:Keyword>
			<md:VersionNotes>String</md:VersionNotes>
			<md:Region>
				<md:country>AA</md:country>
			</md:Region>
			<md:Region>
				<md:country>US</md:country>
			</md:Region>
			<md:OriginalTitle>StringOriginalTitle</md:OriginalTitle>
			<md:CopyrightLine>StringCopyrightLine</md:CopyrightLine>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction scheme="string">4.36</md:JobFunction>
					<md:JobDisplay>Visual Effects Artist</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String1</md:Character>
					<md:Character>String122</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Name>
					<md:DisplayName>String</md:DisplayName>
					<md:SortName>String</md:SortName>
					<md:FirstGivenName>String</md:FirstGivenName>
					<md:SecondGivenName>String</md:SecondGivenName>
					<md:FamilyName>String</md:FamilyName>
					<md:Suffix>String</md:Suffix>
					<md:Moniker>String</md:Moniker>
				</md:Name>
				<md:Identifier>
					<md:Identifier>String1</md:Identifier>
					<md:Namespace>String1</md:Namespace>
					<md:ReferenceLocation>http://www.altova1.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Gender>male</md:Gender>
			</md:PeopleLocal>
		</md:LocalizedInfo>
		<md:RunLength>P1Y2M3DT10H30M0S</md:RunLength>
		<md:ReleaseYear>2001</md:ReleaseYear>
		<md:ReleaseDate>2010-08-13</md:ReleaseDate>
		<md:ReleaseHistory>
			<md:ReleaseType>PurpleRay</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">2010-08-13</md:Date>
			<md:Description>String324342342</md:Description>
			<md:ReleaseOrg organizationID="Stringggfsg">
				<md:DisplayName>Stringsgs</md:DisplayName>
				<md:SortName>Stringsdgsdf</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:ReleaseHistory>
			<md:ReleaseType>LightBlueRay</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">2010-08-13</md:Date>
			<md:Description>String5465464</md:Description>
			<md:ReleaseOrg organizationID="String456456">
				<md:DisplayName>String45645633</md:DisplayName>
				<md:SortName>String34534533</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:WorkType>Album</md:WorkType>
		<md:PictureColorType>color</md:PictureColorType>
		<md:PictureFormat>Letterbox</md:PictureFormat>
		<md:ThreeD>true</md:ThreeD>
		<md:AltIdentifier>
			<md:Namespace>String</md:Namespace>
			<md:Identifier>String</md:Identifier>
			<md:Location>http://www.altova.com</md:Location>
		</md:AltIdentifier>
		<md:AltIdentifier>
			<md:Namespace>String1221</md:Namespace>
			<md:Identifier>String1221</md:Identifier>
			<md:Location>http://www.altova122121.com</md:Location>
		</md:AltIdentifier>
		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>MPAA</md:System>
        			<md:Value>PG-13</md:Value>
        			<md:LinkToLogo>http://www.mpaa.org/_images/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet>
<!--		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>TVPG</md:System>
        			<md:Value>TV-Y7</md:Value>
        			<md:LinkToLogo>http://www.tvguidelines.org/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet> -->
<!--		<md:RatingSet>
			<md:NotRated>true</md:NotRated>
			<md:AdultContent>true</md:AdultContent>
		</md:RatingSet> -->
		<md:People>
			<md:Job>
				<md:JobFunction scheme="string">27.13</md:JobFunction>
				<md:JobDisplay>String55</md:JobDisplay>
				<md:BillingBlockOrder>55</md:BillingBlockOrder>
				<md:Character>String55</md:Character>
				<md:Character>String55222</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="string">28.2</md:JobFunction>
				<md:JobDisplay>String66</md:JobDisplay>
				<md:BillingBlockOrder>66</md:BillingBlockOrder>
				<md:Character>String66</md:Character>
				<md:Character>String62126</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String77</md:DisplayName>
				<md:SortName>String77</md:SortName>
				<md:FirstGivenName>String77</md:FirstGivenName>
				<md:SecondGivenName>String77</md:SecondGivenName>
				<md:FamilyName>String77</md:FamilyName>
				<md:Suffix>String77</md:Suffix>
				<md:Moniker>String77</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String88</md:Identifier>
				<md:Namespace>String</md:Namespace>
				<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:People>
			<md:Job>
				<md:JobFunction scheme="String">28</md:JobFunction>
				<md:JobDisplay>String99</md:JobDisplay>
				<md:BillingBlockOrder>99</md:BillingBlockOrder>
				<md:Character>String99</md:Character>
				<md:Character>Strindfsdffdg99</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="String">27.14</md:JobFunction>
				<md:JobDisplay>String111</md:JobDisplay>
				<md:BillingBlockOrder>111</md:BillingBlockOrder>
				<md:Character>String111</md:Character>
				<md:Character>String111wrwewewewe</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String222</md:DisplayName>
				<md:SortName>String222</md:SortName>
				<md:FirstGivenName>String222</md:FirstGivenName>
				<md:SecondGivenName>String222</md:SecondGivenName>
				<md:FamilyName>String222</md:FamilyName>
				<md:Suffix>String222</md:Suffix>
				<md:Moniker>String222</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String333</md:Identifier>
				<md:Namespace>String333</md:Namespace>
				<md:ReferenceLocation>http://www.altova333.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Identifier>
				<md:Identifier>String444</md:Identifier>
				<md:Namespace>String444</md:Namespace>
				<md:ReferenceLocation>http://www.altova444.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:CountryOfOrigin>
			<md:country>AA</md:country>
		</md:CountryOfOrigin>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:SequenceInfo>
			<md:Number>0</md:Number>
			<md:HouseSequence>String</md:HouseSequence>
		</md:SequenceInfo>
		<md:Parent relationshipType="ispieceof">
		<!--	<md:ParentContentID>urn:dece:cid:org:mystudio:0067</md:ParentContentID>-->
			<md:ParentContentID>urn:dece:cid:org:mystudio:0005</md:ParentContentID> 
		</md:Parent>
	</dece:BasicData>
	<dece:ResourceStatus>
		<dece:Current>
			<dece:Value>urn:dece:type:status:active</dece:Value>
			<dece:Description>2010-08-01T09:30:47.0Z</dece:Description>
		</dece:Current>
		<dece:History>
			<dece:Prior>
				<dece:Value>urn:dece:type:status:suspended</dece:Value>
				<dece:Description>temp suspension</dece:Description>
			</dece:Prior>
			<dece:Prior>
				<dece:Value>urn:dece:type:status:active</dece:Value>
				<dece:Description>active</dece:Description>
			</dece:Prior>
		</dece:History>
	</dece:ResourceStatus>
</dece:BasicAsset>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('DELETE - MetadataBasicCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeDelete");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_10029_MetadataBasicList_FUNC_DateFormat_Correct_YYYY</con:value></con:property><con:property><con:name>sName</con:name><con:value>MetadataBasicList Content Provider</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>168401509</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">MdBasic Delete Request has Processed Successfully</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>text/plain;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">49</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_168401509.txt</con:value></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1PC/CON_concat.pem</con:value></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Copy of POST - MetadataBasicCreate" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="a359e0e3-b076-473c-a281-02d9ae0a9235"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tP.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));

/*
*  Mapping this call only to a retailer node.
*/
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("CREATE - MetadataBasicCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="CREATE - MetadataBasicCreate"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" methodName="POST MetadataBasic" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CREATE - MetadataBasicCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="2222_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<dece:BasicAsset xsi:schemaLocation="http://www.decellc.org/schema/2011/08/coordinator Coordinator-1.0r1.xsd" xmlns:dece="http://www.decellc.org/schema/2011/08/coordinator" xmlns:md="http://www.movielabs.com/schema/md/v1.07/md" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<dece:BasicData ContentID="urn:dece:cid:org:universal:611154561">
		<md:UpdateNum>2</md:UpdateNum>
		<md:LocalizedInfo default="true" language="en">
			<md:TitleDisplay19><![CDATA[Cowboys & Aliens]]]]>><![CDATA[</md:TitleDisplay19>
			<md:TitleDisplay60><![CDATA[Cowboys & Aliens]]]]>><![CDATA[</md:TitleDisplay60>
			<md:TitleSort><![CDATA[Cowboys & Aliens]]]]>><![CDATA[</md:TitleSort>
			<md:ArtReference resolution="117x176">https://www.universal.com</md:ArtReference>
			<md:Summary190 cast="true"><![CDATA[From the director of Iron Man and starring Daniel Craig and Harrison Ford, an unlikely posse rises against a force from beyond this world in an epic showdown for survival.]]]]>><![CDATA[</md:Summary190>
			<md:Summary400 cast="true"><![CDATA[From the director of Iron Man and starring Daniel Craig and Harrison Ford, an unlikely posse rises against a force from beyond this world in an epic showdown for survival.]]]]>><![CDATA[</md:Summary400>
			<md:Summary4000 cast="true"><![CDATA[Daniel Craig and Harrison Ford star in this action-packed sci-fi western from the director of Iron Man (Jon Favreau) that critics call “wickedly original, unlike anything you’ve ever seen” (Jake Hamilton, Fox-TV Houston, TX).  A stranger (Craig) stumbles into the desert town of Absolution with no memory of his past and a futuristic shackle around his wrist. With the help of mysterious beauty Ella (Olivia Wilde) and the iron-fisted Colonel Dolarhyde (Ford), he finds himself leading an unlikely posse of cowboys, outlaws, and Apache warriors against a common enemy from beyond this world in an epic showdown for survival.]]]]>><![CDATA[</md:Summary4000>
			<md:Genre><![CDATA[Action]]]]>><![CDATA[</md:Genre>
			<md:Genre><![CDATA[Thriller]]]]>><![CDATA[</md:Genre>
			<md:Genre><![CDATA[Western]]]]>><![CDATA[</md:Genre>
			<md:Genre><![CDATA[Sci-Fi]]]]>><![CDATA[</md:Genre>
			<md:OriginalTitle><![CDATA[Cowboys & Aliens]]]]>><![CDATA[</md:OriginalTitle>
			<md:CopyrightLine>© 2011 Universal Studios. All Rights Reserved.</md:CopyrightLine>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Jake Lonergan</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Daniel Craig</md:DisplayName>
					<md:SortName>Craig, Daniel</md:SortName>
					<md:FirstGivenName>Daniel</md:FirstGivenName>
					<md:FamilyName>Craig</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Woodrow Dolarhyde</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Harrison Ford</md:DisplayName>
					<md:SortName>Ford, Harrison</md:SortName>
					<md:FirstGivenName>Harrison</md:FirstGivenName>
					<md:FamilyName>Ford</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Ella Swenson</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Olivia Wilde</md:DisplayName>
					<md:SortName>Wilde, Olivia</md:SortName>
					<md:FirstGivenName>Olivia</md:FirstGivenName>
					<md:FamilyName>Wilde</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Doc</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Sam Rockwell</md:DisplayName>
					<md:SortName>Rockwell, Sam</md:SortName>
					<md:FirstGivenName>Sam</md:FirstGivenName>
					<md:FamilyName>Rockwell</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Nat Colorado</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Adam Beach</md:DisplayName>
					<md:SortName>Beach, Adam</md:SortName>
					<md:FirstGivenName>Adam</md:FirstGivenName>
					<md:FamilyName>Beach</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Percy Dolarhyde</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Paul Dano</md:DisplayName>
					<md:SortName>Dano, Paul</md:SortName>
					<md:FirstGivenName>Paul</md:FirstGivenName>
					<md:FamilyName>Dano</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Emmett Taggart</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Noah Ringer</md:DisplayName>
					<md:SortName>Ringer, Noah</md:SortName>
					<md:FirstGivenName>Noah</md:FirstGivenName>
					<md:FamilyName>Ringer</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Sheriff John Taggart</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Keith Carradine</md:DisplayName>
					<md:SortName>Carradine, Keith</md:SortName>
					<md:FirstGivenName>Keith</md:FirstGivenName>
					<md:FamilyName>Carradine</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Meacham</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Clancy Brown</md:DisplayName>
					<md:SortName>Brown, Clancy</md:SortName>
					<md:FirstGivenName>Clancy</md:FirstGivenName>
					<md:FamilyName>Brown</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Maria</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Ana de la Reguera</md:DisplayName>
					<md:SortName>de la Reguera, Ana</md:SortName>
					<md:FirstGivenName>Ana</md:FirstGivenName>
					<md:FamilyName>de la Reguera</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Director</md:JobFunction>
					<md:JobDisplay>Director</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Jon Favreau</md:DisplayName>
					<md:SortName>Favreau, Jon</md:SortName>
					<md:FirstGivenName>Jon</md:FirstGivenName>
					<md:FamilyName>Favreau</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Producer</md:JobFunction>
					<md:JobDisplay>Producer</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Brian Grazer</md:DisplayName>
					<md:SortName>Grazer, Brian</md:SortName>
					<md:FirstGivenName>Brian</md:FirstGivenName>
					<md:FamilyName>Grazer</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Producer</md:JobFunction>
					<md:JobDisplay>Producer</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Ron Howard</md:DisplayName>
					<md:SortName>Howard, Ron</md:SortName>
					<md:FirstGivenName>Ron</md:FirstGivenName>
					<md:FamilyName>Howard</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Producer</md:JobFunction>
					<md:JobDisplay>Producer</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Scott Mitchell Rosenberg</md:DisplayName>
					<md:SortName>Rosenberg, Scott Mitchell</md:SortName>
					<md:FirstGivenName>Scott Mitchell</md:FirstGivenName>
					<md:FamilyName>Rosenberg</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Producer</md:JobFunction>
					<md:JobDisplay>Producer</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Alex Kurtzman</md:DisplayName>
					<md:SortName>Kurtzman, Alex</md:SortName>
					<md:FirstGivenName>Alex</md:FirstGivenName>
					<md:FamilyName>Kurtzman</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Producer</md:JobFunction>
					<md:JobDisplay>Producer</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Roberto Orci</md:DisplayName>
					<md:SortName>Orci, Roberto</md:SortName>
					<md:FirstGivenName>Roberto</md:FirstGivenName>
					<md:FamilyName>Orci</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Screenwriter</md:JobFunction>
					<md:JobDisplay>Screenwriter</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Alex Kurtzman</md:DisplayName>
					<md:SortName>Kurtzman, Alex</md:SortName>
					<md:FirstGivenName>Alex</md:FirstGivenName>
					<md:FamilyName>Kurtzman</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Screenwriter</md:JobFunction>
					<md:JobDisplay>Screenwriter</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Roberto Orci</md:DisplayName>
					<md:SortName>Orci, Roberto</md:SortName>
					<md:FirstGivenName>Roberto</md:FirstGivenName>
					<md:FamilyName>Orci</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Screenwriter</md:JobFunction>
					<md:JobDisplay>Screenwriter</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Damon Lindelof</md:DisplayName>
					<md:SortName>Lindelof, Damon</md:SortName>
					<md:FirstGivenName>Damon</md:FirstGivenName>
					<md:FamilyName>Lindelof</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Based on Work of</md:JobFunction>
					<md:JobDisplay>Based on Work of</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Scott Mitchell Rosenberg</md:DisplayName>
					<md:SortName>Rosenberg, Scott Mitchell</md:SortName>
					<md:FirstGivenName>Scott Mitchell</md:FirstGivenName>
					<md:FamilyName>Rosenberg</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
		</md:LocalizedInfo>
		<md:RunLength>PT119M</md:RunLength>
		<md:ReleaseYear>2011</md:ReleaseYear>
		<md:ReleaseDate>2011-07-29</md:ReleaseDate>
		<md:WorkType>Feature Film</md:WorkType>
		<md:PictureColorType>color</md:PictureColorType>
		<md:PictureFormat>LetterBox</md:PictureFormat>
		<md:AltIdentifier>
			<md:Namespace>UniversalHiDef</md:Namespace>
			<md:Identifier>urn:universal:vendorid:61115456</md:Identifier>
			<md:Location>http://www.universalhidef.com</md:Location>
		</md:AltIdentifier>
		<md:RatingSet>
			<md:Rating>
				<md:Region>
					<md:country>US</md:country>
				</md:Region>
				<md:System>MPAA</md:System>
				<md:Value>PG-13</md:Value>
			</md:Rating>
		</md:RatingSet>
			<md:People>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Jake Lonergan</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Daniel Craig</md:DisplayName>
					<md:SortName>Craig, Daniel</md:SortName>
					<md:FirstGivenName>Daniel</md:FirstGivenName>
					<md:FamilyName>Craig</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Woodrow Dolarhyde</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Harrison Ford</md:DisplayName>
					<md:SortName>Ford, Harrison</md:SortName>
					<md:FirstGivenName>Harrison</md:FirstGivenName>
					<md:FamilyName>Ford</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Ella Swenson</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Olivia Wilde</md:DisplayName>
					<md:SortName>Wilde, Olivia</md:SortName>
					<md:FirstGivenName>Olivia</md:FirstGivenName>
					<md:FamilyName>Wilde</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Doc</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Sam Rockwell</md:DisplayName>
					<md:SortName>Rockwell, Sam</md:SortName>
					<md:FirstGivenName>Sam</md:FirstGivenName>
					<md:FamilyName>Rockwell</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Nat Colorado</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Adam Beach</md:DisplayName>
					<md:SortName>Beach, Adam</md:SortName>
					<md:FirstGivenName>Adam</md:FirstGivenName>
					<md:FamilyName>Beach</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Percy Dolarhyde</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Paul Dano</md:DisplayName>
					<md:SortName>Dano, Paul</md:SortName>
					<md:FirstGivenName>Paul</md:FirstGivenName>
					<md:FamilyName>Dano</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Emmett Taggart</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Noah Ringer</md:DisplayName>
					<md:SortName>Ringer, Noah</md:SortName>
					<md:FirstGivenName>Noah</md:FirstGivenName>
					<md:FamilyName>Ringer</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Sheriff John Taggart</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Keith Carradine</md:DisplayName>
					<md:SortName>Carradine, Keith</md:SortName>
					<md:FirstGivenName>Keith</md:FirstGivenName>
					<md:FamilyName>Carradine</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Meacham</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Clancy Brown</md:DisplayName>
					<md:SortName>Brown, Clancy</md:SortName>
					<md:FirstGivenName>Clancy</md:FirstGivenName>
					<md:FamilyName>Brown</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Maria</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Ana de la Reguera</md:DisplayName>
					<md:SortName>de la Reguera, Ana</md:SortName>
					<md:FirstGivenName>Ana</md:FirstGivenName>
					<md:FamilyName>de la Reguera</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Director</md:JobFunction>
					<md:JobDisplay>Director</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Jon Favreau</md:DisplayName>
					<md:SortName>Favreau, Jon</md:SortName>
					<md:FirstGivenName>Jon</md:FirstGivenName>
					<md:FamilyName>Favreau</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Producer</md:JobFunction>
					<md:JobDisplay>Producer</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Brian Grazer</md:DisplayName>
					<md:SortName>Grazer, Brian</md:SortName>
					<md:FirstGivenName>Brian</md:FirstGivenName>
					<md:FamilyName>Grazer</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Producer</md:JobFunction>
					<md:JobDisplay>Producer</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Ron Howard</md:DisplayName>
					<md:SortName>Howard, Ron</md:SortName>
					<md:FirstGivenName>Ron</md:FirstGivenName>
					<md:FamilyName>Howard</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Producer</md:JobFunction>
					<md:JobDisplay>Producer</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Scott Mitchell Rosenberg</md:DisplayName>
					<md:SortName>Rosenberg, Scott Mitchell</md:SortName>
					<md:FirstGivenName>Scott Mitchell</md:FirstGivenName>
					<md:FamilyName>Rosenberg</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Producer</md:JobFunction>
					<md:JobDisplay>Producer</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Alex Kurtzman</md:DisplayName>
					<md:SortName>Kurtzman, Alex</md:SortName>
					<md:FirstGivenName>Alex</md:FirstGivenName>
					<md:FamilyName>Kurtzman</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Producer</md:JobFunction>
					<md:JobDisplay>Producer</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Roberto Orci</md:DisplayName>
					<md:SortName>Orci, Roberto</md:SortName>
					<md:FirstGivenName>Roberto</md:FirstGivenName>
					<md:FamilyName>Orci</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Screenwriter</md:JobFunction>
					<md:JobDisplay>Screenwriter</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Alex Kurtzman</md:DisplayName>
					<md:SortName>Kurtzman, Alex</md:SortName>
					<md:FirstGivenName>Alex</md:FirstGivenName>
					<md:FamilyName>Kurtzman</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Screenwriter</md:JobFunction>
					<md:JobDisplay>Screenwriter</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Roberto Orci</md:DisplayName>
					<md:SortName>Orci, Roberto</md:SortName>
					<md:FirstGivenName>Roberto</md:FirstGivenName>
					<md:FamilyName>Orci</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Screenwriter</md:JobFunction>
					<md:JobDisplay>Screenwriter</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Damon Lindelof</md:DisplayName>
					<md:SortName>Lindelof, Damon</md:SortName>
					<md:FirstGivenName>Damon</md:FirstGivenName>
					<md:FamilyName>Lindelof</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Based on Work of</md:JobFunction>
					<md:JobDisplay>Based on Work of</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Scott Mitchell Rosenberg</md:DisplayName>
					<md:SortName>Rosenberg, Scott Mitchell</md:SortName>
					<md:FirstGivenName>Scott Mitchell</md:FirstGivenName>
					<md:FamilyName>Rosenberg</md:FamilyName>
				</md:Name>
			</md:People>
		<md:CountryOfOrigin>
			<md:country>US</md:country>
		</md:CountryOfOrigin>
	</dece:BasicData>
</dece:BasicAsset>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('CREATE - MetadataBasicCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>Copy of TC_DECE_00100_MetadataBasicCreate_FUNC_CTP_Invocation_with_method_POST_CID_is_New_ORG_Format</con:value></con:property><con:property><con:name>sName</con:name><con:value>MetadataBasicCreate_ContentProvider</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>46236</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>202</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2011/08/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.07/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:MdBasicMetadataAlreadyExist">
      <Reason Language="en">The basic metadata already exists.</Reason>
      <OriginalRequest>https://qa.p.uvvu.com:7001/rest/1/02/Asset/Metadata/Basic/</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/02/error/en/ErrorList.html#MdBasicMetadataAlreadyExist</ErrorLink>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 409 Conflict</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>673</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:org:ALSTUDIO:Version${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:org:ALSTUDIO:Version${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\\DECE\\2222_concat.pem</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GET - MetadataBasicCreate_on_D_Host" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="48f00db6-8344-4694-9f28-72ca51f68563"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));


/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script RandomUpperLowerCase" disabled="true"><con:settings/><con:config><script>import generalUtils.generalUtils;

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();


myGeneralUtils = new generalUtils(log);

//x = "abcd:ef:ghij";
x=tC.getPropertyValue("randomUpperLowerURN");

y = myGeneralUtils.randomizeStringCase(x);

tC.setPropertyValue("randomUpperLowerURN_ReturnValue", y);

 log.info "randomUpperLowerURN_ReturnValue is " + tC.getPropertyValue("randomUpperLowerURN_ReturnValue");
 </script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET - MetadataBasicCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="REST Test Request" disabled="true"><con:settings/><con:config service="MetadataBasicUpdateWithUpdateNum" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}?updatenum=${#TestCase#UpdateNum}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="REST Test Request" mediaType="application/xml" sslKeystore="222259_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 Assertion=nVbbcuI4EH2fr3B5HqeMbGMudgWq7AC7zORCApnJ7MuWkNugjZGIJRMzX7+SiR0gJJvZJ5fare7T3UdHOhN4lbpBKARkknJmjAc98+8k9mw/iV2LYGhangsdC7cTYjm+FxMgdmfuEdMYC5HDmAmJmeyZru00LduxXHvmuIHbCVyn0fZaf5nGd8iECq1cGrZpFKuUiaBM2zPzjAUcCyoChlcgAkmCaXh5ESjPAFeYzP7ZDmWZMOsvpVwHCJFGDATSlDQIX6EzdOBzFotgShcMyzyD55yx6JnPe5+enhpPzQbPFsi1bRvZPlI+saCLz2b/U7UZ4jFL+G59jhlnlOCU/sIa1CXIJY+NMF3wjMrl6o3QDnJsHdqCgljE8dhnE70kKNF9MNIByExgSyyxUwW7hQQyYASMu9txz/z8sQnu9s4yzETCs5U4Wv8eJGAbSPkaYktUlVXoPh7xRLv6Z0CCMSNpLugGrjRN1piAMCYZJLS4oEKRLxZGOX6jEBXDgPzOSM7QPk4FG53ozIAuQMj/M6/9We2ifMdpDv2biOKRk4tu+vX+AsVy/VVuyLzV9pNur4Sw77wDVY/6eX1M1JpXz5v4cCC3xbxIMJ6c31zLG5un3h1+4KEfiy+TaN6m9z95kv1ahOtw9uMuzPPre7t93xTNLqKLCz+8gmI5eRyh8fbTHeV/XVMvuvkOd+jb7SxC1x6GVCy20WTOruZNeMpbaJB9XSzyywLigfMQ/+ls3Swtojn+Nsu2nZBOHga/fua3n76NfiRdd/hlNrmSPCqmj3/YvZea9ms4NFZyMM3n/wCR1VJTYzwwRmpeWL4vLdpCYyspXYO11ichgUmzr3dpWQlyJT40DtQwd+tBM+p2Ws3zbjsaDltNb2h7tjOyQ7vj+0479Cv92aE4gnjOWUJ1Lq2wO/68D5CsAgEshsza8JwsQZjvRBxgiY0xu1UHgzMBM64UfBR64bDrRm7HHTkDL/KjgT9qugM/ivyh122axhWX1+w6CxMJ2aF6tw7U+xYIXVPQEq95LhTRhVQtecSbXKZOY4MbDHJ1CWRahwPX67aQoKt1ChowWvE4T6GxXq7LBiGx+7oWJqK0NluOWx7AN+s7/le1QvnEVDsIXUwEapxw4h5yqkpeVeydvK+q8GEeU33OVF9lRskOyeGvF7pontRc0SVVmGvXY8NBWHRcUZ0p3lBSM76+ppXKKx3oVwN5xI3HRr7Z5OUIOlrjMhUeOchuoymQXAnVdsYfgKE6BPrQHVGjPspc2w/x5XLJphJLWCnCGOXyAw+EKQj9QBgrwhcffX0cpFR9k1DIU7bzVL0jNOJ3nxokINpPmSfq88Sz+GVcJ2Lt5VF1qleBpGyhV/pG2L7BCsJVWKokjGf7wU8FOJX80Fg3ucYiFZvmuYS3/xham3omJoTnTI4HZmnY18sSp9yuIXhxehWm1OTnS7YQb16y95cXU6VcK2zWvvS/nS1a0oWA2iVoiaVnFuq9qJKzxZ4+PwM8lui2M2p3Rm531PbcfYnutLx23cCDSvqvzK8tez09Pg/9fwE="/>
  &lt;con:entry key="x-dece-ApplicationAuthorization" value="dclient-basic w0rnh4lz4bfuaxasn7qu:A3D90BF121838C67444D58AC6D6554A6"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>https://${#Global#DHOST}:${#Global#DPORT}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - MetadataBasicCreate"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" methodName="GET MetadataBasic" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - MetadataBasicCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="2222_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 Assertion=nVbbcuI4EH2fr3B5HqeMbGMudgWq7AC7zORCApnJ7MuWkNugjZGIJRMzX7+SiR0gJJvZJ5fare7T3UdHOhN4lbpBKARkknJmjAc98+8k9mw/iV2LYGhangsdC7cTYjm+FxMgdmfuEdMYC5HDmAmJmeyZru00LduxXHvmuIHbCVyn0fZaf5nGd8iECq1cGrZpFKuUiaBM2zPzjAUcCyoChlcgAkmCaXh5ESjPAFeYzP7ZDmWZMOsvpVwHCJFGDATSlDQIX6EzdOBzFotgShcMyzyD55yx6JnPe5+enhpPzQbPFsi1bRvZPlI+saCLz2b/U7UZ4jFL+G59jhlnlOCU/sIa1CXIJY+NMF3wjMrl6o3QDnJsHdqCgljE8dhnE70kKNF9MNIByExgSyyxUwW7hQQyYASMu9txz/z8sQnu9s4yzETCs5U4Wv8eJGAbSPkaYktUlVXoPh7xRLv6Z0CCMSNpLugGrjRN1piAMCYZJLS4oEKRLxZGOX6jEBXDgPzOSM7QPk4FG53ozIAuQMj/M6/9We2ifMdpDv2biOKRk4tu+vX+AsVy/VVuyLzV9pNur4Sw77wDVY/6eX1M1JpXz5v4cCC3xbxIMJ6c31zLG5un3h1+4KEfiy+TaN6m9z95kv1ahOtw9uMuzPPre7t93xTNLqKLCz+8gmI5eRyh8fbTHeV/XVMvuvkOd+jb7SxC1x6GVCy20WTOruZNeMpbaJB9XSzyywLigfMQ/+ls3Swtojn+Nsu2nZBOHga/fua3n76NfiRdd/hlNrmSPCqmj3/YvZea9ms4NFZyMM3n/wCR1VJTYzwwRmpeWL4vLdpCYyspXYO11ichgUmzr3dpWQlyJT40DtQwd+tBM+p2Ws3zbjsaDltNb2h7tjOyQ7vj+0479Cv92aE4gnjOWUJ1Lq2wO/68D5CsAgEshsza8JwsQZjvRBxgiY0xu1UHgzMBM64UfBR64bDrRm7HHTkDL/KjgT9qugM/ivyh122axhWX1+w6CxMJ2aF6tw7U+xYIXVPQEq95LhTRhVQtecSbXKZOY4MbDHJ1CWRahwPX67aQoKt1ChowWvE4T6GxXq7LBiGx+7oWJqK0NluOWx7AN+s7/le1QvnEVDsIXUwEapxw4h5yqkpeVeydvK+q8GEeU33OVF9lRskOyeGvF7pontRc0SVVmGvXY8NBWHRcUZ0p3lBSM76+ppXKKx3oVwN5xI3HRr7Z5OUIOlrjMhUeOchuoymQXAnVdsYfgKE6BPrQHVGjPspc2w/x5XLJphJLWCnCGOXyAw+EKQj9QBgrwhcffX0cpFR9k1DIU7bzVL0jNOJ3nxokINpPmSfq88Sz+GVcJ2Lt5VF1qleBpGyhV/pG2L7BCsJVWKokjGf7wU8FOJX80Fg3ucYiFZvmuYS3/xham3omJoTnTI4HZmnY18sSp9yuIXhxehWm1OTnS7YQb16y95cXU6VcK2zWvvS/nS1a0oWA2iVoiaVnFuq9qJKzxZ4+PwM8lui2M2p3Rm531PbcfYnutLx23cCDSvqvzK8tez09Pg/9fwE="/>
  &lt;con:entry key="x-dece-ApplicationAuthorization" value="dclient-basic w0rnh4lz4bfuaxasn7qu:A3D90BF121838C67444D58AC6D6554A6"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Device_HostName}</con:endpoint><con:request><![CDATA[<!-- Build 7.8.4.1 Test Sample XML file generated by XMLSpy v2008 sp1 (http://www.altova.com)--><dece:BasicAsset 
xsi:schemaLocation="http://www.decellc.org/schema/2010/10/dece Coordinator%20Interface%20Schema-v0171.xsd" 
xmlns:dece="http://www.decellc.org/schema/2011/08/coordinator" 
xmlns:md="http://www.movielabs.com/md" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<!--<dece:BasicData ContentID="urn:dece:cid:FILE:STOPANDGO.TXT">-->
<dece:BasicData ContentID="${#TestCase#CID}">
		<md:UpdateNum>${#TestCase#RandomNumberGenerated}</md:UpdateNum>
		<md:LocalizedInfo default="true" language="en-US">
			<md:TitleDisplay19>StrngTitleDis3nd</md:TitleDisplay19>
			<md:TitleDisplay60>StringTitleDisplay60</md:TitleDisplay60>
			<md:TitleSort>StringTitleSort</md:TitleSort>
			<md:ArtReference resolution="13002x13002">http://www.altova2.com</md:ArtReference>
			<md:Summary190 cast="true">StringSummary190_${#TestCase#RandomNumberGenerated}</md:Summary190>
			<md:Summary400 cast="true">StringSummary400_${#TestCase#RandomNumberGenerated}</md:Summary400>
			<md:Summary4000 cast="true">StringSummary4000_${#TestCase#RandomNumberGenerated}</md:Summary4000>
			<md:DisplayIndicators>CC</md:DisplayIndicators>
			<md:DisplayIndicators>DD</md:DisplayIndicators>
			<md:Genre>Action</md:Genre>
			<md:Genre>Horror</md:Genre>
			<md:Keyword>StringKeyword</md:Keyword>
			<md:VersionNotes>String</md:VersionNotes>
			<md:Region>
				<md:country>AA</md:country>
			</md:Region>
			<md:Region>
				<md:country>US</md:country>
			</md:Region>
			<md:OriginalTitle>StringOriginalTitle</md:OriginalTitle>
			<md:CopyrightLine>StringCopyrightLine</md:CopyrightLine>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction scheme="string">4.36</md:JobFunction>
					<md:JobDisplay>Visual Effects Artist</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String1</md:Character>
					<md:Character>String122</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Name>
					<md:DisplayName>String</md:DisplayName>
					<md:SortName>String</md:SortName>
					<md:FirstGivenName>String</md:FirstGivenName>
					<md:SecondGivenName>String</md:SecondGivenName>
					<md:FamilyName>String</md:FamilyName>
					<md:Suffix>String</md:Suffix>
					<md:Moniker>String</md:Moniker>
				</md:Name>
				<md:Identifier>
					<md:Identifier>String1</md:Identifier>
					<md:Namespace>String1</md:Namespace>
					<md:ReferenceLocation>http://www.altova1.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Gender>male</md:Gender>
			</md:PeopleLocal>
		</md:LocalizedInfo>
		<md:RunLength>P1Y2M3DT10H30M0S</md:RunLength>
		<md:ReleaseYear>2001</md:ReleaseYear>
		<md:ReleaseDate>2010-08-13</md:ReleaseDate>
		<md:ReleaseHistory>
			<md:ReleaseType>PurpleRay</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">2010-08-13</md:Date>
			<md:Description>String324342342</md:Description>
			<md:ReleaseOrg organizationID="Stringggfsg">
				<md:DisplayName>Stringsgs</md:DisplayName>
				<md:SortName>Stringsdgsdf</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:ReleaseHistory>
			<md:ReleaseType>LightBlueRay</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">2010-08-13</md:Date>
			<md:Description>String5465464</md:Description>
			<md:ReleaseOrg organizationID="String456456">
				<md:DisplayName>String45645633</md:DisplayName>
				<md:SortName>String34534533</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:WorkType>Album</md:WorkType>
		<md:PictureColorType>color</md:PictureColorType>
		<md:PictureFormat>Letterbox</md:PictureFormat>
		<md:ThreeD>true</md:ThreeD>
		<md:AltIdentifier>
			<md:Namespace>String</md:Namespace>
			<md:Identifier>String</md:Identifier>
			<md:Location>http://www.altova.com</md:Location>
		</md:AltIdentifier>
		<md:AltIdentifier>
			<md:Namespace>String1221</md:Namespace>
			<md:Identifier>String1221</md:Identifier>
			<md:Location>http://www.altova122121.com</md:Location>
		</md:AltIdentifier>
		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>MPAA</md:System>
        			<md:Value>PG-13</md:Value>
        			<md:LinkToLogo>http://www.mpaa.org/_images/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet>
<!--		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>TVPG</md:System>
        			<md:Value>TV-Y7</md:Value>
        			<md:LinkToLogo>http://www.tvguidelines.org/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet> -->
<!--		<md:RatingSet>
			<md:NotRated>true</md:NotRated>
			<md:AdultContent>true</md:AdultContent>
		</md:RatingSet> -->
		<md:People>
			<md:Job>
				<md:JobFunction scheme="string">27.13</md:JobFunction>
				<md:JobDisplay>String55</md:JobDisplay>
				<md:BillingBlockOrder>55</md:BillingBlockOrder>
				<md:Character>String55</md:Character>
				<md:Character>String55222</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="string">28.2</md:JobFunction>
				<md:JobDisplay>String66</md:JobDisplay>
				<md:BillingBlockOrder>66</md:BillingBlockOrder>
				<md:Character>String66</md:Character>
				<md:Character>String62126</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String77</md:DisplayName>
				<md:SortName>String77</md:SortName>
				<md:FirstGivenName>String77</md:FirstGivenName>
				<md:SecondGivenName>String77</md:SecondGivenName>
				<md:FamilyName>String77</md:FamilyName>
				<md:Suffix>String77</md:Suffix>
				<md:Moniker>String77</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String88</md:Identifier>
				<md:Namespace>String</md:Namespace>
				<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:People>
			<md:Job>
				<md:JobFunction scheme="String">28</md:JobFunction>
				<md:JobDisplay>String99</md:JobDisplay>
				<md:BillingBlockOrder>99</md:BillingBlockOrder>
				<md:Character>String99</md:Character>
				<md:Character>Strindfsdffdg99</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="String">27.14</md:JobFunction>
				<md:JobDisplay>String111</md:JobDisplay>
				<md:BillingBlockOrder>111</md:BillingBlockOrder>
				<md:Character>String111</md:Character>
				<md:Character>String111wrwewewewe</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String222</md:DisplayName>
				<md:SortName>String222</md:SortName>
				<md:FirstGivenName>String222</md:FirstGivenName>
				<md:SecondGivenName>String222</md:SecondGivenName>
				<md:FamilyName>String222</md:FamilyName>
				<md:Suffix>String222</md:Suffix>
				<md:Moniker>String222</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String333</md:Identifier>
				<md:Namespace>String333</md:Namespace>
				<md:ReferenceLocation>http://www.altova333.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Identifier>
				<md:Identifier>String444</md:Identifier>
				<md:Namespace>String444</md:Namespace>
				<md:ReferenceLocation>http://www.altova444.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:CountryOfOrigin>
			<md:country>AA</md:country>
		</md:CountryOfOrigin>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:SequenceInfo>
			<md:Number>0</md:Number>
			<md:HouseSequence>String</md:HouseSequence>
		</md:SequenceInfo>
		<md:Parent relationshipType="ispieceof">
		<!--	<md:ParentContentID>urn:dece:cid:org:mystudio:0067</md:ParentContentID>-->
			<md:ParentContentID>urn:dece:cid:org:mystudio:0005</md:ParentContentID> 
		</md:Parent>
	</dece:BasicData>
	<dece:ResourceStatus>
		<dece:Current>
			<dece:Value>urn:dece:type:status:active</dece:Value>
			<dece:Description>2010-08-01T09:30:47.0Z</dece:Description>
		</dece:Current>
		<dece:History>
			<dece:Prior>
				<dece:Value>urn:dece:type:status:suspended</dece:Value>
				<dece:Description>temp suspension</dece:Description>
			</dece:Prior>
			<dece:Prior>
				<dece:Value>urn:dece:type:status:active</dece:Value>
				<dece:Description>active</dece:Description>
			</dece:Prior>
		</dece:History>
	</dece:ResourceStatus>
</dece:BasicAsset>]]></con:request><con:assertion type="XPath Match" name="Match content of [ns2:UpdateNum]" disabled="true"><con:configuration><path>declare namespace ns2='${#Project#md_schema}';
declare namespace ns1='${Coordinator_Schema}';
//ns1:BasicAsset[1]/ns1:BasicData[1]/ns2:UpdateNum[1]/text()</path><content>70</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - MetadataBasicCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeGet");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET - MetadataBasicCreate');
		def expXML = tStep.httpRequest.response.getResponseContent();
		
		String Cache_Control = null;
		String ETag = null;
		String Expires   = null;
		String Last_Modified = null;
		String x_Transaction_Info = null;
		String Vary=null;
		tStep.httpRequest.response.responseHeaders.each() {	 header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					}
		}

			tC.setPropertyValue("Cache-Control", Cache_Control);
			tC.setPropertyValue("ETag", ETag);
			tC.setPropertyValue("Expires", Expires);
			tC.setPropertyValue("Last-Modified", Last_Modified);
			tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
			tC.setPropertyValue("Vary", Vary);
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET - MetadataBasicCreate');
		def expXML = tStep.httpRequest.response.getResponseContent();
		String Vary=null;
		String Cache_Control = null;
		String ETag = null;
		//String Expires   = null;
		//String Last_Modified = null;
		String x_Transaction_Info = null;
		
		tStep.httpRequest.response.responseHeaders.each() { header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				/*case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;*/
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					
			}
		}
		
		tC.setPropertyValue("Cache-Control", Cache_Control);
		tC.setPropertyValue("ETag", ETag);
		//tC.setPropertyValue("Expires", Expires);
		//tC.setPropertyValue("Last-Modified", Last_Modified);
		tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
		tC.setPropertyValue("Vary", Vary);
	}


</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==null)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==null)
		assert 1==2
		
		def Expires=tC.getPropertyValue("Expires")
		if(Expires==null)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==null)
		assert 1==2
		
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==null)
		assert 1==2
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==false)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==false)
		assert 1==2
		
		/*def Expires=tC.getPropertyValue("Expires")
		if(Expires==false)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==false)
		assert 1==2
		*/
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==false)
		assert 1==2

		def Vary=tC.getPropertyValue("Vary")
		if(Vary==null)
		assert 1==2

	}</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_MetadataBasicCreate_FUNC_CTP_Invocation_with_method_POST_CID_is_AD-ID_Incorrect_Format_NEG</con:value></con:property><con:property><con:name>sName</con:name><con:value>MetadataBasicCreate_ContentProvider</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>97136</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>400</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>400</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>400</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>400</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:securitycontext:InvalidAssertion">
      <Reason Language="en">The security token is required.</Reason>
      <OriginalRequest>https://qa.d.uvvu.com:7001/rest/1/06/Asset/Metadata/Basic/u4rn%3Adece%3Acid%3Aadid%3AALSTUDIO%3AVersion97136%3A001%3A001%3A001</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/06/error/en/ErrorList.html</ErrorLink>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 403 Forbidden</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">694</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>u4rn:dece:cid:adid:ALSTUDIO:Version${#TestCase#RandomNumberGenerated}:001:001:001</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>u4rn%3Adece%3Acid%3Aadid%3AALSTUDIO%3AVersion97136%3A001%3A001%3A001</con:value></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>UpdateNum</con:name><con:value>70</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\\DECE\\2222_concat.pem</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GET - MetadataBasicCreate_DHost_BasicAuth" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="d1014a82-80e7-4e97-9f95-0392e3dc6e6a"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));


/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script RandomUpperLowerCase" disabled="true"><con:settings/><con:config><script>import generalUtils.generalUtils;

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();


myGeneralUtils = new generalUtils(log);

//x = "abcd:ef:ghij";
x=tC.getPropertyValue("randomUpperLowerURN");

y = myGeneralUtils.randomizeStringCase(x);

tC.setPropertyValue("randomUpperLowerURN_ReturnValue", y);

 log.info "randomUpperLowerURN_ReturnValue is " + tC.getPropertyValue("randomUpperLowerURN_ReturnValue");
 </script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET - MetadataBasicCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="REST Test Request" disabled="true"><con:settings/><con:config service="MetadataBasicUpdateWithUpdateNum" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}?updatenum=${#TestCase#UpdateNum}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="REST Test Request" mediaType="application/xml" sslKeystore="222259_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 Assertion=nVbbcuI4EH2fr3B5HqeMbGMudgWq7AC7zORCApnJ7MuWkNugjZGIJRMzX7+SiR0gJJvZJ5fare7T3UdHOhN4lbpBKARkknJmjAc98+8k9mw/iV2LYGhangsdC7cTYjm+FxMgdmfuEdMYC5HDmAmJmeyZru00LduxXHvmuIHbCVyn0fZaf5nGd8iECq1cGrZpFKuUiaBM2zPzjAUcCyoChlcgAkmCaXh5ESjPAFeYzP7ZDmWZMOsvpVwHCJFGDATSlDQIX6EzdOBzFotgShcMyzyD55yx6JnPe5+enhpPzQbPFsi1bRvZPlI+saCLz2b/U7UZ4jFL+G59jhlnlOCU/sIa1CXIJY+NMF3wjMrl6o3QDnJsHdqCgljE8dhnE70kKNF9MNIByExgSyyxUwW7hQQyYASMu9txz/z8sQnu9s4yzETCs5U4Wv8eJGAbSPkaYktUlVXoPh7xRLv6Z0CCMSNpLugGrjRN1piAMCYZJLS4oEKRLxZGOX6jEBXDgPzOSM7QPk4FG53ozIAuQMj/M6/9We2ifMdpDv2biOKRk4tu+vX+AsVy/VVuyLzV9pNur4Sw77wDVY/6eX1M1JpXz5v4cCC3xbxIMJ6c31zLG5un3h1+4KEfiy+TaN6m9z95kv1ahOtw9uMuzPPre7t93xTNLqKLCz+8gmI5eRyh8fbTHeV/XVMvuvkOd+jb7SxC1x6GVCy20WTOruZNeMpbaJB9XSzyywLigfMQ/+ls3Swtojn+Nsu2nZBOHga/fua3n76NfiRdd/hlNrmSPCqmj3/YvZea9ms4NFZyMM3n/wCR1VJTYzwwRmpeWL4vLdpCYyspXYO11ichgUmzr3dpWQlyJT40DtQwd+tBM+p2Ws3zbjsaDltNb2h7tjOyQ7vj+0479Cv92aE4gnjOWUJ1Lq2wO/68D5CsAgEshsza8JwsQZjvRBxgiY0xu1UHgzMBM64UfBR64bDrRm7HHTkDL/KjgT9qugM/ivyh122axhWX1+w6CxMJ2aF6tw7U+xYIXVPQEq95LhTRhVQtecSbXKZOY4MbDHJ1CWRahwPX67aQoKt1ChowWvE4T6GxXq7LBiGx+7oWJqK0NluOWx7AN+s7/le1QvnEVDsIXUwEapxw4h5yqkpeVeydvK+q8GEeU33OVF9lRskOyeGvF7pontRc0SVVmGvXY8NBWHRcUZ0p3lBSM76+ppXKKx3oVwN5xI3HRr7Z5OUIOlrjMhUeOchuoymQXAnVdsYfgKE6BPrQHVGjPspc2w/x5XLJphJLWCnCGOXyAw+EKQj9QBgrwhcffX0cpFR9k1DIU7bzVL0jNOJ3nxokINpPmSfq88Sz+GVcJ2Lt5VF1qleBpGyhV/pG2L7BCsJVWKokjGf7wU8FOJX80Fg3ucYiFZvmuYS3/xham3omJoTnTI4HZmnY18sSp9yuIXhxehWm1OTnS7YQb16y95cXU6VcK2zWvvS/nS1a0oWA2iVoiaVnFuq9qJKzxZ4+PwM8lui2M2p3Rm531PbcfYnutLx23cCDSvqvzK8tez09Pg/9fwE="/>
  &lt;con:entry key="x-dece-ApplicationAuthorization" value="dclient-basic w0rnh4lz4bfuaxasn7qu:A3D90BF121838C67444D58AC6D6554A6"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>https://${#Global#DHOST}:${#Global#DPORT}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - MetadataBasicCreate"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" methodName="GET MetadataBasic" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - MetadataBasicCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="2222_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="Basic YXNod2luX3VzZXJfY3JlYXRlXzIwMTMwMTIwXzA0MjcxOnRlc3Rpbmc="/>
  &lt;con:entry key="x-dece-ApplicationAuthorization" value="dclient-basic w0rnh4lz4bfuaxasn7qu:A3D90BF121838C67444D58AC6D6554A6"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Device_HostName}</con:endpoint><con:request><![CDATA[<!-- Build 7.8.4.1 Test Sample XML file generated by XMLSpy v2008 sp1 (http://www.altova.com)--><dece:BasicAsset 
xsi:schemaLocation="http://www.decellc.org/schema/2010/10/dece Coordinator%20Interface%20Schema-v0171.xsd" 
xmlns:dece="http://www.decellc.org/schema/2011/08/coordinator" 
xmlns:md="http://www.movielabs.com/md" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<!--<dece:BasicData ContentID="urn:dece:cid:FILE:STOPANDGO.TXT">-->
<dece:BasicData ContentID="${#TestCase#CID}">
		<md:UpdateNum>${#TestCase#RandomNumberGenerated}</md:UpdateNum>
		<md:LocalizedInfo default="true" language="en-US">
			<md:TitleDisplay19>StrngTitleDis3nd</md:TitleDisplay19>
			<md:TitleDisplay60>StringTitleDisplay60</md:TitleDisplay60>
			<md:TitleSort>StringTitleSort</md:TitleSort>
			<md:ArtReference resolution="13002x13002">http://www.altova2.com</md:ArtReference>
			<md:Summary190 cast="true">StringSummary190_${#TestCase#RandomNumberGenerated}</md:Summary190>
			<md:Summary400 cast="true">StringSummary400_${#TestCase#RandomNumberGenerated}</md:Summary400>
			<md:Summary4000 cast="true">StringSummary4000_${#TestCase#RandomNumberGenerated}</md:Summary4000>
			<md:DisplayIndicators>CC</md:DisplayIndicators>
			<md:DisplayIndicators>DD</md:DisplayIndicators>
			<md:Genre>Action</md:Genre>
			<md:Genre>Horror</md:Genre>
			<md:Keyword>StringKeyword</md:Keyword>
			<md:VersionNotes>String</md:VersionNotes>
			<md:Region>
				<md:country>AA</md:country>
			</md:Region>
			<md:Region>
				<md:country>US</md:country>
			</md:Region>
			<md:OriginalTitle>StringOriginalTitle</md:OriginalTitle>
			<md:CopyrightLine>StringCopyrightLine</md:CopyrightLine>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction scheme="string">4.36</md:JobFunction>
					<md:JobDisplay>Visual Effects Artist</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String1</md:Character>
					<md:Character>String122</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Name>
					<md:DisplayName>String</md:DisplayName>
					<md:SortName>String</md:SortName>
					<md:FirstGivenName>String</md:FirstGivenName>
					<md:SecondGivenName>String</md:SecondGivenName>
					<md:FamilyName>String</md:FamilyName>
					<md:Suffix>String</md:Suffix>
					<md:Moniker>String</md:Moniker>
				</md:Name>
				<md:Identifier>
					<md:Identifier>String1</md:Identifier>
					<md:Namespace>String1</md:Namespace>
					<md:ReferenceLocation>http://www.altova1.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Gender>male</md:Gender>
			</md:PeopleLocal>
		</md:LocalizedInfo>
		<md:RunLength>P1Y2M3DT10H30M0S</md:RunLength>
		<md:ReleaseYear>2001</md:ReleaseYear>
		<md:ReleaseDate>2010-08-13</md:ReleaseDate>
		<md:ReleaseHistory>
			<md:ReleaseType>PurpleRay</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">2010-08-13</md:Date>
			<md:Description>String324342342</md:Description>
			<md:ReleaseOrg organizationID="Stringggfsg">
				<md:DisplayName>Stringsgs</md:DisplayName>
				<md:SortName>Stringsdgsdf</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:ReleaseHistory>
			<md:ReleaseType>LightBlueRay</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">2010-08-13</md:Date>
			<md:Description>String5465464</md:Description>
			<md:ReleaseOrg organizationID="String456456">
				<md:DisplayName>String45645633</md:DisplayName>
				<md:SortName>String34534533</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:WorkType>Album</md:WorkType>
		<md:PictureColorType>color</md:PictureColorType>
		<md:PictureFormat>Letterbox</md:PictureFormat>
		<md:ThreeD>true</md:ThreeD>
		<md:AltIdentifier>
			<md:Namespace>String</md:Namespace>
			<md:Identifier>String</md:Identifier>
			<md:Location>http://www.altova.com</md:Location>
		</md:AltIdentifier>
		<md:AltIdentifier>
			<md:Namespace>String1221</md:Namespace>
			<md:Identifier>String1221</md:Identifier>
			<md:Location>http://www.altova122121.com</md:Location>
		</md:AltIdentifier>
		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>MPAA</md:System>
        			<md:Value>PG-13</md:Value>
        			<md:LinkToLogo>http://www.mpaa.org/_images/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet>
<!--		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>TVPG</md:System>
        			<md:Value>TV-Y7</md:Value>
        			<md:LinkToLogo>http://www.tvguidelines.org/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet> -->
<!--		<md:RatingSet>
			<md:NotRated>true</md:NotRated>
			<md:AdultContent>true</md:AdultContent>
		</md:RatingSet> -->
		<md:People>
			<md:Job>
				<md:JobFunction scheme="string">27.13</md:JobFunction>
				<md:JobDisplay>String55</md:JobDisplay>
				<md:BillingBlockOrder>55</md:BillingBlockOrder>
				<md:Character>String55</md:Character>
				<md:Character>String55222</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="string">28.2</md:JobFunction>
				<md:JobDisplay>String66</md:JobDisplay>
				<md:BillingBlockOrder>66</md:BillingBlockOrder>
				<md:Character>String66</md:Character>
				<md:Character>String62126</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String77</md:DisplayName>
				<md:SortName>String77</md:SortName>
				<md:FirstGivenName>String77</md:FirstGivenName>
				<md:SecondGivenName>String77</md:SecondGivenName>
				<md:FamilyName>String77</md:FamilyName>
				<md:Suffix>String77</md:Suffix>
				<md:Moniker>String77</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String88</md:Identifier>
				<md:Namespace>String</md:Namespace>
				<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:People>
			<md:Job>
				<md:JobFunction scheme="String">28</md:JobFunction>
				<md:JobDisplay>String99</md:JobDisplay>
				<md:BillingBlockOrder>99</md:BillingBlockOrder>
				<md:Character>String99</md:Character>
				<md:Character>Strindfsdffdg99</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="String">27.14</md:JobFunction>
				<md:JobDisplay>String111</md:JobDisplay>
				<md:BillingBlockOrder>111</md:BillingBlockOrder>
				<md:Character>String111</md:Character>
				<md:Character>String111wrwewewewe</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String222</md:DisplayName>
				<md:SortName>String222</md:SortName>
				<md:FirstGivenName>String222</md:FirstGivenName>
				<md:SecondGivenName>String222</md:SecondGivenName>
				<md:FamilyName>String222</md:FamilyName>
				<md:Suffix>String222</md:Suffix>
				<md:Moniker>String222</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String333</md:Identifier>
				<md:Namespace>String333</md:Namespace>
				<md:ReferenceLocation>http://www.altova333.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Identifier>
				<md:Identifier>String444</md:Identifier>
				<md:Namespace>String444</md:Namespace>
				<md:ReferenceLocation>http://www.altova444.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:CountryOfOrigin>
			<md:country>AA</md:country>
		</md:CountryOfOrigin>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:SequenceInfo>
			<md:Number>0</md:Number>
			<md:HouseSequence>String</md:HouseSequence>
		</md:SequenceInfo>
		<md:Parent relationshipType="ispieceof">
		<!--	<md:ParentContentID>urn:dece:cid:org:mystudio:0067</md:ParentContentID>-->
			<md:ParentContentID>urn:dece:cid:org:mystudio:0005</md:ParentContentID> 
		</md:Parent>
	</dece:BasicData>
	<dece:ResourceStatus>
		<dece:Current>
			<dece:Value>urn:dece:type:status:active</dece:Value>
			<dece:Description>2010-08-01T09:30:47.0Z</dece:Description>
		</dece:Current>
		<dece:History>
			<dece:Prior>
				<dece:Value>urn:dece:type:status:suspended</dece:Value>
				<dece:Description>temp suspension</dece:Description>
			</dece:Prior>
			<dece:Prior>
				<dece:Value>urn:dece:type:status:active</dece:Value>
				<dece:Description>active</dece:Description>
			</dece:Prior>
		</dece:History>
	</dece:ResourceStatus>
</dece:BasicAsset>]]></con:request><con:assertion type="XPath Match" name="Match content of [ns2:UpdateNum]" disabled="true"><con:configuration><path>declare namespace ns2='${#Project#md_schema}';
declare namespace ns1='${Coordinator_Schema}';
//ns1:BasicAsset[1]/ns1:BasicData[1]/ns2:UpdateNum[1]/text()</path><content>70</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - MetadataBasicCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeGet");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET - MetadataBasicCreate');
		def expXML = tStep.httpRequest.response.getResponseContent();
		
		String Cache_Control = null;
		String ETag = null;
		String Expires   = null;
		String Last_Modified = null;
		String x_Transaction_Info = null;
		String Vary=null;
		tStep.httpRequest.response.responseHeaders.each() {	 header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					}
		}

			tC.setPropertyValue("Cache-Control", Cache_Control);
			tC.setPropertyValue("ETag", ETag);
			tC.setPropertyValue("Expires", Expires);
			tC.setPropertyValue("Last-Modified", Last_Modified);
			tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
			tC.setPropertyValue("Vary", Vary);
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET - MetadataBasicCreate');
		def expXML = tStep.httpRequest.response.getResponseContent();
		String Vary=null;
		String Cache_Control = null;
		String ETag = null;
		//String Expires   = null;
		//String Last_Modified = null;
		String x_Transaction_Info = null;
		
		tStep.httpRequest.response.responseHeaders.each() { header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				/*case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;*/
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					
			}
		}
		
		tC.setPropertyValue("Cache-Control", Cache_Control);
		tC.setPropertyValue("ETag", ETag);
		//tC.setPropertyValue("Expires", Expires);
		//tC.setPropertyValue("Last-Modified", Last_Modified);
		tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
		tC.setPropertyValue("Vary", Vary);
	}


</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==null)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==null)
		assert 1==2
		
		def Expires=tC.getPropertyValue("Expires")
		if(Expires==null)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==null)
		assert 1==2
		
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==null)
		assert 1==2
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==false)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==false)
		assert 1==2
		
		/*def Expires=tC.getPropertyValue("Expires")
		if(Expires==false)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==false)
		assert 1==2
		*/
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==false)
		assert 1==2

		def Vary=tC.getPropertyValue("Vary")
		if(Vary==null)
		assert 1==2

	}</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>MetadataBasicGet_DHOST_Account_Active_RTR_ORG2_BasicAuth in R3 shows updated information (no stale data in cache)</con:value></con:property><con:property><con:name>sName</con:name><con:value>MetadataBasicCreate_ContentProvider</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>46961</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<BasicAsset xmlns="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ns2="${#Project#md_schema}" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <BasicData ContentID="urn:dece:cid:ISMN:979-0-51719-0043-9">
      <ns2:UpdateNum>70</ns2:UpdateNum>
      <ns2:LocalizedInfo default="true" language="en">
         <ns2:TitleDisplay19>md:TitleDisplay19</ns2:TitleDisplay19>
         <ns2:TitleDisplay60>md:TitleDisplay60_Update</ns2:TitleDisplay60>
         <ns2:TitleDisplayUnlimited>md:TitleDisplayUnlimited</ns2:TitleDisplayUnlimited>
         <ns2:TitleSort>md:TitleSort</ns2:TitleSort>
         <ns2:ArtReference resolution="96x144">https://qa.uvvu.com:7001/ssp/image?type=image&amp;image=http://havadenglish.files.wordpress.com/2013/03/a-beautiful-mind-movie-poster_96x144.jpg</ns2:ArtReference>
         <ns2:ArtReference resolution="112x160">https://qa.uvvu.com:7001/ssp/image?type=image&amp;image=http://havadenglish.files.wordpress.com/2013/03/a-beautiful-mind-movie-poster_112x160.jpg</ns2:ArtReference>
         <ns2:ArtReference resolution="192x288">https://qa.uvvu.com:7001/ssp/image?type=image&amp;image=http://havadenglish.files.wordpress.com/2013/03/a-beautiful-mind-movie-poster_192x288.jpg</ns2:ArtReference>
         <ns2:ArtReference resolution="224x320">https://qa.uvvu.com:7001/ssp/image?type=image&amp;image=http://havadenglish.files.wordpress.com/2013/03/a-beautiful-mind-movie-poster_224x320.jpg</ns2:ArtReference>
         <ns2:ArtReference resolution="800x1200">https://qa.uvvu.com:7001/ssp/image?type=image&amp;image=http://havadenglish.files.wordpress.com/2013/03/a-beautiful-mind-movie-poster.jpg</ns2:ArtReference>
         <ns2:ArtReference resolution="840x1200">https://qa.uvvu.com:7001/ssp/image?type=image&amp;image=http://havadenglish.files.wordpress.com/2013/03/a-beautiful-mind-movie-poster_840x1200.jpg</ns2:ArtReference>
         <ns2:Summary190 cast="true">md:Summary190</ns2:Summary190>
         <ns2:Summary400 cast="true">md:Summary400</ns2:Summary400>
         <ns2:Summary4000 cast="true">md:Summary4000</ns2:Summary4000>
         <ns2:DisplayIndicators>CC</ns2:DisplayIndicators>
         <ns2:Genre level="0" source="http://tempuri.org">md:Genre</ns2:Genre>
         <ns2:Keyword>md:Keyword</ns2:Keyword>
         <ns2:VersionNotes>md:VersionNotes</ns2:VersionNotes>
         <ns2:Region>
            <ns2:country>US</ns2:country>
         </ns2:Region>
         <ns2:OriginalTitle>en-US_!Dr._POST_ "W" Jones!- _?_@#$%^  *()_+[]{};':",./_?_\|ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€ Ã¢â‚¬â„¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¾ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â¦ÃƒÂ¢Ã¢â€šÂ¬ ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â¡Ãƒâ€¹Ã¢â‚¬ ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â°Ãƒâ€¦ ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â¹Ãƒâ€¦Ã¢â‚¬â„¢Ãƒâ€¦Ã‚Â½ ÃƒÆ’Ã‚Â©</ns2:OriginalTitle>
         <ns2:CopyrightLine>© 2012 Lions Gate Entertainment Inc. All Rights Reserved.</ns2:CopyrightLine>
         <ns2:PeopleLocal>
            <ns2:Job>
               <ns2:JobFunction>md:JobFunction</ns2:JobFunction>
               <ns2:JobDisplay language="en">md:JobDisplay</ns2:JobDisplay>
               <ns2:BillingBlockOrder>0</ns2:BillingBlockOrder>
               <ns2:Character>md:Character</ns2:Character>
               <ns2:Guest>true</ns2:Guest>
            </ns2:Job>
            <ns2:Name>
               <ns2:DisplayName language="en">md:DisplayName</ns2:DisplayName>
               <ns2:SortName language="en">md:SortName</ns2:SortName>
               <ns2:FirstGivenName>md:FirstGivenName</ns2:FirstGivenName>
               <ns2:SecondGivenName>md:SecondGivenName</ns2:SecondGivenName>
               <ns2:FamilyName>md:FamilyName</ns2:FamilyName>
               <ns2:Suffix>md:Suffix</ns2:Suffix>
               <ns2:Moniker>md:Moniker</ns2:Moniker>
            </ns2:Name>
            <ns2:Identifier>
               <ns2:Identifier>md:Identifier</ns2:Identifier>
               <ns2:Namespace>md:Namespace</ns2:Namespace>
               <ns2:ReferenceLocation>http://tempuri.org</ns2:ReferenceLocation>
            </ns2:Identifier>
            <ns2:Gender>male</ns2:Gender>
         </ns2:PeopleLocal>
         <ns2:TitleAlternate language="en">md:TitleAlternate</ns2:TitleAlternate>
      </ns2:LocalizedInfo>
      <ns2:RunLength>P1DT0H0M0.000S</ns2:RunLength>
      <ns2:ReleaseYear>2001</ns2:ReleaseYear>
      <ns2:ReleaseDate>2011-07-28T10:00:00Z</ns2:ReleaseDate>
      <ns2:ReleaseHistory>
         <ns2:ReleaseType wide="true">md:ReleaseType</ns2:ReleaseType>
         <ns2:DistrTerritory>
            <ns2:country>US</ns2:country>
         </ns2:DistrTerritory>
         <ns2:Date scheduled="true">2011-07-28T10:00:00Z</ns2:Date>
         <ns2:Description>md:Description</ns2:Description>
         <ns2:ReleaseOrg>
            <ns2:DisplayName>md:DisplayName</ns2:DisplayName>
            <ns2:SortName>md:SortName</ns2:SortName>
         </ns2:ReleaseOrg>
      </ns2:ReleaseHistory>
      <ns2:WorkType>Movie</ns2:WorkType>
      <ns2:PictureColorType>color</ns2:PictureColorType>
      <ns2:PictureFormat>md:PictureFormat</ns2:PictureFormat>
      <ns2:ThreeD>true</ns2:ThreeD>
      <ns2:AltIdentifier>
         <ns2:Namespace>md:Namespace</ns2:Namespace>
         <ns2:Identifier>md:Identifier</ns2:Identifier>
         <ns2:Location>http://tempuri.org</ns2:Location>
      </ns2:AltIdentifier>
      <ns2:RatingSet>
         <ns2:NotRated>true</ns2:NotRated>
         <ns2:AdultContent>true</ns2:AdultContent>
      </ns2:RatingSet>
      <ns2:People>
         <ns2:Job>
            <ns2:JobFunction>md:JobFunction</ns2:JobFunction>
            <ns2:JobDisplay language="en">md:JobDisplay</ns2:JobDisplay>
            <ns2:BillingBlockOrder>0</ns2:BillingBlockOrder>
            <ns2:Character>md:Character</ns2:Character>
            <ns2:Guest>true</ns2:Guest>
         </ns2:Job>
         <ns2:Name>
            <ns2:DisplayName language="en">md:DisplayName</ns2:DisplayName>
            <ns2:SortName language="en">md:SortName</ns2:SortName>
            <ns2:FirstGivenName>md:FirstGivenName</ns2:FirstGivenName>
            <ns2:SecondGivenName>md:SecondGivenName</ns2:SecondGivenName>
            <ns2:FamilyName>md:FamilyName</ns2:FamilyName>
            <ns2:Suffix>md:Suffix</ns2:Suffix>
            <ns2:Moniker>md:Moniker</ns2:Moniker>
         </ns2:Name>
         <ns2:Identifier>
            <ns2:Identifier>md:Identifier</ns2:Identifier>
            <ns2:Namespace>md:Namespace</ns2:Namespace>
            <ns2:ReferenceLocation>http://tempuri.org</ns2:ReferenceLocation>
         </ns2:Identifier>
         <ns2:Gender>male</ns2:Gender>
      </ns2:People>
      <ns2:CountryOfOrigin>
         <ns2:country>US</ns2:country>
      </ns2:CountryOfOrigin>
      <ns2:PrimarySpokenLanguage>en</ns2:PrimarySpokenLanguage>
      <ns2:AssociatedOrg>
         <ns2:DisplayName>md:DisplayName</ns2:DisplayName>
         <ns2:SortName>md:SortName</ns2:SortName>
      </ns2:AssociatedOrg>
      <ns2:SequenceInfo>
         <ns2:Number>0</ns2:Number>
         <ns2:HouseSequence>md:HouseSequence</ns2:HouseSequence>
      </ns2:SequenceInfo>
   </BasicData>
   <ResourceStatus>
      <Current ModifiedBy="urn:dece:org:org:dece:2222" CreatedBy="urn:dece:org:org:dece:2222" CreationDate="2013-06-04T11:43:20.403Z">
         <Value>urn:dece:type:status:active</Value>
      </Current>
   </ResourceStatus>
</BasicAsset>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">7984</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:ISMN:979-0-${#TestCase#RandomNumberGenerated}-0043-9</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn%3Adece%3Acid%3AISMN%3A979-0-46961-0043-9</con:value></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>UpdateNum</con:name><con:value>70</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\\DECE\\2222_concat.pem</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GET-MetadataBasicList" searchProperties="true" id="56cbfb32-577a-4cfe-aa0f-646d2753feea"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET-MetadataBasicList");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET-MetadataBasicList"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET-MetadataBasicList" mediaType="application/xml" sslKeystore="LLASP_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET-MetadataBasicList');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
		/*case "ETag": 
			ETag = value[0]; 
			break;*/

	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
//tP.setPropertyValue("ETag", ETag);</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeGet");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Assertion for threshold Pagination" id="66d88acf-0713-4166-9ed8-1652beb0bb30"><con:settings/><con:config><script>/*checking in response the GetList contains maximum  values 1000 */
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def response = context.expand( '${GET-MetadataBasicList#Response#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]}' )
log.info response.size()

def filtercount = context.expand( '${GET-MetadataBasicList#ResponseAsXml#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]/@FilterCount}' )

log.info filtercount

def responseAsXml = context.expand( '${GET-MetadataBasicList#ResponseAsXml#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]/ns1:BasicAssetReference[1]}' )

def records = new XmlParser().parseText(response);
log.info records.value().size()

if(records.value().size().toString()!= filtercount.toString())
{
	assert 1==2;
}
}</script></con:config></con:testStep><con:testStep type="groovy" name="Extract The Response Header ETag"><con:settings/><con:config><script>/*Extracting ETag from response and storing it in Project level Property*/
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET-MetadataBasicList');
def expXML = tStep.httpRequest.response.getResponseContent();

String ETag = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "ETag": 
			ETag = value[0]; 
			break;
	}
}

tP.setPropertyValue("ETag", ETag);
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Assertion For  Order of dates"><con:settings/><con:config><script>/*Asserting weather the updated dates in the GetList response are in descending order */

def httpStatus = context.expand( '${#TestCase#httpStatus}' )
if(httpStatus=='HTTP/1.1 200 OK')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def response = context.expand( '${GET-MetadataBasicList#Response#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]}' )



log.info response
def possiblySorted = []
def records = new XmlParser().parseText(response);
log.info records

for(int i=0;i&lt;=records.BasicAssetReference.size()-1;i++){
//log.info records.DigitalAssetReference[i].@UpdatedDate;
if(records.BasicAssetReference[i].@UpdatedDate==null)
	possiblySorted.add(records.BasicAssetReference[i].@CreatedDate);
else
	possiblySorted.add(records.BasicAssetReference[i].@UpdatedDate);

}

log.info possiblySorted;
def sortedCopy = new ArrayList&lt;>(possiblySorted)
log.info sortedCopy.sort().reverse();
if( possiblySorted != sortedCopy.sort().reverse())
{
assert 1==2
}
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET-MetadataBasicList');
		def expXML = tStep.httpRequest.response.getResponseContent();
		
		String Cache_Control = null;
		String ETag = null;
		String Expires   = null;
		String Last_Modified = null;
		String x_Transaction_Info = null;
		String Vary=null;
		tStep.httpRequest.response.responseHeaders.each() {	 header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					}
		}

			tC.setPropertyValue("Cache-Control", Cache_Control);
			tC.setPropertyValue("ETag", ETag);
			tC.setPropertyValue("Expires", Expires);
			tC.setPropertyValue("Last-Modified", Last_Modified);
			tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
			tC.setPropertyValue("Vary", Vary);
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET-MetadataBasicList');
		def expXML = tStep.httpRequest.response.getResponseContent();
		String Vary=null;
		String Cache_Control = null;
		String ETag = null;
		//String Expires   = null;
		//String Last_Modified = null;
		String x_Transaction_Info = null;
		
		tStep.httpRequest.response.responseHeaders.each() { header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				/*case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;*/
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					
			}
		}
		
		tC.setPropertyValue("Cache-Control", Cache_Control);
		tC.setPropertyValue("ETag", ETag);
		//tC.setPropertyValue("Expires", Expires);
		//tC.setPropertyValue("Last-Modified", Last_Modified);
		tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
		tC.setPropertyValue("Vary", Vary);
	}


</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==null)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==null)
		assert 1==2
		
		def Expires=tC.getPropertyValue("Expires")
		if(Expires==null)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==null)
		assert 1==2
		
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==null)
		assert 1==2
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==false)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==false)
		assert 1==2
		
		/*def Expires=tC.getPropertyValue("Expires")
		if(Expires==false)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==false)
		assert 1==2
		*/
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==false)
		assert 1==2

		def Vary=tC.getPropertyValue("Vary")
		if(Vary==null)
		assert 1==2

	}</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>TC_DECE_10088_MetadataBasicList__PERM_Access_Control_Rights_Linked LASP_Successful</con:value></con:property><con:property><con:name>sName</con:name><con:value>MetadataBasicList Different Roles</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_309541210.txt</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>309541210</con:value></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1PC/LLASP_concat.pem</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<BasicAssetList FilterClass="urn:dece:type:viewfilter:lastmodifieddate" FilterOffset="0" FilterCount="1000" FilterMoreAvailable="true" xmlns="http://www.decellc.org/schema/2015/03/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_796661278.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T06:47:12.144Z" UpdatedDate="2015-02-18T06:47:12.144Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:198213452" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T06:38:26.593Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:198213452" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T06:38:26.593Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:198213452" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T06:38:19.310Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:198213452" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T06:38:19.310Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:198213452" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T06:38:19.310Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:198213452" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T06:38:19.310Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:218629262" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T06:23:02.211Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:218629262" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T06:23:02.211Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:218629262" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T06:23:02.211Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:218629262" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T06:23:02.211Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:545023721" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T06:16:04.160Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:545023721" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T06:16:04.160Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:545023721" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T06:16:04.160Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:545023721" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T06:16:04.160Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_436627811.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T04:54:35.001Z" UpdatedDate="2015-02-18T04:54:35.001Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:436627811" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T04:52:59.640Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:448668650" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T04:42:56.703Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_448668650.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T04:42:56.703Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:766550915" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:29:34.443Z" UpdatedDate="2015-02-18T01:29:34.443Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_766550915.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:29:34.443Z" UpdatedDate="2015-02-18T01:29:34.443Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:636977650" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:27:24.418Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_636977650.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:27:24.418Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:981772176" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:26:20.293Z" UpdatedDate="2015-02-18T01:26:20.293Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:436968496" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:24:52.063Z" UpdatedDate="2015-02-18T01:24:52.063Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_436968496.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:24:52.063Z" UpdatedDate="2015-02-18T01:24:52.063Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:323951642" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:20:56.783Z" UpdatedDate="2015-02-18T01:20:56.783Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_313761019.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:19:19.626Z" UpdatedDate="2015-02-18T01:19:19.626Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:313761019" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:18:15.293Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:833272486" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:16:27.107Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:973531174" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:16:07.295Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_973531174.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:16:07.295Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:613715180" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:15:34.004Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_613715180.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:15:34.004Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:343317209" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:15:01.074Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_343317209.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:15:01.074Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:578869470" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:14:32.613Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_578869470.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:14:32.613Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:958751429" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:13:58.107Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_958751429.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:13:58.107Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:379620910" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:13:25.544Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_379620910.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:13:25.544Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_347266552.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:13:14.985Z" UpdatedDate="2015-02-18T01:13:14.985Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:347266552" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:11:25.396Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:559655234" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:11:07.918Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_559655234.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:11:07.918Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:987717760" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:10:41.892Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_987717760.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:10:41.892Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_860545293.txt" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2015-02-18T01:08:24.924Z" UpdatedDate="2015-02-18T01:09:59.461Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:860545293" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:08:24.924Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:871971003" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:08:02.381Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_871971003.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:08:02.381Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_425901932.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:07:45.868Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:491452867" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:06:15.025Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_491452867.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:06:15.025Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:139502881" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:05:56.488Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_139502881.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:05:56.488Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:906536141" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:04:14.161Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:599566759" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:03:52.281Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_599566759.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:03:52.281Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_198067113.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:03:35.336Z" UpdatedDate="2015-02-18T01:03:35.336Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:198067113" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:01:44.099Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:183389182" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:01:24.994Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_183389182.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T01:01:24.994Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:898466993" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:59:00.292Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:554404374" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:56:34.341Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:549668904" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:56:29.260Z" UpdatedDate="2015-02-18T00:56:29.260Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_549668904.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:56:29.260Z" UpdatedDate="2015-02-18T00:56:29.260Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:102046059" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:52:41.130Z" UpdatedDate="2015-02-18T00:52:41.130Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:839241514" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:50:46.710Z" UpdatedDate="2015-02-18T00:50:46.710Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:718231512" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:16:26.677Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:718231512" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:16:26.677Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:718231512" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:16:23.323Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:718231512" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:16:23.323Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:718231512" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:16:23.323Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:718231512" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:16:23.323Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:780437046" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:16:18.462Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:780437046" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:16:18.462Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:780437046" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:16:14.484Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:780437046" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:16:14.484Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:780437046" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:16:14.484Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:780437046" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:16:14.484Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:401689250" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:14:39.671Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:401689250" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:14:39.671Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:401689250" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:14:39.671Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:401689250" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:14:39.671Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:238651546" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:13:15.604Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:238651546" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:13:15.604Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:238651546" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:13:15.604Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:238651546" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:13:15.604Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:693452223" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:11:50.116Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:693452223" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:11:50.116Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:693452223" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:11:50.116Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:693452223" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:11:50.116Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:206941050" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:10:12.947Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:206941050" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:10:12.947Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:206941050" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:10:12.947Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:206941050" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:10:12.947Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:883773875" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:08:42.587Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:883773875" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:08:42.587Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:883773875" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:08:42.587Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:883773875" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:08:42.587Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:548137696" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:07:36.958Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:548137696" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:07:36.958Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:548137696" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:07:36.958Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:548137696" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:07:36.958Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:754008713" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:07:27.603Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:754008713" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:07:27.603Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:754008713" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:07:27.603Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:754008713" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:07:27.603Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:149094648" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:07:16.026Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:149094648" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:07:16.026Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:149094648" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:07:14.720Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:149094648" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:07:14.720Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:149094648" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:07:14.720Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:149094648" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:07:14.720Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:337817656" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:07:09.581Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:337817656" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:07:09.581Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:337817656" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:07:05.884Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:337817656" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:07:05.884Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:337817656" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:07:05.884Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:337817656" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:07:05.884Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:996071411" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:06:58.697Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:996071411" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:06:58.697Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:996071411" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:06:54.055Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:996071411" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:06:54.055Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:996071411" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:06:54.055Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:996071411" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:06:54.055Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:947249555" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:05:22.975Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:947249555" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:05:22.975Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:947249555" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:05:22.975Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:947249555" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:05:22.975Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:117262246" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:03:49.094Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:117262246" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:03:49.094Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:117262246" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:03:49.094Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:117262246" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:03:49.094Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:376718687" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:02:07.142Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:376718687" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:02:07.142Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:376718687" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:02:07.142Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:376718687" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:02:07.142Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:607965760" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:00:16.633Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:607965760" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:00:16.633Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:607965760" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:00:16.633Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:607965760" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T00:00:16.633Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:701636567" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:58:46.765Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:701636567" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:58:46.765Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:701636567" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:58:46.765Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:701636567" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:58:46.765Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:243159483" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:57:39.524Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:243159483" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:57:39.524Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:243159483" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:57:39.524Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:243159483" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:57:39.524Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:854372828" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:56:14.917Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:854372828" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:56:14.917Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:854372828" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:56:14.917Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:854372828" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:56:14.917Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:682010699" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:54:49.307Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:682010699" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:54:49.307Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:682010699" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:54:49.307Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:682010699" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:54:49.307Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:435037496" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:53:21.633Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:435037496" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:53:21.633Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:435037496" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:53:21.633Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:435037496" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:53:21.633Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:885023820" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:52:00.956Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:885023820" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:52:00.956Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:885023820" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:52:00.956Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:885023820" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:52:00.956Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:863374464" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:50:52.028Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:863374464" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:50:52.028Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:863374464" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:50:52.028Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:863374464" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:50:52.028Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:137543838" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:50:20.555Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_137543838.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:50:20.555Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:884834305" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:49:44.660Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:884834305" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:49:44.660Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:884834305" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:49:44.660Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:884834305" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:49:44.660Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:649522277" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:49:06.561Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_649522277.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:49:06.561Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:280274980" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:48:36.024Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:280274980" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:48:36.024Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:280274980" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:48:36.024Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:280274980" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:48:36.024Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:702164143" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:47:45.366Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_702164143.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:47:45.366Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:370933233" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:47:11.022Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:370933233" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:47:11.022Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:370933233" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:47:11.022Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:370933233" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:47:11.022Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:159779327" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:46:21.180Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_159779327.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:46:21.180Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:114425133" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:46:00.838Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:114425133" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:46:00.838Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:114425133" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:46:00.838Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:114425133" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:46:00.838Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:595408393" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:45:01.796Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_595408393.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:45:01.796Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:953679436" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:44:17.026Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:953679436" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:44:17.026Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:953679436" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:44:17.026Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:953679436" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:44:17.026Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:212011349" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:43:33.414Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_212011349.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:43:33.414Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:378342516" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:43:08.352Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:378342516" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:43:08.352Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:378342516" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:43:08.352Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:378342516" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:43:08.352Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_664180553.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:42:22.265Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:638155672" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:42:02.156Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:638155672" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:42:02.156Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:638155672" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:42:02.156Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:638155672" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:42:02.156Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:865057090" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:41:13.660Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_865057090.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:41:13.660Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:486958957" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:40:33.784Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:486958957" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:40:33.784Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:486958957" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:40:33.784Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:486958957" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:40:33.784Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:975408159" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:40:00.574Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_975408159.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:40:00.574Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:212096610" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:39:23.163Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:212096610" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:39:23.163Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:212096610" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:39:23.163Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:212096610" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:39:23.163Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:521334602" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:37:19.545Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:521334602" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:37:19.545Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:521334602" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:37:19.545Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:521334602" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:37:19.545Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:320391221" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:35:51.980Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:320391221" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:35:51.980Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:320391221" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:35:51.980Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:320391221" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:35:51.980Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:651603349" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:34:22.662Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:651603349" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:34:22.662Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:651603349" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:34:22.662Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:651603349" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:34:22.662Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:123549682" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:32:57.628Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:123549682" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:32:57.628Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:123549682" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:32:57.628Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:123549682" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:32:57.628Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:306641300" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:31:14.705Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:306641300" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:31:14.705Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:306641300" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:31:14.705Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:306641300" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:31:14.705Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:306651623" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:29:41.577Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:306651623" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:29:41.577Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:306651623" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:29:41.577Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:306651623" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:29:41.577Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:370364030" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:28:20.981Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:370364030" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:28:20.981Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:370364030" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:28:20.981Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:370364030" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:28:20.981Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:267454845" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:26:37.377Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:267454845" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:26:37.377Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:267454845" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:26:37.377Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:267454845" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:26:37.377Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:396326173" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:24:50.746Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:396326173" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:24:50.746Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:396326173" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:24:50.746Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:396326173" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:24:50.746Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:363488079" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:23:12.304Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:363488079" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:23:12.304Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:363488079" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:23:12.304Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:363488079" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:23:12.304Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:139826958" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:21:29.968Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:139826958" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:21:29.968Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:139826958" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:21:29.968Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:139826958" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:21:29.968Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:910394347" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:20:06.325Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:910394347" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:20:06.325Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:910394347" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:20:06.325Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:910394347" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:20:06.325Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:681797325" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:18:11.668Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:681797325" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:18:11.668Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:681797325" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:18:11.668Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:681797325" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:18:11.668Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:446419256" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:16:45.945Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:446419256" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:16:45.945Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:446419256" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:16:45.945Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:446419256" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:16:45.945Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:565876368" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:15:16.556Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:565876368" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:15:16.556Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:565876368" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:15:16.556Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:565876368" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:15:16.556Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:195428950" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:13:28.856Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:195428950" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:13:28.856Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:195428950" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:13:28.856Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:195428950" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:13:28.856Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:387528624" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:12:12.036Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:387528624" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:12:12.036Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:387528624" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:12:12.036Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:387528624" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:12:12.036Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:586539207" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:10:53.452Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:586539207" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:10:53.452Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:586539207" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:10:53.452Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:586539207" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:10:53.452Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:691838562" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:09:30.548Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:691838562" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:09:30.548Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:691838562" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:09:30.548Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:691838562" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:09:30.548Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:535036425" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:08:23.320Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:535036425" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:08:23.320Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:535036425" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:08:23.320Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:535036425" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:08:23.320Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:575727254" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:07:13.133Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:575727254" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:07:13.133Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:575727254" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:07:10.425Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:575727254" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:07:10.425Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:575727254" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:07:10.425Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:575727254" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:07:10.425Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:216940494" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:07:05.692Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:216940494" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:07:05.692Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:784428529" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:07:01.667Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:784428529" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:07:01.667Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:784428529" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:07:01.667Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:784428529" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:07:01.667Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:216940494" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:07:01.605Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:216940494" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:07:01.605Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:216940494" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:07:01.605Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:216940494" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:07:01.605Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:275585589" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:05:56.530Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:275585589" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:05:56.530Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:275585589" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:05:56.530Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:275585589" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:05:56.530Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:154712823" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:05:52.122Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:154712823" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:05:52.122Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:154712823" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:05:52.122Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:154712823" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:05:52.122Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:838094313" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:04:49.122Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:838094313" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:04:49.122Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:838094313" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:04:49.122Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:838094313" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:04:49.122Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:756396163" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:04:45.621Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:756396163" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:04:45.621Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:756396163" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:04:45.621Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:756396163" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:04:45.621Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:218005887" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:03:39.993Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:218005887" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:03:39.993Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:218005887" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:03:39.993Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:218005887" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:03:39.993Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:796877658" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:03:32.855Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:796877658" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:03:32.855Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:796877658" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:03:32.855Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:796877658" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:03:32.855Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:317959897" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:02:33.727Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:317959897" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:02:33.727Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:317959897" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:02:33.727Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:317959897" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:02:33.727Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:576654427" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:02:26.977Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:576654427" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:02:26.977Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:576654427" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:02:26.977Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:576654427" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:02:26.977Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:907750536" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:02:25.597Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:907750536" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:02:25.597Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:907750536" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:02:25.597Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:907750536" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:02:25.597Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:701040607" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:02:21.616Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:701040607" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:02:21.616Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:701040607" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:02:18.592Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:701040607" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:02:18.592Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:701040607" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:02:18.592Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:701040607" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:02:18.592Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:694768431" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:02:12.932Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:694768431" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:02:12.932Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:694768431" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:02:09.222Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:694768431" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:02:09.222Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:694768431" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:02:09.222Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:694768431" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:02:09.222Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:461580810" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:02:03.583Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:461580810" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:02:03.583Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:461580810" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:01:59.506Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:461580810" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:01:59.506Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:461580810" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:01:59.506Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:461580810" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:01:59.506Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:233114278" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:01:02.984Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:233114278" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:01:02.984Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:233114278" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:01:02.984Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:233114278" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:01:02.984Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:737509816" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:00:45.678Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:737509816" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:00:45.678Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:737509816" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:00:45.678Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:737509816" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T23:00:45.678Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:213739532" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:59:56.321Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:213739532" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:59:56.321Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:213739532" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:59:56.321Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:213739532" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:59:56.321Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:428618297" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:59:37.641Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:428618297" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:59:37.641Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:428618297" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:59:37.641Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:428618297" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:59:37.641Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:303894129" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:58:51.075Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:303894129" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:58:51.075Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:303894129" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:58:51.075Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:303894129" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:58:51.075Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:493014139" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:58:32.216Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:493014139" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:58:32.216Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:493014139" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:58:32.216Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:493014139" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:58:32.216Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:125505024" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:57:31.361Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:125505024" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:57:31.361Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:125505024" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:57:31.361Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:125505024" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:57:31.361Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:111293815" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:57:26.476Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:111293815" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:57:26.476Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:111293815" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:57:26.476Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:111293815" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:57:26.476Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:917602554" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:56:27.032Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:917602554" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:56:27.032Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:917602554" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:56:27.032Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:917602554" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:56:27.032Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:407955635" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:56:18.952Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:407955635" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:56:18.952Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:407955635" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:56:18.952Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:407955635" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:56:18.952Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:971586368" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:55:21.924Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:971586368" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:55:21.924Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:971586368" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:55:21.924Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:971586368" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:55:21.924Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:558810418" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:55:13.027Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:558810418" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:55:13.027Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:558810418" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:55:13.027Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:558810418" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:55:13.027Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:970643438" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:54:16.481Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:970643438" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:54:16.481Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:970643438" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:54:16.481Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:970643438" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:54:16.481Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:657692937" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:53:44.536Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:657692937" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:53:44.536Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:657692937" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:53:44.536Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:657692937" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:53:44.536Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:824059927" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:53:09.735Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:824059927" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:53:09.735Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:824059927" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:53:09.735Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:824059927" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:53:09.735Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:441286228" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:52:39.587Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:441286228" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:52:39.587Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:441286228" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:52:39.587Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:441286228" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:52:39.587Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:499969522" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:52:03.121Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:499969522" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:52:03.121Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:499969522" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:52:03.121Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:499969522" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:52:03.121Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:357693665" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:51:32.058Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:357693665" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:51:32.058Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:357693665" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:51:32.058Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:357693665" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:51:32.058Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:931485834" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:50:56.869Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:931485834" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:50:56.869Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:931485834" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:50:56.869Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:931485834" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:50:56.869Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:642993500" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:50:25.143Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:642993500" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:50:25.143Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:642993500" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:50:25.143Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:642993500" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:50:25.143Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:968902471" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:49:50.961Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:968902471" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:49:50.961Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:968902471" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:49:50.961Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:968902471" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:49:50.961Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:840279090" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:49:15.887Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:840279090" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:49:15.887Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:840279090" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:49:15.887Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:840279090" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:49:15.887Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:240466600" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:48:43.671Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:240466600" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:48:43.671Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:240466600" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:48:43.671Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:240466600" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:48:43.671Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:230674267" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:48:10.084Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:230674267" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:48:10.084Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:230674267" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:48:10.084Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:230674267" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:48:10.084Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:533214850" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:47:38.039Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:533214850" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:47:38.039Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:533214850" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:47:38.039Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:533214850" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:47:38.039Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:356080124" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:47:00.697Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:356080124" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:47:00.697Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:356080124" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:47:00.697Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:356080124" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:47:00.697Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:738270764" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:46:30.467Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:738270764" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:46:30.467Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:738270764" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:46:30.467Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:738270764" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:46:30.467Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:208272910" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:45:48.152Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:208272910" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:45:48.152Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:208272910" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:45:48.152Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:208272910" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:45:48.152Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:988057684" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:45:24.121Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:988057684" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:45:24.121Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:988057684" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:45:24.121Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:988057684" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:45:24.121Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:315664729" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:44:41.774Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:315664729" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:44:41.774Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:315664729" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:44:41.774Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:315664729" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:44:41.774Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:991715517" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:44:11.657Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:991715517" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:44:11.657Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:991715517" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:44:11.657Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:991715517" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:44:11.657Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:977983819" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:43:36.767Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:977983819" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:43:36.767Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:977983819" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:43:36.767Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:977983819" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:43:36.767Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:6282" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:43:06.334Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:6282" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:43:06.334Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:6282" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:43:06.334Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:6282" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:43:06.334Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:635717918" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:42:28.886Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:635717918" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:42:28.886Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:635717918" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:42:28.886Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:635717918" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:42:28.886Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:385400952" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:42:00.859Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:385400952" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:42:00.859Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:385400952" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:42:00.859Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:385400952" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:42:00.859Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_864927664.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:41:45.829Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:900548488" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:41:23.178Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:900548488" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:41:23.178Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:900548488" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:41:23.178Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:900548488" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:41:23.178Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:872987778" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:40:53.369Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:872987778" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:40:53.369Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:872987778" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:40:53.369Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:872987778" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:40:53.369Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:574090192" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:40:41.719Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_574090192.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:40:41.719Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:179321814" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:40:16.134Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:179321814" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:40:16.134Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:179321814" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:40:16.134Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:179321814" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:40:16.134Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:708198328" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:39:40.247Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:708198328" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:39:40.247Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:708198328" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:39:40.247Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:708198328" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:39:40.247Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:77823" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:39:37.645Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:WEB_PORTAL_NUMBERS_77823.txt   " CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:39:37.645Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:239513209" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:39:10.472Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:239513209" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:39:10.472Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:239513209" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:39:10.472Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:239513209" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:39:10.472Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:105794543" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:38:35.443Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:105794543" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:38:35.443Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:105794543" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:38:35.443Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:105794543" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:38:35.443Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:883146755" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:38:35.014Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:EIDR-S:1234-883146755-F5DD-9ABC-DEF0-8" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:38:35.014Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:178555911" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:37:32.784Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:uri:http:%2F%2Fwww.example.org%2FresourceNumber178555911.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:37:32.784Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:660786930" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:37:31.783Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:660786930" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:37:31.783Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:660786930" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:37:31.783Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:660786930" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:37:31.783Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:318969004" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:37:29.969Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:318969004" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:37:29.969Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:318969004" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:37:29.969Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:318969004" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:37:29.969Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:858475765" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:36:27.546Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:WEB_PORTAL_NUMBERS_858475765.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:36:27.546Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:509239568" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:36:26.681Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:509239568" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:36:26.681Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:509239568" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:36:26.681Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:509239568" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:36:26.681Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:529986620" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:36:24.139Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:529986620" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:36:24.139Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:529986620" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:36:24.139Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:529986620" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:36:24.139Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:135621756" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:35:25.121Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:EIDR-X:1234-135621756-F5DD-%3A9ABC-%3ADEF0-8:ABCD" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:35:25.121Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:240252931" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:35:19.839Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:240252931" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:35:19.839Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:240252931" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:35:19.839Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:240252931" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:35:19.839Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:999121869" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:35:17.699Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:999121869" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:35:17.699Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:999121869" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:35:17.699Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:999121869" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:35:17.699Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:293093375" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:34:23.151Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:EIDR-X:1234-293093375-F5DD-9ABC-DEF0-8%3AABCD" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:34:23.151Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:731672945" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:34:13.637Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:731672945" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:34:13.637Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:731672945" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:34:13.637Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:731672945" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:34:13.637Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:505200443" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:34:11.020Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:505200443" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:34:11.020Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:505200443" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:34:11.020Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:505200443" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:34:11.020Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:349834297" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:33:19.313Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:EIDR-X:1234-349834297-F5DD-9ABC-DEF0-8:ABCD" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:33:19.313Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:963132011" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:33:08.858Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:963132011" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:33:08.858Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:963132011" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:33:08.858Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:963132011" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:33:08.858Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:649573901" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:33:04.425Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:649573901" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:33:04.425Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:649573901" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:33:04.425Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:649573901" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:33:04.425Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:583094900" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:32:17.196Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:EIDR-S:1234-583094900-F5DD-9ABC-DEF0-8:%3A%3A" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:32:17.196Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:166612827" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:32:04.288Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:166612827" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:32:04.288Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:166612827" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:32:04.288Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:166612827" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:32:04.288Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:748980823" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:31:59.395Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:748980823" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:31:59.395Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:748980823" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:31:59.395Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:748980823" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:31:59.395Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:707976278" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:31:14.990Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:EIDR-S:1234-707976278-F5DD-9ABC-DEF0-8%3A" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:31:14.990Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:566852799" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:30:56.860Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:566852799" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:30:56.860Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:566852799" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:30:56.860Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:566852799" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:30:56.860Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:277856031" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:30:53.838Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:277856031" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:30:53.838Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:277856031" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:30:53.838Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:277856031" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:30:53.838Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:124334334" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:30:11.218Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:EIDR-S:1234-124334334-F5DD-9ABC-DEF0-8:%3A" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:30:11.218Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:491790036" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:29:47.892Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:491790036" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:29:47.892Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:491790036" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:29:47.892Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:491790036" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:29:47.892Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:82784" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:29:29.306Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:82784" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:29:29.306Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:82784" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:29:29.306Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:82784" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:29:29.306Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:588168586" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:29:08.431Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:EIDR-S:1234-588168586-F5DD-9ABC-DEF0-8:" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:29:08.431Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:653015076" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:28:41.899Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:653015076" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:28:41.899Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:653015076" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:28:41.899Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:653015076" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:28:41.899Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:120579678" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:28:21.111Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:120579678" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:28:21.111Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:120579678" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:28:21.111Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:120579678" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:28:21.111Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:902096045" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:28:06.076Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:baseline:ABCD902096045000H:%3A%3A" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:28:06.076Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:701285286" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:27:36.947Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:701285286" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:27:36.947Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:701285286" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:27:36.947Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:701285286" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:27:36.947Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:64104" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:27:16.741Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:64104" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:27:16.741Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:64104" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:27:16.741Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:64104" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:27:16.741Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:513140355" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:27:03.625Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:baseline:ABCD513140355000H%3A" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:27:03.625Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:794682285" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:26:30.754Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:794682285" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:26:30.754Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:794682285" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:26:30.754Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:794682285" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:26:30.754Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:83296" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:26:08.995Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:83296" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:26:08.995Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:83296" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:26:08.995Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:83296" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:26:08.995Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:341917157" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:26:01.079Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:baseline:ABCD341917157000H:%3A" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:26:01.079Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:407311707" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:25:25.821Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:407311707" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:25:25.821Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:407311707" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:25:25.821Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:407311707" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:25:25.821Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:732981404" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:25:03.455Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:732981404" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:25:03.455Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:732981404" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:25:03.455Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:732981404" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:25:03.455Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:480139901" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:24:58.297Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:baseline:ABCD480139901000H:" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:24:58.297Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:293168252" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:24:19.542Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:293168252" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:24:19.542Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:293168252" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:24:19.542Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:293168252" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:24:19.542Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:268189573" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:23:58.589Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:268189573" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:23:58.589Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:268189573" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:23:58.589Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:268189573" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:23:58.589Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:976283946" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:23:49.421Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:crid:%2F%2Fbbc:%3A%3A.co.uk%2Folympics%2F2012081009976283946%2F" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:23:49.421Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_693835995.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:23:32.802Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:506627244" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:23:12.958Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:506627244" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:23:12.958Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:506627244" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:23:12.958Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:506627244" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:23:12.958Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:291966695" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:22:52.119Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:291966695" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:22:52.119Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:291966695" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:22:52.119Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:291966695" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:22:52.119Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:314220787" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:22:46.047Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:crid:%2F%2Fbbc%3A.co.uk%2Folympics%2F2012081009314220787%2F" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:22:46.047Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:485241936" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:22:28.981Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_485241936.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:22:28.981Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:712798315" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:22:06.845Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:712798315" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:22:06.845Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:712798315" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:22:06.845Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:712798315" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:22:06.845Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:209825622" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:21:42.778Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:crid:%2F%2Fbbc:%3A.co.uk%2Folympics%2F2012081009209825622%2F" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:21:42.778Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:46201" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:21:26.472Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:WEB_PORTAL_NUMBERS_46201.txt   " CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:21:26.472Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:714317417" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:21:19.986Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:714317417" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:21:19.986Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:714317417" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:21:19.986Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:714317417" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:21:19.986Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:508950455" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:21:00.339Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:508950455" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:21:00.339Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:508950455" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:21:00.339Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:508950455" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:21:00.339Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:667318663" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:20:39.043Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:crid:%2F%2Fbbc:.co.uk%2Folympics%2F2012081009667318663%2F" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:20:39.043Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:135398307" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:20:23.310Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:EIDR-S:1234-135398307-F5DD-9ABC-DEF0-8" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:20:23.310Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:587983308" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:20:13.399Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:587983308" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:20:13.399Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:587983308" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:20:13.399Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:587983308" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:20:13.399Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:177327168" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:19:45.887Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:177327168" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:19:45.887Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:177327168" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:19:45.887Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:177327168" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:19:45.887Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:586886866" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:19:35.494Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:uri:http:%2F%2F%3A%3Awww.example.org%2FresourceNumber586886866.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:19:35.494Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:400213087" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:19:20.983Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:uri:http:%2F%2Fwww.example.org%2FresourceNumber400213087.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:19:20.983Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:7900" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:19:05.558Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:7900" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:19:05.558Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:7900" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:19:05.558Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:7900" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:19:05.558Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:422724095" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:18:39.467Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:422724095" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:18:39.467Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:422724095" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:18:39.467Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:422724095" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:18:39.467Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:589894092" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:18:32.236Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:uri:http%3A%2F%2Fwww.example.org%2FresourceNumber589894092.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:18:32.236Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:724683421" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:18:16.791Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:WEB_PORTAL_NUMBERS_724683421.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:18:16.791Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:309971342" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:18:14.029Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_309971342.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:18:14.029Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:579063044" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:17:59.615Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:579063044" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:17:59.615Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:579063044" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:17:59.615Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:579063044" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:17:59.615Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:479693089" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:17:32.908Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:479693089" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:17:32.908Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:479693089" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:17:32.908Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:479693089" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:17:32.908Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:671805517" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:17:25.762Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:uri:http:%2F%2Fwww.%3Aexample.org%2FresourceNumber671805517.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:17:25.762Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:786792660" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:17:11.429Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:EIDR-X:1234-786792660-F5DD-%3A9ABC-%3ADEF0-8:ABCD" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:17:11.429Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:225125127" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:16:51.600Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:225125127" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:16:51.600Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:225125127" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:16:51.600Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:225125127" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:16:51.600Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:187863136" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:16:27.818Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:187863136" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:16:27.818Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:187863136" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:16:27.818Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:187863136" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:16:27.818Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:366954337" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:16:23.052Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:uri:http:%2F%2Fwww.example.org%2FresourceNumber366954337.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:16:23.052Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:238168525" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:16:08.906Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:EIDR-X:1234-238168525-F5DD-9ABC-DEF0-8%3AABCD" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:16:08.906Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:849177666" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:15:43.219Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:849177666" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:15:43.219Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:849177666" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:15:43.219Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:849177666" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:15:43.219Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:906565397" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:15:21.139Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:906565397" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:15:21.139Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:906565397" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:15:21.139Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:906565397" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:15:21.139Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:897824104" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:15:08.118Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:EIDR:10.1234/%3AA865-897824104-:DD38-%3A0FC8-13E1-Z" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:15:08.118Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:959700457" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:15:05.362Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:EIDR-X:1234-959700457-F5DD-9ABC-DEF0-8:ABCD" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:15:05.362Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:368794839" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:14:37.160Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:368794839" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:14:37.160Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:368794839" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:14:37.160Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:368794839" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:14:37.160Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:417444664" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:14:16.795Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:417444664" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:14:16.795Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:417444664" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:14:16.795Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:417444664" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:14:16.795Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:230200058" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:14:05.562Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:EIDR:10.1234/A865-230200058-DD38-0FC8-13E1-Z" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:14:05.562Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:890892301" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:14:01.969Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:EIDR-S:1234-890892301-F5DD-9ABC-DEF0-8:%3A%3A" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:14:01.969Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:934027108" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:13:24.338Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:934027108" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:13:24.338Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:934027108" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:13:24.338Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:934027108" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:13:24.338Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:980224955" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:13:12.235Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:980224955" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:13:12.235Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:980224955" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:13:12.235Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:980224955" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:13:12.235Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:900742076" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:12:59.925Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:EIDR:10.1234/:%3AA865-900742076-DD38-0FC8-13E1-Z" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:12:59.925Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:586848475" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:12:59.589Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:EIDR-S:1234-586848475-F5DD-9ABC-DEF0-8%3A" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:12:59.589Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:2045" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:12:20.610Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:2045" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:12:20.610Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:2045" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:12:20.610Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:2045" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:12:20.610Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:320320710" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:12:07.428Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:320320710" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:12:07.428Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:320320710" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:12:07.428Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:320320710" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:12:07.428Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:747627148" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:11:57.856Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:EIDR-S:1234-747627148-F5DD-9ABC-DEF0-8:%3A" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:11:57.856Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:468886863" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:11:51.301Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:EIDR:10.1234/:A865-468886863-DD38-0FC8-13E1-Z" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:11:51.301Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:614224767" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:11:16.263Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:614224767" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:11:16.263Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:614224767" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:11:16.263Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:614224767" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:11:16.263Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:757913379" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:11:01.188Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:757913379" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:11:01.188Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:757913379" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:11:01.188Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:757913379" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:11:01.188Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:671375007" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:10:50.922Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:EIDR-S:1234-671375007-F5DD-9ABC-DEF0-8:" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:10:50.922Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:99407" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:10:44.313Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ISMN:979-0-:%3A%3A99407-0043-9" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:10:44.313Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:179319819" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:10:11.480Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:179319819" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:10:11.480Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:179319819" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:10:11.480Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:179319819" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:10:11.480Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:360566195" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:09:52.482Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:360566195" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:09:52.482Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:360566195" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:09:52.482Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:360566195" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:09:52.482Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:672510483" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:09:48.528Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:baseline:ABCD672510483000H:%3A%3A" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:09:48.528Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:25094" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:09:42.037Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ISMN:979-0-%3A25094-0043-9" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:09:42.037Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:170362301" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:09:06.137Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:170362301" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:09:06.137Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:170362301" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:09:06.137Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:170362301" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:09:06.137Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:281940487" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:08:46.269Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:baseline:ABCD281940487000H%3A" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:08:46.269Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:75867" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:08:39.856Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ISMN:979-0-:75867-0043-9%3A" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:08:39.856Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:630804193" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:08:36.041Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:630804193" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:08:36.041Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:630804193" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:08:36.041Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:630804193" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:08:36.041Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:746421731" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:08:01.019Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:746421731" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:08:01.019Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:746421731" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:08:01.019Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:746421731" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:08:01.019Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:246181242" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:07:39.877Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:baseline:ABCD246181242000H:%3A" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:07:39.877Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:24151" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:07:37.287Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ISMN:979-0-:24151-0043-9" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:07:37.287Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:247486933" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:07:26.446Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:247486933" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:07:26.446Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:247486933" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:07:26.446Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:247486933" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:07:26.446Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:491692676" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:06:53.902Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:491692676" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:06:53.902Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:491692676" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:06:53.902Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:491692676" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:06:53.902Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:339631876" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:06:36.564Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:baseline:ABCD339631876000H:" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:06:36.564Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:457419614" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:06:31.687Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:MUZE:Gone with the Wind :CID %3A%3AVersion_457419614.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:06:31.687Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:850385440" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:06:02.787Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:850385440" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:06:02.787Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:850385440" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:06:02.787Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:850385440" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:06:02.787Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:863858929" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:05:43.815Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:863858929" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:05:43.815Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:863858929" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:05:43.815Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:863858929" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:05:43.815Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:563316630" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:05:29.175Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:crid:%2F%2Fbbc:%3A%3A.co.uk%2Folympics%2F2012081009563316630%2F" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:05:29.175Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:460853209" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:05:27.424Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:MUZE:Gone with the Wind %3ACID Version_460853209.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:05:27.424Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:423750220" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:04:40.531Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:423750220" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:04:40.531Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:423750220" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:04:40.531Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:423750220" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:04:40.531Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:408044481" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:04:24.466Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:MUZE:Gone with the Wind :CID%3A Version_408044481.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:04:24.466Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:600734007" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:04:23.561Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:600734007" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:04:23.561Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:600734007" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:04:23.561Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:600734007" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:04:23.561Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:438786296" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:04:20.543Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:crid:%2F%2Fbbc%3A.co.uk%2Folympics%2F2012081009438786296%2F" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:04:20.543Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:755512288" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:03:17.134Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:755512288" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:03:17.134Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:755512288" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:03:17.134Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:755512288" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:03:17.134Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:627413907" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:03:17.115Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:crid:%2F%2Fbbc:%3A.co.uk%2Folympics%2F2012081009627413907%2F" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:03:17.115Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:737237214" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:03:16.386Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:MUZE:Gone with the Wind :CID Version_737237214.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:03:16.386Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:455094436" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:03:15.341Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:455094436" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:03:15.341Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:455094436" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:03:15.341Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:455094436" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:03:15.341Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:686032126" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:02:10.707Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ISBN:978-1-:686032126-479-1%3A%3A" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:02:10.707Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:936326749" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:02:09.129Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:crid:%2F%2Fbbc:.co.uk%2Folympics%2F2012081009936326749%2F" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:02:09.129Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:485522298" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:02:01.672Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:485522298" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:02:01.672Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:485522298" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:02:01.672Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:485522298" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:02:01.672Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:604741685" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:01:59.275Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:604741685" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:01:59.275Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:604741685" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:01:59.275Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:604741685" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:01:59.275Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:944905122" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:01:00.065Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ISBN:978-1-%3A944905122-479-1" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:01:00.065Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:930218335" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:00:58.813Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:uri:http:%2F%2F%3A%3Awww.example.org%2FresourceNumber930218335.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:00:58.813Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:425555413" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:00:38.573Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:425555413" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:00:38.573Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:425555413" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:00:38.573Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:425555413" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:00:38.573Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:832065537" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:00:38.556Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:832065537" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:00:38.556Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:832065537" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:00:38.556Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:832065537" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T22:00:38.556Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:270882770" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:59:55.824Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ISBN:978-1-:%3A270882770-479-1" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:59:55.824Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:895809283" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:59:55.629Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:uri:http%3A%2F%2Fwww.example.org%2FresourceNumber895809283.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:59:55.629Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:182545818" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:59:20.022Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:182545818" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:59:20.022Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:182545818" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:59:20.022Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:182545818" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:59:20.022Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:476887944" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:59:19.572Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:476887944" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:59:19.572Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:476887944" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:59:19.572Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:476887944" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:59:19.572Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:142507954" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:59:03.833Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:142507954" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:59:03.833Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:142507954" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:59:01.232Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:142507954" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:59:01.232Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:142507954" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:59:01.232Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:142507954" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:59:01.232Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:513498676" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:58:53.044Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:uri:http:%2F%2Fwww.%3Aexample.org%2FresourceNumber513498676.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:58:53.044Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:491358357" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:58:47.792Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ISBN:978-1-:491358357-479-1" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:58:47.792Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:615907840" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:58:14.758Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:615907840" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:58:14.758Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:615907840" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:58:14.758Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:615907840" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:58:14.758Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:302542853" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:57:50.663Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:uri:http:%2F%2Fwww.example.org%2FresourceNumber302542853.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:57:50.663Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:358063185" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:57:45.822Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ISSN:0317-:%3A%3A358063185" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:57:45.822Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:569559264" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:57:40.550Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:569559264" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:57:40.550Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:569559264" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:57:38.985Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:569559264" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:57:38.985Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:569559264" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:57:38.985Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:569559264" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:57:38.985Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:157744276" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:57:33.229Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:157744276" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:57:33.229Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:157744276" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:57:33.229Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:157744276" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:57:33.229Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:417400061" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:57:09.303Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:417400061" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:57:09.303Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:417400061" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:57:09.303Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:417400061" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:57:09.303Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:752999454" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:56:41.366Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ISSN:0317-%3A752999454" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:56:41.366Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:385288165" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:56:38.511Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:EIDR:10.1234/%3AA865-385288165-:DD38-%3A0FC8-13E1-Z" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:56:38.511Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:212701888" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:56:16.213Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:212701888" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:56:16.213Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:212701888" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:56:16.213Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:212701888" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:56:16.213Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:100081337" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:56:10.987Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:100081337" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:56:10.987Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:100081337" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:56:10.987Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:100081337" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:56:10.987Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:339053549" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:56:01.408Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:339053549" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:56:01.408Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:339053549" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:56:01.408Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:339053549" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:56:01.408Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:270596230" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:55:37.444Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ISSN:0317-:%3A270596230" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:55:37.444Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:267334934" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:55:35.306Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:EIDR:10.1234/A865-267334934-DD38-0FC8-13E1-Z" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:55:35.306Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:478930338" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:54:56.140Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:478930338" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:54:56.140Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:478930338" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:54:56.140Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:478930338" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:54:56.140Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:866161701" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:54:55.631Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:866161701" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:54:55.631Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:866161701" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:54:55.631Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:866161701" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:54:55.631Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:711513551" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:54:34.607Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ISSN:0317-:711513551" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:54:34.607Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:395307666" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-17T21:54:31.555Z"/>
</BasicAssetList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">162008</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Cache-Control</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">max-age=86400</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"0F5812A78A941985E05305991F0A160E:26121DD1"</con:value></con:property><con:property><con:name>Expires</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Thu, 19 Feb 2015 06:49:26 GMT</con:value></con:property><con:property><con:name>Last-Modified</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Wed, 18 Feb 2015 06:47:33 GMT</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">t=1424242166 VOQ18ApNCI4AAEy3CawAAAAF urn:dece:org:org:dece:LLASP 10.31.173.1</con:value></con:property><con:property><con:name>Vary</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Accept-Encoding</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>66d88acf-0713-4166-9ed8-1652beb0bb30</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GET-OnOrAfterMetadataBasicList" searchProperties="true" id="83edf2e3-f4e8-4123-ac06-f4c750e6e571"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
tC.setPropertyValue("onorafter",callTC.getPropertyValue("onorafter"));
/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET-OnOrAfterMetadataBasicList");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET-OnOrAfterMetadataBasicList"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List?FilterClass=urn:dece:type:viewfilter:lastmodifieddate&amp;OnOrAfter=${#TestCase#onorafter}" methodName="GET OnMetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET-OnOrAfterMetadataBasicList" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET-OnOrAfterMetadataBasicList');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeGet");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Assertion for threshold Pagination" id="9bf09b2d-914c-40ea-a987-627636bad9bd"><con:settings/><con:config><script>/*checking in response the GetList contains maximum  values 1000 */
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def response = context.expand( '${GET-OnOrAfterMetadataBasicList#Response#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]}' )

log.info response.size()

def filtercount = context.expand( '${GET-OnOrAfterMetadataBasicList#ResponseAsXml#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]/@FilterCount}' )


log.info filtercount

def responseAsXml = context.expand( '${GET-OnOrAfterMetadataBasicList#ResponseAsXml#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]/ns1:BasicAssetReference[1]}' )

def records = new XmlParser().parseText(response);
log.info records.value().size()

if(records.value().size().toString()!= filtercount.toString())
{
	assert 1==2;
}
}</script></con:config></con:testStep><con:testStep type="groovy" name="Extract The Response Header ETag"><con:settings/><con:config><script>/*Extracting ETag from response and storing it in Project level Property*/
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET-OnOrAfterMetadataBasicList');
def expXML = tStep.httpRequest.response.getResponseContent();

String ETag = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "ETag": 
			ETag = value[0]; 
			break;
	}
}

tP.setPropertyValue("ETag", ETag);
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Assertion For  Order of dates"><con:settings/><con:config><script>/*Asserting weather the updated dates in the GetList response are in descending order */
def httpStatus = context.expand( '${#TestCase#httpStatus}' )
if(httpStatus=='HTTP/1.1 200 OK')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def response = context.expand( '${GET-OnOrAfterMetadataBasicList#Response#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]}' )

log.info response
def possiblySorted = []
def records = new XmlParser().parseText(response);
log.info records

for(int i=0;i&lt;=records.BasicAssetReference.size()-1;i++){
//log.info records.DigitalAssetReference[i].@UpdatedDate;
if(records.BasicAssetReference[i].@UpdatedDate==null)
	possiblySorted.add(records.BasicAssetReference[i].@CreatedDate);
else
	possiblySorted.add(records.BasicAssetReference[i].@UpdatedDate);
}

log.info possiblySorted;
def sortedCopy = new ArrayList&lt;>(possiblySorted)
log.info sortedCopy.sort().reverse();
if( possiblySorted != sortedCopy.sort().reverse())
{
assert 1==2
}
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET-OnOrAfterMetadataBasicList');
		def expXML = tStep.httpRequest.response.getResponseContent();
		
		String Cache_Control = null;
		String ETag = null;
		String Expires   = null;
		String Last_Modified = null;
		String x_Transaction_Info = null;
		String Vary=null;
		tStep.httpRequest.response.responseHeaders.each() {	 header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					}
		}

			tC.setPropertyValue("Cache-Control", Cache_Control);
			tC.setPropertyValue("ETag", ETag);
			tC.setPropertyValue("Expires", Expires);
			tC.setPropertyValue("Last-Modified", Last_Modified);
			tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
			tC.setPropertyValue("Vary", Vary);
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET-OnOrAfterMetadataBasicList');
		def expXML = tStep.httpRequest.response.getResponseContent();
		String Vary=null;
		String Cache_Control = null;
		String ETag = null;
		//String Expires   = null;
		//String Last_Modified = null;
		String x_Transaction_Info = null;
		
		tStep.httpRequest.response.responseHeaders.each() { header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				/*case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;*/
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					
			}
		}
		
		tC.setPropertyValue("Cache-Control", Cache_Control);
		tC.setPropertyValue("ETag", ETag);
		//tC.setPropertyValue("Expires", Expires);
		//tC.setPropertyValue("Last-Modified", Last_Modified);
		tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
		tC.setPropertyValue("Vary", Vary);
	}


</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==null)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==null)
		assert 1==2
		
		def Expires=tC.getPropertyValue("Expires")
		if(Expires==null)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==null)
		assert 1==2
		
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==null)
		assert 1==2
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==false)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==false)
		assert 1==2
		
		/*def Expires=tC.getPropertyValue("Expires")
		if(Expires==false)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==false)
		assert 1==2
		*/
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==false)
		assert 1==2

		def Vary=tC.getPropertyValue("Vary")
		if(Vary==null)
		assert 1==2

	}</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>TC_DECE_10029_MetadataBasicList_FUNC_DateFormat_Correct_YYYY</con:value></con:property><con:property><con:name>sName</con:name><con:value>MetadataBasicList Content Provider</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_168401509.txt</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>168401509</con:value></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1PC/CON_concat.pem</con:value></con:property><con:property><con:name>onorafter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<BasicAssetList FilterClass="urn:dece:type:viewfilter:lastmodifieddate" FilterOffset="0" FilterCount="1000" FilterMoreAvailable="true" xmlns="http://www.decellc.org/schema/2015/03/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_168401509.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T07:39:36.586Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_426310117.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T07:37:44.396Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_113772713.txt" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2015-01-09T07:18:41.898Z" UpdatedDate="2015-01-09T07:20:32.181Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_857479217.txt" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2015-01-09T07:06:45.285Z" UpdatedDate="2015-01-09T07:08:32.657Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_949452857.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T07:01:27.236Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_684362345.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:59:04.385Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_596845087.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:59:01.511Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:994897347" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:57:51.985Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_994897347.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:57:51.985Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:750346948" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:56:37.471Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ISMN:979-0-750346948-0043-9" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:56:37.471Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:277713362" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:55:23.517Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ISMN:979-0-277713362-0043-9" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:55:23.517Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:44559" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:54:06.932Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:466665045" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:52:46.793Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:780085567" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:51:29.372Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:797005626" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:50:22.527Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:WEB_PORTAL_NUMBERS_797005626.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:50:22.527Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:208919447" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:50:18.092Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_208919447.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:50:18.092Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:466086424" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:47:56.146Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:944817298" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:46:39.893Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:181699345" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:45:20.592Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:860996004" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:44:03.341Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:990399797" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:42:47.740Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:402154210" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:41:34.883Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:720111780" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:40:20.378Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_793484911.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:40:14.773Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_195742732.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:40:12.029Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:912225760" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:39:06.077Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:182602184" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:39:03.442Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_182602184.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:39:03.442Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:267445897" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:37:53.112Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ISMN:979-0-267445897-0043-9" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:37:53.112Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:371755843" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:37:43.508Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:911992843" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:36:27.267Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ISMN:979-0-911992843-0043-9" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:36:27.267Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:397031310" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:36:19.059Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:58519" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:35:06.109Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:839459918" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:35:00.235Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:307708510" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:33:41.497Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:769813338" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:33:40.795Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:128460137" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:32:26.390Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:308265117" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:32:23.374Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:991403626" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:31:12.160Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:WEB_PORTAL_NUMBERS_991403626.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:31:12.160Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:364332190" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:31:10.812Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:189308974" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:31:02.252Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_189308974.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:31:02.252Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:112029133" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:29:55.515Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:110878229" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:28:41.857Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:641741790" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:28:37.715Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:114140353" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:27:20.863Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:270700466" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:27:20.833Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:588005915" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:26:10.121Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:742995357" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:25:59.434Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:869767926" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:24:54.478Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:558816157" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:24:47.224Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ISMN:979-0-558816157-0043-9" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:24:47.224Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:842597055" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:24:40.216Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:944595282" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:23:38.527Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ISMN:979-0-944595282-0043-9" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:23:38.527Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:991152474" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:23:36.572Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:515495926" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:23:19.365Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:750930939" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:22:22.342Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:293167622" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:22:02.010Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:774189725" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:21:04.707Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:187546687" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:20:47.613Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:417189593" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:20:21.918Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:809932089" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:19:39.423Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:610276303" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:19:33.087Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:822229495" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:19:09.239Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:544844067" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:18:22.110Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:207478849" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:18:14.463Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:124324369" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:17:54.203Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:419256845" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:17:00.165Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:847477563" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:16:39.086Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:310708234" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:16:22.725Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_999752926.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:16:20.623Z" UpdatedDate="2015-01-09T06:16:20.623Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:202475591" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:15:47.902Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:57379" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:15:21.512Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:999752926" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:15:14.716Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:813950629" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:14:32.324Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:34467" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:14:06.882Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:582777524" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:13:58.563Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:887331680" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:13:13.996Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:71164" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:12:43.551Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:576615007" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:11:57.754Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:698141364" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:11:44.667Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:EIDR-X:1234-698141364-F5DD-9ABC-DEF0-8:ABCD" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:11:44.667Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:40008" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:11:21.194Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp; Juliet :CID%3A%3A Al_Version_584129866.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:11:10.755Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:135707162" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:10:41.226Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:584129866" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:10:01.616Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp;amp; Juliet :CID%3A%3A Al_Version_584129866.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:10:01.616Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp; Juliet %3ACID Al_Version_159699887.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:09:48.241Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:789584924" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:09:21.542Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:767347600" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:09:17.975Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:EIDR-X:1234-767347600-F5DD-9ABC-DEF0-8:ABCD" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:09:17.975Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:159699887" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:08:29.582Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp;amp; Juliet %3ACID Al_Version_159699887.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:08:29.582Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp; Juliet :CID%3A Al_Version_134927152.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:08:13.044Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:932195072" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:08:00.713Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:884143273" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:08:00.221Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_465586220.txt" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2015-01-09T06:06:37.306Z" UpdatedDate="2015-01-09T06:07:58.469Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:134927152" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:07:03.293Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp;amp; Juliet :CID%3A Al_Version_134927152.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:07:03.293Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_875667266.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:06:44.835Z" UpdatedDate="2015-01-09T06:06:44.835Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:990833856" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:06:41.525Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:465586220" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:06:37.306Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:567308210" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:05:16.208Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:204718140" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:05:12.092Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp;amp; Juliet :CID Al_Version_204718140.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:05:12.092Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:875667266" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:04:40.722Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:689579933" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:04:04.219Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:203751825" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:03:23.244Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TRIB:Sanford &amp;amp; :Sons %3A%3ACID Version_203751825.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:03:23.244Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:971740798" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:03:02.469Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:922463514" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:01:22.019Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TRIB:Sanford &amp;amp; %3ASons CID Version_922463514.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:01:22.019Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:624238282" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:01:17.435Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_308568592.txt" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2015-01-09T05:59:43.885Z" UpdatedDate="2015-01-09T06:01:08.337Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:258075717" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:00:57.771Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:300422401" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:59:45.044Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:308568592" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:59:43.885Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:322467508" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:59:42.244Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TRIB:Sanford &amp;amp; :Sons %3ACID Version_322467508.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:59:42.244Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_389695604.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:59:39.319Z" UpdatedDate="2015-01-09T05:59:39.319Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TRIB:Sanford &amp; :Sons CID Version_630250309.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:59:39.303Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:630250309" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:58:33.545Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TRIB:Sanford &amp;amp; :Sons CID Version_630250309.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:58:33.545Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:668546061" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:58:29.391Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:389695604" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:58:27.415Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TVG:Law &amp; :%3A%3AOrder Criminal IntentVersion_903181185.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:57:52.881Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:138078078" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:57:12.419Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:364339682" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:57:10.873Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:903181185" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:56:46.638Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TVG:Law &amp;amp; :%3A%3AOrder Criminal IntentVersion_903181185.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:56:46.638Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TVG:Law &amp; Order Criminal %3AIntentVersion_501667460.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:56:42.991Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:203857930" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:55:53.958Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:70668" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:55:49.494Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_350787656.txt" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2015-01-09T05:54:34.932Z" UpdatedDate="2015-01-09T05:55:45.697Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:501667460" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:55:36.909Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TVG:Law &amp;amp; Order Criminal %3AIntentVersion_501667460.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:55:36.909Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TVG:Law &amp; Order %3ACriminal IntentVersion_742651533:.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:55:33.416Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:350787656" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:54:34.932Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_342376376.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:54:30.265Z" UpdatedDate="2015-01-09T05:54:30.265Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:88885" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:54:28.929Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:742651533" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:54:28.407Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TVG:Law &amp;amp; Order %3ACriminal IntentVersion_742651533:.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:54:28.407Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TVG:Law &amp; Order :Criminal IntentVersion_874169928.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:54:25.550Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:874169928" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:53:20.818Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TVG:Law &amp;amp; Order :Criminal IntentVersion_874169928.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:53:20.818Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:342376376" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:53:18.792Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_981365849.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:53:17.046Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:IMDB:Romeo &amp; :%3A%3AJuliet CID Version_995678948.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:53:12.735Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:83906" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:53:06.912Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:648344042" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:52:10.969Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_648344042.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:52:10.969Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:995678948" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:52:07.696Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:IMDB:Romeo &amp;amp; :%3A%3AJuliet CID Version_995678948.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:52:07.696Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:IMDB:Romeo &amp; %3AJuliet CID Version_141312695.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:52:05.018Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:45426" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:51:44.145Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp; Juliet :CID%3A%3A Al_Version_696442415.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:51:33.873Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:141312695" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:50:59.985Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:IMDB:Romeo &amp;amp; %3AJuliet CID Version_141312695.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:50:59.985Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:IMDB:Romeo &amp; :Juliet %3ACID Version_109901349.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:50:55.461Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:570645004" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:50:55.317Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:696442415" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:50:30.533Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp;amp; Juliet :CID%3A%3A Al_Version_696442415.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:50:30.533Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp; Juliet %3ACID Al_Version_558321447.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:50:27.178Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:109901349" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:49:51.059Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:IMDB:Romeo &amp;amp; :Juliet %3ACID Version_109901349.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:49:51.059Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:IMDB:Romeo &amp; :Juliet CID Version_577945156.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:49:47.524Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:639177358" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:49:40.322Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_585162931.txt" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2015-01-09T05:48:14.245Z" UpdatedDate="2015-01-09T05:49:30.198Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:558321447" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:49:22.476Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp;amp; Juliet %3ACID Al_Version_558321447.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:49:22.476Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp; Juliet :CID%3A Al_Version_413165520.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:49:19.085Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:577945156" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:48:42.068Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:IMDB:Romeo &amp;amp; :Juliet CID Version_577945156.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:48:42.068Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:413165520" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:48:16.631Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp;amp; Juliet :CID%3A Al_Version_413165520.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:48:16.631Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:585162931" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:48:14.245Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp; Juliet :CID Al_Version_328829585.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:48:11.238Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_501151986.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:48:11.039Z" UpdatedDate="2015-01-09T05:48:11.039Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:890338166" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:47:22.054Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:328829585" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:47:06.345Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp;amp; Juliet :CID Al_Version_328829585.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:47:06.345Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:501151986" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:47:02.234Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_916719389.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:47:00.375Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TRIB:Sanford &amp; :Sons %3A%3ACID Version_815268626.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:46:57.291Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:256446635" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:46:09.016Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:714377650" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:45:53.761Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_714377650.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:45:53.761Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:815268626" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:45:47.361Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TRIB:Sanford &amp;amp; :Sons %3A%3ACID Version_815268626.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:45:47.361Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TRIB:Sanford &amp; %3ASons CID Version_165276045.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:45:42.241Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:125654726" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:44:51.081Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:165276045" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:44:39.516Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TRIB:Sanford &amp;amp; %3ASons CID Version_165276045.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:44:39.516Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TRIB:Sanford &amp; :Sons %3ACID Version_968302665.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:44:36.304Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:171985025" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:44:29.163Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:376170444" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:43:33.774Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:968302665" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:43:33.109Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TRIB:Sanford &amp;amp; :Sons %3ACID Version_968302665.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:43:33.109Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TRIB:Sanford &amp; :Sons CID Version_326229532.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:43:30.087Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:326229532" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:42:26.975Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TRIB:Sanford &amp;amp; :Sons CID Version_326229532.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:42:26.975Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:453011454" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:42:12.442Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_179448664.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:42:08.311Z" UpdatedDate="2015-01-09T05:42:08.311Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TVG:Law &amp; :%3A%3AOrder Criminal IntentVersion_279557641.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:41:56.390Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:991996778" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:41:10.953Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:179448664" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:40:58.106Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:279557641" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:40:50.451Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TVG:Law &amp;amp; :%3A%3AOrder Criminal IntentVersion_279557641.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:40:50.451Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TVG:Law &amp; Order Criminal %3AIntentVersion_177051557.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:40:47.385Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:288587000" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:39:53.571Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:177051557" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:39:44.949Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TVG:Law &amp;amp; Order Criminal %3AIntentVersion_177051557.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:39:44.949Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TVG:Law &amp; Order %3ACriminal IntentVersion_605912955:.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:39:41.949Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:166333920" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:39:37.485Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:869168656" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:38:37.313Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:605912955" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:38:35.672Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TVG:Law &amp;amp; Order %3ACriminal IntentVersion_605912955:.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:38:35.672Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TVG:Law &amp; Order :Criminal IntentVersion_353360423.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:38:32.646Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:409194629" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:38:18.277Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_331392036.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:38:15.022Z" UpdatedDate="2015-01-09T05:38:15.022Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:353360423" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:37:25.407Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TVG:Law &amp;amp; Order :Criminal IntentVersion_353360423.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:37:25.407Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:IMDB:Romeo &amp; :%3A%3AJuliet CID Version_955291746.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:37:15.140Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:774282379" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:37:12.322Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:331392036" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:37:03.596Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_638674774.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:36:57.244Z" UpdatedDate="2015-01-09T05:36:57.244Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:955291746" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:36:12.100Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:IMDB:Romeo &amp;amp; :%3A%3AJuliet CID Version_955291746.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:36:12.100Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:IMDB:Romeo &amp; %3AJuliet CID Version_847924974.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:36:07.695Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:638674774" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:35:43.601Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:513885540" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:35:38.534Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:847924974" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:35:04.873Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:IMDB:Romeo &amp;amp; %3AJuliet CID Version_847924974.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:35:04.873Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:IMDB:Romeo &amp; :Juliet %3ACID Version_942431657.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:35:01.424Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:855884177" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:34:26.437Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:394565363" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:34:21.341Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:942431657" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:33:55.564Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:IMDB:Romeo &amp;amp; :Juliet %3ACID Version_942431657.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:33:55.564Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:IMDB:Romeo &amp; :Juliet CID Version_524096908.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:33:51.751Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:620428111" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:33:08.543Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:524096908" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:32:47.695Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:IMDB:Romeo &amp;amp; :Juliet CID Version_524096908.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:32:47.695Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:646211999" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:31:53.680Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:300453514" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:31:51.448Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:900113944" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:31:30.964Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:871612891" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:30:29.806Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:919031095" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:30:25.038Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:167787014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:30:10.760Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:498564167" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:29:04.642Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ISTC:0A9-542640042%3A-12B4A105-7:" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:28:54.795Z" UpdatedDate="2015-01-09T05:28:54.795Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:389532769" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:28:51.465Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:542640042" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:27:23.526Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:533541747" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:27:20.470Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:711937491" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:25:45.003Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:729370393" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:25:00.305Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:510898544" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:23:40.607Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:401678008" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:23:38.768Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:411283899" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:22:08.343Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:389222800" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:22:07.312Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:603541707" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:20:39.733Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:538936954" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:20:35.376Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:703818073" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:19:12.037Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:982987553" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:18:39.033Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:668420681" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:18:02.605Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:143510648" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:16:15.035Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:859457587" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:16:04.164Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:751199154" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:14:53.500Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:626385048" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:14:40.519Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:302224723" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:12:57.874Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:867767370" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:12:49.591Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:871499859" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:11:05.012Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:581496229" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:11:04.828Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:962207025" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:09:46.540Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:983490233" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:09:31.352Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:481015663" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:08:23.005Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:328538042" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:08:01.549Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:679554387" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:06:32.435Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:284902597" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:06:24.059Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:229440682" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:04:57.965Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:336251579" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:04:48.197Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:818374088" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:03:29.266Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:141414326" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:03:08.473Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:227602015" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:01:30.405Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:884875501" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:59:28.465Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:671736452" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:57:49.155Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:768446796" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:56:18.312Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:859762573" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:54:55.511Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_825262170.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:54:04.439Z" UpdatedDate="2015-01-09T04:54:04.439Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:656107387" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:53:25.181Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_705383777.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:51:58.645Z" UpdatedDate="2015-01-09T04:51:58.645Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:807778171" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:51:52.147Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:800567718" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:50:54.078Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:189301858" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:50:30.980Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_524047369.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:50:29.349Z" UpdatedDate="2015-01-09T04:50:29.349Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:808830402" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:50:26.111Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:808830402" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:50:26.111Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:808830402" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:50:17.989Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:808830402" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:50:17.989Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:808830402" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:50:17.989Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:808830402" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:50:17.989Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:261054483" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:49:40.752Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ISMN:979-0-261054483-0043-9" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:49:40.752Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_265094162.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:49:10.479Z" UpdatedDate="2015-01-09T04:49:10.479Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:156757273" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:49:10.291Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_467685216.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:48:47.697Z" UpdatedDate="2015-01-09T04:48:47.697Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:928787027" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:48:18.974Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ISMN:979-0-928787027-0043-9" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:48:18.974Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:926047698" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:47:49.412Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_125808999.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:47:43.381Z" UpdatedDate="2015-01-09T04:47:43.381Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_429681941.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:47:38.077Z" UpdatedDate="2015-01-09T04:47:38.077Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:467685216" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:47:28.637Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:686976085" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:46:53.107Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_522771235.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:46:11.604Z" UpdatedDate="2015-01-09T04:46:11.604Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_345914894.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:46:07.884Z" UpdatedDate="2015-01-09T04:46:07.884Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:648955358" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:45:11.653Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_107348544.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:44:53.147Z" UpdatedDate="2015-01-09T04:44:53.147Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_970133558.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:44:44.427Z" UpdatedDate="2015-01-09T04:44:44.427Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:250590854" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:43:38.116Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_870768696.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:43:31.376Z" UpdatedDate="2015-01-09T04:43:31.376Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_800359267.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:43:27.661Z" UpdatedDate="2015-01-09T04:43:27.661Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:657736201" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:42:39.285Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_657736201.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:42:39.285Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_529599459.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:42:03.938Z" UpdatedDate="2015-01-09T04:42:03.938Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:850935302" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:42:01.149Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:850935302" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:42:01.149Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:850689631" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:41:50.093Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:850935302" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:41:39.592Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:850935302" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:41:39.592Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:850935302" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:41:39.592Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:850935302" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:41:39.592Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_248954573.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:41:39.525Z" UpdatedDate="2015-01-09T04:41:39.525Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:521485631" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:41:31.249Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:521485631" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:41:31.249Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:521485631" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:41:24.536Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:521485631" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:41:24.536Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:521485631" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:41:24.536Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:521485631" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:41:24.536Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_861691324.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:40:41.079Z" UpdatedDate="2015-01-09T04:40:41.079Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_668456624.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:40:18.289Z" UpdatedDate="2015-01-09T04:40:18.289Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:284914130" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:39:41.687Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:284914130" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:39:41.687Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:284914130" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:39:41.687Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:284914130" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:39:41.687Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:153728718" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:39:38.198Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_878942331.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:39:19.530Z" UpdatedDate="2015-01-09T04:39:19.530Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_450447298.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:38:53.777Z" UpdatedDate="2015-01-09T04:38:53.777Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:595839625" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:38:20.645Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:595839625" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:38:20.645Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:595839625" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:38:20.645Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:595839625" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:38:20.645Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_172496314.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:38:02.729Z" UpdatedDate="2015-01-09T04:38:02.729Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_810665579.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:37:20.596Z" UpdatedDate="2015-01-09T04:37:20.596Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_494776956.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:37:10.456Z" UpdatedDate="2015-01-09T04:37:10.456Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:642739329" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:36:59.687Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:642739329" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:36:59.687Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:642739329" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:36:59.687Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:642739329" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:36:59.687Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_669817878.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:36:44.390Z" UpdatedDate="2015-01-09T04:36:44.390Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:494776956" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:36:02.016Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_321666390.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:36:00.236Z" UpdatedDate="2015-01-09T04:36:00.236Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_921679182.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:35:30.075Z" UpdatedDate="2015-01-09T04:35:30.075Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:887854559" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:35:17.269Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:887854559" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:35:17.269Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:887854559" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:35:17.269Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:887854559" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:35:17.269Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_647391173.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:34:44.939Z" UpdatedDate="2015-01-09T04:34:44.939Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:434602345" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:34:41.681Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_192374889.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:34:15.522Z" UpdatedDate="2015-01-09T04:34:15.522Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:335767648" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:33:54.755Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:335767648" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:33:54.755Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:335767648" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:33:54.755Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:335767648" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:33:54.755Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_841968091.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:33:32.069Z" UpdatedDate="2015-01-09T04:33:32.069Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:361317178" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:33:17.402Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_148184816.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:33:10.985Z" UpdatedDate="2015-01-09T04:33:10.985Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_922184665.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:55.390Z" UpdatedDate="2015-01-09T04:32:55.390Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:123724888" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:35.126Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:123724888" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:35.126Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:123724888" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:35.126Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:123724888" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:35.126Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:746753760" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:28.946Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:746753760" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:28.946Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:746753760" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:28.946Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:746753760" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:28.946Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:247919604" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:25.349Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:247919604" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:25.349Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:247919604" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:19.895Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:247919604" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:19.895Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:247919604" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:19.895Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:247919604" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:19.895Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:387974593" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:16.409Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:387974593" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:16.409Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:387974593" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:10.473Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:387974593" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:10.473Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:387974593" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:10.473Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:387974593" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:10.473Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_682836749.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:09.853Z" UpdatedDate="2015-01-09T04:32:09.853Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:286626695" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:06.790Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:286626695" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:06.790Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:286626695" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:00.464Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:286626695" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:00.464Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:286626695" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:00.464Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:286626695" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:00.464Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:148184816" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:31:45.976Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_822592290.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:31:38.466Z" UpdatedDate="2015-01-09T04:31:38.466Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_730331134.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:31:37.711Z" UpdatedDate="2015-01-09T04:31:37.711Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_300705195.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:30:42.598Z" UpdatedDate="2015-01-09T04:30:42.598Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:906147635" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:30:39.685Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:906147635" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:30:39.685Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:906147635" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:30:39.685Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:906147635" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:30:39.685Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:822592290" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:30:28.300Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_627652561.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:30:19.052Z" UpdatedDate="2015-01-09T04:30:19.052Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_463943840.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:29:24.001Z" UpdatedDate="2015-01-09T04:29:24.001Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:911143142" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:29:13.673Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:911143142" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:29:13.673Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:911143142" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:29:13.673Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:911143142" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:29:13.673Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:875482431" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:29:06.717Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_685705802.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:28:59.395Z" UpdatedDate="2015-01-09T04:28:59.395Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:680478882" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:27:57.100Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:680478882" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:27:57.100Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:680478882" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:27:57.100Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:680478882" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:27:57.100Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:810758486" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:26:08.630Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:789670182" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:26:00.395Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:789670182" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:26:00.395Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:789670182" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:26:00.395Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:789670182" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:26:00.395Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_252655726.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:25:42.354Z" UpdatedDate="2015-01-09T04:25:42.354Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:994238960" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:24:42.175Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:900828973" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:24:32.279Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:900828973" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:24:32.279Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:900828973" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:24:32.279Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:900828973" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:24:32.279Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_886827941.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:24:23.051Z" UpdatedDate="2015-01-09T04:24:23.051Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_444554211.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:24:22.257Z" UpdatedDate="2015-01-09T04:24:22.257Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_200586491.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:22:59.818Z" UpdatedDate="2015-01-09T04:22:59.818Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:519311746" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:22:53.355Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:519311746" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:22:53.355Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:519311746" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:22:53.355Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:519311746" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:22:53.355Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:200853387" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:21:27.696Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:200853387" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:21:27.696Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:200853387" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:21:27.696Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:200853387" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:21:27.696Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_660306435.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:19:53.236Z" UpdatedDate="2015-01-09T04:19:53.236Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:998517290" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:19:50.783Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:998517290" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:19:50.783Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:998517290" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:19:50.783Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:998517290" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:19:50.783Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_940092960.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:19:29.234Z" UpdatedDate="2015-01-09T04:19:29.234Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_151160520.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:18:35.277Z" UpdatedDate="2015-01-09T04:18:35.277Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:437588388" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:18:28.141Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:437588388" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:18:28.141Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:437588388" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:18:28.141Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:437588388" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:18:28.141Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_853628182.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:18:12.492Z" UpdatedDate="2015-01-09T04:18:12.492Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:403297866" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:17:08.403Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:403297866" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:17:08.403Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:403297866" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:17:08.403Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:403297866" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:17:08.403Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_750635569.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:16:42.362Z" UpdatedDate="2015-01-09T04:16:42.362Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:342955969" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:15:46.755Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:342955969" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:15:46.755Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:342955969" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:15:46.755Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:342955969" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:15:46.755Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_824797066.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:15:29.226Z" UpdatedDate="2015-01-09T04:15:29.226Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_911224559.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:15:27.429Z" UpdatedDate="2015-01-09T04:15:27.429Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:745356056" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:14:22.213Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:745356056" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:14:22.213Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:745356056" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:14:22.213Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:745356056" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:14:22.213Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_202661580.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:14:12.127Z" UpdatedDate="2015-01-09T04:14:12.127Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_773840238.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:14:12.107Z" UpdatedDate="2015-01-09T04:14:12.107Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:269389386" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:12:57.186Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:269389386" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:12:57.186Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:269389386" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:12:57.186Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:269389386" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:12:57.186Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_782160251.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:12:50.531Z" UpdatedDate="2015-01-09T04:12:50.531Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_685775849.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:12:50.422Z" UpdatedDate="2015-01-09T04:12:50.422Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:874087250" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:11:32.769Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:874087250" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:11:32.769Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:874087250" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:11:32.769Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:874087250" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:11:32.769Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_415001326.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:11:30.892Z" UpdatedDate="2015-01-09T04:11:30.892Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_955713930.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:11:25.057Z" UpdatedDate="2015-01-09T04:11:25.057Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_475949703.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:10:02.527Z" UpdatedDate="2015-01-09T04:10:02.527Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:229011471" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:10:01.157Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:229011471" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:10:01.157Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:229011471" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:10:01.157Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:229011471" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:10:01.157Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_349404480.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:09:57.378Z" UpdatedDate="2015-01-09T04:09:57.378Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:737546217" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:08:33.805Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:737546217" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:08:33.805Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:737546217" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:08:33.805Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:737546217" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:08:33.805Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_256146128.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:08:26.041Z" UpdatedDate="2015-01-09T04:08:26.041Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_519217236.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:08:25.803Z" UpdatedDate="2015-01-09T04:08:25.803Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_388317452.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:07:08.258Z" UpdatedDate="2015-01-09T04:07:08.258Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_701147740.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:07:00.669Z" UpdatedDate="2015-01-09T04:07:00.669Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:614601620" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:06:52.186Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:614601620" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:06:52.186Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:614601620" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:06:52.186Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:614601620" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:06:52.186Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_900750240.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:05:49.261Z" UpdatedDate="2015-01-09T04:05:49.261Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_341774376.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:05:38.307Z" UpdatedDate="2015-01-09T04:05:38.307Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:115596322" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:05:16.677Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:115596322" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:05:16.677Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:115596322" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:05:16.677Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:115596322" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:05:16.677Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_749238141.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:04:16.655Z" UpdatedDate="2015-01-09T04:04:16.655Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_577497507.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:04:12.023Z" UpdatedDate="2015-01-09T04:04:12.023Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:246718000" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:03:55.730Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:246718000" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:03:55.730Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:246718000" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:03:55.730Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:246718000" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:03:55.730Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_604206069.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:02:42.410Z" UpdatedDate="2015-01-09T04:02:42.410Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:940646340" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:02:20.080Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:940646340" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:02:20.080Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:940646340" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:02:20.080Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:940646340" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:02:20.080Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_867892927.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:01:21.110Z" UpdatedDate="2015-01-09T04:01:21.110Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_842261705.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:01:19.436Z" UpdatedDate="2015-01-09T04:01:19.436Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_846595454.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:00:00.272Z" UpdatedDate="2015-01-09T04:00:00.272Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_704402786.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:59:55.438Z" UpdatedDate="2015-01-09T03:59:55.438Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:440492196" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:59:38.381Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:440492196" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:59:38.381Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:440492196" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:59:38.381Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:440492196" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:59:38.381Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:871462659" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:58:04.565Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:871462659" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:58:04.565Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:871462659" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:58:04.565Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:871462659" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:58:04.565Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:296871039" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:56:32.033Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:296871039" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:56:32.033Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:296871039" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:56:32.033Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:296871039" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:56:32.033Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_128377691.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:56:09.381Z" UpdatedDate="2015-01-09T03:56:09.381Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:307507626" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:54:59.294Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:307507626" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:54:59.294Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:307507626" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:54:59.294Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:307507626" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:54:59.294Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_761544023.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:54:48.912Z" UpdatedDate="2015-01-09T03:54:48.912Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_599323729.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:54:48.909Z" UpdatedDate="2015-01-09T03:54:48.909Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:488151497" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:53:27.321Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:488151497" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:53:27.321Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:488151497" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:53:27.321Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:488151497" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:53:27.321Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_800681660.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:52:56.466Z" UpdatedDate="2015-01-09T03:52:56.466Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_288989104.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:52:47.139Z" UpdatedDate="2015-01-09T03:52:47.139Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:382829125" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:52:00.952Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:382829125" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:52:00.952Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:382829125" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:52:00.952Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:382829125" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:52:00.952Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_876107122.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:51:11.217Z" UpdatedDate="2015-01-09T03:51:11.217Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_957177960.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:50:58.329Z" UpdatedDate="2015-01-09T03:50:58.329Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:527126880" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:50:29.513Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:527126880" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:50:29.513Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:527126880" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:50:29.513Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:527126880" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:50:29.513Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:896515483" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:49:07.989Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:896515483" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:49:07.989Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:896515483" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:49:07.989Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:896515483" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:49:07.989Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_428691967.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:49:05.236Z" UpdatedDate="2015-01-09T03:49:05.236Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:442717551" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:47:48.112Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:442717551" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:47:48.112Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:442717551" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:47:48.112Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:442717551" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:47:48.112Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_840929212.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:47:26.417Z" UpdatedDate="2015-01-09T03:47:26.417Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_470139003.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:47:25.722Z" UpdatedDate="2015-01-09T03:47:25.722Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:169871634" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:46:25.460Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:169871634" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:46:25.460Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:508443667" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:46:16.513Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:508443667" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:46:16.513Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:175443755" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:46:13.043Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:175443755" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:46:13.043Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:175443755" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:46:13.043Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:175443755" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:46:13.043Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_151069521.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:45:35.241Z" UpdatedDate="2015-01-09T03:45:35.241Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:169871634" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:45:33.980Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:169871634" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:45:33.980Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:169871634" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:45:33.980Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:169871634" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:45:33.980Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_484392822.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:45:22.739Z" UpdatedDate="2015-01-09T03:45:22.739Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:508443667" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:45:13.472Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:508443667" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:45:13.472Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:508443667" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:45:13.472Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:508443667" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:45:13.472Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:590321476" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:44:44.760Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:590321476" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:44:44.760Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:590321476" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:44:44.760Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:590321476" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:44:44.760Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:321304152" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:43:32.840Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:321304152" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:43:32.840Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:321304152" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:43:32.840Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:321304152" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:43:32.840Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_110904585.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:43:29.083Z" UpdatedDate="2015-01-09T03:43:29.083Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:490247820" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:43:22.418Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:490247820" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:43:22.418Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:490247820" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:43:22.418Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:490247820" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:43:22.418Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_611152121.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:42:17.363Z" UpdatedDate="2015-01-09T03:42:17.363Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:120436455" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:42:12.783Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:120436455" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:42:12.783Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:120436455" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:42:12.783Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:120436455" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:42:12.783Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_909896779.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:42:05.363Z" UpdatedDate="2015-01-09T03:42:05.363Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:474701328" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:42:01.720Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:474701328" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:42:01.720Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:474701328" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:42:01.720Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:474701328" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:42:01.720Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_584577251.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:41:01.557Z" UpdatedDate="2015-01-09T03:41:01.557Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:631204219" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:40:49.458Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:631204219" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:40:49.458Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:631204219" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:40:49.458Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:631204219" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:40:49.458Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_559582883.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:40:43.089Z" UpdatedDate="2015-01-09T03:40:43.089Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:450145190" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:40:24.558Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:450145190" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:40:24.558Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:450145190" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:40:24.558Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:450145190" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:40:24.558Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_176025098.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:39:51.420Z" UpdatedDate="2015-01-09T03:39:51.420Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:512987700" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:39:05.599Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:512987700" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:39:05.599Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:512987700" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:39:05.599Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:512987700" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:39:05.599Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_177461514.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:39:01.344Z" UpdatedDate="2015-01-09T03:39:01.344Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:696858920" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:38:41.718Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:696858920" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:38:41.718Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:696858920" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:38:41.718Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:696858920" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:38:41.718Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_978211189.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:38:40.708Z" UpdatedDate="2015-01-09T03:38:40.708Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_594814312.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:37:45.023Z" UpdatedDate="2015-01-09T03:37:45.023Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:858811238" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:37:39.283Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:858811238" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:37:39.283Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:858811238" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:37:39.283Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:858811238" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:37:39.283Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:783535833" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:36:54.750Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:783535833" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:36:54.750Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:783535833" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:36:54.750Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:783535833" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:36:54.750Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_867300789.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:36:31.811Z" UpdatedDate="2015-01-09T03:36:31.811Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:373620755" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:36:13.455Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:373620755" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:36:13.455Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:373620755" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:36:13.455Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:373620755" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:36:13.455Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:356621089" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:36:09.231Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:356621089" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:36:09.231Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:356621089" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:36:09.231Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:356621089" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:36:09.231Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:168003432" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:36:03.401Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:168003432" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:36:03.401Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:168003432" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:57.573Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:168003432" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:57.573Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:168003432" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:57.573Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:168003432" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:57.573Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:592524463" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:54.061Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:592524463" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:54.061Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:592524463" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:51.932Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:592524463" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:51.932Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:592524463" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:51.932Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:592524463" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:51.932Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:105946276" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:42.564Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:105946276" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:42.564Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:105946276" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:34.642Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:105946276" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:34.642Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:105946276" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:34.642Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:105946276" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:34.642Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_121461215.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:24.723Z" UpdatedDate="2015-01-09T03:35:24.723Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_962592439.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:18.509Z" UpdatedDate="2015-01-09T03:35:18.509Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:392143887" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:16.341Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:392143887" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:16.341Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:392143887" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:16.341Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:392143887" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:16.341Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:837046718" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:34:19.626Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:837046718" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:34:19.626Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:837046718" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:34:19.626Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:837046718" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:34:19.626Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_372400418.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:34:05.134Z" UpdatedDate="2015-01-09T03:34:05.134Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_387609681.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:34:01.719Z" UpdatedDate="2015-01-09T03:34:01.719Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:798766457" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:33:56.293Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:798766457" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:33:56.293Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:798766457" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:33:56.293Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:798766457" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:33:56.293Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:453468187" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:32:56.194Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:453468187" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:32:56.194Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:453468187" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:32:56.194Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:453468187" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:32:56.194Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_425369467.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:32:46.206Z" UpdatedDate="2015-01-09T03:32:46.206Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_782921886.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:32:44.215Z" UpdatedDate="2015-01-09T03:32:44.215Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:320895097" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:32:38.377Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:320895097" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:32:38.377Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:320895097" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:32:38.377Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:320895097" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:32:38.377Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:905470056" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:31:31.535Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:905470056" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:31:31.535Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:905470056" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:31:31.535Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:905470056" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:31:31.535Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_454200083.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:31:28.430Z" UpdatedDate="2015-01-09T03:31:28.430Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_211194243.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:31:26.024Z" UpdatedDate="2015-01-09T03:31:26.024Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:602057629" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:31:17.322Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:602057629" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:31:17.322Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:602057629" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:31:17.322Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:602057629" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:31:17.322Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:217901767" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:30:16.374Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:217901767" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:30:16.374Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:217901767" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:30:16.374Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:217901767" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:30:16.374Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_238256143.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:30:06.798Z" UpdatedDate="2015-01-09T03:30:06.798Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_987803132.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:29:57.123Z" UpdatedDate="2015-01-09T03:29:57.123Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:834831533" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:29:50.608Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:834831533" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:29:50.608Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:834831533" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:29:50.608Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:834831533" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:29:50.608Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_759334617.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:28:47.559Z" UpdatedDate="2015-01-09T03:28:47.559Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:239063477" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:28:46.601Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:239063477" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:28:46.601Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:239063477" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:28:46.601Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:239063477" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:28:46.601Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_593868759.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:28:40.288Z" UpdatedDate="2015-01-09T03:28:40.288Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:690273928" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:28:23.791Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:690273928" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:28:23.791Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:690273928" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:28:23.791Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:690273928" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:28:23.791Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_158453306.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:27:36.538Z" UpdatedDate="2015-01-09T03:27:36.538Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:359105239" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:27:30.453Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:359105239" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:27:30.453Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:359105239" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:27:30.453Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:359105239" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:27:30.453Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_544035197.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:27:28.689Z" UpdatedDate="2015-01-09T03:27:28.689Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:641205627" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:27:07.515Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:641205627" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:27:07.515Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:641205627" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:27:07.515Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:641205627" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:27:07.515Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_751675165.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:26:18.589Z" UpdatedDate="2015-01-09T03:26:18.589Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:939108083" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:26:12.828Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:939108083" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:26:12.828Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:939108083" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:26:12.828Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:939108083" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:26:12.828Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:196683661" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:25:50.275Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:196683661" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:25:50.275Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:196683661" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:25:50.275Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:196683661" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:25:50.275Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_408983492.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:25:08.896Z" UpdatedDate="2015-01-09T03:25:08.896Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_426607728.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:25:07.507Z" UpdatedDate="2015-01-09T03:25:07.507Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:302425897" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:24:58.282Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:302425897" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:24:58.282Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:302425897" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:24:58.282Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:302425897" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:24:58.282Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:354727817" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:24:31.635Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:354727817" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:24:31.635Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:354727817" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:24:31.635Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:354727817" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:24:31.635Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_578952724.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:23:51.368Z" UpdatedDate="2015-01-09T03:23:51.368Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_662207699.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:23:50.546Z" UpdatedDate="2015-01-09T03:23:50.546Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:159230703" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:23:40.492Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:159230703" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:23:40.492Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:159230703" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:23:40.492Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:159230703" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:23:40.492Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:662457897" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:23:16.915Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:662457897" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:23:16.915Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:662457897" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:23:16.915Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:662457897" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:23:16.915Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_217281824.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:22:36.842Z" UpdatedDate="2015-01-09T03:22:36.842Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:961928388" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:22:25.769Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:961928388" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:22:25.769Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:961928388" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:22:25.769Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:961928388" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:22:25.769Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:237475249" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:21:53.580Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:237475249" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:21:53.580Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:237475249" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:21:53.580Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:237475249" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:21:53.580Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_413575015.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:21:27.224Z" UpdatedDate="2015-01-09T03:21:27.224Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:166609010" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:21:07.388Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:166609010" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:21:07.388Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:166609010" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:21:07.388Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:166609010" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:21:07.388Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_591285271.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:20:47.353Z" UpdatedDate="2015-01-09T03:20:47.353Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:163652909" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:20:30.515Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:163652909" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:20:30.515Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:163652909" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:20:30.515Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:163652909" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:20:30.515Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_434834094.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:20:14.007Z" UpdatedDate="2015-01-09T03:20:14.007Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:917368546" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:19:44.489Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:917368546" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:19:44.489Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:917368546" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:19:44.489Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:917368546" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:19:44.489Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_176542464.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:19:36.360Z" UpdatedDate="2015-01-09T03:19:36.360Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_884822122.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:19:00.949Z" UpdatedDate="2015-01-09T03:19:00.949Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:329294355" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:18:44.724Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:329294355" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:18:44.724Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:329294355" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:18:44.724Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:329294355" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:18:44.724Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:731629704" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:18:27.153Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:731629704" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:18:27.153Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:731629704" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:18:27.153Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:731629704" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:18:27.153Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_952776197.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:17:47.952Z" UpdatedDate="2015-01-09T03:17:47.952Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:531084986" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:17:21.807Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:531084986" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:17:21.807Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:531084986" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:17:21.807Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:531084986" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:17:21.807Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:651364565" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:17:08.728Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:651364565" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:17:08.728Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:651364565" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:17:08.728Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:651364565" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:17:08.728Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:530857437" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:15:49.128Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:530857437" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:15:49.128Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:530857437" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:15:49.128Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:530857437" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:15:49.128Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:881906208" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:15:37.642Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:881906208" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:15:37.642Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:881906208" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:15:37.642Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:881906208" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:15:37.642Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_125973769.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:15:05.035Z" UpdatedDate="2015-01-09T03:15:05.035Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:238286985" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:14:31.440Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:238286985" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:14:31.440Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:238286985" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:14:31.440Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:238286985" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:14:31.440Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:499930563" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:14:21.978Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:499930563" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:14:21.978Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:499930563" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:14:21.978Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:499930563" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:14:21.978Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_730511488.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:13:53.139Z" UpdatedDate="2015-01-09T03:13:53.139Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_599376100.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:13:21.778Z" UpdatedDate="2015-01-09T03:13:21.778Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:872541663" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:13:06.327Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:872541663" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:13:06.327Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:872541663" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:13:06.327Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:872541663" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:13:06.327Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_100773052.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:12:20.092Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:455102378" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:12:15.187Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:455102378" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:12:15.187Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:455102378" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:12:15.187Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:455102378" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:12:15.187Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:646938904" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:11:38.143Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:646938904" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:11:38.143Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:646938904" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:11:38.143Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:646938904" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:11:38.143Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_432447380.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:11:07.053Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:809545019" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:10:43.177Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:809545019" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:10:43.177Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:809545019" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:10:43.177Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:809545019" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:10:43.177Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_426086633.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:10:32.502Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:291815618" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:09:46.457Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:291815618" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:09:46.457Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:291815618" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:09:46.457Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:291815618" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:09:46.457Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_982435138.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:09:08.338Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:341983009" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:09:04.420Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:341983009" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:09:04.420Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:341983009" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:09:04.420Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:341983009" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:09:04.420Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_992118705.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:08:26.316Z" UpdatedDate="2015-01-09T03:08:26.316Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:573770310" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:08:00.976Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:573770310" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:08:00.976Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:573770310" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:08:00.976Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:573770310" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:08:00.976Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_270541680.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:07:34.737Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:974244772" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:07:20.797Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:974244772" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:07:20.797Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:974244772" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:07:20.797Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:974244772" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:07:20.797Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:564976165" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:05:39.177Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:564976165" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:05:39.177Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:564976165" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:05:39.177Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:564976165" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:05:39.177Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:282563787" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:05:27.019Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:282563787" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:05:27.019Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:282563787" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:05:27.019Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:282563787" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:05:27.019Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_777284706.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:05:26.048Z" UpdatedDate="2015-01-09T03:05:26.048Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_152455473.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:05:22.208Z" UpdatedDate="2015-01-09T03:05:22.208Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:216860344" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:04:18.040Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:216860344" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:04:18.040Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:216860344" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:04:18.040Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:216860344" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:04:18.040Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:722318164" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:04:02.484Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:722318164" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:04:02.484Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:722318164" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:04:02.484Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:722318164" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:04:02.484Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_965106329.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:03:54.669Z" UpdatedDate="2015-01-09T03:03:54.669Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:877845528" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:02:53.718Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:877845528" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:02:53.718Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:877845528" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:02:53.718Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:877845528" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:02:53.718Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_616235486.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:02:43.772Z" UpdatedDate="2015-01-09T03:02:43.772Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:861340036" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:02:24.447Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:861340036" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:02:24.447Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:861340036" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:02:24.447Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:861340036" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:02:24.447Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:190397575" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:01:36.456Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:190397575" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:01:36.456Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:190397575" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:01:36.456Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:190397575" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:01:36.456Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_391975604.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:01:25.578Z" UpdatedDate="2015-01-09T03:01:25.578Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:333309021" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:01:05.607Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:333309021" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:01:05.607Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:333309021" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:01:05.607Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:333309021" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:01:05.607Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:582035372" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:59:57.076Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:582035372" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:59:57.076Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:582035372" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:59:57.076Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:582035372" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:59:57.076Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_843634849.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:59:52.719Z" UpdatedDate="2015-01-09T02:59:52.719Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:411495116" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:59:34.537Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:411495116" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:59:34.537Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:411495116" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:59:34.537Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:411495116" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:59:34.537Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:523656814" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:58:22.053Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:523656814" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:58:22.053Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:523656814" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:58:22.053Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:523656814" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:58:22.053Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_390590168.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:58:09.414Z" UpdatedDate="2015-01-09T02:58:09.414Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:5020" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:58:03.269Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:5020" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:58:03.269Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:5020" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:58:03.269Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:5020" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:58:03.269Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:261070936" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:56:59.456Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:261070936" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:56:59.456Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:261070936" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:56:59.456Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:261070936" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:56:59.456Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:789153716" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:56:35.248Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:789153716" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:56:35.248Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:789153716" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:56:35.248Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:789153716" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:56:35.248Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_736603142.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:56:21.075Z" UpdatedDate="2015-01-09T02:56:21.075Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:249774826" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:55:24.130Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:249774826" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:55:24.130Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:249774826" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:55:24.130Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:249774826" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:55:24.130Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:413786035" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:55:11.192Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:413786035" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:55:11.192Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:413786035" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:55:11.192Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:413786035" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:55:11.192Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:448734314" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:53:59.487Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:448734314" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:53:59.487Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:448734314" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:53:59.487Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:448734314" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:53:59.487Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:223502701" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:53:33.285Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:223502701" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:53:33.285Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:223502701" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:53:33.285Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:223502701" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:53:33.285Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:505259114" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:52:37.631Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:505259114" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:52:37.631Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:505259114" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:52:37.631Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:505259114" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:52:37.631Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:151810535" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:52:15.626Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:151810535" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:52:15.626Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:151810535" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:52:15.626Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:151810535" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:52:15.626Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_336686149.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:52:05.215Z" UpdatedDate="2015-01-09T02:52:05.215Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:431986956" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:51:02.973Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:431986956" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:51:02.973Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:431986956" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:51:02.973Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:431986956" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:51:02.973Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:352261151" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:50:49.178Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:352261151" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:50:49.178Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:352261151" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:50:49.178Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:352261151" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:50:49.178Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_392602527.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:50:41.494Z" UpdatedDate="2015-01-09T02:50:41.494Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_872330565.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:49:56.991Z" UpdatedDate="2015-01-09T02:49:56.991Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:790337121" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:49:31.889Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:790337121" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:49:31.889Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:790337121" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:49:31.889Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:790337121" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:49:31.889Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:723377502" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:49:27.219Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:723377502" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:49:27.219Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:723377502" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:49:27.219Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:723377502" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:49:27.219Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:935616641" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:48:01.697Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:935616641" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:48:01.697Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:935616641" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:48:01.697Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:935616641" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:48:01.697Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_511651933.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:47:52.278Z" UpdatedDate="2015-01-09T02:47:52.278Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_858390541.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:47:50.594Z" UpdatedDate="2015-01-09T02:47:50.594Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:608310474" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:47:42.683Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:608310474" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:47:42.683Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:608310474" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:47:42.683Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:608310474" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:47:42.683Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:963334268" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:46:43.565Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:963334268" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:46:43.565Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:963334268" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:46:43.565Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:963334268" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:46:43.565Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_867985615.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:46:31.893Z" UpdatedDate="2015-01-09T02:46:31.893Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_360333473.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:46:29.830Z" UpdatedDate="2015-01-09T02:46:29.830Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:769297983" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:46:08.283Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:769297983" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:46:08.283Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:769297983" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:46:08.283Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:769297983" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:46:08.283Z"/>
</BasicAssetList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">170347</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Cache-Control</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">max-age=86400</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"0C340CFD5CE81851E05307991F0A810F:88019DED"</con:value></con:property><con:property><con:name>Expires</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Sat, 10 Jan 2015 07:40:53 GMT</con:value></con:property><con:property><con:name>Last-Modified</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Fri, 09 Jan 2015 07:39:59 GMT</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">t=1420789253 VK@F-wpNA50AAHsLuIEAAAAT urn:dece:org:org:dece:CON 10.31.173.1</con:value></con:property><con:property><con:name>Vary</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Accept-Encoding</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9bf09b2d-914c-40ea-a987-627636bad9bd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GET-FilterOffset" searchProperties="true" id="bfb7b33a-78c1-4608-be06-87bac140fe6f"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
tC.setPropertyValue("onorafter",callTC.getPropertyValue("onorafter"));
tC.setPropertyValue("offset",callTC.getPropertyValue("offset"));
tC.setPropertyValue("filtercount",callTC.getPropertyValue("filtercount"));
/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET-FilterOffset");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET-FilterOffset"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List?FilterClass=urn:dece:type:viewfilter:lastmodifieddate&amp;OnOrAfter=${#TestCase#onorafter}&amp;FilterOffset=${#TestCase#offset}&amp;FilterCount=${#TestCase#filtercount}" methodName="GET-FilterOffset" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET-FilterOffset" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET-FilterOffset');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeGet");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Assertion for threshold Pagination" id="d4a31c81-c3ef-45c9-9cf4-798170f015d8"><con:settings/><con:config><script>/*checking in response the GetList contains maximum  values 1000 */
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def response = context.expand( '${GET-FilterOffset#Response#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]}' )

log.info response.size()

def filtercount = context.expand( '${GET-FilterOffset#ResponseAsXml#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]/@FilterCount}' )


log.info filtercount

def responseAsXml = context.expand( '${GET-FilterOffset#ResponseAsXml#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]/ns1:BasicAssetReference[1]}' )

def records = new XmlParser().parseText(response);
log.info records.value().size()

if(records.value().size().toString()!= filtercount.toString())
{
	assert 1==2;
}
}</script></con:config></con:testStep><con:testStep type="groovy" name="Extract The Response Header ETag"><con:settings/><con:config><script>/*Extracting ETag from response and storing it in Project level Property*/
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET-FilterOffset');
def expXML = tStep.httpRequest.response.getResponseContent();

String ETag = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "ETag": 
			ETag = value[0]; 
			break;
	}
}

tP.setPropertyValue("ETag", ETag);
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Assertion For  Order of dates"><con:settings/><con:config><script>/*Asserting weather the updated dates in the GetList response are in descending order */

def httpStatus = context.expand( '${#TestCase#httpStatus}' )
if(httpStatus=='HTTP/1.1 200 OK')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def response = context.expand( '${GET-FilterOffset#Response#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]}' )

log.info response
def possiblySorted = []
def records = new XmlParser().parseText(response);
log.info records

for(int i=0;i&lt;=records.DigitalAssetReference.size()-1;i++){
//log.info records.DigitalAssetReference[i].@UpdatedDate;
if(records.BasicAssetReference[i].@UpdatedDate==null)
	possiblySorted.add(records.BasicAssetReference[i].@CreatedDate);
else
	possiblySorted.add(records.BasicAssetReference[i].@UpdatedDate);
}

log.info possiblySorted;
def sortedCopy = new ArrayList&lt;>(possiblySorted)
log.info sortedCopy.sort().reverse();
if( possiblySorted != sortedCopy.sort().reverse())
{
assert 1==2
}
}</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET-FilterOffset');
		def expXML = tStep.httpRequest.response.getResponseContent();
		
		String Cache_Control = null;
		String ETag = null;
		String Expires   = null;
		String Last_Modified = null;
		String x_Transaction_Info = null;
		String Vary=null;
		tStep.httpRequest.response.responseHeaders.each() {	 header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					}
		}

			tC.setPropertyValue("Cache-Control", Cache_Control);
			tC.setPropertyValue("ETag", ETag);
			tC.setPropertyValue("Expires", Expires);
			tC.setPropertyValue("Last-Modified", Last_Modified);
			tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
			tC.setPropertyValue("Vary", Vary);
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET-FilterOffset');
		def expXML = tStep.httpRequest.response.getResponseContent();
		String Vary=null;
		String Cache_Control = null;
		String ETag = null;
		//String Expires   = null;
		//String Last_Modified = null;
		String x_Transaction_Info = null;
		
		tStep.httpRequest.response.responseHeaders.each() { header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				/*case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;*/
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					
			}
		}
		
		tC.setPropertyValue("Cache-Control", Cache_Control);
		tC.setPropertyValue("ETag", ETag);
		//tC.setPropertyValue("Expires", Expires);
		//tC.setPropertyValue("Last-Modified", Last_Modified);
		tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
		tC.setPropertyValue("Vary", Vary);
	}


</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==null)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==null)
		assert 1==2
		
		def Expires=tC.getPropertyValue("Expires")
		if(Expires==null)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==null)
		assert 1==2
		
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==null)
		assert 1==2
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==false)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==false)
		assert 1==2
		
		/*def Expires=tC.getPropertyValue("Expires")
		if(Expires==false)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==false)
		assert 1==2
		*/
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==false)
		assert 1==2

		def Vary=tC.getPropertyValue("Vary")
		if(Vary==null)
		assert 1==2

	}</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>TC_DECE_10004_MetadataBasicList_FUNC_DateFormat_With_Offset_5_FilterCount_10</con:value></con:property><con:property><con:name>sName</con:name><con:value>P0_MetadataBasicList</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_740279034.txt</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>740279034</con:value></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1/CON_concat.pem</con:value></con:property><con:property><con:name>onorafter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1997-07-16T19%3A20%3A30.45%2B01%3A00</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<dece:BasicAssetList FilterClass="urn:dece:type:viewfilter:lastmodifieddate" FilterOffset="5" FilterCount="10" FilterMoreAvailable="true" xmlns:md="http://www.movielabs.com/schema/md/v2.1/md" xmlns:dece="http://www.decellc.org/schema/2015/03/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#">
   <dece:BasicAssetReference ContentID="urn:dece:cid:org:ALSTUDIO:Version840757341" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-12-10T12:18:17.784Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:6779" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-12-10T12:18:03.275Z" UpdatedDate="2014-12-10T12:18:03.275Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:522867345" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-12-10T12:16:42.078Z" UpdatedDate="2014-12-10T12:16:42.078Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:78466" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-12-10T12:15:13.246Z" UpdatedDate="2014-12-10T12:15:13.246Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:FILE:AL_BrazaFileNumber_660801096.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-12-10T12:13:55.384Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:781793215" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-12-10T12:05:25.165Z" UpdatedDate="2014-12-10T12:05:25.165Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:118728378" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-12-10T10:45:59.756Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_118728378.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-12-10T10:45:59.756Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:937045067" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-12-10T10:43:15.942Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_937045067.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-12-10T10:43:15.942Z"/>
</dece:BasicAssetList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>offset</con:name><con:value>5</con:value></con:property><con:property><con:name>filtercount</con:name><con:value>10</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">max-age=86400</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"09DCA3ACDD4711A2E05305991F0ABAC3:1A7EEC0A"</con:value></con:property><con:property><con:name>Expires</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Thu, 11 Dec 2014 12:37:41 GMT</con:value></con:property><con:property><con:name>Last-Modified</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Wed, 10 Dec 2014 12:20:40 GMT</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">t=1418215061 VIg@lAofmIgAACgPZ38AAAAM urn:dece:org:org:dece:CON 10.31.173.1</con:value></con:property><con:property><con:name>Vary</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Accept-Encoding</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9bf09b2d-914c-40ea-a987-627636bad9bd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d4a31c81-c3ef-45c9-9cf4-798170f015d8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PUT - MetadataBasicReourceStatusUpdate_Active-Pending" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="c6cc0571-2541-4161-a8e8-cf0b68016015"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);


tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
tC.setPropertyValue("ExpectedReturnCodeStatusUpdate",callTC.getPropertyValue("ExpectedReturnCodeStatusUpdate"));
/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script RandomUpperLowerCase" disabled="true"><con:settings/><con:config><script>import generalUtils.generalUtils;

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();


myGeneralUtils = new generalUtils(log);

//x = "abcd:ef:ghij";
x=tC.getPropertyValue("randomUpperLowerURN");

y = myGeneralUtils.randomizeStringCase(x);

tC.setPropertyValue("randomUpperLowerURN_ReturnValue", y);

 log.info "randomUpperLowerURN_ReturnValue is " + tC.getPropertyValue("randomUpperLowerURN_ReturnValue");
 </script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("PUT - MetadataBasicReourceStatusUpdate_Active-Pending");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - MetadataBasicReourceStatusUpdate_Active-Pending"><con:settings/><con:config service="ResourceStatusUpdate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}/ResourceStatus/Current/Update" methodName="PUT-BasicListResourceStatusUpdate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - MetadataBasicReourceStatusUpdate_Active-Pending" mediaType="application/xml" postQueryString="false" sslKeystore="2222_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<dece:ResourceStatus 
xmlns:dece="${#Project#Coordinator_Schema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="${#Project#md_schema}" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="${#Project#Coordinator_Schema} dece.xsd">
    <dece:Current>
      <dece:Value>urn:dece:type:status:pending</dece:Value>
    </dece:Current>
  </dece:ResourceStatus>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('PUT - MetadataBasicReourceStatusUpdate_Active-Pending');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeStatusUpdate");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "303":  
		if (httpStatus != "HTTP/1.1 303 See Other") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn%3Adece%3Acid%3Afile%3AAL_WEB_PORTAL_NUMBERS_616691.txt</con:value></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>202</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>20</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/07/Asset/Metadata/Basic/urn%3Adece%3Acid%3Afile%3AAL_WEB_PORTAL_NUMBERS_616691.txt</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 303 See Other</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>616691</con:value></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value>P0_Cache_TestCases</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_MetadataBasicList_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicResourceStatusUpdate_HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\\DECE\\2222_concat.pem</con:value></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeStatusUpdate</con:name><con:value>303</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PUT - MetadataBasicReourceStatusUpdate_Pending-Active" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="bc7da21e-0aea-4ffa-84f7-987289715147"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);


tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
tC.setPropertyValue("ExpectedReturnCodeStatusUpdate",callTC.getPropertyValue("ExpectedReturnCodeStatusUpdate"));
/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script RandomUpperLowerCase" disabled="true"><con:settings/><con:config><script>import generalUtils.generalUtils;

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();


myGeneralUtils = new generalUtils(log);

//x = "abcd:ef:ghij";
x=tC.getPropertyValue("randomUpperLowerURN");

y = myGeneralUtils.randomizeStringCase(x);

tC.setPropertyValue("randomUpperLowerURN_ReturnValue", y);

 log.info "randomUpperLowerURN_ReturnValue is " + tC.getPropertyValue("randomUpperLowerURN_ReturnValue");
 </script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("PUT - MetadataBasicReourceStatusUpdate_Pending-Active");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - MetadataBasicReourceStatusUpdate_Pending-Active"><con:settings/><con:config service="ResourceStatusUpdate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}/ResourceStatus/Current/Update" methodName="PUT-BasicListResourceStatusUpdate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - MetadataBasicReourceStatusUpdate_Pending-Active" mediaType="application/xml" postQueryString="false" sslKeystore="2222_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<dece:ResourceStatus 
xmlns:dece="${#Project#Coordinator_Schema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="${#Project#md_schema}" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="${#Project#Coordinator_Schema} dece.xsd">
    <dece:Current>
      <dece:Value>urn:dece:type:status:active</dece:Value>
    </dece:Current>
  </dece:ResourceStatus>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('PUT - MetadataBasicReourceStatusUpdate_Pending-Active');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeStatusUpdate");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "303":  
		if (httpStatus != "HTTP/1.1 303 See Other") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn%3Adece%3Acid%3Afile%3AAL_WEB_PORTAL_NUMBERS_616691.txt</con:value></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>202</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>20</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/07/Asset/Metadata/Basic/urn%3Adece%3Acid%3Afile%3AAL_WEB_PORTAL_NUMBERS_616691.txt</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 303 See Other</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>616691</con:value></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value>P0_Cache_TestCases</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_MetadataBasicList_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicResourceStatusUpdate_HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\\DECE\\2222_concat.pem</con:value></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeStatusUpdate</con:name><con:value>303</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GET-EncodedOnOrAfterMetadataBasicList" searchProperties="true" id="c7bc1798-d58a-4059-aa9a-f18a97996c32"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
tC.setPropertyValue("onorafter",callTC.getPropertyValue("onorafter"));
/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET-OnOrAfterMetadataBasicList");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET-OnOrAfterMetadataBasicList"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List?FilterClass=urn%3Adece%3Atype%3Aviewfilter%3Alastmodifieddate&amp;OnOrAfter=${#TestCase#onorafter}" methodName="GET OnMetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET-OnOrAfterMetadataBasicList" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET-OnOrAfterMetadataBasicList');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeGet");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Assertion for threshold Pagination"><con:settings/><con:config><script>/*checking in response the GetList contains maximum  values 1000 */
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def response = context.expand( '${GET-OnOrAfterMetadataBasicList#Response#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]}' )

log.info response.size()

def filtercount = context.expand( '${GET-OnOrAfterMetadataBasicList#ResponseAsXml#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]/@FilterCount}' )


log.info filtercount

def responseAsXml = context.expand( '${GET-OnOrAfterMetadataBasicList#ResponseAsXml#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]/ns1:BasicAssetReference[1]}' )

def records = new XmlParser().parseText(response);
log.info records.value().size()

if(records.value().size().toString()!= filtercount.toString())
{
	assert 1==2;
}
}</script></con:config></con:testStep><con:testStep type="groovy" name="Extract The Response Header ETag"><con:settings/><con:config><script>/*Extracting ETag from response and storing it in Project level Property*/
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET-OnOrAfterMetadataBasicList');
def expXML = tStep.httpRequest.response.getResponseContent();

String ETag = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "ETag": 
			ETag = value[0]; 
			break;
	}
}

tP.setPropertyValue("ETag", ETag);
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Assertion For  Order of dates"><con:settings/><con:config><script>/*Asserting weather the updated dates in the GetList response are in descending order */
def httpStatus = context.expand( '${#TestCase#httpStatus}' )
if(httpStatus=='HTTP/1.1 200 OK')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def response = context.expand( '${GET-OnOrAfterMetadataBasicList#Response#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]}' )

log.info response
def possiblySorted = []
def records = new XmlParser().parseText(response);
log.info records

for(int i=0;i&lt;=records.BasicAssetReference.size()-1;i++){
//log.info records.DigitalAssetReference[i].@UpdatedDate;
if(records.BasicAssetReference[i].@UpdatedDate==null)
	possiblySorted.add(records.BasicAssetReference[i].@CreatedDate);
else
	possiblySorted.add(records.BasicAssetReference[i].@UpdatedDate);
}

log.info possiblySorted;
def sortedCopy = new ArrayList&lt;>(possiblySorted)
log.info sortedCopy.sort().reverse();
if( possiblySorted != sortedCopy.sort().reverse())
{
assert 1==2
}
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET-OnOrAfterMetadataBasicList');
		def expXML = tStep.httpRequest.response.getResponseContent();
		
		String Cache_Control = null;
		String ETag = null;
		String Expires   = null;
		String Last_Modified = null;
		String x_Transaction_Info = null;
		String Vary=null;
		tStep.httpRequest.response.responseHeaders.each() {	 header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					}
		}

			tC.setPropertyValue("Cache-Control", Cache_Control);
			tC.setPropertyValue("ETag", ETag);
			tC.setPropertyValue("Expires", Expires);
			tC.setPropertyValue("Last-Modified", Last_Modified);
			tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
			tC.setPropertyValue("Vary", Vary);
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET-OnOrAfterMetadataBasicList');
		def expXML = tStep.httpRequest.response.getResponseContent();
		String Vary=null;
		String Cache_Control = null;
		String ETag = null;
		//String Expires   = null;
		//String Last_Modified = null;
		String x_Transaction_Info = null;
		
		tStep.httpRequest.response.responseHeaders.each() { header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				/*case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;*/
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					
			}
		}
		
		tC.setPropertyValue("Cache-Control", Cache_Control);
		tC.setPropertyValue("ETag", ETag);
		//tC.setPropertyValue("Expires", Expires);
		//tC.setPropertyValue("Last-Modified", Last_Modified);
		tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
		tC.setPropertyValue("Vary", Vary);
	}


</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==null)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==null)
		assert 1==2
		
		def Expires=tC.getPropertyValue("Expires")
		if(Expires==null)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==null)
		assert 1==2
		
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==null)
		assert 1==2
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==false)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==false)
		assert 1==2
		
		/*def Expires=tC.getPropertyValue("Expires")
		if(Expires==false)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==false)
		assert 1==2
		*/
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==false)
		assert 1==2

		def Vary=tC.getPropertyValue("Vary")
		if(Vary==null)
		assert 1==2

	}</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>TC_DECE_10108_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-DDT00:mmTZD_UV-2672</con:value></con:property><con:property><con:name>sName</con:name><con:value>MetadataBasicList Content Provider</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_260871414.txt</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>260871414</con:value></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>400</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/CON_concat.pem</con:value></con:property><con:property><con:name>onorafter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1997-07-16T00%3A23%2B01%3A00</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:InvocationPathHasEncodedNamespaces">
      <Reason Language="en">The namespaces in the invocation path must not be url encoded.</Reason>
      <OriginalRequest>https://qa.q.uvvu.com:7001/rest/1/11/Asset/Metadata/Basic/List</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/11/error/en/ErrorList.html#InvocationPathHasEncodedNamespaces</ErrorLink>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 400 Bad Request</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">718</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Cache-Control</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ETag</con:name><con:value>"F51B2C3243B32874E0401F0A07993679:26121DD1"</con:value></con:property><con:property><con:name>Expires</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Last-Modified</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Vary</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9bf09b2d-914c-40ea-a987-627636bad9bd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GET-EncodedFilterOffset" searchProperties="true" id="70a10ab7-1949-44d8-b1af-99e8d314c24a"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
tC.setPropertyValue("onorafter",callTC.getPropertyValue("onorafter"));
tC.setPropertyValue("offset",callTC.getPropertyValue("offset"));
tC.setPropertyValue("filtercount",callTC.getPropertyValue("filtercount"));
/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET-FilterOffset");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET-FilterOffset"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List?FilterClass=urn%3Adece%3Atype%3Aviewfilter%3Alastmodifieddate&amp;OnOrAfter=${#TestCase#onorafter}&amp;FilterOffset=${#TestCase#offset}&amp;FilterCount=${#TestCase#filtercount}" methodName="GET-FilterOffset" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET-FilterOffset" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET-FilterOffset');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeGet");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Assertion for threshold Pagination"><con:settings/><con:config><script>/*checking in response the GetList contains maximum  values 1000 */
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def response = context.expand( '${GET-FilterOffset#Response#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]}' )

log.info response.size()

def filtercount = context.expand( '${GET-FilterOffset#ResponseAsXml#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]/@FilterCount}' )


log.info filtercount

def responseAsXml = context.expand( '${GET-FilterOffset#ResponseAsXml#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]/ns1:BasicAssetReference[1]}' )

def records = new XmlParser().parseText(response);
log.info records.value().size()

if(records.value().size().toString()!= filtercount.toString())
{
	assert 1==2;
}
}</script></con:config></con:testStep><con:testStep type="groovy" name="Extract The Response Header ETag"><con:settings/><con:config><script>/*Extracting ETag from response and storing it in Project level Property*/
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET-FilterOffset');
def expXML = tStep.httpRequest.response.getResponseContent();

String ETag = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "ETag": 
			ETag = value[0]; 
			break;
	}
}

tP.setPropertyValue("ETag", ETag);
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Assertion For  Order of dates"><con:settings/><con:config><script>/*Asserting weather the updated dates in the GetList response are in descending order */

def httpStatus = context.expand( '${#TestCase#httpStatus}' )
if(httpStatus=='HTTP/1.1 200 OK')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def response = context.expand( '${GET-FilterOffset#Response#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]}' )

log.info response
def possiblySorted = []
def records = new XmlParser().parseText(response);
log.info records

for(int i=0;i&lt;=records.DigitalAssetReference.size()-1;i++){
//log.info records.DigitalAssetReference[i].@UpdatedDate;
if(records.BasicAssetReference[i].@UpdatedDate==null)
	possiblySorted.add(records.BasicAssetReference[i].@CreatedDate);
else
	possiblySorted.add(records.BasicAssetReference[i].@UpdatedDate);
}

log.info possiblySorted;
def sortedCopy = new ArrayList&lt;>(possiblySorted)
log.info sortedCopy.sort().reverse();
if( possiblySorted != sortedCopy.sort().reverse())
{
assert 1==2
}
}</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET-FilterOffset');
		def expXML = tStep.httpRequest.response.getResponseContent();
		
		String Cache_Control = null;
		String ETag = null;
		String Expires   = null;
		String Last_Modified = null;
		String x_Transaction_Info = null;
		String Vary=null;
		tStep.httpRequest.response.responseHeaders.each() {	 header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					}
		}

			tC.setPropertyValue("Cache-Control", Cache_Control);
			tC.setPropertyValue("ETag", ETag);
			tC.setPropertyValue("Expires", Expires);
			tC.setPropertyValue("Last-Modified", Last_Modified);
			tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
			tC.setPropertyValue("Vary", Vary);
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET-FilterOffset');
		def expXML = tStep.httpRequest.response.getResponseContent();
		String Vary=null;
		String Cache_Control = null;
		String ETag = null;
		//String Expires   = null;
		//String Last_Modified = null;
		String x_Transaction_Info = null;
		
		tStep.httpRequest.response.responseHeaders.each() { header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				/*case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;*/
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					
			}
		}
		
		tC.setPropertyValue("Cache-Control", Cache_Control);
		tC.setPropertyValue("ETag", ETag);
		//tC.setPropertyValue("Expires", Expires);
		//tC.setPropertyValue("Last-Modified", Last_Modified);
		tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
		tC.setPropertyValue("Vary", Vary);
	}


</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==null)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==null)
		assert 1==2
		
		def Expires=tC.getPropertyValue("Expires")
		if(Expires==null)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==null)
		assert 1==2
		
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==null)
		assert 1==2
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==false)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==false)
		assert 1==2
		
		/*def Expires=tC.getPropertyValue("Expires")
		if(Expires==false)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==false)
		assert 1==2
		*/
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==false)
		assert 1==2

		def Vary=tC.getPropertyValue("Vary")
		if(Vary==null)
		assert 1==2

	}</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>TC_DECE_10109_MetadataBasicList_FUNC_DateFormat_With_Offset_8_FilterCount_20_UV-2672</con:value></con:property><con:property><con:name>sName</con:name><con:value>MetadataBasicList Content Provider</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_584737841.txt</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>584737841</con:value></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>400</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/CON_concat.pem</con:value></con:property><con:property><con:name>onorafter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1997-07-16T19%3A20%3A30.45%2B01%3A00</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:InvocationPathHasEncodedNamespaces">
      <Reason Language="en">The namespaces in the invocation path must not be url encoded.</Reason>
      <OriginalRequest>https://qa.q.uvvu.com:7001/rest/1/11/Asset/Metadata/Basic/List</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/11/error/en/ErrorList.html#InvocationPathHasEncodedNamespaces</ErrorLink>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 400 Bad Request</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">718</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>offset</con:name><con:value>8</con:value></con:property><con:property><con:name>filtercount</con:name><con:value>20</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ETag</con:name><con:value>"F51B2C3243B32874E0401F0A07993679:26121DD1"</con:value></con:property><con:property><con:name>Expires</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Last-Modified</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Vary</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9bf09b2d-914c-40ea-a987-627636bad9bd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d4a31c81-c3ef-45c9-9cf4-798170f015d8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetPem" searchProperties="true" disabled="true" id="600db93e-7d4f-460f-a6b6-ed14f92b55d2"><con:settings/><con:testStep type="groovy" name="Set Coordinate Schema" id="c972b0c8-ace6-432c-a447-a2754262eb3d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def rest_api_version=tP.getPropertyValue("versionMinor");
def eNV = context.expand( '${#Project#ENV}' )

log.info rest_api_version
if(rest_api_version=="06")
{
	tP.setPropertyValue("Coordinator_Schema","http://www.decellc.org/schema/2012/12/coordinator");
	tP.setPropertyValue("md_schema","http://www.movielabs.com/schema/md/v1.2/md");
}
else if(rest_api_version=="07")
{
	tP.setPropertyValue("Coordinator_Schema","http://www.decellc.org/schema/2013/06/coordinator");
	tP.setPropertyValue("md_schema","http://www.movielabs.com/schema/md/v1.2/md");
}
else if(rest_api_version=="11")
{
	tP.setPropertyValue("Coordinator_Schema","http://www.decellc.org/schema/2013/10/coordinator");
	tP.setPropertyValue("md_schema","http://www.movielabs.com/schema/md/v2.1/md");
}
else if(rest_api_version=="02")
{
	tP.setPropertyValue("Coordinator_Schema","http://www.decellc.org/schema/2015/03/coordinator");
	tP.setPropertyValue("md_schema","http://www.movielabs.com/schema/md/v2.2/md");
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Environment Properties" id="b981869f-9bf8-4228-854c-a931a883805d" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def env = context.expand( '${#Project#ENV}' )
log.info 'Env == '+env

if( tP.getPropertyValue("versionMinor") != tP.getPropertyValue("versionURLEncode"))
{
                tP.setPropertyValue("TOUUrl","qa.c.uvvu.com");
}
else
{
                tP.setPropertyValue("TOUUrl","qa.uvvu.com");
}

if (env == 'QALP1')
{
tP.setPropertyValue("Device_HostName","https://qa.d.uvvu.com:7001");
tP.setPropertyValue("nodeIdRTL","RET");
tP.setPropertyValue("nodeIdRTLCS","RET_CS_1");
tP.setPropertyValue("nodeIdDSP","DSP");
tP.setPropertyValue("nodeIdDSPCS","DSP_CS_1");
tP.setPropertyValue("nodeIdAccportal","ACCESS");
tP.setPropertyValue("nodeIdAccportalCS","ACCESCS");
tP.setPropertyValue("nodeIdDLASP","DLASP");
tP.setPropertyValue("nodeIdDLASPCS","DLASP_CS_1");
tP.setPropertyValue("nodeIdLLASP","LLASP");
tP.setPropertyValue("nodeIdLLASPCS","LLASP_CS_1");
tP.setPropertyValue("nodeIdDEV","DEV");
tP.setPropertyValue("nodeIdDEVCS","DEV_CS_1");
tP.setPropertyValue("nodeIdportal","iscportal1");
tP.setPropertyValue("nodeIdportalCS","iscportalcs1");
tP.setPropertyValue("nodeIdDECE","DECE");
tP.setPropertyValue("nodeIdDECECS","dece:cs");
tP.setPropertyValue("nodeIdCoo","COO");
tP.setPropertyValue("nodeIdCoordCS","coord:cs");
tP.setPropertyValue("nodeIdCON","CON");
tP.setPropertyValue("nodeIdCONCS","CON_CS_1");
tP.setPropertyValue("Provision_HostName","https://qa.p.uvvu.com:7001");
tP.setPropertyValue("Query_HostName","https://qa.q.uvvu.com:7001");
tP.setPropertyValue("Batch_HostName","https://qa.b.uvvu.com:7001");
tP.setPropertyValue("targerHostd","qa.d.uvvu.com");
tP.setPropertyValue("targetDeviceDomain","qa.d.uvvu.com:7001");
tP.setPropertyValue("targetHost","qa.p.uvvu.com");
tP.setPropertyValue("targetHostq","qa.q.uvvu.com");
tP.setPropertyValue("targetHostb","qa.b.uvvu.com");
tP.setPropertyValue("targetPort","7001");
tP.setPropertyValue("targetPortq","7001");
tP.setPropertyValue("targetSystem","LP1");
tP.setPropertyValue("targetURL","qa.p.uvvu.com:7001");
tP.setPropertyValue("targetUrlSHost","qa.s.uvvu.com:7001");
tP.setPropertyValue("JDBCConnStr","jdbc:oracle:thin:DEQA1_APP/lp1db_23@10.31.153.5:2115/stdecqpdb_stdecqa.neustar.com");
tP.setPropertyValue("DBUsername","DEQA1_APP");
tP.setPropertyValue("DBPassword","lp1db_23");
}
else if (env == "QALP2")
{
tP.setPropertyValue("Device_HostName","https://qa.d.uvvu.com:7002");
tP.setPropertyValue("nodeIdRTL","RET");
tP.setPropertyValue("nodeIdRTLCS","RET_CS_1");
tP.setPropertyValue("nodeIdDSP","DSP");
tP.setPropertyValue("nodeIdDSPCS","DSP_CS_1");
tP.setPropertyValue("nodeIdAccportal","ACCESS");
tP.setPropertyValue("nodeIdAccportalCS","ACCESCS");
tP.setPropertyValue("nodeIdDLASP","DLASP");
tP.setPropertyValue("nodeIdDLASPCS","DLASP_CS_1");
tP.setPropertyValue("nodeIdLLASP","LLASP");
tP.setPropertyValue("nodeIdLLASPCS","LLASP_CS_1");
tP.setPropertyValue("nodeIdDEV","DEV");
tP.setPropertyValue("nodeIdDEVCS","DEV_CS_1");
tP.setPropertyValue("nodeIdportal","iscportal1");
tP.setPropertyValue("nodeIdportalCS","iscportalcs1");
tP.setPropertyValue("nodeIdDECE","DECE");
tP.setPropertyValue("nodeIdDECECS","dece:cs");
tP.setPropertyValue("nodeIdCoo","COO");
tP.setPropertyValue("nodeIdCoordCS","coord:cs");
tP.setPropertyValue("nodeIdCON","CON");
tP.setPropertyValue("nodeIdCONCS","CON_CS_1");
tP.setPropertyValue("Provision_HostName","https://qa.p.uvvu.com:7002");
tP.setPropertyValue("Query_HostName","https://qa.q.uvvu.com:7002");
tP.setPropertyValue("targerHostd","qa.d.uvvu.com");
tP.setPropertyValue("targetDeviceDomain","qa.d.uvvu.com:7002");
tP.setPropertyValue("targetHost","qa.p.uvvu.com");
tP.setPropertyValue("targetHostq","qa.q.uvvu.com");
tP.setPropertyValue("targetHostb","qa.b.uvvu.com");
tP.setPropertyValue("targetPort","7002");
tP.setPropertyValue("targetPortq","7002");
tP.setPropertyValue("targetSystem","LP2");
tP.setPropertyValue("targetURL","qa.p.uvvu.com:7002");
tP.setPropertyValue("targetUrlSHost","qa.s.uvvu.com:7002");
tP.setPropertyValue("JDBCConnStr","jdbc:oracle:thin:DEQA2/dece2010@10.31.153.5:2115/stdecqpdb_stdecqa.neustar.com");
tP.setPropertyValue("DBUsername","deqa2");
tP.setPropertyValue("DBPassword","dece2010");
}
else if (env == "QALP3")
{
tP.setPropertyValue("Device_HostName","https://qa.d.uvvu.com:7003");
tP.setPropertyValue("nodeIdRTL","RET");
tP.setPropertyValue("nodeIdRTLCS","RET_CS_1");
tP.setPropertyValue("nodeIdDSP","DSP");
tP.setPropertyValue("nodeIdDSPCS","DSP_CS_1");
tP.setPropertyValue("nodeIdAccportal","ACCESS");
tP.setPropertyValue("nodeIdAccportalCS","ACCESCS");
tP.setPropertyValue("nodeIdDLASP","DLASP");
tP.setPropertyValue("nodeIdDLASPCS","DLASP_CS_1");
tP.setPropertyValue("nodeIdLLASP","LLASP");
tP.setPropertyValue("nodeIdLLASPCS","LLASP_CS_1");
tP.setPropertyValue("nodeIdDEV","DEV");
tP.setPropertyValue("nodeIdDEVCS","DEV_CS_1");
tP.setPropertyValue("nodeIdportal","iscportal1");
tP.setPropertyValue("nodeIdportalCS","iscportalcs1");
tP.setPropertyValue("nodeIdDECE","DECE");
tP.setPropertyValue("nodeIdDECECS","dece:cs");
tP.setPropertyValue("nodeIdCoo","COO");
tP.setPropertyValue("nodeIdCoordCS","coord:cs");
tP.setPropertyValue("nodeIdCON","CON");
tP.setPropertyValue("nodeIdCONCS","CON_CS_1");
tP.setPropertyValue("nodeIdCoordCS","coord:cs");
tP.setPropertyValue("Provision_HostName","https://qa.p.uvvu.com:7003");
tP.setPropertyValue("Query_HostName","https://qa.q.uvvu.com:7003");
tP.setPropertyValue("targerHostd","qa.d.uvvu.com");
tP.setPropertyValue("targetDeviceDomain","qa.d.uvvu.com:7003");
tP.setPropertyValue("targetHost","qa.p.uvvu.com");
tP.setPropertyValue("targetHostq","qa.q.uvvu.com");
tP.setPropertyValue("targetHostb","qa.b.uvvu.com");
tP.setPropertyValue("targetPort","7003");
tP.setPropertyValue("targetPortq","7003");
tP.setPropertyValue("targetSystem","LP3");
tP.setPropertyValue("targetURL","qa.p.uvvu.com:7003");
tP.setPropertyValue("targetUrlSHost","qa.s.uvvu.com:7003");
}
else if (env == "DEV")
{
tP.setPropertyValue("Device_HostName","https://lp2.dev.d.uvvu.com:8443");
tP.setPropertyValue("nodeIdRTL","ISC_RET");
tP.setPropertyValue("nodeIdRTLCS","ISC_RETCS");
tP.setPropertyValue("nodeIdDSP","ISC_DSP");
tP.setPropertyValue("nodeIdDSPCS","ISC_DSPCS");
tP.setPropertyValue("nodeIdAccportal","ISC_ACCESS");
tP.setPropertyValue("nodeIdAccportalCS","ISC_ACCESSCS");
tP.setPropertyValue("nodeIdDLASP","ISC_DLASP");
tP.setPropertyValue("nodeIdDLASPCS","ISC_DLASPCS");
tP.setPropertyValue("nodeIdLLASP","ISC_LLASP");
tP.setPropertyValue("nodeIdLLASPCS","ISC_LLASPCS");
tP.setPropertyValue("nodeIdDEV","ISC_DEVICE");
tP.setPropertyValue("nodeIdDEVCS","ISC_DEVICECS");
tP.setPropertyValue("nodeIdportal","ISC_PORTAL");
tP.setPropertyValue("nodeIdportalCS","ISC_PORTALCS");
tP.setPropertyValue("nodeIdDECE","ISC_DECE");
tP.setPropertyValue("nodeIdDECECS","ISC_DECECS");
tP.setPropertyValue("nodeIdCoo","ISC_COO");
tP.setPropertyValue("nodeIdCoordCS","ISC_COOCS");
tP.setPropertyValue("nodeIdCON","CON");
tP.setPropertyValue("nodeIdCONCS","CON_CS_1");
tP.setPropertyValue("Provision_HostName","https://lp2.dev.p.uvvu.com:8443");
tP.setPropertyValue("Query_HostName","https://lp2.dev.q.uvvu.com:8443");
tP.setPropertyValue("targerHostd","lp2.dev.d.uvvu.com");
tP.setPropertyValue("targetDeviceDomain","lp2.dev.d.uvvu.com:8443");
tP.setPropertyValue("targetHost","lp2.dev.p.uvvu.com");
tP.setPropertyValue("targetHostq","lp2.dev.q.uvvu.com");
tP.setPropertyValue("targetHostb","qa.b.uvvu.com");
tP.setPropertyValue("targetPort","8443");
tP.setPropertyValue("targetPortq","8443");
tP.setPropertyValue("targetSystem","DEV");
tP.setPropertyValue("targetURL","lp2.dev.p.uvvu.com:8443");
tP.setPropertyValue("targetUrlSHost","lp2.dev.s.uvvu.com:8443");
tP.setPropertyValue("JDBCConnStr","jdbc:oracle:thin:DEVDECESR5/DEVDECESR5@10.31.153.15:2115/decdev1.neustar.com");
tP.setPropertyValue("DBUsername","DEVDECESR5");
tP.setPropertyValue("DBPassword","DEVDECESR5");
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import org.apache.commons.lang.SystemUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def projectPath = groovyUtils.projectPath

def eNV = context.expand( '${#Project#ENV}' )

def propertiesPath = null;

if (System.properties['os.name'].toLowerCase().contains('windows')) 
	{
    		log.info "it's Windows OS!!";
    		File temp = new File( projectPath + "\\..\\..\\..\\Properties\\");
    		propertiesPath = temp.getCanonicalPath();
	} 
else 
	{
    		log.info "it's Linux OS!!";
    		File temp = new File(projectPath + "/../../../Properties/");
    		propertiesPath = temp.getCanonicalPath();
	}
	
log.info("Properties File Location : '" + propertiesPath+ "'");




def propMap=[:]
BufferedReader reader = new BufferedReader(new FileReader(propertiesPath + "/" + eNV +"project.properties"));

String line;
while ((line = reader.readLine()) != null)
      {
	       if (line.trim().length()==0) continue;
	       if (line.charAt(0)=='#') continue;
	
	       int delimPosition = line.indexOf("=");
	       String key = line.substring(0, delimPosition-0).trim();
	       String value = line.substring(delimPosition+1).trim();
	       propMap.put(key, value);
      }


if (System.properties['os.name'].toLowerCase().contains('windows')) 
      {
            log.info "it's Windows OS!!!";
            File temp = new File( projectPath + "\\..\\..\\..\\Certs\\" + eNV + "\\");
    		  certPath = temp.getCanonicalPath();      
      } 
else 
      {
            log.info "it's Linux OS!!!";
            File temp = new File(projectPath + "/../../../Certs/" + eNV + "/");
    		  certPath = temp.getCanonicalPath();
      }  
      
 log.info("Cert path: " + certPath );  
                  
def nodeId = context.expand( '${#Project#nodeid}' )

log.info "nodeId: "+nodeId;

 if (nodeId == "dece:cs")
       {
             nodeId = "dececs";
       }
 else if (nodeId == "coord:cs")
       {
             nodeId = "coordcs";
       }
 else
       {
             nodeId = nodeId;
       }


//log.info "~~~~~~~~~~~~" +nodeId
boolean imFine = true;
def pwd = null;
def certMatchesNodeID = context.expand( '${#Project#CertMatchesNodeID}' )
log.info("CertMatchesNodeID : '" + certMatchesNodeID + "'");
if (certMatchesNodeID == "YES")
{
		File f1 = new File(certPath+"/"+nodeId + "_concat.pem");
		File f2 = new File(certPath+"/"+nodeId + ".jks");
		File f3 = new File(certPath+"/truststore-"+nodeId + ".jks");
		File f4 = new File(certPath+"/"+nodeId + ".pem");

		log.info("F1 : '" + f1.getPath()+ "'");
		log.info("F2 : '" + f2.getPath()+ "'");
		log.info("F3 : '" + f3.getPath()+ "'");
		log.info("F4 : '" + f4.getPath()+ "'");
	
	// sets the certificate from the specific folder when the certname and NodeId are same
	  if(f1.exists()) 
             {
                   keyStorePath = certPath+"/"+nodeId + "_concat.pem";
                   pwd = "123"
                   log.info("F1 file exists!!!");
                   log.info("keyStorePath : '" + keyStorePath + "'");      
             }
	  else if(f2.exists())
             {
                  	keyStorePath = certPath+"/"+nodeId + ".jks";
                   	pwd = "abcd1234" 
                   	log.info("F2 file exists!!!");
                   log.info("keyStorePath : '" + keyStorePath + "'");          
             }
	  else if(f3.exists())
             {
                  	keyStorePath = certPath+"/truststore-"+nodeId + ".jks";
                   	pwd = "12elma";
				log.info("F3 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");
             }
	  else if(f4.exists()) 
             {
                   	keyStorePath = certPath+"/"+nodeId + ".pem";
                   	pwd = "123";
                   	log.info("F4 file exists!!!");
                   log.info("keyStorePath : '" + keyStorePath + "'");       
             }
	  else
             {
                  	log.info "No cert file is Found!!!";
                  	imFine = false;
             }
}
else
{
	//to get the certificate name from another property based on the nodeid property.
		
	
       def value = propMap.find{ it.value == nodeId }?.key
       def certName = testProject.getPropertyValue(value+"_cert");       
       log.info "cert name .... " + certName;

		File f1 = new File(certPath+"/"+certName + "_concat.pem");
		File f2 = new File(certPath+"/"+certName + ".jks");
		File f3 = new File(certPath+"/truststore-"+certName + ".jks");
		File f4 = new File(certPath+"/"+certName + ".pem");

		log.info("F1 : '" + f1.getPath()+ "'");
		log.info("F2 : '" + f2.getPath()+ "'");
		log.info("F3 : '" + f3.getPath()+ "'");
		log.info("F4 : '" + f4.getPath()+ "'");      
		     
       if(f1.exists()) 
             {
             		
				keyStorePath = certPath+"/"+certName + "_concat.pem";
				pwd = "123";
				log.info("F1 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");     
             }
       else if(f2.exists())
             {
				keyStorePath = certPath+"/"+certName + ".jks";
				pwd = "abcd1234";
				log.info("F2 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");           
             }
       else if(f3.exists())
             {
                  	keyStorePath = certPath+"/truststore-"+certName + ".jks";
                   	pwd = "abcd1234";
                   	log.info("F3 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");
                   	         
             }
       else if(f4.exists()) 
             {
				keyStorePath = certPath+"/"+certName + ".pem";
				pwd = "123";  
				log.info("F4 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");     
             }
       else
			{
			log.info "No cert file is Found!!!";
			imFine = false;
			}                             
}


if(imFine)
{
      def callTSname = testCase.getPropertyValue("sName");
      def callTCname = testCase.getPropertyValue("tName");
      
      def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
      
      callTC.setPropertyValue("keyStorePath","$keyStorePath");
      testCase.setPropertyValue("keyStorePath","$keyStorePath");
      
      SoapUI.settings.setString( SSLSettings.KEYSTORE, keyStorePath );
      SoapUI.settings.setString( SSLSettings.KEYSTORE_PASSWORD, pwd);
      log.info 'pwd='+pwd
}

assert imFine == true;
</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>POST - MetadataBasicCreate</con:value></con:property><con:property><con:name>sName</con:name><con:value>Test Cases Containing APIs</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1PC/CON_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>b981869f-9bf8-4228-854c-a931a883805d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c972b0c8-ace6-432c-a447-a2754262eb3d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="VM_SETUP" searchProperties="true" disabled="true" id="7447949a-7330-4a82-a49b-e97a360b21b5"><con:settings/><con:testStep type="groovy" name="Setup"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def neustarVM = context.expand( '${#Project#neustarVM}' )
def certsPath_Windows = context.expand( '${#Project#certsPath_Windows}' )
def certsPath_Linux = context.expand( '${#Project#certsPath_Linux}' )

if (System.properties['os.name'].toLowerCase().contains('windows'))
{
			log.info "it's Windows";
               
                 tP.setPropertyValue("JDBCConnStr","jdbc:oracle:thin:deqa1/dec2010@10.31.153.5:2115/stdecqpdb_stdecqa.neustar.com");
                tP.setPropertyValue("JDBCDriver","DECEOracle");
                tP.setPropertyValue("certspath",certsPath_Windows);
                
}

else
{
	log.info "it's not Windows"
	 tP.setPropertyValue("JDBCConnStr","jdbc:oracle:thin:deqa1/dec2010@stdeqp-clu1-scan.va.neustar.com:2115/stdecqpdb_stdecqa.neustar.com");
                tP.setPropertyValue("JDBCDriver","oracle.jdbc.driver.OracleDriver");
                tP.setPropertyValue("certspath",certsPath_Linux);
               
                
}

log.info "VM Set";</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>TC_DECE_VM_SETUP</con:value></con:property><con:property><con:name>sName</con:name><con:value>P0_Cache_TestCases</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Random_Number_Generator" searchProperties="true" disabled="true" id="9d8bae7d-d592-4fb0-bbc0-2379aee20c8b"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);


tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Generate Random Number"><con:settings/><con:config><script><![CDATA[//Random Number Generator

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
log.info callTCname
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
log.info callTC
def random = new Random();
def randomIntId = random.nextInt(999999999-100000001+1)+100000001;
log.info randomIntId
tC.setPropertyValue("RandomNumberGenerated", randomIntId.toString());
def randomNumberGenerated = context.expand( '${#TestCase#RandomNumberGenerated}' )
callTC.setPropertyValue("RandomNumberGenerated", randomNumberGenerated);

/* ${Groovy Script to encode ALID} */


import org.apache.commons.lang.StringUtils;
def rEST_API_Version = context.expand( '${#Project#versionMajor}/${#Project#versionMinor}' )
//
//def r4Profile = context.expand( '${#Project#R4Profile}' )
//def r4APID_GET_DELETE = context.expand( '${#Project#R4APID_GET_DELETE}' )
//def r3Profile = context.expand( '${#Project#R3Profile}' )
//def r3APID_GET_DELETE = context.expand( '${#Project#R3APID_GET_DELETE}' )
def cID = context.expand( '${#TestCase#CID}' )


if(rEST_API_Version=="1/07"||rEST_API_Version=="1/11"||rEST_API_Version=="2015/02")

{

//tP.setPropertyValue("Profile", r4Profile);
//tP.setPropertyValue("APID_GET_DELETE", r4APID_GET_DELETE)	
//${Groovy Script to encode R4-APID}
log.info "CID = "+cID

int indexofforthcolon;
int counter = 0;
		for( int j=0; j<cID.length(); j++ )
		{
   				if( cID.charAt(j) == ':' ) 
   				{
       					 counter++;
						if(counter==4)
						{
							indexofforthcolon=j;
						}	 
   				} 
		}
		
String firstsubpart;
firstsubpart=cID.substring(0,indexofforthcolon);
log.info firstsubpart;
String[] splitcid=cID.split(":",2);
log.info splitcid.toString();
String content = "&amp;";
log.info  "Return Value :" 
      for (String retval: cID.split(":", 5))
      {
      //log.info retval
      String container = retval;
      boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
	if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
      log.info URLEncoder.encode (tmpString, "UTF-8")
   	tC.setPropertyValue("CID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (tmpString, "UTF-8"));
   	def cID_GET_DELETE = context.expand( '${#TestCase#CID_GET_DELETE}' )
log.info cID_GET_DELETE
callTC.setPropertyValue("CID_GET_DELETE", cID_GET_DELETE);
  
    }
    else 
    {
    	log.info URLEncoder.encode (retval, "UTF-8")
    	tC.setPropertyValue("CID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (retval, "UTF-8"));
    def cID_GET_DELETE = context.expand( '${#TestCase#CID_GET_DELETE}' )
log.info cID_GET_DELETE
callTC.setPropertyValue("CID_GET_DELETE", cID_GET_DELETE);
     
    }
   }    
}


if(rEST_API_Version=="1/06")
{
//	tP.setPropertyValue("Profile", r3Profile);
//	tP.setPropertyValue("APID_GET_DELETE", r3APID_GET_DELETE);	
//ALID (not encoded) to be used in the request xml
log.info "CID = "+cID

String container = cID;
String content = "&amp;";

//Processing the APIDs containing &amp; in its content
boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
     tC.setPropertyValue("CID_GET_DELETE", URLEncoder.encode (tmpString, "UTF-8"));

//Encoded ALID (ALID_GET_DELETE) to be used in the URL for Update/Get/Delete operations after removing &amp; from it.

def cID_GET_DELETE = context.expand( '${#TestCase#CID_GET_DELETE}' )
log.info cID_GET_DELETE
callTC.setPropertyValue("CID_GET_DELETE", cID_GET_DELETE);
	
}
else {

tC.setPropertyValue("CID_GET_DELETE", URLEncoder.encode (cID, "UTF-8"));
def cID_GET_DELETE = context.expand( '${#TestCase#CID_GET_DELETE}' )
log.info cID_GET_DELETE
callTC.setPropertyValue("CID_GET_DELETE", cID_GET_DELETE);
}
}]]></script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>TC_DECE_10088_MetadataBasicList__PERM_Access_Control_Rights_Linked LASP_Successful</con:value></con:property><con:property><con:name>sName</con:name><con:value>MetadataBasicList Different Roles</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>309541210</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>APID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ALID</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>ALID_GET_DELETE</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_251063.txt</con:value></con:property><con:property><con:name>Profile</con:name><con:value>urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">202</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">202</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">200</con:value></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>APID_GET_DELETE</con:name><con:value>:</con:value></con:property><con:property><con:name>Altnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_309541210.txt</con:value></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c6f668e7-5a8a-413b-a9f8-cedb5aab295d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Set Version V2_11" searchProperties="true" disabled="true" id="87760291-91f2-4c1c-8096-eaa383feadc3"><con:settings/><con:testStep type="groovy" name="Set V2_11"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
tP.setPropertyValue("versionMajor",'1');
tP.setPropertyValue("versionMinor",'11');
log.info "V2: "+tP.getPropertyValue("versionMinor");

def v2 = context.expand( '${#Project#versionMinor}' )
def schema = tP.getPropertyValue("coordinatorSchema_"+v2);

tP.setPropertyValue("Coordinator_Schema",schema);
log.info "Setting the coordinatorSchema value ---- "+schema;


def mdschema = tP.getPropertyValue("md_schema_"+v2);
tP.setPropertyValue("md_schema",mdschema);
log.info "Setting the metadata schema  value ---- "+mdschema;</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Set Version V2_07" searchProperties="true" disabled="true" id="359778c2-704e-4737-8427-15cc0981753d"><con:settings/><con:testStep type="groovy" name="Set V2_07"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
tP.setPropertyValue("versionMajor",'1');
tP.setPropertyValue("versionMinor",'07');
log.info "V2: "+tP.getPropertyValue("versionMinor");

def v2 = context.expand( '${#Project#versionMinor}' )
def schema = tP.getPropertyValue("coordinatorSchema_"+v2);

tP.setPropertyValue("Coordinator_Schema",schema);
log.info "Setting the coordinatorSchema value ---- "+schema;


def mdschema = tP.getPropertyValue("md_schema_"+v2);
tP.setPropertyValue("md_schema",mdschema);
log.info "Setting the metadata schema  value ---- "+mdschema;</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Set Version V2_06" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Set V2_06"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
tP.setPropertyValue("versionMajor",'1');
 tP.setPropertyValue("versionMinor",'06');
log.info "V2: "+tP.getPropertyValue("versionMinor");

def v2 = context.expand( '${#Project#versionMinor}' )
def schema = tP.getPropertyValue("coordinatorSchema_"+v2);

tP.setPropertyValue("Coordinator_Schema",schema);
log.info "Setting the coordinatorSchema value ---- "+schema;


def mdschema = tP.getPropertyValue("md_schema_"+v2);
tP.setPropertyValue("md_schema",mdschema);
log.info "Setting the metadata schema  value ---- "+mdschema;</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Set Version V2_02" searchProperties="true" disabled="true" id="8c022b36-e474-418f-a2a0-1ad16dcb7456"><con:settings/><con:testStep type="groovy" name="Set V2_02"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
tP.setPropertyValue("versionMajor",'2015');
tP.setPropertyValue("versionMinor",'02');
log.info "V2: "+tP.getPropertyValue("versionMinor");

def v2 = context.expand( '${#Project#versionMinor}' )
def schema = tP.getPropertyValue("coordinatorSchema_"+v2);

tP.setPropertyValue("Coordinator_Schema",schema);
log.info "Setting the coordinatorSchema value ---- "+schema;


def mdschema = tP.getPropertyValue("md_schema_"+v2);
tP.setPropertyValue("md_schema",mdschema);
log.info "Setting the metadata schema  value ---- "+mdschema;</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>QC_TestPlanDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestLabDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestSet</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Test Cases Containing APIs_Cache" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="POST - MetadataBasicCreate" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="55490e39-141d-42bc-bd01-32f89407ae4a"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
/*
*  Mapping this call only to a retailer node.
*/
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script RandomUpperLowerCase" disabled="true"><con:settings/><con:config><script>import generalUtils.generalUtils;

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();


myGeneralUtils = new generalUtils(log);

//x = "abcd:ef:ghij";
x=tC.getPropertyValue("randomUpperLowerURN");

y = myGeneralUtils.randomizeStringCase(x);

tC.setPropertyValue("randomUpperLowerURN_ReturnValue", y);

 log.info "randomUpperLowerURN_ReturnValue is " + tC.getPropertyValue("randomUpperLowerURN_ReturnValue");
 </script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("CREATE - MetadataBasicCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="CREATE - MetadataBasicCreate"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" methodName="POST MetadataBasic" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CREATE - MetadataBasicCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="discardResponse">false</con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">true</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">true</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@remove_empty_content">true</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<BasicAsset xmlns:ns2="${#Project#md_schema}" xmlns="${#Project#Coordinator_Schema}" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#">
    <BasicData ContentID="${#TestCase#CID}">
        <ns2:UpdateNum>8</ns2:UpdateNum>
        <ns2:LocalizedInfo default="true" language="en-US">
            <ns2:TitleDisplay19>${#Project#TitleDisplay19}</ns2:TitleDisplay19>
            <ns2:TitleDisplay60>A Beautiful Mind</ns2:TitleDisplay60>
            <ns2:TitleSort>Smurfs, The</ns2:TitleSort>
            
    <ns2:ArtReference resolution="800x1200">http://upload.wikimedia.org/wikipedia/commons/5/5d/City_Hall_in_Slupsk_MG_4151_800x1200.jpg</ns2:ArtReference>
    

            <ns2:Summary190>When the evil wizard Gargamel chases the tiny blue Smurfs out of their village, they tumble from their magical world and into ours.</ns2:Summary190>
            <ns2:Summary400>When the evil wizard Gargamel chases the tiny blue Smurfs out of their village, they tumble from their magical world and into ours -- in fact, smack dab in the middle of Central Park. Just three apples high and stuck in the Big Apple, the Smurfs must find a way to get back to their village before Gargamel tracks them down.</ns2:Summary400>
            <ns2:Genre>Comedy</ns2:Genre>
            <ns2:Genre>Adventure</ns2:Genre>
            <ns2:Genre>Animation</ns2:Genre>
            <ns2:Genre>Fantasy</ns2:Genre>
            <ns2:Genre>Family</ns2:Genre>
            <ns2:VersionNotes>---</ns2:VersionNotes>
            <ns2:OriginalTitle>The Smurfs</ns2:OriginalTitle>
            <ns2:CopyrightLine>Sony</ns2:CopyrightLine>
        </ns2:LocalizedInfo>
        <ns2:LocalizedInfo default="false" language="de">
            <ns2:TitleDisplay19>Die Schlümpfe</ns2:TitleDisplay19>
            <ns2:TitleDisplay60>Die Schlümpfe</ns2:TitleDisplay60>
            <ns2:TitleSort>Schlümpfe, Die</ns2:TitleSort>
            <ns2:ArtReference resolution="800x1200">http://upload.wikimedia.org/wikipedia/commons/5/5d/City_Hall_in_Slupsk_MG_4151_800x1200.jpg</ns2:ArtReference>
            <ns2:Summary190>Die Schlümpfe verlassen ihre magische Welt &amp; erobern den Großstadt-Dschungel New York.</ns2:Summary190>
            <ns2:Summary400>Die Schlümpfe verlassen ihre magische Welt &amp; erobern den Großstadt-Dschungel New York. Gejagt vom bösen Zauberer Gargamel müssen sie ein schlumpfiges Abenteuer bestehen.</ns2:Summary400>
            <ns2:Genre>Comedy</ns2:Genre>
            <ns2:Genre>Adventure</ns2:Genre>
            <ns2:Genre>Animation</ns2:Genre>
            <ns2:Genre>Fantasy</ns2:Genre>
            <ns2:Genre>Family</ns2:Genre>
            <ns2:VersionNotes>---</ns2:VersionNotes>
            <ns2:OriginalTitle>The Smurfs</ns2:OriginalTitle>
            <ns2:CopyrightLine>Sony</ns2:CopyrightLine>
        </ns2:LocalizedInfo>
        <ns2:RunLength>PT1H43M0.000S</ns2:RunLength>
        <ns2:ReleaseYear>2010</ns2:ReleaseYear>
        <ns2:ReleaseDate>2011-07-28</ns2:ReleaseDate>
        <ns2:ReleaseHistory>
            <ns2:ReleaseType>Premiere</ns2:ReleaseType>
            <ns2:Date scheduled="false">2011-07-28T10:10:10Z</ns2:Date>
        </ns2:ReleaseHistory>
        <ns2:WorkType>Movie</ns2:WorkType>
        <ns2:RatingSet>
            <ns2:Rating>
                <ns2:Region>
                    <ns2:country>US</ns2:country>
                </ns2:Region>
                <ns2:System>ALL</ns2:System>
                <ns2:Value>Exempt</ns2:Value>
            </ns2:Rating>
        </ns2:RatingSet>
    </BasicData>

</BasicAsset>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('CREATE - MetadataBasicCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_10115_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicGET_MetadataBasicResourceStatusUpdate_If-Unmodified-Since_02_MetadataBasicListGET_If-Modified-Since_11_ 200 OK</con:value></con:property><con:property><con:name>sName</con:name><con:value>P0_Cache_TestCases_2015/02</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>113772713</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">MdBasic Create Request has been accepted for processing, but the processing has not been completed</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 202 Accepted</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>95</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/2015/02/Asset/Metadata/Basic/urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_113772713.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_113772713.txt</con:value></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>checkdigit</con:name><con:value/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1PC/CON_concat.pem</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="R3-POST - MetadataBasicCreate" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
/*
*  Mapping this call only to a retailer node.
*/
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script RandomUpperLowerCase" disabled="true"><con:settings/><con:config><script>import generalUtils.generalUtils;

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();


myGeneralUtils = new generalUtils(log);

//x = "abcd:ef:ghij";
x=tC.getPropertyValue("randomUpperLowerURN");

y = myGeneralUtils.randomizeStringCase(x);

tC.setPropertyValue("randomUpperLowerURN_ReturnValue", y);

 log.info "randomUpperLowerURN_ReturnValue is " + tC.getPropertyValue("randomUpperLowerURN_ReturnValue");
 </script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("CREATE - MetadataBasicCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="CREATE - MetadataBasicCreate"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" methodName="POST MetadataBasic" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CREATE - MetadataBasicCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="2222_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="discardResponse">false</con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">true</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">true</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@remove_empty_content">true</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<BasicAsset xmlns:ns2="${#Project#md_schema}" xmlns="${#Project#Coordinator_Schema}" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#">
    <BasicData ContentID="${#TestCase#CID}">
        <ns2:UpdateNum>8</ns2:UpdateNum>
        <ns2:LocalizedInfo default="true" language="en-US">
            <ns2:TitleDisplay19>${#Project#TitleDisplay19}</ns2:TitleDisplay19>
            <ns2:TitleDisplay60>A Beautiful Mind</ns2:TitleDisplay60>
            <ns2:TitleSort>Smurfs, The</ns2:TitleSort>
            
    <ns2:ArtReference resolution="800x1200">http://upload.wikimedia.org/wikipedia/commons/5/5d/City_Hall_in_Slupsk_MG_4151_800x1200.jpg</ns2:ArtReference>
    

            <ns2:Summary190>When the evil wizard Gargamel chases the tiny blue Smurfs out of their village, they tumble from their magical world and into ours.</ns2:Summary190>
            <ns2:Summary400>When the evil wizard Gargamel chases the tiny blue Smurfs out of their village, they tumble from their magical world and into ours -- in fact, smack dab in the middle of Central Park. Just three apples high and stuck in the Big Apple, the Smurfs must find a way to get back to their village before Gargamel tracks them down.</ns2:Summary400>
            <ns2:Genre>Comedy</ns2:Genre>
            <ns2:Genre>Adventure</ns2:Genre>
            <ns2:Genre>Animation</ns2:Genre>
            <ns2:Genre>Fantasy</ns2:Genre>
            <ns2:Genre>Family</ns2:Genre>
            <ns2:VersionNotes>---</ns2:VersionNotes>
            <ns2:OriginalTitle>The Smurfs</ns2:OriginalTitle>
            <ns2:CopyrightLine>Sony</ns2:CopyrightLine>
        </ns2:LocalizedInfo>
        <ns2:LocalizedInfo default="false" language="de">
            <ns2:TitleDisplay19>Die Schlümpfe</ns2:TitleDisplay19>
            <ns2:TitleDisplay60>Die Schlümpfe</ns2:TitleDisplay60>
            <ns2:TitleSort>Schlümpfe, Die</ns2:TitleSort>
            <ns2:ArtReference resolution="800x1200">http://upload.wikimedia.org/wikipedia/commons/5/5d/City_Hall_in_Slupsk_MG_4151_800x1200.jpg</ns2:ArtReference>
            <ns2:Summary190>Die Schlümpfe verlassen ihre magische Welt &amp; erobern den Großstadt-Dschungel New York.</ns2:Summary190>
            <ns2:Summary400>Die Schlümpfe verlassen ihre magische Welt &amp; erobern den Großstadt-Dschungel New York. Gejagt vom bösen Zauberer Gargamel müssen sie ein schlumpfiges Abenteuer bestehen.</ns2:Summary400>
            <ns2:Genre>Comedy</ns2:Genre>
            <ns2:Genre>Adventure</ns2:Genre>
            <ns2:Genre>Animation</ns2:Genre>
            <ns2:Genre>Fantasy</ns2:Genre>
            <ns2:Genre>Family</ns2:Genre>
            <ns2:VersionNotes>---</ns2:VersionNotes>
            <ns2:OriginalTitle>The Smurfs</ns2:OriginalTitle>
            <ns2:CopyrightLine>Sony</ns2:CopyrightLine>
        </ns2:LocalizedInfo>
        <ns2:RunLength>PT1H43M0.000S</ns2:RunLength>
        <ns2:ReleaseYear>2010</ns2:ReleaseYear>
        <ns2:ReleaseDate>2011-07-28</ns2:ReleaseDate>
        <ns2:ReleaseHistory>
            <ns2:ReleaseType>Premiere</ns2:ReleaseType>
            <ns2:Date scheduled="false">2011-07-28T10:10:10Z</ns2:Date>
        </ns2:ReleaseHistory>
        <ns2:WorkType>Movie</ns2:WorkType>
        <ns2:RatingSet>
            <ns2:Rating>
                <ns2:Region>
                    <ns2:country>US</ns2:country>
                </ns2:Region>
                <ns2:System>ALL</ns2:System>
                <ns2:Value>Exempt</ns2:Value>
            </ns2:Rating>
        </ns2:RatingSet>
    </BasicData>

</BasicAsset>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('CREATE - MetadataBasicCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00511_MetadataBasicList_CreatingBasicMetadata_With_R4_and_R3_And_Getting</con:value></con:property><con:property><con:name>sName</con:name><con:value>MetadataBasicList</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>781889</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>403</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>403</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>404</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>403</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ns2="${#Project#md_schema}" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:MdBasicMetadataAlreadyExist">
      <Reason Language="en">The basic metadata already exists.</Reason>
      <OriginalRequest>https://qa.p.uvvu.com:7001/rest/1/07/Asset/Metadata/Basic/</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/07/error/en/ErrorList.html#MdBasicMetadataAlreadyExist</ErrorLink>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 409 Conflict</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>672</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/07/Asset/Metadata/Basic/urn%3Adece%3Acid%3Afile%3AAL_WEB_PORTAL_NUMBERS_781889.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn%3Adece%3Acid%3Afile%3AAL_WEB_PORTAL_NUMBERS_781889.txt</con:value></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>checkdigit</con:name><con:value/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/New Certs for 1.0.1.12A/2222_concat.pem</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PUT - MetadataBasicCreate" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="f0973054-9faa-420c-8a60-44a9b6f4f8df"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);


tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script RandomUpperLowerCase" disabled="true"><con:settings/><con:config><script>import generalUtils.generalUtils;

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();


myGeneralUtils = new generalUtils(log);

//x = "abcd:ef:ghij";
x=tC.getPropertyValue("randomUpperLowerURN");

y = myGeneralUtils.randomizeStringCase(x);

tC.setPropertyValue("randomUpperLowerURN_ReturnValue", y);

 log.info "randomUpperLowerURN_ReturnValue is " + tC.getPropertyValue("randomUpperLowerURN_ReturnValue");
 </script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("PUT - MetadataBasicCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - MetadataBasicCreate"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" methodName="PUT MetadataBasic" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - MetadataBasicCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="${#Project#ETag}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<dece:BasicAsset xmlns:dece="${#Project#Coordinator_Schema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="${#Project#md_schema}" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="${#Project#Coordinator_Schema} NewXMLSchema.xsd ">
  <dece:BasicData ContentID="${#TestCase#CID}">
    <md:UpdateNum>70</md:UpdateNum>
    <md:LocalizedInfo default="true" language="en">
      <md:TitleDisplay19>${#Project#TitleDisplay19}</md:TitleDisplay19>
      <md:TitleDisplay60>md:TitleDisplay60_Update</md:TitleDisplay60>
      <md:TitleDisplayUnlimited>md:TitleDisplayUnlimited</md:TitleDisplayUnlimited>
      <md:TitleSort>md:TitleSort</md:TitleSort>
      <md:ArtReference resolution="800x1200">http://upload.wikimedia.org/wikipedia/commons/5/5d/City_Hall_in_Slupsk_MG_4151_800x1200.jpg</md:ArtReference>
      
      <md:Summary190 cast="true">md:Summary190</md:Summary190>
      <md:Summary400 cast="true">md:Summary400</md:Summary400>
      <md:Summary4000 cast="true">md:Summary4000</md:Summary4000>
      <md:DisplayIndicators>CC</md:DisplayIndicators>
      <md:Genre id="" level="0" source="http://tempuri.org">md:Genre</md:Genre>
      <md:Keyword>md:Keyword</md:Keyword>
      <md:VersionNotes>md:VersionNotes</md:VersionNotes>
      <md:Region>
        <md:country>US</md:country>
      </md:Region>
      <md:OriginalTitle><![CDATA[en-US_!Dr._POST_ "W" Jones!- _?_@#$%^  *()_+[]{};':",./_?_\|ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€ Ã¢â‚¬â„¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¾ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â¦ÃƒÂ¢Ã¢â€šÂ¬ ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â¡Ãƒâ€¹Ã¢â‚¬ ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â°Ãƒâ€¦ ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â¹Ãƒâ€¦Ã¢â‚¬â„¢Ãƒâ€¦Ã‚Â½ ÃƒÆ’Ã‚Â© ]]]]>><![CDATA[</md:OriginalTitle>
      <md:CopyrightLine><![CDATA[© 2012 Lions Gate Entertainment Inc. All Rights Reserved.]]]]>><![CDATA[</md:CopyrightLine>
      <md:PeopleLocal>
        <md:Job>
          <md:JobFunction scheme="">md:JobFunction</md:JobFunction>
          <md:JobDisplay language="en">md:JobDisplay</md:JobDisplay>
          <md:BillingBlockOrder>0</md:BillingBlockOrder>
          <md:Character>md:Character</md:Character>
          <md:Guest>true</md:Guest>
        </md:Job>
        <md:Name>
          <md:DisplayName language="en">md:DisplayName</md:DisplayName>
          <md:SortName language="en">md:SortName</md:SortName>
          <md:FirstGivenName>md:FirstGivenName</md:FirstGivenName>
          <md:SecondGivenName>md:SecondGivenName</md:SecondGivenName>
          <md:FamilyName>md:FamilyName</md:FamilyName>
          <md:Suffix>md:Suffix</md:Suffix>
          <md:Moniker>md:Moniker</md:Moniker>
        </md:Name>
        <md:Identifier>
          <md:Identifier>md:Identifier</md:Identifier>
          <md:Namespace>md:Namespace</md:Namespace>
          <md:ReferenceLocation>http://tempuri.org</md:ReferenceLocation>
        </md:Identifier>
        <md:Gender>male</md:Gender>
      </md:PeopleLocal>
      <md:TitleAlternate language="en" type="">md:TitleAlternate</md:TitleAlternate>
    </md:LocalizedInfo>
    <md:RunLength>P1D</md:RunLength>
    <md:ReleaseYear>2001</md:ReleaseYear>
    <md:ReleaseDate>2011-07-28T10:00:00Z</md:ReleaseDate>
    <md:ReleaseHistory>
      <md:ReleaseType wide="true">md:ReleaseType</md:ReleaseType>
      <md:DistrTerritory>
        <md:country>US</md:country>
      </md:DistrTerritory>
      <md:Date scheduled="true">2011-07-28T10:00:00Z</md:Date>
      <md:Description>md:Description</md:Description>
      <md:ReleaseOrg organizationID="">
        <md:DisplayName>md:DisplayName</md:DisplayName>
        <md:SortName>md:SortName</md:SortName>
      </md:ReleaseOrg>
    </md:ReleaseHistory>
    <md:WorkType>Movie</md:WorkType>
    <md:PictureColorType>color</md:PictureColorType>
    <md:PictureFormat>md:PictureFormat</md:PictureFormat>
    <md:ThreeD>true</md:ThreeD>
    <md:AltIdentifier>
      <md:Namespace>md:Namespace</md:Namespace>
      <md:Identifier>md:Identifier</md:Identifier>
      <md:Location>http://tempuri.org</md:Location>
    </md:AltIdentifier>
    <md:RatingSet>
      <md:NotRated condition="">true</md:NotRated>
      <md:AdultContent>true</md:AdultContent>
    </md:RatingSet>
    <md:People>
      <md:Job>
        <md:JobFunction scheme="">md:JobFunction</md:JobFunction>
        <md:JobDisplay language="en">md:JobDisplay</md:JobDisplay>
        <md:BillingBlockOrder>0</md:BillingBlockOrder>
        <md:Character>md:Character</md:Character>
        <md:Guest>true</md:Guest>
      </md:Job>
      <md:Name>
        <md:DisplayName language="en">md:DisplayName</md:DisplayName>
        <md:SortName language="en">md:SortName</md:SortName>
        <md:FirstGivenName>md:FirstGivenName</md:FirstGivenName>
        <md:SecondGivenName>md:SecondGivenName</md:SecondGivenName>
        <md:FamilyName>md:FamilyName</md:FamilyName>
        <md:Suffix>md:Suffix</md:Suffix>
        <md:Moniker>md:Moniker</md:Moniker>
      </md:Name>
      <md:Identifier>
        <md:Identifier>md:Identifier</md:Identifier>
        <md:Namespace>md:Namespace</md:Namespace>
        <md:ReferenceLocation>http://tempuri.org</md:ReferenceLocation>
      </md:Identifier>
      <md:Gender>male</md:Gender>
    </md:People>
    <md:CountryOfOrigin>
      <md:country>US</md:country>
    </md:CountryOfOrigin>
    <md:PrimarySpokenLanguage>en</md:PrimarySpokenLanguage>
    <md:AssociatedOrg organizationID="" role="">
      <md:DisplayName>md:DisplayName</md:DisplayName>
      <md:SortName>md:SortName</md:SortName>
    </md:AssociatedOrg>
    <md:SequenceInfo>
      <md:Number>0</md:Number>
      <md:HouseSequence>md:HouseSequence</md:HouseSequence>
    </md:SequenceInfo>
    
  </dece:BasicData>
 
</dece:BasicAsset>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('PUT - MetadataBasicCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeUpdate");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_767001.txt</con:value></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>202</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>961</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value>text/html;charset=utf-8</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 412 Precondition Failed</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>767001</con:value></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value>P0_Cache_TestCases</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicGET_MetadataBasicDelete_If-Unmodified-Since_MetadataBasicListGET_If-Modified-Since_404 Not Found</con:value></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 412 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>A specified precondition has failed for this request ().</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:/DECE//CON_concat.pem</con:value></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PUT - MetadataBasicCreate_If-Unmodified-Since" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="84bdbd61-cebb-4627-984e-95a5fcc2f00d"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);


tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script RandomUpperLowerCase" disabled="true"><con:settings/><con:config><script>import generalUtils.generalUtils;

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();


myGeneralUtils = new generalUtils(log);

//x = "abcd:ef:ghij";
x=tC.getPropertyValue("randomUpperLowerURN");

y = myGeneralUtils.randomizeStringCase(x);

tC.setPropertyValue("randomUpperLowerURN_ReturnValue", y);

 log.info "randomUpperLowerURN_ReturnValue is " + tC.getPropertyValue("randomUpperLowerURN_ReturnValue");
 </script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("PUT - MetadataBasicCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - MetadataBasicCreate"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" methodName="PUT MetadataBasic" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - MetadataBasicCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Unmodified-Since" value="${#Project#Last-Modified}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<dece:BasicAsset xmlns:dece="${#Project#Coordinator_Schema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="${#Project#md_schema}" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="${#Project#Coordinator_Schema} NewXMLSchema.xsd ">
  <dece:BasicData ContentID="${#TestCase#CID}">
    <md:UpdateNum>70</md:UpdateNum>
    <md:LocalizedInfo default="true" language="en">
      <md:TitleDisplay19>${#Project#TitleDisplay19}</md:TitleDisplay19>
      <md:TitleDisplay60>md:TitleDisplay60_Update</md:TitleDisplay60>
      <md:TitleDisplayUnlimited>md:TitleDisplayUnlimited</md:TitleDisplayUnlimited>
      <md:TitleSort>md:TitleSort</md:TitleSort>
      <md:ArtReference resolution="800x1200">http://upload.wikimedia.org/wikipedia/commons/5/5d/City_Hall_in_Slupsk_MG_4151_800x1200.jpg</md:ArtReference>
      
      <md:Summary190 cast="true">md:Summary190</md:Summary190>
      <md:Summary400 cast="true">md:Summary400</md:Summary400>
      <md:Summary4000 cast="true">md:Summary4000</md:Summary4000>
      <md:DisplayIndicators>CC</md:DisplayIndicators>
      <md:Genre id="" level="0" source="http://tempuri.org">md:Genre</md:Genre>
      <md:Keyword>md:Keyword</md:Keyword>
      <md:VersionNotes>md:VersionNotes</md:VersionNotes>
      <md:Region>
        <md:country>US</md:country>
      </md:Region>
      <md:OriginalTitle><![CDATA[en-US_!Dr._POST_ "W" Jones!- _?_@#$%^  *()_+[]{};':",./_?_\|ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€ Ã¢â‚¬â„¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¾ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â¦ÃƒÂ¢Ã¢â€šÂ¬ ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â¡Ãƒâ€¹Ã¢â‚¬ ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â°Ãƒâ€¦ ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â¹Ãƒâ€¦Ã¢â‚¬â„¢Ãƒâ€¦Ã‚Â½ ÃƒÆ’Ã‚Â© ]]]]>><![CDATA[</md:OriginalTitle>
      <md:CopyrightLine><![CDATA[© 2012 Lions Gate Entertainment Inc. All Rights Reserved.]]]]>><![CDATA[</md:CopyrightLine>
      <md:PeopleLocal>
        <md:Job>
          <md:JobFunction scheme="">md:JobFunction</md:JobFunction>
          <md:JobDisplay language="en">md:JobDisplay</md:JobDisplay>
          <md:BillingBlockOrder>0</md:BillingBlockOrder>
          <md:Character>md:Character</md:Character>
          <md:Guest>true</md:Guest>
        </md:Job>
        <md:Name>
          <md:DisplayName language="en">md:DisplayName</md:DisplayName>
          <md:SortName language="en">md:SortName</md:SortName>
          <md:FirstGivenName>md:FirstGivenName</md:FirstGivenName>
          <md:SecondGivenName>md:SecondGivenName</md:SecondGivenName>
          <md:FamilyName>md:FamilyName</md:FamilyName>
          <md:Suffix>md:Suffix</md:Suffix>
          <md:Moniker>md:Moniker</md:Moniker>
        </md:Name>
        <md:Identifier>
          <md:Identifier>md:Identifier</md:Identifier>
          <md:Namespace>md:Namespace</md:Namespace>
          <md:ReferenceLocation>http://tempuri.org</md:ReferenceLocation>
        </md:Identifier>
        <md:Gender>male</md:Gender>
      </md:PeopleLocal>
      <md:TitleAlternate language="en" type="">md:TitleAlternate</md:TitleAlternate>
    </md:LocalizedInfo>
    <md:RunLength>P1D</md:RunLength>
    <md:ReleaseYear>2001</md:ReleaseYear>
    <md:ReleaseDate>2011-07-28T10:00:00Z</md:ReleaseDate>
    <md:ReleaseHistory>
      <md:ReleaseType wide="true">md:ReleaseType</md:ReleaseType>
      <md:DistrTerritory>
        <md:country>US</md:country>
      </md:DistrTerritory>
      <md:Date scheduled="true">2011-07-28T10:00:00Z</md:Date>
      <md:Description>md:Description</md:Description>
      <md:ReleaseOrg organizationID="">
        <md:DisplayName>md:DisplayName</md:DisplayName>
        <md:SortName>md:SortName</md:SortName>
      </md:ReleaseOrg>
    </md:ReleaseHistory>
    <md:WorkType>Movie</md:WorkType>
    <md:PictureColorType>color</md:PictureColorType>
    <md:PictureFormat>md:PictureFormat</md:PictureFormat>
    <md:ThreeD>true</md:ThreeD>
    <md:AltIdentifier>
      <md:Namespace>md:Namespace</md:Namespace>
      <md:Identifier>md:Identifier</md:Identifier>
      <md:Location>http://tempuri.org</md:Location>
    </md:AltIdentifier>
    <md:RatingSet>
      <md:NotRated condition="">true</md:NotRated>
      <md:AdultContent>true</md:AdultContent>
    </md:RatingSet>
    <md:People>
      <md:Job>
        <md:JobFunction scheme="">md:JobFunction</md:JobFunction>
        <md:JobDisplay language="en">md:JobDisplay</md:JobDisplay>
        <md:BillingBlockOrder>0</md:BillingBlockOrder>
        <md:Character>md:Character</md:Character>
        <md:Guest>true</md:Guest>
      </md:Job>
      <md:Name>
        <md:DisplayName language="en">md:DisplayName</md:DisplayName>
        <md:SortName language="en">md:SortName</md:SortName>
        <md:FirstGivenName>md:FirstGivenName</md:FirstGivenName>
        <md:SecondGivenName>md:SecondGivenName</md:SecondGivenName>
        <md:FamilyName>md:FamilyName</md:FamilyName>
        <md:Suffix>md:Suffix</md:Suffix>
        <md:Moniker>md:Moniker</md:Moniker>
      </md:Name>
      <md:Identifier>
        <md:Identifier>md:Identifier</md:Identifier>
        <md:Namespace>md:Namespace</md:Namespace>
        <md:ReferenceLocation>http://tempuri.org</md:ReferenceLocation>
      </md:Identifier>
      <md:Gender>male</md:Gender>
    </md:People>
    <md:CountryOfOrigin>
      <md:country>US</md:country>
    </md:CountryOfOrigin>
    <md:PrimarySpokenLanguage>en</md:PrimarySpokenLanguage>
    <md:AssociatedOrg organizationID="" role="">
      <md:DisplayName>md:DisplayName</md:DisplayName>
      <md:SortName>md:SortName</md:SortName>
    </md:AssociatedOrg>
    <md:SequenceInfo>
      <md:Number>0</md:Number>
      <md:HouseSequence>md:HouseSequence</md:HouseSequence>
    </md:SequenceInfo>
    
  </dece:BasicData>
 
</dece:BasicAsset>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('PUT - MetadataBasicCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeUpdate");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_887752246.txt</con:value></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>202</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>98</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://lp3.qa-web-vip2-s02.uvvu.com:7003/rest/1/11/Asset/Metadata/Basic/urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_887752246.txt</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 202 Accepted</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>887752246</con:value></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value>P0_Cache_TestCases_1/11</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_10116_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicGET_MetadataBasicUpdate_If-Unmodified-Since_11_MetadataBasicListGET_If-Modified-Since_07_200 OK</con:value></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">MdBasic Update Request has been accepted for processing, but the processing has not been completed</con:value></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP3LBSPC/CON_concat.pem</con:value></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GET - MetadataBasicCreate" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="ae841b30-f871-4cc3-b44b-10efe571c353"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script RandomUpperLowerCase" disabled="true"><con:settings/><con:config><script>import generalUtils.generalUtils;

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();


myGeneralUtils = new generalUtils(log);

//x = "abcd:ef:ghij";
x=tC.getPropertyValue("randomUpperLowerURN");

y = myGeneralUtils.randomizeStringCase(x);

tC.setPropertyValue("randomUpperLowerURN_ReturnValue", y);

 log.info "randomUpperLowerURN_ReturnValue is " + tC.getPropertyValue("randomUpperLowerURN_ReturnValue");
 </script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("REST Test Request");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="REST Test Request"><con:settings/><con:config service="MetadataBasicUpdateWithUpdateNum" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}?updatenum=${#TestCase#UpdateNum}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="REST Test Request" mediaType="application/xml" sslKeystore="CON_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("CREATE - MetadataDigitalCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - MetadataBasicCreate"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" methodName="GET MetadataBasic" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - MetadataBasicCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="2222_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request><![CDATA[<!-- Build 7.8.4.1 Test Sample XML file generated by XMLSpy v2008 sp1 (http://www.altova.com)--><dece:BasicAsset 
xsi:schemaLocation="http://www.decellc.org/schema/2010/10/dece Coordinator%20Interface%20Schema-v0171.xsd" 
xmlns:dece="http://www.decellc.org/schema/2011/08/coordinator" 
xmlns:md="http://www.movielabs.com/md" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<!--<dece:BasicData ContentID="urn:dece:cid:FILE:STOPANDGO.TXT">-->
<dece:BasicData ContentID="${#TestCase#CID}">
		<md:UpdateNum>${#TestCase#RandomNumberGenerated}</md:UpdateNum>
		<md:LocalizedInfo default="true" language="en-US">
			<md:TitleDisplay19>StrngTitleDis3nd</md:TitleDisplay19>
			<md:TitleDisplay60>StringTitleDisplay60</md:TitleDisplay60>
			<md:TitleSort>StringTitleSort</md:TitleSort>
			<md:ArtReference resolution="13002x13002">http://www.altova2.com</md:ArtReference>
			<md:Summary190 cast="true">StringSummary190_${#TestCase#RandomNumberGenerated}</md:Summary190>
			<md:Summary400 cast="true">StringSummary400_${#TestCase#RandomNumberGenerated}</md:Summary400>
			<md:Summary4000 cast="true">StringSummary4000_${#TestCase#RandomNumberGenerated}</md:Summary4000>
			<md:DisplayIndicators>CC</md:DisplayIndicators>
			<md:DisplayIndicators>DD</md:DisplayIndicators>
			<md:Genre>Action</md:Genre>
			<md:Genre>Horror</md:Genre>
			<md:Keyword>StringKeyword</md:Keyword>
			<md:VersionNotes>String</md:VersionNotes>
			<md:Region>
				<md:country>AA</md:country>
			</md:Region>
			<md:Region>
				<md:country>US</md:country>
			</md:Region>
			<md:OriginalTitle>StringOriginalTitle</md:OriginalTitle>
			<md:CopyrightLine>StringCopyrightLine</md:CopyrightLine>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction scheme="string">4.36</md:JobFunction>
					<md:JobDisplay>Visual Effects Artist</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String1</md:Character>
					<md:Character>String122</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Name>
					<md:DisplayName>String</md:DisplayName>
					<md:SortName>String</md:SortName>
					<md:FirstGivenName>String</md:FirstGivenName>
					<md:SecondGivenName>String</md:SecondGivenName>
					<md:FamilyName>String</md:FamilyName>
					<md:Suffix>String</md:Suffix>
					<md:Moniker>String</md:Moniker>
				</md:Name>
				<md:Identifier>
					<md:Identifier>String1</md:Identifier>
					<md:Namespace>String1</md:Namespace>
					<md:ReferenceLocation>http://www.altova1.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Gender>male</md:Gender>
			</md:PeopleLocal>
		</md:LocalizedInfo>
		<md:RunLength>P1Y2M3DT10H30M0S</md:RunLength>
		<md:ReleaseYear>2001</md:ReleaseYear>
		<md:ReleaseDate>2010-08-13</md:ReleaseDate>
		<md:ReleaseHistory>
			<md:ReleaseType>PurpleRay</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">2010-08-13</md:Date>
			<md:Description>String324342342</md:Description>
			<md:ReleaseOrg organizationID="Stringggfsg">
				<md:DisplayName>Stringsgs</md:DisplayName>
				<md:SortName>Stringsdgsdf</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:ReleaseHistory>
			<md:ReleaseType>LightBlueRay</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">2010-08-13</md:Date>
			<md:Description>String5465464</md:Description>
			<md:ReleaseOrg organizationID="String456456">
				<md:DisplayName>String45645633</md:DisplayName>
				<md:SortName>String34534533</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:WorkType>Album</md:WorkType>
		<md:PictureColorType>color</md:PictureColorType>
		<md:PictureFormat>Letterbox</md:PictureFormat>
		<md:ThreeD>true</md:ThreeD>
		<md:AltIdentifier>
			<md:Namespace>String</md:Namespace>
			<md:Identifier>String</md:Identifier>
			<md:Location>http://www.altova.com</md:Location>
		</md:AltIdentifier>
		<md:AltIdentifier>
			<md:Namespace>String1221</md:Namespace>
			<md:Identifier>String1221</md:Identifier>
			<md:Location>http://www.altova122121.com</md:Location>
		</md:AltIdentifier>
		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>MPAA</md:System>
        			<md:Value>PG-13</md:Value>
        			<md:LinkToLogo>http://www.mpaa.org/_images/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet>
<!--		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>TVPG</md:System>
        			<md:Value>TV-Y7</md:Value>
        			<md:LinkToLogo>http://www.tvguidelines.org/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet> -->
<!--		<md:RatingSet>
			<md:NotRated>true</md:NotRated>
			<md:AdultContent>true</md:AdultContent>
		</md:RatingSet> -->
		<md:People>
			<md:Job>
				<md:JobFunction scheme="string">27.13</md:JobFunction>
				<md:JobDisplay>String55</md:JobDisplay>
				<md:BillingBlockOrder>55</md:BillingBlockOrder>
				<md:Character>String55</md:Character>
				<md:Character>String55222</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="string">28.2</md:JobFunction>
				<md:JobDisplay>String66</md:JobDisplay>
				<md:BillingBlockOrder>66</md:BillingBlockOrder>
				<md:Character>String66</md:Character>
				<md:Character>String62126</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String77</md:DisplayName>
				<md:SortName>String77</md:SortName>
				<md:FirstGivenName>String77</md:FirstGivenName>
				<md:SecondGivenName>String77</md:SecondGivenName>
				<md:FamilyName>String77</md:FamilyName>
				<md:Suffix>String77</md:Suffix>
				<md:Moniker>String77</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String88</md:Identifier>
				<md:Namespace>String</md:Namespace>
				<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:People>
			<md:Job>
				<md:JobFunction scheme="String">28</md:JobFunction>
				<md:JobDisplay>String99</md:JobDisplay>
				<md:BillingBlockOrder>99</md:BillingBlockOrder>
				<md:Character>String99</md:Character>
				<md:Character>Strindfsdffdg99</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="String">27.14</md:JobFunction>
				<md:JobDisplay>String111</md:JobDisplay>
				<md:BillingBlockOrder>111</md:BillingBlockOrder>
				<md:Character>String111</md:Character>
				<md:Character>String111wrwewewewe</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String222</md:DisplayName>
				<md:SortName>String222</md:SortName>
				<md:FirstGivenName>String222</md:FirstGivenName>
				<md:SecondGivenName>String222</md:SecondGivenName>
				<md:FamilyName>String222</md:FamilyName>
				<md:Suffix>String222</md:Suffix>
				<md:Moniker>String222</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String333</md:Identifier>
				<md:Namespace>String333</md:Namespace>
				<md:ReferenceLocation>http://www.altova333.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Identifier>
				<md:Identifier>String444</md:Identifier>
				<md:Namespace>String444</md:Namespace>
				<md:ReferenceLocation>http://www.altova444.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:CountryOfOrigin>
			<md:country>AA</md:country>
		</md:CountryOfOrigin>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:SequenceInfo>
			<md:Number>0</md:Number>
			<md:HouseSequence>String</md:HouseSequence>
		</md:SequenceInfo>
		<md:Parent relationshipType="ispieceof">
		<!--	<md:ParentContentID>urn:dece:cid:org:mystudio:0067</md:ParentContentID>-->
			<md:ParentContentID>urn:dece:cid:org:mystudio:0005</md:ParentContentID> 
		</md:Parent>
	</dece:BasicData>
	<dece:ResourceStatus>
		<dece:Current>
			<dece:Value>urn:dece:type:status:active</dece:Value>
			<dece:Description>2010-08-01T09:30:47.0Z</dece:Description>
		</dece:Current>
		<dece:History>
			<dece:Prior>
				<dece:Value>urn:dece:type:status:suspended</dece:Value>
				<dece:Description>temp suspension</dece:Description>
			</dece:Prior>
			<dece:Prior>
				<dece:Value>urn:dece:type:status:active</dece:Value>
				<dece:Description>active</dece:Description>
			</dece:Prior>
		</dece:History>
	</dece:ResourceStatus>
</dece:BasicAsset>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - MetadataBasicCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeGet");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Assert 1000 threshold Pagination"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus == 'HTTP/1.1 200 OK')
{
def response = context.expand( '${GET - MetadataBasicCreate#Response}' )
log.info response

def records = new XmlSlurper().parseText(response)
log.info records
def pagination=records.BasicData.LocalizedInfo.size()

if(pagination > 1000)
assert 1==2;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract The Response Header ETag"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - MetadataBasicCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String ETag = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "ETag": 
			ETag = value[0]; 
			break;
	}
}

tP.setPropertyValue("ETag", ETag);
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET - MetadataBasicCreate');
		def expXML = tStep.httpRequest.response.getResponseContent();
		
		String Cache_Control = null;
		String ETag = null;
		String Expires   = null;
		String Last_Modified = null;
		String x_Transaction_Info = null;
		String Vary=null;
		tStep.httpRequest.response.responseHeaders.each() {	 header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					}
		}

			tC.setPropertyValue("Cache-Control", Cache_Control);
			tC.setPropertyValue("ETag", ETag);
			tC.setPropertyValue("Expires", Expires);
			tC.setPropertyValue("Last-Modified", Last_Modified);
			tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
			tC.setPropertyValue("Vary", Vary);
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET - MetadataBasicCreate');
		def expXML = tStep.httpRequest.response.getResponseContent();
		String Vary=null;
		String Cache_Control = null;
		String ETag = null;
		//String Expires   = null;
		//String Last_Modified = null;
		String x_Transaction_Info = null;
		
		tStep.httpRequest.response.responseHeaders.each() { header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				/*case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;*/
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					
			}
		}
		
		tC.setPropertyValue("Cache-Control", Cache_Control);
		tC.setPropertyValue("ETag", ETag);
		//tC.setPropertyValue("Expires", Expires);
		//tC.setPropertyValue("Last-Modified", Last_Modified);
		tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
		tC.setPropertyValue("Vary", Vary);
	}


</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==null)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==null)
		assert 1==2
		
		def Expires=tC.getPropertyValue("Expires")
		if(Expires==null)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==null)
		assert 1==2
		
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==null)
		assert 1==2
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==false)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==false)
		assert 1==2
		
		/*def Expires=tC.getPropertyValue("Expires")
		if(Expires==false)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==false)
		assert 1==2
		*/
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==false)
		assert 1==2

		def Vary=tC.getPropertyValue("Vary")
		if(Vary==null)
		assert 1==2

	}</script></con:config></con:testStep><con:testStep type="groovy" name="Extract The Response Header Last Modified"><con:settings/><con:config><script>/*Extracting ETag from response and storing it in Project level Property*/
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - MetadataBasicCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String Last_Modified = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;
	}
}

tP.setPropertyValue("Last-Modified", Last_Modified);
	
}
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_10115_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicGET_MetadataBasicResourceStatusUpdate_If-Unmodified-Since_02_MetadataBasicListGET_If-Modified-Since_11_ 200 OK</con:value></con:property><con:property><con:name>sName</con:name><con:value>P0_Cache_TestCases_2015/02</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>113772713</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<BasicAsset xmlns="http://www.decellc.org/schema/2015/03/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <BasicData ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_113772713.txt">
      <ns2:UpdateNum>8</ns2:UpdateNum>
      <ns2:LocalizedInfo language="de" default="false">
         <ns2:TitleDisplay19>Die Schlümpfe</ns2:TitleDisplay19>
         <ns2:TitleDisplay60>Die Schlümpfe</ns2:TitleDisplay60>
         <ns2:TitleSort>Schlümpfe, Die</ns2:TitleSort>
         <ns2:ArtReference resolution="96x144">https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/0C33F7636DE77625E05305991F0AE1C6</ns2:ArtReference>
         <ns2:ArtReference resolution="112x160">https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/0C33F7636DE87625E05305991F0AE1C6</ns2:ArtReference>
         <ns2:ArtReference resolution="192x288">https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/0C33F7636DEC7625E05305991F0AE1C6</ns2:ArtReference>
         <ns2:ArtReference resolution="224x320">https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/0C33F7636DE97625E05305991F0AE1C6</ns2:ArtReference>
         <ns2:ArtReference resolution="800x1200">https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/0C33F7636DEA7625E05305991F0AE1C6</ns2:ArtReference>
         <ns2:ArtReference resolution="840x1200">https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/0C33F7636DEB7625E05305991F0AE1C6</ns2:ArtReference>
         <ns2:Summary190>Die Schlümpfe verlassen ihre magische Welt &amp; erobern den Großstadt-Dschungel New York.</ns2:Summary190>
         <ns2:Summary400>Die Schlümpfe verlassen ihre magische Welt &amp; erobern den Großstadt-Dschungel New York. Gejagt vom bösen Zauberer Gargamel müssen sie ein schlumpfiges Abenteuer bestehen.</ns2:Summary400>
         <ns2:Genre>Fantasy</ns2:Genre>
         <ns2:Genre>Comedy</ns2:Genre>
         <ns2:Genre>Animation</ns2:Genre>
         <ns2:Genre>Adventure</ns2:Genre>
         <ns2:Genre>Family</ns2:Genre>
         <ns2:VersionNotes>---</ns2:VersionNotes>
         <ns2:OriginalTitle>The Smurfs</ns2:OriginalTitle>
         <ns2:CopyrightLine>Sony</ns2:CopyrightLine>
      </ns2:LocalizedInfo>
      <ns2:LocalizedInfo language="en-US" default="true">
         <ns2:TitleDisplay19>A Beautiful Mind</ns2:TitleDisplay19>
         <ns2:TitleDisplay60>A Beautiful Mind</ns2:TitleDisplay60>
         <ns2:TitleSort>Smurfs, The</ns2:TitleSort>
         <ns2:ArtReference resolution="96x144">https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/0C33F7636DF47625E05305991F0AE1C6</ns2:ArtReference>
         <ns2:ArtReference resolution="112x160">https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/0C33F7636DF37625E05305991F0AE1C6</ns2:ArtReference>
         <ns2:ArtReference resolution="192x288">https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/0C33F7636DF67625E05305991F0AE1C6</ns2:ArtReference>
         <ns2:ArtReference resolution="224x320">https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/0C33F7636DF57625E05305991F0AE1C6</ns2:ArtReference>
         <ns2:ArtReference resolution="800x1200">https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/0C33F7636DF77625E05305991F0AE1C6</ns2:ArtReference>
         <ns2:ArtReference resolution="840x1200">https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/0C33F7636DF87625E05305991F0AE1C6</ns2:ArtReference>
         <ns2:Summary190>When the evil wizard Gargamel chases the tiny blue Smurfs out of their village, they tumble from their magical world and into ours.</ns2:Summary190>
         <ns2:Summary400>When the evil wizard Gargamel chases the tiny blue Smurfs out of their village, they tumble from their magical world and into ours -- in fact, smack dab in the middle of Central Park. Just three apples high and stuck in the Big Apple, the Smurfs must find a way to get back to their village before Gargamel tracks them down.</ns2:Summary400>
         <ns2:Genre>Animation</ns2:Genre>
         <ns2:Genre>Comedy</ns2:Genre>
         <ns2:Genre>Fantasy</ns2:Genre>
         <ns2:Genre>Family</ns2:Genre>
         <ns2:Genre>Adventure</ns2:Genre>
         <ns2:VersionNotes>---</ns2:VersionNotes>
         <ns2:OriginalTitle>The Smurfs</ns2:OriginalTitle>
         <ns2:CopyrightLine>Sony</ns2:CopyrightLine>
      </ns2:LocalizedInfo>
      <ns2:RunLength>PT1H43M0.000S</ns2:RunLength>
      <ns2:ReleaseYear>2010</ns2:ReleaseYear>
      <ns2:ReleaseDate>2011-07-28</ns2:ReleaseDate>
      <ns2:ReleaseHistory>
         <ns2:ReleaseType>Premiere</ns2:ReleaseType>
         <ns2:Date scheduled="false">2011-07-28T10:10:10Z</ns2:Date>
      </ns2:ReleaseHistory>
      <ns2:WorkType>Movie</ns2:WorkType>
      <ns2:RatingSet>
         <ns2:Rating>
            <ns2:Region>
               <ns2:country>US</ns2:country>
            </ns2:Region>
            <ns2:System>ALL</ns2:System>
            <ns2:Value>Exempt</ns2:Value>
         </ns2:Rating>
         <ns2:AdultContent>false</ns2:AdultContent>
      </ns2:RatingSet>
   </BasicData>
   <ResourceStatus>
      <Current CreationDate="2015-01-09T07:18:41.898Z" CreatedBy="urn:dece:org:org:dece:CON">
         <Value>urn:dece:type:status:active</Value>
      </Current>
   </ResourceStatus>
</BasicAsset>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1399</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_113772713.txt</con:value></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>UpdateNum</con:name><con:value>8</con:value></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1PC/CON_concat.pem</con:value></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Cache-Control</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">max-age=86400</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"0C3391C5A20236EBE05307991F0A88A1:ED5B094C"</con:value></con:property><con:property><con:name>Expires</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Sat, 10 Jan 2015 07:20:18 GMT</con:value></con:property><con:property><con:name>Last-Modified</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Fri, 09 Jan 2015 07:18:59 GMT</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">t=1420788018 VK@BLApNA50AAHsMjisAAABC urn:dece:org:org:dece:CON 10.31.173.1</con:value></con:property><con:property><con:name>Vary</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Accept-Encoding</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>3c0c931a-e669-4225-ab3e-833b21043b00</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DELETE - MetadataBasicCreate" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="e26d0b72-e15e-41a9-b8ac-8b4f19e042fb"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script RandomUpperLowerCase" disabled="true"><con:settings/><con:config><script>import generalUtils.generalUtils;

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();


myGeneralUtils = new generalUtils(log);

//x = "abcd:ef:ghij";
x=tC.getPropertyValue("randomUpperLowerURN");

y = myGeneralUtils.randomizeStringCase(x);

tC.setPropertyValue("randomUpperLowerURN_ReturnValue", y);

 log.info "randomUpperLowerURN_ReturnValue is " + tC.getPropertyValue("randomUpperLowerURN_ReturnValue");
 </script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("DELETE - MetadataBasicCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - MetadataBasicCreate"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" methodName="DELETE MetadataBasic" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - MetadataBasicCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value=" ${#Project#ETag}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<!-- Build 7.8.4.1 Test Sample XML file generated by XMLSpy v2008 sp1 (http://www.altova.com)--><dece:BasicAsset 
xsi:schemaLocation="http://www.decellc.org/schema/2010/10/dece Coordinator%20Interface%20Schema-v0171.xsd" 
xmlns:dece="http://www.decellc.org/schema/2011/08/coordinator" 
xmlns:md="http://www.movielabs.com/md" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<!--<dece:BasicData ContentID="urn:dece:cid:FILE:STOPANDGO.TXT">-->
<dece:BasicData ContentID="${#TestCase#CID}">
		<md:UpdateNum>${#TestCase#RandomNumberGenerated}</md:UpdateNum>
		<md:LocalizedInfo default="true" language="en-US">
			<md:TitleDisplay19>StrngTitleDis3nd</md:TitleDisplay19>
			<md:TitleDisplay60>StringTitleDisplay60</md:TitleDisplay60>
			<md:TitleSort>StringTitleSort</md:TitleSort>
			<md:ArtReference resolution="13002x13002">http://www.altova2.com</md:ArtReference>
			<md:Summary190 cast="true">StringSummary190_${#TestCase#RandomNumberGenerated}</md:Summary190>
			<md:Summary400 cast="true">StringSummary400_${#TestCase#RandomNumberGenerated}</md:Summary400>
			<md:Summary4000 cast="true">StringSummary4000_${#TestCase#RandomNumberGenerated}</md:Summary4000>
			<md:DisplayIndicators>CC</md:DisplayIndicators>
			<md:DisplayIndicators>DD</md:DisplayIndicators>
			<md:Genre>Action</md:Genre>
			<md:Genre>Horror</md:Genre>
			<md:Keyword>StringKeyword</md:Keyword>
			<md:VersionNotes>String</md:VersionNotes>
			<md:Region>
				<md:country>AA</md:country>
			</md:Region>
			<md:Region>
				<md:country>US</md:country>
			</md:Region>
			<md:OriginalTitle>StringOriginalTitle</md:OriginalTitle>
			<md:CopyrightLine>StringCopyrightLine</md:CopyrightLine>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction scheme="string">4.36</md:JobFunction>
					<md:JobDisplay>Visual Effects Artist</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String1</md:Character>
					<md:Character>String122</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Name>
					<md:DisplayName>String</md:DisplayName>
					<md:SortName>String</md:SortName>
					<md:FirstGivenName>String</md:FirstGivenName>
					<md:SecondGivenName>String</md:SecondGivenName>
					<md:FamilyName>String</md:FamilyName>
					<md:Suffix>String</md:Suffix>
					<md:Moniker>String</md:Moniker>
				</md:Name>
				<md:Identifier>
					<md:Identifier>String1</md:Identifier>
					<md:Namespace>String1</md:Namespace>
					<md:ReferenceLocation>http://www.altova1.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Gender>male</md:Gender>
			</md:PeopleLocal>
		</md:LocalizedInfo>
		<md:RunLength>P1Y2M3DT10H30M0S</md:RunLength>
		<md:ReleaseYear>2001</md:ReleaseYear>
		<md:ReleaseDate>2010-08-13</md:ReleaseDate>
		<md:ReleaseHistory>
			<md:ReleaseType>PurpleRay</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">2010-08-13</md:Date>
			<md:Description>String324342342</md:Description>
			<md:ReleaseOrg organizationID="Stringggfsg">
				<md:DisplayName>Stringsgs</md:DisplayName>
				<md:SortName>Stringsdgsdf</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:ReleaseHistory>
			<md:ReleaseType>LightBlueRay</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">2010-08-13</md:Date>
			<md:Description>String5465464</md:Description>
			<md:ReleaseOrg organizationID="String456456">
				<md:DisplayName>String45645633</md:DisplayName>
				<md:SortName>String34534533</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:WorkType>Album</md:WorkType>
		<md:PictureColorType>color</md:PictureColorType>
		<md:PictureFormat>Letterbox</md:PictureFormat>
		<md:ThreeD>true</md:ThreeD>
		<md:AltIdentifier>
			<md:Namespace>String</md:Namespace>
			<md:Identifier>String</md:Identifier>
			<md:Location>http://www.altova.com</md:Location>
		</md:AltIdentifier>
		<md:AltIdentifier>
			<md:Namespace>String1221</md:Namespace>
			<md:Identifier>String1221</md:Identifier>
			<md:Location>http://www.altova122121.com</md:Location>
		</md:AltIdentifier>
		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>MPAA</md:System>
        			<md:Value>PG-13</md:Value>
        			<md:LinkToLogo>http://www.mpaa.org/_images/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet>
<!--		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>TVPG</md:System>
        			<md:Value>TV-Y7</md:Value>
        			<md:LinkToLogo>http://www.tvguidelines.org/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet> -->
<!--		<md:RatingSet>
			<md:NotRated>true</md:NotRated>
			<md:AdultContent>true</md:AdultContent>
		</md:RatingSet> -->
		<md:People>
			<md:Job>
				<md:JobFunction scheme="string">27.13</md:JobFunction>
				<md:JobDisplay>String55</md:JobDisplay>
				<md:BillingBlockOrder>55</md:BillingBlockOrder>
				<md:Character>String55</md:Character>
				<md:Character>String55222</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="string">28.2</md:JobFunction>
				<md:JobDisplay>String66</md:JobDisplay>
				<md:BillingBlockOrder>66</md:BillingBlockOrder>
				<md:Character>String66</md:Character>
				<md:Character>String62126</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String77</md:DisplayName>
				<md:SortName>String77</md:SortName>
				<md:FirstGivenName>String77</md:FirstGivenName>
				<md:SecondGivenName>String77</md:SecondGivenName>
				<md:FamilyName>String77</md:FamilyName>
				<md:Suffix>String77</md:Suffix>
				<md:Moniker>String77</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String88</md:Identifier>
				<md:Namespace>String</md:Namespace>
				<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:People>
			<md:Job>
				<md:JobFunction scheme="String">28</md:JobFunction>
				<md:JobDisplay>String99</md:JobDisplay>
				<md:BillingBlockOrder>99</md:BillingBlockOrder>
				<md:Character>String99</md:Character>
				<md:Character>Strindfsdffdg99</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="String">27.14</md:JobFunction>
				<md:JobDisplay>String111</md:JobDisplay>
				<md:BillingBlockOrder>111</md:BillingBlockOrder>
				<md:Character>String111</md:Character>
				<md:Character>String111wrwewewewe</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String222</md:DisplayName>
				<md:SortName>String222</md:SortName>
				<md:FirstGivenName>String222</md:FirstGivenName>
				<md:SecondGivenName>String222</md:SecondGivenName>
				<md:FamilyName>String222</md:FamilyName>
				<md:Suffix>String222</md:Suffix>
				<md:Moniker>String222</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String333</md:Identifier>
				<md:Namespace>String333</md:Namespace>
				<md:ReferenceLocation>http://www.altova333.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Identifier>
				<md:Identifier>String444</md:Identifier>
				<md:Namespace>String444</md:Namespace>
				<md:ReferenceLocation>http://www.altova444.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:CountryOfOrigin>
			<md:country>AA</md:country>
		</md:CountryOfOrigin>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:SequenceInfo>
			<md:Number>0</md:Number>
			<md:HouseSequence>String</md:HouseSequence>
		</md:SequenceInfo>
		<md:Parent relationshipType="ispieceof">
		<!--	<md:ParentContentID>urn:dece:cid:org:mystudio:0067</md:ParentContentID>-->
			<md:ParentContentID>urn:dece:cid:org:mystudio:0005</md:ParentContentID> 
		</md:Parent>
	</dece:BasicData>
	<dece:ResourceStatus>
		<dece:Current>
			<dece:Value>urn:dece:type:status:active</dece:Value>
			<dece:Description>2010-08-01T09:30:47.0Z</dece:Description>
		</dece:Current>
		<dece:History>
			<dece:Prior>
				<dece:Value>urn:dece:type:status:suspended</dece:Value>
				<dece:Description>temp suspension</dece:Description>
			</dece:Prior>
			<dece:Prior>
				<dece:Value>urn:dece:type:status:active</dece:Value>
				<dece:Description>active</dece:Description>
			</dece:Prior>
		</dece:History>
	</dece:ResourceStatus>
</dece:BasicAsset>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('DELETE - MetadataBasicCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeDelete");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_10111_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicGET_MetadataBasicUpdate_If-Match_02_MetadataBasicListGET_If-None-Match_11_200 OK</con:value></con:property><con:property><con:name>sName</con:name><con:value>P0_Cache_TestCases_2015/02</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>947580537</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">MdBasic Delete Request has Processed Successfully</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>text/plain;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">66</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_947580537.txt</con:value></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1PC/CON_concat.pem</con:value></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DELETE - MetadataBasicCreate_If-Unmodified-Since" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="dcd733d9-367a-4b8c-82f6-bcdc12f7bd3d"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script RandomUpperLowerCase" disabled="true"><con:settings/><con:config><script>import generalUtils.generalUtils;

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();


myGeneralUtils = new generalUtils(log);

//x = "abcd:ef:ghij";
x=tC.getPropertyValue("randomUpperLowerURN");

y = myGeneralUtils.randomizeStringCase(x);

tC.setPropertyValue("randomUpperLowerURN_ReturnValue", y);

 log.info "randomUpperLowerURN_ReturnValue is " + tC.getPropertyValue("randomUpperLowerURN_ReturnValue");
 </script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("DELETE - MetadataBasicCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - MetadataBasicCreate"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" methodName="DELETE MetadataBasic" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - MetadataBasicCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Unmodified-Since" value=" ${#Project#Last-Modified}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<!-- Build 7.8.4.1 Test Sample XML file generated by XMLSpy v2008 sp1 (http://www.altova.com)--><dece:BasicAsset 
xsi:schemaLocation="http://www.decellc.org/schema/2010/10/dece Coordinator%20Interface%20Schema-v0171.xsd" 
xmlns:dece="http://www.decellc.org/schema/2011/08/coordinator" 
xmlns:md="http://www.movielabs.com/md" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<!--<dece:BasicData ContentID="urn:dece:cid:FILE:STOPANDGO.TXT">-->
<dece:BasicData ContentID="${#TestCase#CID}">
		<md:UpdateNum>${#TestCase#RandomNumberGenerated}</md:UpdateNum>
		<md:LocalizedInfo default="true" language="en-US">
			<md:TitleDisplay19>StrngTitleDis3nd</md:TitleDisplay19>
			<md:TitleDisplay60>StringTitleDisplay60</md:TitleDisplay60>
			<md:TitleSort>StringTitleSort</md:TitleSort>
			<md:ArtReference resolution="13002x13002">http://www.altova2.com</md:ArtReference>
			<md:Summary190 cast="true">StringSummary190_${#TestCase#RandomNumberGenerated}</md:Summary190>
			<md:Summary400 cast="true">StringSummary400_${#TestCase#RandomNumberGenerated}</md:Summary400>
			<md:Summary4000 cast="true">StringSummary4000_${#TestCase#RandomNumberGenerated}</md:Summary4000>
			<md:DisplayIndicators>CC</md:DisplayIndicators>
			<md:DisplayIndicators>DD</md:DisplayIndicators>
			<md:Genre>Action</md:Genre>
			<md:Genre>Horror</md:Genre>
			<md:Keyword>StringKeyword</md:Keyword>
			<md:VersionNotes>String</md:VersionNotes>
			<md:Region>
				<md:country>AA</md:country>
			</md:Region>
			<md:Region>
				<md:country>US</md:country>
			</md:Region>
			<md:OriginalTitle>StringOriginalTitle</md:OriginalTitle>
			<md:CopyrightLine>StringCopyrightLine</md:CopyrightLine>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction scheme="string">4.36</md:JobFunction>
					<md:JobDisplay>Visual Effects Artist</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String1</md:Character>
					<md:Character>String122</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Name>
					<md:DisplayName>String</md:DisplayName>
					<md:SortName>String</md:SortName>
					<md:FirstGivenName>String</md:FirstGivenName>
					<md:SecondGivenName>String</md:SecondGivenName>
					<md:FamilyName>String</md:FamilyName>
					<md:Suffix>String</md:Suffix>
					<md:Moniker>String</md:Moniker>
				</md:Name>
				<md:Identifier>
					<md:Identifier>String1</md:Identifier>
					<md:Namespace>String1</md:Namespace>
					<md:ReferenceLocation>http://www.altova1.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Gender>male</md:Gender>
			</md:PeopleLocal>
		</md:LocalizedInfo>
		<md:RunLength>P1Y2M3DT10H30M0S</md:RunLength>
		<md:ReleaseYear>2001</md:ReleaseYear>
		<md:ReleaseDate>2010-08-13</md:ReleaseDate>
		<md:ReleaseHistory>
			<md:ReleaseType>PurpleRay</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">2010-08-13</md:Date>
			<md:Description>String324342342</md:Description>
			<md:ReleaseOrg organizationID="Stringggfsg">
				<md:DisplayName>Stringsgs</md:DisplayName>
				<md:SortName>Stringsdgsdf</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:ReleaseHistory>
			<md:ReleaseType>LightBlueRay</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">2010-08-13</md:Date>
			<md:Description>String5465464</md:Description>
			<md:ReleaseOrg organizationID="String456456">
				<md:DisplayName>String45645633</md:DisplayName>
				<md:SortName>String34534533</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:WorkType>Album</md:WorkType>
		<md:PictureColorType>color</md:PictureColorType>
		<md:PictureFormat>Letterbox</md:PictureFormat>
		<md:ThreeD>true</md:ThreeD>
		<md:AltIdentifier>
			<md:Namespace>String</md:Namespace>
			<md:Identifier>String</md:Identifier>
			<md:Location>http://www.altova.com</md:Location>
		</md:AltIdentifier>
		<md:AltIdentifier>
			<md:Namespace>String1221</md:Namespace>
			<md:Identifier>String1221</md:Identifier>
			<md:Location>http://www.altova122121.com</md:Location>
		</md:AltIdentifier>
		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>MPAA</md:System>
        			<md:Value>PG-13</md:Value>
        			<md:LinkToLogo>http://www.mpaa.org/_images/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet>
<!--		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>TVPG</md:System>
        			<md:Value>TV-Y7</md:Value>
        			<md:LinkToLogo>http://www.tvguidelines.org/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet> -->
<!--		<md:RatingSet>
			<md:NotRated>true</md:NotRated>
			<md:AdultContent>true</md:AdultContent>
		</md:RatingSet> -->
		<md:People>
			<md:Job>
				<md:JobFunction scheme="string">27.13</md:JobFunction>
				<md:JobDisplay>String55</md:JobDisplay>
				<md:BillingBlockOrder>55</md:BillingBlockOrder>
				<md:Character>String55</md:Character>
				<md:Character>String55222</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="string">28.2</md:JobFunction>
				<md:JobDisplay>String66</md:JobDisplay>
				<md:BillingBlockOrder>66</md:BillingBlockOrder>
				<md:Character>String66</md:Character>
				<md:Character>String62126</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String77</md:DisplayName>
				<md:SortName>String77</md:SortName>
				<md:FirstGivenName>String77</md:FirstGivenName>
				<md:SecondGivenName>String77</md:SecondGivenName>
				<md:FamilyName>String77</md:FamilyName>
				<md:Suffix>String77</md:Suffix>
				<md:Moniker>String77</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String88</md:Identifier>
				<md:Namespace>String</md:Namespace>
				<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:People>
			<md:Job>
				<md:JobFunction scheme="String">28</md:JobFunction>
				<md:JobDisplay>String99</md:JobDisplay>
				<md:BillingBlockOrder>99</md:BillingBlockOrder>
				<md:Character>String99</md:Character>
				<md:Character>Strindfsdffdg99</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="String">27.14</md:JobFunction>
				<md:JobDisplay>String111</md:JobDisplay>
				<md:BillingBlockOrder>111</md:BillingBlockOrder>
				<md:Character>String111</md:Character>
				<md:Character>String111wrwewewewe</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String222</md:DisplayName>
				<md:SortName>String222</md:SortName>
				<md:FirstGivenName>String222</md:FirstGivenName>
				<md:SecondGivenName>String222</md:SecondGivenName>
				<md:FamilyName>String222</md:FamilyName>
				<md:Suffix>String222</md:Suffix>
				<md:Moniker>String222</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String333</md:Identifier>
				<md:Namespace>String333</md:Namespace>
				<md:ReferenceLocation>http://www.altova333.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Identifier>
				<md:Identifier>String444</md:Identifier>
				<md:Namespace>String444</md:Namespace>
				<md:ReferenceLocation>http://www.altova444.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:CountryOfOrigin>
			<md:country>AA</md:country>
		</md:CountryOfOrigin>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:SequenceInfo>
			<md:Number>0</md:Number>
			<md:HouseSequence>String</md:HouseSequence>
		</md:SequenceInfo>
		<md:Parent relationshipType="ispieceof">
		<!--	<md:ParentContentID>urn:dece:cid:org:mystudio:0067</md:ParentContentID>-->
			<md:ParentContentID>urn:dece:cid:org:mystudio:0005</md:ParentContentID> 
		</md:Parent>
	</dece:BasicData>
	<dece:ResourceStatus>
		<dece:Current>
			<dece:Value>urn:dece:type:status:active</dece:Value>
			<dece:Description>2010-08-01T09:30:47.0Z</dece:Description>
		</dece:Current>
		<dece:History>
			<dece:Prior>
				<dece:Value>urn:dece:type:status:suspended</dece:Value>
				<dece:Description>temp suspension</dece:Description>
			</dece:Prior>
			<dece:Prior>
				<dece:Value>urn:dece:type:status:active</dece:Value>
				<dece:Description>active</dece:Description>
			</dece:Prior>
		</dece:History>
	</dece:ResourceStatus>
</dece:BasicAsset>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('DELETE - MetadataBasicCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeDelete");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_10018_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicGET_MetadataBasicDelete_If-Unmodified-Since_MetadataBasicListGET_If-Modified-Since_404 Not Found</con:value></con:property><con:property><con:name>sName</con:name><con:value>P0_Cache_TestCases_2015/02</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>821719983</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">MdBasic Delete Request has Processed Successfully</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>text/plain;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">66</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_821719983.txt</con:value></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1PC/CON_concat.pem</con:value></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Copy of POST - MetadataBasicCreate" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tP.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));

/*
*  Mapping this call only to a retailer node.
*/
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("CREATE - MetadataBasicCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="CREATE - MetadataBasicCreate"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" methodName="POST MetadataBasic" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CREATE - MetadataBasicCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="2222_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<dece:BasicAsset xsi:schemaLocation="http://www.decellc.org/schema/2011/08/coordinator Coordinator-1.0r1.xsd" xmlns:dece="http://www.decellc.org/schema/2011/08/coordinator" xmlns:md="http://www.movielabs.com/schema/md/v1.07/md" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<dece:BasicData ContentID="urn:dece:cid:org:universal:611154561">
		<md:UpdateNum>2</md:UpdateNum>
		<md:LocalizedInfo default="true" language="en">
			<md:TitleDisplay19><![CDATA[Cowboys & Aliens]]]]>><![CDATA[</md:TitleDisplay19>
			<md:TitleDisplay60><![CDATA[Cowboys & Aliens]]]]>><![CDATA[</md:TitleDisplay60>
			<md:TitleSort><![CDATA[Cowboys & Aliens]]]]>><![CDATA[</md:TitleSort>
			<md:ArtReference resolution="117x176">https://www.universal.com</md:ArtReference>
			<md:Summary190 cast="true"><![CDATA[From the director of Iron Man and starring Daniel Craig and Harrison Ford, an unlikely posse rises against a force from beyond this world in an epic showdown for survival.]]]]>><![CDATA[</md:Summary190>
			<md:Summary400 cast="true"><![CDATA[From the director of Iron Man and starring Daniel Craig and Harrison Ford, an unlikely posse rises against a force from beyond this world in an epic showdown for survival.]]]]>><![CDATA[</md:Summary400>
			<md:Summary4000 cast="true"><![CDATA[Daniel Craig and Harrison Ford star in this action-packed sci-fi western from the director of Iron Man (Jon Favreau) that critics call “wickedly original, unlike anything you’ve ever seen” (Jake Hamilton, Fox-TV Houston, TX).  A stranger (Craig) stumbles into the desert town of Absolution with no memory of his past and a futuristic shackle around his wrist. With the help of mysterious beauty Ella (Olivia Wilde) and the iron-fisted Colonel Dolarhyde (Ford), he finds himself leading an unlikely posse of cowboys, outlaws, and Apache warriors against a common enemy from beyond this world in an epic showdown for survival.]]]]>><![CDATA[</md:Summary4000>
			<md:Genre><![CDATA[Action]]]]>><![CDATA[</md:Genre>
			<md:Genre><![CDATA[Thriller]]]]>><![CDATA[</md:Genre>
			<md:Genre><![CDATA[Western]]]]>><![CDATA[</md:Genre>
			<md:Genre><![CDATA[Sci-Fi]]]]>><![CDATA[</md:Genre>
			<md:OriginalTitle><![CDATA[Cowboys & Aliens]]]]>><![CDATA[</md:OriginalTitle>
			<md:CopyrightLine>© 2011 Universal Studios. All Rights Reserved.</md:CopyrightLine>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Jake Lonergan</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Daniel Craig</md:DisplayName>
					<md:SortName>Craig, Daniel</md:SortName>
					<md:FirstGivenName>Daniel</md:FirstGivenName>
					<md:FamilyName>Craig</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Woodrow Dolarhyde</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Harrison Ford</md:DisplayName>
					<md:SortName>Ford, Harrison</md:SortName>
					<md:FirstGivenName>Harrison</md:FirstGivenName>
					<md:FamilyName>Ford</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Ella Swenson</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Olivia Wilde</md:DisplayName>
					<md:SortName>Wilde, Olivia</md:SortName>
					<md:FirstGivenName>Olivia</md:FirstGivenName>
					<md:FamilyName>Wilde</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Doc</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Sam Rockwell</md:DisplayName>
					<md:SortName>Rockwell, Sam</md:SortName>
					<md:FirstGivenName>Sam</md:FirstGivenName>
					<md:FamilyName>Rockwell</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Nat Colorado</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Adam Beach</md:DisplayName>
					<md:SortName>Beach, Adam</md:SortName>
					<md:FirstGivenName>Adam</md:FirstGivenName>
					<md:FamilyName>Beach</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Percy Dolarhyde</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Paul Dano</md:DisplayName>
					<md:SortName>Dano, Paul</md:SortName>
					<md:FirstGivenName>Paul</md:FirstGivenName>
					<md:FamilyName>Dano</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Emmett Taggart</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Noah Ringer</md:DisplayName>
					<md:SortName>Ringer, Noah</md:SortName>
					<md:FirstGivenName>Noah</md:FirstGivenName>
					<md:FamilyName>Ringer</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Sheriff John Taggart</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Keith Carradine</md:DisplayName>
					<md:SortName>Carradine, Keith</md:SortName>
					<md:FirstGivenName>Keith</md:FirstGivenName>
					<md:FamilyName>Carradine</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Meacham</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Clancy Brown</md:DisplayName>
					<md:SortName>Brown, Clancy</md:SortName>
					<md:FirstGivenName>Clancy</md:FirstGivenName>
					<md:FamilyName>Brown</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Maria</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Ana de la Reguera</md:DisplayName>
					<md:SortName>de la Reguera, Ana</md:SortName>
					<md:FirstGivenName>Ana</md:FirstGivenName>
					<md:FamilyName>de la Reguera</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Director</md:JobFunction>
					<md:JobDisplay>Director</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Jon Favreau</md:DisplayName>
					<md:SortName>Favreau, Jon</md:SortName>
					<md:FirstGivenName>Jon</md:FirstGivenName>
					<md:FamilyName>Favreau</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Producer</md:JobFunction>
					<md:JobDisplay>Producer</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Brian Grazer</md:DisplayName>
					<md:SortName>Grazer, Brian</md:SortName>
					<md:FirstGivenName>Brian</md:FirstGivenName>
					<md:FamilyName>Grazer</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Producer</md:JobFunction>
					<md:JobDisplay>Producer</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Ron Howard</md:DisplayName>
					<md:SortName>Howard, Ron</md:SortName>
					<md:FirstGivenName>Ron</md:FirstGivenName>
					<md:FamilyName>Howard</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Producer</md:JobFunction>
					<md:JobDisplay>Producer</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Scott Mitchell Rosenberg</md:DisplayName>
					<md:SortName>Rosenberg, Scott Mitchell</md:SortName>
					<md:FirstGivenName>Scott Mitchell</md:FirstGivenName>
					<md:FamilyName>Rosenberg</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Producer</md:JobFunction>
					<md:JobDisplay>Producer</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Alex Kurtzman</md:DisplayName>
					<md:SortName>Kurtzman, Alex</md:SortName>
					<md:FirstGivenName>Alex</md:FirstGivenName>
					<md:FamilyName>Kurtzman</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Producer</md:JobFunction>
					<md:JobDisplay>Producer</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Roberto Orci</md:DisplayName>
					<md:SortName>Orci, Roberto</md:SortName>
					<md:FirstGivenName>Roberto</md:FirstGivenName>
					<md:FamilyName>Orci</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Screenwriter</md:JobFunction>
					<md:JobDisplay>Screenwriter</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Alex Kurtzman</md:DisplayName>
					<md:SortName>Kurtzman, Alex</md:SortName>
					<md:FirstGivenName>Alex</md:FirstGivenName>
					<md:FamilyName>Kurtzman</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Screenwriter</md:JobFunction>
					<md:JobDisplay>Screenwriter</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Roberto Orci</md:DisplayName>
					<md:SortName>Orci, Roberto</md:SortName>
					<md:FirstGivenName>Roberto</md:FirstGivenName>
					<md:FamilyName>Orci</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Screenwriter</md:JobFunction>
					<md:JobDisplay>Screenwriter</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Damon Lindelof</md:DisplayName>
					<md:SortName>Lindelof, Damon</md:SortName>
					<md:FirstGivenName>Damon</md:FirstGivenName>
					<md:FamilyName>Lindelof</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction>Based on Work of</md:JobFunction>
					<md:JobDisplay>Based on Work of</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Scott Mitchell Rosenberg</md:DisplayName>
					<md:SortName>Rosenberg, Scott Mitchell</md:SortName>
					<md:FirstGivenName>Scott Mitchell</md:FirstGivenName>
					<md:FamilyName>Rosenberg</md:FamilyName>
				</md:Name>
			</md:PeopleLocal>
		</md:LocalizedInfo>
		<md:RunLength>PT119M</md:RunLength>
		<md:ReleaseYear>2011</md:ReleaseYear>
		<md:ReleaseDate>2011-07-29</md:ReleaseDate>
		<md:WorkType>Feature Film</md:WorkType>
		<md:PictureColorType>color</md:PictureColorType>
		<md:PictureFormat>LetterBox</md:PictureFormat>
		<md:AltIdentifier>
			<md:Namespace>UniversalHiDef</md:Namespace>
			<md:Identifier>urn:universal:vendorid:61115456</md:Identifier>
			<md:Location>http://www.universalhidef.com</md:Location>
		</md:AltIdentifier>
		<md:RatingSet>
			<md:Rating>
				<md:Region>
					<md:country>US</md:country>
				</md:Region>
				<md:System>MPAA</md:System>
				<md:Value>PG-13</md:Value>
			</md:Rating>
		</md:RatingSet>
			<md:People>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Jake Lonergan</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Daniel Craig</md:DisplayName>
					<md:SortName>Craig, Daniel</md:SortName>
					<md:FirstGivenName>Daniel</md:FirstGivenName>
					<md:FamilyName>Craig</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Woodrow Dolarhyde</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Harrison Ford</md:DisplayName>
					<md:SortName>Ford, Harrison</md:SortName>
					<md:FirstGivenName>Harrison</md:FirstGivenName>
					<md:FamilyName>Ford</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Ella Swenson</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Olivia Wilde</md:DisplayName>
					<md:SortName>Wilde, Olivia</md:SortName>
					<md:FirstGivenName>Olivia</md:FirstGivenName>
					<md:FamilyName>Wilde</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Doc</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Sam Rockwell</md:DisplayName>
					<md:SortName>Rockwell, Sam</md:SortName>
					<md:FirstGivenName>Sam</md:FirstGivenName>
					<md:FamilyName>Rockwell</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Nat Colorado</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Adam Beach</md:DisplayName>
					<md:SortName>Beach, Adam</md:SortName>
					<md:FirstGivenName>Adam</md:FirstGivenName>
					<md:FamilyName>Beach</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Percy Dolarhyde</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Paul Dano</md:DisplayName>
					<md:SortName>Dano, Paul</md:SortName>
					<md:FirstGivenName>Paul</md:FirstGivenName>
					<md:FamilyName>Dano</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Emmett Taggart</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Noah Ringer</md:DisplayName>
					<md:SortName>Ringer, Noah</md:SortName>
					<md:FirstGivenName>Noah</md:FirstGivenName>
					<md:FamilyName>Ringer</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Sheriff John Taggart</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Keith Carradine</md:DisplayName>
					<md:SortName>Carradine, Keith</md:SortName>
					<md:FirstGivenName>Keith</md:FirstGivenName>
					<md:FamilyName>Carradine</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Meacham</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Clancy Brown</md:DisplayName>
					<md:SortName>Brown, Clancy</md:SortName>
					<md:FirstGivenName>Clancy</md:FirstGivenName>
					<md:FamilyName>Brown</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Actor</md:JobFunction>
					<md:Character>Maria</md:Character>
				</md:Job>
				<md:Name>
					<md:DisplayName>Ana de la Reguera</md:DisplayName>
					<md:SortName>de la Reguera, Ana</md:SortName>
					<md:FirstGivenName>Ana</md:FirstGivenName>
					<md:FamilyName>de la Reguera</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Director</md:JobFunction>
					<md:JobDisplay>Director</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Jon Favreau</md:DisplayName>
					<md:SortName>Favreau, Jon</md:SortName>
					<md:FirstGivenName>Jon</md:FirstGivenName>
					<md:FamilyName>Favreau</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Producer</md:JobFunction>
					<md:JobDisplay>Producer</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Brian Grazer</md:DisplayName>
					<md:SortName>Grazer, Brian</md:SortName>
					<md:FirstGivenName>Brian</md:FirstGivenName>
					<md:FamilyName>Grazer</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Producer</md:JobFunction>
					<md:JobDisplay>Producer</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Ron Howard</md:DisplayName>
					<md:SortName>Howard, Ron</md:SortName>
					<md:FirstGivenName>Ron</md:FirstGivenName>
					<md:FamilyName>Howard</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Producer</md:JobFunction>
					<md:JobDisplay>Producer</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Scott Mitchell Rosenberg</md:DisplayName>
					<md:SortName>Rosenberg, Scott Mitchell</md:SortName>
					<md:FirstGivenName>Scott Mitchell</md:FirstGivenName>
					<md:FamilyName>Rosenberg</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Producer</md:JobFunction>
					<md:JobDisplay>Producer</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Alex Kurtzman</md:DisplayName>
					<md:SortName>Kurtzman, Alex</md:SortName>
					<md:FirstGivenName>Alex</md:FirstGivenName>
					<md:FamilyName>Kurtzman</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Producer</md:JobFunction>
					<md:JobDisplay>Producer</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Roberto Orci</md:DisplayName>
					<md:SortName>Orci, Roberto</md:SortName>
					<md:FirstGivenName>Roberto</md:FirstGivenName>
					<md:FamilyName>Orci</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Screenwriter</md:JobFunction>
					<md:JobDisplay>Screenwriter</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Alex Kurtzman</md:DisplayName>
					<md:SortName>Kurtzman, Alex</md:SortName>
					<md:FirstGivenName>Alex</md:FirstGivenName>
					<md:FamilyName>Kurtzman</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Screenwriter</md:JobFunction>
					<md:JobDisplay>Screenwriter</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Roberto Orci</md:DisplayName>
					<md:SortName>Orci, Roberto</md:SortName>
					<md:FirstGivenName>Roberto</md:FirstGivenName>
					<md:FamilyName>Orci</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Screenwriter</md:JobFunction>
					<md:JobDisplay>Screenwriter</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Damon Lindelof</md:DisplayName>
					<md:SortName>Lindelof, Damon</md:SortName>
					<md:FirstGivenName>Damon</md:FirstGivenName>
					<md:FamilyName>Lindelof</md:FamilyName>
				</md:Name>
			</md:People>
			<md:People>
				<md:Job>
					<md:JobFunction>Based on Work of</md:JobFunction>
					<md:JobDisplay>Based on Work of</md:JobDisplay>
				</md:Job>
				<md:Name>
					<md:DisplayName>Scott Mitchell Rosenberg</md:DisplayName>
					<md:SortName>Rosenberg, Scott Mitchell</md:SortName>
					<md:FirstGivenName>Scott Mitchell</md:FirstGivenName>
					<md:FamilyName>Rosenberg</md:FamilyName>
				</md:Name>
			</md:People>
		<md:CountryOfOrigin>
			<md:country>US</md:country>
		</md:CountryOfOrigin>
	</dece:BasicData>
</dece:BasicAsset>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('CREATE - MetadataBasicCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>Copy of TC_DECE_00100_MetadataBasicCreate_FUNC_CTP_Invocation_with_method_POST_CID_is_New_ORG_Format</con:value></con:property><con:property><con:name>sName</con:name><con:value>MetadataBasicCreate_ContentProvider</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>46236</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>202</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2011/08/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.07/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:MdBasicMetadataAlreadyExist">
      <Reason Language="en">The basic metadata already exists.</Reason>
      <OriginalRequest>https://qa.p.uvvu.com:7001/rest/1/02/Asset/Metadata/Basic/</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/02/error/en/ErrorList.html#MdBasicMetadataAlreadyExist</ErrorLink>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 409 Conflict</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>673</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:org:ALSTUDIO:Version${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:org:ALSTUDIO:Version${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\\DECE\\2222_concat.pem</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GET-MetadataBasicList" searchProperties="true" id="e25c135e-ee91-4bcb-b67a-39bf6166ed36"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET-MetadataBasicList");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET-MetadataBasicList"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET-MetadataBasicList" mediaType="application/xml" sslKeystore="CON_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET-MetadataBasicList');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
		/*case "ETag": 
			ETag = value[0]; 
			break;*/

	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
//tP.setPropertyValue("ETag", ETag);</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeGet");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Assertion for threshold Pagination"><con:settings/><con:config><script>/*checking in response the GetList contains maximum  values 1000 */
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def response = context.expand( '${GET-MetadataBasicList#Response#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]}' )

log.info response.size()

def filtercount = context.expand( '${GET-MetadataBasicList#Response#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]/@FilterCount}' )


log.info filtercount

def responseAsXml = context.expand( '${GET-MetadataBasicList#ResponseAsXml#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]/ns1:BasicAssetReference[1]}' )

def records = new XmlParser().parseText(response);
log.info records.value().size()

if(records.value().size().toString()!= filtercount.toString())
{
	assert 1==2;
}
}</script></con:config></con:testStep><con:testStep type="groovy" name="Extract The Response Header ETag"><con:settings/><con:config><script>/*Extracting ETag from response and storing it in Project level Property*/
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET-MetadataBasicList');
def expXML = tStep.httpRequest.response.getResponseContent();

String ETag = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "ETag": 
			ETag = value[0]; 
			break;
	}
}

tP.setPropertyValue("ETag", ETag);
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Assertion For  Order of dates"><con:settings/><con:config><script>/*Asserting weather the updated dates in the GetList response are in descending order */

def httpStatus = context.expand( '${#TestCase#httpStatus}' )
if(httpStatus=='HTTP/1.1 200 OK')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def response = context.expand( '${GET-MetadataBasicList#Response#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]}' )




log.info response
def possiblySorted = []
def records = new XmlParser().parseText(response);
log.info records

for(int i=0;i&lt;=records.BasicAssetReference.size()-1;i++){
//log.info records.DigitalAssetReference[i].@UpdatedDate;
if(records.BasicAssetReference[i].@UpdatedDate==null)
	possiblySorted.add(records.BasicAssetReference[i].@CreatedDate);
else
	possiblySorted.add(records.BasicAssetReference[i].@UpdatedDate);

}

log.info possiblySorted;
def sortedCopy = new ArrayList&lt;>(possiblySorted)
log.info sortedCopy.sort().reverse();
if( possiblySorted != sortedCopy.sort().reverse())
{
assert 1==2
}
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET-MetadataBasicList');
		def expXML = tStep.httpRequest.response.getResponseContent();
		
		String Cache_Control = null;
		String ETag = null;
		String Expires   = null;
		String Last_Modified = null;
		String x_Transaction_Info = null;
		String Vary=null;
		tStep.httpRequest.response.responseHeaders.each() {	 header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					}
		}

			tC.setPropertyValue("Cache-Control", Cache_Control);
			tC.setPropertyValue("ETag", ETag);
			tC.setPropertyValue("Expires", Expires);
			tC.setPropertyValue("Last-Modified", Last_Modified);
			tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
			tC.setPropertyValue("Vary", Vary);
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET-MetadataBasicList');
		def expXML = tStep.httpRequest.response.getResponseContent();
		String Vary=null;
		String Cache_Control = null;
		String ETag = null;
		//String Expires   = null;
		//String Last_Modified = null;
		String x_Transaction_Info = null;
		
		tStep.httpRequest.response.responseHeaders.each() { header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				/*case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;*/
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					
			}
		}
		
		tC.setPropertyValue("Cache-Control", Cache_Control);
		tC.setPropertyValue("ETag", ETag);
		//tC.setPropertyValue("Expires", Expires);
		//tC.setPropertyValue("Last-Modified", Last_Modified);
		tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
		tC.setPropertyValue("Vary", Vary);
	}


</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==null)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==null)
		assert 1==2
		
		def Expires=tC.getPropertyValue("Expires")
		if(Expires==null)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==null)
		assert 1==2
		
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==null)
		assert 1==2
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==false)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==false)
		assert 1==2
		
		/*def Expires=tC.getPropertyValue("Expires")
		if(Expires==false)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==false)
		assert 1==2
		*/
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==false)
		assert 1==2

		def Vary=tC.getPropertyValue("Vary")
		if(Vary==null)
		assert 1==2

	}</script></con:config></con:testStep><con:testStep type="groovy" name="Extract The Response Header Last Modified"><con:settings/><con:config><script>/*Extracting ETag from response and storing it in Project level Property*/
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET-MetadataBasicList');
def expXML = tStep.httpRequest.response.getResponseContent();

String Last_Modified = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;
	}
}

tP.setPropertyValue("Last-Modified", Last_Modified);
	
}
</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>TC_DECE_10115_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicGET_MetadataBasicResourceStatusUpdate_If-Unmodified-Since_02_MetadataBasicListGET_If-Modified-Since_11_ 200 OK</con:value></con:property><con:property><con:name>sName</con:name><con:value>P0_Cache_TestCases_2015/02</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_467575546.txt</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>467575546</con:value></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1PC/CON_concat.pem</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<BasicAssetList FilterClass="urn:dece:type:viewfilter:lastmodifieddate" FilterOffset="0" FilterCount="1000" FilterMoreAvailable="true" xmlns="http://www.decellc.org/schema/2015/03/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_857479217.txt" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2015-01-09T07:06:45.285Z" UpdatedDate="2015-01-09T07:08:32.657Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_949452857.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T07:01:27.236Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_684362345.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:59:04.385Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_596845087.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:59:01.511Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:994897347" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:57:51.985Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_994897347.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:57:51.985Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:750346948" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:56:37.471Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ISMN:979-0-750346948-0043-9" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:56:37.471Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:277713362" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:55:23.517Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ISMN:979-0-277713362-0043-9" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:55:23.517Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:44559" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:54:06.932Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:466665045" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:52:46.793Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:780085567" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:51:29.372Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:797005626" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:50:22.527Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:WEB_PORTAL_NUMBERS_797005626.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:50:22.527Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:208919447" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:50:18.092Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_208919447.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:50:18.092Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:466086424" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:47:56.146Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:944817298" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:46:39.893Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:181699345" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:45:20.592Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:860996004" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:44:03.341Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:990399797" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:42:47.740Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:402154210" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:41:34.883Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:720111780" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:40:20.378Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_793484911.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:40:14.773Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_195742732.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:40:12.029Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:912225760" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:39:06.077Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:182602184" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:39:03.442Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_182602184.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:39:03.442Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:267445897" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:37:53.112Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ISMN:979-0-267445897-0043-9" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:37:53.112Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:371755843" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:37:43.508Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:911992843" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:36:27.267Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ISMN:979-0-911992843-0043-9" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:36:27.267Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:397031310" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:36:19.059Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:58519" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:35:06.109Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:839459918" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:35:00.235Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:307708510" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:33:41.497Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:769813338" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:33:40.795Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:128460137" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:32:26.390Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:308265117" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:32:23.374Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:991403626" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:31:12.160Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:WEB_PORTAL_NUMBERS_991403626.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:31:12.160Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:364332190" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:31:10.812Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:189308974" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:31:02.252Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_189308974.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:31:02.252Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:112029133" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:29:55.515Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:110878229" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:28:41.857Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:641741790" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:28:37.715Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:114140353" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:27:20.863Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:270700466" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:27:20.833Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:588005915" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:26:10.121Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:742995357" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:25:59.434Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:869767926" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:24:54.478Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:558816157" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:24:47.224Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ISMN:979-0-558816157-0043-9" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:24:47.224Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:842597055" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:24:40.216Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:944595282" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:23:38.527Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ISMN:979-0-944595282-0043-9" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:23:38.527Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:991152474" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:23:36.572Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:515495926" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:23:19.365Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:750930939" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:22:22.342Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:293167622" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:22:02.010Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:774189725" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:21:04.707Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:187546687" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:20:47.613Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:417189593" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:20:21.918Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:809932089" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:19:39.423Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:610276303" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:19:33.087Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:822229495" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:19:09.239Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:544844067" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:18:22.110Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:207478849" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:18:14.463Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:124324369" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:17:54.203Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:419256845" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:17:00.165Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:847477563" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:16:39.086Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:310708234" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:16:22.725Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_999752926.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:16:20.623Z" UpdatedDate="2015-01-09T06:16:20.623Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:202475591" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:15:47.902Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:57379" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:15:21.512Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:999752926" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:15:14.716Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:813950629" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:14:32.324Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:34467" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:14:06.882Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:582777524" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:13:58.563Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:887331680" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:13:13.996Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:71164" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:12:43.551Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:576615007" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:11:57.754Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:698141364" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:11:44.667Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:EIDR-X:1234-698141364-F5DD-9ABC-DEF0-8:ABCD" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:11:44.667Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:40008" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:11:21.194Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp; Juliet :CID%3A%3A Al_Version_584129866.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:11:10.755Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:135707162" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:10:41.226Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:584129866" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:10:01.616Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp;amp; Juliet :CID%3A%3A Al_Version_584129866.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:10:01.616Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp; Juliet %3ACID Al_Version_159699887.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:09:48.241Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:789584924" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:09:21.542Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:767347600" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:09:17.975Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:EIDR-X:1234-767347600-F5DD-9ABC-DEF0-8:ABCD" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:09:17.975Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:159699887" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:08:29.582Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp;amp; Juliet %3ACID Al_Version_159699887.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:08:29.582Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp; Juliet :CID%3A Al_Version_134927152.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:08:13.044Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:932195072" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:08:00.713Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:884143273" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:08:00.221Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_465586220.txt" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2015-01-09T06:06:37.306Z" UpdatedDate="2015-01-09T06:07:58.469Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:134927152" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:07:03.293Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp;amp; Juliet :CID%3A Al_Version_134927152.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:07:03.293Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_875667266.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:06:44.835Z" UpdatedDate="2015-01-09T06:06:44.835Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:990833856" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:06:41.525Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:465586220" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:06:37.306Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:567308210" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:05:16.208Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:204718140" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:05:12.092Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp;amp; Juliet :CID Al_Version_204718140.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:05:12.092Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:875667266" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:04:40.722Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:689579933" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:04:04.219Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:203751825" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:03:23.244Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TRIB:Sanford &amp;amp; :Sons %3A%3ACID Version_203751825.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:03:23.244Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:971740798" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:03:02.469Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:922463514" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:01:22.019Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TRIB:Sanford &amp;amp; %3ASons CID Version_922463514.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:01:22.019Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:624238282" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:01:17.435Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_308568592.txt" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2015-01-09T05:59:43.885Z" UpdatedDate="2015-01-09T06:01:08.337Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:258075717" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T06:00:57.771Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:300422401" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:59:45.044Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:308568592" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:59:43.885Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:322467508" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:59:42.244Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TRIB:Sanford &amp;amp; :Sons %3ACID Version_322467508.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:59:42.244Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_389695604.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:59:39.319Z" UpdatedDate="2015-01-09T05:59:39.319Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TRIB:Sanford &amp; :Sons CID Version_630250309.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:59:39.303Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:630250309" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:58:33.545Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TRIB:Sanford &amp;amp; :Sons CID Version_630250309.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:58:33.545Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:668546061" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:58:29.391Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:389695604" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:58:27.415Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TVG:Law &amp; :%3A%3AOrder Criminal IntentVersion_903181185.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:57:52.881Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:138078078" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:57:12.419Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:364339682" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:57:10.873Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:903181185" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:56:46.638Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TVG:Law &amp;amp; :%3A%3AOrder Criminal IntentVersion_903181185.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:56:46.638Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TVG:Law &amp; Order Criminal %3AIntentVersion_501667460.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:56:42.991Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:203857930" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:55:53.958Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:70668" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:55:49.494Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_350787656.txt" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2015-01-09T05:54:34.932Z" UpdatedDate="2015-01-09T05:55:45.697Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:501667460" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:55:36.909Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TVG:Law &amp;amp; Order Criminal %3AIntentVersion_501667460.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:55:36.909Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TVG:Law &amp; Order %3ACriminal IntentVersion_742651533:.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:55:33.416Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:350787656" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:54:34.932Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_342376376.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:54:30.265Z" UpdatedDate="2015-01-09T05:54:30.265Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:88885" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:54:28.929Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:742651533" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:54:28.407Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TVG:Law &amp;amp; Order %3ACriminal IntentVersion_742651533:.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:54:28.407Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TVG:Law &amp; Order :Criminal IntentVersion_874169928.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:54:25.550Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:874169928" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:53:20.818Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TVG:Law &amp;amp; Order :Criminal IntentVersion_874169928.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:53:20.818Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:342376376" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:53:18.792Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_981365849.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:53:17.046Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:IMDB:Romeo &amp; :%3A%3AJuliet CID Version_995678948.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:53:12.735Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:83906" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:53:06.912Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:648344042" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:52:10.969Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_648344042.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:52:10.969Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:995678948" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:52:07.696Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:IMDB:Romeo &amp;amp; :%3A%3AJuliet CID Version_995678948.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:52:07.696Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:IMDB:Romeo &amp; %3AJuliet CID Version_141312695.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:52:05.018Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:45426" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:51:44.145Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp; Juliet :CID%3A%3A Al_Version_696442415.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:51:33.873Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:141312695" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:50:59.985Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:IMDB:Romeo &amp;amp; %3AJuliet CID Version_141312695.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:50:59.985Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:IMDB:Romeo &amp; :Juliet %3ACID Version_109901349.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:50:55.461Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:570645004" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:50:55.317Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:696442415" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:50:30.533Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp;amp; Juliet :CID%3A%3A Al_Version_696442415.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:50:30.533Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp; Juliet %3ACID Al_Version_558321447.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:50:27.178Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:109901349" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:49:51.059Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:IMDB:Romeo &amp;amp; :Juliet %3ACID Version_109901349.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:49:51.059Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:IMDB:Romeo &amp; :Juliet CID Version_577945156.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:49:47.524Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:639177358" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:49:40.322Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_585162931.txt" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2015-01-09T05:48:14.245Z" UpdatedDate="2015-01-09T05:49:30.198Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:558321447" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:49:22.476Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp;amp; Juliet %3ACID Al_Version_558321447.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:49:22.476Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp; Juliet :CID%3A Al_Version_413165520.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:49:19.085Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:577945156" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:48:42.068Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:IMDB:Romeo &amp;amp; :Juliet CID Version_577945156.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:48:42.068Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:413165520" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:48:16.631Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp;amp; Juliet :CID%3A Al_Version_413165520.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:48:16.631Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:585162931" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:48:14.245Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp; Juliet :CID Al_Version_328829585.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:48:11.238Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_501151986.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:48:11.039Z" UpdatedDate="2015-01-09T05:48:11.039Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:890338166" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:47:22.054Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:328829585" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:47:06.345Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp;amp; Juliet :CID Al_Version_328829585.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:47:06.345Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:501151986" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:47:02.234Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_916719389.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:47:00.375Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TRIB:Sanford &amp; :Sons %3A%3ACID Version_815268626.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:46:57.291Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:256446635" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:46:09.016Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:714377650" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:45:53.761Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_714377650.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:45:53.761Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:815268626" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:45:47.361Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TRIB:Sanford &amp;amp; :Sons %3A%3ACID Version_815268626.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:45:47.361Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TRIB:Sanford &amp; %3ASons CID Version_165276045.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:45:42.241Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:125654726" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:44:51.081Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:165276045" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:44:39.516Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TRIB:Sanford &amp;amp; %3ASons CID Version_165276045.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:44:39.516Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TRIB:Sanford &amp; :Sons %3ACID Version_968302665.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:44:36.304Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:171985025" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:44:29.163Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:376170444" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:43:33.774Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:968302665" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:43:33.109Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TRIB:Sanford &amp;amp; :Sons %3ACID Version_968302665.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:43:33.109Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TRIB:Sanford &amp; :Sons CID Version_326229532.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:43:30.087Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:326229532" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:42:26.975Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TRIB:Sanford &amp;amp; :Sons CID Version_326229532.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:42:26.975Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:453011454" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:42:12.442Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_179448664.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:42:08.311Z" UpdatedDate="2015-01-09T05:42:08.311Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TVG:Law &amp; :%3A%3AOrder Criminal IntentVersion_279557641.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:41:56.390Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:991996778" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:41:10.953Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:179448664" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:40:58.106Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:279557641" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:40:50.451Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TVG:Law &amp;amp; :%3A%3AOrder Criminal IntentVersion_279557641.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:40:50.451Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TVG:Law &amp; Order Criminal %3AIntentVersion_177051557.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:40:47.385Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:288587000" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:39:53.571Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:177051557" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:39:44.949Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TVG:Law &amp;amp; Order Criminal %3AIntentVersion_177051557.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:39:44.949Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TVG:Law &amp; Order %3ACriminal IntentVersion_605912955:.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:39:41.949Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:166333920" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:39:37.485Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:869168656" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:38:37.313Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:605912955" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:38:35.672Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TVG:Law &amp;amp; Order %3ACriminal IntentVersion_605912955:.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:38:35.672Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TVG:Law &amp; Order :Criminal IntentVersion_353360423.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:38:32.646Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:409194629" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:38:18.277Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_331392036.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:38:15.022Z" UpdatedDate="2015-01-09T05:38:15.022Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:353360423" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:37:25.407Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:TVG:Law &amp;amp; Order :Criminal IntentVersion_353360423.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:37:25.407Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:IMDB:Romeo &amp; :%3A%3AJuliet CID Version_955291746.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:37:15.140Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:774282379" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:37:12.322Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:331392036" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:37:03.596Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_638674774.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:36:57.244Z" UpdatedDate="2015-01-09T05:36:57.244Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:955291746" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:36:12.100Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:IMDB:Romeo &amp;amp; :%3A%3AJuliet CID Version_955291746.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:36:12.100Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:IMDB:Romeo &amp; %3AJuliet CID Version_847924974.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:36:07.695Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:638674774" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:35:43.601Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:513885540" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:35:38.534Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:847924974" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:35:04.873Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:IMDB:Romeo &amp;amp; %3AJuliet CID Version_847924974.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:35:04.873Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:IMDB:Romeo &amp; :Juliet %3ACID Version_942431657.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:35:01.424Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:855884177" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:34:26.437Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:394565363" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:34:21.341Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:942431657" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:33:55.564Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:IMDB:Romeo &amp;amp; :Juliet %3ACID Version_942431657.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:33:55.564Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:IMDB:Romeo &amp; :Juliet CID Version_524096908.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:33:51.751Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:620428111" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:33:08.543Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:524096908" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:32:47.695Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:IMDB:Romeo &amp;amp; :Juliet CID Version_524096908.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:32:47.695Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:646211999" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:31:53.680Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:300453514" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:31:51.448Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:900113944" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:31:30.964Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:871612891" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:30:29.806Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:919031095" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:30:25.038Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:167787014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:30:10.760Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:498564167" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:29:04.642Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ISTC:0A9-542640042%3A-12B4A105-7:" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:28:54.795Z" UpdatedDate="2015-01-09T05:28:54.795Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:389532769" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:28:51.465Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:542640042" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:27:23.526Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:533541747" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:27:20.470Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:711937491" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:25:45.003Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:729370393" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:25:00.305Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:510898544" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:23:40.607Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:401678008" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:23:38.768Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:411283899" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:22:08.343Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:389222800" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:22:07.312Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:603541707" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:20:39.733Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:538936954" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:20:35.376Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:703818073" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:19:12.037Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:982987553" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:18:39.033Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:668420681" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:18:02.605Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:143510648" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:16:15.035Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:859457587" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:16:04.164Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:751199154" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:14:53.500Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:626385048" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:14:40.519Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:302224723" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:12:57.874Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:867767370" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:12:49.591Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:871499859" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:11:05.012Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:581496229" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:11:04.828Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:962207025" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:09:46.540Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:983490233" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:09:31.352Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:481015663" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:08:23.005Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:328538042" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:08:01.549Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:679554387" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:06:32.435Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:284902597" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:06:24.059Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:229440682" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:04:57.965Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:336251579" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:04:48.197Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:818374088" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:03:29.266Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:141414326" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:03:08.473Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:227602015" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T05:01:30.405Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:884875501" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:59:28.465Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:671736452" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:57:49.155Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:768446796" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:56:18.312Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:859762573" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:54:55.511Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_825262170.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:54:04.439Z" UpdatedDate="2015-01-09T04:54:04.439Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:656107387" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:53:25.181Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_705383777.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:51:58.645Z" UpdatedDate="2015-01-09T04:51:58.645Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:807778171" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:51:52.147Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:800567718" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:50:54.078Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:189301858" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:50:30.980Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_524047369.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:50:29.349Z" UpdatedDate="2015-01-09T04:50:29.349Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:808830402" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:50:26.111Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:808830402" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:50:26.111Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:808830402" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:50:17.989Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:808830402" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:50:17.989Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:808830402" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:50:17.989Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:808830402" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:50:17.989Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:261054483" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:49:40.752Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ISMN:979-0-261054483-0043-9" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:49:40.752Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_265094162.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:49:10.479Z" UpdatedDate="2015-01-09T04:49:10.479Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:156757273" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:49:10.291Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_467685216.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:48:47.697Z" UpdatedDate="2015-01-09T04:48:47.697Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:928787027" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:48:18.974Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ISMN:979-0-928787027-0043-9" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:48:18.974Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:926047698" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:47:49.412Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_125808999.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:47:43.381Z" UpdatedDate="2015-01-09T04:47:43.381Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_429681941.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:47:38.077Z" UpdatedDate="2015-01-09T04:47:38.077Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:467685216" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:47:28.637Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:686976085" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:46:53.107Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_522771235.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:46:11.604Z" UpdatedDate="2015-01-09T04:46:11.604Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_345914894.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:46:07.884Z" UpdatedDate="2015-01-09T04:46:07.884Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:648955358" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:45:11.653Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_107348544.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:44:53.147Z" UpdatedDate="2015-01-09T04:44:53.147Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_970133558.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:44:44.427Z" UpdatedDate="2015-01-09T04:44:44.427Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:250590854" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:43:38.116Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_870768696.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:43:31.376Z" UpdatedDate="2015-01-09T04:43:31.376Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_800359267.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:43:27.661Z" UpdatedDate="2015-01-09T04:43:27.661Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:657736201" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:42:39.285Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_657736201.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:42:39.285Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_529599459.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:42:03.938Z" UpdatedDate="2015-01-09T04:42:03.938Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:850935302" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:42:01.149Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:850935302" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:42:01.149Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:850689631" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:41:50.093Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:850935302" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:41:39.592Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:850935302" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:41:39.592Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:850935302" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:41:39.592Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:850935302" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:41:39.592Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_248954573.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:41:39.525Z" UpdatedDate="2015-01-09T04:41:39.525Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:521485631" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:41:31.249Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:521485631" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:41:31.249Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:521485631" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:41:24.536Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:521485631" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:41:24.536Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:521485631" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:41:24.536Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:521485631" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:41:24.536Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_861691324.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:40:41.079Z" UpdatedDate="2015-01-09T04:40:41.079Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_668456624.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:40:18.289Z" UpdatedDate="2015-01-09T04:40:18.289Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:284914130" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:39:41.687Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:284914130" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:39:41.687Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:284914130" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:39:41.687Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:284914130" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:39:41.687Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:153728718" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:39:38.198Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_878942331.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:39:19.530Z" UpdatedDate="2015-01-09T04:39:19.530Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_450447298.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:38:53.777Z" UpdatedDate="2015-01-09T04:38:53.777Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:595839625" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:38:20.645Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:595839625" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:38:20.645Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:595839625" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:38:20.645Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:595839625" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:38:20.645Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_172496314.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:38:02.729Z" UpdatedDate="2015-01-09T04:38:02.729Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_810665579.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:37:20.596Z" UpdatedDate="2015-01-09T04:37:20.596Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_494776956.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:37:10.456Z" UpdatedDate="2015-01-09T04:37:10.456Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:642739329" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:36:59.687Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:642739329" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:36:59.687Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:642739329" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:36:59.687Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:642739329" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:36:59.687Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_669817878.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:36:44.390Z" UpdatedDate="2015-01-09T04:36:44.390Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:494776956" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:36:02.016Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_321666390.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:36:00.236Z" UpdatedDate="2015-01-09T04:36:00.236Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_921679182.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:35:30.075Z" UpdatedDate="2015-01-09T04:35:30.075Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:887854559" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:35:17.269Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:887854559" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:35:17.269Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:887854559" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:35:17.269Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:887854559" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:35:17.269Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_647391173.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:34:44.939Z" UpdatedDate="2015-01-09T04:34:44.939Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:434602345" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:34:41.681Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_192374889.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:34:15.522Z" UpdatedDate="2015-01-09T04:34:15.522Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:335767648" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:33:54.755Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:335767648" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:33:54.755Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:335767648" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:33:54.755Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:335767648" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:33:54.755Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_841968091.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:33:32.069Z" UpdatedDate="2015-01-09T04:33:32.069Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:361317178" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:33:17.402Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_148184816.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:33:10.985Z" UpdatedDate="2015-01-09T04:33:10.985Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_922184665.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:55.390Z" UpdatedDate="2015-01-09T04:32:55.390Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:123724888" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:35.126Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:123724888" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:35.126Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:123724888" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:35.126Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:123724888" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:35.126Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:746753760" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:28.946Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:746753760" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:28.946Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:746753760" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:28.946Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:746753760" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:28.946Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:247919604" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:25.349Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:247919604" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:25.349Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:247919604" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:19.895Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:247919604" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:19.895Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:247919604" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:19.895Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:247919604" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:19.895Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:387974593" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:16.409Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:387974593" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:16.409Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:387974593" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:10.473Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:387974593" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:10.473Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:387974593" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:10.473Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:387974593" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:10.473Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_682836749.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:09.853Z" UpdatedDate="2015-01-09T04:32:09.853Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:286626695" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:06.790Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:286626695" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:06.790Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:286626695" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:00.464Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:286626695" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:00.464Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:286626695" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:00.464Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:286626695" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:32:00.464Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:148184816" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:31:45.976Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_822592290.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:31:38.466Z" UpdatedDate="2015-01-09T04:31:38.466Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_730331134.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:31:37.711Z" UpdatedDate="2015-01-09T04:31:37.711Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_300705195.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:30:42.598Z" UpdatedDate="2015-01-09T04:30:42.598Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:906147635" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:30:39.685Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:906147635" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:30:39.685Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:906147635" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:30:39.685Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:906147635" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:30:39.685Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:822592290" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:30:28.300Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_627652561.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:30:19.052Z" UpdatedDate="2015-01-09T04:30:19.052Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_463943840.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:29:24.001Z" UpdatedDate="2015-01-09T04:29:24.001Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:911143142" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:29:13.673Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:911143142" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:29:13.673Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:911143142" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:29:13.673Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:911143142" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:29:13.673Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:875482431" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:29:06.717Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_685705802.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:28:59.395Z" UpdatedDate="2015-01-09T04:28:59.395Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:680478882" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:27:57.100Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:680478882" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:27:57.100Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:680478882" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:27:57.100Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:680478882" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:27:57.100Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:810758486" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:26:08.630Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:789670182" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:26:00.395Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:789670182" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:26:00.395Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:789670182" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:26:00.395Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:789670182" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:26:00.395Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_252655726.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:25:42.354Z" UpdatedDate="2015-01-09T04:25:42.354Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:994238960" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:24:42.175Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:900828973" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:24:32.279Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:900828973" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:24:32.279Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:900828973" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:24:32.279Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:900828973" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:24:32.279Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_886827941.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:24:23.051Z" UpdatedDate="2015-01-09T04:24:23.051Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_444554211.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:24:22.257Z" UpdatedDate="2015-01-09T04:24:22.257Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_200586491.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:22:59.818Z" UpdatedDate="2015-01-09T04:22:59.818Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:519311746" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:22:53.355Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:519311746" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:22:53.355Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:519311746" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:22:53.355Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:519311746" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:22:53.355Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:200853387" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:21:27.696Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:200853387" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:21:27.696Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:200853387" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:21:27.696Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:200853387" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:21:27.696Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_660306435.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:19:53.236Z" UpdatedDate="2015-01-09T04:19:53.236Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:998517290" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:19:50.783Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:998517290" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:19:50.783Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:998517290" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:19:50.783Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:998517290" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:19:50.783Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_940092960.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:19:29.234Z" UpdatedDate="2015-01-09T04:19:29.234Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_151160520.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:18:35.277Z" UpdatedDate="2015-01-09T04:18:35.277Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:437588388" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:18:28.141Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:437588388" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:18:28.141Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:437588388" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:18:28.141Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:437588388" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:18:28.141Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_853628182.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:18:12.492Z" UpdatedDate="2015-01-09T04:18:12.492Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:403297866" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:17:08.403Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:403297866" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:17:08.403Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:403297866" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:17:08.403Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:403297866" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:17:08.403Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_750635569.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:16:42.362Z" UpdatedDate="2015-01-09T04:16:42.362Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:342955969" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:15:46.755Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:342955969" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:15:46.755Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:342955969" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:15:46.755Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:342955969" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:15:46.755Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_824797066.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:15:29.226Z" UpdatedDate="2015-01-09T04:15:29.226Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_911224559.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:15:27.429Z" UpdatedDate="2015-01-09T04:15:27.429Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:745356056" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:14:22.213Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:745356056" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:14:22.213Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:745356056" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:14:22.213Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:745356056" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:14:22.213Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_202661580.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:14:12.127Z" UpdatedDate="2015-01-09T04:14:12.127Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_773840238.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:14:12.107Z" UpdatedDate="2015-01-09T04:14:12.107Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:269389386" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:12:57.186Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:269389386" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:12:57.186Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:269389386" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:12:57.186Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:269389386" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:12:57.186Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_782160251.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:12:50.531Z" UpdatedDate="2015-01-09T04:12:50.531Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_685775849.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:12:50.422Z" UpdatedDate="2015-01-09T04:12:50.422Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:874087250" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:11:32.769Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:874087250" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:11:32.769Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:874087250" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:11:32.769Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:874087250" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:11:32.769Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_415001326.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:11:30.892Z" UpdatedDate="2015-01-09T04:11:30.892Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_955713930.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:11:25.057Z" UpdatedDate="2015-01-09T04:11:25.057Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_475949703.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:10:02.527Z" UpdatedDate="2015-01-09T04:10:02.527Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:229011471" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:10:01.157Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:229011471" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:10:01.157Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:229011471" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:10:01.157Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:229011471" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:10:01.157Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_349404480.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:09:57.378Z" UpdatedDate="2015-01-09T04:09:57.378Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:737546217" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:08:33.805Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:737546217" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:08:33.805Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:737546217" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:08:33.805Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:737546217" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:08:33.805Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_256146128.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:08:26.041Z" UpdatedDate="2015-01-09T04:08:26.041Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_519217236.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:08:25.803Z" UpdatedDate="2015-01-09T04:08:25.803Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_388317452.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:07:08.258Z" UpdatedDate="2015-01-09T04:07:08.258Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_701147740.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:07:00.669Z" UpdatedDate="2015-01-09T04:07:00.669Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:614601620" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:06:52.186Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:614601620" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:06:52.186Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:614601620" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:06:52.186Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:614601620" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:06:52.186Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_900750240.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:05:49.261Z" UpdatedDate="2015-01-09T04:05:49.261Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_341774376.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:05:38.307Z" UpdatedDate="2015-01-09T04:05:38.307Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:115596322" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:05:16.677Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:115596322" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:05:16.677Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:115596322" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:05:16.677Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:115596322" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:05:16.677Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_749238141.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:04:16.655Z" UpdatedDate="2015-01-09T04:04:16.655Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_577497507.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:04:12.023Z" UpdatedDate="2015-01-09T04:04:12.023Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:246718000" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:03:55.730Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:246718000" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:03:55.730Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:246718000" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:03:55.730Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:246718000" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:03:55.730Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_604206069.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:02:42.410Z" UpdatedDate="2015-01-09T04:02:42.410Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:940646340" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:02:20.080Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:940646340" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:02:20.080Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:940646340" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:02:20.080Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:940646340" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:02:20.080Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_867892927.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:01:21.110Z" UpdatedDate="2015-01-09T04:01:21.110Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_842261705.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:01:19.436Z" UpdatedDate="2015-01-09T04:01:19.436Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_846595454.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T04:00:00.272Z" UpdatedDate="2015-01-09T04:00:00.272Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_704402786.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:59:55.438Z" UpdatedDate="2015-01-09T03:59:55.438Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:440492196" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:59:38.381Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:440492196" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:59:38.381Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:440492196" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:59:38.381Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:440492196" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:59:38.381Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:871462659" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:58:04.565Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:871462659" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:58:04.565Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:871462659" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:58:04.565Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:871462659" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:58:04.565Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:296871039" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:56:32.033Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:296871039" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:56:32.033Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:296871039" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:56:32.033Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:296871039" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:56:32.033Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_128377691.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:56:09.381Z" UpdatedDate="2015-01-09T03:56:09.381Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:307507626" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:54:59.294Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:307507626" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:54:59.294Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:307507626" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:54:59.294Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:307507626" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:54:59.294Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_761544023.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:54:48.912Z" UpdatedDate="2015-01-09T03:54:48.912Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_599323729.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:54:48.909Z" UpdatedDate="2015-01-09T03:54:48.909Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:488151497" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:53:27.321Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:488151497" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:53:27.321Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:488151497" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:53:27.321Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:488151497" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:53:27.321Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_800681660.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:52:56.466Z" UpdatedDate="2015-01-09T03:52:56.466Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_288989104.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:52:47.139Z" UpdatedDate="2015-01-09T03:52:47.139Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:382829125" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:52:00.952Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:382829125" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:52:00.952Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:382829125" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:52:00.952Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:382829125" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:52:00.952Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_876107122.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:51:11.217Z" UpdatedDate="2015-01-09T03:51:11.217Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_957177960.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:50:58.329Z" UpdatedDate="2015-01-09T03:50:58.329Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:527126880" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:50:29.513Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:527126880" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:50:29.513Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:527126880" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:50:29.513Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:527126880" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:50:29.513Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:896515483" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:49:07.989Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:896515483" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:49:07.989Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:896515483" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:49:07.989Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:896515483" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:49:07.989Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_428691967.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:49:05.236Z" UpdatedDate="2015-01-09T03:49:05.236Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:442717551" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:47:48.112Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:442717551" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:47:48.112Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:442717551" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:47:48.112Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:442717551" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:47:48.112Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_840929212.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:47:26.417Z" UpdatedDate="2015-01-09T03:47:26.417Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_470139003.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:47:25.722Z" UpdatedDate="2015-01-09T03:47:25.722Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:169871634" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:46:25.460Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:169871634" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:46:25.460Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:508443667" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:46:16.513Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:508443667" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:46:16.513Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:175443755" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:46:13.043Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:175443755" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:46:13.043Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:175443755" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:46:13.043Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:175443755" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:46:13.043Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_151069521.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:45:35.241Z" UpdatedDate="2015-01-09T03:45:35.241Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:169871634" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:45:33.980Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:169871634" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:45:33.980Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:169871634" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:45:33.980Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:169871634" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:45:33.980Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_484392822.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:45:22.739Z" UpdatedDate="2015-01-09T03:45:22.739Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:508443667" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:45:13.472Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:508443667" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:45:13.472Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:508443667" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:45:13.472Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:508443667" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:45:13.472Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:590321476" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:44:44.760Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:590321476" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:44:44.760Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:590321476" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:44:44.760Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:590321476" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:44:44.760Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:321304152" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:43:32.840Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:321304152" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:43:32.840Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:321304152" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:43:32.840Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:321304152" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:43:32.840Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_110904585.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:43:29.083Z" UpdatedDate="2015-01-09T03:43:29.083Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:490247820" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:43:22.418Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:490247820" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:43:22.418Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:490247820" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:43:22.418Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:490247820" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:43:22.418Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_611152121.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:42:17.363Z" UpdatedDate="2015-01-09T03:42:17.363Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:120436455" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:42:12.783Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:120436455" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:42:12.783Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:120436455" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:42:12.783Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:120436455" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:42:12.783Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_909896779.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:42:05.363Z" UpdatedDate="2015-01-09T03:42:05.363Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:474701328" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:42:01.720Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:474701328" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:42:01.720Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:474701328" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:42:01.720Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:474701328" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:42:01.720Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_584577251.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:41:01.557Z" UpdatedDate="2015-01-09T03:41:01.557Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:631204219" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:40:49.458Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:631204219" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:40:49.458Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:631204219" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:40:49.458Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:631204219" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:40:49.458Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_559582883.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:40:43.089Z" UpdatedDate="2015-01-09T03:40:43.089Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:450145190" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:40:24.558Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:450145190" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:40:24.558Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:450145190" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:40:24.558Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:450145190" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:40:24.558Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_176025098.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:39:51.420Z" UpdatedDate="2015-01-09T03:39:51.420Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:512987700" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:39:05.599Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:512987700" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:39:05.599Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:512987700" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:39:05.599Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:512987700" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:39:05.599Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_177461514.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:39:01.344Z" UpdatedDate="2015-01-09T03:39:01.344Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:696858920" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:38:41.718Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:696858920" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:38:41.718Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:696858920" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:38:41.718Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:696858920" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:38:41.718Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_978211189.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:38:40.708Z" UpdatedDate="2015-01-09T03:38:40.708Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_594814312.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:37:45.023Z" UpdatedDate="2015-01-09T03:37:45.023Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:858811238" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:37:39.283Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:858811238" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:37:39.283Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:858811238" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:37:39.283Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:858811238" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:37:39.283Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:783535833" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:36:54.750Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:783535833" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:36:54.750Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:783535833" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:36:54.750Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:783535833" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:36:54.750Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_867300789.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:36:31.811Z" UpdatedDate="2015-01-09T03:36:31.811Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:373620755" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:36:13.455Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:373620755" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:36:13.455Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:373620755" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:36:13.455Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:373620755" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:36:13.455Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:356621089" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:36:09.231Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:356621089" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:36:09.231Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:356621089" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:36:09.231Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:356621089" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:36:09.231Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:168003432" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:36:03.401Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:168003432" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:36:03.401Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:168003432" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:57.573Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:168003432" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:57.573Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:168003432" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:57.573Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:168003432" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:57.573Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:592524463" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:54.061Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:592524463" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:54.061Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:592524463" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:51.932Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:592524463" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:51.932Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:592524463" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:51.932Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:592524463" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:51.932Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:105946276" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:42.564Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:105946276" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:42.564Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:105946276" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:34.642Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:105946276" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:34.642Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:105946276" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:34.642Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:105946276" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:34.642Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_121461215.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:24.723Z" UpdatedDate="2015-01-09T03:35:24.723Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_962592439.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:18.509Z" UpdatedDate="2015-01-09T03:35:18.509Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:392143887" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:16.341Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:392143887" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:16.341Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:392143887" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:16.341Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:392143887" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:35:16.341Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:837046718" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:34:19.626Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:837046718" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:34:19.626Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:837046718" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:34:19.626Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:837046718" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:34:19.626Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_372400418.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:34:05.134Z" UpdatedDate="2015-01-09T03:34:05.134Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_387609681.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:34:01.719Z" UpdatedDate="2015-01-09T03:34:01.719Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:798766457" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:33:56.293Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:798766457" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:33:56.293Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:798766457" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:33:56.293Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:798766457" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:33:56.293Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:453468187" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:32:56.194Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:453468187" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:32:56.194Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:453468187" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:32:56.194Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:453468187" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:32:56.194Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_425369467.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:32:46.206Z" UpdatedDate="2015-01-09T03:32:46.206Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_782921886.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:32:44.215Z" UpdatedDate="2015-01-09T03:32:44.215Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:320895097" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:32:38.377Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:320895097" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:32:38.377Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:320895097" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:32:38.377Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:320895097" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:32:38.377Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:905470056" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:31:31.535Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:905470056" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:31:31.535Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:905470056" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:31:31.535Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:905470056" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:31:31.535Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_454200083.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:31:28.430Z" UpdatedDate="2015-01-09T03:31:28.430Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_211194243.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:31:26.024Z" UpdatedDate="2015-01-09T03:31:26.024Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:602057629" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:31:17.322Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:602057629" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:31:17.322Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:602057629" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:31:17.322Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:602057629" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:31:17.322Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:217901767" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:30:16.374Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:217901767" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:30:16.374Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:217901767" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:30:16.374Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:217901767" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:30:16.374Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_238256143.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:30:06.798Z" UpdatedDate="2015-01-09T03:30:06.798Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_987803132.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:29:57.123Z" UpdatedDate="2015-01-09T03:29:57.123Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:834831533" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:29:50.608Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:834831533" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:29:50.608Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:834831533" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:29:50.608Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:834831533" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:29:50.608Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_759334617.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:28:47.559Z" UpdatedDate="2015-01-09T03:28:47.559Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:239063477" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:28:46.601Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:239063477" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:28:46.601Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:239063477" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:28:46.601Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:239063477" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:28:46.601Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_593868759.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:28:40.288Z" UpdatedDate="2015-01-09T03:28:40.288Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:690273928" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:28:23.791Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:690273928" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:28:23.791Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:690273928" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:28:23.791Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:690273928" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:28:23.791Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_158453306.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:27:36.538Z" UpdatedDate="2015-01-09T03:27:36.538Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:359105239" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:27:30.453Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:359105239" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:27:30.453Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:359105239" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:27:30.453Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:359105239" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:27:30.453Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_544035197.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:27:28.689Z" UpdatedDate="2015-01-09T03:27:28.689Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:641205627" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:27:07.515Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:641205627" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:27:07.515Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:641205627" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:27:07.515Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:641205627" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:27:07.515Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_751675165.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:26:18.589Z" UpdatedDate="2015-01-09T03:26:18.589Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:939108083" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:26:12.828Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:939108083" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:26:12.828Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:939108083" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:26:12.828Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:939108083" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:26:12.828Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:196683661" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:25:50.275Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:196683661" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:25:50.275Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:196683661" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:25:50.275Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:196683661" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:25:50.275Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_408983492.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:25:08.896Z" UpdatedDate="2015-01-09T03:25:08.896Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_426607728.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:25:07.507Z" UpdatedDate="2015-01-09T03:25:07.507Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:302425897" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:24:58.282Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:302425897" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:24:58.282Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:302425897" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:24:58.282Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:302425897" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:24:58.282Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:354727817" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:24:31.635Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:354727817" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:24:31.635Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:354727817" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:24:31.635Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:354727817" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:24:31.635Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_578952724.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:23:51.368Z" UpdatedDate="2015-01-09T03:23:51.368Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_662207699.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:23:50.546Z" UpdatedDate="2015-01-09T03:23:50.546Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:159230703" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:23:40.492Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:159230703" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:23:40.492Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:159230703" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:23:40.492Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:159230703" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:23:40.492Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:662457897" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:23:16.915Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:662457897" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:23:16.915Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:662457897" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:23:16.915Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:662457897" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:23:16.915Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_217281824.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:22:36.842Z" UpdatedDate="2015-01-09T03:22:36.842Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:961928388" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:22:25.769Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:961928388" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:22:25.769Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:961928388" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:22:25.769Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:961928388" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:22:25.769Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:237475249" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:21:53.580Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:237475249" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:21:53.580Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:237475249" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:21:53.580Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:237475249" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:21:53.580Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_413575015.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:21:27.224Z" UpdatedDate="2015-01-09T03:21:27.224Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:166609010" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:21:07.388Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:166609010" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:21:07.388Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:166609010" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:21:07.388Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:166609010" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:21:07.388Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_591285271.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:20:47.353Z" UpdatedDate="2015-01-09T03:20:47.353Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:163652909" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:20:30.515Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:163652909" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:20:30.515Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:163652909" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:20:30.515Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:163652909" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:20:30.515Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_434834094.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:20:14.007Z" UpdatedDate="2015-01-09T03:20:14.007Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:917368546" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:19:44.489Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:917368546" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:19:44.489Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:917368546" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:19:44.489Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:917368546" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:19:44.489Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_176542464.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:19:36.360Z" UpdatedDate="2015-01-09T03:19:36.360Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_884822122.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:19:00.949Z" UpdatedDate="2015-01-09T03:19:00.949Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:329294355" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:18:44.724Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:329294355" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:18:44.724Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:329294355" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:18:44.724Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:329294355" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:18:44.724Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:731629704" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:18:27.153Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:731629704" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:18:27.153Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:731629704" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:18:27.153Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:731629704" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:18:27.153Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_952776197.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:17:47.952Z" UpdatedDate="2015-01-09T03:17:47.952Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:531084986" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:17:21.807Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:531084986" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:17:21.807Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:531084986" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:17:21.807Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:531084986" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:17:21.807Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:651364565" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:17:08.728Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:651364565" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:17:08.728Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:651364565" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:17:08.728Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:651364565" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:17:08.728Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:530857437" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:15:49.128Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:530857437" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:15:49.128Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:530857437" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:15:49.128Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:530857437" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:15:49.128Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:881906208" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:15:37.642Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:881906208" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:15:37.642Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:881906208" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:15:37.642Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:881906208" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:15:37.642Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_125973769.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:15:05.035Z" UpdatedDate="2015-01-09T03:15:05.035Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:238286985" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:14:31.440Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:238286985" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:14:31.440Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:238286985" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:14:31.440Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:238286985" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:14:31.440Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:499930563" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:14:21.978Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:499930563" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:14:21.978Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:499930563" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:14:21.978Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:499930563" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:14:21.978Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_730511488.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:13:53.139Z" UpdatedDate="2015-01-09T03:13:53.139Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_599376100.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:13:21.778Z" UpdatedDate="2015-01-09T03:13:21.778Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:872541663" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:13:06.327Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:872541663" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:13:06.327Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:872541663" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:13:06.327Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:872541663" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:13:06.327Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_100773052.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:12:20.092Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:455102378" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:12:15.187Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:455102378" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:12:15.187Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:455102378" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:12:15.187Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:455102378" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:12:15.187Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:646938904" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:11:38.143Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:646938904" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:11:38.143Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:646938904" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:11:38.143Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:646938904" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:11:38.143Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_432447380.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:11:07.053Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:809545019" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:10:43.177Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:809545019" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:10:43.177Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:809545019" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:10:43.177Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:809545019" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:10:43.177Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_426086633.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:10:32.502Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:291815618" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:09:46.457Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:291815618" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:09:46.457Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:291815618" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:09:46.457Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:291815618" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:09:46.457Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_982435138.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:09:08.338Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:341983009" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:09:04.420Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:341983009" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:09:04.420Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:341983009" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:09:04.420Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:341983009" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:09:04.420Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_992118705.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:08:26.316Z" UpdatedDate="2015-01-09T03:08:26.316Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:573770310" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:08:00.976Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:573770310" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:08:00.976Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:573770310" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:08:00.976Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:573770310" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:08:00.976Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_270541680.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:07:34.737Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:974244772" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:07:20.797Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:974244772" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:07:20.797Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:974244772" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:07:20.797Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:974244772" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:07:20.797Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:564976165" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:05:39.177Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:564976165" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:05:39.177Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:564976165" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:05:39.177Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:564976165" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:05:39.177Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:282563787" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:05:27.019Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:282563787" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:05:27.019Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:282563787" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:05:27.019Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:282563787" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:05:27.019Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_777284706.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:05:26.048Z" UpdatedDate="2015-01-09T03:05:26.048Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_152455473.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:05:22.208Z" UpdatedDate="2015-01-09T03:05:22.208Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:216860344" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:04:18.040Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:216860344" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:04:18.040Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:216860344" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:04:18.040Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:216860344" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:04:18.040Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:722318164" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:04:02.484Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:722318164" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:04:02.484Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:722318164" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:04:02.484Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:722318164" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:04:02.484Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_965106329.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:03:54.669Z" UpdatedDate="2015-01-09T03:03:54.669Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:877845528" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:02:53.718Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:877845528" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:02:53.718Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:877845528" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:02:53.718Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:877845528" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:02:53.718Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_616235486.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:02:43.772Z" UpdatedDate="2015-01-09T03:02:43.772Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:861340036" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:02:24.447Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:861340036" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:02:24.447Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:861340036" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:02:24.447Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:861340036" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:02:24.447Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:190397575" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:01:36.456Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:190397575" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:01:36.456Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:190397575" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:01:36.456Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:190397575" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:01:36.456Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_391975604.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:01:25.578Z" UpdatedDate="2015-01-09T03:01:25.578Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:333309021" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:01:05.607Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:333309021" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:01:05.607Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:333309021" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:01:05.607Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:333309021" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T03:01:05.607Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:582035372" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:59:57.076Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:582035372" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:59:57.076Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:582035372" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:59:57.076Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:582035372" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:59:57.076Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_843634849.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:59:52.719Z" UpdatedDate="2015-01-09T02:59:52.719Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:411495116" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:59:34.537Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:411495116" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:59:34.537Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:411495116" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:59:34.537Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:411495116" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:59:34.537Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:523656814" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:58:22.053Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:523656814" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:58:22.053Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:523656814" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:58:22.053Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:523656814" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:58:22.053Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_390590168.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:58:09.414Z" UpdatedDate="2015-01-09T02:58:09.414Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:5020" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:58:03.269Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:5020" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:58:03.269Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:5020" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:58:03.269Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:5020" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:58:03.269Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:261070936" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:56:59.456Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:261070936" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:56:59.456Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:261070936" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:56:59.456Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:261070936" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:56:59.456Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:789153716" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:56:35.248Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:789153716" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:56:35.248Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:789153716" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:56:35.248Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:789153716" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:56:35.248Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_736603142.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:56:21.075Z" UpdatedDate="2015-01-09T02:56:21.075Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:249774826" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:55:24.130Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:249774826" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:55:24.130Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:249774826" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:55:24.130Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:249774826" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:55:24.130Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:413786035" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:55:11.192Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:413786035" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:55:11.192Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:413786035" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:55:11.192Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:413786035" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:55:11.192Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:448734314" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:53:59.487Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:448734314" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:53:59.487Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:448734314" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:53:59.487Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:448734314" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:53:59.487Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:223502701" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:53:33.285Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:223502701" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:53:33.285Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:223502701" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:53:33.285Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:223502701" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:53:33.285Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:505259114" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:52:37.631Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:505259114" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:52:37.631Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:505259114" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:52:37.631Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:505259114" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:52:37.631Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:151810535" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:52:15.626Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:151810535" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:52:15.626Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:151810535" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:52:15.626Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:151810535" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:52:15.626Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_336686149.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:52:05.215Z" UpdatedDate="2015-01-09T02:52:05.215Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:431986956" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:51:02.973Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:431986956" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:51:02.973Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:431986956" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:51:02.973Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:431986956" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:51:02.973Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:352261151" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:50:49.178Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:352261151" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:50:49.178Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:352261151" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:50:49.178Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:352261151" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:50:49.178Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_392602527.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:50:41.494Z" UpdatedDate="2015-01-09T02:50:41.494Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_872330565.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:49:56.991Z" UpdatedDate="2015-01-09T02:49:56.991Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:790337121" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:49:31.889Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:790337121" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:49:31.889Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:790337121" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:49:31.889Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:790337121" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:49:31.889Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:723377502" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:49:27.219Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:723377502" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:49:27.219Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:723377502" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:49:27.219Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:723377502" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:49:27.219Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:935616641" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:48:01.697Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:935616641" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:48:01.697Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:935616641" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:48:01.697Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:935616641" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:48:01.697Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_511651933.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:47:52.278Z" UpdatedDate="2015-01-09T02:47:52.278Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_858390541.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:47:50.594Z" UpdatedDate="2015-01-09T02:47:50.594Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:608310474" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:47:42.683Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:608310474" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:47:42.683Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:608310474" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:47:42.683Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:608310474" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:47:42.683Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:963334268" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:46:43.565Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:963334268" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:46:43.565Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:963334268" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:46:43.565Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:963334268" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:46:43.565Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_867985615.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:46:31.893Z" UpdatedDate="2015-01-09T02:46:31.893Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_360333473.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:46:29.830Z" UpdatedDate="2015-01-09T02:46:29.830Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:769297983" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:46:08.283Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:769297983" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:46:08.283Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:769297983" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:46:08.283Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:769297983" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:46:08.283Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_421328081.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:45:18.795Z" UpdatedDate="2015-01-09T02:45:18.795Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:295732788" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:45:17.421Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:295732788" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-01-09T02:45:17.421Z"/>
</BasicAssetList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">11191</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Cache-Control</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">max-age=86400</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"0C33E7E989A8489DE05307991F0A00BF:26121DD1"</con:value></con:property><con:property><con:name>Expires</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Sat, 10 Jan 2015 07:16:06 GMT</con:value></con:property><con:property><con:name>Last-Modified</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Fri, 09 Jan 2015 07:14:22 GMT</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">t=1420787766 VK@ANApNA50AAHsMjiYAAABH urn:dece:org:org:dece:CON 10.31.173.1</con:value></con:property><con:property><con:name>Vary</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Accept-Encoding</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>66d88acf-0713-4166-9ed8-1652beb0bb30</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GET-OnOrAfterMetadataBasicList" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
tC.setPropertyValue("onorafter",callTC.getPropertyValue("onorafter"));
/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET-OnOrAfterMetadataBasicList");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET-OnOrAfterMetadataBasicList"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List?FilterClass=urn:dece:type:viewfilter:lastmodifieddate&amp;OnOrAfter=${#TestCase#onorafter}" methodName="GET OnMetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET-OnOrAfterMetadataBasicList" mediaType="application/xml" sslKeystore="2222_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET-OnOrAfterMetadataBasicList');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeGet");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Assertion for threshold Pagination"><con:settings/><con:config><script>/*checking in response the GetList contains maximum  values 1000 */
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def response = context.expand( '${GET-OnOrAfterMetadataBasicList#Response#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]}' )

log.info response.size()

def filtercount = context.expand( '${GET-OnOrAfterMetadataBasicList#ResponseAsXml#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]/@FilterCount}' )


log.info filtercount

def responseAsXml = context.expand( '${GET-OnOrAfterMetadataBasicList#ResponseAsXml#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]/ns1:BasicAssetReference[1]}' )

def records = new XmlParser().parseText(response);
log.info records.value().size()

if(records.value().size().toString()!= filtercount.toString())
{
	assert 1==2;
}
}</script></con:config></con:testStep><con:testStep type="groovy" name="Extract The Response Header ETag"><con:settings/><con:config><script>/*Extracting ETag from response and storing it in Project level Property*/
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET-OnOrAfterMetadataBasicList');
def expXML = tStep.httpRequest.response.getResponseContent();

String ETag = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "ETag": 
			ETag = value[0]; 
			break;
	}
}

tP.setPropertyValue("ETag", ETag);
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Assertion For  Order of dates"><con:settings/><con:config><script>/*Asserting weather the updated dates in the GetList response are in descending order */
def httpStatus = context.expand( '${#TestCase#httpStatus}' )
if(httpStatus=='HTTP/1.1 200 OK')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def response = context.expand( '${GET-OnOrAfterMetadataBasicList#Response#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]}' )

log.info response
def possiblySorted = []
def records = new XmlParser().parseText(response);
log.info records

for(int i=0;i&lt;=records.BasicAssetReference.size()-1;i++){
//log.info records.DigitalAssetReference[i].@UpdatedDate;
if(records.BasicAssetReference[i].@UpdatedDate==null)
	possiblySorted.add(records.BasicAssetReference[i].@CreatedDate);
else
	possiblySorted.add(records.BasicAssetReference[i].@UpdatedDate);
}

log.info possiblySorted;
def sortedCopy = new ArrayList&lt;>(possiblySorted)
log.info sortedCopy.sort().reverse();
if( possiblySorted != sortedCopy.sort().reverse())
{
assert 1==2
}
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET-OnOrAfterMetadataBasicList');
		def expXML = tStep.httpRequest.response.getResponseContent();
		
		String Cache_Control = null;
		String ETag = null;
		String Expires   = null;
		String Last_Modified = null;
		String x_Transaction_Info = null;
		String Vary=null;
		tStep.httpRequest.response.responseHeaders.each() {	 header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					}
		}

			tC.setPropertyValue("Cache-Control", Cache_Control);
			tC.setPropertyValue("ETag", ETag);
			tC.setPropertyValue("Expires", Expires);
			tC.setPropertyValue("Last-Modified", Last_Modified);
			tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
			tC.setPropertyValue("Vary", Vary);
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET-OnOrAfterMetadataBasicList');
		def expXML = tStep.httpRequest.response.getResponseContent();
		String Vary=null;
		String Cache_Control = null;
		String ETag = null;
		//String Expires   = null;
		//String Last_Modified = null;
		String x_Transaction_Info = null;
		
		tStep.httpRequest.response.responseHeaders.each() { header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				/*case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;*/
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					
			}
		}
		
		tC.setPropertyValue("Cache-Control", Cache_Control);
		tC.setPropertyValue("ETag", ETag);
		//tC.setPropertyValue("Expires", Expires);
		//tC.setPropertyValue("Last-Modified", Last_Modified);
		tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
		tC.setPropertyValue("Vary", Vary);
	}


</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==null)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==null)
		assert 1==2
		
		def Expires=tC.getPropertyValue("Expires")
		if(Expires==null)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==null)
		assert 1==2
		
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==null)
		assert 1==2
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==false)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==false)
		assert 1==2
		
		/*def Expires=tC.getPropertyValue("Expires")
		if(Expires==false)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==false)
		assert 1==2
		*/
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==false)
		assert 1==2

		def Vary=tC.getPropertyValue("Vary")
		if(Vary==null)
		assert 1==2

	}</script></con:config></con:testStep><con:testStep type="groovy" name="Extract The Response Header Last Modified"><con:settings/><con:config><script>/*Extracting ETag from response and storing it in Project level Property*/
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET-OnOrAfterMetadataBasicList');
def expXML = tStep.httpRequest.response.getResponseContent();

String Last_Modified = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;
	}
}

tP.setPropertyValue("Last-Modified", Last_Modified);
	
}
</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>TC_DECE_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-DDThh:mm:ss.sTZD</con:value></con:property><con:property><con:name>sName</con:name><con:value>P1_MetadataBasicList</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn%3Adece%3Acid%3Afile%3AAL_WEB_PORTAL_NUMBERS_925641.txt</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>925641</con:value></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\\DECE\\2222_concat.pem</con:value></con:property><con:property><con:name>onorafter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1997-07-19T5%3A8%3A5.45%2B01%3A00</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ns2="${#Project#md_schema}" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:OnOrAfterDateFormatIsInvalid">
      <Reason Language="en">OnOrAfter date format is invalid - 1997-07-19T5:8:5.45+01:00</Reason>
      <OriginalRequest>https://qa.p.uvvu.com:7001/rest/1/07/Asset/Metadata/Basic/List</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/07/error/en/ErrorList.html#OnOrAfterDateFormatIsInvalid</ErrorLink>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 400 Bad Request</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">403</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9bf09b2d-914c-40ea-a987-627636bad9bd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GET-FilterOffset" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
tC.setPropertyValue("onorafter",callTC.getPropertyValue("onorafter"));
tC.setPropertyValue("offset",callTC.getPropertyValue("offset"));
tC.setPropertyValue("filtercount",callTC.getPropertyValue("filtercount"));
/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET-FilterOffset");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET-FilterOffset"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List?FilterClass=urn:dece:type:viewfilter:lastmodifieddate&amp;OnOrAfter=${#TestCase#onorafter}&amp;FilterOffset=${#TestCase#offset}&amp;FilterCount=${#TestCase#filtercount}" methodName="GET-FilterOffset" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET-FilterOffset" mediaType="application/xml" sslKeystore="2222_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET-FilterOffset');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeGet");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Assertion for threshold Pagination"><con:settings/><con:config><script>/*checking in response the GetList contains maximum  values 1000 */
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def response = context.expand( '${GET-FilterOffset#Response#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]}' )

log.info response.size()

def filtercount = context.expand( '${GET-FilterOffset#ResponseAsXml#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]/@FilterCount}' )


log.info filtercount

def responseAsXml = context.expand( '${GET-FilterOffset#ResponseAsXml#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]/ns1:BasicAssetReference[1]}' )

def records = new XmlParser().parseText(response);
log.info records.value().size()

if(records.value().size().toString()!= filtercount.toString())
{
	assert 1==2;
}
}</script></con:config></con:testStep><con:testStep type="groovy" name="Extract The Response Header ETag"><con:settings/><con:config><script>/*Extracting ETag from response and storing it in Project level Property*/
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET-FilterOffset');
def expXML = tStep.httpRequest.response.getResponseContent();

String ETag = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "ETag": 
			ETag = value[0]; 
			break;
	}
}

tP.setPropertyValue("ETag", ETag);
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Assertion For  Order of dates"><con:settings/><con:config><script>/*Asserting weather the updated dates in the GetList response are in descending order */

def httpStatus = context.expand( '${#TestCase#httpStatus}' )
if(httpStatus=='HTTP/1.1 200 OK')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def response = context.expand( '${GET-FilterOffset#Response#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]}' )

log.info response
def possiblySorted = []
def records = new XmlParser().parseText(response);
log.info records

for(int i=0;i&lt;=records.DigitalAssetReference.size()-1;i++){
//log.info records.DigitalAssetReference[i].@UpdatedDate;
if(records.BasicAssetReference[i].@UpdatedDate==null)
	possiblySorted.add(records.BasicAssetReference[i].@CreatedDate);
else
	possiblySorted.add(records.BasicAssetReference[i].@UpdatedDate);
}

log.info possiblySorted;
def sortedCopy = new ArrayList&lt;>(possiblySorted)
log.info sortedCopy.sort().reverse();
if( possiblySorted != sortedCopy.sort().reverse())
{
assert 1==2
}
}</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET-FilterOffset');
		def expXML = tStep.httpRequest.response.getResponseContent();
		
		String Cache_Control = null;
		String ETag = null;
		String Expires   = null;
		String Last_Modified = null;
		String x_Transaction_Info = null;
		String Vary=null;
		tStep.httpRequest.response.responseHeaders.each() {	 header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					}
		}

			tC.setPropertyValue("Cache-Control", Cache_Control);
			tC.setPropertyValue("ETag", ETag);
			tC.setPropertyValue("Expires", Expires);
			tC.setPropertyValue("Last-Modified", Last_Modified);
			tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
			tC.setPropertyValue("Vary", Vary);
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET-FilterOffset');
		def expXML = tStep.httpRequest.response.getResponseContent();
		String Vary=null;
		String Cache_Control = null;
		String ETag = null;
		//String Expires   = null;
		//String Last_Modified = null;
		String x_Transaction_Info = null;
		
		tStep.httpRequest.response.responseHeaders.each() { header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				/*case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;*/
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					
			}
		}
		
		tC.setPropertyValue("Cache-Control", Cache_Control);
		tC.setPropertyValue("ETag", ETag);
		//tC.setPropertyValue("Expires", Expires);
		//tC.setPropertyValue("Last-Modified", Last_Modified);
		tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
		tC.setPropertyValue("Vary", Vary);
	}


</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==null)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==null)
		assert 1==2
		
		def Expires=tC.getPropertyValue("Expires")
		if(Expires==null)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==null)
		assert 1==2
		
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==null)
		assert 1==2
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==false)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==false)
		assert 1==2
		
		/*def Expires=tC.getPropertyValue("Expires")
		if(Expires==false)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==false)
		assert 1==2
		*/
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==false)
		assert 1==2

		def Vary=tC.getPropertyValue("Vary")
		if(Vary==null)
		assert 1==2

	}</script></con:config></con:testStep><con:testStep type="groovy" name="Extract The Response Header Last Modified"><con:settings/><con:config><script>/*Extracting ETag from response and storing it in Project level Property*/
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET-FilterOffset');
def expXML = tStep.httpRequest.response.getResponseContent();

String Last_Modified = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;
	}
}

tP.setPropertyValue("Last-Modified", Last_Modified);
	
}
</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>TC_DECE_MetadataBasicList_FUNC_DateFormat_With_Offset_5_FilterCount_10</con:value></con:property><con:property><con:name>sName</con:name><con:value>MetadataBasicList</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn%3Adece%3Acid%3Afile%3AAL_WEB_PORTAL_NUMBERS_915459.txt</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>915459</con:value></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\\DECE\\2222_concat.pem</con:value></con:property><con:property><con:name>onorafter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1997-07-16T19%3A20%3A30.45%2B01%3A00</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<BasicAssetList FilterMoreAvailable="true" FilterCount="10" FilterOffset="5" FilterClass="urn:dece:type:viewfilter:lastmodifieddate" xmlns="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ns2="${#Project#md_schema}" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <BasicAssetReference UpdatedDate="2013-07-29T06:30:10.103Z" CreatedDate="2013-07-29T06:30:10.103Z" CurrentStatus="urn:dece:type:status:active" ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_297200.txt"/>
   <BasicAssetReference CreatedDate="2013-07-29T06:26:42.952Z" CurrentStatus="urn:dece:type:status:active" ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_297200.txt"/>
   <BasicAssetReference CreatedDate="2013-07-29T05:33:14.582Z" CurrentStatus="urn:dece:type:status:active" ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_540193.txt"/>
   <BasicAssetReference CreatedDate="2013-07-29T05:30:07.320Z" CurrentStatus="urn:dece:type:status:active" ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_267645.txt"/>
   <BasicAssetReference CreatedDate="2013-07-26T13:51:58.265Z" CurrentStatus="urn:dece:type:status:active" ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_317492.txt"/>
   <BasicAssetReference UpdatedDate="2013-07-26T13:18:10.642Z" CreatedDate="2013-07-26T13:16:01.263Z" CurrentStatus="urn:dece:type:status:deleted" ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_837139.txt"/>
   <BasicAssetReference UpdatedDate="2013-07-26T13:13:50.047Z" CreatedDate="2013-07-26T13:13:50.047Z" CurrentStatus="urn:dece:type:status:active" ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_232698.txt"/>
   <BasicAssetReference CreatedDate="2013-07-26T13:11:38.600Z" CurrentStatus="urn:dece:type:status:active" ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_232698.txt"/>
   <BasicAssetReference CreatedDate="2013-07-26T13:07:55.287Z" CurrentStatus="urn:dece:type:status:active" ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_434577.txt"/>
   <BasicAssetReference UpdatedDate="2013-07-26T13:06:46.271Z" CreatedDate="2013-07-26T12:51:44.832Z" CurrentStatus="urn:dece:type:status:deleted" ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_618842.txt"/>
</BasicAssetList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2302</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>offset</con:name><con:value>5</con:value></con:property><con:property><con:name>filtercount</con:name><con:value>10</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9bf09b2d-914c-40ea-a987-627636bad9bd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d4a31c81-c3ef-45c9-9cf4-798170f015d8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PUT - MetadataBasicReourceStatusUpdate_Active-Pending" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="4799ef19-ff78-41e3-aff4-b79f148c40b6"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);


tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
tC.setPropertyValue("ExpectedReturnCodeStatusUpdate",callTC.getPropertyValue("ExpectedReturnCodeStatusUpdate"));
/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script RandomUpperLowerCase" disabled="true"><con:settings/><con:config><script>import generalUtils.generalUtils;

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();


myGeneralUtils = new generalUtils(log);

//x = "abcd:ef:ghij";
x=tC.getPropertyValue("randomUpperLowerURN");

y = myGeneralUtils.randomizeStringCase(x);

tC.setPropertyValue("randomUpperLowerURN_ReturnValue", y);

 log.info "randomUpperLowerURN_ReturnValue is " + tC.getPropertyValue("randomUpperLowerURN_ReturnValue");
 </script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("PUT - MetadataBasicReourceStatusUpdate_Active-Pending");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - MetadataBasicReourceStatusUpdate_Active-Pending"><con:settings/><con:config service="ResourceStatusUpdate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}/ResourceStatus/Current/Update" methodName="PUT-BasicListResourceStatusUpdate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - MetadataBasicReourceStatusUpdate_Active-Pending" mediaType="application/xml" postQueryString="false" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="${#Project#ETag}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<dece:ResourceStatus 
xmlns:dece="${#Project#Coordinator_Schema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="${#Project#Coordinator_Schema} dece.xsd">
    <dece:Current>
      <dece:Value>urn:dece:type:status:pending</dece:Value>
    </dece:Current>
  </dece:ResourceStatus>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('PUT - MetadataBasicReourceStatusUpdate_Active-Pending');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeStatusUpdate");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "303":  
		if (httpStatus != "HTTP/1.1 303 See Other") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_857479217.txt</con:value></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>202</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>20</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/2015/02/Asset/Metadata/Basic/urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_857479217.txt</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 303 See Other</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>857479217</con:value></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value>P0_Cache_TestCases_2015/02</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_10110_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicGET_MetadataBasicResourceStatusUpdate_If-Match_02_MetadataBasicListGET_If-None-Match_11_200 OK</con:value></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1PC/CON_concat.pem</con:value></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeStatusUpdate</con:name><con:value>303</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PUT - MetadataBasicReourceStatusUpdate_Pending-Active" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);


tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
tC.setPropertyValue("ExpectedReturnCodeStatusUpdate",callTC.getPropertyValue("ExpectedReturnCodeStatusUpdate"));
/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script RandomUpperLowerCase" disabled="true"><con:settings/><con:config><script>import generalUtils.generalUtils;

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();


myGeneralUtils = new generalUtils(log);

//x = "abcd:ef:ghij";
x=tC.getPropertyValue("randomUpperLowerURN");

y = myGeneralUtils.randomizeStringCase(x);

tC.setPropertyValue("randomUpperLowerURN_ReturnValue", y);

 log.info "randomUpperLowerURN_ReturnValue is " + tC.getPropertyValue("randomUpperLowerURN_ReturnValue");
 </script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("PUT - MetadataBasicReourceStatusUpdate_Pending-Active");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - MetadataBasicReourceStatusUpdate_Pending-Active"><con:settings/><con:config service="ResourceStatusUpdate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}/ResourceStatus/Current/Update" methodName="PUT-BasicListResourceStatusUpdate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - MetadataBasicReourceStatusUpdate_Pending-Active" mediaType="application/xml" postQueryString="false" sslKeystore="2222_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="${#Project#ETag}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<dece:ResourceStatus 
xmlns:dece="${#Project#Coordinator_Schema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="${#Project#Coordinator_Schema} dece.xsd">
    <dece:Current>
      <dece:Value>urn:dece:type:status:active</dece:Value>
    </dece:Current>
  </dece:ResourceStatus>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('PUT - MetadataBasicReourceStatusUpdate_Pending-Active');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeStatusUpdate");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "303":  
		if (httpStatus != "HTTP/1.1 303 See Other") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn%3Adece%3Acid%3Afile%3AAL_WEB_PORTAL_NUMBERS_616691.txt</con:value></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>202</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>20</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/07/Asset/Metadata/Basic/urn%3Adece%3Acid%3Afile%3AAL_WEB_PORTAL_NUMBERS_616691.txt</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 303 See Other</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>616691</con:value></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value>P0_Cache_TestCases</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_MetadataBasicList_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicResourceStatusUpdate_HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\\DECE\\2222_concat.pem</con:value></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeStatusUpdate</con:name><con:value>303</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PUT - MetadataBasicReourceStatusUpdate_Active-Pending_If-Unmodified-Since" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="2ad028ac-74e9-4c0e-b678-2fdabfb25879"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);


tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
tC.setPropertyValue("ExpectedReturnCodeStatusUpdate",callTC.getPropertyValue("ExpectedReturnCodeStatusUpdate"));
/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script RandomUpperLowerCase" disabled="true"><con:settings/><con:config><script>import generalUtils.generalUtils;

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();


myGeneralUtils = new generalUtils(log);

//x = "abcd:ef:ghij";
x=tC.getPropertyValue("randomUpperLowerURN");

y = myGeneralUtils.randomizeStringCase(x);

tC.setPropertyValue("randomUpperLowerURN_ReturnValue", y);

 log.info "randomUpperLowerURN_ReturnValue is " + tC.getPropertyValue("randomUpperLowerURN_ReturnValue");
 </script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("PUT - MetadataBasicReourceStatusUpdate_Active-Pending");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - MetadataBasicReourceStatusUpdate_Active-Pending"><con:settings/><con:config service="ResourceStatusUpdate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}/ResourceStatus/Current/Update" methodName="PUT-BasicListResourceStatusUpdate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - MetadataBasicReourceStatusUpdate_Active-Pending" mediaType="application/xml" postQueryString="false" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Unmodified-Since" value="${#Project#Last-Modified}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<dece:ResourceStatus 
xmlns:dece="${#Project#Coordinator_Schema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="${#Project#Coordinator_Schema} dece.xsd">
    <dece:Current>
      <dece:Value>urn:dece:type:status:pending</dece:Value>
    </dece:Current>
  </dece:ResourceStatus>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('PUT - MetadataBasicReourceStatusUpdate_Active-Pending');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeStatusUpdate");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "303":  
		if (httpStatus != "HTTP/1.1 303 See Other") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_113772713.txt</con:value></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>202</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>20</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/2015/02/Asset/Metadata/Basic/urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_113772713.txt</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 303 See Other</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>113772713</con:value></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value>P0_Cache_TestCases_2015/02</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_10115_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicGET_MetadataBasicResourceStatusUpdate_If-Unmodified-Since_02_MetadataBasicListGET_If-Modified-Since_11_ 200 OK</con:value></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1PC/CON_concat.pem</con:value></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeStatusUpdate</con:name><con:value>303</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PUT - MetadataBasicReourceStatusUpdate_Pending-Active_If-Unmodified-Since" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);


tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
tC.setPropertyValue("ExpectedReturnCodeStatusUpdate",callTC.getPropertyValue("ExpectedReturnCodeStatusUpdate"));
/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script RandomUpperLowerCase" disabled="true"><con:settings/><con:config><script>import generalUtils.generalUtils;

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();


myGeneralUtils = new generalUtils(log);

//x = "abcd:ef:ghij";
x=tC.getPropertyValue("randomUpperLowerURN");

y = myGeneralUtils.randomizeStringCase(x);

tC.setPropertyValue("randomUpperLowerURN_ReturnValue", y);

 log.info "randomUpperLowerURN_ReturnValue is " + tC.getPropertyValue("randomUpperLowerURN_ReturnValue");
 </script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("PUT - MetadataBasicReourceStatusUpdate_Pending-Active");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - MetadataBasicReourceStatusUpdate_Pending-Active"><con:settings/><con:config service="ResourceStatusUpdate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}/ResourceStatus/Current/Update" methodName="PUT-BasicListResourceStatusUpdate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - MetadataBasicReourceStatusUpdate_Pending-Active" mediaType="application/xml" postQueryString="false" sslKeystore="2222_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Unmodified-Since" value="${#Project#Last-Modified}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<dece:ResourceStatus 
xmlns:dece="${#Project#Coordinator_Schema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="${#Project#Coordinator_Schema} dece.xsd">
    <dece:Current>
      <dece:Value>urn:dece:type:status:active</dece:Value>
    </dece:Current>
  </dece:ResourceStatus>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('PUT - MetadataBasicReourceStatusUpdate_Pending-Active');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeStatusUpdate");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "303":  
		if (httpStatus != "HTTP/1.1 303 See Other") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn%3Adece%3Acid%3Afile%3AAL_WEB_PORTAL_NUMBERS_616691.txt</con:value></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>202</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>20</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/07/Asset/Metadata/Basic/urn%3Adece%3Acid%3Afile%3AAL_WEB_PORTAL_NUMBERS_616691.txt</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 303 See Other</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>616691</con:value></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value>P0_Cache_TestCases</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_MetadataBasicList_MetadataBasicListGET_MetadataBasicCreate_MetadataBasicResourceStatusUpdate_HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\\DECE\\2222_concat.pem</con:value></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeStatusUpdate</con:name><con:value>303</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties><con:property><con:name>QC_TestPlanDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestLabDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestSet</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="B HOST Test Cases Containing APIs" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="POST - MetadataBasicCreate" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="0a818fd0-6c93-49da-ad72-4680667ca15a"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
/*
*  Mapping this call only to a retailer node.
*/
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script RandomUpperLowerCase" disabled="true"><con:settings/><con:config><script>import generalUtils.generalUtils;

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();


myGeneralUtils = new generalUtils(log);

//x = "abcd:ef:ghij";
x=tC.getPropertyValue("randomUpperLowerURN");

y = myGeneralUtils.randomizeStringCase(x);

tC.setPropertyValue("randomUpperLowerURN_ReturnValue", y);

 log.info "randomUpperLowerURN_ReturnValue is " + tC.getPropertyValue("randomUpperLowerURN_ReturnValue");
 </script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("CREATE - MetadataBasicCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="CREATE - MetadataBasicCreate"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" methodName="POST MetadataBasic" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CREATE - MetadataBasicCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="discardResponse">false</con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">true</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">true</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@remove_empty_content">true</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Batch_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<BasicAsset xmlns:ns2="${#Project#md_schema}" xmlns="${#Project#Coordinator_Schema}" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#">
    <BasicData ContentID="${#TestCase#CID}">
        <ns2:UpdateNum>8</ns2:UpdateNum>
        <ns2:LocalizedInfo default="true" language="en-US">
            <ns2:TitleDisplay19>${#Project#TitleDisplay19}</ns2:TitleDisplay19>
            <ns2:TitleDisplay60>A Beautiful Mind</ns2:TitleDisplay60>
            <ns2:TitleSort>Smurfs, The</ns2:TitleSort>
            
    <ns2:ArtReference resolution="800x1200">http://upload.wikimedia.org/wikipedia/commons/5/5d/City_Hall_in_Slupsk_MG_4151_800x1200.jpg</ns2:ArtReference>
    

            <ns2:Summary190>When the evil wizard Gargamel chases the tiny blue Smurfs out of their village, they tumble from their magical world and into ours.</ns2:Summary190>
            <ns2:Summary400>When the evil wizard Gargamel chases the tiny blue Smurfs out of their village, they tumble from their magical world and into ours -- in fact, smack dab in the middle of Central Park. Just three apples high and stuck in the Big Apple, the Smurfs must find a way to get back to their village before Gargamel tracks them down.</ns2:Summary400>
            <ns2:Genre>Comedy</ns2:Genre>
            <ns2:Genre>Adventure</ns2:Genre>
            <ns2:Genre>Animation</ns2:Genre>
            <ns2:Genre>Fantasy</ns2:Genre>
            <ns2:Genre>Family</ns2:Genre>
            <ns2:VersionNotes>---</ns2:VersionNotes>
            <ns2:OriginalTitle>The Smurfs</ns2:OriginalTitle>
            <ns2:CopyrightLine>Sony</ns2:CopyrightLine>
        </ns2:LocalizedInfo>
        <ns2:LocalizedInfo default="false" language="de">
            <ns2:TitleDisplay19>Die Schlümpfe</ns2:TitleDisplay19>
            <ns2:TitleDisplay60>Die Schlümpfe</ns2:TitleDisplay60>
            <ns2:TitleSort>Schlümpfe, Die</ns2:TitleSort>
            <ns2:ArtReference resolution="800x1200">http://upload.wikimedia.org/wikipedia/commons/5/5d/City_Hall_in_Slupsk_MG_4151_800x1200.jpg</ns2:ArtReference>
            <ns2:Summary190>Die Schlümpfe verlassen ihre magische Welt &amp; erobern den Großstadt-Dschungel New York.</ns2:Summary190>
            <ns2:Summary400>Die Schlümpfe verlassen ihre magische Welt &amp; erobern den Großstadt-Dschungel New York. Gejagt vom bösen Zauberer Gargamel müssen sie ein schlumpfiges Abenteuer bestehen.</ns2:Summary400>
            <ns2:Genre>Comedy</ns2:Genre>
            <ns2:Genre>Adventure</ns2:Genre>
            <ns2:Genre>Animation</ns2:Genre>
            <ns2:Genre>Fantasy</ns2:Genre>
            <ns2:Genre>Family</ns2:Genre>
            <ns2:VersionNotes>---</ns2:VersionNotes>
            <ns2:OriginalTitle>The Smurfs</ns2:OriginalTitle>
            <ns2:CopyrightLine>Sony</ns2:CopyrightLine>
        </ns2:LocalizedInfo>
        <ns2:RunLength>PT1H43M0.000S</ns2:RunLength>
        <ns2:ReleaseYear>2010</ns2:ReleaseYear>
        <ns2:ReleaseDate>2011-07-28</ns2:ReleaseDate>
        <ns2:ReleaseHistory>
            <ns2:ReleaseType>Premiere</ns2:ReleaseType>
            <ns2:Date scheduled="false">2011-07-28T10:10:10Z</ns2:Date>
        </ns2:ReleaseHistory>
        <ns2:WorkType>Movie</ns2:WorkType>
        <ns2:RatingSet>
            <ns2:Rating>
                <ns2:Region>
                    <ns2:country>US</ns2:country>
                </ns2:Region>
                <ns2:System>ALL</ns2:System>
                <ns2:Value>Exempt</ns2:Value>
            </ns2:Rating>
        </ns2:RatingSet>
    </BasicData>

</BasicAsset>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('CREATE - MetadataBasicCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_10007_MetadataBasicList_FUNC_DateFormat_With_Offset_5_FilterCount_10 B HOST</con:value></con:property><con:property><con:name>sName</con:name><con:value>P0_MetadataBasicList</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>796661278</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">MdBasic Create Request has been accepted for processing, but the processing has not been completed</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 202 Accepted</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>98</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/2015/02/Asset/Metadata/Basic/urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_796661278.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_796661278.txt</con:value></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>checkdigit</con:name><con:value/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1PC/CON_concat.pem</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="R3-POST - MetadataBasicCreate" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
/*
*  Mapping this call only to a retailer node.
*/
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script RandomUpperLowerCase" disabled="true"><con:settings/><con:config><script>import generalUtils.generalUtils;

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();


myGeneralUtils = new generalUtils(log);

//x = "abcd:ef:ghij";
x=tC.getPropertyValue("randomUpperLowerURN");

y = myGeneralUtils.randomizeStringCase(x);

tC.setPropertyValue("randomUpperLowerURN_ReturnValue", y);

 log.info "randomUpperLowerURN_ReturnValue is " + tC.getPropertyValue("randomUpperLowerURN_ReturnValue");
 </script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("CREATE - MetadataBasicCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="CREATE - MetadataBasicCreate"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" methodName="POST MetadataBasic" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CREATE - MetadataBasicCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="2222_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="discardResponse">false</con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">true</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">true</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@remove_empty_content">true</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Batch_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<BasicAsset xmlns:ns2="${#Project#md_schema}" xmlns="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#">
    <BasicData ContentID="${#TestCase#CID}">
        <ns2:UpdateNum>8</ns2:UpdateNum>
        <ns2:LocalizedInfo default="true" language="en-US">
            <ns2:TitleDisplay19>${#Project#TitleDisplay19}</ns2:TitleDisplay19>
            <ns2:TitleDisplay60>A Beautiful Mind</ns2:TitleDisplay60>
            <ns2:TitleSort>Smurfs, The</ns2:TitleSort>
            
    <ns2:ArtReference resolution="800x1200">http://upload.wikimedia.org/wikipedia/commons/5/5d/City_Hall_in_Slupsk_MG_4151_800x1200.jpg</ns2:ArtReference>
    

            <ns2:Summary190>When the evil wizard Gargamel chases the tiny blue Smurfs out of their village, they tumble from their magical world and into ours.</ns2:Summary190>
            <ns2:Summary400>When the evil wizard Gargamel chases the tiny blue Smurfs out of their village, they tumble from their magical world and into ours -- in fact, smack dab in the middle of Central Park. Just three apples high and stuck in the Big Apple, the Smurfs must find a way to get back to their village before Gargamel tracks them down.</ns2:Summary400>
            <ns2:Genre>Comedy</ns2:Genre>
            <ns2:Genre>Adventure</ns2:Genre>
            <ns2:Genre>Animation</ns2:Genre>
            <ns2:Genre>Fantasy</ns2:Genre>
            <ns2:Genre>Family</ns2:Genre>
            <ns2:VersionNotes>---</ns2:VersionNotes>
            <ns2:OriginalTitle>The Smurfs</ns2:OriginalTitle>
            <ns2:CopyrightLine>Sony</ns2:CopyrightLine>
        </ns2:LocalizedInfo>
        <ns2:LocalizedInfo default="false" language="de">
            <ns2:TitleDisplay19>Die Schlümpfe</ns2:TitleDisplay19>
            <ns2:TitleDisplay60>Die Schlümpfe</ns2:TitleDisplay60>
            <ns2:TitleSort>Schlümpfe, Die</ns2:TitleSort>
            <ns2:ArtReference resolution="800x1200">http://upload.wikimedia.org/wikipedia/commons/5/5d/City_Hall_in_Slupsk_MG_4151_800x1200.jpg</ns2:ArtReference>
            <ns2:Summary190>Die Schlümpfe verlassen ihre magische Welt &amp; erobern den Großstadt-Dschungel New York.</ns2:Summary190>
            <ns2:Summary400>Die Schlümpfe verlassen ihre magische Welt &amp; erobern den Großstadt-Dschungel New York. Gejagt vom bösen Zauberer Gargamel müssen sie ein schlumpfiges Abenteuer bestehen.</ns2:Summary400>
            <ns2:Genre>Comedy</ns2:Genre>
            <ns2:Genre>Adventure</ns2:Genre>
            <ns2:Genre>Animation</ns2:Genre>
            <ns2:Genre>Fantasy</ns2:Genre>
            <ns2:Genre>Family</ns2:Genre>
            <ns2:VersionNotes>---</ns2:VersionNotes>
            <ns2:OriginalTitle>The Smurfs</ns2:OriginalTitle>
            <ns2:CopyrightLine>Sony</ns2:CopyrightLine>
        </ns2:LocalizedInfo>
        <ns2:RunLength>PT1H43M0.000S</ns2:RunLength>
        <ns2:ReleaseYear>2010</ns2:ReleaseYear>
        <ns2:ReleaseDate>2011-07-28</ns2:ReleaseDate>
        <ns2:ReleaseHistory>
            <ns2:ReleaseType>Premiere</ns2:ReleaseType>
            <ns2:Date scheduled="false">2011-07-28T10:10:10Z</ns2:Date>
        </ns2:ReleaseHistory>
        <ns2:WorkType>Movie</ns2:WorkType>
        <ns2:RatingSet>
            <ns2:Rating>
                <ns2:Region>
                    <ns2:country>US</ns2:country>
                </ns2:Region>
                <ns2:System>ALL</ns2:System>
                <ns2:Value>Exempt</ns2:Value>
            </ns2:Rating>
        </ns2:RatingSet>
    </BasicData>

</BasicAsset>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('CREATE - MetadataBasicCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00511_MetadataBasicList_CreatingBasicMetadata_With_R4_and_R3_And_Getting</con:value></con:property><con:property><con:name>sName</con:name><con:value>MetadataBasicList</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>781889</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>403</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>403</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>404</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>403</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ns2="${#Project#md_schema}" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:MdBasicMetadataAlreadyExist">
      <Reason Language="en">The basic metadata already exists.</Reason>
      <OriginalRequest>https://qa.p.uvvu.com:7001/rest/1/07/Asset/Metadata/Basic/</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/07/error/en/ErrorList.html#MdBasicMetadataAlreadyExist</ErrorLink>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 409 Conflict</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>672</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/07/Asset/Metadata/Basic/urn%3Adece%3Acid%3Afile%3AAL_WEB_PORTAL_NUMBERS_781889.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn%3Adece%3Acid%3Afile%3AAL_WEB_PORTAL_NUMBERS_781889.txt</con:value></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>checkdigit</con:name><con:value/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/New Certs for 1.0.1.12A/2222_concat.pem</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PUT - MetadataBasicCreate" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);


tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script RandomUpperLowerCase" disabled="true"><con:settings/><con:config><script>import generalUtils.generalUtils;

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();


myGeneralUtils = new generalUtils(log);

//x = "abcd:ef:ghij";
x=tC.getPropertyValue("randomUpperLowerURN");

y = myGeneralUtils.randomizeStringCase(x);

tC.setPropertyValue("randomUpperLowerURN_ReturnValue", y);

 log.info "randomUpperLowerURN_ReturnValue is " + tC.getPropertyValue("randomUpperLowerURN_ReturnValue");
 </script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("PUT - MetadataBasicCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - MetadataBasicCreate"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" methodName="PUT MetadataBasic" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - MetadataBasicCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="2222_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Batch_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<dece:BasicAsset xmlns:dece="${#Project#Coordinator_Schema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="${#Project#md_schema}" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="${#Project#Coordinator_Schema} NewXMLSchema.xsd ">
  <dece:BasicData ContentID="${#TestCase#CID}">
    <md:UpdateNum>70</md:UpdateNum>
    <md:LocalizedInfo default="true" language="en">
      <md:TitleDisplay19>${#Project#TitleDisplay19}</md:TitleDisplay19>
      <md:TitleDisplay60>md:TitleDisplay60_Update</md:TitleDisplay60>
      <md:TitleDisplayUnlimited>md:TitleDisplayUnlimited</md:TitleDisplayUnlimited>
      <md:TitleSort>md:TitleSort</md:TitleSort>
      <md:ArtReference resolution="800x1200">http://upload.wikimedia.org/wikipedia/commons/5/5d/City_Hall_in_Slupsk_MG_4151_800x1200.jpg</md:ArtReference>
      
      <md:Summary190 cast="true">md:Summary190</md:Summary190>
      <md:Summary400 cast="true">md:Summary400</md:Summary400>
      <md:Summary4000 cast="true">md:Summary4000</md:Summary4000>
      <md:DisplayIndicators>CC</md:DisplayIndicators>
      <md:Genre id="" level="0" source="http://tempuri.org">md:Genre</md:Genre>
      <md:Keyword>md:Keyword</md:Keyword>
      <md:VersionNotes>md:VersionNotes</md:VersionNotes>
      <md:Region>
        <md:country>US</md:country>
      </md:Region>
      <md:OriginalTitle><![CDATA[en-US_!Dr._POST_ "W" Jones!- _?_@#$%^  *()_+[]{};':",./_?_\|ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€ Ã¢â‚¬â„¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¾ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â¦ÃƒÂ¢Ã¢â€šÂ¬ ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â¡Ãƒâ€¹Ã¢â‚¬ ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â°Ãƒâ€¦ ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â¹Ãƒâ€¦Ã¢â‚¬â„¢Ãƒâ€¦Ã‚Â½ ÃƒÆ’Ã‚Â© ]]]]>><![CDATA[</md:OriginalTitle>
      <md:CopyrightLine><![CDATA[© 2012 Lions Gate Entertainment Inc. All Rights Reserved.]]]]>><![CDATA[</md:CopyrightLine>
      <md:PeopleLocal>
        <md:Job>
          <md:JobFunction scheme="">md:JobFunction</md:JobFunction>
          <md:JobDisplay language="en">md:JobDisplay</md:JobDisplay>
          <md:BillingBlockOrder>0</md:BillingBlockOrder>
          <md:Character>md:Character</md:Character>
          <md:Guest>true</md:Guest>
        </md:Job>
        <md:Name>
          <md:DisplayName language="en">md:DisplayName</md:DisplayName>
          <md:SortName language="en">md:SortName</md:SortName>
          <md:FirstGivenName>md:FirstGivenName</md:FirstGivenName>
          <md:SecondGivenName>md:SecondGivenName</md:SecondGivenName>
          <md:FamilyName>md:FamilyName</md:FamilyName>
          <md:Suffix>md:Suffix</md:Suffix>
          <md:Moniker>md:Moniker</md:Moniker>
        </md:Name>
        <md:Identifier>
          <md:Identifier>md:Identifier</md:Identifier>
          <md:Namespace>md:Namespace</md:Namespace>
          <md:ReferenceLocation>http://tempuri.org</md:ReferenceLocation>
        </md:Identifier>
        <md:Gender>male</md:Gender>
      </md:PeopleLocal>
      <md:TitleAlternate language="en" type="">md:TitleAlternate</md:TitleAlternate>
    </md:LocalizedInfo>
    <md:RunLength>P1D</md:RunLength>
    <md:ReleaseYear>2001</md:ReleaseYear>
    <md:ReleaseDate>2011-07-28T10:00:00Z</md:ReleaseDate>
    <md:ReleaseHistory>
      <md:ReleaseType wide="true">md:ReleaseType</md:ReleaseType>
      <md:DistrTerritory>
        <md:country>US</md:country>
      </md:DistrTerritory>
      <md:Date scheduled="true">2011-07-28T10:00:00Z</md:Date>
      <md:Description>md:Description</md:Description>
      <md:ReleaseOrg organizationID="">
        <md:DisplayName>md:DisplayName</md:DisplayName>
        <md:SortName>md:SortName</md:SortName>
      </md:ReleaseOrg>
    </md:ReleaseHistory>
    <md:WorkType>Movie</md:WorkType>
    <md:PictureColorType>color</md:PictureColorType>
    <md:PictureFormat>md:PictureFormat</md:PictureFormat>
    <md:ThreeD>true</md:ThreeD>
    <md:AltIdentifier>
      <md:Namespace>md:Namespace</md:Namespace>
      <md:Identifier>md:Identifier</md:Identifier>
      <md:Location>http://tempuri.org</md:Location>
    </md:AltIdentifier>
    <md:RatingSet>
      <md:NotRated condition="">true</md:NotRated>
      <md:AdultContent>true</md:AdultContent>
    </md:RatingSet>
    <md:People>
      <md:Job>
        <md:JobFunction scheme="">md:JobFunction</md:JobFunction>
        <md:JobDisplay language="en">md:JobDisplay</md:JobDisplay>
        <md:BillingBlockOrder>0</md:BillingBlockOrder>
        <md:Character>md:Character</md:Character>
        <md:Guest>true</md:Guest>
      </md:Job>
      <md:Name>
        <md:DisplayName language="en">md:DisplayName</md:DisplayName>
        <md:SortName language="en">md:SortName</md:SortName>
        <md:FirstGivenName>md:FirstGivenName</md:FirstGivenName>
        <md:SecondGivenName>md:SecondGivenName</md:SecondGivenName>
        <md:FamilyName>md:FamilyName</md:FamilyName>
        <md:Suffix>md:Suffix</md:Suffix>
        <md:Moniker>md:Moniker</md:Moniker>
      </md:Name>
      <md:Identifier>
        <md:Identifier>md:Identifier</md:Identifier>
        <md:Namespace>md:Namespace</md:Namespace>
        <md:ReferenceLocation>http://tempuri.org</md:ReferenceLocation>
      </md:Identifier>
      <md:Gender>male</md:Gender>
    </md:People>
    <md:CountryOfOrigin>
      <md:country>US</md:country>
    </md:CountryOfOrigin>
    <md:PrimarySpokenLanguage>en</md:PrimarySpokenLanguage>
    <md:AssociatedOrg organizationID="" role="">
      <md:DisplayName>md:DisplayName</md:DisplayName>
      <md:SortName>md:SortName</md:SortName>
    </md:AssociatedOrg>
    <md:SequenceInfo>
      <md:Number>0</md:Number>
      <md:HouseSequence>md:HouseSequence</md:HouseSequence>
    </md:SequenceInfo>
    
  </dece:BasicData>
 
</dece:BasicAsset>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('PUT - MetadataBasicCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeUpdate");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>202</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>98</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/07/Asset/Metadata/Basic/urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_988746.txt</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 202 Accepted</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>988746</con:value></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value>P0_MetadataBasicList</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-DDThh:mm:ss.60TZD</con:value></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">MdBasic Update Request has been accepted for processing, but the processing has not been completed</con:value></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\DECE\2222_concat.pem</con:value></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GET - MetadataBasicCreate" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script RandomUpperLowerCase" disabled="true"><con:settings/><con:config><script>import generalUtils.generalUtils;

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();


myGeneralUtils = new generalUtils(log);

//x = "abcd:ef:ghij";
x=tC.getPropertyValue("randomUpperLowerURN");

y = myGeneralUtils.randomizeStringCase(x);

tC.setPropertyValue("randomUpperLowerURN_ReturnValue", y);

 log.info "randomUpperLowerURN_ReturnValue is " + tC.getPropertyValue("randomUpperLowerURN_ReturnValue");
 </script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("REST Test Request");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="REST Test Request"><con:settings/><con:config service="MetadataBasicUpdateWithUpdateNum" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}?updatenum=${#TestCase#UpdateNum}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="REST Test Request" mediaType="application/xml" sslKeystore="2222_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("CREATE - MetadataDigitalCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - MetadataBasicCreate"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" methodName="GET MetadataBasic" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - MetadataBasicCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="2222_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Batch_HostName}</con:endpoint><con:request><![CDATA[<!-- Build 7.8.4.1 Test Sample XML file generated by XMLSpy v2008 sp1 (http://www.altova.com)--><dece:BasicAsset 
xsi:schemaLocation="http://www.decellc.org/schema/2010/10/dece Coordinator%20Interface%20Schema-v0171.xsd" 
xmlns:dece="http://www.decellc.org/schema/2011/08/coordinator" 
xmlns:md="http://www.movielabs.com/md" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<!--<dece:BasicData ContentID="urn:dece:cid:FILE:STOPANDGO.TXT">-->
<dece:BasicData ContentID="${#TestCase#CID}">
		<md:UpdateNum>${#TestCase#RandomNumberGenerated}</md:UpdateNum>
		<md:LocalizedInfo default="true" language="en-US">
			<md:TitleDisplay19>StrngTitleDis3nd</md:TitleDisplay19>
			<md:TitleDisplay60>StringTitleDisplay60</md:TitleDisplay60>
			<md:TitleSort>StringTitleSort</md:TitleSort>
			<md:ArtReference resolution="13002x13002">http://www.altova2.com</md:ArtReference>
			<md:Summary190 cast="true">StringSummary190_${#TestCase#RandomNumberGenerated}</md:Summary190>
			<md:Summary400 cast="true">StringSummary400_${#TestCase#RandomNumberGenerated}</md:Summary400>
			<md:Summary4000 cast="true">StringSummary4000_${#TestCase#RandomNumberGenerated}</md:Summary4000>
			<md:DisplayIndicators>CC</md:DisplayIndicators>
			<md:DisplayIndicators>DD</md:DisplayIndicators>
			<md:Genre>Action</md:Genre>
			<md:Genre>Horror</md:Genre>
			<md:Keyword>StringKeyword</md:Keyword>
			<md:VersionNotes>String</md:VersionNotes>
			<md:Region>
				<md:country>AA</md:country>
			</md:Region>
			<md:Region>
				<md:country>US</md:country>
			</md:Region>
			<md:OriginalTitle>StringOriginalTitle</md:OriginalTitle>
			<md:CopyrightLine>StringCopyrightLine</md:CopyrightLine>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction scheme="string">4.36</md:JobFunction>
					<md:JobDisplay>Visual Effects Artist</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String1</md:Character>
					<md:Character>String122</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Name>
					<md:DisplayName>String</md:DisplayName>
					<md:SortName>String</md:SortName>
					<md:FirstGivenName>String</md:FirstGivenName>
					<md:SecondGivenName>String</md:SecondGivenName>
					<md:FamilyName>String</md:FamilyName>
					<md:Suffix>String</md:Suffix>
					<md:Moniker>String</md:Moniker>
				</md:Name>
				<md:Identifier>
					<md:Identifier>String1</md:Identifier>
					<md:Namespace>String1</md:Namespace>
					<md:ReferenceLocation>http://www.altova1.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Gender>male</md:Gender>
			</md:PeopleLocal>
		</md:LocalizedInfo>
		<md:RunLength>P1Y2M3DT10H30M0S</md:RunLength>
		<md:ReleaseYear>2001</md:ReleaseYear>
		<md:ReleaseDate>2010-08-13</md:ReleaseDate>
		<md:ReleaseHistory>
			<md:ReleaseType>PurpleRay</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">2010-08-13</md:Date>
			<md:Description>String324342342</md:Description>
			<md:ReleaseOrg organizationID="Stringggfsg">
				<md:DisplayName>Stringsgs</md:DisplayName>
				<md:SortName>Stringsdgsdf</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:ReleaseHistory>
			<md:ReleaseType>LightBlueRay</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">2010-08-13</md:Date>
			<md:Description>String5465464</md:Description>
			<md:ReleaseOrg organizationID="String456456">
				<md:DisplayName>String45645633</md:DisplayName>
				<md:SortName>String34534533</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:WorkType>Album</md:WorkType>
		<md:PictureColorType>color</md:PictureColorType>
		<md:PictureFormat>Letterbox</md:PictureFormat>
		<md:ThreeD>true</md:ThreeD>
		<md:AltIdentifier>
			<md:Namespace>String</md:Namespace>
			<md:Identifier>String</md:Identifier>
			<md:Location>http://www.altova.com</md:Location>
		</md:AltIdentifier>
		<md:AltIdentifier>
			<md:Namespace>String1221</md:Namespace>
			<md:Identifier>String1221</md:Identifier>
			<md:Location>http://www.altova122121.com</md:Location>
		</md:AltIdentifier>
		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>MPAA</md:System>
        			<md:Value>PG-13</md:Value>
        			<md:LinkToLogo>http://www.mpaa.org/_images/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet>
<!--		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>TVPG</md:System>
        			<md:Value>TV-Y7</md:Value>
        			<md:LinkToLogo>http://www.tvguidelines.org/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet> -->
<!--		<md:RatingSet>
			<md:NotRated>true</md:NotRated>
			<md:AdultContent>true</md:AdultContent>
		</md:RatingSet> -->
		<md:People>
			<md:Job>
				<md:JobFunction scheme="string">27.13</md:JobFunction>
				<md:JobDisplay>String55</md:JobDisplay>
				<md:BillingBlockOrder>55</md:BillingBlockOrder>
				<md:Character>String55</md:Character>
				<md:Character>String55222</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="string">28.2</md:JobFunction>
				<md:JobDisplay>String66</md:JobDisplay>
				<md:BillingBlockOrder>66</md:BillingBlockOrder>
				<md:Character>String66</md:Character>
				<md:Character>String62126</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String77</md:DisplayName>
				<md:SortName>String77</md:SortName>
				<md:FirstGivenName>String77</md:FirstGivenName>
				<md:SecondGivenName>String77</md:SecondGivenName>
				<md:FamilyName>String77</md:FamilyName>
				<md:Suffix>String77</md:Suffix>
				<md:Moniker>String77</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String88</md:Identifier>
				<md:Namespace>String</md:Namespace>
				<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:People>
			<md:Job>
				<md:JobFunction scheme="String">28</md:JobFunction>
				<md:JobDisplay>String99</md:JobDisplay>
				<md:BillingBlockOrder>99</md:BillingBlockOrder>
				<md:Character>String99</md:Character>
				<md:Character>Strindfsdffdg99</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="String">27.14</md:JobFunction>
				<md:JobDisplay>String111</md:JobDisplay>
				<md:BillingBlockOrder>111</md:BillingBlockOrder>
				<md:Character>String111</md:Character>
				<md:Character>String111wrwewewewe</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String222</md:DisplayName>
				<md:SortName>String222</md:SortName>
				<md:FirstGivenName>String222</md:FirstGivenName>
				<md:SecondGivenName>String222</md:SecondGivenName>
				<md:FamilyName>String222</md:FamilyName>
				<md:Suffix>String222</md:Suffix>
				<md:Moniker>String222</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String333</md:Identifier>
				<md:Namespace>String333</md:Namespace>
				<md:ReferenceLocation>http://www.altova333.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Identifier>
				<md:Identifier>String444</md:Identifier>
				<md:Namespace>String444</md:Namespace>
				<md:ReferenceLocation>http://www.altova444.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:CountryOfOrigin>
			<md:country>AA</md:country>
		</md:CountryOfOrigin>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:SequenceInfo>
			<md:Number>0</md:Number>
			<md:HouseSequence>String</md:HouseSequence>
		</md:SequenceInfo>
		<md:Parent relationshipType="ispieceof">
		<!--	<md:ParentContentID>urn:dece:cid:org:mystudio:0067</md:ParentContentID>-->
			<md:ParentContentID>urn:dece:cid:org:mystudio:0005</md:ParentContentID> 
		</md:Parent>
	</dece:BasicData>
	<dece:ResourceStatus>
		<dece:Current>
			<dece:Value>urn:dece:type:status:active</dece:Value>
			<dece:Description>2010-08-01T09:30:47.0Z</dece:Description>
		</dece:Current>
		<dece:History>
			<dece:Prior>
				<dece:Value>urn:dece:type:status:suspended</dece:Value>
				<dece:Description>temp suspension</dece:Description>
			</dece:Prior>
			<dece:Prior>
				<dece:Value>urn:dece:type:status:active</dece:Value>
				<dece:Description>active</dece:Description>
			</dece:Prior>
		</dece:History>
	</dece:ResourceStatus>
</dece:BasicAsset>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - MetadataBasicCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeGet");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Assert 1000 threshold Pagination"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus == 'HTTP/1.1 200 OK')
{
def response = context.expand( '${GET - MetadataBasicCreate#Response}' )
log.info response

def records = new XmlSlurper().parseText(response)
log.info records
def pagination=records.BasicData.LocalizedInfo.size()

if(pagination > 1000)
assert 1==2;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract The Response Header ETag"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - MetadataBasicCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String ETag = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "ETag": 
			ETag = value[0]; 
			break;
	}
}

tP.setPropertyValue("ETag", ETag);
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET - MetadataBasicCreate');
		def expXML = tStep.httpRequest.response.getResponseContent();
		
		String Cache_Control = null;
		String ETag = null;
		String Expires   = null;
		String Last_Modified = null;
		String x_Transaction_Info = null;
		String Vary=null;
		tStep.httpRequest.response.responseHeaders.each() {	 header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					}
		}

			tC.setPropertyValue("Cache-Control", Cache_Control);
			tC.setPropertyValue("ETag", ETag);
			tC.setPropertyValue("Expires", Expires);
			tC.setPropertyValue("Last-Modified", Last_Modified);
			tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
			tC.setPropertyValue("Vary", Vary);
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET - MetadataBasicCreate');
		def expXML = tStep.httpRequest.response.getResponseContent();
		String Vary=null;
		String Cache_Control = null;
		String ETag = null;
		//String Expires   = null;
		//String Last_Modified = null;
		String x_Transaction_Info = null;
		
		tStep.httpRequest.response.responseHeaders.each() { header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				/*case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;*/
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					
			}
		}
		
		tC.setPropertyValue("Cache-Control", Cache_Control);
		tC.setPropertyValue("ETag", ETag);
		//tC.setPropertyValue("Expires", Expires);
		//tC.setPropertyValue("Last-Modified", Last_Modified);
		tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
		tC.setPropertyValue("Vary", Vary);
	}


</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==null)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==null)
		assert 1==2
		
		def Expires=tC.getPropertyValue("Expires")
		if(Expires==null)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==null)
		assert 1==2
		
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==null)
		assert 1==2
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==false)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==false)
		assert 1==2
		
		/*def Expires=tC.getPropertyValue("Expires")
		if(Expires==false)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==false)
		assert 1==2
		*/
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==false)
		assert 1==2

		def Vary=tC.getPropertyValue("Vary")
		if(Vary==null)
		assert 1==2

	}</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00011_MetadataBasicList__PERM_Access_Control_Rights_DSP_Negative</con:value></con:property><con:property><con:name>sName</con:name><con:value>MetadataBasicList</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>564742</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>403</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 404 Not Found</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn%3Adece%3Acid%3Afile%3AAL_WEB_PORTAL_NUMBERS_564742.txt</con:value></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>UpdateNum</con:name><con:value>8</con:value></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/New Certs for 1.0.1.12A/2222_concat.pem</con:value></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>3c0c931a-e669-4225-ab3e-833b21043b00</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DELETE - MetadataBasicCreate" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="5e6a559e-da2b-415e-b59b-68d50ec0156f"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script RandomUpperLowerCase" disabled="true"><con:settings/><con:config><script>import generalUtils.generalUtils;

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();


myGeneralUtils = new generalUtils(log);

//x = "abcd:ef:ghij";
x=tC.getPropertyValue("randomUpperLowerURN");

y = myGeneralUtils.randomizeStringCase(x);

tC.setPropertyValue("randomUpperLowerURN_ReturnValue", y);

 log.info "randomUpperLowerURN_ReturnValue is " + tC.getPropertyValue("randomUpperLowerURN_ReturnValue");
 </script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("DELETE - MetadataBasicCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - MetadataBasicCreate"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" methodName="DELETE MetadataBasic" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - MetadataBasicCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Batch_HostName}</con:endpoint><con:request><![CDATA[<!-- Build 7.8.4.1 Test Sample XML file generated by XMLSpy v2008 sp1 (http://www.altova.com)--><dece:BasicAsset 
xsi:schemaLocation="http://www.decellc.org/schema/2010/10/dece Coordinator%20Interface%20Schema-v0171.xsd" 
xmlns:dece="http://www.decellc.org/schema/2011/08/coordinator" 
xmlns:md="http://www.movielabs.com/md" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<!--<dece:BasicData ContentID="urn:dece:cid:FILE:STOPANDGO.TXT">-->
<dece:BasicData ContentID="${#TestCase#CID}">
		<md:UpdateNum>${#TestCase#RandomNumberGenerated}</md:UpdateNum>
		<md:LocalizedInfo default="true" language="en-US">
			<md:TitleDisplay19>StrngTitleDis3nd</md:TitleDisplay19>
			<md:TitleDisplay60>StringTitleDisplay60</md:TitleDisplay60>
			<md:TitleSort>StringTitleSort</md:TitleSort>
			<md:ArtReference resolution="13002x13002">http://www.altova2.com</md:ArtReference>
			<md:Summary190 cast="true">StringSummary190_${#TestCase#RandomNumberGenerated}</md:Summary190>
			<md:Summary400 cast="true">StringSummary400_${#TestCase#RandomNumberGenerated}</md:Summary400>
			<md:Summary4000 cast="true">StringSummary4000_${#TestCase#RandomNumberGenerated}</md:Summary4000>
			<md:DisplayIndicators>CC</md:DisplayIndicators>
			<md:DisplayIndicators>DD</md:DisplayIndicators>
			<md:Genre>Action</md:Genre>
			<md:Genre>Horror</md:Genre>
			<md:Keyword>StringKeyword</md:Keyword>
			<md:VersionNotes>String</md:VersionNotes>
			<md:Region>
				<md:country>AA</md:country>
			</md:Region>
			<md:Region>
				<md:country>US</md:country>
			</md:Region>
			<md:OriginalTitle>StringOriginalTitle</md:OriginalTitle>
			<md:CopyrightLine>StringCopyrightLine</md:CopyrightLine>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction scheme="string">4.36</md:JobFunction>
					<md:JobDisplay>Visual Effects Artist</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String1</md:Character>
					<md:Character>String122</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Name>
					<md:DisplayName>String</md:DisplayName>
					<md:SortName>String</md:SortName>
					<md:FirstGivenName>String</md:FirstGivenName>
					<md:SecondGivenName>String</md:SecondGivenName>
					<md:FamilyName>String</md:FamilyName>
					<md:Suffix>String</md:Suffix>
					<md:Moniker>String</md:Moniker>
				</md:Name>
				<md:Identifier>
					<md:Identifier>String1</md:Identifier>
					<md:Namespace>String1</md:Namespace>
					<md:ReferenceLocation>http://www.altova1.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Gender>male</md:Gender>
			</md:PeopleLocal>
		</md:LocalizedInfo>
		<md:RunLength>P1Y2M3DT10H30M0S</md:RunLength>
		<md:ReleaseYear>2001</md:ReleaseYear>
		<md:ReleaseDate>2010-08-13</md:ReleaseDate>
		<md:ReleaseHistory>
			<md:ReleaseType>PurpleRay</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">2010-08-13</md:Date>
			<md:Description>String324342342</md:Description>
			<md:ReleaseOrg organizationID="Stringggfsg">
				<md:DisplayName>Stringsgs</md:DisplayName>
				<md:SortName>Stringsdgsdf</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:ReleaseHistory>
			<md:ReleaseType>LightBlueRay</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">2010-08-13</md:Date>
			<md:Description>String5465464</md:Description>
			<md:ReleaseOrg organizationID="String456456">
				<md:DisplayName>String45645633</md:DisplayName>
				<md:SortName>String34534533</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:WorkType>Album</md:WorkType>
		<md:PictureColorType>color</md:PictureColorType>
		<md:PictureFormat>Letterbox</md:PictureFormat>
		<md:ThreeD>true</md:ThreeD>
		<md:AltIdentifier>
			<md:Namespace>String</md:Namespace>
			<md:Identifier>String</md:Identifier>
			<md:Location>http://www.altova.com</md:Location>
		</md:AltIdentifier>
		<md:AltIdentifier>
			<md:Namespace>String1221</md:Namespace>
			<md:Identifier>String1221</md:Identifier>
			<md:Location>http://www.altova122121.com</md:Location>
		</md:AltIdentifier>
		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>MPAA</md:System>
        			<md:Value>PG-13</md:Value>
        			<md:LinkToLogo>http://www.mpaa.org/_images/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet>
<!--		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>TVPG</md:System>
        			<md:Value>TV-Y7</md:Value>
        			<md:LinkToLogo>http://www.tvguidelines.org/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet> -->
<!--		<md:RatingSet>
			<md:NotRated>true</md:NotRated>
			<md:AdultContent>true</md:AdultContent>
		</md:RatingSet> -->
		<md:People>
			<md:Job>
				<md:JobFunction scheme="string">27.13</md:JobFunction>
				<md:JobDisplay>String55</md:JobDisplay>
				<md:BillingBlockOrder>55</md:BillingBlockOrder>
				<md:Character>String55</md:Character>
				<md:Character>String55222</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="string">28.2</md:JobFunction>
				<md:JobDisplay>String66</md:JobDisplay>
				<md:BillingBlockOrder>66</md:BillingBlockOrder>
				<md:Character>String66</md:Character>
				<md:Character>String62126</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String77</md:DisplayName>
				<md:SortName>String77</md:SortName>
				<md:FirstGivenName>String77</md:FirstGivenName>
				<md:SecondGivenName>String77</md:SecondGivenName>
				<md:FamilyName>String77</md:FamilyName>
				<md:Suffix>String77</md:Suffix>
				<md:Moniker>String77</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String88</md:Identifier>
				<md:Namespace>String</md:Namespace>
				<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:People>
			<md:Job>
				<md:JobFunction scheme="String">28</md:JobFunction>
				<md:JobDisplay>String99</md:JobDisplay>
				<md:BillingBlockOrder>99</md:BillingBlockOrder>
				<md:Character>String99</md:Character>
				<md:Character>Strindfsdffdg99</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="String">27.14</md:JobFunction>
				<md:JobDisplay>String111</md:JobDisplay>
				<md:BillingBlockOrder>111</md:BillingBlockOrder>
				<md:Character>String111</md:Character>
				<md:Character>String111wrwewewewe</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String222</md:DisplayName>
				<md:SortName>String222</md:SortName>
				<md:FirstGivenName>String222</md:FirstGivenName>
				<md:SecondGivenName>String222</md:SecondGivenName>
				<md:FamilyName>String222</md:FamilyName>
				<md:Suffix>String222</md:Suffix>
				<md:Moniker>String222</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String333</md:Identifier>
				<md:Namespace>String333</md:Namespace>
				<md:ReferenceLocation>http://www.altova333.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Identifier>
				<md:Identifier>String444</md:Identifier>
				<md:Namespace>String444</md:Namespace>
				<md:ReferenceLocation>http://www.altova444.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:CountryOfOrigin>
			<md:country>AA</md:country>
		</md:CountryOfOrigin>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:SequenceInfo>
			<md:Number>0</md:Number>
			<md:HouseSequence>String</md:HouseSequence>
		</md:SequenceInfo>
		<md:Parent relationshipType="ispieceof">
		<!--	<md:ParentContentID>urn:dece:cid:org:mystudio:0067</md:ParentContentID>-->
			<md:ParentContentID>urn:dece:cid:org:mystudio:0005</md:ParentContentID> 
		</md:Parent>
	</dece:BasicData>
	<dece:ResourceStatus>
		<dece:Current>
			<dece:Value>urn:dece:type:status:active</dece:Value>
			<dece:Description>2010-08-01T09:30:47.0Z</dece:Description>
		</dece:Current>
		<dece:History>
			<dece:Prior>
				<dece:Value>urn:dece:type:status:suspended</dece:Value>
				<dece:Description>temp suspension</dece:Description>
			</dece:Prior>
			<dece:Prior>
				<dece:Value>urn:dece:type:status:active</dece:Value>
				<dece:Description>active</dece:Description>
			</dece:Prior>
		</dece:History>
	</dece:ResourceStatus>
</dece:BasicAsset>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('DELETE - MetadataBasicCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeDelete");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_10007_MetadataBasicList_FUNC_DateFormat_With_Offset_5_FilterCount_10 B HOST</con:value></con:property><con:property><con:name>sName</con:name><con:value>P0_MetadataBasicList</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>374757353</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">MdBasic Delete Request has Processed Successfully</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>text/plain;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">49</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_374757353.txt</con:value></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1/CON_concat.pem</con:value></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GET-MetadataBasicList" searchProperties="true" id="0fe0733e-c700-47b7-88c5-18c55f2542c2"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET-MetadataBasicList");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET-MetadataBasicList"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET-MetadataBasicList" mediaType="application/xml" sslKeystore="CON_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Batch_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET-MetadataBasicList');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
		case "ETag": 
			ETag = value[0]; 
			break;

	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
tP.setPropertyValue("ETag", ETag);</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeGet");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Assertion for threshold Pagination"><con:settings/><con:config><script>/*checking in response the GetList contains maximum  values 1000 */
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def response = context.expand( '${GET-MetadataBasicList#Response#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]}' )
log.info response.size()

def filtercount = context.expand( '${GET-MetadataBasicList#ResponseAsXml#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]/@FilterCount}' )

log.info filtercount

def responseAsXml = context.expand( '${GET-MetadataBasicList#ResponseAsXml#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]/ns1:BasicAssetReference[1]}' )

def records = new XmlParser().parseText(response);
log.info records.value().size()

if(records.value().size().toString()!= filtercount.toString())
{
	assert 1==2;
}
}</script></con:config></con:testStep><con:testStep type="groovy" name="Extract The Response Header ETag"><con:settings/><con:config><script>/*Extracting ETag from response and storing it in Project level Property*/
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET-MetadataBasicList');
def expXML = tStep.httpRequest.response.getResponseContent();

String ETag = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "ETag": 
			ETag = value[0]; 
			break;
	}
}

tP.setPropertyValue("ETag", ETag);
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Assertion For  Order of dates"><con:settings/><con:config><script>/*Asserting weather the updated dates in the GetList response are in descending order */

def httpStatus = context.expand( '${#TestCase#httpStatus}' )
if(httpStatus=='HTTP/1.1 200 OK')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def response = context.expand( '${GET-MetadataBasicList#Response#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]}' )



log.info response
def possiblySorted = []
def records = new XmlParser().parseText(response);
log.info records

for(int i=0;i&lt;=records.BasicAssetReference.size()-1;i++){
//log.info records.DigitalAssetReference[i].@UpdatedDate;
if(records.BasicAssetReference[i].@UpdatedDate==null)
	possiblySorted.add(records.BasicAssetReference[i].@CreatedDate);
else
	possiblySorted.add(records.BasicAssetReference[i].@UpdatedDate);

}

log.info possiblySorted;
def sortedCopy = new ArrayList&lt;>(possiblySorted)
log.info sortedCopy.sort().reverse();
if( possiblySorted != sortedCopy.sort().reverse())
{
assert 1==2
}
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET-MetadataBasicList');
		def expXML = tStep.httpRequest.response.getResponseContent();
		
		String Cache_Control = null;
		String ETag = null;
		String Expires   = null;
		String Last_Modified = null;
		String x_Transaction_Info = null;
		String Vary=null;
		tStep.httpRequest.response.responseHeaders.each() {	 header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					}
		}

			tC.setPropertyValue("Cache-Control", Cache_Control);
			tC.setPropertyValue("ETag", ETag);
			tC.setPropertyValue("Expires", Expires);
			tC.setPropertyValue("Last-Modified", Last_Modified);
			tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
			tC.setPropertyValue("Vary", Vary);
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET-MetadataBasicList');
		def expXML = tStep.httpRequest.response.getResponseContent();
		String Vary=null;
		String Cache_Control = null;
		String ETag = null;
		//String Expires   = null;
		//String Last_Modified = null;
		String x_Transaction_Info = null;
		
		tStep.httpRequest.response.responseHeaders.each() { header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				/*case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;*/
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					
			}
		}
		
		tC.setPropertyValue("Cache-Control", Cache_Control);
		tC.setPropertyValue("ETag", ETag);
		//tC.setPropertyValue("Expires", Expires);
		//tC.setPropertyValue("Last-Modified", Last_Modified);
		tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
		tC.setPropertyValue("Vary", Vary);
	}


</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==null)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==null)
		assert 1==2
		
		def Expires=tC.getPropertyValue("Expires")
		if(Expires==null)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==null)
		assert 1==2
		
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==null)
		assert 1==2
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==false)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==false)
		assert 1==2
		
		/*def Expires=tC.getPropertyValue("Expires")
		if(Expires==false)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==false)
		assert 1==2
		*/
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==false)
		assert 1==2

		def Vary=tC.getPropertyValue("Vary")
		if(Vary==null)
		assert 1==2

	}</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>TC_DECE_10005_MetadataBasicList__PERM_Access_Control_Rights_Content Provider_Successful B HOST</con:value></con:property><con:property><con:name>sName</con:name><con:value>P0_MetadataBasicList</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_262624102.txt</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>262624102</con:value></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1/CON_concat.pem</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<dece:BasicAssetList FilterClass="urn:dece:type:viewfilter:lastmodifieddate" FilterOffset="0" FilterCount="1000" FilterMoreAvailable="true" xmlns:dece="http://www.decellc.org/schema/2015/03/coordinator" xmlns:md="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#">
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_262624102.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:25:06.972Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:418113725" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:24:20.200Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:418113725" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:24:20.200Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:418113725" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:24:20.200Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:418113725" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:24:20.200Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:414207500" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:23:16.493Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:414207500" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:23:16.493Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:414207500" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:23:16.493Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:414207500" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:23:16.493Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:612661078" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:22:36.311Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:498187683" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:20:52.173Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:498187683" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:20:52.173Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:498187683" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:20:52.173Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:498187683" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:20:52.173Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:983328947" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:19:46.099Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:983328947" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:19:46.099Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:983328947" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:19:46.099Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:983328947" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:19:46.099Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:424049900" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:17:06.395Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:424049900" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:17:06.395Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:424049900" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:17:06.395Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:424049900" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:17:06.395Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:119439043" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:15:44.855Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:119439043" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:15:44.855Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:119439043" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:15:44.855Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:119439043" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:15:44.855Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:550268511" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:15:25.154Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:502374417" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:13:31.108Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:502374417" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:13:31.108Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:502374417" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:13:31.108Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:502374417" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:13:31.108Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:539051519" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:12:05.748Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:539051519" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:12:05.748Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:539051519" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:12:05.748Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:539051519" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:12:05.748Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:572050422" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:11:34.805Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:809615001" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:09:58.792Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:809615001" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:09:58.792Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:809615001" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:09:58.792Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:809615001" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:09:58.792Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:4051" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:08:26.806Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:4051" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:08:26.806Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:4051" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:08:26.806Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:4051" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:08:26.806Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:829747700" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:06:17.628Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:829747700" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:06:17.628Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:829747700" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:06:17.628Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:829747700" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:06:17.628Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:915472946" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:04:50.893Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:915472946" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:04:50.893Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:915472946" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:04:50.893Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:915472946" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:04:50.893Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:474620560" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:02:40.973Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:474620560" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:02:40.973Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:474620560" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:02:40.973Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:474620560" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:02:40.973Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:289895670" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:01:15.484Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:289895670" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:01:15.484Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:289895670" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:01:15.484Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:289895670" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T12:01:15.484Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:500786332" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:59:02.571Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:500786332" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:59:02.571Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:500786332" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:59:02.571Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:500786332" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:59:02.571Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:794665536" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:57:33.201Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:794665536" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:57:33.201Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:794665536" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:57:33.201Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:794665536" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:57:33.201Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:407224364" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:55:11.234Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:407224364" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:55:11.234Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:407224364" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:55:11.234Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:407224364" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:55:11.234Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:891260315" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:53:48.268Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:891260315" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:53:48.268Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:891260315" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:53:48.268Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:891260315" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:53:48.268Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:234015260" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:51:23.153Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:234015260" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:51:23.153Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:234015260" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:51:23.153Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:234015260" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:51:23.153Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:518275885" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:51:03.393Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:518275885" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:51:03.393Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:518275885" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:51:03.393Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:518275885" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:51:03.393Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:307331972" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:48:38.290Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:307331972" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:48:38.290Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:307331972" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:48:38.290Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:307331972" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:48:38.290Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:7486" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:46:20.537Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:7486" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:46:20.537Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:7486" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:46:20.537Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:7486" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:46:20.537Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:353837829" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:45:58.983Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:353837829" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:45:58.983Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:353837829" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:45:58.983Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:353837829" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:45:58.983Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:123975222" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:42:40.583Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:123975222" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:42:40.583Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:123975222" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:42:40.583Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:123975222" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:42:40.583Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:544374334" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:42:18.020Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:544374334" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:42:18.020Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:544374334" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:42:18.020Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:544374334" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:42:18.020Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:529728941" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:38:58.675Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:529728941" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:38:58.675Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:529728941" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:38:58.675Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:529728941" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:38:58.675Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:296636086" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:38:18.719Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:296636086" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:38:18.719Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:296636086" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:38:18.719Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:296636086" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:38:18.719Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:23348" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:35:18.964Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:23348" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:35:18.964Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:23348" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:35:18.964Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:23348" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:35:18.964Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:368493127" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:35:16.702Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:368493127" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:35:16.702Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:368493127" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:35:16.702Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:368493127" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:35:16.702Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:987421645" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:31:38.223Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:987421645" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:31:38.223Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:987421645" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:31:38.223Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:987421645" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:31:38.223Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:660522711" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:31:38.205Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:660522711" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:31:38.205Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:660522711" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:31:38.205Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:660522711" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:31:38.205Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:716050600" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:27:42.843Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:716050600" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:27:42.843Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:716050600" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:27:42.843Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:716050600" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:27:42.843Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:88441" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:27:34.579Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:88441" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:27:34.579Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:88441" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:27:34.579Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:88441" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:27:34.579Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:799483245" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:24:02.318Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:799483245" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:24:02.318Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:799483245" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:24:02.318Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:799483245" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:24:02.318Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:3099" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:23:51.091Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:3099" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:23:51.091Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:3099" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:23:51.091Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:3099" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:23:51.091Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:96932" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:21:13.438Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:96932" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:21:13.438Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:96932" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:21:13.438Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:96932" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:21:13.438Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:737069296" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:20:18.858Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:737069296" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:20:18.858Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:737069296" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:20:18.858Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:737069296" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:20:18.858Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:841724286" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:17:22.295Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:841724286" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:17:22.295Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:841724286" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:17:22.295Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:841724286" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:17:22.295Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:598290746" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:16:26.034Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:598290746" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:16:26.034Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:598290746" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:16:26.034Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:598290746" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:16:26.034Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:465192294" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:13:38.287Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:465192294" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:13:38.287Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:465192294" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:13:38.287Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:465192294" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:13:38.287Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:509374237" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:12:41.501Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:509374237" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:12:41.501Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:509374237" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:12:41.501Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:509374237" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:12:41.501Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:221722612" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:09:51.515Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:221722612" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:09:51.515Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:221722612" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:09:51.515Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:221722612" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:09:51.515Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:196105302" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:09:00.568Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:196105302" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:09:00.568Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:196105302" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:09:00.568Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:196105302" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:09:00.568Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:379483841" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:05:40.727Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:379483841" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:05:40.727Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:379483841" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:05:40.727Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:379483841" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:05:40.727Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:324263334" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:05:16.461Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:324263334" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:05:16.461Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:324263334" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:05:16.461Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:324263334" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:05:16.461Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:498822116" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:03:25.731Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:498822116" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:03:25.731Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:498822116" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:02:50.318Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:498822116" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:02:50.318Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:498822116" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:02:50.318Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:498822116" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:02:50.318Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:501555070" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:02:03.025Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:501555070" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:02:03.025Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:501555070" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:02:03.025Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:501555070" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:02:03.025Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:48692" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:01:46.726Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:48692" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:01:46.726Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:96138" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:01:20.806Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:96138" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:01:20.806Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:48692" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:01:19.532Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:48692" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:01:19.532Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:48692" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:01:19.532Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:48692" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:01:19.532Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:96138" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:01:04.181Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:96138" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:01:04.181Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:96138" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:01:04.181Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:96138" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T11:01:04.181Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:74869" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:58:28.035Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:74869" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:58:28.035Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:551865005" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:58:18.947Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:551865005" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:58:18.947Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:3016" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:58:18.578Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:3016" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:58:18.578Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:3016" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:58:18.578Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:3016" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:58:18.578Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:74869" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:58:12.626Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:74869" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:58:12.626Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:74869" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:58:12.626Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:74869" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:58:12.626Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:551865005" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:58:02.651Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:551865005" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:58:02.651Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:551865005" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:58:02.651Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:551865005" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:58:02.651Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:891793033" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:54:36.922Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:891793033" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:54:36.922Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:891793033" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:54:36.922Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:891793033" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:54:36.922Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:957633025" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:53:06.943Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:957633025" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:53:06.943Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:957633025" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:53:06.943Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:957633025" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:53:06.943Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:977905950" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:50:54.793Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:977905950" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:50:54.793Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:977905950" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:50:54.793Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:977905950" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:50:54.793Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:836523630" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:48:29.200Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:836523630" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:48:29.200Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:836523630" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:48:29.200Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:836523630" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:48:29.200Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:966018787" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:47:11.263Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:966018787" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:47:11.263Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:966018787" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:47:11.263Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:966018787" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:47:11.263Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:339014161" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:47:03.865Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:339014161" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:47:03.865Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:339014161" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:46:56.536Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:339014161" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:46:56.536Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:339014161" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:46:56.536Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:339014161" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:46:56.536Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:452499149" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:44:53.645Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:452499149" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:44:53.645Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:452499149" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:44:31.405Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:452499149" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:44:31.405Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:452499149" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:44:31.405Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:452499149" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:44:31.405Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:218877231" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:44:12.384Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:218877231" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:44:12.384Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:193438082" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:43:29.438Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:193438082" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:43:29.438Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:193438082" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:43:29.438Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:193438082" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:43:29.438Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:481417624" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:42:40.663Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:481417624" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:42:40.663Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:218877231" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:42:23.453Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:218877231" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:42:23.453Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:218877231" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:42:23.453Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:218877231" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:42:23.453Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:481417624" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:40:43.152Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:481417624" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:40:43.152Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:481417624" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:40:43.152Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:481417624" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:40:43.152Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:745553991" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:39:43.808Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:745553991" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:39:43.808Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:745553991" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:39:43.808Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:745553991" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:39:43.808Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:405895861" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:39:30.666Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:405895861" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:39:30.666Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:405895861" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:39:18.832Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:405895861" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:39:18.832Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:405895861" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:39:18.832Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:405895861" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:39:18.832Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:675744914" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:36:51.237Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:675744914" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:36:51.237Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:675744914" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:36:39.714Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:675744914" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:36:39.714Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:675744914" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:36:39.714Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:675744914" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:36:39.714Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:2763" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:35:58.058Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:2763" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:35:58.058Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:2763" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:35:58.058Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:2763" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:35:58.058Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:218869621" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:33:46.238Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:218869621" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:33:46.238Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:218869621" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:33:39.558Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:218869621" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:33:39.558Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:218869621" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:33:39.558Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:218869621" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:33:39.558Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:749781866" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:33:27.673Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:749781866" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:33:27.673Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:693619383" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:33:10.567Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:693619383" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:33:10.567Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:513543400" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:32:51.712Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:513543400" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:32:51.712Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:424546050" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:32:21.231Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:424546050" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:32:21.231Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:513543400" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:32:08.518Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:513543400" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:32:08.518Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:513543400" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:32:08.518Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:513543400" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:32:08.518Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:327822689" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:32:04.095Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:327822689" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:32:04.095Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:327822689" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:32:04.095Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:327822689" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:32:04.095Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:424546050" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:30:45.181Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:424546050" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:30:45.181Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:424546050" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:30:45.181Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:424546050" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:30:45.181Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:749781866" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:29:17.615Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:749781866" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:29:17.615Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:749781866" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:29:17.615Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:749781866" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:29:17.615Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:533821510" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:28:20.961Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:533821510" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:28:20.961Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:533821510" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:28:20.961Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:533821510" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:28:20.961Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:693619383" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:27:52.273Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:693619383" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:27:52.273Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:693619383" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:27:52.273Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:693619383" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:27:52.273Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:50856" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:27:05.621Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:50856" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:27:05.621Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:50856" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:26:23.581Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:50856" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:26:23.581Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:50856" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:26:23.581Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:50856" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:26:23.581Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:306129503" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:26:02.146Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:306129503" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:26:02.146Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:871091546" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:24:45.307Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:871091546" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:24:45.307Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:408156694" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:24:33.249Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:408156694" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:24:33.249Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:408156694" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:24:33.249Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:408156694" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:24:33.249Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:133102829" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:24:31.615Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:133102829" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:24:31.615Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:133102829" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:23:59.615Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:133102829" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:23:59.615Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:133102829" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:23:59.615Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:133102829" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:23:59.615Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:845460417" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:21:56.286Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:845460417" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:21:56.286Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:871091546" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:21:34.544Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:871091546" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:21:34.544Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:871091546" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:21:34.544Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:871091546" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:21:34.544Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:870811374" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:20:46.765Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:870811374" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:20:46.765Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:870811374" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:20:46.765Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:870811374" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:20:46.765Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:34916" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:20:23.715Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:34916" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:20:23.715Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:306129503" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:20:15.292Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:306129503" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:20:15.292Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:306129503" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:20:15.292Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:306129503" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:20:15.292Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:531934141" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:18:49.418Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:531934141" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:18:49.418Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:845460417" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:18:48.977Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:845460417" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:18:48.977Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:845460417" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:18:48.977Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:845460417" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:18:48.977Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:34916" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:18:30.291Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:34916" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:18:30.291Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:34916" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:18:30.291Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:34916" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:18:30.291Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:531934141" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:16:57.582Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:531934141" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:16:57.582Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:531934141" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:16:57.582Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:531934141" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:16:57.582Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:634940238" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:16:39.740Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:634940238" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:16:39.740Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:634940238" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:16:39.740Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:634940238" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:16:39.740Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:162508784" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:15:53.683Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:162508784" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:15:53.683Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:162508784" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:15:27.389Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:162508784" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:15:27.389Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:162508784" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:15:27.389Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:162508784" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:15:27.389Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:275383155" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:14:23.087Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:275383155" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:14:23.087Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:275383155" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:12:57.097Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:275383155" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:12:57.097Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:275383155" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:12:57.097Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:275383155" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:12:57.097Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:840612599" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:12:57.083Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:840612599" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:12:57.083Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:840612599" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:12:57.083Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:840612599" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:12:57.083Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:914093420" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:09:57.606Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:914093420" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:09:57.606Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:914093420" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:09:57.606Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:914093420" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:09:57.606Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:388317885" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:09:08.097Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:388317885" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:09:08.097Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:388317885" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:09:08.097Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:388317885" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:09:08.097Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:734556536" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:07:07.729Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:734556536" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:07:07.729Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:734556536" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:07:07.729Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:734556536" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:07:07.729Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:282370403" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:05:20.367Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:282370403" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:05:20.367Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:282370403" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:05:20.367Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:282370403" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:05:20.367Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:610088288" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:01:31.439Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:610088288" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:01:31.439Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:610088288" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:01:31.439Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:610088288" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:01:31.439Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_269086094.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T10:00:43.429Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:775836649" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:59:23.546Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_775836649.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:59:23.546Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:931610237" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:58:53.877Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_931610237.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:58:53.877Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:949537880" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:58:16.671Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_949537880.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:58:16.671Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:661298219" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:57:40.655Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:661298219" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:57:40.655Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:661298219" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:57:40.655Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:661298219" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:57:40.655Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:206177610" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:55:57.968Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_206177610.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:55:57.968Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:794353961" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:55:28.039Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_794353961.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:55:28.039Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:651158382" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:54:57.095Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_651158382.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:54:57.095Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:350516741" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:54:35.583Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:350516741" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:54:35.583Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_453916212.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:54:28.974Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:453916212" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:54:28.974Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:188696011" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:53:55.977Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:188696011" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:53:55.977Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:188696011" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:53:55.977Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:188696011" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:53:55.977Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:803155482" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:53:54.581Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_803155482.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:53:54.581Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_796626102.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:53:32.793Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_942013745.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:53:23.740Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:942013745" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:53:23.740Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:350516741" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:51:34.190Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:350516741" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:51:34.190Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:350516741" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:51:34.190Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:350516741" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:51:34.190Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:438979881" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:50:28.769Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_438979881.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:50:28.769Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_904489188.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:50:06.611Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:295977830" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:50:00.250Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_295977830.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:50:00.250Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:577296224" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:48:20.938Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:577296224" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:48:20.938Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:577296224" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:48:20.938Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:577296224" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:48:20.938Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:853965625" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:45:25.541Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:853965625" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:45:25.541Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:853965625" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:45:25.541Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:853965625" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:45:25.541Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_616974090.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:43:25.737Z" UpdatedDate="2014-11-14T09:43:25.737Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:742323437" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:00:28.011Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:472372146" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:00:07.491Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_472372146.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T09:00:07.491Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_585050585.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T08:52:48.259Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_739147536.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T08:06:48.948Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_413760999.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T08:06:11.295Z" UpdatedDate="2014-11-14T08:06:11.295Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_779459055.txt" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2014-11-14T08:02:54.705Z" UpdatedDate="2014-11-14T08:04:28.442Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_405290021.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T08:01:37.936Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_620952369.txt" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2014-11-14T07:56:04.124Z" UpdatedDate="2014-11-14T07:57:27.250Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_758762995.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T07:54:38.410Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_990394727.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T07:52:17.384Z" UpdatedDate="2014-11-14T07:52:17.384Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_802645336.txt" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2014-11-14T07:48:55.476Z" UpdatedDate="2014-11-14T07:50:13.901Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_709198834.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T07:47:35.426Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:729075779" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T07:46:49.735Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_536721029.txt" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2014-11-14T07:43:39.659Z" UpdatedDate="2014-11-14T07:45:09.667Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:482025256" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T07:42:29.920Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_482025256.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T07:42:29.920Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_146989408.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T07:40:30.787Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_882879053.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T07:37:10.675Z" UpdatedDate="2014-11-14T07:37:10.675Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:882879053" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T07:35:40.805Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:177410716" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T07:15:21.151Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_177410716.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T07:15:21.151Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:644570437" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T06:07:28.279Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_644570437.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T06:07:28.279Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:333786441" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T06:00:20.635Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_333786441.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T06:00:20.635Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:823462658" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T05:59:08.881Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_823462658.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T05:59:08.881Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:794303245" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T05:33:38.478Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_794303245.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-14T05:33:38.478Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:org:200002" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-25T11:57:12.367Z" UpdatedDate="2014-11-13T10:31:10.441Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:194315913" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-12T09:34:31.896Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_194315913.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-12T09:34:31.896Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:749302461" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-11T11:12:16.132Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_749302461.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-11T11:12:16.132Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:672384582" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-11T11:10:15.454Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_672384582.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-11T11:10:15.454Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:878958847" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-11T07:12:49.039Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_878958847.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-11T07:12:49.039Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:946064656" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T19:26:29.391Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_946064656.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T19:26:29.391Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:659803150" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T19:17:14.464Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_659803150.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T19:17:14.464Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:506377167" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T12:51:09.356Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:506377167" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T12:51:09.356Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:506377167" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T12:51:03.467Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:506377167" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T12:51:03.467Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:506377167" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T12:51:03.467Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:506377167" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T12:51:03.467Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:209985092" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T12:49:23.119Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_209985092.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T12:49:23.119Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:646830406" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T11:47:37.233Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_646830406.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T11:47:37.233Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_327349504.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T11:23:40.815Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:380257188" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T11:22:19.816Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_380257188.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T11:22:19.816Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:875690151" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T11:18:46.304Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:867965041" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T11:14:56.800Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:593925325" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T11:11:07.992Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:760538188" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T11:07:14.613Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:289728206" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T11:03:17.823Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:851363896" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T10:57:17.472Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_851363896.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T10:57:17.472Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:569236331" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T10:39:03.683Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_569236331.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T10:39:03.683Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:867835690" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T10:37:09.752Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_867835690.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T10:37:09.752Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:113569272" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T10:36:36.912Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_113569272.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T10:36:36.912Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:546266664" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T10:15:07.403Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:250959520" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T10:10:39.951Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ISSN:0317-250959520" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T10:10:39.951Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:230595485" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T10:09:31.750Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ISSN:0317-230595485" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T10:09:31.750Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_822349513.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T10:07:16.318Z" UpdatedDate="2014-11-10T10:07:16.318Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:822349513" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T10:05:30.795Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:295015835" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T10:02:18.257Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:875490200" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:58:57.053Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:608879491" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:56:17.740Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:684304131" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:53:21.732Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:793454505" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:52:59.701Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_793454505.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:52:59.701Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:670819375" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:47:17.505Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:377060256" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:46:59.175Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_377060256.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:46:59.175Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:269573361" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:44:36.519Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:109591329" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:42:58.470Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_109591329.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:42:58.470Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:337547050" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:42:29.543Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_125894311.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:41:40.998Z" UpdatedDate="2014-11-10T09:41:40.998Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:125894311" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:40:21.254Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:214853623" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:38:57.951Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_214853623.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:38:57.951Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:972012240" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:35:10.868Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_972012240.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:35:10.868Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:772853464" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:32:15.264Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_772853464.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:32:15.264Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_185343868.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:28:32.183Z" UpdatedDate="2014-11-10T09:28:32.183Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:423815811" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:28:15.651Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_423815811.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:28:15.651Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:887470975" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:24:01.190Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_887470975.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:24:01.190Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:283462401" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:20:31.924Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:283462401" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:20:31.924Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:283462401" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:20:31.924Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:283462401" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:20:31.924Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:538406380" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:20:28.048Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_538406380.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:20:28.048Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:939395292" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:17:05.749Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:939395292" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:17:05.749Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:939395292" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:17:05.749Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:939395292" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:17:05.749Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:541549644" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:15:56.517Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_541549644.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:15:56.517Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:965743078" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:14:56.639Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:965743078" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:14:56.639Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:965743078" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:14:56.639Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:965743078" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:14:56.639Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:638365506" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:13:41.667Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:638365506" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:13:41.667Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:638365506" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:13:41.667Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:638365506" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:13:41.667Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:9892" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:12:56.646Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:9892" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:12:56.646Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:9892" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:12:56.646Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:9892" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:12:56.646Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:744331092" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:12:42.192Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:744331092" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:12:42.192Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:744331092" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:12:42.192Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:744331092" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:12:42.192Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:240934533" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:12:19.583Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_240934533.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:12:19.583Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:460996079" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:12:08.322Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:460996079" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:12:08.322Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:460996079" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:12:08.322Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:460996079" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:12:08.322Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:854299890" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:11:39.266Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:854299890" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:11:39.266Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:854299890" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:11:39.266Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:854299890" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:11:39.266Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:558113948" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:09:37.710Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_558113948.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:09:37.710Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:825291293" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:08:59.133Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:825291293" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:08:59.133Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:825291293" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:08:59.133Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:825291293" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:08:59.133Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:877423403" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:03:51.262Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_877423403.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T09:03:51.262Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:602615823" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T08:22:29.788Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_602615823.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T08:22:29.788Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:251960806" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T08:19:46.781Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_251960806.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T08:19:46.781Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:893447510" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T08:16:11.404Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_893447510.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T08:16:11.404Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:528756432" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T08:13:04.333Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_528756432.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T08:13:04.333Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:735531750" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T08:09:38.478Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_735531750.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T08:09:38.478Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:457665934" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T08:05:34.523Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_457665934.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T08:05:34.523Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:61970" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T08:04:39.981Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:61970" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T08:04:39.981Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:61970" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T08:04:36.408Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:61970" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T08:04:36.408Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:61970" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T08:04:36.408Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:61970" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T08:04:36.408Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:587047603" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T08:01:59.610Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:587047603" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T08:01:59.610Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:587047603" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T08:01:57.933Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:587047603" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T08:01:57.933Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:587047603" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T08:01:57.933Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:587047603" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T08:01:57.933Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:888353579" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T08:01:29.524Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_888353579.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T08:01:29.524Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:185882376" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:57:30.077Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:185882376" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:57:30.077Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:185882376" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:57:30.077Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:185882376" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:57:30.077Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:773259830" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:53:07.281Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:773259830" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:53:07.281Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:773259830" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:53:07.281Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:773259830" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:53:07.281Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:498556165" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:51:34.134Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:498556165" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:51:34.134Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:498556165" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:51:32.039Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:498556165" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:51:32.039Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:498556165" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:51:32.039Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:498556165" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:51:32.039Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:653126235" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:49:05.746Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:653126235" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:49:05.746Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:653126235" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:49:02.834Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:653126235" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:49:02.834Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:653126235" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:49:02.834Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:653126235" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:49:02.834Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:455646305" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:46:23.857Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:455646305" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:46:23.857Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:455646305" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:46:20.538Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:455646305" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:46:20.538Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:455646305" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:46:20.538Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:455646305" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:46:20.538Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:638836214" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:45:02.970Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:638836214" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:45:02.970Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:638836214" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:45:01.352Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:638836214" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:45:01.352Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:638836214" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:45:01.352Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:638836214" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:45:01.352Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:296483075" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:43:41.496Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:296483075" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:43:41.496Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:296483075" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:43:39.112Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:296483075" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:43:39.112Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:296483075" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:43:39.112Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:296483075" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:43:39.112Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:791602849" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:41:19.534Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:791602849" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:41:19.534Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:791602849" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:41:18.162Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:791602849" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:41:18.162Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:791602849" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:41:18.162Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:791602849" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:41:18.162Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:912492610" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:38:59.493Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:912492610" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:38:59.493Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:912492610" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:38:57.536Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:912492610" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:38:57.536Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:912492610" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:38:57.536Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:912492610" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:38:57.536Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:507838103" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:37:29.594Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:507838103" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:37:29.594Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:507838103" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:37:26.106Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:507838103" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:37:26.106Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:507838103" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:37:26.106Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:507838103" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:37:26.106Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:698724287" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:35:51.550Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:698724287" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:35:51.550Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:698724287" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:35:47.418Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:698724287" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:35:47.418Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:698724287" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:35:47.418Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:698724287" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:35:47.418Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:567200009" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:34:23.808Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:567200009" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:34:23.808Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:567200009" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:34:21.780Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:567200009" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:34:21.780Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:567200009" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:34:21.780Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:567200009" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:34:21.780Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:845372519" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:32:55.198Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:845372519" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:32:55.198Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:845372519" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:32:50.380Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:845372519" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:32:50.380Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:845372519" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:32:50.380Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:845372519" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:32:50.380Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:63699" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:31:34.242Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:63699" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:31:34.242Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:63699" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:31:30.738Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:63699" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:31:30.738Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:63699" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:31:30.738Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:63699" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:31:30.738Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:345532182" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:29:11.708Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:345532182" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:29:11.708Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:345532182" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:29:08.053Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:345532182" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:29:08.053Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:345532182" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:29:08.053Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:345532182" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:29:08.053Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:596185226" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:26:12.719Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:596185226" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:26:12.719Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:596185226" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:26:09.741Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:596185226" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:26:09.741Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:596185226" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:26:09.741Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:596185226" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:26:09.741Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:249864763" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:24:38.566Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:249864763" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:24:38.566Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:249864763" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:24:35.462Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:249864763" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:24:35.462Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:249864763" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:24:35.462Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:249864763" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:24:35.462Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:871699186" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:22:49.975Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:871699186" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:22:49.975Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:871699186" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:22:46.753Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:871699186" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:22:46.753Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:871699186" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:22:46.753Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:871699186" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:22:46.753Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:60754" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:22:30.297Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:60754" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:22:30.297Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:60754" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:22:25.097Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:60754" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:22:25.097Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:60754" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:22:25.097Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:60754" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:22:25.097Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:123867322" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:21:02.547Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:123867322" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:21:02.547Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:123867322" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:20:59.048Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:123867322" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:20:59.048Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:123867322" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:20:59.048Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:123867322" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:20:59.048Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:511571083" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:19:20.436Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:511571083" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:19:20.436Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:511571083" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:19:16.058Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:511571083" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:19:16.058Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:511571083" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:19:16.058Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:511571083" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:19:16.058Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:391755177" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:16:06.734Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:391755177" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:16:06.734Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:391755177" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:15:58.696Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:391755177" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:15:58.696Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:391755177" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:15:58.696Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:391755177" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:15:58.696Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:102762461" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:12:28.275Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:102762461" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:12:28.275Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:102762461" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:12:28.275Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:102762461" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:12:28.275Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:953370515" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:09:52.819Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:953370515" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:09:52.819Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:953370515" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:09:52.819Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:953370515" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-10T07:09:52.819Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ISMN:979-0-614413434-0043-9" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T15:00:20.165Z" UpdatedDate="2014-11-09T15:00:20.165Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:614413434" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:59:10.480Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ISMN:979-0-787824014-0043-9" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:56:58.307Z" UpdatedDate="2014-11-09T14:56:58.307Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:787824014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:55:48.793Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:167659422" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:53:22.174Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:733690883" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:50:59.879Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:715457800" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:48:28.831Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:526213800" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:46:04.147Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:180565010" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:43:05.494Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_860230070.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:42:52.250Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:337314251" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:41:33.263Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_337314251.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:41:33.263Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:31944" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:38:08.610Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:576813439" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:34:37.641Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:777523195" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:30:59.339Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:WEB_PORTAL_NUMBERS_588793543.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:29:45.595Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:588793543" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:29:45.595Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:234637949" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:29:42.920Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_234637949.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:29:42.920Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:846859167" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:23:33.166Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ISMN:979-0-232411228-0043-9" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:22:37.513Z" UpdatedDate="2014-11-09T14:22:37.513Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:232411228" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:21:23.879Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:412204769" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:20:23.836Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ISMN:979-0-903032162-0043-9" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:19:06.995Z" UpdatedDate="2014-11-09T14:19:06.995Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:903032162" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:17:54.108Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:980835332" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:17:17.146Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:739550201" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:15:18.067Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:124890661" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:14:03.566Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:541780490" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:12:37.101Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:182657273" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:10:52.843Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:928775906" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:09:45.513Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:292273540" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:07:41.403Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:560363927" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:07:02.381Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:293242494" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:04:27.552Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:154617271" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:03:33.672Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_350477053.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:03:01.010Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:198968876" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:01:37.010Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_198968876.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:01:37.010Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:541799137" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T14:01:08.979Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:64280" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:58:13.259Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:914514661" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:57:50.091Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:940519693" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:55:06.997Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:635559953" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:54:43.066Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:164207127" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:52:00.328Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:406763377" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:51:33.820Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:995359335" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:50:54.970Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:WEB_PORTAL_NUMBERS_995359335.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:50:54.970Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:749754739" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:50:52.747Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_749754739.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:50:52.747Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:973243059" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:48:21.655Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:382361777" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:45:13.209Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:804004390" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:44:40.523Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:936803204" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:42:04.160Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:945625071" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:41:32.494Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:435436234" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:38:54.551Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:596898293" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:38:20.962Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:722883458" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:35:45.454Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:472446859" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:35:06.109Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:711618864" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:32:06.832Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:634025172" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:31:46.214Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:453381669" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:28:33.399Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:615122286" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:25:42.810Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:604470078" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:25:18.530Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:313984132" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:22:27.046Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:935752510" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:22:04.686Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:234554604" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:19:11.962Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp;amp; Juliet :CID%3A%3A Al_Version_234554604.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:19:11.962Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:730825878" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:18:55.843Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:730825878" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:18:55.843Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:730825878" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:18:55.843Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:730825878" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:18:55.843Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:943302568" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:18:52.384Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:838258330" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:16:38.600Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:838258330" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:16:38.600Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:838258330" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:16:38.600Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:838258330" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:16:38.600Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:790408408" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:15:58.737Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp;amp; Juliet %3ACID Al_Version_790408408.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:15:58.737Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:690269401" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:15:37.438Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:307335275" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:13:10.275Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:307335275" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:13:10.275Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:307335275" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:13:10.275Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:307335275" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:13:10.275Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:415225494" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:12:44.360Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp;amp; Juliet :CID%3A Al_Version_415225494.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:12:44.360Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:378976626" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:12:21.019Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:402042593" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:09:52.547Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:402042593" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:09:52.547Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:402042593" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:09:52.547Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:402042593" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:09:52.547Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:133654848" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:09:21.686Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp;amp; Juliet :CID Al_Version_133654848.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:09:21.686Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:605738025" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:09:03.707Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:324288310" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:06:25.458Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:324288310" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:06:25.458Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:324288310" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:06:25.458Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:324288310" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:06:25.458Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:593572745" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:05:45.996Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:741382693" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:05:33.165Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:941323321" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:03:03.274Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:941323321" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:03:03.274Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:941323321" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:03:03.274Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:941323321" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:03:03.274Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:620498670" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:02:58.699Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:620498670" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:02:58.699Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:620498670" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:02:54.220Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:620498670" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:02:54.220Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:620498670" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:02:54.220Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:620498670" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:02:54.220Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:547642086" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:02:49.187Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:547642086" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:02:49.187Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:547642086" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:02:41.135Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:547642086" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:02:41.135Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:547642086" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:02:41.135Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:547642086" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:02:41.135Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:439549744" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:02:34.716Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:669197692" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T13:02:15.844Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:823750328" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:59:13.907Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:440296188" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:58:59.303Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:440296188" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:58:59.303Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:440296188" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:58:59.303Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:440296188" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:58:59.303Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:199374855" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:58:53.856Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:568165886" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:56:03.910Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:869424471" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:55:39.601Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:869424471" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:55:39.601Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:869424471" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:55:39.601Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:869424471" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:55:39.601Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:927608039" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:55:35.991Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:678324216" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:52:23.613Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:895040328" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:52:14.754Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:895040328" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:52:14.754Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:895040328" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:52:14.754Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:895040328" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:52:14.754Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:320795822" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:52:10.331Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:865747790" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:49:11.791Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:935660015" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:48:53.368Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:901426129" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:48:52.955Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:901426129" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:48:52.955Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:901426129" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:48:52.955Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:901426129" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:48:52.955Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:385140551" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:46:01.033Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:417828491" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:45:39.550Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:417828491" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:45:39.550Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:417828491" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:45:39.550Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:417828491" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:45:39.550Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:536166113" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:45:30.776Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:441657104" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:42:50.563Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:573729355" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:42:17.483Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:573729355" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:42:17.483Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:573729355" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:42:17.483Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:573729355" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:42:17.483Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:505691218" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:42:11.525Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:505691218" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:42:11.525Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:505691218" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:42:11.525Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:505691218" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:42:11.525Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:847289893" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:42:08.638Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:847289893" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:42:08.638Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:205756578" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:42:04.668Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:847289893" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:42:04.525Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:847289893" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:42:04.525Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:847289893" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:42:04.525Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:847289893" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:42:04.525Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:893294878" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:42:01.517Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:893294878" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:42:01.517Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:893294878" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:41:56.881Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:893294878" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:41:56.881Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:893294878" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:41:56.881Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:893294878" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:41:56.881Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:613214879" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:41:52.081Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:613214879" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:41:52.081Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:613214879" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:41:40.380Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:613214879" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:41:40.380Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:613214879" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:41:40.380Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:613214879" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:41:40.380Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:200327898" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:39:36.480Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp;amp; Juliet :CID%3A%3A Al_Version_200327898.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:39:36.480Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:696480081" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:38:48.623Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:962081353" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:38:14.806Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:962081353" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:38:14.806Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:962081353" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:38:14.806Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:962081353" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:38:14.806Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:664608256" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:36:19.966Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp;amp; Juliet %3ACID Al_Version_664608256.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:36:19.966Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:713033296" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:35:30.567Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:139953679" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:34:53.287Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:139953679" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:34:53.287Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:139953679" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:34:53.287Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:139953679" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:34:53.287Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:509129703" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:33:06.458Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp;amp; Juliet :CID%3A Al_Version_509129703.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:33:06.458Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:447182210" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:32:11.896Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:986675649" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:31:35.042Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:986675649" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:31:35.042Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:986675649" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:31:35.042Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:986675649" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:31:35.042Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:168261685" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:29:49.668Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp;amp; Juliet :CID Al_Version_168261685.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:29:49.668Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:976103400" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:28:47.618Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:871411120" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:28:08.441Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:871411120" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:28:08.441Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:871411120" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:28:08.441Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:871411120" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:28:08.441Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:891103128" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:25:58.524Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:135818813" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:25:23.953Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:496413000" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:24:42.721Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:496413000" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:24:42.721Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:496413000" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:24:42.721Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:496413000" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:24:42.721Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:905569348" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:22:41.040Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:816608995" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:21:56.209Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:618930906" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:21:16.463Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:618930906" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:21:16.463Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:618930906" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:21:16.463Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:618930906" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:21:16.463Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:845632067" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:19:22.787Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:957768251" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:18:20.175Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:242814474" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:17:54.880Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:242814474" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:17:54.880Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:242814474" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:17:54.880Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:242814474" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:17:54.880Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:893429176" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:16:08.213Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:649201972" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:14:31.420Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:987245202" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-11-09T12:14:25.652Z"/>
</dece:BasicAssetList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Cache-Control</con:name><con:value>max-age=86400</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"07D19380551D2E6CE05307991F0AD9ED:26121DD1"</con:value></con:property><con:property><con:name>Expires</con:name><con:value>Sat, 15 Nov 2014 12:26:13 GMT</con:value></con:property><con:property><con:name>Last-Modified</con:name><con:value>Fri, 14 Nov 2014 12:26:09 GMT</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value>t=1415967973 VGX04QofmIgAAFdb8-EAAAAC urn:dece:org:org:dece:CON 10.31.216.1</con:value></con:property><con:property><con:name>Vary</con:name><con:value>Accept-Encoding</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>66d88acf-0713-4166-9ed8-1652beb0bb30</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GET-OnOrAfterMetadataBasicList" searchProperties="true" id="10b22cf3-67fa-4e83-8e0b-8e21cc183541"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
tC.setPropertyValue("onorafter",callTC.getPropertyValue("onorafter"));
/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET-OnOrAfterMetadataBasicList");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET-OnOrAfterMetadataBasicList"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List?FilterClass=urn:dece:type:viewfilter:lastmodifieddate&amp;OnOrAfter=${#TestCase#onorafter}" methodName="GET OnMetadataBasicList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET-OnOrAfterMetadataBasicList" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Batch_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET-OnOrAfterMetadataBasicList');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeGet");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Assertion for threshold Pagination"><con:settings/><con:config><script>/*checking in response the GetList contains maximum  values 1000 */
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def response = context.expand( '${GET-OnOrAfterMetadataBasicList#Response#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]}' )

log.info response.size()

def filtercount = context.expand( '${GET-OnOrAfterMetadataBasicList#ResponseAsXml#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]/@FilterCount}' )


log.info filtercount

def responseAsXml = context.expand( '${GET-OnOrAfterMetadataBasicList#ResponseAsXml#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]/ns1:BasicAssetReference[1]}' )

def records = new XmlParser().parseText(response);
log.info records.value().size()

if(records.value().size().toString()!= filtercount.toString())
{
	assert 1==2;
}
}</script></con:config></con:testStep><con:testStep type="groovy" name="Extract The Response Header ETag"><con:settings/><con:config><script>/*Extracting ETag from response and storing it in Project level Property*/
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET-OnOrAfterMetadataBasicList');
def expXML = tStep.httpRequest.response.getResponseContent();

String ETag = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "ETag": 
			ETag = value[0]; 
			break;
	}
}

tP.setPropertyValue("ETag", ETag);
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Assertion For  Order of dates"><con:settings/><con:config><script>/*Asserting weather the updated dates in the GetList response are in descending order */
def httpStatus = context.expand( '${#TestCase#httpStatus}' )
if(httpStatus=='HTTP/1.1 200 OK')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def response = context.expand( '${GET-OnOrAfterMetadataBasicList#Response#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]}' )

log.info response
def possiblySorted = []
def records = new XmlParser().parseText(response);
log.info records

for(int i=0;i&lt;=records.BasicAssetReference.size()-1;i++){
//log.info records.DigitalAssetReference[i].@UpdatedDate;
if(records.BasicAssetReference[i].@UpdatedDate==null)
	possiblySorted.add(records.BasicAssetReference[i].@CreatedDate);
else
	possiblySorted.add(records.BasicAssetReference[i].@UpdatedDate);
}

log.info possiblySorted;
def sortedCopy = new ArrayList&lt;>(possiblySorted)
log.info sortedCopy.sort().reverse();
if( possiblySorted != sortedCopy.sort().reverse())
{
assert 1==2
}
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET-OnOrAfterMetadataBasicList');
		def expXML = tStep.httpRequest.response.getResponseContent();
		
		String Cache_Control = null;
		String ETag = null;
		String Expires   = null;
		String Last_Modified = null;
		String x_Transaction_Info = null;
		String Vary=null;
		tStep.httpRequest.response.responseHeaders.each() {	 header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					}
		}

			tC.setPropertyValue("Cache-Control", Cache_Control);
			tC.setPropertyValue("ETag", ETag);
			tC.setPropertyValue("Expires", Expires);
			tC.setPropertyValue("Last-Modified", Last_Modified);
			tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
			tC.setPropertyValue("Vary", Vary);
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET-OnOrAfterMetadataBasicList');
		def expXML = tStep.httpRequest.response.getResponseContent();
		String Vary=null;
		String Cache_Control = null;
		String ETag = null;
		//String Expires   = null;
		//String Last_Modified = null;
		String x_Transaction_Info = null;
		
		tStep.httpRequest.response.responseHeaders.each() { header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				/*case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;*/
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					
			}
		}
		
		tC.setPropertyValue("Cache-Control", Cache_Control);
		tC.setPropertyValue("ETag", ETag);
		//tC.setPropertyValue("Expires", Expires);
		//tC.setPropertyValue("Last-Modified", Last_Modified);
		tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
		tC.setPropertyValue("Vary", Vary);
	}


</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==null)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==null)
		assert 1==2
		
		def Expires=tC.getPropertyValue("Expires")
		if(Expires==null)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==null)
		assert 1==2
		
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==null)
		assert 1==2
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==false)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==false)
		assert 1==2
		
		/*def Expires=tC.getPropertyValue("Expires")
		if(Expires==false)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==false)
		assert 1==2
		*/
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==false)
		assert 1==2

		def Vary=tC.getPropertyValue("Vary")
		if(Vary==null)
		assert 1==2

	}</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>TC_DECE_10006_MetadataBasicList_FUNC_DateFormat_Correct_YYYY-MM-DDThh:mm:ss.60TZD B HOST</con:value></con:property><con:property><con:name>sName</con:name><con:value>P0_MetadataBasicList</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_974100264.txt</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>974100264</con:value></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1/CON_concat.pem</con:value></con:property><con:property><con:name>onorafter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013-06-25T19%3A20%3A30.60%2B01%3A00</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<dece:BasicAssetList FilterClass="urn:dece:type:viewfilter:lastmodifieddate" FilterOffset="0" FilterCount="1000" FilterMoreAvailable="true" xmlns:dece="http://www.decellc.org/schema/2015/03/coordinator" xmlns:md="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#">
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_974100264.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-16T11:17:04.475Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:672919240" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-16T10:22:02.445Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_672919240.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-16T10:22:02.445Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:967350243" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-16T09:52:05.726Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:967350243" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-16T09:52:05.726Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:967350243" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-16T09:52:05.726Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:967350243" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-16T09:52:05.726Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:554939366" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-16T07:43:10.814Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:554939366" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-16T07:43:10.814Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:554939366" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-16T07:43:10.814Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:554939366" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-16T07:43:10.814Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:272583246" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-16T07:40:49.207Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:272583246" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-16T07:40:49.207Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:272583246" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-16T07:40:49.207Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:272583246" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-16T07:40:49.207Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_741667476.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-16T07:14:55.046Z" UpdatedDate="2014-10-16T07:14:55.046Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:741667476" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-16T07:13:50.810Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:843081424" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-16T07:10:17.313Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:235804698" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-15T15:07:49.416Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_235804698.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-15T15:07:49.416Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:362294528" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-15T14:42:18.697Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_362294528.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-15T14:42:18.697Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:739142223" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-15T14:38:34.598Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_739142223.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-15T14:38:34.598Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:849193682" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-15T13:42:23.801Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_849193682.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-15T13:42:23.801Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:189863307" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-15T10:36:28.880Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_189863307.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-15T10:36:28.880Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:916557099" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-15T08:13:43.322Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_916557099.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-15T08:13:43.322Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:300837878" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-15T08:03:38.694Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_300837878.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-15T08:03:38.694Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:617866889" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:54:49.406Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:617866889" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:54:49.406Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:617866889" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:54:49.406Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:617866889" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:54:49.406Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:645344324" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:52:44.269Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:645344324" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:52:44.269Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:645344324" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:52:44.269Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:645344324" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:52:44.269Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:258988408" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:49:29.572Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:258988408" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:49:29.572Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:258988408" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:49:29.572Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:258988408" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:49:29.572Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:792551529" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:46:22.571Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:792551529" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:46:22.571Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:792551529" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:46:22.571Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:792551529" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:46:22.571Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:290576027" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:43:16.445Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:290576027" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:43:16.445Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:290576027" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:43:16.445Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:290576027" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:43:16.445Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:508734131" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:40:09.449Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:508734131" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:40:09.449Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:508734131" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:40:09.449Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:508734131" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:40:09.449Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:804168987" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:40:07.254Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:804168987" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:40:07.254Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:804168987" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:40:06.327Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:804168987" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:40:06.327Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:804168987" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:40:06.327Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:804168987" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:40:06.327Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:372569506" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:40:04.860Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:372569506" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:40:04.860Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:372569506" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:40:01.454Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:372569506" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:40:01.454Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:372569506" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:40:01.454Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:372569506" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:40:01.454Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:434069957" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:36:53.473Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:434069957" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:36:53.473Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:434069957" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:36:53.473Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:434069957" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:36:53.473Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:600056592" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:33:42.743Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:600056592" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:33:42.743Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:600056592" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:33:42.743Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:600056592" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:33:42.743Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:519456763" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:30:31.241Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:519456763" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:30:31.241Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:519456763" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:30:31.241Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:519456763" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:30:31.241Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:715794311" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:27:13.859Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:715794311" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:27:13.859Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:715794311" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:27:13.859Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:715794311" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:27:13.859Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:635397019" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:23:55.046Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:635397019" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:23:55.046Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:635397019" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:23:55.046Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:635397019" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:23:55.046Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:954836416" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:20:26.634Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:954836416" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:20:26.634Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:954836416" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:20:26.634Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:954836416" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:20:26.634Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:539195997" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:20:24.486Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:539195997" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:20:24.486Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:539195997" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:20:24.486Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:539195997" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:20:24.486Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:104563837" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:20:22.967Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:104563837" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:20:22.967Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:104563837" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:20:21.971Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:104563837" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:20:21.971Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:104563837" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:20:21.971Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:104563837" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:20:21.971Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:693105238" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:20:20.747Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:693105238" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:20:20.747Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:693105238" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:20:19.361Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:693105238" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:20:19.361Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:693105238" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:20:19.361Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:693105238" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:20:19.361Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:455342213" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:20:16.030Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:455342213" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:20:16.030Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:455342213" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:20:10.668Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:455342213" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:20:10.668Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:455342213" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:20:10.668Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:455342213" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:20:10.668Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:427466337" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:16:51.951Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:427466337" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:16:51.951Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:427466337" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:16:51.951Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:427466337" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:16:51.951Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:531796972" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:13:38.131Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:531796972" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:13:38.131Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:531796972" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:13:38.131Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:531796972" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:13:38.131Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:651040242" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:10:27.701Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:651040242" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:10:27.701Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:651040242" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:10:27.701Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:651040242" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:10:27.701Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:521260137" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:07:11.576Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:521260137" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:07:11.576Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:521260137" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:07:11.576Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:521260137" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:07:11.576Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:646340251" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:03:58.124Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:646340251" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:03:58.124Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:646340251" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:03:58.124Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:646340251" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:03:58.124Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:541418277" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:00:35.982Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:541418277" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:00:35.982Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:541418277" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:00:35.982Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:541418277" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T21:00:35.982Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:501922677" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:57:22.351Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:501922677" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:57:22.351Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:501922677" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:57:22.351Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:501922677" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:57:22.351Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:500160775" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:54:13.543Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:500160775" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:54:13.543Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:500160775" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:54:13.543Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:500160775" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:54:13.543Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:208757455" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:51:07.849Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:208757455" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:51:07.849Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:208757455" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:51:07.849Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:208757455" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:51:07.849Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:500430832" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:47:55.572Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:500430832" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:47:55.572Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:500430832" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:47:55.572Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:500430832" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:47:55.572Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:369008284" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:44:48.656Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:369008284" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:44:48.656Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:369008284" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:44:48.656Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:369008284" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:44:48.656Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:199106622" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:41:35.975Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:199106622" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:41:35.975Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:199106622" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:41:35.975Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:199106622" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:41:35.975Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:775901026" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:38:24.455Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:775901026" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:38:24.455Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:775901026" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:38:24.455Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:775901026" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:38:24.455Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:990105665" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:35:07.542Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:990105665" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:35:07.542Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:990105665" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:35:07.542Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:990105665" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:35:07.542Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:928323081" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:31:58.406Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:928323081" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:31:58.406Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:928323081" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:31:58.406Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:928323081" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:31:58.406Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:313489294" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:28:47.218Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:313489294" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:28:47.218Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:313489294" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:28:47.218Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:313489294" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:28:47.218Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:509417965" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:25:36.147Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:509417965" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:25:36.147Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:509417965" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:25:36.147Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:509417965" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:25:36.147Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:723547715" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:22:16.508Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:723547715" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:22:16.508Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:723547715" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:22:16.508Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:723547715" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:22:16.508Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:717887770" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:19:06.838Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:717887770" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:19:06.838Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:717887770" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:19:06.838Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:717887770" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:19:06.838Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:151045833" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:15:46.370Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:151045833" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:15:46.370Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:151045833" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:15:46.370Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:151045833" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:15:46.370Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:808779904" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:12:11.594Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:808779904" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:12:11.594Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:808779904" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:12:11.594Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:808779904" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:12:11.594Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:852377426" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:09:05.601Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:852377426" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:09:05.601Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:852377426" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:09:05.601Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:852377426" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:09:05.601Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:586491257" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:05:53.889Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:586491257" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:05:53.889Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:586491257" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:05:53.889Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:586491257" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:05:53.889Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:526365532" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:02:39.486Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:526365532" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:02:39.486Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:526365532" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:02:39.486Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:526365532" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T20:02:39.486Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:265652324" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:59:29.535Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:265652324" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:59:29.535Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:265652324" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:59:29.535Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:265652324" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:59:29.535Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:134002457" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:56:25.735Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:134002457" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:56:25.735Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:134002457" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:56:25.735Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:134002457" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:56:25.735Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:393645767" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:53:21.449Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:393645767" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:53:21.449Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:393645767" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:53:21.449Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:393645767" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:53:21.449Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:684016466" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:50:13.941Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:684016466" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:50:13.941Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:684016466" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:50:13.941Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:684016466" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:50:13.941Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:202443660" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:47:08.982Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:202443660" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:47:08.982Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:202443660" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:47:08.982Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:202443660" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:47:08.982Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:334897458" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:44:05.095Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:334897458" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:44:05.095Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:334897458" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:44:05.095Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:334897458" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:44:05.095Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:708719847" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:40:59.865Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:708719847" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:40:59.865Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:708719847" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:40:59.865Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:708719847" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:40:59.865Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:331209824" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:37:54.007Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:331209824" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:37:54.007Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:331209824" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:37:54.007Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:331209824" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:37:54.007Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:399568839" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:34:42.543Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:399568839" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:34:42.543Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:399568839" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:34:42.543Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:399568839" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:34:42.543Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:573936955" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:31:27.530Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:573936955" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:31:27.530Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:573936955" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:31:27.530Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:573936955" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:31:27.530Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:376321058" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:28:20.522Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:376321058" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:28:20.522Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:376321058" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:28:20.522Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:376321058" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:28:20.522Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:668453164" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:25:16.743Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:668453164" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:25:16.743Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:668453164" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:25:16.743Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:668453164" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:25:16.743Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:373295347" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:22:00.379Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:373295347" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:22:00.379Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:373295347" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:22:00.379Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:373295347" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:22:00.379Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:276451217" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:18:48.027Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:276451217" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:18:48.027Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:276451217" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:18:48.027Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:276451217" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:18:48.027Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:814129918" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:15:39.725Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:814129918" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:15:39.725Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:814129918" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:15:39.725Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:814129918" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:15:39.725Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:181565042" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:12:29.840Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:181565042" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:12:29.840Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:181565042" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:12:29.840Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:181565042" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:12:29.840Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:840270332" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:09:19.309Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:840270332" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:09:19.309Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:840270332" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:09:19.309Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:840270332" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:09:19.309Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:834055428" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:06:07.533Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:834055428" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:06:07.533Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:834055428" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:06:07.533Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:834055428" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:06:07.533Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:259923944" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:02:52.541Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:259923944" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:02:52.541Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:259923944" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:02:52.541Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:259923944" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T19:02:52.541Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:430105371" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:59:38.662Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:430105371" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:59:38.662Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:430105371" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:59:38.662Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:430105371" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:59:38.662Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:116277381" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:56:28.347Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:116277381" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:56:28.347Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:116277381" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:56:28.347Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:116277381" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:56:28.347Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:392074116" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:53:15.700Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:392074116" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:53:15.700Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:392074116" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:53:15.700Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:392074116" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:53:15.700Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:956619040" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:49:54.685Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:956619040" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:49:54.685Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:956619040" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:49:54.685Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:956619040" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:49:54.685Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:976740328" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:46:39.533Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:976740328" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:46:39.533Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:976740328" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:46:39.533Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:976740328" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:46:39.533Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:234189801" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:43:16.520Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:234189801" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:43:16.520Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:234189801" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:43:16.520Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:234189801" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:43:16.520Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:666845016" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:40:02.106Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:666845016" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:40:02.106Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:666845016" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:40:02.106Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:666845016" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:40:02.106Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:313408860" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:36:46.481Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:313408860" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:36:46.481Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:313408860" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:36:46.481Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:313408860" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:36:46.481Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:995261755" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:33:25.265Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:995261755" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:33:25.265Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:995261755" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:33:25.265Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:995261755" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:33:25.265Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:281173981" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:29:58.830Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:281173981" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:29:58.830Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:281173981" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:29:58.830Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:281173981" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:29:58.830Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:534252677" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:26:47.880Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:534252677" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:26:47.880Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:534252677" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:26:47.880Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:534252677" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:26:47.880Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:512108998" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:23:38.028Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:512108998" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:23:38.028Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:512108998" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:23:38.028Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:512108998" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:23:38.028Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:128404864" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:20:30.900Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:128404864" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:20:30.900Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:128404864" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:20:30.900Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:128404864" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:20:30.900Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:447349800" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:17:15.618Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:447349800" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:17:15.618Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:447349800" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:17:15.618Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:447349800" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:17:15.618Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:924194912" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:13:58.832Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:924194912" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:13:58.832Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:924194912" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:13:58.832Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:924194912" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:13:58.832Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:704913915" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:13:41.819Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_704913915.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:13:41.819Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:943139368" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:10:41.288Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:943139368" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:10:41.288Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:943139368" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:10:41.288Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:943139368" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:10:41.288Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:167065304" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:07:18.121Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:167065304" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:07:18.121Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:167065304" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:07:18.121Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:167065304" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:07:18.121Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:480616841" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:03:52.510Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:480616841" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:03:52.510Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:480616841" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:03:52.510Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:480616841" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:03:52.510Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:5972" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:00:35.605Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:5972" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:00:35.605Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:5972" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:00:35.605Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:5972" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T18:00:35.605Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:702364330" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:57:28.637Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:702364330" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:57:28.637Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:702364330" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:57:28.637Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:702364330" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:57:28.637Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:783024806" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:54:23.824Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_783024806.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:54:23.824Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:590609104" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:54:06.212Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:590609104" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:54:06.212Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:590609104" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:54:06.212Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:590609104" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:54:06.212Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:728327469" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:50:46.439Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:728327469" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:50:46.439Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:728327469" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:50:46.439Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:728327469" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:50:46.439Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:171947664" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:49:09.361Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_171947664.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:49:09.361Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:808070850" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:47:29.088Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:808070850" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:47:29.088Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:808070850" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:47:29.088Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:808070850" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:47:29.088Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:949012851" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:44:11.976Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:949012851" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:44:11.976Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:949012851" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:44:11.976Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:949012851" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:44:11.976Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:222298502" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:40:52.119Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:222298502" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:40:52.119Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:222298502" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:40:52.119Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:222298502" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:40:52.119Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:357704203" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:37:28.234Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:357704203" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:37:28.234Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:357704203" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:37:28.234Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:357704203" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:37:28.234Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:658431193" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:34:02.983Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:658431193" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:34:02.983Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:658431193" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:34:02.983Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:658431193" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:34:02.983Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:961880516" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:30:46.315Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:961880516" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:30:46.315Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:961880516" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:30:46.315Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:961880516" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:30:46.315Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:564808122" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:27:38.567Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:564808122" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:27:38.567Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:564808122" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:27:38.567Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:564808122" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:27:38.567Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:619823590" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:25:15.537Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:619823590" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:25:15.537Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:619823590" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:25:15.537Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:619823590" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:25:15.537Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:448357081" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:23:08.086Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:448357081" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:23:08.086Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:448357081" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:23:08.086Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:448357081" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:23:08.086Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:785634941" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:19:55.397Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:785634941" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:19:55.397Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:785634941" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:19:55.397Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:785634941" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:19:55.397Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:EIDR-X:1234-942692668-F5DD-9ABC-DEF0-8:ABCD" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:17:44.772Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:44911" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:13:54.632Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:44911" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:13:54.632Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:44911" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:13:54.632Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:44911" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:13:54.632Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:703560054" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:10:42.291Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:703560054" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:10:42.291Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:703560054" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:10:42.291Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:703560054" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:10:42.291Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:83935" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:07:30.438Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:83935" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:07:30.438Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:83935" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:07:30.438Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:83935" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:07:30.438Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:3383" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:04:18.761Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:3383" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:04:18.761Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:3383" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:04:18.761Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:3383" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:04:18.761Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:709611821" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:03:14.880Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_604131045.txt" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2014-10-14T17:01:49.170Z" UpdatedDate="2014-10-14T17:03:02.704Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:59340" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:02:03.977Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:59340" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:02:03.977Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:59340" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:02:03.977Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:59340" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:02:03.977Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:604131045" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:01:49.170Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_864408946.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T17:01:41.655Z" UpdatedDate="2014-10-14T17:01:41.655Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:864408946" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:59:25.546Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_221616709.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:59:24.130Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:642338578" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:58:53.770Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:642338578" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:58:53.770Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:642338578" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:58:53.770Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:642338578" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:58:53.770Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:406716809" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:57:18.931Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_406716809.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:57:18.931Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:628339401" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:56:03.444Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:475918142" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:55:50.166Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:475918142" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:55:50.166Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:475918142" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:55:50.166Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:475918142" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:55:50.166Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:312380864" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:54:45.811Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_897386748.txt" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2014-10-14T16:53:33.022Z" UpdatedDate="2014-10-14T16:54:38.223Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:897386748" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:53:33.022Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:EIDR-X:1234-925977501-F5DD-9ABC-DEF0-8:ABCD" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:53:21.161Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:739038710" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:52:47.040Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:739038710" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:52:47.040Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:739038710" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:52:47.040Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:739038710" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:52:47.040Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_927056724.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:52:28.032Z" UpdatedDate="2014-10-14T16:52:28.032Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:927056724" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:50:25.268Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_639580051.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:50:23.853Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:303185644" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:49:22.925Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:303185644" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:49:22.925Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:303185644" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:49:22.925Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:303185644" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:49:22.925Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:245793848" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:48:14.042Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_245793848.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:48:14.042Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:805955166" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:47:01.587Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:815998404" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:46:19.907Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:815998404" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:46:19.907Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:815998404" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:46:19.907Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:815998404" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:46:19.907Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:507232344" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:45:57.808Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_841313259.txt" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2014-10-14T16:45:20.080Z" UpdatedDate="2014-10-14T16:45:54.145Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:841313259" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:45:20.080Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_816403352.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:45:16.826Z" UpdatedDate="2014-10-14T16:45:16.826Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:816403352" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:44:11.767Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_190265264.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:44:08.946Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:595068212" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:43:49.672Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:7199" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:43:12.542Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:7199" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:43:12.542Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:7199" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:43:12.542Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:7199" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:43:12.542Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:440861940" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:43:04.161Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_440861940.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:43:04.161Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:150409067" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:42:18.152Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:258621078" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:41:34.632Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_895290945.txt" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2014-10-14T16:40:57.106Z" UpdatedDate="2014-10-14T16:41:31.856Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:895290945" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:40:57.106Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:121834982" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:39:56.327Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:121834982" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:39:56.327Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:121834982" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:39:56.327Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:121834982" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:39:56.327Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:789062659" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:39:21.130Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_789062659.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:39:21.130Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_901951015.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:39:18.658Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:474797979" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:38:14.143Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_474797979.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:38:14.143Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:936293514" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:37:37.282Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_936293514.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:37:37.282Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:120399598" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:37:30.977Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_120399598.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:37:30.977Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:511424354" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:37:29.858Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:336664486" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:36:35.104Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:336664486" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:36:35.104Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:336664486" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:36:35.104Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:336664486" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:36:35.104Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:233540933" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:35:51.999Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:453575363" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:34:09.472Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:968381246" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:33:15.722Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:968381246" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:33:15.722Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:968381246" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:33:15.722Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:968381246" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:33:15.722Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:521158941" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:32:27.016Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:663294683" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:30:46.108Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:756395314" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:30:01.439Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:756395314" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:30:01.439Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:756395314" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:30:01.439Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:756395314" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:30:01.439Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:612822673" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:26:54.090Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:612822673" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:26:54.090Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:612822673" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:26:54.090Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:612822673" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:26:54.090Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:502502269" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:20:37.998Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:502502269" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:20:37.998Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:502502269" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:20:37.998Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:502502269" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:20:37.998Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:445682387" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:17:31.156Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:445682387" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:17:31.156Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:445682387" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:17:31.156Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:445682387" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:17:31.156Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:606181227" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:14:11.565Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:606181227" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:14:11.565Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:606181227" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:14:11.565Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:606181227" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:14:11.565Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:506654568" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:10:53.960Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:506654568" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:10:53.960Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:506654568" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:10:53.960Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:506654568" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:10:53.960Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:970717003" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:07:44.706Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:970717003" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:07:44.706Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:970717003" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:07:44.706Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:970717003" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:07:44.706Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:921247673" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:04:34.068Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:921247673" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:04:34.068Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:921247673" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:04:34.068Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:921247673" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:04:34.068Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:685757851" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:01:18.052Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:685757851" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:01:18.052Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:685757851" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:01:18.052Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:685757851" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T16:01:18.052Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:380096894" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T15:57:56.963Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:380096894" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T15:57:56.963Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:380096894" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T15:57:56.963Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:380096894" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T15:57:56.963Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:412533996" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T15:54:43.674Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:412533996" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T15:54:43.674Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:412533996" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T15:54:43.674Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:412533996" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T15:54:43.674Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:760237401" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T15:51:21.451Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:760237401" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T15:51:21.451Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:760237401" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T15:51:21.451Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:760237401" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T15:51:21.451Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:713260859" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T15:47:55.866Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:713260859" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T15:47:55.866Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:713260859" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T15:47:55.866Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:713260859" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T15:47:55.866Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:520356308" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T15:45:47.521Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:520356308" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T15:45:47.521Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:520356308" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T15:45:38.931Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:520356308" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T15:45:38.931Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:520356308" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T15:45:38.931Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:520356308" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T15:45:38.931Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:572238437" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T15:43:11.821Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:572238437" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T15:43:11.821Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:572238437" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T15:43:11.821Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:572238437" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T15:43:11.821Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:210000875" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T15:40:37.172Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:210000875" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T15:40:37.172Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:210000875" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T15:40:37.172Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:210000875" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T15:40:37.172Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:987765082" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T11:23:13.937Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_987765082.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T11:23:13.937Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:284552045" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T07:10:41.270Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_284552045.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T07:10:41.270Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:822603004" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T07:03:02.039Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_822603004.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T07:03:02.039Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:772337708" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T06:36:18.922Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_772337708.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T06:36:18.922Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:467550530" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T06:35:15.878Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_467550530.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-14T06:35:15.878Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:356575938" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-13T18:07:53.004Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_356575938.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-13T18:07:53.004Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:387495965" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-13T18:04:55.632Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_387495965.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-13T18:04:55.632Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:674676256" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-13T18:02:58.351Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_674676256.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-13T18:02:58.351Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:280050264" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-13T17:20:33.717Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_280050264.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-13T17:20:33.717Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:689084408" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-13T17:17:41.867Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_689084408.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-13T17:17:41.867Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:557815838" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-13T17:15:41.026Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_557815838.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-13T17:15:41.026Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:945901230" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-13T17:07:52.933Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_945901230.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-13T17:07:52.933Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:727169563" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-13T17:04:51.216Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_727169563.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-13T17:04:51.216Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:783688116" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-13T17:02:45.749Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_783688116.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-13T17:02:45.749Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:153478235" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T15:10:14.615Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:706641047" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T15:09:35.576Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:706641047" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T15:09:35.576Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:706641047" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T15:09:28.385Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:706641047" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T15:09:28.385Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:706641047" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T15:09:28.385Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:706641047" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T15:09:28.385Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_132861090.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T15:07:34.021Z" UpdatedDate="2014-10-10T15:07:34.021Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:132861090" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T15:06:02.334Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:133680898" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T15:04:11.827Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_133680898.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T15:04:11.827Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:816465287" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T15:04:06.587Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:816465287" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T15:04:06.587Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:189090881" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T15:03:51.860Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_189090881.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T15:03:51.860Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:333411888" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T15:02:58.234Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:816465287" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T15:02:50.380Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:816465287" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T15:02:50.380Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:816465287" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T15:02:50.380Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:816465287" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T15:02:50.380Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:858920946" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T15:02:48.324Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:858920946" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T15:02:48.324Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:858920946" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T15:01:59.913Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:858920946" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T15:01:59.913Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:858920946" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T15:01:59.913Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:858920946" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T15:01:59.913Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_604431091.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T15:00:57.396Z" UpdatedDate="2014-10-10T15:00:57.396Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_992857855.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T14:59:45.696Z" UpdatedDate="2014-10-10T14:59:45.696Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:604431091" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T14:59:33.490Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:992857855" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T14:58:37.678Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:119689971" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T14:57:09.072Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_119689971.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T14:57:09.072Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:998784039" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T14:55:02.361Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_998784039.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T14:55:02.361Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:638953915" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T14:52:46.174Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_638953915.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-10T14:52:46.174Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:486921951" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-09T14:47:14.897Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:441935012" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-09T14:46:48.966Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:441935012" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-09T14:46:48.966Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:441935012" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-09T14:46:45.401Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:441935012" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-09T14:46:45.401Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:441935012" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-09T14:46:45.401Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:441935012" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-09T14:46:45.401Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_423921225.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-09T14:45:08.716Z" UpdatedDate="2014-10-09T14:45:08.716Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:423921225" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-09T14:44:03.789Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:346901853" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-09T14:41:41.145Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_346901853.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-09T14:41:41.145Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:680588653" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T15:40:10.653Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_680588653.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T15:40:10.653Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:574885279" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T15:39:40.806Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:574885279" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T15:39:40.806Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:574885279" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T15:39:37.191Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:574885279" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T15:39:37.191Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:574885279" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T15:39:37.191Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:574885279" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T15:39:37.191Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:472903013" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T15:36:43.253Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_472903013.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T15:36:43.253Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:922274340" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T15:34:42.574Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_922274340.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T15:34:42.574Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:630014024" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T14:38:24.688Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_630014024.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T14:38:24.688Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:582761066" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T14:37:57.444Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:582761066" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T14:37:57.444Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:582761066" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T14:37:54.560Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:582761066" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T14:37:54.560Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:582761066" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T14:37:54.560Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:582761066" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T14:37:54.560Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:955856996" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T14:35:05.469Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_955856996.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T14:35:05.469Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:371987934" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T14:33:00.706Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_371987934.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T14:33:00.706Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:652082034" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T14:32:28.892Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:652082034" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T14:32:28.892Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:652082034" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T14:32:24.487Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:652082034" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T14:32:24.487Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:652082034" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T14:32:24.487Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:652082034" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T14:32:24.487Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:698497183" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T14:32:00.063Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_698497183.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T14:32:00.063Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:671173283" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T14:29:19.196Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_671173283.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T14:29:19.196Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:617133893" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T14:27:12.799Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_617133893.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T14:27:12.799Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:460514755" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T09:42:38.724Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:460514755" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T09:42:38.724Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:460514755" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T09:42:34.081Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:460514755" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T09:42:34.081Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:460514755" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T09:42:34.081Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:460514755" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T09:42:34.081Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:129877417" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T09:40:52.704Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_129877417.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T09:40:52.704Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:653623494" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T09:19:29.283Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_653623494.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T09:19:29.283Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:588303167" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T08:09:51.018Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:588303167" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T08:09:51.018Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:588303167" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T08:09:44.944Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:588303167" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T08:09:44.944Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:588303167" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T08:09:44.944Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:588303167" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T08:09:44.944Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:695094426" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T07:41:34.466Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:695094426" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T07:41:34.466Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:695094426" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T07:41:30.012Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:695094426" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T07:41:30.012Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:695094426" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T07:41:30.012Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:695094426" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T07:41:30.012Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:270433964" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T07:33:37.994Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_270433964.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T07:33:37.994Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:106224285" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T07:25:13.118Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_106224285.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T07:25:13.118Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:837665272" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T07:21:14.784Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_837665272.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T07:21:14.784Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:594967274" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T07:17:15.689Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_594967274.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T07:17:15.689Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:809589074" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T07:13:37.087Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_809589074.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T07:13:37.087Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:579978654" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T06:50:55.330Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_579978654.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T06:50:55.330Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:200972588" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T03:17:43.931Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_200972588.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T03:17:43.931Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:396009692" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T03:17:24.122Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_396009692.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T03:17:24.122Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:152594180" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T03:14:39.934Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_152594180.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T03:14:39.934Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:762231026" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T03:13:55.258Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_762231026.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T03:13:55.258Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:347287545" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T03:12:56.910Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_347287545.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T03:12:56.910Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:361821178" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T03:11:37.832Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_361821178.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T03:11:37.832Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_312085823.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T10:37:19.785Z" UpdatedDate="2014-10-07T10:37:19.785Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:312085823" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T10:35:54.578Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:872662987" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T09:28:19.344Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_872662987.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T09:28:19.344Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:288663770" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T09:18:31.187Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:582369576" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T05:49:52.785Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:701784839" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T05:49:28.886Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:701784839" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T05:49:28.886Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:701784839" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T05:49:25.829Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:701784839" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T05:49:25.829Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:701784839" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T05:49:25.829Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:701784839" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T05:49:25.829Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:923184676" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T05:46:25.446Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_923184676.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T05:46:25.446Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:652689702" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T05:44:01.989Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_652689702.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T05:44:01.989Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:623726042" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T05:39:09.231Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_623726042.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T05:39:09.231Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:193872421" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T05:38:34.980Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:193872421" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T05:38:34.980Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:193872421" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T05:38:30.977Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:193872421" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T05:38:30.977Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:193872421" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T05:38:30.977Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:193872421" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T05:38:30.977Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:979872628" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T05:35:18.618Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_979872628.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T05:35:18.618Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:898077645" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T05:33:11.094Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_898077645.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T05:33:11.094Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:487539022" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T04:18:00.798Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_487539022.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T04:18:00.798Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:751586745" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T04:17:18.312Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:751586745" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T04:17:18.312Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:751586745" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T04:17:10.926Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:751586745" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T04:17:10.926Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:751586745" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T04:17:10.926Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:751586745" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T04:17:10.926Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_491339207.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T04:15:34.877Z" UpdatedDate="2014-10-07T04:15:34.877Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:491339207" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T04:13:58.715Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:794668361" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T04:10:12.458Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_794668361.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T04:10:12.458Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:283460433" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T04:08:03.993Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_283460433.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T04:08:03.993Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:260033580" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T04:07:27.045Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:260033580" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T04:07:27.045Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:260033580" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T04:07:21.919Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:260033580" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T04:07:21.919Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:260033580" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T04:07:21.919Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:260033580" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T04:07:21.919Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:700070708" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T04:04:29.609Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_700070708.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T04:04:29.609Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:340076848" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T04:02:01.908Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_340076848.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T04:02:01.908Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:260586295" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T03:55:41.430Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:957645620" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T03:54:44.693Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:957645620" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T03:54:44.693Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:957645620" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T03:54:40.409Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:957645620" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T03:54:40.409Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:957645620" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T03:54:40.409Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:957645620" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T03:54:40.409Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_725905333.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T03:52:18.285Z" UpdatedDate="2014-10-07T03:52:18.285Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:725905333" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T03:51:05.882Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:804553732" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T03:38:19.431Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_804553732.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T03:38:19.431Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ISMN:979-0-571472997-0043-9" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T20:22:37.569Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ISMN:979-0-376145987-0043-9" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T20:19:31.200Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:534983585" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T20:16:21.086Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_387178110.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T20:15:15.213Z" UpdatedDate="2014-10-06T20:15:15.213Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:387178110" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T20:14:08.386Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:372053309" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T20:11:45.930Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:155219365" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T20:09:28.825Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:650763422" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T20:06:24.261Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_829352822.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T20:06:03.368Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:699486575" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T20:04:56.084Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_699486575.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T20:04:56.084Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:73328" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T20:01:33.925Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:212229751" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T19:58:18.863Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:205865911" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T19:55:12.718Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:243374703" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T19:54:10.852Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:WEB_PORTAL_NUMBERS_243374703.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T19:54:10.852Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:549666813" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T19:54:08.990Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_549666813.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T19:54:08.990Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:363298393" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T19:48:00.412Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:662940238" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T19:44:49.837Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:147870731" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T19:41:36.760Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:402623881" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T19:38:22.923Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:793977464" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T19:35:08.907Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:214138401" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T19:31:51.365Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:189230588" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T19:28:32.783Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:744296508" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T19:25:17.506Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:950544046" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T19:21:59.636Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:576390506" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T19:18:43.496Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:133529546" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T19:15:29.334Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:495667739" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T19:12:14.028Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:878939867" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T19:09:00.746Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:878305664" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T19:05:46.585Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:535093087" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T19:02:34.682Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:794205144" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:59:10.474Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:772849816" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:55:31.334Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:551499729" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:52:19.534Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:895440776" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:49:13.088Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:895440776" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:49:13.088Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:895440776" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:49:13.088Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:895440776" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:49:13.088Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:715208206" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:49:08.692Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:867925376" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:47:05.374Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:867925376" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:47:05.374Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:867925376" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:47:05.374Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:867925376" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:47:05.374Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:980670175" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:45:55.929Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:918301422" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:43:44.816Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:918301422" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:43:44.816Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:918301422" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:43:44.816Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:918301422" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:43:44.816Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:157393133" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:42:46.490Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp;amp; Juliet :CID%3A%3A Al_Version_157393133.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:42:46.490Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:658284140" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:40:35.731Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:658284140" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:40:35.731Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:658284140" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:40:35.731Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:658284140" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:40:35.731Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:665495280" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:39:38.056Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp;amp; Juliet %3ACID Al_Version_665495280.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:39:38.056Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:291546810" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:37:27.008Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:291546810" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:37:27.008Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:291546810" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:37:27.008Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:291546810" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:37:27.008Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:670135670" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:36:25.694Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp;amp; Juliet :CID%3A Al_Version_670135670.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:36:25.694Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:395668509" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:34:18.559Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:395668509" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:34:18.559Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:395668509" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:34:18.559Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:395668509" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:34:18.559Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:122185725" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:34:16.216Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:122185725" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:34:16.216Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:122185725" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:34:15.148Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:122185725" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:34:15.148Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:122185725" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:34:15.148Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:122185725" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:34:15.148Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:714480615" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:34:13.691Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:714480615" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:34:13.691Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:714480615" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:34:11.509Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:714480615" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:34:11.509Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:714480615" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:34:11.509Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:714480615" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:34:11.509Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:173772381" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:33:16.044Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:AMG:Romeo &amp;amp; Juliet :CID Al_Version_173772381.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:33:16.044Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:186417977" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:31:01.998Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:186417977" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:31:01.998Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:186417977" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:31:01.998Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:186417977" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:31:01.998Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:202360629" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:29:35.693Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:220457412" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:27:54.469Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:220457412" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:27:54.469Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:220457412" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:27:54.469Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:220457412" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:27:54.469Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:313726062" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:26:24.253Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:897692644" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:24:45.224Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:897692644" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:24:45.224Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:897692644" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:24:45.224Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:897692644" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:24:45.224Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:579027100" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:23:12.293Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:757778449" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:21:38.010Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:757778449" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:21:38.010Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:757778449" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:21:38.010Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:757778449" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:21:38.010Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:304289169" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:20:00.018Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:734202158" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:18:28.137Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:734202158" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:18:28.137Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:734202158" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:18:28.137Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:734202158" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:18:28.137Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:501696717" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:16:32.335Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:603274116" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:15:21.001Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:603274116" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:15:21.001Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:603274116" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:15:21.001Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:603274116" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:15:21.001Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:604637456" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:15:18.623Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:604637456" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:15:18.623Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:604637456" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:15:18.623Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:604637456" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:15:18.623Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:914480617" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:15:16.391Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:914480617" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:15:16.391Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:914480617" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:15:15.185Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:914480617" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:15:15.185Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:914480617" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:15:15.185Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:914480617" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:15:15.185Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:407977732" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:15:13.299Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:407977732" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:15:13.299Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:407977732" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:15:12.293Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:407977732" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:15:12.293Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:407977732" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:15:12.293Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:407977732" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:15:12.293Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:197167380" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:15:09.798Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:197167380" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:15:09.798Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:197167380" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:15:08.114Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:197167380" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:15:08.114Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:197167380" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:15:08.114Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:197167380" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:15:08.114Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:551487072" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:13:19.108Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:764407434" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:11:55.944Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:764407434" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:11:55.944Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:764407434" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:11:55.944Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:764407434" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:11:55.944Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:592534736" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:10:01.466Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:753317960" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:08:47.173Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:753317960" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:08:47.173Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:753317960" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:08:47.173Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:753317960" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:08:47.173Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:842856296" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:06:46.759Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:465030717" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:05:37.658Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:465030717" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:05:37.658Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:465030717" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:05:37.658Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:465030717" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:05:37.658Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:450899303" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:03:31.312Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:998182241" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:02:25.735Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:998182241" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:02:25.735Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:998182241" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:02:25.735Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:998182241" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:02:25.735Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:625687194" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T18:00:01.317Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:667992773" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:58:59.532Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:667992773" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:58:59.532Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:667992773" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:58:59.532Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:667992773" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:58:59.532Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:384317877" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:56:27.748Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:841631185" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:55:39.191Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:841631185" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:55:39.191Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:841631185" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:55:39.191Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:841631185" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:55:39.191Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:711412363" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:53:01.713Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:233230728" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:52:17.957Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:233230728" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:52:17.957Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:233230728" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:52:17.957Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:233230728" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:52:17.957Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:132592492" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:49:44.505Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:877711587" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:48:45.041Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:877711587" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:48:45.041Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:877711587" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:48:45.041Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:877711587" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:48:45.041Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:907456171" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:45:49.697Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:493765612" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:45:17.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:493765612" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:45:17.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:493765612" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:45:17.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:493765612" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:45:17.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:647397632" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:41:53.248Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:445278798" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:41:46.500Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:445278798" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:41:46.500Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:445278798" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:41:46.500Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:445278798" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:41:46.500Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:828117694" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:38:16.646Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:828117694" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:38:16.646Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:828117694" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:38:16.646Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:828117694" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:38:16.646Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:269325140" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:38:15.583Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:385063370" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:34:41.361Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:385063370" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:34:41.361Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:385063370" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T17:34:41.361Z"/>
</dece:BasicAssetList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Cache-Control</con:name><con:value>max-age=86400</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"0589641855ED3E22E05305991F0A496B:791ACD54"</con:value></con:property><con:property><con:name>Expires</con:name><con:value>Fri, 17 Oct 2014 11:18:12 GMT</con:value></con:property><con:property><con:name>Last-Modified</con:name><con:value>Thu, 16 Oct 2014 11:17:20 GMT</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value>t=1413458292 VD@pcAofmIgAAFcCN1kAAAAL urn:dece:org:org:dece:CON 10.31.173.1</con:value></con:property><con:property><con:name>Vary</con:name><con:value>Accept-Encoding</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9bf09b2d-914c-40ea-a987-627636bad9bd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GET-FilterOffset" searchProperties="true" id="42cef3b0-af38-42ef-baf7-888f94006ea8"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
tC.setPropertyValue("onorafter",callTC.getPropertyValue("onorafter"));
tC.setPropertyValue("offset",callTC.getPropertyValue("offset"));
tC.setPropertyValue("filtercount",callTC.getPropertyValue("filtercount"));
/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeid");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET-FilterOffset");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET-FilterOffset"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List?FilterClass=urn:dece:type:viewfilter:lastmodifieddate&amp;OnOrAfter=${#TestCase#onorafter}&amp;FilterOffset=${#TestCase#offset}&amp;FilterCount=${#TestCase#filtercount}" methodName="GET-FilterOffset" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET-FilterOffset" mediaType="application/xml" sslKeystore="CON_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Batch_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET-FilterOffset');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeGet");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Assertion for threshold Pagination"><con:settings/><con:config><script>/*checking in response the GetList contains maximum  values 1000 */
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def response = context.expand( '${GET-FilterOffset#Response#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]}' )

log.info response.size()

def filtercount = context.expand( '${GET-FilterOffset#ResponseAsXml#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]/@FilterCount}' )


log.info filtercount

def responseAsXml = context.expand( '${GET-FilterOffset#ResponseAsXml#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]/ns1:BasicAssetReference[1]}' )

def records = new XmlParser().parseText(response);
log.info records.value().size()

if(records.value().size().toString()!= filtercount.toString())
{
	assert 1==2;
}
}</script></con:config></con:testStep><con:testStep type="groovy" name="Extract The Response Header ETag"><con:settings/><con:config><script>/*Extracting ETag from response and storing it in Project level Property*/
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET-FilterOffset');
def expXML = tStep.httpRequest.response.getResponseContent();

String ETag = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "ETag": 
			ETag = value[0]; 
			break;
	}
}

tP.setPropertyValue("ETag", ETag);
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Assertion For  Order of dates"><con:settings/><con:config><script>/*Asserting weather the updated dates in the GetList response are in descending order */

def httpStatus = context.expand( '${#TestCase#httpStatus}' )
if(httpStatus=='HTTP/1.1 200 OK')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def response = context.expand( '${GET-FilterOffset#Response#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]}' )

log.info response
def possiblySorted = []
def records = new XmlParser().parseText(response);
log.info records

for(int i=0;i&lt;=records.DigitalAssetReference.size()-1;i++){
//log.info records.DigitalAssetReference[i].@UpdatedDate;
if(records.BasicAssetReference[i].@UpdatedDate==null)
	possiblySorted.add(records.BasicAssetReference[i].@CreatedDate);
else
	possiblySorted.add(records.BasicAssetReference[i].@UpdatedDate);
}

log.info possiblySorted;
def sortedCopy = new ArrayList&lt;>(possiblySorted)
log.info sortedCopy.sort().reverse();
if( possiblySorted != sortedCopy.sort().reverse())
{
assert 1==2
}
}</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET-FilterOffset');
		def expXML = tStep.httpRequest.response.getResponseContent();
		
		String Cache_Control = null;
		String ETag = null;
		String Expires   = null;
		String Last_Modified = null;
		String x_Transaction_Info = null;
		String Vary=null;
		tStep.httpRequest.response.responseHeaders.each() {	 header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					}
		}

			tC.setPropertyValue("Cache-Control", Cache_Control);
			tC.setPropertyValue("ETag", ETag);
			tC.setPropertyValue("Expires", Expires);
			tC.setPropertyValue("Last-Modified", Last_Modified);
			tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
			tC.setPropertyValue("Vary", Vary);
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET-FilterOffset');
		def expXML = tStep.httpRequest.response.getResponseContent();
		String Vary=null;
		String Cache_Control = null;
		String ETag = null;
		//String Expires   = null;
		//String Last_Modified = null;
		String x_Transaction_Info = null;
		
		tStep.httpRequest.response.responseHeaders.each() { header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				/*case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;*/
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					
			}
		}
		
		tC.setPropertyValue("Cache-Control", Cache_Control);
		tC.setPropertyValue("ETag", ETag);
		//tC.setPropertyValue("Expires", Expires);
		//tC.setPropertyValue("Last-Modified", Last_Modified);
		tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
		tC.setPropertyValue("Vary", Vary);
	}


</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==null)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==null)
		assert 1==2
		
		def Expires=tC.getPropertyValue("Expires")
		if(Expires==null)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==null)
		assert 1==2
		
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==null)
		assert 1==2
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==false)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==false)
		assert 1==2
		
		/*def Expires=tC.getPropertyValue("Expires")
		if(Expires==false)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==false)
		assert 1==2
		*/
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==false)
		assert 1==2

		def Vary=tC.getPropertyValue("Vary")
		if(Vary==null)
		assert 1==2

	}</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>TC_DECE_10007_MetadataBasicList_FUNC_DateFormat_With_Offset_5_FilterCount_10 B HOST</con:value></con:property><con:property><con:name>sName</con:name><con:value>P0_MetadataBasicList</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_796661278.txt</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>796661278</con:value></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>202</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1PC/CON_concat.pem</con:value></con:property><con:property><con:name>onorafter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1997-07-16T19%3A20%3A30.45%2B01%3A00</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<BasicAssetList FilterClass="urn:dece:type:viewfilter:lastmodifieddate" FilterOffset="5" FilterCount="10" FilterMoreAvailable="true" xmlns="http://www.decellc.org/schema/2015/03/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:198213452" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T06:38:19.310Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:198213452" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T06:38:19.310Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:218629262" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T06:23:02.211Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:218629262" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T06:23:02.211Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:218629262" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T06:23:02.211Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:218629262" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T06:23:02.211Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:545023721" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T06:16:04.160Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:545023721" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T06:16:04.160Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:545023721" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T06:16:04.160Z"/>
   <BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:545023721" CurrentStatus="urn:dece:type:status:active" CreatedDate="2015-02-18T06:16:04.160Z"/>
</BasicAssetList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>offset</con:name><con:value>5</con:value></con:property><con:property><con:name>filtercount</con:name><con:value>10</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value>max-age=86400</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"0F5812A78A941985E05305991F0A160E:1A7EEC0A"</con:value></con:property><con:property><con:name>Expires</con:name><con:value>Thu, 19 Feb 2015 06:48:24 GMT</con:value></con:property><con:property><con:name>Last-Modified</con:name><con:value>Wed, 18 Feb 2015 06:47:33 GMT</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value>t=1424242104 VOQ1sQofmIgAAGJl@tYAAAAJ urn:dece:org:org:dece:CON 10.31.173.1</con:value></con:property><con:property><con:name>Vary</con:name><con:value>Accept-Encoding</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9bf09b2d-914c-40ea-a987-627636bad9bd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d4a31c81-c3ef-45c9-9cf4-798170f015d8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>QC_TestPlanDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestLabDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestSet</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Infrastructure" disabled="true"><con:description/><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Rename Test Cases" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Rename Test Cases" disabled="true"><con:settings/><con:config><script>//Copyright (c) 2010 Bhavin Bharat Joshi - Neustar, Inc.

import java.io.*;

//TestCase
def testCase  = testRunner.getTestCase();

//Get Arguments
def testSuite = testCase.getPropertyValue("TestSuite"); 

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

def TCNum = 115;

//BufferedWriter bufferedWriter = null;
//bufferedWriter = new BufferedWriter(new FileWriter("c:\\DiscreteMediaLeaseCreateQuestions.txt"));

def oldTestCaseName;
def newTestCaseName;

for(i = 0; i &lt;= TCCount - 1; i++)
{	
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
	//if(targetTestCase.isDisabled() == false)
	//{
		targetTestCase.setFailOnError(false);
		oldTestCaseName = TCList[i].name;
		newTestCaseName = oldTestCaseName.replace(" ", "");
		//newTestCaseName = newTestCaseName.replace("_POST_", "_GET_");
		//newTestCaseName = newTestCaseName.replace("_RTL_", "_RTL_CS_");
		newTestCaseName = newTestCaseName.replace("_DiscreteMediaRightGet_", "_DMRList_");		
		if (TCNum.toString().length() == 1)
			newTestCaseName = "TC_DECE_0000" + TCNum.toString() + "_DiscreteMediaRightList" + newTestCaseName.split("DiscreteMediaRightList")[1]
		else if (TCNum.toString().length() == 2)
			newTestCaseName = "TC_DECE_000" + TCNum.toString() + "_DiscreteMediaRightList" + newTestCaseName.split("DiscreteMediaRightList")[1]
		else if (TCNum.toString().length() == 3)
			newTestCaseName = "TC_DECE_00" + TCNum.toString() + "_DiscreteMediaRightList" + newTestCaseName.split("DiscreteMediaRightList")[1]
		else if (TCNum.toString().length() == 4)
			newTestCaseName = "TC_DECE_0" + TCNum.toString() + "_DiscreteMediaRightList" + newTestCaseName.split("DiscreteMediaRightList")[1]
		targetTestCase.name = newTestCaseName;	
		TCNum = TCNum + 1;
		log.info "Done renaming Test Case '" + oldTestCaseName + "' to '" + newTestCaseName + "'";
	//}
	//else
	//{
	//	bufferedWriter.write(targetTestCase.name);
	//	bufferedWriter.newLine();
	//}
}

//if (bufferedWriter != null) {
	//bufferedWriter.flush();
     //bufferedWriter.close();
//}

log.info 'Woohoo!'
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" disabled="true"><con:settings/><con:config><script>import java.io.*;

def testCase  = testRunner.getTestCase();
def testSuite = "01AccountStatusUpdate_PERM";

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

BufferedReader br = new BufferedReader(new FileReader("C:\\Users\\srikanth.paridala\\Desktop\\userRSU.txt"));

def newTestCaseName;

log.info "TCCount:"+TCCount;

for(i = 0; i &lt;= TCCount - 1; i++)
{               
                def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);

                newTestCaseName = br.readLine();
                log.info "Input Test Case Name: "+newTestCaseName;
                
                if(targetTestCase.isDisabled() == false)
                {
                                targetTestCase.setFailOnError(true);
                                targetTestCase.name = newTestCaseName;    
                }

}
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script1"><con:settings/><con:config><script>import java.io.*;

def testCase  = testRunner.getTestCase();
def testSuite = "MetadataBasicList Different Roles";

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

BufferedReader br = new BufferedReader(new FileReader("C:\\Users\\pgour\\Desktop\\TCRENAME.txt"));

def newTestCaseName;

log.info "TCCount:"+TCCount;

for(i = 0; i &lt;= TCCount - 1; i++)
{               
                def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);

                newTestCaseName = br.readLine();
                log.info "Input Test Case Name: "+newTestCaseName;
                
                                targetTestCase.setFailOnError(true);
                                targetTestCase.name = newTestCaseName;    
}

</script></con:config></con:testStep><con:properties><con:property><con:name>TestSuite</con:name><con:value>DEC_PTL</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Remove a Property" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Remove a Property"><con:settings/><con:config><script>//Copyright (c) 2010 Bhavin Bharat Joshi - Neustar, Inc.

//TestCase
def testCase  = testRunner.getTestCase();

//Get Arguments
def testSuite = testCase.getPropertyValue("TestSuite"); 
def propertyName;

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

for(i = 0; i &lt;= TCCount - 1; i++)
{	
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);	
	propertyName = testCase.getPropertyValue("PropertyName");	
	try
	{
		targetTestCase.removeProperty(propertyName);
	}
	catch(Throwable e)
	{
		log.info e.text;
	}		
	log.info "Done with Test Case '" + TCList[i].name + "'";
}

log.info 'Woohoo!'
</script></con:config></con:testStep><con:properties><con:property><con:name>TestSuite</con:name><con:value>RTL</con:value></con:property><con:property><con:name>PropertyName</con:name><con:value>DiscreteMediaTokenOid</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Remove Test Cases" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Remove Test Cases"><con:settings/><con:config><script>//Copyright (c) 2013 rat Joshi - Neustar, Inc.

//TestCase
def testCase  = testRunner.getTestCase();

//Get Arguments
def testSuiteName = testCase.getPropertyValue("TestSuite"); 
def testSuite = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuiteName);

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuiteName).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuiteName).getTestCaseCount();

def i = 0;
while (i &lt;= TCCount - 1)
{
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuiteName).getTestCaseByName(TCList[i].name);
	def oldTestCaseName = TCList[i].name;
	try
	{
		testSuite.removeTestCase(targetTestCase);
	}
	catch (Throwable e)
	{
		log.info e;
	}		
	log.info "Done removing Test Case '" + oldTestCaseName + "'";
	i = i + 1;
}

log.info 'Woohoo!'
</script></con:config></con:testStep><con:properties><con:property><con:name>TestSuite</con:name><con:value>RTL_CS</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Disable a Step" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Disable a Step"><con:settings/><con:config><script>//Copyright (c) 2010 Bhavin Bharat Joshi - Neustar, Inc.

//TestCase
def testCase  = testRunner.getTestCase();

//Get Arguments
def testSuite = testCase.getPropertyValue("TestSuite"); 
def testStepName = testCase.getPropertyValue("TestStepName");

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

for(i = 0; i &lt;= TCCount - 1; i++)
{	
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
	def targetTestStep = targetTestCase.getTestStepByName(testStepName);	
	if(targetTestCase.getIndexOfTestStep(targetTestStep) >= 0)
	{
		try
		{			
			targetTestStep.setDisabled(true);	
			log.info "Done with Test Case '" + TCList[i].name + "'";		
		}
		catch(Throwable e)
		{
			log.info e;
		}
	}		
}

log.info 'Woohoo!'
</script></con:config></con:testStep><con:properties><con:property><con:name>TestSuite</con:name><con:value>RTL</con:value></con:property><con:property><con:name>TestStepName</con:name><con:value>Create a AllowAdult Policy for a different Full user</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Set a Property to a step in a testcase" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set a Property"><con:settings/><con:config><script>
def testCase  = testRunner.getTestCase();
def testSuite = testCase.getPropertyValue("TestSuite"); 
def testStepName = testCase.getPropertyValue("TestStepName");


//Get Arguments
//def testSuite = testCase.getPropertyValue("TestSuite"); 
def propertyName;

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

for(i = 0; i &lt;= TCCount - 1; i++)
{	
		
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
	def targetTestStep = targetTestCase.getTestStepByName(testStepName);	
	
	//def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);	
	propertyName = testCase.getPropertyValue("PropertyName");	
	propertyValue = testCase.getPropertyValue("PropertyValue");	
	//log.info propertyName
	//if(targetTestStep.isDisabled() == false)
	if(targetTestCase.getIndexOfTestStep(targetTestStep) >= 0)
	{
		try
		{
			//nodeRole = targetTestCase.getPropertyValue(propertyName);
			//if(nodeRole == "urn:dece:role:retailer")
			//{
				//targetTestCase.setPropertyValue(propertyName, propertyValue);
				targetTestStep.setPropertyValue(propertyName, propertyValue);
				log.info "Done with Test Case '" + TCList[i].name + "'";
			//}
		}
		catch(Throwable e)
		{
			log.info e.text;
		}		
	}	
}

log.info 'Woohoo!'
</script></con:config></con:testStep><con:properties><con:property><con:name>TestSuite</con:name><con:value>01AccountStatusUpdate_FUNC_RETCS</con:value></con:property><con:property><con:name>PropertyName</con:name><con:value>ResponseType</con:value></con:property><con:property><con:name>PropertyValue</con:name><con:value>${#TestCase#ResponseType}</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>testStepName</con:name><con:value>Account_DB_Validation</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Rename a Step" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Rename a Step"><con:settings/><con:config><script>//Copyright (c) 2010 Bhavin Bharat Joshi - Neustar, Inc.

//TestCase
def testCase  = testRunner.getTestCase();

//Get Arguments
def testSuite = testCase.getPropertyValue("TestSuite"); 
def testStepName = testCase.getPropertyValue("TestStepName");
def testStepNewName = testCase.getPropertyValue("TestStepNewName");

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

for(i = 0; i &lt;= TCCount - 1; i++)
{	
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
	def targetTestStep = targetTestCase.getTestStepByName(testStepName);	
	if(targetTestCase.getIndexOfTestStep(targetTestStep) >= 0)
	{
		try
		{
			targetTestStep.name = testStepNewName;	
			log.info "Done with Test Case '" + TCList[i].name + "'";		
		}
		catch(Throwable e)
		{
		log.info e.text;
		}
	}		
}

log.info 'Woohoo!'
</script></con:config></con:testStep><con:properties><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>TestSuite</con:name><con:value>RTL</con:value></con:property><con:property><con:name>TestStepName</con:name><con:value>CreateParentalControlPolicy</con:value></con:property><con:property><con:name>TestStepNewName</con:name><con:value>CreateRatingPolicy</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Remove all Assertions" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Remove all Assertions"><con:settings/><con:config><script>//Copyright (c) 2010 Bhavin Bharat Joshi - Neustar, Inc.

//TestCase
def testCase  = testRunner.getTestCase();

//Get Arguments
def testSuite = testCase.getPropertyValue("TestSuite"); 
def testStepName = testCase.getPropertyValue("TestStepName");

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

for(i = 0; i &lt;= TCCount - 1; i++)
{	
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
	def targetTestStep = targetTestCase.getTestStepByName(testStepName);
	def assertionsList = targetTestStep.getAssertionList();
	for(stepAssertion in assertionsList)
	{
		try
		{
  			targetTestStep.removeAssertion(stepAssertion);
  		}
		catch(Throwable e)
		{
			log.info e.text;
		}
	}			
	log.info "Done with Test Case '" + TCList[i].name + "'";
}

log.info 'Woohoo!'
</script></con:config></con:testStep><con:properties><con:property><con:name>TestSuite</con:name><con:value>DEC_PTL</con:value></con:property><con:property><con:name>TestStepName</con:name><con:value>DiscreteMediaRightGetGet - DiscreteMediaRightGetGet</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Remove a Step" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Remove a Step"><con:settings/><con:config><script>//Copyright (c) 2010 Bhavin Bharat Joshi - Neustar, Inc.

//TestCase
def testCase  = testRunner.getTestCase();

//Get Arguments
def testSuite = testCase.getPropertyValue("TestSuite"); 
def testStepName = testCase.getPropertyValue("TestStepName");

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

for(i = 0; i &lt;= TCCount - 1; i++)
{	
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
	def targetTestStep = targetTestCase.getTestStepByName(testStepName);	
	if(targetTestCase.getIndexOfTestStep(targetTestStep) >= 0)
	{
		try
		{
			targetTestCase.removeTestStep(targetTestStep);		
			log.info "Done with Test Case '" + TCList[i].name + "'";	
		}
		catch(Throwable e)
		{
		log.info e.text;
		}
	}		
}

log.info 'Woohoo!'
</script></con:config></con:testStep><con:properties><con:property><con:name>TestSuite</con:name><con:value>RTL</con:value></con:property><con:property><con:name>TestStepName</con:name><con:value>Create a AllowAdult Policy for the Full User to be able to Create Rights Token</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Clone a Step" searchProperties="true" id="73d461bb-0dee-407d-bf80-8a2dc2764777"><con:settings/><con:testStep type="groovy" name="Clone a Step"><con:settings/><con:config><script>//Copyright (c) 2010 Bhavin Bharat Joshi - Neustar, Inc.

//TestCase
def testCase  = testRunner.getTestCase();

//Get Arguments
def sourceTestSuite = testCase.getPropertyValue("SourceTestSuite"); 
def targetTestSuite = testCase.getPropertyValue("TargetTestSuite"); 
def sourceTestStepName = testCase.getPropertyValue("SourceTestStepName");
def sourceTestCaseName = testCase.getPropertyValue("SourceTestCaseName");
def prevTestStep = testCase.getPropertyValue("PreviousTestStep");

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(targetTestSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(targetTestSuite).getTestCaseCount();

def sourceTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(sourceTestSuite).getTestCaseByName(sourceTestCaseName);
def sourceTestStep = sourceTestCase.getTestStepByName(sourceTestStepName);

for(i = 0; i &lt;= TCCount - 1; i++)
{	
	if(sourceTestSuite == targetTestSuite)
	{
		if(TCList[i].name != sourceTestCaseName)
		{
			def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(targetTestSuite).getTestCaseByName(TCList[i].name);
			def targetTestStep = targetTestCase.getTestStepByName(sourceTestStepName);
			def previousTestStep = targetTestCase.getTestStepByName(prevTestStep);
			Integer indexPreviousTestStep = targetTestCase.getIndexOfTestStep(previousTestStep)						
			if(targetTestCase.isDisabled() == false)
			{
				if(targetTestCase.getIndexOfTestStep(targetTestStep) >= 0)
				{
					targetTestCase.removeTestStep(targetTestStep);
				}
				if(indexPreviousTestStep >= 0)			
				{
					targetTestCase.cloneStep(sourceTestStep, sourceTestStepName);
					targetTestStep = targetTestCase.getTestStepByName(sourceTestStepName);
					Integer indexTargetTestStep = targetTestCase.getIndexOfTestStep(targetTestStep);				
					testStepOffset = (indexPreviousTestStep + 1) - indexTargetTestStep;				
					try
					{	
						targetTestCase.moveTestStep(indexTargetTestStep, testStepOffset);
						//log.info "Done with Test Case '" + TCList[i].name + "'";	
					}
					catch(Throwable e)
					{
						log.info e;				
					}
				}				
				else
				{
					log.info TCList[i].name;
				}
			}						
		}
	}
	else
	{		
		def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(targetTestSuite).getTestCaseByName(TCList[i].name);
		def targetTestStep = targetTestCase.getTestStepByName(sourceTestStepName);
		if(targetTestCase.getIndexOfTestStep(targetTestStep) >= 0)
		{
			targetTestCase.removeTestStep(targetTestStep);
		}
		targetTestCase.cloneStep(sourceTestStep, sourceTestStepName);
		try
		{	
			targetTestCase.moveTestStep(Integer.parseInt(testStepIndex), Integer.parseInt(testStepOffset));	
		}
		catch(Throwable e)
		{
			log.info e.text;
		}
		log.info "Done with Test Case '" + TCList[i].name + "'";
	}
}

log.info 'Woohoo!'
</script></con:config></con:testStep><con:properties><con:property><con:name>SourceTestSuite</con:name><con:value>MetadataBasicList Content Provider</con:value></con:property><con:property><con:name>SourceTestCaseName</con:name><con:value>TC_DECE_00001_MetadataBasicList_METH_invocation_with_method_HEAD</con:value></con:property><con:property><con:name>SourceTestStepName</con:name><con:value>Set Node Oid</con:value></con:property><con:property><con:name>TargetTestSuite</con:name><con:value>MetadataBasicList Content Provider</con:value></con:property><con:property><con:name>PreviousTestStep</con:name><con:value>Groovy Script Set Node Role</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Change a step's script" searchProperties="true" id="9601626a-f192-40d8-8166-40f872ca9e6d"><con:settings/><con:testStep type="groovy" name="Change a step's script"><con:settings/><con:config><script>
def testCase  = testRunner.getTestCase();

//Get Arguments
def testSuite = testCase.getPropertyValue("TestSuite"); 
def testStepName = testCase.getPropertyValue("TestStep");
def oldString = testCase.getPropertyValue("OldString");
def newString = testCase.getPropertyValue("NewString");

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

for(i = 0; i &lt;= TCCount - 1; i++)
{   
 def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
 if(targetTestCase.isDisabled() == false)
 {
  try
  {
  targetTestStep = targetTestCase.getTestStepByName(testStepName);
  stepScript = targetTestStep.getScript();
  //stepScript = stepScript.replace(oldString, newString);
  stepScript = """



/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();

  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDLASP"));

""" 
  
  targetTestStep.setScript(stepScript);
  log.info TCList[i].name;
  }
  catch(Throwable e)
  {
   log.info e;
  }
 }
}
</script></con:config></con:testStep><con:properties><con:property><con:name>TestSuite</con:name><con:value>MetadataBasicList Different Roles</con:value></con:property><con:property><con:name>TestStep</con:name><con:value>Set Node Oid</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Change a step's script for all Steps in a Suite" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Change a step's script for all Steps in a Suite"><con:settings/><con:config><script>//Copyright (c) 2010 Bhavin Bharat Joshi - Neustar, Inc.

//TestCase
def testCase  = testRunner.getTestCase();
def testSuiteObj = testCase.getTestSuite();
def testProject = testSuiteObj.getProject();

//Get Arguments
def testSuite = testCase.getPropertyValue("TestSuite"); 
//def oldString = """deleteTC.setPropertyValue("CallingTestSuiteName", testSuite.name);"""
//def newString = oldString + '\n' + """deleteTC.setPropertyValue("RequestorUUID", requestorUUID);"""

def oldString = """dataUtils.dbConnEstablish();"""
def newString = """dataUtils.dbConnEstablish(testProject.getPropertyValue("DBIdentifier"));"""

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

for(i = 0; i &lt;= TCCount - 1; i++)
{			
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
	testStepList = targetTestCase.getTestStepList();
	testStepCount = targetTestCase.getTestStepCount();
	//if(targetTestCase.isDisabled() == false)
	//{		
		for(j = 0; j &lt;= testStepCount - 1; j++)
		{
			targetTestStep = targetTestCase.getTestStepByName(testStepList[j].name);			
			//if(targetTestStep.name == "Call Get Expected Row Count for DELETE" || targetTestStep.name == "Call Get Expected Row Count for DELETE 1" || targetTestStep.name == "Call Get Expected Row Count for DELETE 2")
			//{
			try
			{				
				stepScript = testStepList[j].getScript();
				stepScript = stepScript.replace(oldString, newString);
				targetTestStep.setScript(stepScript);	
				//log.info targetTestStep.name;	
			}
			catch(Throwable e)
			{
				log.info e;
			}
			//}			
		}
	//}
}						
log.info 'Woohoo!'
</script></con:config></con:testStep><con:properties><con:property><con:name>TestSuite</con:name><con:value>DEC_PTL</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Set Node Roles for Authentication Test Cases" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set Node Roles for Authentication Test Cases"><con:settings/><con:config><script>//Copyright (c) 2010 Bhavin Bharat Joshi - Neustar, Inc.

//TestCase
def testCase  = testRunner.getTestCase();

//Get Arguments
def testSuite = testCase.getPropertyValue("TestSuite"); 

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

def nodeRoles = new String[29];
nodeRoles = ['urn:dece:role:coordinator', 'urn:dece:role:retailer', 'urn:dece:role:lasp:linked', 'urn:dece:role:lasp:dynamic', 'urn:dece:role:dsp', 'urn:dece:role:dsp:drmlicenseauthority', 'urn:dece:role:coordinator:customersupport', 'urn:dece:role:userinterface', 'urn:dece:role:mdp', 'urn:dece:role:portal', 'urn:dece:role:portal:customersupport', 'urn:dece:role:drmdomainmanager', 'urn:dece:role:retailer:customersupport', 'urn:dece:role:retailer:issuer', 'urn:dece:role:retailer:issuer:customersupport', 'urn:dece:role:lasp:linked:customersupport', 'urn:dece:role:lasp:dynamic:customersupport', 'urn:dece:role:dsp:customersupport', 'urn:dece:role:dsp:drmlicenseauthority:customersupport', 'urn:dece:role:device', 'urn:dece:role:device:customersupport', 'urn:dece:role:contentprovider', 'urn:dece:role:contentprovider:customersupport', 'urn:dece:role:userinterface:customersupport', 'urn:dece:role:dece', 'urn:dece:role:dece:customersupport', 'urn:dece:role:manufacturerportal', 'urn:dece:role:manufacturerportal:customersupport', 'urn:dece:role:mdagent'];
String nodeRole = 'urn:dece:role:retailer';
Integer nodeOid = 1397;
def targetTestCase = null;

for(i = 0; i &lt;= TCCount - 1; i++)
{	
	nodeRole = nodeRoles[i];	
	if (nodeRole == null)
	{
		nodeRole = 'urn:dece:role:retailer';		
	}
	targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
	targetTestCase.setPropertyValue("NodeRole", nodeRole);
	targetTestCase.setPropertyValue("NodeOid", nodeOid.toString());
	targetTestCase.setPropertyValue("NodeId", 'urn:dece:org:org:dece:' + nodeOid.toString());
	log.info "Set Role '" + nodeRole + "' for Test Case '" + TCList[i].name + "'"; 
}

log.info 'Woohoo!'
</script></con:config></con:testStep><con:properties><con:property><con:name>TestSuite</con:name><con:value>Authentication</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Set Node Roles for Non Authentication Test Cases" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set Node Roles for Non Authentication Test Cases"><con:settings/><con:config><script>//Copyright (c) 2010 Bhavin Bharat Joshi - Neustar, Inc.

//TestCase
def testCase  = testRunner.getTestCase();

//Get Arguments
def testSuite = testCase.getPropertyValue("TestSuite"); 

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

def nodeRoles = new String[29];
nodeRoles = ['urn:dece:role:coordinator', 'urn:dece:role:retailer', 'urn:dece:role:lasp:linked', 'urn:dece:role:lasp:dynamic', 'urn:dece:role:dsp', 'urn:dece:role:dsp:drmlicenseauthority', 'urn:dece:role:coordinator:customersupport', 'urn:dece:role:userinterface', 'urn:dece:role:mdp', 'urn:dece:role:portal', 'urn:dece:role:portal:customersupport', 'urn:dece:role:drmdomainmanager', 'urn:dece:role:retailer:customersupport', 'urn:dece:role:retailer:issuer', 'urn:dece:role:retailer:issuer:customersupport', 'urn:dece:role:lasp:linked:customersupport', 'urn:dece:role:lasp:dynamic:customersupport', 'urn:dece:role:dsp:customersupport', 'urn:dece:role:dsp:drmlicenseauthority:customersupport', 'urn:dece:role:device', 'urn:dece:role:device:customersupport', 'urn:dece:role:contentprovider', 'urn:dece:role:contentprovider:customersupport', 'urn:dece:role:userinterface:customersupport', 'urn:dece:role:dece', 'urn:dece:role:dece:customersupport', 'urn:dece:role:manufacturerportal', 'urn:dece:role:manufacturerportal:customersupport', 'urn:dece:role:mdagent'];
String nodeRole = 'urn:dece:role:retailer';
Integer nodeOid = 1397;
def targetTestCase = null;

for(i = 0; i &lt;= TCCount - 1; i++)
{	
	//nodeRole = nodeRoles[i];	
	//if (nodeRole == null)
	//{
		nodeRole = 'urn:dece:role:retailer';		
	//}
	targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
	targetTestCase.setPropertyValue("NodeRole", nodeRole);
	targetTestCase.setPropertyValue("NodeOid", nodeOid.toString());
	targetTestCase.setPropertyValue("NodeId", 'urn:dece:org:org:dece:' + nodeOid.toString());
	log.info "Set Role '" + nodeRole + "' for Test Case '" + TCList[i].name + "'"; 
}

log.info 'Woohoo!'
</script></con:config></con:testStep><con:properties><con:property><con:name>TestSuite</con:name><con:value>DEC_PTL</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Change a step's Request Body" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Change a step's Request Body"><con:settings/><con:config><script>//Copyright (c) 2010 Bhavin Bharat Joshi - Neustar, Inc. All Rights Reserved.

//TestCase
def testCase  = testRunner.getTestCase();

//Get Arguments
def testSuite = testCase.getPropertyValue("TestSuite"); 
def testStepName = testCase.getPropertyValue("TestStepName");
def oldString = testCase.getPropertyValue("OldString");
def newString = testCase.getPropertyValue("NewString");

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

for(i = 0; i &lt;= TCCount - 1; i++)
{			
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
	if(targetTestCase.isDisabled() == false)
	{
		try
		{
			targetTestStep = targetTestCase.getTestStepByName(testStepName);
			oldReqBody = targetTestStep.httpRequest.getRequestContent();
			newReqBody = oldReqBody.replace(oldString, newString);
			targetTestStep.httpRequest.setRequestContent(newReqBody);
			log.info "Done Setting Request Body for Test Step " + targetTestStep.name + " for Test Case " + targetTestCase.name;
		}
		catch(Throwable e)
		{
			log.info e;
		}
	}
}						
log.info 'Woohoo!'</script></con:config></con:testStep><con:properties><con:property><con:name>TestSuite</con:name><con:value>CommonSteps</con:value></con:property><con:property><con:name>TestStepName</con:name><con:value>RightsTokenCreatePost - RightsTokenCreatePost</con:value></con:property><con:property><con:name>OldString</con:name><con:value>http://www.decellc.org/schema</con:value></con:property><con:property><con:name>NewString</con:name><con:value>${#Project#SchemaNameSpace}</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Copy of Set a Property" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Set a Property"><con:settings/><con:config><script>//Copyright (c) 2010 Bhavin Bharat Joshi - Neustar, Inc.

//TestCase
def testCase  = testRunner.getTestCase();

//Get Arguments
def testSuite = testCase.getPropertyValue("TestSuite"); 
def propertyName;

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

for(i = 0; i &lt;= TCCount - 1; i++)
{	
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);	
	propertyName = testCase.getPropertyValue("PropertyName");	
	propertyValue = testCase.getPropertyValue("PropertyValue");	
	if(targetTestCase.isDisabled() == false)
	{
		try
		{
			//nodeRole = targetTestCase.getPropertyValue(propertyName);
			//if(nodeRole == "urn:dece:role:retailer")
			//{
				targetTestCase.setPropertyValue(propertyName, propertyValue);
				log.info "Done with Test Case '" + TCList[i].name + "'";
			//}
		}
		catch(Throwable e)
		{
			log.info e.text;
		}		
	}	
}

log.info 'Woohoo!'
</script></con:config></con:testStep><con:properties><con:property><con:name>TestSuite</con:name><con:value>RTL</con:value></con:property><con:property><con:name>PropertyName</con:name><con:value>RequestorUUID</con:value></con:property><con:property><con:name>PropertyValue</con:name><con:value>${=project.properties["E2E_UUID_FAU2"].value}</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get All testcase titles" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script"><con:settings/><con:config><script>import java.io.*;

//def commonTestStep = "User_Delete_API";

def testCase  = testRunner.getTestCase();
def TSList = testRunner.testCase.testSuite.project.getTestSuiteList();
def TSCount = testRunner.testCase.testSuite.project.getTestSuiteCount();

//def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
//def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def projectPath = groovyUtils.projectPath

def logFile = new File(projectPath+"\\TCs.txt");

log.info "TS List:"+TSList[0].name;

//log.info "TCCount:"+TCCount;

for(k in (0..TSCount-1))
{
            def testSuite = TSList[k].name;
            def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList(); 
            def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();
            log.info "TestSuite  " + testSuite +"  TCCount:"+TCCount;
            log.info "TSList[k].disabled " + TSList[k].disabled 
            
            if ((TSList[k].disabled).toString() != "true")
            {                              
                  for(i in (0..TCCount-1))                                                                  
                                  {                                                                                         
                            try {
                                  def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
                                   // def targetStep = targetTestCase.getTestStepByName(commonTestStep);
                                    log.info  testSuite + " " + targetTestCase.name; 
                                    logFile.append(targetTestCase.name+"\r\n");      
                                  
                            }
                            catch(Throwable e) {
                                  log.info "Exception : " + e;
                                  }                                                                              
                                  }                              
            }
                }
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>QC_TestPlanDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestLabDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestSet</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testSuite><con:requirements/><con:properties><con:property><con:name>ALID</con:name><con:value>urn:dece:alid:org:200002</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>Altnodeid</con:name><con:value>2424</con:value></con:property><con:property><con:name>APID</con:name><con:value>urn:dece:apid:org:200002</con:value></con:property><con:property><con:name>APID_GET_DELETE</con:name><con:value/></con:property><con:property><con:name>Batch_HostName</con:name><con:value>https://qa.b.uvvu.com:7001</con:value></con:property><con:property><con:name>BHOST</con:name><con:value>qa.b.uvvu.com</con:value></con:property><con:property><con:name>BPORT</con:name><con:value>7001</con:value></con:property><con:property><con:name>cacheDuration</con:name><con:value>86400</con:value></con:property><con:property><con:name>CertMatchesNodeID</con:name><con:value>YES</con:value></con:property><con:property><con:name>CertMatchesNodeName</con:name><con:value>YES</con:value></con:property><con:property><con:name>certspath</con:name><con:value>C:/certs</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:org:200002</con:value></con:property><con:property><con:name>clusterNumber</con:name><con:value>1</con:value></con:property><con:property><con:name>coordinatorSchema</con:name><con:value>http://www.decellc.org/schema/2015/03/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_02</con:name><con:value>http://www.decellc.org/schema/2015/03/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_06</con:name><con:value>http://www.decellc.org/schema/2012/12/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_07</con:name><con:value>http://www.decellc.org/schema/2013/06/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_11</con:name><con:value>http://www.decellc.org/schema/2013/10/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_21</con:name><con:value>http://www.decellc.org/schema/2013/10/coordinator</con:value></con:property><con:property><con:name>Coordinator_Schema</con:name><con:value>http://www.decellc.org/schema/2015/03/coordinator</con:value></con:property><con:property><con:name>coords</con:name><con:value>FALKY,COORD-10000,COORD-3034,COORD-2999,COORD-2509,COORD-627,UV-135,UV-340,Coord-2180</con:value></con:property><con:property><con:name>DBIdentifier</con:name><con:value>LP1</con:value></con:property><con:property><con:name>DBPassword</con:name><con:value>lp1db_23</con:value></con:property><con:property><con:name>DBUsername</con:name><con:value>DEQA1_APP</con:value></con:property><con:property><con:name>delayTimeAfterCreate</con:name><con:value>60000</con:value></con:property><con:property><con:name>delayTimeAfterGet</con:name><con:value>60000</con:value></con:property><con:property><con:name>delayTimeAfterUpdate</con:name><con:value>60000</con:value></con:property><con:property><con:name>Device_HostName</con:name><con:value>https://qa.d.uvvu.com:7001</con:value></con:property><con:property><con:name>DHOST</con:name><con:value>qa.d.uvvu.com</con:value></con:property><con:property><con:name>disablePriority</con:name><con:value>P3,CHILD,CLG</con:value></con:property><con:property><con:name>DPORT</con:name><con:value>7001</con:value></con:property><con:property><con:name>enablePriorityScript</con:name><con:value>falsedisablePriority=P3,CHILD,CLG</con:value></con:property><con:property><con:name>ENV</con:name><con:value>QALP1PC</con:value></con:property><con:property><con:name>envIdentifier</con:name><con:value>LP1</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"0F5812A78A941985E05305991F0A160E:26121DD1"</con:value></con:property><con:property><con:name>HOST</con:name><con:value>qa.p.uvvu.com</con:value></con:property><con:property><con:name>JDBCConnStr</con:name><con:value>jdbc:oracle:thin:@stdeqp-clu1-scan.va.neustar.com:2115/stdecqpdb_stdecqa.neustar.com</con:value></con:property><con:property><con:name>JDBCDriver</con:name><con:value>DECEOracle</con:value></con:property><con:property><con:name>JKSAliasName</con:name><con:value>qalp1</con:value></con:property><con:property><con:name>JKSPassword</con:name><con:value>testing</con:value></con:property><con:property><con:name>Last-Modified</con:name><con:value>Fri, 09 Jan 2015 07:18:59 GMT</con:value></con:property><con:property><con:name>linux_JDBCConnStr</con:name><con:value>jdbc:oracle:thin:deqa1/dec2010@stdeqp-clu1-scan.va.neustar.com:2115/stdecqpdb_stdecqa.neustar.com</con:value></con:property><con:property><con:name>Linux_JDBCDriver</con:name><con:value>oracle.jdbc.driver.OracleDriver</con:value></con:property><con:property><con:name>md_schema</con:name><con:value>http://www.movielabs.com/schema/md/v2.2/md</con:value></con:property><con:property><con:name>md_schema_02</con:name><con:value>http://www.movielabs.com/schema/md/v2.1/md</con:value></con:property><con:property><con:name>md_schema_06</con:name><con:value>http://www.movielabs.com/schema/md/v1.2/md</con:value></con:property><con:property><con:name>md_schema_07</con:name><con:value>http://www.movielabs.com/schema/md/v1.2/md</con:value></con:property><con:property><con:name>md_schema_11</con:name><con:value>http://www.movielabs.com/schema/md/v2.1/md</con:value></con:property><con:property><con:name>md_schema_21</con:name><con:value>http://www.movielabs.com/schema/md/v2.1/md</con:value></con:property><con:property><con:name>neustarVM</con:name><con:value>OFF</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value/></con:property><con:property><con:name>NodeAccountOid</con:name><con:value>4400005</con:value></con:property><con:property><con:name>nodeDeviceDefault</con:name><con:value>0200</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>CON</con:value></con:property><con:property><con:name>nodeIdAccportal</con:name><con:value>ACCESS</con:value></con:property><con:property><con:name>nodeIdAccportal2</con:name><con:value>ACCESS_2</con:value></con:property><con:property><con:name>nodeIdAccportalCS</con:name><con:value>ACCESCS</con:value></con:property><con:property><con:name>nodeIdAccportalCS2</con:name><con:value>ACCESSCS_2</con:value></con:property><con:property><con:name>nodeIdCON</con:name><con:value>CON</con:value></con:property><con:property><con:name>nodeIdCON2</con:name><con:value>CON_2</con:value></con:property><con:property><con:name>nodeIdCONCS</con:name><con:value>CON_CS_1</con:value></con:property><con:property><con:name>nodeIdCONCS2</con:name><con:value>CON_CS_2</con:value></con:property><con:property><con:name>nodeIdCoo</con:name><con:value>COO</con:value></con:property><con:property><con:name>nodeIdCoo2</con:name><con:value>COO_2</con:value></con:property><con:property><con:name>nodeIdCoordCS</con:name><con:value>coord:cs</con:value></con:property><con:property><con:name>nodeIdDECE</con:name><con:value>DECE</con:value></con:property><con:property><con:name>nodeIdDECECS</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>nodeIdDECECS1</con:name><con:value>truststore-dece-cs</con:value></con:property><con:property><con:name>nodeIdDEV</con:name><con:value>DEV</con:value></con:property><con:property><con:name>nodeIdDEV2</con:name><con:value>DEV_2</con:value></con:property><con:property><con:name>nodeIdDEVCS</con:name><con:value>DEV_CS_1</con:value></con:property><con:property><con:name>nodeIdDEVCS2</con:name><con:value>DEV_CS_2</con:value></con:property><con:property><con:name>nodeIdDLASP</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>nodeIdDLASP2</con:name><con:value>DLASP_2</con:value></con:property><con:property><con:name>nodeIdDLASPCS</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>nodeIdDLASPCS2</con:name><con:value>DLASP_CS_2</con:value></con:property><con:property><con:name>nodeIdDSP</con:name><con:value>DSP</con:value></con:property><con:property><con:name>nodeIdDSP2</con:name><con:value>DSP_2</con:value></con:property><con:property><con:name>nodeIdDSPCS</con:name><con:value>DSP_CS_1</con:value></con:property><con:property><con:name>nodeIdDSPCS2</con:name><con:value>DSP_CS_2</con:value></con:property><con:property><con:name>nodeIdLLASP</con:name><con:value>LLASP</con:value></con:property><con:property><con:name>nodeIdLLASP2</con:name><con:value>LLASP_2</con:value></con:property><con:property><con:name>nodeIdLLASPCS</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>nodeIdLLASPCS2</con:name><con:value>LLASP_CS_2</con:value></con:property><con:property><con:name>nodeIdNotProvisioned</con:name><con:value>notprovisioned</con:value></con:property><con:property><con:name>nodeIdportal</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>nodeIdportalCS</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>nodeIdRetailerforDeviceAuthToken</con:name><con:value/></con:property><con:property><con:name>nodeIdRTL</con:name><con:value>RET</con:value></con:property><con:property><con:name>nodeIdRTL1</con:name><con:value>sriniretailer</con:value></con:property><con:property><con:name>nodeIdRTL2</con:name><con:value>RET_2</con:value></con:property><con:property><con:name>nodeIdRTLCS</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>nodeIdRTLCS1</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>nodeIdRTLCS2</con:name><con:value>RET_CS_2</con:value></con:property><con:property><con:name>nodeIdSPCLCS</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>NodeUserOid</con:name><con:value>101517</con:value></con:property><con:property><con:name>onorafter</con:name><con:value/></con:property><con:property><con:name>OrgID</con:name><con:value>ISC_R1</con:value></con:property><con:property><con:name>PORT</con:name><con:value>7001</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>Profile</con:name><con:value/></con:property><con:property><con:name>Provision_HostName</con:name><con:value>https://qa.p.uvvu.com:7001</con:value></con:property><con:property><con:name>QC_AutoMapping</con:name><con:value>disabled</con:value></con:property><con:property><con:name>QC_BulkUpdate</con:name><con:value>disabled</con:value></con:property><con:property><con:name>QC_Domain</con:name><con:value>&lt;Domain></con:value></con:property><con:property><con:name>QC_password</con:name><con:value>******</con:value></con:property><con:property><con:name>QC_Project</con:name><con:value>&lt;Project></con:value></con:property><con:property><con:name>QC_ProjectPath</con:name><con:value/></con:property><con:property><con:name>QC_ReExport</con:name><con:value>enabled</con:value></con:property><con:property><con:name>QC_ResultExportLevel</con:name><con:value>off</con:value></con:property><con:property><con:name>QC_ResultExportLevel_Option is off or high</con:name><con:value/></con:property><con:property><con:name>QC_RunName</con:name><con:value/></con:property><con:property><con:name>QC_soapUI_ARGS</con:name><con:value/></con:property><con:property><con:name>QC_TestLabDirectory</con:name><con:value>Root\folderA</con:value></con:property><con:property><con:name>QC_TestPlanDirectory</con:name><con:value>Subject\folder1</con:value></con:property><con:property><con:name>QC_TestSet</con:name><con:value>sample_testset</con:value></con:property><con:property><con:name>QC_TestType</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>QC_URL</con:name><con:value>http://&lt;servername>:8080/qcbin</con:value></con:property><con:property><con:name>QC_user</con:name><con:value>&lt;user name></con:value></con:property><con:property><con:name>Query_HostName</con:name><con:value>https://qa1.pc.uvvutest.biz</con:value></con:property><con:property><con:name>REST_API_Version</con:name><con:value>1/11</con:value></con:property><con:property><con:name>runTeardown</con:name><con:value>false</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+o4EH7vr4jSxyrkQrgkKkhASA+clp5Cy2n3ZWWcAdwGm8YOl/31a4cmBUq7PSshIU/GM994Pn/jS44WseO3OIdEEEa1XtDQ//bq1chyq5aBcc02XFyvGXXbmhqVmjtBU2yXPajqWo/zFHqUC0RFQ3cs2zUs23Bq91bNt1zf8UpVu/qXro0h4TK0dClZurZZxJT7WdqGnibUZ4gT7lO0AO4L7I9aN9e+9PRRjklvXu5QZgmT5lyIpW+auBQBhjjGJcwW5qV54HMZcX9EZhSJNIG3nBFv6G971+t1aV0usWRmOpZlmZZnSp+Ik9m53jzLN0PUo1O2W3cQZZRgFJN/kAJ1A2LOIq0Vz1hCxHzxSWjbtC0V2oANNrDt0nPdfE+QoftmpAOQCUcGnyM7DzaEKSRAMWgPw15DP/9eB3d77xNE+ZQlC360/jNIQFcQsyVEBs8ry9F9P+KJ42peAvZ7FMcpJysYKJosEQau/UpgSjbXhEvyRVzL2q9tuPyRnGWA/6Qtl+Y+VgndPHE6AZkBF/+nZ/v92kUZoziFZnq3nSOPUP67tbiAYHvDvHH3wsJm0G1kEPadd6CKdr+tj8lacOtt09AedisPj3gw6T/wO9Qai8cL+ycN2MN9pbcGxm6HlZZ9N7E749twMumO+4MNfe6/3DyK56dl+DgTEUpI/7pNauFZdTP3BhTCet+5KKdd8cNZReMQcHwbjX73X71+WOZJa+pNxy8iMe/mbNC+ItHVj86mfFW+M2fLp3AbVEe3varz4+wn3A1m1tPKmizrpIZD5q0b7zXt13BozCVhlE6eAYt8qejRC7RQ9guJr+VFWUhkTDNXf6k0igugQm+qXUpa/FQKEIl82czdOnTKrlWvWlbdCcqubblep2q1y67n1u3Qa9VzDdqhOILYYXRKVC6lsjv+fA0QL3wONILEWLEUz4HrX0QMkEBajw7l5WCUwz2TKt5uW0HXtavlWhB6Va/SdTtOGAZWULddN6x0dG3AxC29lc0SkBwouG0dKPgQMFkSUDKveM4l0bmQR/KKVqmI7dIKlSikchAkSot9x61XTE4WyxgUYHPBojSG0nK+zA7I5Lt/x0CYZ9Zh9z67f5+Wd/wtPwnpExHlwFUtbZDdhBOjyM4L+VBw5eTIysO30oioayaPVSQE75Acfnpni6JJQRVZUQ658Dw2HEQ1jwsqEkUrggu+F4Na6rxUgWbejldUei2lq1WaNaCmFC6R4U3bdGxzBDiVMrW9Zy9AzSKE+a0pUaA+ylzYD/GlYk5HAglYSLpo2fIbT4QRcPVE6Em6b777/jhIKc9NwEacsnVi+ZJQiL98bGAfKz9p/iX/1iyJ3tt1ItZeHlmnfBcIQmdqpebB9hNSYCbDEilgLNkPfirAqeSHxuKQCyxCsmmSCvj8i6aUqaEjjFlKRS/QM8O+WmY4xXYJ/rvThzCZIr+N2A3/dMQ+3lyPpG4tkF74kv92NkhGFwy6muQZloa+kS9GmZzO9tT5DeC+QJeVQLdbYVj7WqAPK2l+MH+07J3p8X1o/gs=</con:value></con:property><con:property><con:name>scriptsPath_Windows</con:name><con:value>../../GlobalScripts</con:value></con:property><con:property><con:name>Set_Coordinator_Schema_06</con:name><con:value>http://www.decellc.org/schema/2012/12/coordinator</con:value></con:property><con:property><con:name>SAML_NEG</con:name><con:value>SAML2 assertion=NEGATIVE+t7zKyjOkiIegDBUklvygDEgg40Zdx6EbfAAlo0Nv/7KEDgkJ2d67y3eIhXU7uHr7k9S6+WfPPDLRxRjLwpfK8wTXSmj0IpsL3ReKzO9V2tX/n krvWAj8NkuwBjFCdEsy8JrZWOats3SbM1qWEatgZqtmllnjVqLoduNdqUsY5wiOcSJESavFZZm6BrD1mhWZ9rdBt1l208N9nldKc9v0dkiOsET4u4l3mslj cNuZGAPd0MjQLibWN0pgKMu0ewaNzCVt3d4l4Ax9fZi4+7Uc0IjSWP07tDGrxU3SfZdisqy7CmrP0WxQ7E0TVN0hyI6NvacbxWS6rsxsuVwE13XvBFGoWcZ vnc2iogQJW5kl4HvRLGXuMFPXDMUQxeuayi3ahbTCL9VqO8BLuj+0NMHkDE2atg1mJszDW1QTJqGyjNNfq18+01frkZ6bIR4E8UB/rT+OywoPCI/2iO7hm8 p3WD9uccv6vT2gqyuHFp+ir0jUorm7w0L4fIkRhsvH3mYUMrG5Uvjyzm+8QZZf9OLF+oRJ4FNfVEZwXMQTv6TRj026eplbvgpeuNsa6QMnJ0/4ozjIlvkc8 HgzvTYdBqvFwiPyldQ9x6/rz8z9E6odyONmziHrTNVqqHrD9Ll0pFFptrq1KNeaxysnuuU3FCXulk/0oYn6JqqN5cQ6YONash0HI5Ou90Oma4c9OdOCWd7a zhiRF2xW+pwqyhQW5j8iG8Z7phvS6uqC8KjEGF1OhnP4O7E79edTlsUYcid9Mn0vOkEm4HfFmZ92Sp17MaomY3ZvJ2vpf7QyHbw9XtOjzkUeQ3R6ZJk8XvZ pDuCkRj3BV/s/w3Zlwl6g7IspGeeB6epAzKZAw752wKFc3YHd+dJnYzmgKr2gMBz/lYcQbCTADMTORfy8znM+TMYcI4yJ4Z6CfhrDmpiJmQrYa6qfTFzdVu an0zJT9dnUYEAX4x5F4qaOBc0XYQQRFdZDgVTyrdwCjNZXQkl4kAQ8/3ZljoJknLPYuUmnDbZ1bSZrpdzIu+dRoFyNHXRhzyU+OlBmspmXVDFAdBWC4vtpc T2PAr2UWk14x6MBnu0BaiX0SQmOEN9l0F9xiqCZlxk+kcZlKUBVHHGq5espJKYDeaz8/da8Bzk7UDMRR1MrrWwdL6n0OvlABuLZgg1kAnOxXgoZvb4BgSqd Fbir7UaiZkmajOlBzU5E8FFJoiZj01WcU3JPVp1NR/oYPvYGF4VF72QfA+1o3VqHkqG1ANmMGesuuZaXtMzllHmrNuZoK4Gw2gtEzcKUEWOUwEBRIMiNVJ/ Doy4eXO89zqsh0abXhQgNy5BJhrujuecbnv1sTNRFk1hs2tNJG9SN2yXkn2L3dZ3QJaRPWRc1bC1FaUJoXd+Hg9nS+TFq3OiNFXm2Ws3S9oinS2FyG/Z/eV qNqzmK0vVx5PpbDE557ly2LbPftIfc/14OoCCM1YQmmCrStFGj9PbQpNf9beETxuNRs0ScCAHgLR1HNEjBOb62ysJ+xoUCXkB5DOJX/DSFEhSVZQ5QVU3PZ eZWNI8nTEKlEXbJ2U6rZaaX1rznEA6RRuL9X7F9ui1DuyLM7Uh9hx11qwOlmitKr4+T0C2n29ChqGlvdrfwMyxYMEAW86mHNlFXCmVwcwY7wd0Ppw/08xBt f3BtANm9XzK7vKx66xPO2e9I01ZPWydlQ78uf7AMZlQbFFSdVGDoH3dbzmUZ3XNt4J8bwZWLuikZxfjSOdErafSs1wQwPAqwzpgc7w6i1vIixf7EsihQWhx NJcuXoWKN9bFlJA2faDL1mTp33KsoFjpI8cOPFDBZ46JV46JYHOoym2Bwc1nfo8XmcNJ4kFtzUeDzp5Wl6Ndiav2KCfx/MY4bGf6sLpgTlnL3aqLRUcWXL4 ablZu3Uw42jhbKhrsWpKn7YTwueGf4AiqzZlH+Sd6iw4ZHpUUmQnFenLuUZ04rXLB2gvO53qDnQWTaXqUZ8YQMyfXPCw62XbSf6aoWDo1z631Ue0tI2t1vU c+H5J34fUYpR4P2A8n8G2imqbmFlnJbVncw7JQ7pHL0Uh+Pp0xT8xF4tm1zUW1m4Z4jywCA9mVt8LMRhbqpmSA8+wuuTqva5ph6y/UY6hPOPgo3HiFw2IEv d7Iv54RraBrIiNGceUXnopilOVQIyNGFGKkR68VTE6ONPQOKcnBJRdvpaxEyTgcx2CToPgyzDJfD7MaSXPvoWLifRgQUG4Eex89WVFAGZYVpWGCyQ98mUF+ Cuzzt1sORMf2CgVcwOIQKTL6PGCz9W7jhukPsd/cg9T2ilGDFCSJPeuK5OOnt4fcitY9hZGNnuiigY0b6LvuZ8EHv9TnlO6h7KNn3Yl4f3nIAhmF3gDHC+L d78dvny3IUFyIC8SYQL7CRSl5lsRPpnem7u8I/A951RimZaMfPL/7uMs/YksTN5wmZIMFpO/ly/L3z54P1iT9BOXJVzLeJwCL4L98C1ldq9Aj4gn5l0Wx/b 3qX/j66uNH4T2fO6aENM1ME/TzL+Vi075W3gnu2ZWL4HZaPFDmsfyCyIsUuJrIQuUHp5dh8H26z/FPp/slHE0tFwVG5a7r/V655l36ZJENTvS7yWlP8Ofk+ UmCh87DUXXP6eG0qrfZep3+zvcPiN9+EP8o+S9qHN/eA39TZU3s/d9VGPQEjifHBrna6v+bUn7eu2//Ag==</con:value></con:property><con:property><con:name>Set_Coordinator_Schema_11</con:name><con:value>http://www.decellc.org/schema/2013/10/coordinator</con:value></con:property><con:property><con:name>Set_Node</con:name><con:value>2222</con:value></con:property><con:property><con:name>scriptsPath_Linux</con:name><con:value>../../GlobalScripts</con:value></con:property><con:property><con:name>Set_Coordinator_Schema_07</con:name><con:value>http://www.decellc.org/schema/2013/06/coordinator</con:value></con:property><con:property><con:name>targerHostd</con:name><con:value>qa.d.uvvu.com</con:value></con:property><con:property><con:name>targetDB</con:name><con:value>LP1</con:value></con:property><con:property><con:name>targetDeviceDomain</con:name><con:value>qa.d.uvvu.com:7001</con:value></con:property><con:property><con:name>targethost</con:name><con:value>qa.p.uvvu.com</con:value></con:property><con:property><con:name>targetHostb</con:name><con:value>qa.b.uvvu.com:7001</con:value></con:property><con:property><con:name>targetHostC</con:name><con:value>qa.c.uvvu.com:7001</con:value></con:property><con:property><con:name>targetHostd</con:name><con:value>qa.d.uvvu.com</con:value></con:property><con:property><con:name>targetHostP</con:name><con:value>qa.p.uvvu.com:7001</con:value></con:property><con:property><con:name>targetHostq</con:name><con:value>qa1.pc.uvvutest.biz</con:value></con:property><con:property><con:name>targetHostS</con:name><con:value>qa.s.uvvu.com:7001</con:value></con:property><con:property><con:name>targetjdbc</con:name><con:value>jdbc:oracle:thin:deqa2/dece2010@stdeqp-clu1-scan.va.neustar.com:2115/stdecqpdb_stdecqa.neustar.com</con:value></con:property><con:property><con:name>targetport</con:name><con:value>7001</con:value></con:property><con:property><con:name>targetPortd</con:name><con:value>7001</con:value></con:property><con:property><con:name>targetPortq</con:name><con:value>7001</con:value></con:property><con:property><con:name>targetSystem</con:name><con:value>LP1</con:value></con:property><con:property><con:name>targetURL</con:name><con:value>qa.p.uvvu.com:7001</con:value></con:property><con:property><con:name>targetUrlSHost</con:name><con:value>qa.s.uvvu.com:7001</con:value></con:property><con:property><con:name>TitleDisplay19</con:name><con:value>A Beautiful Mind</con:value></con:property><con:property><con:name>TOUUrl</con:name><con:value>qa.c.uvvu.com:7001</con:value></con:property><con:property><con:name>URLEncode</con:name><con:value>NO</con:value></con:property><con:property><con:name>versionMinor</con:name><con:value>02</con:value></con:property><con:property><con:name>windows_JDBCConnStr</con:name><con:value>jdbc:oracle:thin:deqa1/dec2010@10.31.153.5:2115/stdecqpdb_stdecqa.neustar.com</con:value></con:property><con:property><con:name>urnaccount</con:name><con:value>urn:dece:accountid:org:dece:</con:value></con:property><con:property><con:name>certsPath_Windows</con:name><con:value>../../Certs/QALP3/</con:value></con:property><con:property><con:name>certsPath_Windows</con:name><con:value>../../Certs/QALP1/</con:value></con:property><con:property><con:name>versionMajor</con:name><con:value>2015</con:value></con:property><con:property><con:name>certsPath_Linux</con:name><con:value>../../Certs/QALP3/</con:value></con:property><con:property><con:name>certsPath_Linux</con:name><con:value>../../Certs/QALP1/</con:value></con:property><con:property><con:name>urnNode</con:name><con:value>urn:dece:org:org:dece:</con:value></con:property><con:property><con:name>windows_JDBCDriver</con:name><con:value>DECEOracle</con:value></con:property><con:property><con:name>Rights_APID</con:name><con:value>urn:dece:apid:file:INTERACTIVE_MetadataDigitalCreate.txt:39983831</con:value></con:property><con:property><con:name>Rights_ALID</con:name><con:value>urn:dece:alid:file:RTUPDATE_R3_EXAMPLE_ALIDVersion_212395.txt</con:value></con:property><con:property><con:name>Rights_CID</con:name><con:value>urn:dece:cid:file:RTUPDATE_R3_EXAMPLE_CIDVersion_212395.txt</con:value></con:property><con:property><con:name>Streams_APID</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:242394094</con:value></con:property><con:property><con:name>Streams_ALID</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_561393521.txt</con:value></con:property><con:property><con:name>Streams_CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_344946277.txt</con:value></con:property></con:properties><con:wssContainer/><con:databaseConnectionContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep"><con:script>if(testStepResult.getTestStep().config.type.toString() == "restrequest")
{
                byte [] tempByteArrRequest = testStepResult.getRawRequestData();
                String tempRequest = new String(tempByteArrRequest);

                log.info("-----------------------------&lt;" + testStepResult.getTestStep().getName() + " Request>--------------------------------");
                log.info(tempRequest);
                log.info("-----------------------------&lt;/" + testStepResult.getTestStep().getName() + " Request>--------------------------------");

                byte [] tempByteArrResponse = testStepResult.getRawResponseData();
                String tempResponse = new String(tempByteArrResponse);


                log.info("-----------------------------&lt;" + testStepResult.getTestStep().getName() + " Response>--------------------------------");
                log.info(tempResponse);
                log.info("-----------------------------&lt;/" + testStepResult.getTestStep().getName() + " Response>--------------------------------");
}</con:script></con:eventHandlers><con:sensitiveInformation/></con:soapui-project>