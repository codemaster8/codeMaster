<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="UVTC_ACCUSERNAME_API_R6" resourceRoot="${projectDir}" soapui-version="4.5.1" defaultScriptLanguage="Groovy" activeEnvironment="Default" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.ProTestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="&lt;all>"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value="E:\DECE API\STS\Builds\R3\106.2.3\Reports106\STSAPI_Payload_NodeOId_TCs_R3"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Users\ralluri\Desktop\LatestProjects_Users\Build_4.1</con:setting></con:settings><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Account" type="rest" id="8252ba06-b20f-4a82-a0b6-fd7f3523ede0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="AccountCreate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account" id="ed70a636-717d-4786-b6de-deabd446719b"><con:settings/><con:parameters/><con:method name="AccountCreate" method="POST" id="09857898-3271-43d8-a451-d5bf44ce4858"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404 403 503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400 500</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>400 500 405 403 503</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:request name="AccountCreate" mediaType="application/xml" postQueryString="false" id="ca4ff0a9-00f8-41e3-871a-d799b7db932c" sslKeystore="80080010.pem"><con:settings><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="http://www.decellc.org/schema/2010/10/dece"> 
<DisplayName>${#Project#AccountDisplayName}</DisplayName>
<Country>US</Country>
</Account>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="AccountGET" method="GET" id="09857898-3271-43d8-a451-d5bf44ce4858"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>201 303 200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404 403 503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400 500 401</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>400 500 405 403</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="AccountGET_BasicAuth" mediaType="application/xml" postQueryString="false" id="ca4ff0a9-00f8-41e3-871a-d799b7db932c" sslKeystore="500500.pem"><con:settings><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Device_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="http://www.decellc.org/schema/2010/10/dece"> 
<DisplayName>${#Project#AccountDisplayName}</DisplayName>
<Country>US</Country>
</Account>
]]></con:request><con:credentials><con:username>${#Project#UserName}</con:username><con:password>Password1</con:password><con:domain>DECE</con:domain><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request><con:request name="AccountGET_SAML" mediaType="application/xml" postQueryString="false" id="ca4ff0a9-00f8-41e3-871a-d799b7db932c" sslKeystore="500500.pem"><con:settings><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="http://www.decellc.org/schema/2010/10/dece"> 
<DisplayName>${#Project#AccountDisplayName}</DisplayName>
<Country>US</Country>
</Account>
]]></con:request><con:credentials><con:username/><con:password/><con:domain/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Account" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}" id="bda852c0-5ccd-41d2-911c-bdec0459e462"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="AccountGet" method="GET" id="5cccdc43-2b89-4e8c-88a3-390b7ef3f239"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 401 400</con:status><con:params/><con:element xmlns:urn="urn:oasis:names:tc:SAML:2.0:protocol">urn:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Account</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="AccountGet" mediaType="application/xml" sslKeystore="500500.pem" id="e1b8ad00-9ed3-4f09-980e-f2f86bdf18ca"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#NODEACCID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request><con:request name="AccountGet_BasicAuth" mediaType="application/xml" sslKeystore="500580.pem" id="e1b8ad00-9ed3-4f09-980e-f2f86bdf18ca"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@remove_empty_content">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:username>${#Project#UserName}</con:username><con:password>Password1</con:password><con:domain>DECE</con:domain><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="AB1E09D1A009474DE0401F0A07995BBC" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method><con:method name="AccountDelete" method="DELETE" id="3dd5e135-f342-47db-9631-1bec111dba45"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" sslKeystore="80080010.pem" id="7e19750b-606f-4d7d-bda7-cfa0c9074a64"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#NODEACCID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method><con:method name="AccountUpdate" method="PUT" id="5cccdc43-2b89-4e8c-88a3-390b7ef3f239"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:urn="urn:oasis:names:tc:SAML:2.0:protocol">urn:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Account</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Account</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:request name="AccountUpdate" mediaType="application/xml" sslKeystore="80080010.pem" id="e1b8ad00-9ed3-4f09-980e-f2f86bdf18ca" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="http://www.decellc.org/schema/2010/10/dece"> 
<DisplayName>${#Project#AccountDisplayName}</DisplayName>
<Country>US</Country>
</Account>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#NODEACCID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="FirstUserCreate" type="rest" id="63e68881-a234-4670-82d0-16b5421c30a4" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="FirstUserCreate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" id="9ed9c404-b207-4c25-a786-7bd711105b44"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:resource name="UserAPI" path="/{UserID}" id="8c72fe92-42e8-4bcc-bfc3-29cb8a3ca9cb"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>UserID</con:name><con:value>UserID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>UserID</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:resource name="User_StatusUpdate" path="/ResourceStatus/Current/Update" id="b0f04600-c6bc-42f8-b382-bdb9ef258eee"><con:settings/><con:parameters/><con:method name="UserStatusUpdate" method="PUT" id="5e4818b9-48a0-429e-aa1a-3379298d12be"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/06/coordinator">coor:ResourceStatus</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/06/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>303</con:status><con:params/></con:representation><con:request name="UserStatusUpdate" mediaType="application/xml" postQueryString="false" id="ae263fb2-2f71-4002-b6e4-7831863b5d6f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#Project#NODEACCID}"/>
  <con:entry key="UserID" value="${#Project#NODEUSERID}"/>
</con:parameters></con:request></con:method></con:resource><con:method name="UserGet" method="GET" id="55de7616-71c0-4cac-bade-e9aa4166e711"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/06/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/06/coordinator">coor:User</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="UserGet" mediaType="application/xml" id="86860311-fe06-418d-9e53-0c4d81aa0896" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="UserList" path="/List" id="16a08242-2ac7-42a8-b9c6-ca954b9794d4"><con:settings/><con:parameters/><con:method name="UserList" method="GET" id="e58e8f42-4a16-498a-86e7-a405a0125794"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:UserList</con:element></con:representation><con:request name="UserList" mediaType="application/xml" id="869ab87f-d5fa-4e59-8a29-1bca986023a1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="urn:dece:accountid:org:dece:${#Project#NODEACCID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource><con:method name="FirstUserCreate" method="POST" id="557bc5f3-c2ce-4146-81fc-71cdc6358536"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>404 403 500 400</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404 403 503 502</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>404 405 400 500</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="FirstUserCreate" mediaType="application/xml" postQueryString="false" id="54c781b4-bf2d-4e55-ab6c-fc7337e96457" sslKeystore="80080010.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:full" xmlns="http://www.decellc.org/schema/2010/10/dece" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
        	<GivenName>${#Project#UserName}</GivenName>
		<SurName>Harbor</SurName>
	</Name>	
	<ContactInfo>
	<PrimaryEmail>			
          <Value>testing@uvvutesting.biz</Value>
         <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</PrimaryEmail>
	<AlternateEmail>			
        <Value>testing@uvvutesting.biz</Value>			
        <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</AlternateEmail>
	<Address>
		<PostalAddress>45999 Center Oak Plaza</PostalAddress>
		<PostalCode>20166</PostalCode>
		<Locality>Sterling</Locality>
		<StateOrProvince>NJ</StateOrProvince>
                <Country>US</Country>
	</Address>
	</ContactInfo>
        <Languages>
		<Language>de</Language>	
	</Languages>
       <DateOfBirth>1982-07-01</DateOfBirth>
       <Credentials> 
		<Username>NewnameShikha</Username>		  
                <Password>mypWd007</Password> 
	</Credentials>
<UserRecoveryTokens>
      <RecoveryItem>
		<QuestionID>1200</QuestionID>  
		<QuestionResponse>Turner</QuestionResponse>
       </RecoveryItem>
       <RecoveryItem>
		<QuestionID>1650</QuestionID>  
		<QuestionResponse>Phoenix</QuestionResponse>
       </RecoveryItem> 
</UserRecoveryTokens>
</User>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="urn%3Adece%3Aaccountid%3Aorg%%3A${#TestCase#NODE_ACCOUNT_ID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource><con:resource name="UserDelete" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" id="b4da2587-c2fe-45c4-aa0b-7bfdda8db2c0"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:value>${#TestCase#NODE_ACCOUNT_ID}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestCase#NODE_ACCOUNT_ID}</con:default></con:parameter><con:parameter disableUrlEncoding="true"><con:name>UserID</con:name><con:value>${#TestCase#NODE_USER_ID}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestCase#NODE_USER_ID}</con:default></con:parameter></con:parameters><con:method name="DeleteUser" method="DELETE" id="02c9752d-c22c-4713-874a-3f6c2b982142"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>412</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" id="0f18fdda-5e02-4f21-8def-a3f312f61ac8"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="AddNewUser" type="rest" id="785934cf-6e29-492d-9dd8-504d1aeb0b28" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#HostName}</con:endpoint></con:endpoints><con:resource name="AddUser" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" id="a8f8ca6d-db1b-4090-9ffc-68be2d519618"><con:settings/><con:parameters/><con:resource name="UserAPI" path="/{UserID}" id="20cfed44-6bef-4e69-8937-8a0ed4466e50"><con:settings/><con:parameters><con:parameter><con:name>UserID</con:name><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="UserDelete" method="DELETE" id="ec0bb443-5d9b-4e69-b1d5-c6cf6535c7e4"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>UserID</con:name><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 500 400</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="UserDelete" mediaType="application/xml" sslKeystore="80080010.pem" id="d0bc938e-dbab-4193-8cc9-85cb4f10c8bf"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="urn:dece:accountid:org:dece:${#Project#NODEACCID}"/>
  <con:entry key="UserID" value="urn:dece:userid:org:dece:${#Project#NODEUSERID1}"/>
</con:parameters></con:request></con:method><con:method name="UserGet" method="GET" id="b4c52e6c-50f0-4ebf-b8e3-ab596e55b443"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter disableUrlEncoding="true"><con:name>UserID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 404 500 400</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:User</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>404 400 405</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="UserGet" mediaType="application/xml" sslKeystore="80080010.pem" id="0a991f82-1623-4495-b24c-9cc11cc37183"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="UserUpdate" method="PUT" id="b4c52e6c-50f0-4ebf-b8e3-ab596e55b443"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value>urn:dece:accountid:org:dece:${#Project#NODEACCID}</con:value><con:style>TEMPLATE</con:style><con:default>urn:dece:accountid:org:dece:${#Project#NODEACCID}</con:default></con:parameter><con:parameter><con:name>UserID</con:name><con:value>urn:dece:userid:org:dece:${#Project#NODEUSERID}</con:value><con:style>TEMPLATE</con:style><con:default>urn:dece:userid:org:dece:${#Project#NODEUSERID}</con:default></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400 500 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:User</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>404 503</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:User</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403 400 404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>303</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>412</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="UserUpdate" mediaType="application/xml" sslKeystore="500500.pem" id="0a991f82-1623-4495-b24c-9cc11cc37183" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:full" xmlns="http://www.decellc.org/schema/2010/10/dece" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
        	<GivenName>${#Project#UserName}</GivenName>
		<SurName>Harbor</SurName>
	</Name>	
	<ContactInfo>
	<PrimaryEmail>			
          <Value>testing@uvvutesting.biz</Value>
         <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</PrimaryEmail>
	<AlternateEmail>			
        <Value>testing@uvvutesting.biz</Value>			
        <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</AlternateEmail>
	<Address>
		<PostalAddress>45999 Center Oak Plaza</PostalAddress>
		<PostalCode>20166</PostalCode>
		<Locality>Sterling</Locality>
		<StateOrProvince>NJ</StateOrProvince>
                <Country>US</Country>
	</Address>
	</ContactInfo>
        <Languages>
		<Language>de</Language>	
	</Languages>
       <DateOfBirth>1982-07-01</DateOfBirth>
       <Credentials> 
		<Username>${#Project#UserName}</Username>		  
                <Password>mypWd007</Password> 
	</Credentials>
<UserRecoveryTokens>
      <RecoveryItem>
		<QuestionID>1200</QuestionID>  
		<QuestionResponse>Turner</QuestionResponse>
       </RecoveryItem>
       <RecoveryItem>
		<QuestionID>1650</QuestionID>  
		<QuestionResponse>Phoenix</QuestionResponse>
       </RecoveryItem> 
</UserRecoveryTokens>
</User>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:method name="AddUser" method="POST" id="c8e33bf9-7e9a-4fc7-a85d-b9258d44e3b4"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:urn="urn:oasis:names:tc:SAML:2.0:protocol">urn:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:urn="urn:oasis:names:tc:SAML:2.0:protocol">urn:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="AddUser" mediaType="application/xml" postQueryString="false" sslKeystore="80080010.pem" id="8f456815-cfce-46c5-9b39-907b23b9d134"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:full" xmlns="http://www.decellc.org/schema/2010/10/dece" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
        	<GivenName>${#Project#UserName}</GivenName>
		<SurName>Harbor</SurName>
	</Name>	
	<ContactInfo>
	<PrimaryEmail>			
          <Value>testing@uvvutesting.biz</Value>
         <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</PrimaryEmail>
	<AlternateEmail>			
        <Value>testing@uvvutesting.biz</Value>			
        <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</AlternateEmail>
	<Address>
		<PostalAddress>45999 Center Oak Plaza</PostalAddress>
		<PostalCode>20166</PostalCode>
		<Locality>Sterling</Locality>
		<StateOrProvince>NJ</StateOrProvince>
                <Country>US</Country>
	</Address>
	</ContactInfo>
        <Languages>
		<Language>de</Language>	
	</Languages>
       <DateOfBirth>1982-07-01</DateOfBirth>
       <Credentials> 
		<Username>${#Project#UserName}</Username>		  
                <Password>mypWd007</Password> 
	</Credentials>
<UserRecoveryTokens>
      <RecoveryItem>
		<QuestionID>1200</QuestionID>  
		<QuestionResponse>Turner</QuestionResponse>
       </RecoveryItem>
       <RecoveryItem>
		<QuestionID>1650</QuestionID>  
		<QuestionResponse>Phoenix</QuestionResponse>
       </RecoveryItem> 
</UserRecoveryTokens>
</User>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="urn:dece:accountid:org:dece:${#Project#NODEACCID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Rights Token" type="rest" id="2cc5edf0-44c3-45c0-af0b-d6e19735bdd5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="Rights Token Get_List" path="${#TestCase#endPoint}" id="80183adb-1c5a-4de7-9d84-191f16c47def"><con:settings/><con:parameters/><con:method name="Rights Token Get" method="GET" id="8b4cec3d-fe23-4572-9b38-8f6059da115f"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 404 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:RightsTokenList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:RightsToken</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" id="dc5964a7-d54c-453b-85c8-f1cc8f5c4976"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Rights Token Create" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{RIGHTSTOKEN}/RightsToken" id="483f410c-4aec-4f56-bdb8-b53566c9bb97"><con:settings/><con:parameters><con:parameter><con:name>RIGHTSTOKEN</con:name><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="Rights Token Create" method="POST" id="1c20f275-4760-4c4b-994f-d981d038615c"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="0565a9cc-8569-46e9-a479-f8aacc70fa3f"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="AccountMergeTest" type="rest" id="6ba05ee5-e87a-41e2-93b7-5fac7723d364" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="AccountMergeTest" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{SurvivingAccountID}/Merge/Test/{RetiredAccountID}" id="d3ab43df-328b-4e09-8562-58a80596481d"><con:settings/><con:parameters><con:parameter><con:name>SurvivingAccountID</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>RetiredAccountID</con:name><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="Method 1" method="POST" id="449e438d-5c8b-4814-8ea3-5b23b2d9c7fc"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="cfd0be42-a0ab-4e51-972d-c4a67c9d1208"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="AccountMerge" type="rest" id="38577162-173b-4e3b-b7a4-7084681116dd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="AccountMerge" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{SurvivingAccountID}/Merge/{RetiredAccountID}" id="6ecab418-a971-4402-baea-c83b2ded7efc"><con:settings/><con:parameters><con:parameter><con:name>SurvivingAccountID</con:name><con:value>SurvivingAccountID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>SurvivingAccountID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>RetiredAccountID</con:name><con:value>RetiredAccountID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>RetiredAccountID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" method="POST" id="4659148b-17e0-4ad5-a68e-924d516aa757"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="acbfb94a-f132-4a9c-8d15-8b85ecc78c8c" sslKeystore="7600.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 Assertion=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"/>
  &lt;con:entry key="Authorization" value="SAML2 Assertion=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"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:AccountMerge xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/schema/md/v1.2/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd ">
<dece:UserReference ResourceDisposition="urn:dece:type:status:active">urn:dece:userid:org:dece:D842651EB198EA24E0401F0A07993565</dece:UserReference>                
<dece:UserReference ResourceDisposition="urn:dece:type:status:active">urn:dece:userid:org:dece:D842781AAA4A1E6FE0401F0A0799569A</dece:UserReference>                
</dece:AccountMerge>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="SurvivingAccountID" value="urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD842651EB188EA24E0401F0A07993565"/>
  <con:entry key="RetiredAccountID" value="urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD842781AAA3B1E6FE0401F0A0799569A"/>
</con:parameters></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="AccountMergeUndo" type="rest" id="216cdb32-edc4-42ff-940d-0a24ddc5b6ef" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints/><con:resource name="AccountMergeUndo" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{SurvivingAccountID}/Merge/Undo" id="a3a07d2e-db6c-4d70-a443-af62d5a50a00"><con:settings/><con:parameters><con:parameter><con:name>SurvivingAccountID</con:name><con:value>SurvivingAccountID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>SurvivingAccountID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" method="POST" id="4995638c-d575-4d0f-a861-2a267308a8d9"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="9f81ce2b-c5b6-493d-9b1f-7c101faacf30"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="UserResourceStatusUpdate" type="rest" id="3c0ff9bd-188e-4595-ac97-ec945cbf1b34" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="UserResourceStatusUpdate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}/ResourceStatus/Current/Update" id="a72ea2ab-ce4e-47cc-b28d-787420d41eae"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value>AccountID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>AccountID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>UserID</con:name><con:value>UserID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>UserID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="UserResourceStatusUpdate" method="PUT" id="bae01694-be77-463a-bcef-02134d4e45fb"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ResourceStatus</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="d9791dad-3957-43a7-9916-acc98d6cfcfe"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="AccountResourceStatusUpdate" type="rest" id="d2b48757-d9d7-48b6-99e2-5ffaec2a0276" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="AccountResourceStatusUpdate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/ResourceStatus/Current/Update" id="087a86a9-8ddc-4222-aa5e-8ea5f58f3b44"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value>AccountID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>AccountID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="ResourceStatusUpdate" method="PUT" id="a3720389-3d1d-49ca-8d11-1e6c7977a6b6"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="c5de7daa-09fc-46a7-9439-7290f79b45c1"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="STS" type="rest" id="2b399c77-329a-43cb-9c65-b90e43e27bf5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="STSCreate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/SecurityToken/SecurityTokenExchange" id="c9f3de54-1283-4f02-b8ea-7030652e5a47"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>tokentype</con:name><con:value>tokentype</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>tokentype</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter disableUrlEncoding="true"><con:name>audience</con:name><con:value>audience</con:value><con:style>QUERY</con:style><con:default>audience</con:default></con:parameter></con:parameters><con:method name="STSCreate" method="POST" id="dd8dec87-e935-415f-91f4-ef072cb2b292"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:proj="${#Project#coordinatorSchema}">proj:Credentials</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="8eccae92-53c1-462c-ad88-7bb2ab6bc7a9"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="STSGet" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/SecurityToken/Assertion/{assertionUUID}" id="f7ffc3a2-890e-4d43-8f2a-582eb82ffd58"><con:settings/><con:parameters><con:parameter><con:name>assertionUUID</con:name><con:value>assertionUUID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>assertionUUID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="STSGet" method="GET" id="5edddbc8-bc7c-4b0d-9fa5-394b1f0932ed"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:urn="urn:oasis:names:tc:SAML:2.0:assertion">urn:Assertion</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" id="198a8863-08df-42da-87ef-91fde7f4ac06"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Users" type="rest" id="7b549f36-fade-448e-abd1-eec08d8eff19" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:endpoint>${#Project#Query_HostName}</con:endpoint></con:endpoints><con:resource name="UserCreate" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" id="741ca285-16d9-469b-9763-d481e65a4edd"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="UserCreate" method="POST" id="7ab787fc-f35b-4e18-a1d5-8659cd87d6c5"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="f2a2c7e1-a731-4711-a1d2-ad4385d5961b"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="UserGet" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" id="dddb8d31-fc9b-4ad3-a2c7-6d3d2a08acbc"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter><con:name>UserID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="UserGet" method="GET" id="86bc739e-55c1-403f-8b8e-671a71a50685"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" accept="application/xml" id="bd30ed89-8660-4c25-9de9-24ddbaace996"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
</con:parameters></con:request></con:method><con:method name="Head" method="HEAD" id="5424c80b-2410-4ccf-b218-953fca62a19e"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" accept="application/xml" id="d198ce3e-5a8f-420b-816b-039a88347b62"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
</con:parameters></con:request></con:method><con:method name="Options" method="OPTIONS" id="a7936216-a184-4248-90a6-3b0ec3c9a594"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" accept="application/xml" id="7af2a6dc-278e-4e5f-b18f-0808d2067e82"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
</con:parameters></con:request></con:method><con:method name="Put" method="PUT" id="d964b6e3-2a95-4fe9-88da-73a5c7c9320c"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" accept="application/xml" id="4ff4e7d3-e01b-49f2-85c1-057d006ccb92"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
</con:parameters></con:request></con:method><con:method name="Post" method="POST" id="43ad5f93-c99c-43f2-9e6e-78ffa509bed7"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" accept="application/xml" id="171ff464-e8e8-414e-a096-0dca90d53ec1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
</con:parameters></con:request></con:method><con:method name="Delete" method="DELETE" id="5647073b-7013-48ab-b277-3e1078ed45dd"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" accept="application/xml" id="b17021e2-d598-4869-8f5b-79a254cb66a8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
</con:parameters></con:request></con:method></con:resource><con:resource name="UserUpdate" path="rest/${Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" id="4987e7c3-c85c-4cd2-9a1a-f856dbc6bc51"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter><con:name>UserID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="UserUpdate" method="PUT" id="6a470261-bac6-41cd-8a47-f505e28f02de"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="7f8ba311-ef9e-409b-8fc1-1e93ea6bb244"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="UserDelete" path="rest/${Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" id="cbcfbb23-7d33-4316-9687-dd77b7283e75"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter><con:name>UserID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="UserDelete" method="DELETE" id="bf6b949b-c75a-4925-9a83-1d665d93e67e"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" id="4317a0aa-8467-4ed6-b9ff-dce252c62a6c"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Policy_Create" type="rest" id="82d9cb90-27f6-448c-8acc-85de66a6aa54" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="Policy_Create_User" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" id="16f5e50e-05f4-4afc-8202-8f8f3e5b5bb5"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:value>NodeAccountId</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>NodeAccountId</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>NodeUserId</con:name><con:value>NodeUserId</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>NodeUserId</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>PolicyClass</con:name><con:value>PolicyClass</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>PolicyClass</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Policy_Create_User" method="POST" id="75ea3565-ad24-4ef6-a9df-579bdc2884c2"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/06/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:proj="${#Project#coordinatorSchema}">proj:PolicyList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>303</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="dc4ead41-f6a6-40ec-ab5b-30316b56c8d1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:request></con:method></con:resource><con:resource name="Policy_Create_Account" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/Policy/{PolicyClass}" id="f9144b89-8036-43e3-946f-846abd449aca"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:value>NodeAccountId</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>NodeAccountId</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>PolicyClass</con:name><con:value>PolicyClass</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>PolicyClass</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Policy_Create_Account" method="POST" id="fc4e7c8b-614a-4429-bd3b-857d42835992"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="c2ab245f-66de-4a8c-8868-24e357e9f68e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="UserValidationTokenCreate" type="rest" basePath="${#Project#HostName}" definitionUrl="C:\Users\ralluri\Desktop\LatestProjects_Users\Build_4.1\UserValidationTokenCreate_1.wadl" id="6cf0e6b0-9b3c-4aa4-9e2f-5b2c54dcc657" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Users/ralluri/Desktop/LatestProjects_Users/Build_4.1/UserValidationTokenCreate_1.wadl"><con:part><con:url>file:/C:/Users/ralluri/Desktop/LatestProjects_Users/Build_4.1/UserValidationTokenCreate_1.wadl</con:url><con:content><![CDATA[<application xmlns="http://wadl.dev.java.net/2009/02">
  <doc xml:lang="en" title="UserValidationTokenCreate"/>
  <resources base="${#Project#HostName}">
    <resource path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}/VerificationToken/{TokenType}" id="UserValidationTokenCreate">
      <doc xml:lang="en" title="UserValidationTokenCreate"/>
      <param name="AccountID" default="AccountID" type="xs:string" required="true" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <param name="UserID" default="UserID" type="xs:string" required="true" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <param name="TokenType" type="xs:string" required="false" default="" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <method name="POST" id="UserValidationTokenCreate">
        <doc xml:lang="en" title="UserValidationTokenCreate"/>
        <request>
          <representation mediaType="application/xml" element="dece:ErrorList" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </request>
        <response status="404 500">
          <representation mediaType="text/html"/>
        </response>
        <response status="400 401 403">
          <representation mediaType="application/xml" element="sch:ErrorList" xmlns:sch="http://www.decellc.org/schema"/>
        </response>
        <response status="405">
          <representation mediaType="text/plain"/>
        </response>
        <response status="">
          <representation mediaType="application/xml" element="dece:ErrorList" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="404">
          <representation mediaType="text/xml"/>
        </response>
        <response status="200">
          <representation mediaType="application/xml"/>
        </response>
        <response status="0">
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
        </response>
      </method>
      <method name="HEAD" id="HEAD">
        <doc xml:lang="en" title="HEAD"/>
        <request/>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
      </method>
      <method name="PUT" id="PUT">
        <doc xml:lang="en" title="PUT"/>
        <request>
          <representation mediaType="application/xml"/>
        </request>
        <response status="0">
          <representation mediaType=""/>
        </response>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="405">
          <representation mediaType="text/plain"/>
        </response>
      </method>
      <method name="GET" id="GET">
        <doc xml:lang="en" title="GET"/>
        <request/>
      </method>
      <method name="DELETE" id="DELETE">
        <doc xml:lang="en" title="DELETE"/>
        <request/>
        <response status="0">
          <representation mediaType=""/>
        </response>
        <response status="405">
          <representation mediaType="text/plain"/>
        </response>
      </method>
      <method name="OPTIONS" id="OPTIONS">
        <doc xml:lang="en" title="OPTIONS"/>
        <request/>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="0">
          <representation mediaType=""/>
        </response>
        <response status="403">
          <representation mediaType="application/xml" element="coor:ErrorList" xmlns:coor="http://www.decellc.org/schema/2012/03/coordinator"/>
        </response>
        <response status="405">
          <representation mediaType="text/xml" element="dece:ErrorList" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
      </method>
    </resource>
  </resources>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:endpoint>${#Project#Query_HostName}</con:endpoint></con:endpoints><con:resource name="UserValidationTokenCreate" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}/VerificationToken/{TokenType}" id="1cdca786-60ec-4661-86fe-6b63b2c9cae9"><con:settings/><con:parameters><con:parameter required="true"><con:name>AccountID</con:name><con:value>AccountID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>AccountID</con:default></con:parameter><con:parameter required="true"><con:name>UserID</con:name><con:value>UserID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>UserID</con:default></con:parameter><con:parameter><con:name>TokenType</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:method name="UserValidationTokenCreate" method="POST" id="a45071c6-67c4-438d-a473-ef62ebe9e5c4"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>404 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 403</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="1d919c86-bf18-45f1-8094-26107a084fce"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="HEAD" method="HEAD" id="269bb53f-002b-443b-9787-56f051922dc9"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="83ef019e-3a6d-4279-8e17-cf5669cb8f6c"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="PUT" method="PUT" id="d3ead78b-06c1-4a80-95ab-69528f8172d6"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="cd889be8-94b1-428d-8065-8fd9429ae39c"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="GET" method="GET" id="18274644-b5b3-4ba4-8c0e-ab60f33eb328"><con:settings/><con:parameters/><con:request name="Request 1" id="5d45a22c-8760-43e5-bdda-2d2d0d558b42"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="DELETE" method="DELETE" id="105a7433-2265-4eb8-b40d-ea5fb062c419"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="6458a416-4e65-4255-a098-a70a091bc584"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="OPTIONS" method="OPTIONS" id="1c02101f-8dc5-4ad8-a32a-843ceb214183"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/03/coordinator">coor:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="659f3acf-1ac5-4286-b28d-1c8d18cde47a"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite name="CommonTestSteps" disabled="true" id="6deffdf6-8888-4ac0-bba9-62ac3f5a0a8b"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AccountCreate API" searchProperties="true" id="11a715f3-fabc-4fee-900a-f24ebd6d9c5a"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="9ce61892-9d8a-4055-b161-e19938292410"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("accountname",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);

tC.setPropertyValue("ResponseType","SUCCESS");

tP.setPropertyValue("Request_XML",tP.getPropertyValue("Request_XML_Buffer"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="4dc8aec7-2e8e-4eef-9a55-46dedaad9403"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname);
def callTS = tP.getTestSuiteByName(callTSname);

tP.setPropertyValue("Country",callTS.getPropertyValue("Country"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));

def b = tC.getPropertyValue("nodeid");

log.info b;</script></con:config></con:testStep><con:testStep type="groovy" name="Generate AccountName" id="b8ba87db-df08-4f36-8c88-c580bb3ec25b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def today= new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("AccountName","accname_"+today);</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="1671024d-d72f-4387-92d2-ba0ce6079396"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 
import soapUIUtils.soapUIUtils;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
//def certPath = groovyUtils.projectPath

//Set fileKeyStorePath value 
//log.info "certPath: "+certPath;
//tP.setPropertyValue("certPath",""+certPath);

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")

myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("Account_Create");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="Account_Create" id="63a3307b-6106-4786-9cd4-e176efd0bf16"><con:settings/><con:config service="Account" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account" methodName="AccountCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Account_Create" mediaType="application/xml" postQueryString="false" id="ca4ff0a9-00f8-41e3-871a-d799b7db932c" accept="application/xml" sslKeystore="RET_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@remove_empty_content">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="${#Project#coordinatorSchema}"> 
<DisplayName>${#TestCase#AccountName}</DisplayName>
<Country>${#Project#Country}</Country>
</Account>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="947149be-7bb0-4a3f-9591-1927886d48ad"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="23303af8-41d1-41dc-8fef-fb959f9c4a2f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('Account_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 			
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);

</script></con:config></con:testStep><con:testStep type="groovy" name="Validate Response" id="bd82d430-2a93-49e7-b2a1-7b84f0809636"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def url       = context.expand( '${#Project#Provision_HostName}' );
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');


boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
		
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
		errorReason = "The supplied country code is invalid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
		errorReason = "The country code cannot be null.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
		errorReason = "API call not authorized";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserNotActive";
		errorReason = "User is not active";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
		errorReason = "Requesting User ID Not Specified";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;	
	
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
////assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
/*
if (XMLbodynull) {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
} else {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
*/
//Location Header

if (httpLocationHeader) {
      assert context.expand( '${#TestCase#httpLocation}') != null;

      //def a = context.expand( '${#TestCase#httpLocation}');
      def a = context.expand( '${#TestCase#httpLocation}');
      def b = a.toURL();
      def urlStr = b.getPath();

      if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO"){
                                
		assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
                 
          int lastColon = urlStr.lastIndexOf(':');
	     int lastSlash = urlStr.lastIndexOf('/');
	     accountid     = urlStr.substring(lastColon + 1);
	     def node_Account = urlStr.substring(lastSlash + 1);

          tC.setPropertyValue("NODE_ACCOUNT_ID",accountid);
                    
          tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",node_Account);                        
          tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",node_Account);                                                   
          
      } else {
            assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*");
            int lastColon = urlStr.lastIndexOf('%3A');
            int lastSlash = urlStr.lastIndexOf('/');
            accountid     = urlStr.substring(lastColon + 3);
            def node_Account = urlStr.substring(lastSlash + 1);

            tC.setPropertyValue("NODE_ACCOUNT_ID",accountid);
            
            tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",node_Account);
		  tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",node_Account);
      }

} else {
      	assert context.expand( '${#TestCase#httpLocation}') == "";
}


//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:testStep type="groovy" name="Return the NodeAccountId to the Calling Test Case" id="35d38137-3ff3-47da-9602-9bed11652bbf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("accountname",tC.getPropertyValue("accountname"));
callTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
callTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Keep-Alive</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/11/Account/urn:dece:accountid:org:dece:F950212C2CCEDAE0E0401F0A059909A5</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">RET</con:value></con:property><con:property><con:name>ResponseType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>Account_Create_Firsrt_User_Create_STS_Policies</con:value></con:property><con:property><con:name>sName</con:name><con:value>First_User_Create</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950212C2CCEDAE0E0401F0A059909A5</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/RET_concat.pem</con:value></con:property><con:property><con:name>accountname</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">accname_20140513_08445</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:F950212C2CCEDAE0E0401F0A059909A5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950212C2CCEDAE0E0401F0A059909A5</con:value></con:property><con:property><con:name>Consent_Version</con:name><con:value>20121024</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>b8ba87db-df08-4f36-8c88-c580bb3ec25b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9ce61892-9d8a-4055-b161-e19938292410</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c50a4409-da80-4892-a2c3-07a22e674bd0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd13479c-f25a-495b-8c94-31e5557a93a8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="User_DB_Validations" searchProperties="true" id="1cc8c7f1-8717-461e-801a-f31149324c32"><con:settings/><con:testStep type="groovy" name="Establish_TestCase_Properties" id="43c5dbf9-3574-4373-9d3f-f1b49a7247c5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("userType",null);
tC.setPropertyValue("Privilege",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("GivenName",null);
tC.setPropertyValue("SurName",null);
tC.setPropertyValue("PrimaryEmail",null);
tC.setPropertyValue("Language1",null);
tC.setPropertyValue("DisplayImageURL",null);
tC.setPropertyValue("AlternateEmail",null);
tC.setPropertyValue("PostalAddress",null);
tC.setPropertyValue("PostalCode",null);
tC.setPropertyValue("Locality",null);
tC.setPropertyValue("StateOrProvince",null);
tC.setPropertyValue("Country",null);
tC.setPropertyValue("TelephoneNumber",null);
tC.setPropertyValue("MobileTelephoneNumber",null);
tC.setPropertyValue("MeetsAgeOfMajority",null);
tC.setPropertyValue("DateOfBirth",null);
tC.setPropertyValue("urnUser",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("QuestionID1",null);
tC.setPropertyValue("QuestionResponse1",null);
tC.setPropertyValue("QuestionID2",null);
tC.setPropertyValue("QuestionResponse2",null);
tC.setPropertyValue("ResourceStatus",null);

tC.setPropertyValue("ResponseType",null);
tC.setPropertyValue("userType",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("NODE_USER_ID_FULL",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("user_oid",null);
tC.setPropertyValue("account_oid",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract_Required_Properties_from_Calling_TestCase" id="9597cca9-99cf-4605-8850-f3da92faacef"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("userType",callTC.getPropertyValue("userType"));
tC.setPropertyValue("GivenName",callTC.getPropertyValue("GivenName"));
tC.setPropertyValue("SurName",callTC.getPropertyValue("SurName"));
tC.setPropertyValue("PrimaryEmail",callTC.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("Language1",callTC.getPropertyValue("Language1"));
tC.setPropertyValue("DisplayImageURL",callTC.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",callTC.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",callTC.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",callTC.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",callTC.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",callTC.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",callTC.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",callTC.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",callTC.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("DateOfBirth",tP.getPropertyValue("DateOfBirth"));
tC.setPropertyValue("urnUser",callTC.getPropertyValue("urnUser"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",callTC.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",callTC.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",callTC.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",callTC.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",callTC.getPropertyValue("ResourceStatus"));

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("user_oid",callTC.getPropertyValue("user_oid"));
tC.setPropertyValue("account_oid",callTC.getPropertyValue("account_oid"));
tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserUpdate"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify_ACCOUNT_USER_Table" id="abb86f1f-38d1-4449-95aa-650ca561178f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("IsMinor","");

def dbHost = context.expand( '${#Project#targetSystem}' );
def userID = context.expand( '${#TestCase#user_oid}' );

def BirthDate = null;
def myXML1 = null;
def finalbday = null;

a = new dbUtils.dbUtils(log,dbHost);
b = new dbUtils.dbUser(log,dbHost);

Result = b.userGetRow(userID);

myXML1 = new XmlSlurper().parseText(Result);

log.info "Actual Rows ==  " + myXML1.ResultSet.Row.size();
		
 if(context.expand( '${#TestCase#ResponseType}')=='SUCCESS')
     {
        assert  myXML1.ResultSet.Row.size() == 1;
       	
       // assert myXML1.ResultSet.Row.STATUS == 'pending';
        assert myXML1.ResultSet.Row.PRIVILEGE == context.expand( '${#TestCase#Privilege}' );
        assert myXML1.ResultSet.Row.USERNAME == context.expand( '${#TestCase#UserName}' ) ;
        assert myXML1.ResultSet.Row.GIVEN_NAME == context.expand( '${#TestCase#GivenName}' ) ;
        assert myXML1.ResultSet.Row.SURNAME == context.expand( '${#TestCase#SurName}' ) ;
        assert myXML1.ResultSet.Row.PRIMARY_EMAIL == context.expand( '${#TestCase#PrimaryEmail}' ) ;
        assert myXML1.ResultSet.Row.TELEPHONE == context.expand( '${#TestCase#TelephoneNumber}' ) ;
        assert myXML1.ResultSet.Row.MOBILE_TELEPHONE == context.expand( '${#TestCase#MobileTelephoneNumber}' ) ;

        if(context.expand( '${#TestCase#DateOfBirth}' )== context.expand( '${#Project#CHILD_DOB_XML}' ))
        {

        	 log.info "I am CHILD";
        	 
           BirthDate = context.expand( '${#Project#CHILD_DOB_XML}' );
           assert myXML1.ResultSet.Row.AGE_CLASS == 'CHILD';

           tC.setPropertyValue("IsMinor","true");
           
         //  assert myXML1.ResultSet.Row.EMAIL_CLOCK_START_TIME == 'null' ;
         //  assert myXML1.ResultSet.Row.EMAIL_CLOCK_END_TIME == 'null' ;        
        } 
       
        else
        if(context.expand( '${#TestCase#DateOfBirth}' )== context.expand( '${#Project#YOUTH_DOB_XML}' ))
        {
        	log.info "I am YOUTH";
        	
          BirthDate = context.expand( '${#Project#YOUTH_DOB_XML}' );
          assert myXML1.ResultSet.Row.AGE_CLASS == 'YOUTH';

          tC.setPropertyValue("IsMinor","true");

                    
        //  assert myXML1.ResultSet.Row.EMAIL_CLOCK_START_TIME == 'null' ;
        //  assert myXML1.ResultSet.Row.EMAIL_CLOCK_END_TIME == 'null' ;

         } 
        else
        if(context.expand( '${#TestCase#DateOfBirth}' )== context.expand( '${#Project#ADULT_DOB_XML}' ))
        {

        	log.info "I am ADULT";
        	
          BirthDate = context.expand( '${#Project#ADULT_DOB_XML}' );
          
          assert myXML1.ResultSet.Row.AGE_CLASS == 'ADULT';

          tC.setPropertyValue("IsMinor","false");
          
        /* if(context.expand( '${#TestCase#attested}' ) == 'true')
          {
            assert myXML1.ResultSet.Row.EMAIL_CLOCK_START_TIME == 'null' ;
            assert myXML1.ResultSet.Row.EMAIL_CLOCK_END_TIME == 'null' ;
          }
          else
          {
            assert myXML1.ResultSet.Row.EMAIL_CLOCK_START_TIME != 'null' ;
            assert myXML1.ResultSet.Row.EMAIL_CLOCK_END_TIME != 'null' ;	
          }
          */ 
        } 

          // Retrieving Birth Date in proper format
 /******************************************************************************************************/
          
         bdaystring = myXML1.ResultSet.Row.BIRTH_DATE.toString();

         int lastspace = bdaystring.lastIndexOf(' ');

         finalbday = bdaystring.substring(0,lastspace);
          
         log.info "Birth Day:  " + finalbday;
       
        assert finalbday == BirthDate;

/******************************************************************************************************/

        assert myXML1.ResultSet.Row.COUNTRY == context.expand( '${#Project#GeoProfile}' );

        if(context.expand( '${#TestCase#attested}' ) == 'true')
        {
          assert myXML1.ResultSet.Row.PRIMARYEMAIL_VERIFICATION_DATE != null ;
          assert myXML1.ResultSet.Row.PRIMARYEMAIL_VERIFICATION_ENTY != null ;
          assert myXML1.ResultSet.Row.PRIMARYEMAIL_VERIFICATION_ID != null ;
        }  

      log.info "User Validations Passed";
               
   }// end if for success response check
  else
  {
  	assert  myXML1.ResultSet.Row.size() == 0;
  	log.info "No Validation Required";
  }
  

   
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify_NODE_USER_Table" id="c0be1fc5-2578-47b4-9cdb-492016e942e3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def dbHost = context.expand( '${#Project#targetSystem}' );
def userID = context.expand( '${#TestCase#user_oid}' );
def nodeid =context.expand('${#TestCase#nodeid}' );

a = new dbUtils.dbUtils(log,dbHost);
b = new dbUtils.dbUser(log,dbHost);
c=  new dbUtils.dbNode(log,dbHost);
//log.info b.accountGetfromNodeAccountId(accID);

String sql = """select to_char(rawtohex(NODE_OID)) NODE_OID from NODE_USER where USER_OID = '$userID'""";

log.info sql;

results = a.SelectFromDB(sql,dbHost);

log.info results;

/*
*  If zero length, no need to continue;
*/
 assert results.length() > 0;

  def myXML = new XmlSlurper().parseText(results);
  
  log.info "myXML.ResultSet.Row.size() is [" + myXML.ResultSet.Row.size() + "]";


if (context.expand( '${#TestCase#ResponseType}' ) == 'SUCCESS')
{
	assert myXML.ResultSet.Row.size() > 0;


	if(nodeid=="dece:cs"|| nodeid=="coord:cs" || nodeid=="portal" || nodeid=="portal:cs")
     {  
       assert myXML.ResultSet.Row.size() == 4;  
       //assert myXML.ResultSet.Row[0].NODE_OID == context.expand( '${#Project#Node_OID}' ); 
       log.info "DECE Node User Validation Passed";     
     }
     else
     { 
       assert myXML.ResultSet.Row.size() == 5;
      // assert myXML.ResultSet.Row[0].NODE_OID == context.expand( '${#Project#Node_OID}' );    
      // assert myXML.ResultSet.Row[1].NODE_OID == "10"; 
       log.info "3rd Party Node User Validation Passed";    
     }
	
}
else
{
	assert myXML.ResultSet.Row.size() == 0;
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify_USER_LEGAL_GUARDIAN_Table" id="5a5908f2-bbf4-4893-9a2b-ccd737924a0e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

if(context.expand( '${#TestCase#IsMinor}' )=="true")
{
def dbHost = context.expand( '${#Project#targetSystem}' );
def userID = context.expand( '${#TestCase#user_oid}' );

  a = new dbUtils.dbUtils(log,dbHost);
  b = new dbUtils.dbUser(log,dbHost);

  String sql = """select ATTESTATION_STATUS from USER_LEGAL_GUARDIAN where USER_OID ='$userID'""";
  results = a.SelectFromDB(sql,dbHost);

  /*
  *  If zero length, no need to continue;
  */
   assert results.length() > 0;

   def myXML = new XmlSlurper().parseText(results);
  
   log.info "myXML.ResultSet.Row.size() is [" + myXML.ResultSet.Row.size() + "]";

   assert myXML.ResultSet.Row.size() > 0;
	
   assert myXML.ResultSet.Row[0].ATTESTATION_STATUS == "pending";  

   log.info "Legal Guardian Validation Passed";	
}
else
{
	log.info "No Legal Guardian Validation Required";
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify_USER_Policies" id="49517fda-9cdf-4d09-80d5-39fc20518bd4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

if(context.expand( '${#TestCase#IsMinor}' )=="true")
{
def dbHost = context.expand( '${#Project#targetSystem}' );
def userID = context.expand( '${#TestCase#user_oid}' );

  a = new dbUtils.dbUtils(log,dbHost);
  b = new dbUtils.dbUser(log,dbHost);

  String sql = """select POLICY_CLASS,STATUS from POLICY P, POLICY_RELATIONSHIP PR where PR.POLICY_ACTOR = '"""+b.userGetfromNodeUserId(userID)+"""'
  and P.POLICY_OID = PR.POLICY_OID""";

  results = a.SelectFromDB(sql,dbHost);

  /*
  *  If zero length, no need to continue;
  */
   assert results.length() > 0;

   def myXML = new XmlSlurper().parseText(results);
  
   log.info "myXML.ResultSet.Row.size() is [" + myXML.ResultSet.Row.size() + "]";

   assert myXML.ResultSet.Row.size() > 0;
	
   assert myXML.ResultSet.Row[0].ATTESTATION_STATUS == "pending";  

   log.info "Legal Guardian Validation Passed";	
}
else
{
	log.info "No Legal Guardian Validation Required";
}
</script></con:config></con:testStep><con:properties><con:property><con:name>IsMinor</con:name><con:value/></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00004_UserUpdate_FUNC_CLG_Update_CHILD_DOB_TO_YOUTH_AGE</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Update_GeoProfile</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>Username</con:name><con:value>seconduser20130813_120746</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>seconduser20130813_120746</con:value></con:property><con:property><con:name>SurName</con:name><con:value>seconduser20130813_120746</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-08-17</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseType</con:name><con:value>DOB_NOT_EDITABLE</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE3CF68DF2A8CD783E0401F0A07994C97</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E3CF68DF2A8CD783E0401F0A07994C97</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>user_oid1</con:name><con:value>E2A349A2ABBCCB1DE0401F0A059926E1</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E3CF68DF2A8DD783E0401F0A07994C97</con:value></con:property><con:property><con:name>user_oid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E3CF692D5BE44697E0401F0A05993AD3</con:value></con:property><con:property><con:name>attested</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="FirstUserCreate API" searchProperties="true" id="0559683a-89a8-4543-9672-06581fc3aece"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="d582db6c-dcd9-48dc-aeb8-6739a143ca7b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("userType",null);
tC.setPropertyValue("Privilege",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("GivenName",null);
tC.setPropertyValue("SurName",null);
tC.setPropertyValue("PrimaryEmail",null);
tC.setPropertyValue("Language1",null);
tC.setPropertyValue("DisplayImageURL",null);
tC.setPropertyValue("AlternateEmail",null);
tC.setPropertyValue("PostalAddress",null);
tC.setPropertyValue("PostalCode",null);
tC.setPropertyValue("Locality",null);
tC.setPropertyValue("StateOrProvince",null);
tC.setPropertyValue("Country",null);
tC.setPropertyValue("TelephoneNumber",null);
tC.setPropertyValue("MobileTelephoneNumber",null);
tC.setPropertyValue("MeetsAgeOfMajority",null);
tC.setPropertyValue("DateOfBirth",null);
tC.setPropertyValue("urnUser",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("QuestionID1",null);
tC.setPropertyValue("QuestionResponse1",null);
tC.setPropertyValue("QuestionID2",null);
tC.setPropertyValue("QuestionResponse2",null);
tC.setPropertyValue("ResourceStatus",null);

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_USER_ID_FULL",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("user_oid1",null);
tC.setPropertyValue("account_oid",null);

tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("ResponseType",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="1ccb5a03-82ab-4a0b-98d6-d113aa76c42e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserCreate"));

tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("userType",callTC.getPropertyValue("userType"));
tC.setPropertyValue("GivenName",callTC.getPropertyValue("GivenName"));
tC.setPropertyValue("SurName",callTC.getPropertyValue("SurName"));
tC.setPropertyValue("PrimaryEmail",callTC.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("Language1",callTC.getPropertyValue("Language1"));
tC.setPropertyValue("DisplayImageURL",callTC.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",callTC.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",callTC.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",callTC.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",callTC.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",callTC.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",callTC.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",callTC.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",callTC.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("urnUser",callTC.getPropertyValue("urnUser"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",callTC.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",callTC.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",callTC.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",callTC.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",callTC.getPropertyValue("ResourceStatus"));

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("user_oid1",callTC.getPropertyValue("user_oid"));
tC.setPropertyValue("account_oid",callTC.getPropertyValue("account_oid"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Setting constants based on Geo Profile" id="b4e753b4-7766-4d87-8fc9-33de18c567ce"><con:settings/><con:config><script>import java.text.SimpleDateFormat;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/* Setting constants based on Geo Profile*/

if(tP.getPropertyValue("Country")=="US")
{
  tP.setPropertyValue("GeoProfile","US");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","13");
  tP.setPropertyValue("CHILD_MAX_AGE","12");
}
else
if(tP.getPropertyValue("Country")=="CA")
{
  tP.setPropertyValue("GeoProfile","CA");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","13");
  tP.setPropertyValue("CHILD_MAX_AGE","12");
}
else
if(tP.getPropertyValue("Country")=="GB")
{
  tP.setPropertyValue("GeoProfile","GB");          
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
else
if(tP.getPropertyValue("Country")=="AU")
{
  tP.setPropertyValue("GeoProfile","AU");          
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
  else
if(tP.getPropertyValue("Country")=="NZ")
{
  tP.setPropertyValue("GeoProfile","NZ");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
  else
if(tP.getPropertyValue("Country")=="IE")
{
  tP.setPropertyValue("GeoProfile","IE");             
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
else
if(tP.getPropertyValue("Country")=="AT")
{
  tP.setPropertyValue("GeoProfile","AT");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","14");
  tP.setPropertyValue("CHILD_MAX_AGE","13");
}
else
if(tP.getPropertyValue("Country")=="DE")
{
  tP.setPropertyValue("GeoProfile","DE");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","14");
  tP.setPropertyValue("CHILD_MAX_AGE","13");
}
  else
if(tP.getPropertyValue("Country")=="CH")
{
  tP.setPropertyValue("GeoProfile","CH");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
  else
if(tP.getPropertyValue("Country")=="FR")
{
  tP.setPropertyValue("GeoProfile","FR");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("CHILD_MAX_AGE","17");
}

	def userType = tC.getPropertyValue("userType")
	log.info "userType: "+userType;
	
	switch(userType){
	
	case "ADULT":
	
	Date dob = (new Date());
	dob = dob - ((tP.getPropertyValue("ADULT_MIN_AGE").toInteger()+1)*365);
	log.info "Adult DateOfBirth: "+dob.format('yyyy-MM-dd');
	tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
	tC.setPropertyValue("ADULT_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "YOUTH":
	
	Date dob = (new Date());
	dob = dob - ((tP.getPropertyValue("YOUTH_MIN_AGE").toInteger()+1)*365);
	log.info "YOUTH DateOfBirth: "+dob.format('yyyy-MM-dd');
	tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
	tC.setPropertyValue("YOUTH_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "CHILD":
	
	Date dob = (new Date());
	dob = dob - ((tP.getPropertyValue("CHILD_MAX_AGE").toInteger()-1)*365);
	log.info "CHILD DateOfBirth: "+dob.format('yyyy-MM-dd');
	tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
	tC.setPropertyValue("CHILD_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "ADULTPlus":
	
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, -1);
	def dob = sdf.format(calendar.getTime());
	log.info "AdultPlus DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	tC.setPropertyValue("ADULT_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "ADULTMinus":
	
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear1 = today.get(Calendar.YEAR)- tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear1-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, +1);
	def dob = sdf.format(calendar.getTime());
	log.info "ADULTMinus DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	tC.setPropertyValue("YOUTH_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "YOUTHPlus":
		
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, -1);
	def dob = sdf.format(calendar.getTime());
	log.info "YOUTHPlus DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob);
	tC.setPropertyValue("YOUTH_DOB_XML",dob.format('yyyy-MM-dd')); 
	break;

	case "YOUTHMinus":
   	
   	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, +1);
	def dob = sdf.format(calendar.getTime());
	log.info "YOUTHMinus DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	tC.setPropertyValue("CHILD_DOB_XML",dob.format('yyyy-MM-dd')); 
	break;

	case "ADULTToday":
	 
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, 0);
	def dob = sdf.format(calendar.getTime());
	log.info "ADULTToday DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	tC.setPropertyValue("ADULT_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "YOUTHToday":

	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear1 = today.get(Calendar.YEAR)- tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear1-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, 0);
	def dob = sdf.format(calendar.getTime());
	log.info "YOUTHToday DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	tC.setPropertyValue("YOUTH_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	default:
	log.info "userType is not matched!!"
	break;

	}

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="a961e1d1-6afc-401a-a431-2fa4d13c7282"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("User_Create");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="User_Create" id="1ab2b759-e404-4606-928e-6547f8a194a4"><con:settings/><con:config service="FirstUserCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" methodName="FirstUserCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User_Create" mediaType="application/xml" postQueryString="false" accept="application/xml" sslKeystore="RET_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request>${#Project#Request_XML}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1" id="dc7939c7-4e38-4936-ab5e-97a276c8b7cf"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Copy of User_Create" id="6afcd2ee-d125-48d3-86d9-0b8f90dcad31" disabled="true"><con:settings/><con:config service="FirstUserCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" methodName="FirstUserCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of User_Create" mediaType="application/xml" postQueryString="false" accept="application/xml" sslKeystore="RET_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:${#TestCase#Privilege}"
	xmlns="${#TestCase#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md"
	xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
		<GivenName>${#TestCase#GivenName}</GivenName>
		<SurName>${#TestCase#SurName}</SurName>
	</Name>
	<DisplayImage>
		<DisplayImageURL Height="1" MimeType="" Width="1">${#TestCase#DisplayImageURL}
		</DisplayImageURL>
	</DisplayImage>
	<ContactInfo>
		<PrimaryEmail>
			<Value>${#TestCase#PrimaryEmail}</Value>
			</PrimaryEmail>
			<AlternateEmail>
				<Value>${#TestCase#AlternateEmail}</Value>
				</AlternateEmail>
			<Address>
				<PostalAddress>${#TestCase#PostalAddress}</PostalAddress>
				<PostalCode>${#TestCase#PostalCode}</PostalCode>
				<Locality>${#TestCase#Locality}</Locality>
				<StateOrProvince>${#TestCase#StateOrProvince}</StateOrProvince>
				<Country>${#TestCase#Country}</Country>
			</Address>
			<TelephoneNumber>			
					<Value>${#TestCase#TelephoneNumber}</Value>
				</TelephoneNumber>
				<MobileTelephoneNumber>
					<Value>${#TestCase#MobileTelephoneNumber}</Value>
				</MobileTelephoneNumber>
	</ContactInfo>
	<Languages>
		<Language>${#TestCase#Language1}</Language>
	</Languages>
	<DateOfBirth MeetsAgeOfMajority="${#TestCase#MeetsAgeOfMajority}">${#TestCase#DateOfBirth}</DateOfBirth>
	<LegalGuardian>${#TestCase#urnUser}${#TestCase#CLG_NODE_USER_ID}</LegalGuardian>
	<Credentials>
		<Username>${#TestCase#UserName}</Username>
		<Password>${#TestCase#password}</Password>
	</Credentials>
	<UserRecoveryTokens>
		<RecoveryItem>
			<QuestionID>${#TestCase#QuestionID1}</QuestionID>
			<QuestionResponse>${#TestCase#QuestionResponse1}</QuestionResponse>
		</RecoveryItem>
		<RecoveryItem>
			<QuestionID>${#TestCase#QuestionID2}</QuestionID>
			<QuestionResponse>${#TestCase#QuestionResponse2}</QuestionResponse>
		</RecoveryItem>
	</UserRecoveryTokens>
	${#TestCase#ResourceStatus}
</User>
]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1" id="dc7939c7-4e38-4936-ab5e-97a276c8b7cf"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="9a2735bd-9e06-45ac-a022-26bb0cc52d8c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('User_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 			
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="5c4445c6-ff35-4043-93a3-4a216f729ec0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
def primaryEmail = context.expand( '${#TestCase#PrimaryEmail}');
//def nodetype      = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/

if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
		expectHTTPconnection = "close";
	break;

	case "INVALID_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
		errorReason = "The supplied country code is invalid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
		expectHTTPconnection = "close";
	break;

	case "NULL_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
		errorReason = "The country code cannot be null.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
		expectHTTPconnection = "close";
	break;
	
	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
		errorReason = "API call not authorized";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserNotActive";
		errorReason = "User is not active";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
		errorReason = "Requesting User ID Not Specified";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
		expectHTTPconnection = "close";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

		case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The user does not have permission to create a full-access user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The user does not have permission to create a user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:FirstUserMustBe18OrOlder";
		errorReason = "First User must be 18 years or older";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBe18OrOlder";
	break;


	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The first user in a household account must be a full-access user.";
		errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;

	case "INVALID_PASSWORD":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorReason = "The password is not valid.";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPasswordNotValid";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPasswordNotValid";
		expectHTTPconnection = "close";
	break;

	case "INVALID_PRIMARY_EMAIL":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPrimaryEmailNotValid";
		errorReason = "The primary email address is not valid. - " + primaryEmail;
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPrimaryEmailNotValid";
		expectHTTPconnection = "close";
	break;
	
}

tC.setPropertyValue("expectHTTPstatus",expectHTTPstatus);


// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
////assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
/*
if (XMLbodynull) {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
} else {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
*/
//Location Header

if (httpLocationHeader) {
	 assert context.expand( '${#TestCase#httpLocation}') != null;

      def a = context.expand( '${#TestCase#httpLocation}');
      def b = a.toURL();
      def urlStr = b.getPath();

      if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO"){
                                
         assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
         
         int lastColon = urlStr.lastIndexOf(':');
         int lastSlash = urlStr.lastIndexOf('/');
         userid     = urlStr.substring(lastColon + 1);
         def node_User = urlStr.substring(lastSlash + 1);
                                           
         tC.setPropertyValue("NODE_USER_ID",userid);

         tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
         tC.setPropertyValue("NODE_USER_ID_FULL1",node_User);
      } else {

         assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");
         int lastColon = urlStr.lastIndexOf('%3A');
         int lastSlash = urlStr.lastIndexOf('/');
         userid     = urlStr.substring(lastColon + 3);
         def node_User = urlStr.substring(lastSlash + 1);
                                
         tC.setPropertyValue("NODE_USER_ID",userid);

        tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
         tC.setPropertyValue("NODE_USER_ID_FULL1",node_User);
       }
      }
                                

else {
                                
       	assert context.expand( '${#TestCase#httpLocation}') == "";
}


//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		log.info errorLink;
		log.info myXML.Error.ErrorLink.toString()
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract_Account_OID_and_User_OID" id="a9ef8808-d79a-4a4e-9d45-2735c979786a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def dbUser;

def expectHTTPstatus = tC.getPropertyValue("expectHTTPstatus");

if (expectHTTPstatus == "HTTP/1.1 201 Created")
     {  	
  		def dBHost = context.expand( '${#Project#targetsystem}' )
		
		try          {
		                dbUser = new dbUtils.dbUser(log,dBHost);
		                }
		catch(Throwable e) {
		                log.info "ERROR - dbUtils.dbUser - $e";
		                assert 1 == 2;
		                }
		finally {
		         try {
		                 String u = dbUser.userGetUserOID(tC.getPropertyValue("UserName").toLowerCase());
		                 String a = dbUser.userGetAccountOIDbyUsername(tC.getPropertyValue("UserName").toLowerCase());
		
		                 assert u.length() > 0;
		                 assert a.length() > 0;
		                 
		                 tC.setPropertyValue("user_oid", u);
		                 tC.setPropertyValue("account_oid", a);
		                }
		          catch(Throwable e) {
		                 log.info "ERROR - dbUtils.userGetUserOID - $e";
		                 assert 1 == 2;                     
		     		     }
				}
     }
     else
     {
     	log.info ("Can not retreive User_OID for a negative scenario");
     }
     

</script></con:config></con:testStep><con:testStep type="groovy" name="Return the Username and NodeUserId to the Calling Test Case" id="8d03f277-e3d8-4e06-a9fa-caced0727f8f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID"));
callTC.setPropertyValue("NODE_USER_ID1",tC.getPropertyValue("NODE_USER_ID"));
callTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
callTC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL1"));
callTC.setPropertyValue("UserName",tC.getPropertyValue("UserName"));
callTC.setPropertyValue("user_oid1",tC.getPropertyValue("user_oid"));
callTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));
callTC.setPropertyValue("DateOfBirth",tC.getPropertyValue("DateOfBirth"));</script></con:config></con:testStep><con:properties><con:property><con:name>AlternateEmail</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value/></con:property><con:property><con:name>coordinatorSchema</con:name><con:value>${#Project#coordinatorSchema}</con:value></con:property><con:property><con:name>Country</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1995-05-18</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>FirstFullUsername</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">uvtc_firstuser20140513_08445</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Keep-Alive</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/11/Account/urn:dece:accountid:org:dece:F950212C2CCEDAE0E0401F0A059909A5/User/urn:dece:userid:org:dece:F950239D7D8D1715E0401F0A05990981</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/RET_concat.pem</con:value></con:property><con:property><con:name>Language1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">en</con:value></con:property><con:property><con:name>Locality</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950212C2CCEDAE0E0401F0A059909A5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:F950212C2CCEDAE0E0401F0A059909A5</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950239D7D8D1715E0401F0A05990981</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F950239D7D8D1715E0401F0A05990981</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F950239D7D8D1715E0401F0A05990981</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">full</con:value></con:property><con:property><con:name>QuestionID</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1650</con:value></con:property><con:property><con:name>QuestionResponse</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ResponseType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>sName</con:name><con:value>First_User_Create</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">uvtc_firstuser20140513_08445</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">+1.703598741</con:value></con:property><con:property><con:name>tName</con:name><con:value>Account_Create_Firsrt_User_Create_STS_Policies</con:value></con:property><con:property><con:name>urnUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>UserName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">uvtc_firstuser20140513_08445</con:value></con:property><con:property><con:name>userType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ADULT</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>user_oid</con:name><con:value>F950239D7D8E1715E0401F0A05990981</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>F950212C2CCFDAE0E0401F0A059909A5</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectHTTPstatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-05-18</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>3d78db1c-105b-43a0-b406-6bb0f690c833</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662fb201-c4e7-401c-b10a-548ea13f5020</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6afcd2ee-d125-48d3-86d9-0b8f90dcad31</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserCreate API" searchProperties="true" id="30aefa36-5265-4855-8432-a953e41b8771"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="cc7ab515-dee1-4301-a271-69c0066d67df"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("userType",null);
tC.setPropertyValue("Privilege",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("GivenName",null);
tC.setPropertyValue("SurName",null);
tC.setPropertyValue("PrimaryEmail",null);
tC.setPropertyValue("Language1",null);
tC.setPropertyValue("DisplayImageURL",null);
tC.setPropertyValue("AlternateEmail",null);
tC.setPropertyValue("PostalAddress",null);
tC.setPropertyValue("PostalCode",null);
tC.setPropertyValue("Locality",null);
tC.setPropertyValue("StateOrProvince",null);
tC.setPropertyValue("Country",null);
tC.setPropertyValue("TelephoneNumber",null);
tC.setPropertyValue("MobileTelephoneNumber",null);
tC.setPropertyValue("MeetsAgeOfMajority",null);
tC.setPropertyValue("DateOfBirth",null);
tC.setPropertyValue("urnUser",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("QuestionID1",null);
tC.setPropertyValue("QuestionResponse1",null);
tC.setPropertyValue("QuestionID2",null);
tC.setPropertyValue("QuestionResponse2",null);
tC.setPropertyValue("ResourceStatus",null);

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_USER_ID_FULL",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("SAML",null);

tC.setPropertyValue("ResponseType","SUCCESS");

//def request_XML_Buffer = context.expand( '${#Project#Request_XML_Buffer}' )

//tP.setPropertyValue("Request_XML",request_XML_Buffer);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="815bff3b-842a-4070-86bb-cece5b19c7a8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tP.setPropertyValue("Request_XML",tP.getPropertyValue("Request_XML_Buffer"));

tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserCreate"));

tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("userType",callTC.getPropertyValue("userType"));
tC.setPropertyValue("GivenName",callTC.getPropertyValue("GivenName"));
tC.setPropertyValue("SurName",callTC.getPropertyValue("SurName"));
tC.setPropertyValue("PrimaryEmail",callTC.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("Language1",callTC.getPropertyValue("Language1"));
tC.setPropertyValue("DisplayImageURL",callTC.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",callTC.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",callTC.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",callTC.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",callTC.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",callTC.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",callTC.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",callTC.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",callTC.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("urnUser",callTC.getPropertyValue("urnUser"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",callTC.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",callTC.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",callTC.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",callTC.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",callTC.getPropertyValue("ResourceStatus"));
tC.setPropertyValue("LegalGuardian",callTC.getPropertyValue("LegalGuardian"));

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID1", callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL", callTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("SAML",callTC.getPropertyValue("SAML"));
tC.setPropertyValue("CLG_NODE_USER_ID",callTC.getPropertyValue("CLG_NODE_USER_ID"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Setting constants based on Geo Profile" id="f23d9bb0-0bd1-4723-928b-a9c1d99c147f"><con:settings/><con:config><script>import java.text.SimpleDateFormat;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/* Setting constants based on Geo Profile*/

if(tP.getPropertyValue("Country")=="US")
	{
		tP.setPropertyValue("GeoProfile","US");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","13");
		tP.setPropertyValue("CHILD_MAX_AGE","12");
	}
else
if(tP.getPropertyValue("Country")=="CA")
	{
		tP.setPropertyValue("GeoProfile","CA");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","13");
		tP.setPropertyValue("CHILD_MAX_AGE","12");
	}
else
if(tP.getPropertyValue("Country")=="GB")
	{
		tP.setPropertyValue("GeoProfile","GB");          
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="AU")
	{
		tP.setPropertyValue("GeoProfile","AU");          
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="NZ")
	{
		tP.setPropertyValue("GeoProfile","NZ");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="IE")
	{
		tP.setPropertyValue("GeoProfile","IE");             
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="AT")
	{
		tP.setPropertyValue("GeoProfile","AT");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","14");
		tP.setPropertyValue("CHILD_MAX_AGE","13");
	}
else
if(tP.getPropertyValue("Country")=="DE")
	{
		tP.setPropertyValue("GeoProfile","DE");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","14");
		tP.setPropertyValue("CHILD_MAX_AGE","13");
	}
else
if(tP.getPropertyValue("Country")=="CH")
	{
		tP.setPropertyValue("GeoProfile","CH");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="FR")
	{
		tP.setPropertyValue("GeoProfile","FR");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("CHILD_MAX_AGE","17");
	}


	def userType = tC.getPropertyValue("userType")
	log.info "userType: "+userType;
	
	switch(userType){
	
	case "ADULT":
		Date dob = (new Date());
		dob = dob - ((tP.getPropertyValue("ADULT_MIN_AGE").toInteger()+1)*365);
		log.info "Adult DateOfBirth: "+dob.format('yyyy-MM-dd');
		tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
		tC.setPropertyValue("ADULT_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "YOUTH":	
		Date dob = (new Date());
		dob = dob - ((tP.getPropertyValue("YOUTH_MIN_AGE").toInteger()+1)*365);
		log.info "YOUTH DateOfBirth: "+dob.format('yyyy-MM-dd');
		tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
		tC.setPropertyValue("YOUTH_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "CHILD":	
		Date dob = (new Date());
		dob = dob - ((tP.getPropertyValue("CHILD_MAX_AGE").toInteger()-1)*365);
		log.info "CHILD DateOfBirth: "+dob.format('yyyy-MM-dd');
		tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
		tC.setPropertyValue("CHILD_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "ADULTPlus":	
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
		log.info curYear;
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear-1900,curMonth,curDay); 
		log.info now; 
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, -1);
		def dob = sdf.format(calendar.getTime());
		log.info "AdultPlus DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("ADULT_DOB_XML",dob); 
	break;

	case "ADULTMinus":	
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear1 = today.get(Calendar.YEAR)- tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
		log.info curYear1;
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear1-1900,curMonth,curDay);  
		log.info now; 
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, +1);
		def dob = sdf.format(calendar.getTime());
		log.info "ADULTMinus DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("YOUTH_DOB_XML",dob);
	break;

	case "YOUTHPlus":
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, -1);
		def dob = sdf.format(calendar.getTime());
		log.info "YOUTHPlus DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob); 
		tC.setPropertyValue("YOUTH_DOB_XML",dob);
	break;

	case "YOUTHMinus":   	
	   	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, +1);
		def dob = sdf.format(calendar.getTime());
		log.info "YOUTHMinus DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("CHILD_DOB_XML",dob); 
	break;

	case "ADULTToday":	 
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, 0);
		def dob = sdf.format(calendar.getTime());
		log.info "ADULTToday DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("ADULT_DOB_XML",dob); 
	break;

	case "YOUTHToday":
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear1 = today.get(Calendar.YEAR)- tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear1-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, 0);
		def dob = sdf.format(calendar.getTime());
		log.info "YOUTHToday DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("YOUTH_DOB_XML",dob); 
	break;

	default:
		log.info "userType is not matched!!"
	break;

	}</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="5aec259f-6efc-4047-958a-f404549b66a3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")

myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("User_Create");

def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="User_Create" id="bdbb05a4-3195-40a4-a273-e98edb919cda"><con:settings/><con:config service="FirstUserCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" methodName="FirstUserCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User_Create" mediaType="application/xml" postQueryString="false" accept="application/xml" sslKeystore="RET_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request>${#Project#Request_XML}
</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1" id="dc7939c7-4e38-4936-ab5e-97a276c8b7cf"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="bc996057-be4c-4bee-a9ac-43bd22a866c4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('User_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);

</script></con:config></con:testStep><con:testStep type="groovy" name="Test Case Name with Expected Result" disabled="true" id="d6783e9b-e68f-48ef-b658-7b9366e8ba55"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def httpStatus = context.expand( '${#TestCase#httpStatus}' )

logFile.append("${callTCname}"+"\t"+"$httpStatus" +"\n");</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="b31e8838-e244-4a70-b23e-27ecedeb39ef"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	   case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";		
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;


   case "INVALID_USER_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUsernameNotValid";
		errorReason = "The sign-in name is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUsernameNotValid";
	break;

   case "INVALID_GIVEN_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserGivenNameNotValid";
		errorReason = "The given name is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserGivenNameNotValid";
	break;

    case "INVALID_PASSWORD":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPasswordNotValid";
		errorReason = "The password is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPasswordNotValid";
	break;

    case "INVALID_SECURITY_ANS":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserSecurityAnswerNotValid";
		errorReason = "The answer to the security question is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserSecurityAnswerNotValid";
	break;

    case "INVALID_ADDRESS":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserAddressNotValid";
		errorReason = "The address is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserAddressNotValid";
	break;

	case "INVALID_SURNAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserSurnameNotValid";
		errorReason = "The surname is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserSurnameNotValid";
	break;


	case "INVALID_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
		errorReason = "The country code is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
		errorReason = "The country code is required.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "INVALID_PRIMARY_EMAIL":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPrimaryEmailNotValid";
		errorReason = "The primary email address is not valid." + primaryEmail;
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPrimaryEmailNotValid";
	break;
	
	case "INVALID_ALTERNATE_EMAIL":
			expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
			errorID     = "urn:dece:errorid:org:dece:AccountUserAlternateEmailNotValid";

			if(tP.getPropertyValue("AlternateEmail")=="")
			{
			  errorReason = "The alternate email address is not valid.";
			}
			else
			{
				errorReason = "The alternate email address is not valid. - " + tP.getPropertyValue("AlternateEmail");
			}
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserAlternateEmailNotValid";
	break;	
	
	
	case "INVALID_TELEPHONE":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserTelephoneNumberNotValid";
		errorReason = "The telephone number is not valid. - "+ context.expand('${#Project#TelephoneNo}');
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserTelephoneNumberNotValid";
	break;
	
	
	case "INVALID_PRIMARY_LANG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPrimaryLanguageNotValid";
		errorReason = "The primary language is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPrimaryLanguageNotValid";
	break;
	
	case "INVALID_LANG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserLanguageNotValid";
		errorReason = "The language is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserLanguageNotValid";
	break;
	
	case "DUPLICATE_LANG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserLanguageDuplicated";
		errorReason = "The language is a duplicate.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserLanguageDuplicated";
	break;
	
	case "DUPLICATE_EMAIL":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserEmailAddressDuplicated";
		errorReason = "The email address is a duplicate.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserEmailAddressDuplicated";
	break;

		
	case "USERNAME_EXISTS":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUsernameRegistered";
		errorReason = "The sign-in name already exists.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUsernameRegistered";
	break;

	case "INVALID_DOB":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserBirthDateNotValid";
		errorReason = "The date of birth is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserBirthDateNotValid";
	break;
	
	case "INVALID_CLG_STATUS":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:CLGStatusInRequestNotValid";
		errorReason = "The status of the connected legal guardian (CLG) must be active or pending.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#CLGStatusInRequestNotValid";
	break;
	
	
	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
		errorReason = "The API call is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";		
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_INACTIVE":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
		errorReason = "The requesting member is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;

	case "MAX_USERS_IN_ACCOUNT":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountActiveUserCountReachedMaxLimit";
		errorReason = "The maximum number of active members allowed has been reached.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountActiveUserCountReachedMaxLimit";
	break;
	
	case "USER_REQUESTING_NOT_PROVIDED":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
		errorReason = "Requesting User ID Not Specified";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

	case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The requesting member does not have permission to create a full-access member.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The requesting member does not have permission to create a member.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserMustBe18OrOlderToRegister";
		errorReason = "The member must be 18 or older.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserMustBe18OrOlderToRegister";
	break;
	
	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The first member must be a full-access member.";
		errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;
	
	case "FAU_MUST_BE_ABOVE18":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "A full-access member must be 18 or older.";
		errorID     = "urn:dece:errorid:org:dece:FullAccessUserMustBe18OrOlder";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FullAccessUserMustBe18OrOlder";
	break;
	
	case "LEGAL_GUARDIAN_REQD":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserRequiresLegalGuardianDeclared";
		errorReason = "The connected legal guardian (CLG) must be declared.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserRequiresLegalGuardianDeclared";
	break;
	
	case "CREATOR_MUST_BE_CLG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:CLGMustBeSameAsCreator";
		errorReason = "An underage member must be created by a connected legal guardian (CLG).";			       
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#CLGMustBeSameAsCreator";
	break;
	
	case "CREATOR_RESTRICTED_TO_BE_CLG":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The requesting member cannot create an underage member.";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateChildOrYouthUsers";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateChildOrYouthUsers";
	break;

	case "CLG_NOT_FOUND":
	     expectHTTPstatus   = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:LegalGuardianUserNotFound";
		errorReason = "The connected legal guardian (CLG) was not found.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#LegalGuardianUserNotFound";
	break;

	case "CLG_MUST_BE_FAU":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";		
		errorReason = "A connected legal guardian (CLG) must be a full-access member.";
		errorID     = "urn:dece:errorid:org:dece:LegalGuardianMustBeFullAccessUser";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#LegalGuardianMustBeFullAccessUser";
	break;

	case "CLG_STATUS_INVALID":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorReason = "The connected legal guardian (CLG) is not in a valid status.";
		errorID     = "urn:dece:errorid:org:dece:PendingCLGDeclaredNotInValidStatus";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#PendingCLGDeclaredNotInValidStatus";
	break;

     case "ACC_STATUS_INVALID":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountStatusNotValid";
		errorReason = "The account status is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountStatusNotValid";
	break;

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "STATUS_NOT_ALLOWED":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:ResourceStatusElementNotAllowed";
		errorReason = "The resource status element is not allowed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceStatusElementNotAllowed";
     break;

          case "DOB_NOT_CONSISTENT":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserDOBNotConsistentWithAgeOfMajorityDeclaration";
		errorReason = "The member's date of birth conflicts with the value of the AgeOfMajority attribute.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserDOBNotConsistentWithAgeOfMajorityDeclaration";
     break;

     case "AGE_OF_MAJORITY_BOOLEAN_ERROR":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:SaxParserException";
		errorReason = "cvc-datatype-valid.1.2.1: \'' is not a valid value for \'boolean\'.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#SaxParserException";
     break;

	case "DOB_DATATYPE_ERROR":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:SaxParserException";
		errorReason = "cvc-datatype-valid.1.2.3: \'' is not a valid value of union type \'DayOptionalDate-type\'.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#SaxParserException";
     break;

     case "INSUFFICIENT_PRIVILEGES":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "The user does not have permission to perform the requested action.";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;    

	
}

tC.setPropertyValue("expectHTTPstatus",expectHTTPstatus);

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
/*
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
////assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;
*/

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
/*
if (XMLbodynull) {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
} else {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
*/
//Location Header

if (httpLocationHeader) {
	 assert context.expand( '${#TestCase#httpLocation}') != null;

      def a = context.expand( '${#TestCase#httpLocation}');
      def b = a.toURL();
      def urlStr = b.getPath();

      if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
      	{                                
			assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
			
			int lastColon = urlStr.lastIndexOf(':');
			int lastSlash = urlStr.lastIndexOf('/');
			userid     = urlStr.substring(lastColon + 1);
			def node_User = urlStr.substring(lastSlash + 1);
			                                 
			tC.setPropertyValue("NODE_USER_ID",userid);			
			tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
      	} 
      else 
      	{
			assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");
			int lastColon = urlStr.lastIndexOf('%3A');
			int lastSlash = urlStr.lastIndexOf('/');
			userid     = urlStr.substring(lastColon + 3);
			def node_User = urlStr.substring(lastSlash + 1);
			                      
			tC.setPropertyValue("NODE_USER_ID",userid);			
			tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
      	}
                                
} else 
	{
       	assert context.expand( '${#TestCase#httpLocation}') == "";
	}


//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		log.info "Errorlink from Coord : " + myXML.Error.ErrorLink.toString();
		log.info "Errorlink  expected" + errorLink;
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract_Account_OID_and_User_OID" id="95f3189f-715e-4cef-bc91-14a1b4138b68"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def dbUser;

def expectHTTPstatus = tC.getPropertyValue("expectHTTPstatus");

if (expectHTTPstatus == "HTTP/1.1 201 Created")
     {
		def dBHost = context.expand( '${#Project#targetsystem}' )
		
		try          {
		                dbUser = new dbUtils.dbUser(log,dBHost);
		                }
		catch(Throwable e) {
		                log.info "ERROR - dbUtils.dbUser - $e";
		                assert 1 == 2;
		                }
		finally {
		         try {
		                String u = dbUser.userGetUserOID(tC.getPropertyValue("UserName").toLowerCase());
		                //String a = dbUser.userGetAccountOIDbyUsername(tC.getPropertyValue("UserName"))
		
		                 assert u.length() > 0;
		                 //assert a.length() > 0;
		                 
		                 tC.setPropertyValue("user_oid", u);
		                //tP.setPropertyValue("account_oid", a);
		                }
		          catch(Throwable e) 
		          	{
		                 log.info "ERROR - dbUtils.userGetUserOID - $e";
		                 assert 1 == 2;                     
		          	}
		}
     }
     else
     {
     	log.info ("Can not retreive User_OID for a negative scenario");
     }
     

</script></con:config></con:testStep><con:testStep type="groovy" name="Return the NodeAccountId and NodeUserId to the Calling Test Case" id="419e9428-03d9-4db9-8ef2-4eaee630ffe1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("UserName",tC.getPropertyValue("UserName"));
callTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID"));
callTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
callTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid"));
callTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

callTC.setPropertyValue("ADULT_DOB_XML",tC.getPropertyValue("ADULT_DOB_XML"));
callTC.setPropertyValue("YOUTH_DOB_XML",tC.getPropertyValue("YOUTH_DOB_XML"));
callTC.setPropertyValue("CHILD_DOB_XML",tC.getPropertyValue("CHILD_DOB_XML"));
callTC.setPropertyValue("DateOfBirth",tC.getPropertyValue("DateOfBirth"));</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Validate_Response" disabled="true" id="17e7e4a4-8bdd-4850-97a8-52aac8bc5a9b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#nodeIdRetailerforDeviceAuthToken}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#nodeIdRetailerforDeviceAuthToken}' );
}
if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The supplied country code is invalid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code cannot be null.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "API call not authorized";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:UserNotActive";
	errorReason = "User is not active";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

		case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The user does not have permission to create a full-access user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The user does not have permission to create a user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
			expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBe18OrOlder";
			errorReason = "First User must be 18 years or older";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBe18OrOlder";
	break;


	case "NO_MNG_ACC_CNST":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
			errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The first user in a household account must be a full-access user.";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;
	
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
////assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
/*
if (XMLbodynull) {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
} else {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
*/
//Location Header

if (httpLocationHeader) {
	 assert context.expand( '${#TestCase#httpLocation}') != null;

      def a = context.expand( '${#TestCase#httpLocation}');
      def b = a.toURL();
      def urlStr = b.getPath();

      if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO"){
                                
         assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
         
         int lastColon = urlStr.lastIndexOf(':');
         int lastSlash = urlStr.lastIndexOf('/');
         userid     = urlStr.substring(lastColon + 1);
         def node_User = urlStr.substring(lastSlash + 1);
                                           
         tC.setPropertyValue("NODE_USER_ID",userid);

         tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
         tC.setPropertyValue("NODE_USER_ID_FULL2",node_User);
      } else {
         assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");
         int lastColon = urlStr.lastIndexOf('%3A');
         int lastSlash = urlStr.lastIndexOf('/');
         userid     = urlStr.substring(lastColon + 3);
         def node_User = urlStr.substring(lastSlash + 1);
                                
         tC.setPropertyValue("NODE_USER_ID",userid);

         tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
         tC.setPropertyValue("NODE_USER_ID_FULL2",node_User);
      }
                                
} else {
                                
       	assert context.expand( '${#TestCase#httpLocation}') == "";
}


//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:testStep type="restrequest" name="Copy of User_Create" disabled="true" id="2519c470-f063-4e89-a74a-4c92d6a21e84"><con:settings/><con:config service="FirstUserCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" methodName="FirstUserCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of User_Create" mediaType="application/xml" postQueryString="false" accept="application/xml" sslKeystore="RET_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:${#TestCase#Privilege}" xmlns="${#TestCase#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
		<GivenName>${#TestCase#GivenName}</GivenName>
		<SurName>${#TestCase#SurName}</SurName>
	</Name>
	<DisplayImage>
		<DisplayImageURL Height="1" MimeType="" Width="1">${#TestCase#DisplayImageURL}
		</DisplayImageURL>
	</DisplayImage>
	<ContactInfo>
		<PrimaryEmail>
			<Value>${#TestCase#PrimaryEmail}</Value>
			</PrimaryEmail>
			<AlternateEmail>
				<Value>${#TestCase#AlternateEmail}</Value>
				</AlternateEmail>
			<Address>
				<PostalAddress>${#TestCase#PostalAddress}</PostalAddress>
				<PostalCode>${#TestCase#PostalCode}</PostalCode>
				<Locality>${#TestCase#Locality}</Locality>
				<StateOrProvince>${#TestCase#StateOrProvince}</StateOrProvince>
				<Country>${#TestCase#Country}</Country>
			</Address>
			<TelephoneNumber>			
					<Value>${#TestCase#TelephoneNumber}</Value>
				</TelephoneNumber>
				<MobileTelephoneNumber>
					<Value>${#TestCase#MobileTelephoneNumber}</Value>
				</MobileTelephoneNumber>
	</ContactInfo>
	<Languages>
		<Language>${#TestCase#Language1}</Language>
	</Languages>
	<DateOfBirth MeetsAgeOfMajority="${#TestCase#MeetsAgeOfMajority}">${#TestCase#DateOfBirth}</DateOfBirth>
<!--	<LegalGuardian>${#TestCase#urnUser}${#TestCase#CLG_NODE_USER_ID}</LegalGuardian>-->
	<Credentials>
		<Username>${#TestCase#UserName}</Username>
		<Password>${#TestCase#password}</Password>
	</Credentials>
	<UserRecoveryTokens>
		<RecoveryItem>
			<QuestionID>${#TestCase#QuestionID1}</QuestionID>
			<QuestionResponse>${#TestCase#QuestionResponse1}</QuestionResponse>
		</RecoveryItem>
		<RecoveryItem>
			<QuestionID>${#TestCase#QuestionID2}</QuestionID>
			<QuestionResponse>${#TestCase#QuestionResponse2}</QuestionResponse>
		</RecoveryItem>
	</UserRecoveryTokens>
	${#TestCase#ResourceStatus}
</User>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1" id="dc7939c7-4e38-4936-ab5e-97a276c8b7cf"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-05-18</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2003-05-16</con:value></con:property><con:property><con:name>coordinatorSchema</con:name><con:value>${#Project#coordinatorSchema}</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1995-05-18</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE19F934C4E6BFA99E0401F0A05993DA2</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE19F95D7CFC268C9E0401F0A079952C9</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_084414</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/11/Account/urn:dece:accountid:org:dece:F950212C2CCEDAE0E0401F0A059909A5/User/urn:dece:userid:org:dece:F950235940171B42E0401F0A05990975</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/RET_concat.pem</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950212C2CCEDAE0E0401F0A059909A5</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950235940171B42E0401F0A05990975</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F950235940171B42E0401F0A05990975</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E56665ABC808DB00E0401F0A07993371</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+o6EP7ur+jUj05pSlteOsAMAt7LCCqUA+oXJ6QpxFNSaNIW/fUnKbbyol7OdZxhst3sPrv75EkaDK6CstNmDEechFTpd5vqCxR/Hjbrml2pmppl2xWtVrfmWqUO5p5vliuG5alKn7EY9ynjkPKmWgaGpQFbM6wJAI5lOaBaAqb1rCpTHDERWriUgKpsVwFlTpa2qcYRdULICHMoXGHmcOS47eHAEZ4OzDGprcYOZZYwai05Xzu6jkoeRjgIUAmFK72hH/g0POa4ZEEhjyP8kdNjTfVjb5qmpdQshdFCLwMAdFDXhY/HyOJSbV3km7HXp364W3cgDSlBMCDvUIIaYr4MPaUdLMKI8OXqm9CGbgAZWsNbpCHDopeq/pkgQ3dmpAOQEYMaW0IjDzbGPo4wRVj5Ne431cvzJrjbO4kgZX4YrdjR+u8gYZrgIFxjT2N5ZTm68yN+0a5WAyOnT1EQM5LgO0mTNUSYKQ8R9sl2QJggn8eUbPzKlol/krMMo78ZS0Pfxyqg6190p0sWmPH/M7P9ee2iTGEQ45ZVfryO32uDh3Y6GKVe5Yr6m/tt7991AJoZhH3nHahi3B/rY7IW3PrYxDeD0fCajno8nVvm3Ju63B281m9eK88e2Xavnp6fU2ylrnk7mqWjQVQhm+veuO4GyawTjbsbczIP2rXXmc9+PV+wYac6Cl7bG4b4P0kySxGY3t6WbXQfpJvx8moYvY6H15MrsLmN57VBZzGtptXwrhe1p8kIgOQ31NF7zO3Hd59cVDwaPs0e3+5mKXR9cvN032t+1rRfw6ExlwQ3nr9ixPOlpEe/q9yIeUH+s7xIC/E0P3N11lKjGMeUqy25S0qLEwsBIp4jhrlb39RtUDbr3Wq31jWqht0DFjBuQBvY9Tqo14xcg3YojiB2QuoTmUuq7I4/PwNEK4dh6uFIS8IYLTFTf4jYhRwqfToWhyOkDE9CoeJGYi5rtRS8WdWKZXrVcM5No2Ybhqrchfye3kdtn+PoULrNA+keY0TWBEt9lwRnguGMi15sYBLzwCglsERxLG6ASIqwU7Zqts7Iah1giVRfhV4c4NJ6uc46o7Pdb1mDiGXWcW+SHbxv6zr+lrdA+HhEOjBZyzUWY8Qnd5Dp2Hkh3xdc2S84D9+OPSLPl+gnjwjaITn89EkTyY+CI6Kil477UnChcD97++lO/QdQ+nE/ikReQvbS5pepuB+EerTyaW5gaVOKkyTO5leVyhiJ8LoQSEN3MYqFvL1Nwt+Y6kUI/azbpUB9lLmwH+KL+ZK6HHK8EmxTsuUZTwsXM/m06Itjsj333XKQUvSN4y3/ytYJxAtEIv7xkYIcJP2E+UH8pGH0WfhXsfbyiDrFe4ITupAreY+8fUMKFIqwRAhfGO0H/yrAV8kPjUWTCyxcsGkec/z9F0UqWlOFCIUx5f2umhn2VTbDyd/W2Pl0OgmTKfnH1bxl317Nj8OBK/RuBdXCl/y3s0YyuiCsyhdAhqWpbsVLUySniz1V/wB4IuxGuVPudHrddg8cCnvbLhp4UEnrxHxq2evp8Xlo/QE=</con:value></con:property><con:property><con:name>SAML2</con:name><con:value>SAML2 Assertion=null</con:value></con:property><con:property><con:name>SecondUserName</con:name><con:value>username_20130122_043244</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Create_API</con:value></con:property><con:property><con:name>StandardUserName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_084414</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>tName</con:name><con:value>User_Create_STS_Policies</con:value></con:property><con:property><con:name>UC_RequestBody_Mandatory</con:name><con:value/></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_084414</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>F950235940181B42E0401F0A05990975</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-27</con:value></con:property><con:property><con:name>expectHTTPstatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5ff78eb3-d79f-4f4a-b9a8-5ec1c84f61c0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3d78db1c-105b-43a0-b406-6bb0f690c833</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662fb201-c4e7-401c-b10a-548ea13f5020</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f23d9bb0-0bd1-4723-928b-a9c1d99c147f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95f3189f-715e-4cef-bc91-14a1b4138b68</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Child_UserCreate API" searchProperties="true" id="590b402e-4d94-4c2b-a26d-a4d3267a4ef0"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="825bf281-a9b5-44b0-a50f-928e16fbf440"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("userType",null);
tC.setPropertyValue("Privilege",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("GivenName",null);
tC.setPropertyValue("SurName",null);
tC.setPropertyValue("PrimaryEmail",null);
tC.setPropertyValue("Language1",null);
tC.setPropertyValue("DisplayImageURL",null);
tC.setPropertyValue("AlternateEmail",null);
tC.setPropertyValue("PostalAddress",null);
tC.setPropertyValue("PostalCode",null);
tC.setPropertyValue("Locality",null);
tC.setPropertyValue("StateOrProvince",null);
tC.setPropertyValue("Country",null);
tC.setPropertyValue("TelephoneNumber",null);
tC.setPropertyValue("MobileTelephoneNumber",null);
tC.setPropertyValue("MeetsAgeOfMajority",null);
tC.setPropertyValue("DateOfBirth",null);
tC.setPropertyValue("urnUser",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("QuestionID1",null);
tC.setPropertyValue("QuestionResponse1",null);
tC.setPropertyValue("QuestionID2",null);
tC.setPropertyValue("QuestionResponse2",null);
tC.setPropertyValue("ResourceStatus",null);

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_USER_ID_FULL",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("SAML",null);

tC.setPropertyValue("ResponseType","SUCCESS");
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="99a30dc4-36a4-4180-be54-b811a4ce9699"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserCreate"));

tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("userType",callTC.getPropertyValue("userType"));
tC.setPropertyValue("GivenName",callTC.getPropertyValue("GivenName"));
tC.setPropertyValue("SurName",callTC.getPropertyValue("SurName"));
tC.setPropertyValue("PrimaryEmail",callTC.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("Language1",callTC.getPropertyValue("Language1"));
tC.setPropertyValue("DisplayImageURL",callTC.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",callTC.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",callTC.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",callTC.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",callTC.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",callTC.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",callTC.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",callTC.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",callTC.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("urnUser",callTC.getPropertyValue("urnUser"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",callTC.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",callTC.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",callTC.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",callTC.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",callTC.getPropertyValue("ResourceStatus"));

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID1", callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL", callTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("SAML",callTC.getPropertyValue("SAML"));
tC.setPropertyValue("CLG_NODE_USER_ID", callTC.getPropertyValue("CLG_NODE_USER_ID"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Setting constants based on Geo Profile" id="f4225765-f21f-48e3-adb8-f313ff9798d1"><con:settings/><con:config><script>import java.text.SimpleDateFormat;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


/* Setting constants based on Geo Profile*/

if(tP.getPropertyValue("Country")=="US")
	{
		tP.setPropertyValue("GeoProfile","US");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","13");
		tP.setPropertyValue("CHILD_MAX_AGE","12");
	}
else
if(tP.getPropertyValue("Country")=="CA")
	{
		tP.setPropertyValue("GeoProfile","CA");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","13");
		tP.setPropertyValue("CHILD_MAX_AGE","12");
	}
else
if(tP.getPropertyValue("Country")=="GB")
	{
		tP.setPropertyValue("GeoProfile","GB");          
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="AU")
	{
		tP.setPropertyValue("GeoProfile","AU");          
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="NZ")
	{
		tP.setPropertyValue("GeoProfile","NZ");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="IE")
	{
		tP.setPropertyValue("GeoProfile","IE");             
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="AT")
	{
		tP.setPropertyValue("GeoProfile","AT");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","14");
		tP.setPropertyValue("CHILD_MAX_AGE","13");
	}
else
if(tP.getPropertyValue("Country")=="DE")
	{
		tP.setPropertyValue("GeoProfile","DE");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","14");
		tP.setPropertyValue("CHILD_MAX_AGE","13");
	}
else
if(tP.getPropertyValue("Country")=="CH")
	{
		tP.setPropertyValue("GeoProfile","CH");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="FR")
	{
		tP.setPropertyValue("GeoProfile","FR");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("CHILD_MAX_AGE","17");
	}


	def userType = tC.getPropertyValue("userType")
	log.info "userType: "+userType;
	
	switch(userType){
	
	case "ADULT":
		Date dob = (new Date());
		dob = dob - ((tP.getPropertyValue("ADULT_MIN_AGE").toInteger()+1)*365);
		log.info "Adult DateOfBirth: "+dob.format('yyyy-MM-dd');
		tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
		tC.setPropertyValue("ADULT_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "YOUTH":	
		Date dob = (new Date());
		dob = dob - ((tP.getPropertyValue("YOUTH_MIN_AGE").toInteger()+1)*365);
		log.info "YOUTH DateOfBirth: "+dob.format('yyyy-MM-dd');
		tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
		tC.setPropertyValue("YOUTH_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "CHILD":	
		Date dob = (new Date());
		dob = dob - ((tP.getPropertyValue("CHILD_MAX_AGE").toInteger()-1)*365);
		log.info "CHILD DateOfBirth: "+dob.format('yyyy-MM-dd');
		tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
		tC.setPropertyValue("CHILD_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "ADULTPlus":	
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, -1);
		def dob = sdf.format(calendar.getTime());
		log.info "AdultPlus DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("ADULT_DOB_XML",dob); 
	break;

	case "ADULTMinus":	
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear1 = today.get(Calendar.YEAR)- tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear1-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, +1);
		def dob = sdf.format(calendar.getTime());
		log.info "ADULTMinus DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("YOUTH_DOB_XML",dob);
	break;

	case "YOUTHPlus":
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, -1);
		def dob = sdf.format(calendar.getTime());
		log.info "YOUTHPlus DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob); 
		tC.setPropertyValue("YOUTH_DOB_XML",dob);
	break;

	case "YOUTHMinus":   	
	   	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, +1);
		def dob = sdf.format(calendar.getTime());
		log.info "YOUTHMinus DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("CHILD_DOB_XML",dob); 
	break;

	case "ADULTToday":	 
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, 0);
		def dob = sdf.format(calendar.getTime());
		log.info "ADULTToday DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("ADULT_DOB_XML",dob); 
	break;

	case "YOUTHToday":
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear1 = today.get(Calendar.YEAR)- tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear1-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, 0);
		def dob = sdf.format(calendar.getTime());
		log.info "YOUTHToday DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("YOUTH_DOB_XML",dob); 
	break;

	default:
		log.info "userType is not matched!!"
	break;

	}</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="e2c07c46-58e7-4b3c-80ae-dff6696e9073"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")

myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("User_Create");

def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="User_Create" id="66f614a6-ae05-4441-9809-1b9b0f97fbc1"><con:settings/><con:config service="FirstUserCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" methodName="FirstUserCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User_Create" mediaType="application/xml" postQueryString="false" accept="application/xml" sslKeystore="RET_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:${#TestCase#Privilege}" xmlns="${#TestCase#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
		<GivenName>${#TestCase#GivenName}</GivenName>
		<SurName>${#TestCase#SurName}</SurName>
	</Name>
	<DisplayImage>
		<DisplayImageURL Height="1" MimeType="" Width="1">${#TestCase#DisplayImageURL}
		</DisplayImageURL>
	</DisplayImage>
	<ContactInfo>
		<PrimaryEmail>
			<Value>${#TestCase#PrimaryEmail}</Value>
			</PrimaryEmail>
			<AlternateEmail>
				<Value>${#TestCase#AlternateEmail}</Value>
				</AlternateEmail>
			<Address>
				<PostalAddress>${#TestCase#PostalAddress}</PostalAddress>
				<PostalCode>${#TestCase#PostalCode}</PostalCode>
				<Locality>${#TestCase#Locality}</Locality>
				<StateOrProvince>${#TestCase#StateOrProvince}</StateOrProvince>
				<Country>${#TestCase#Country}</Country>
			</Address>
			<TelephoneNumber>			
					<Value>${#TestCase#TelephoneNumber}</Value>
				</TelephoneNumber>
				<MobileTelephoneNumber>
					<Value>${#TestCase#MobileTelephoneNumber}</Value>
				</MobileTelephoneNumber>
	</ContactInfo>
	<Languages>
		<Language>${#TestCase#Language1}</Language>
	</Languages>
	<DateOfBirth MeetsAgeOfMajority="${#TestCase#MeetsAgeOfMajority}">${#TestCase#DateOfBirth}</DateOfBirth>
	<LegalGuardian>${#TestCase#urnUser}${#TestCase#CLG_NODE_USER_ID}</LegalGuardian>
	<Credentials>
		<Username>${#TestCase#UserName}</Username>
		<Password>${#TestCase#password}</Password>
	</Credentials>
	<UserRecoveryTokens>
		<RecoveryItem>
			<QuestionID>${#TestCase#QuestionID1}</QuestionID>
			<QuestionResponse>${#TestCase#QuestionResponse1}</QuestionResponse>
		</RecoveryItem>
		<RecoveryItem>
			<QuestionID>${#TestCase#QuestionID2}</QuestionID>
			<QuestionResponse>${#TestCase#QuestionResponse2}</QuestionResponse>
		</RecoveryItem>
	</UserRecoveryTokens>
	${#TestCase#ResourceStatus}
</User>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1" id="dc7939c7-4e38-4936-ab5e-97a276c8b7cf"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="00dbc9fe-3cb7-41a2-abca-24208936a03f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('User_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="296d9a97-360d-4cd6-9e68-561e11924715"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	   case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";		
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;


   case "INVALID_USER_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUsernameNotValid";
		errorReason = "The sign-in name is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUsernameNotValid";
	break;

   case "INVALID_GIVEN_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserGivenNameNotValid";
		errorReason = "The given name is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserGivenNameNotValid";
	break;

    case "INVALID_PASSWORD":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPasswordNotValid";
		errorReason = "The password is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPasswordNotValid";
	break;

    case "INVALID_SECURITY_ANS":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserSecurityAnswerNotValid";
		errorReason = "The answer to the security question is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserSecurityAnswerNotValid";
	break;

    case "INVALID_ADDRESS":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserAddressNotValid";
		errorReason = "The address is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserAddressNotValid";
	break;

	case "INVALID_SURNAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserSurnameNotValid";
		errorReason = "The surname is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserSurnameNotValid";
	break;


	case "INVALID_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
		errorReason = "The country code is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
		errorReason = "The country code is required.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "INVALID_PRIMARY_EMAIL":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPrimaryEmailNotValid";
		errorReason = "The primary email address is not valid." + primaryEmail;
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPrimaryEmailNotValid";
	break;
	
	case "INVALID_ALTERNATE_EMAIL":
			expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
			errorID     = "urn:dece:errorid:org:dece:AccountUserAlternateEmailNotValid";

			if(tP.getPropertyValue("AlternateEmail")=="")
			{
			  errorReason = "The alternate email address is not valid.";
			}
			else
			{
				errorReason = "The alternate email address is not valid. - " + tP.getPropertyValue("AlternateEmail");
			}
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserAlternateEmailNotValid";
	break;	
	
	
	case "INVALID_TELEPHONE":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserTelephoneNumberNotValid";
		errorReason = "The telephone number is not valid. - "+ context.expand('${#Project#TelephoneNo}');
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserTelephoneNumberNotValid";
	break;
	
	
	case "INVALID_PRIMARY_LANG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPrimaryLanguageNotValid";
		errorReason = "The primary language is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPrimaryLanguageNotValid";
	break;
	
	case "INVALID_LANG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserLanguageNotValid";
		errorReason = "The language is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserLanguageNotValid";
	break;
	
	case "DUPLICATE_LANG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserLanguageDuplicated";
		errorReason = "The language is a duplicate.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserLanguageDuplicated";
	break;
	
	case "DUPLICATE_EMAIL":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserEmailAddressDuplicated";
		errorReason = "The email address is a duplicate.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserEmailAddressDuplicated";
	break;

		
	case "USERNAME_EXISTS":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUsernameRegistered";
		errorReason = "The sign-in name already exists.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUsernameRegistered";
	break;

	case "INVALID_DOB":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserBirthDateNotValid";
		errorReason = "The date of birth is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserBirthDateNotValid";
	break;
	
	case "INVALID_CLG_STATUS":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:CLGStatusInRequestNotValid";
		errorReason = "The status of the connected legal guardian (CLG) must be active or pending.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#CLGStatusInRequestNotValid";
	break;
	
	
	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
		errorReason = "The API call is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";		
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_INACTIVE":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
		errorReason = "The requesting member is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;

	case "MAX_USERS_IN_ACCOUNT":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountActiveUserCountReachedMaxLimit";
		errorReason = "The maximum number of active members allowed has been reached.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountActiveUserCountReachedMaxLimit";
	break;
	
	case "USER_REQUESTING_NOT_PROVIDED":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
		errorReason = "Requesting User ID Not Specified";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

	case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The requesting member does not have permission to create a full-access member.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The requesting member does not have permission to create a member.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserMustBe18OrOlderToRegister";
		errorReason = "The member must be 18 or older.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserMustBe18OrOlderToRegister";
	break;
	
	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The first member must be a full-access member.";
		errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;
	
	case "FAU_MUST_BE_ABOVE18":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "A full-access member must be 18 or older.";
		errorID     = "urn:dece:errorid:org:dece:FullAccessUserMustBe18OrOlder";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FullAccessUserMustBe18OrOlder";
	break;
	
	case "LEGAL_GUARDIAN_REQD":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserRequiresLegalGuardianDeclared";
		errorReason = "The connected legal guardian (CLG) must be declared.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserRequiresLegalGuardianDeclared";
	break;
	
	case "CREATOR_MUST_BE_CLG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:CLGMustBeSameAsCreator";
		errorReason = "An underage member must be created by a connected legal guardian (CLG).";			       
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#CLGMustBeSameAsCreator";
	break;
	
	case "CREATOR_RESTRICTED_TO_BE_CLG":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The requesting member cannot create an underage member.";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateChildOrYouthUsers";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateChildOrYouthUsers";
	break;

	case "CLG_NOT_FOUND":
	     expectHTTPstatus   = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:LegalGuardianUserNotFound";
		errorReason = "The connected legal guardian (CLG) was not found.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#LegalGuardianUserNotFound";
	break;

	case "CLG_MUST_BE_FAU":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";		
		errorReason = "A connected legal guardian (CLG) must be a full-access member.";
		errorID     = "urn:dece:errorid:org:dece:LegalGuardianMustBeFullAccessUser";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#LegalGuardianMustBeFullAccessUser";
	break;

	case "CLG_STATUS_INVALID":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorReason = "The connected legal guardian (CLG) is not in a valid status.";
		errorID     = "urn:dece:errorid:org:dece:PendingCLGDeclaredNotInValidStatus";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#PendingCLGDeclaredNotInValidStatus";
	break;

     case "ACC_STATUS_INVALID":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountStatusNotValid";
		errorReason = "The account status is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountStatusNotValid";
	break;

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "STATUS_NOT_ALLOWED":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:ResourceStatusElementNotAllowed";
		errorReason = "The resource status element is not allowed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceStatusElementNotAllowed";
     break;

          case "DOB_NOT_CONSISTENT":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserDOBNotConsistentWithAgeOfMajorityDeclaration";
		errorReason = "The member's date of birth conflicts with the value of the AgeOfMajority attribute.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserDOBNotConsistentWithAgeOfMajorityDeclaration";
     break;

     case "AGE_OF_MAJORITY_BOOLEAN_ERROR":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:SaxParserException";
		errorReason = "cvc-datatype-valid.1.2.1: \'' is not a valid value for \'boolean\'.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#SaxParserException";
     break;

	case "DOB_DATATYPE_ERROR":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:SaxParserException";
		errorReason = "cvc-datatype-valid.1.2.3: \'' is not a valid value of union type \'DayOptionalDate-type\'.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#SaxParserException";
     break;

     case "INSUFFICIENT_PRIVILEGES":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "The user does not have permission to perform the requested action.";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;    

	
}

tC.setPropertyValue("expectHTTPstatus",expectHTTPstatus);

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
/*
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
////assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;
*/

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
/*
if (XMLbodynull) {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
} else {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
*/
//Location Header

if (httpLocationHeader) {
	 assert context.expand( '${#TestCase#httpLocation}') != null;

      def a = context.expand( '${#TestCase#httpLocation}');
      def b = a.toURL();
      def urlStr = b.getPath();

      if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
      	{                                
			assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
			
			int lastColon = urlStr.lastIndexOf(':');
			int lastSlash = urlStr.lastIndexOf('/');
			userid     = urlStr.substring(lastColon + 1);
			def node_User = urlStr.substring(lastSlash + 1);
			                                 
			tC.setPropertyValue("NODE_USER_ID",userid);
			
			tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
//			tC.setPropertyValue("NODE_USER_ID_FULL2",node_User);
      	} 
      else 
      	{
			assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");
			int lastColon = urlStr.lastIndexOf('%3A');
			int lastSlash = urlStr.lastIndexOf('/');
			userid     = urlStr.substring(lastColon + 3);
			def node_User = urlStr.substring(lastSlash + 1);
			                      
			tC.setPropertyValue("NODE_USER_ID",userid);
			
			tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
//			tC.setPropertyValue("NODE_USER_ID_FULL2",node_User);
      	}
                                
} else 
	{
       	assert context.expand( '${#TestCase#httpLocation}') == "";
	}


//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		log.info "Errorlink from Coord : " + myXML.Error.ErrorLink.toString();
		log.info "Errorlink  expected" + errorLink;
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract_Account_OID_and_User_OID" id="21b256c3-ed29-4524-b089-ee04998dee55"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def dbUser;

def expectHTTPstatus = tC.getPropertyValue("expectHTTPstatus");

if (expectHTTPstatus == "HTTP/1.1 201 Created")
     {
		def dBHost = context.expand( '${#Project#targetsystem}' )
		
		try          {
		                dbUser = new dbUtils.dbUser(log,dBHost);
		                }
		catch(Throwable e) {
		                log.info "ERROR - dbUtils.dbUser - $e";
		                assert 1 == 2;
		                }
		finally {
		         try {
		                String u = dbUser.userGetUserOID(tC.getPropertyValue("UserName").toLowerCase());
		                String a = dbUser.userGetAccountOIDbyUsername(tC.getPropertyValue("UserName").toLowerCase());
		
		                 assert u.length() > 0;
		                 assert a.length() > 0;
		                 
		                 tC.setPropertyValue("user_oid", u);
		                tP.setPropertyValue("account_oid", a);
		                }
		          catch(Throwable e) 
		          	{
		                 log.info "ERROR - dbUtils.userGetUserOID - $e";
		                 assert 1 == 2;                     
		          	}
		}
     }
     else
     {
     	log.info ("Can not retreive User_OID for a negative scenario");
     }
     

</script></con:config></con:testStep><con:testStep type="groovy" name="Return the NodeAccountId and NodeUserId to the Calling Test Case" id="923bc11c-f566-44fd-b0d4-223472578b8b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("UserName",tC.getPropertyValue("UserName"));
callTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID"));
callTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
callTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid"));

//callTC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//callTC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL2"));
//callTC.setPropertyValue("UserName2",tC.getPropertyValue("UserName"));
//callTC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));

callTC.setPropertyValue("ADULT_DOB_XML",tC.getPropertyValue("ADULT_DOB_XML"));
callTC.setPropertyValue("YOUTH_DOB_XML",tC.getPropertyValue("YOUTH_DOB_XML"));
callTC.setPropertyValue("CHILD_DOB_XML",tC.getPropertyValue("CHILD_DOB_XML"));
callTC.setPropertyValue("DateOfBirth",tC.getPropertyValue("DateOfBirth"));</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Validate_Response" disabled="true" id="0ae30dfa-cf71-4832-b3eb-6f8c3f9ca779"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#nodeIdRetailerforDeviceAuthToken}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#nodeIdRetailerforDeviceAuthToken}' );
}
if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The supplied country code is invalid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code cannot be null.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "API call not authorized";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:UserNotActive";
	errorReason = "User is not active";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

		case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The user does not have permission to create a full-access user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The user does not have permission to create a user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
			expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBe18OrOlder";
			errorReason = "First User must be 18 years or older";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBe18OrOlder";
	break;


	case "NO_MNG_ACC_CNST":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
			errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The first user in a household account must be a full-access user.";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;
	
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
////assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
/*
if (XMLbodynull) {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
} else {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
*/
//Location Header

if (httpLocationHeader) {
	 assert context.expand( '${#TestCase#httpLocation}') != null;

      def a = context.expand( '${#TestCase#httpLocation}');
      def b = a.toURL();
      def urlStr = b.getPath();

      if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO"){
                                
         assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
         
         int lastColon = urlStr.lastIndexOf(':');
         int lastSlash = urlStr.lastIndexOf('/');
         userid     = urlStr.substring(lastColon + 1);
         def node_User = urlStr.substring(lastSlash + 1);
                                           
         tC.setPropertyValue("NODE_USER_ID",userid);

         tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
         tC.setPropertyValue("NODE_USER_ID_FULL2",node_User);
      } else {
         assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");
         int lastColon = urlStr.lastIndexOf('%3A');
         int lastSlash = urlStr.lastIndexOf('/');
         userid     = urlStr.substring(lastColon + 3);
         def node_User = urlStr.substring(lastSlash + 1);
                                
         tC.setPropertyValue("NODE_USER_ID",userid);

         tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
         tC.setPropertyValue("NODE_USER_ID_FULL2",node_User);
      }
                                
} else {
                                
       	assert context.expand( '${#TestCase#httpLocation}') == "";
}


//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:properties><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-08</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E5A158E8FAED7930E0401F0A0599188B</con:value></con:property><con:property><con:name>coordinatorSchema</con:name><con:value>${#Project#coordinatorSchema}</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE19F934C4E6BFA99E0401F0A05993DA2</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE19F95D7CFC268C9E0401F0A079952C9</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>seconduser20130905_04010</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/07/Account/urn:dece:accountid:org:dece:E5A158BFEF210675E0401F0A07992D42/User/urn:dece:userid:org:dece:E5A158BFF59C0675E0401F0A07992D42</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:/certs/RET_concat.pem</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5A158BFEF210675E0401F0A07992D42</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E5A158BFEF210675E0401F0A07992D42</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E5A158BFF59C0675E0401F0A07992D42</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E5A158E8FAED7930E0401F0A0599188B</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5A158BFF59C0675E0401F0A07992D42</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E56665ABC808DB00E0401F0A07993371</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML2</con:name><con:value>SAML2 Assertion=null</con:value></con:property><con:property><con:name>SecondUserName</con:name><con:value>username_20130122_043244</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Create_GeoProfile</con:value></con:property><con:property><con:name>StandardUserName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>seconduser20130905_04010</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00033_UserCreate_AUTH_Creator_ADULT_Full_New_CHILD_Standard_201_CREATED_P1</con:value></con:property><con:property><con:name>UC_RequestBody_Mandatory</con:name><con:value/></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>UserName</con:name><con:value>seconduser20130905_04010</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5A158BFF59D0675E0401F0A07992D42</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-07</con:value></con:property><con:property><con:name>expectHTTPstatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5ff78eb3-d79f-4f4a-b9a8-5ec1c84f61c0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3d78db1c-105b-43a0-b406-6bb0f690c833</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662fb201-c4e7-401c-b10a-548ea13f5020</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f23d9bb0-0bd1-4723-928b-a9c1d99c147f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95f3189f-715e-4cef-bc91-14a1b4138b68</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateTOU_API" searchProperties="true" id="16c677b6-f520-424c-859c-233d39f17e8a"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="8529cb5b-1043-4fe4-a63c-7ff5f749fedd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

tC.setPropertyValue("expectErrType","SUCCESS");

if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
{
	tC.setPropertyValue("Policy_Class", "urn:dece:type:policy:TermsOfUse");
}
else
{
	tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:TermsOfUse", "UTF-8"));
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Set_TOU_Policy_Resource" id="919c3211-3cd2-4563-b11c-61993686b63e"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

String country = context.expand( '${#Project#Country}' );
def tOUUrl = context.expand( '${#Project#TOUUrl}' )

def touForCountry = "TOU_"+country
def consent_Version =  tP.getPropertyValue(touForCountry);

tP.setPropertyValue("policy_TOU",'https://'+ tOUUrl + '/Consent/Text/' + country + '/urn:dece:type:policy:TermsOfUse:' + consent_Version + '/html');

log.info "Policy TOU from Project level property " + tP.getPropertyValue("policy_TOU");</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="446919ce-41e2-4eb0-ae99-0dc6a9ebe7fc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="Policy_Create_TOU" id="6716b347-39c7-4087-ac06-f4151b9859a2"><con:settings/><con:config service="Policy_Create" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="Policy_Create_User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Policy_Create_TOU" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd"  xmlns:dece="${#Project#coordinatorSchema}"  xmlns:ds="http://www.w3.org/2000/09/xmldsig#"  xmlns:md="http://www.movielabs.com/md"  xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <dece:Policy>
    <dece:PolicyClass>urn:dece:type:policy:TermsOfUse</dece:PolicyClass>
    <dece:Resource>${#Project#Policy_TOU}</dece:Resource>
    <dece:RequestingEntity>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_REQ_ENTITY}</dece:RequestingEntity>
    <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
    <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_CREATED_BY}">
        <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
    </dece:ResourceStatus>
  </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="7500bbfc-112f-46fc-94b6-0bcbdf9cc744">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('Policy_Create_TOU');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                             contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="b87345d2-f2c4-4d7f-a05a-2dbf77ae994b">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D12F2DD48A10D559E0401F0A059918B0/User/urn:dece:userid:org:dece:D12F2DD48A1ED559E0401F0A059918B0/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Keep-Alive</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/11/Account/urn:dece:accountid:org:dece:F950212C2CCEDAE0E0401F0A059909A5/User/urn:dece:userid:org:dece:F950235940171B42E0401F0A05990975/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/RET_concat.pem</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950212C2CCEDAE0E0401F0A059909A5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950212C2CCEDAE0E0401F0A059909A5</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4E99389111664AEE0401F0A07990AF6</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E4E99389111664AEE0401F0A07990AF6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:F950235940171B42E0401F0A05990975</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4jx3jDyCOPYEZAjSBEtICSUNeOkJeG+XaElgyX7/+SiYmQEguvTOZIVqvds/uHh3piqMkdvwG55AKwqjWadX0P7YbugGyHePCtbBRcUPL8Lyya7iT0L6sXjiT8oWnax3OM+hQLhAVNd2x7IphVQ27MrIsv1Lx7WrJcS+fde0RUi5DS5eSpWurJKbcz9PW9CylPkOccJ+iBLgvsD9s3PV86emjApNev9qizBOm9akQM980cSkADHGMS5gl5pV54HMVcH9IIopElsJrzoDX9Ne9y+WytCyXWBqZjmVZpuWZ0ifgJPqq178UmyHo0JBt101EGSUYxWSDFKg7EFMWaI04YikR0+SD0LZpWyq0AStsYLtCv+rmW4Ic3ZmRDkCmHBl8iuwi2ABCSIFi0B4GnZr+9bwJbveOUkR5yNKEH63/DhLQBcRsBoHBi8oKdOdHPNGu+hVgv0NxnHGygL6iyQxh4NrPFEKy6hEuyRdwLR+/tuLyjxQsA/w3Y7ky97FK6OaJ7rRIBFz8n5ntz2sb5RHFGdTt8e34Oe0686ElnNvuL9xYoOry283Lc1TLIew7b0Htxv26Pibrjluvm8blXpt35l3HboSNdWOxYddPL8HKijbAWvz2R/9lhR7WTbd3P/+1prMwEtnvQYf8SNiqv9k8b5JmuBlbz/eDCZhfhoOb6+f2ZLze9G7Kvzcjz8tuV60W/QktJ7hzB9X+9dMdGSAadh/cKOgG4yWEntUeWaz/NL0ZXz6xbq9c6Ve/ZTdfuiT6/UidkJHbS14FblqV2ltN+zUcGgtJGGaTF8CiWCp6dFradzkvJD6XF2UhgRHmrv5MaRQXQIVeV7uUtPiZFCAS+HKY2/V3r2o55apXsWzXvq44bUv+991qWFXPszy3WmjQFsURxCajIVG5lMpu+fM5QJz4HGgAqbFgGZ4C1z+J2EICaR06kIeDUQ4jplSczIU8M9Ha8VhkTzyUlWE5D1wKutZn4p7ep41QQHqo3eUD7R4AJjMCSuAVw7mkOBeyGXO0yERslxaoRCGTV0CqVNh3KpdVk5NkFoOCaiYsyGIozaazvDUm3/46BsI8tw7ao/zkfVjY8beiB9InIMqBq1quQc4RTlxCVlHIxwVf7BdchG9kAVEHTDZUpARvkRx+euOJIsiOJLKiP83hH7vAvXM/e/v7neYnoMzjfuwSBQuyl7a4TeUFIeWjXkxzjkrzUrZYZPn8XCWNqQxvSoW0zSHgTOrbesT+AWruQphnXS871EeZd/ZDfJmY0qFAAhLJNi1fnvG2GAJXb4uOPCercx8uByll3wSsxClbM5ZPEIX401cK9rHyk+af8mfJ0uBtXCdi7eWRdcoHhSA0Uit1kaw/IAVmMiyRysfS/eCnApxKfmjcNXmHRUg2TTIBH3/RlKTVdIQxy6jotPTcsC+zOU6xnoH/5vQuTC7lr3fzin94Nz/d9YZS8BKk73zJfzsbJKcLluom/XMsNX0ln5oyOY32ZP0V4Dtlt52m02y2W422dajsjZ2yH1ZSf2d+b9nr6fF5qP8L</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Update_Access_NonCS</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00005_UserUpdate_FUNC_NonCS_Full_Update_UserName_Others</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID_REQ_ENTITY</con:name><con:value>F950235940171B42E0401F0A05990975</con:value></con:property><con:property><con:name>NODE_USER_ID_CREATED_BY</con:name><con:value>F950235940171B42E0401F0A05990975</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bd6efb96-bbf3-4226-9917-48245caf20c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>919c3211-3cd2-4563-b11c-61993686b63e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateCLGAttestation" searchProperties="true" id="69fd4170-842f-452d-b5ba-2a3dcb222763"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="a5828f94-cccc-4748-9dad-1efb5f772df6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

tC.setPropertyValue("expectErrType","SUCCESS");

if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
{
	tC.setPropertyValue("Policy_Class","urn:dece:type:policy:CLGAttestation");
}
else
{
	tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:CLGAttestation", "UTF-8"));
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="6f62f720-8990-433e-b87f-e5bfb4b7fa27" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

//tC.setPropertyValue("Policy_Class", "urn:dece:type:policy:CLGAttestation");


</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="bff094a4-b826-48e4-aaae-7d970bff9b8f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreate_CLGAttestation" id="da6450e5-2ac6-49ec-9c68-d4d4c1a9849d"><con:settings/><con:config service="Policy_Create" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="Policy_Create_User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreate_CLGAttestation" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd"  xmlns:dece="${#Project#coordinatorSchema}"  xmlns:ds="http://www.w3.org/2000/09/xmldsig#"  xmlns:md="http://www.movielabs.com/md"  xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <dece:Policy>
    <dece:PolicyClass>urn:dece:type:policy:CLGAttestation</dece:PolicyClass>
    <dece:Resource>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_CHILD}</dece:Resource>
    <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
    <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}">
        <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
    </dece:ResourceStatus>
  </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="93dd1a0e-f2c8-4cae-82ad-da0987ba710a">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreate_CLGAttestation');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                             contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="0670088e-40ce-4e40-85cd-2ab7e3bb76d5">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+o6EP5+fkWnfjxTmpYWaEeYqSBHPIheQUW/ODFdaLxtik0K6K8/SbEIiF7OnWGGyXaz++xLnt1jjpPY9gPOIRM0ZVqv09QfPSesktDxDIImyHAaQAyvSiaGB1D1AIVYSnStx3kOPcYFZqKp28hyDOQaljNCyK/WfKtaQdX6g67dQsalaalSQbq2TGLG/cJtU88z5qeYU+4znAD3BfGHwUXfl5o+LjHpreMVysJh1oqEmPmmSSohEIhjUiFpYh6bWzrHIfeHdMqwyDN49xnypv5+d7FYVBbVSppNTRshZCLPlDohp9MjvfWjvAxhj03S1bmNWcoowTF9wwrUBYgoDbUgnqYZFVHyhWnLtJAybcCSGMRy2JFufjgo0B1oaQtkxrHBI2yVxq5hAhkwAtrNda+pHx1WwdXdUYYZn6RZwnfOfwcJ2BzidAahwcvISnSHW9yTrtYxEL/HSJxzOoeBapMZJsC1qwwmdNmnXDZfyLWi/NqSyx8tuwzI35Tl2NzEKqGbe7LToVPg4v/UbLNeKyu3OM6h9TB2H+b2sFYb3wzcc3JSJVdB7QmufmOnWUDYVF6BWpf7/bzbrOveer9091QdvV3cd+vp+fkZe44vPXYf3DhAG7/7hDhz+4F3guj19heNcuYtBiekvxg3Hvqn1KpN7uNfbl5rBI154/mUjH/EN28kJt6d27kl2KU/bwIv6V/OBhk6TV4GXfttaiOH/WwvrPuzYNC/TG87sOTdt/PEvnLEGLsDd8EGs9HZwz/mDzpGdX55R00SLe9mcdy7nzY/YtqMYVtYUsIwf3oGIsqjao9eR+vKemHxPb0oCQ2NSaHqzxRHcQFM6C11S1GLn0sCoqEvi7k6dz3XQp7dqXXaJ0HNaZwiB1ldFCDX86peHZUctEKxA7GdsglVvhTLrvrne4Ak8TmwEDJjnuYkAq5/Y7GDBdZ67Fo+jpRxGKWSxa0oD58ikgsn9lKrilH9NWngNGrUdG2Qikt2mQUTAdk2d1e3uPsaCJ1RUASvOpzLFudCJuMFz3MRW5U5rjDI5QjIFAv7ttNwTU6TWQwKqpmkYR5DZRbNitSYfPVvG5jwQnp9Oipe3peB7X4rcyB1QqoUuIrlBGQdYc8QQmUgXwdc2wy4NB/kIVUPTCZUZJSskGx/+ugT1SDrJpERPbaHj1aJe61+8PXPN81vQJm7+Vg7Cud0w205TeWAkPTRKqv5gisvlXw+z4v61RU1ZtK8KRnSModAcslvr6P0X2Dm2oR50HhZo97xvJZv48tFxIYCC0hkt2nF8YDdYghc7RY9+U6Why4uWy5l3gQsxT5ZO5YriEL87ZZCfKL0pPhK/i3SLPwo1x5bG35knHKhEJRN1UkNktcvmoKk0iyVzJdmm8b3GdjnfFu4TvIai5Dd9JQL+PqLpiitqWNC0pyJXkcvBJs0W+AUrzPwP5Q+mSmo/H02L/mXs3l80R9Kwkuwvtal/61s0KJdCOhqBSiwNPWlXDWlczbdoPV3gDvMjmzLDhzX6bqntfYmsyPPO1kncCuS1ifxZ8lGTnffQ+sP</con:value></con:property><con:property><con:name>tName</con:name><con:value>Child_User_Create_STS_Policies</con:value></con:property><con:property><con:name>sName</con:name><con:value>Child_User_Create_API</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E48705C62976FCB4E0401F0A079971D7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D12F2DD48A10D559E0401F0A059918B0/User/urn:dece:userid:org:dece:D12F2DD48A1ED559E0401F0A059918B0/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/11/Account/urn:dece:accountid:org:dece:F950212A454F5E6CE0401F0A0599099B/User/urn:dece:userid:org:dece:F951092D6DE1A648E0401F0A05993970/Policy/urn:dece:type:policy:CLGAttestation</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn:dece:type:policy:CLGAttestation</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/RET_concat.pem</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:F951092D6DE1A648E0401F0A05993970</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950212A454F5E6CE0401F0A0599099B</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E486FC50804D1AE5E0401F0A05991EF2</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E2E22E83505CC024E0401F0A0599357E</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>F951092D6DCBA648E0401F0A05993970</con:value></con:property><con:property><con:name>CHILD_NODE_USER_ID</con:name><con:value>E2E25B1DF5BEDD19E0401F0A07991448</con:value></con:property><con:property><con:name>NODE_USER_ID_CHILD</con:name><con:value>F951092D6DE1A648E0401F0A05993970</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bd6efb96-bbf3-4226-9917-48245caf20c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyGet" searchProperties="true" id="23d09377-9e3c-47e0-92cd-8d7e2ed8d6fd"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="3f9a5121-1ba4-4ce7-9098-b2a7278fb180"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("ENCODED_NODE_USER_ID",null);
tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("SAML",null);
tC.setPropertyValue("expectErrType",null);
tC.setPropertyValue("policyCLASS",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="21cf2586-d1ed-4fdc-832a-472a816d6528"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("NODE_USER_ID",callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID",callTC.getPropertyValue("NODE_ACCOUNT_ID"));
if (tP.getPropertyValue("versionMinor")=="06" || tP.getPropertyValue("versionMinor")=="07"){
	
			tC.setPropertyValue("ENCODED_NODE_USER_ID", URLEncoder.encode("urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"), "UTF-8"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			log.info ""+URLEncoder.encode("urn:dece:type:policy:"+callTC.getPropertyValue("POLICY_CLASS"), "UTF-8");
			tC.setPropertyValue("policyClass",URLEncoder.encode("urn:dece:type:policy:"+callTC.getPropertyValue("POLICY_CLASS"), "UTF-8"));
			
			
			}else{
				tC.setPropertyValue("ENCODED_NODE_USER_ID", "urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			tC.setPropertyValue("policyClass","urn:dece:type:policy:"+callTC.getPropertyValue("POLICY_CLASS"));
			}

tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));
tC.setPropertyValue("expectErrType",callTC.getPropertyValue("PolicyGetResponseType"));


if (tC.getPropertyValue("expectErrType") == null ||
	tC.getPropertyValue("expectErrType") == "") {
		tC.setPropertyValue("expectErrType","SUCCESS");
}




</script></con:config></con:testStep><con:testStep type="groovy" name="Set Pem" id="eaa96ed5-3cca-4156-8a09-c54bea8b60f0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("Policy Get");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="Policy_Get" id="389957f2-2644-4f4d-9932-dab29dae6557"><con:settings/><con:config service="Policy_Create" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="Policy_Create_User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Policy_Get" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="3764bed9-292d-4b3e-8638-5dd84e1225de">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('Policy Get');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                                contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);


 </script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="3bb99271-32ca-4459-9ddc-4ca05ee135c6">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def XMLbody    = tC.getPropertyValue("XMLbody");
def httpStatus = tC.getPropertyValue("httpStatus");

String policyWasFound = "false";
String xmlPolicyClass = "";
String tcPolicyClass  = tC.getPropertyValue("policyClass");

/*
*  We can assume that if we get returned an HTTP status 
*  of 'HTTP/1.1 200 OK' the policy was found.  However,
*  it is never a bad idea to doublecheck.
*/

/*
*  The body should not be null...something should be
*  there.
*/
assert XMLbody.size() > 0;

if (XMLbody != null) {
                def myXML = new XmlSlurper().parseText(XMLbody);

                xmlPolicyClass = myXML.Policy[0].PolicyClass.text();
}

log.info "xmlPolicyClass [$xmlPolicyClass] - tcPolicyClass[$tcPolicyClass]";
                                
if (httpStatus == "HTTP/1.1 200 OK" || xmlPolicyClass == tcPolicyClass) {
                policyWasFound = "true";
                def PolicyID = context.expand( '${#TestCase#XMLbody#declare namespace ns1=\'http://www.decellc.org/schema/2013/10/coordinator\'; //ns1:PolicyList[1]/ns1:Policy[1]/@PolicyID}' )
                log.info "================="+PolicyID
                tC.setPropertyValue("PolicyID",PolicyID);
}


tC.setPropertyValue("policyExists", policyWasFound);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Return policyId" id="db2d7a86-6720-4405-a764-6b8d396ae082"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("PolicyID",tC.getPropertyValue("PolicyID"));

</script></con:config></con:testStep><con:properties><con:property><con:name>NODE_USER_ID</con:name><con:value>D84127385A77AB9FE0401F0A0799779D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>D841235B02690A67E0401F0A05995219</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>7600</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>POLICY_ID</con:name><con:value/></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_ 20008 - SAMLExchange - retailer - saml2 - FORBIDDEN - Active full user - with deleted ULC</con:value></con:property><con:property><con:name>sName</con:name><con:value>STS Create and SAML Exchange - FUNC</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 404 Not Found</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>837</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AUserLinkConsent</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<PolicyList xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Policy PolicyID="urn:dece:policyid:org:dece:D8412DEC2C19E6E5E0401F0A059962B6">
      <PolicyClass>urn:dece:type:policy:UserLinkConsent</PolicyClass>
      <Resource>urn:dece:userid:org:dece:D84127385A77AB9FE0401F0A0799779D</Resource>
      <RequestingEntity>urn:dece:org:org:dece:7600</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreatedBy="urn:dece:userid:org:dece:D84127385A77AB9FE0401F0A0799779D" CreationDate="2013-03-19T05:14:46.000Z">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
</PolicyList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>952</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyExists</con:name><con:value>true</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD84127385A77AB9FE0401F0A0799779D</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD841235B02690A67E0401F0A05995219</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\ISC_Nodes\7600.pem</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>urn:dece:policyid:org:dece:D8412DEC2C19E6E5E0401F0A059962B6</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5935459c-5982-4cb1-9974-1d4d88038a65</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9bbb88e5-07dd-4d4f-ba3c-1c734ce9be3a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyDelete" searchProperties="true" id="853b66b1-2855-4d93-8f16-0c0514cd932e"><con:settings/><con:testStep type="groovy" name="Set Pem" id="6a0df690-63bf-4b9c-ae59-c6c2ff9420bf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("Policy Delete");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="17df3acf-9f74-4983-9c2c-7ca80c9272ea">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def tStep  = tC.getTestStepByName('Policy Delete');

/*
*  Get the HTTP headers
*/
def status = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];

log.info status[0];
log.info contentLocation;
log.info connection[0];
log.info contentType[0];
log.info contentLength[0];

tC.setPropertyValue("status",status[0]);
tC.setPropertyValue("contentType", contentType[0]);
tC.setPropertyValue("contentLength", contentLength[0]);
//tC.setPropertyValue("contentLocation", contentLocation[0]);

if (contentLength[0].toInteger() > 0) {
	rawResp = new ByteArrayOutputStream();
    def rawResp = tStep.httpRequest.response.getRawResponseData();
     strVal  = new String(rawResp);
      log.info strVal[0];

    int startAssert = strVal.indexOf("&lt;?xml version=\"1.0\" ");

	String XMLbody  = strVal.substring(startAssert, strVal.size());
     
	tC.setPropertyValue("XMLbody", XMLbody);
}</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers and save assertion" id="3d442766-d852-4dda-8d00-1ca77ae70830">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
def expectErrType = tC.getPropertyValue("expectErrType");
log.info(expectErrType);
def XMLbody       = tC.getPropertyValue("XMLbody");

boolean dobodyXML = true;
boolean doContentTypeHeader = true;
boolean doConnectionClose = false;
boolean doContentLocaton  = true;
boolean contentLengthZero = false;

String errorID     = "";
String errorReason = "";
String errorLink   = "";
String expectHTTPstatus = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";

if (expectErrType == "") {
	expectErrType = "SUCCESS";
}

this.log.info "expectErrType is $expectErrType";
switch (expectErrType) {
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 200 OK";
		expectHTTPcontenttype = "application/xml";
		contentLengthZero = true;
		doContentLocaton  = false;
		dobodyXML = false;
		
	break;
	case "FORBIDDEN":
	default:
		errorReason = "assertion_not_found";
		errorID = "urn:dece:errorid:org:dece:securitycontext:unauthorized";
		errorLink = "https://qa.q.uvvu.com:7001/deceerrors/error/error_response.html";
		orgRequest = "";
		doContentLocaton  = false;
		dobodyXML = true;
	break;
}

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("status");
assert tC.getPropertyValue("status") == expectHTTPstatus;

// Connection

if (doConnectionClose) {
	this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("connection");
	assert tC.getPropertyValue("connection") == expectHTTPconnection;
}


//Content-Length
/*if (contentLengthZero) {
	assert tC.getPropertyValue("contentLength").toInteger() == 0;
} else {
	assert tC.getPropertyValue("contentLength").toInteger() > 0;
}
	
//Content-Type
if (doContentTypeHeader) {
	assert tC.getPropertyValue("contentType") == expectHTTPcontenttype;
}

// Content-Location
if (doContentLocaton) {
	assert tC.getPropertyValue("contentLocation") != null;
	
	def b = tC.getPropertyValue("contentLocation").toURL();
	assert b.getPath().matches("");
	def parms = b.getPath().split("/");
	
	tC.setPropertyValue("assertionUUID",parms[parms.size() - 1]);
} else {
	assert tC.getPropertyValue("contentLocation") == null;
}

if (dobodyXML) {
	if (XMLbody.length() > 0) {
		def myXML = new XmlSlurper().parseText(XMLbody);

		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode: Expect[$errorID] Received: " + myXML.Error.@ErrorID.toString();
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason: Expect[$errorReason] Received: " + myXML.Error.Reason.toString();
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorReason: Expect[$errorLink] Received: " + myXML.Error.ErrorLink.toString();
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	} else {
		return false;
	}
} */</script></con:config>
      </con:testStep><con:properties><con:property><con:name>NODE_USER_ID</con:name><con:value>D84127385A77AB9FE0401F0A0799779D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>D841235B02690A67E0401F0A05995219</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>POLICY_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:policyid:org:dece:E617180F360A7374E0401F0A05995FE1</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00011_US_UserGet_FUNC_YOUTH_SAU_Get_CHILD_Blocked_tou_P2</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Get_GeoProfile</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 404 Not Found</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>765</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD84127385A77AB9FE0401F0A0799779D</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD841235B02690A67E0401F0A05995219</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>urn%3Adece%3Apolicyid%3Aorg%3Adece%3AD8412DEC2C19E6E5E0401F0A059962B6</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:/certs/RET_concat.pem</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E6170EEF63CD2F20E0401F0A05994E39</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ErrorList xmlns="http://www.decellc.org/schema/2013/06/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
    <Error ErrorID="urn:dece:errorid:org:dece:Policy:PolicyNotFound">
        <Reason Language="en">The policy was not found.</Reason>
        <OriginalRequest>https://qa.p.uvvu.com:7001/rest/1/07/Account/urn:dece:accountid:org:dece:E6170EEF63CD2F20E0401F0A05994E39/Policy/urn:dece:policyid:org:dece:E617180F360A7374E0401F0A05995FE1</OriginalRequest>
        <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/07/error/en/ErrorList.html#Policy:PolicyNotFound</ErrorLink>
    </Error>
</ErrorList>
]]></con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetPem" searchProperties="true" id="9eefa1a9-efcc-493d-a73f-76683cebfde6"><con:settings/><con:testStep type="groovy" name="Set Pem" id="6512c4b0-42ef-4467-b104-ffa33eace57b"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import org.apache.commons.lang.SystemUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

if (System.properties['os.name'].toLowerCase().contains('windows')) 
	{
    		log.info "it's Windows";
    		certPath = testProject.getPropertyValue("certsPath_Windows");
	} 
else 
	{
    		log.info "it's not Windows"
    		certPath = testProject.getPropertyValue("certsPath_Linux");
	}

String nodeId = testCase.getPropertyValue("nodeid");

log.info "nodeId: "+nodeId;

if (nodeId == "dece:cs")
	{
		nodeId = "dececs";
	}
else if (nodeId == "coord:cs")
	{
		nodeId = "coordcs";
	}
else
	{
		nodeId = nodeId;
	}
//String certPath = testProject.getPropertyValue("certPath");

File f1 = new File(certPath+"/"+nodeId + "_concat.pem");
File f2 = new File(certPath+"/"+nodeId + ".jks");
File f3 = new File(certPath+"/truststore-"+nodeId + ".jks");

boolean imFine = true;

if(f1.exists()) 
	{
		keyStorePath = certPath+"/"+nodeId + "_concat.pem";
		pwd = "123"	
	 }
 else if(f2.exists())
	 {
	 	keyStorePath = certPath+"/"+nodeId + ".jks";
		pwd = "abcd1234"	
	 }
 else if(f3.exists())
	 {
	 	keyStorePath = certPath+"/truststore-"+nodeId + ".jks";
		pwd = "abcd1234"	
	 }
 else
	 {
	 	log.info "Error!";
	 	imFine = false;
	 }


if(imFine)
{
	log.info "keyStorePath: "+keyStorePath;
	def callTSname = testCase.getPropertyValue("sName");
	def callTCname = testCase.getPropertyValue("tName");
	
	def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
	
	callTC.setPropertyValue("keyStorePath","$keyStorePath");
	
	SoapUI.settings.setString( SSLSettings.KEYSTORE, keyStorePath );
	SoapUI.settings.setString( SSLSettings.KEYSTORE_PASSWORD, pwd);
	log.info 'pwd='+pwd
}

assert imFine == true;
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set Pem" disabled="true" id="df4a47e1-8d15-4db1-a8f8-91c78059650a"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String nodeId = testCase.getPropertyValue("nodeid");

log.info "nodeId: "+nodeId;

if (nodeId == "dece:cs")
	{
		nodeId = "dececs";
	}
else if (nodeId == "coord:cs")
	{
		nodeId = "coordcs";
	}
else
	{
		nodeId = nodeId;
	}
String certPath = testProject.getPropertyValue("certPath");

File f1 = new File(certPath+"/"+nodeId + "_concat.pem");
File f2 = new File(certPath+"/"+nodeId + ".jks");
File f3 = new File(certPath+"/truststore-"+nodeId + ".jks");

boolean imFine = true;

if(f1.exists()) 
	{
		keyStorePath = certPath+"/"+nodeId + "_concat.pem";
		pwd = "123"	
	 }
 else if(f2.exists())
	 {
	 	keyStorePath = certPath+"/"+nodeId + ".jks";
		pwd = "abcd1234"	
	 }
 else if(f3.exists())
	 {
	 	keyStorePath = certPath+"/truststore-"+nodeId + ".jks";
		pwd = "abcd1234"	
	 }
 else
	 {
	 	log.info "Error!";
	 	imFine = false;
	 }


if(imFine)
{
	log.info "keyStorePath: "+keyStorePath;
	def callTSname = testCase.getPropertyValue("sName");
	def callTCname = testCase.getPropertyValue("tName");
	
	def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
	
	callTC.setPropertyValue("keyStorePath","$keyStorePath");
	
	SoapUI.settings.setString( SSLSettings.KEYSTORE, keyStorePath );
	SoapUI.settings.setString( SSLSettings.KEYSTORE_PASSWORD, pwd);
	log.info 'pwd='+pwd
}

assert imFine == true;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">RET</con:value></con:property><con:property><con:name>tName</con:name><con:value>UserValidationTokenCreate_Account_User</con:value></con:property><con:property><con:name>sName</con:name><con:value>CommonTestSteps</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateULC_nodes" searchProperties="true" id="3217055c-57f5-4f6b-8986-5c97d330161d"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="7b00abc6-17e9-4793-8beb-c38a75a236da"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("ENCODED_NODE_USER_ID",null);
tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("SAML",null);
tC.setPropertyValue("expectErrType",null);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="a0a81299-e499-4d96-8fe3-ee9125bfe1ac"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("NODE_USER_ID",callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID",callTC.getPropertyValue("NODE_ACCOUNT_ID"));

if (tP.getPropertyValue("versionMinor")=="06" || tP.getPropertyValue("versionMinor")=="07"){
			tC.setPropertyValue("ENCODED_NODE_USER_ID", URLEncoder.encode("urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"), "UTF-8"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			}else{
				tC.setPropertyValue("ENCODED_NODE_USER_ID", "urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			}
			
tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));
tC.setPropertyValue("expectErrType",callTC.getPropertyValue("PolicyCreateResponseType"));
tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:UserLinkConsent", "UTF-8"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="afad6394-18c1-41f0-834e-d5fd2a0de724"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreateSinglePolicyPost_ULC");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="4ed4c6fb-f157-4d76-90cf-c2111034e717">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreateSinglePolicyPost_ULC');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;
/*

def expXML = tStep.httpRequest.response.getResponseContent();
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/
tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                               contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="7065e381-9693-46c0-afa3-f3f540ed93ee">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVfbkqLKEn33Kwzn0bC5ibeY7ojiImKLCuL15QQWJaAISoGgX78LHG3t6Z49+zx02JVUZq3MXCSrfmJr77MdgDGKYi8Myqr0Wvkf30R83eZRrQ4Zpla36E3NWrON2qbV3LRZG67tNlspqxgnSA1wbAXxa4WlGa5GczWWNxm6U293aPqFa7RXlfIMRZiEJlte6Eo52/sB7hTHvlaSKOiEFvZwJ7D2CHdi2JkAbdAhOzvWDVPl7ecVZXFg9ObG8aFDUfDFRhD5PnyB4Z76ST3t+WnjzsRzAitOIvTrTBu/Vn75pmn6knIvYeRQLE3TFN2myB4be86Pylvp5oxsNdiE17VoBWHgQcv3LlYOSkOxG9pl4Dth5MXu/pvQDMXQeegaymANMvXgR4X6OKBA95eRnkBG2Kph12JuwQy0QREKICpPDfW18uPvOnj1NSMrwJsw2uNP6/8GCQUn5IcHZNfwLbMbur+P+EW53n4i2FED6CfYO6FhTpODBREujyO08bKBhwn5bFwu2l/O8I1hCP6XlvykHnES2NQXlZE8B+H4/+nXY6+uUWaWn6C38UrSqWDcG8nn9XSihLgnXS7Z1FjX1dcCwuPmK6h7q3+tPxP1zqtfTj3a2U8nTqi2GL4BxWYUpiBR8FZJdlGPmUm7YNg4XS6c7u4kVtyOqvUWUt05VM79dXhsu6B1nk/E9ozbbLel6pjjpqA1gbvM2gRznFCzSRXGYyVdDAPZ2qheuA3n/RbHZ/p4wKirPlflhrsGVBdO60R1OecgYUrZL3BjWgrhZqoK+plNVzE+sntuQb9+5PSYQ57XOzoXSeb/L3i6LVmxdV+I+aTYkNczRm+aqkrJRRTBeeKAVBWAQ/62YCg4u6O785R2SgtA17tAEgV/Kw80sFMAM5UFVxNnMy0TL6AvOMMZcTRLwF8JmiGnUrqUZrrek1PXtJXZea34yeoiDzWAC2fR1WRDnkmGKWsaCK+2TJPWSrbVJlqq6kupRAJIcna42Eo7RkrmQVbltQnPLid8slrMiL17HuyHp7Up+5qoKeLkqEzUNSfpch8YyzlkuwnxvQz2h7C0nAoPTv0D2gLUTWlyJrho5i7VzCk7lAyrsJnPNk1V+pqOU1EvslJKctqfTS8ftRAFTbT3ciabYHytBTTF7pBeLfrYmvOBZoBUcgrndzm1Rzcgmk6nJfFaq4GcGrIxHXY1Q01lUNgkOfXxmh26a8U9QU7P+ibYPjZG1OV5NyDPA+MEz/yxZCldsN7PGMgZLvR4z1qEqbNqpZK+7L+HK5WEGQJdFgQdEEA0yFMj9RfAQJjxo4PXZj002HTDPXKjksaE77vTJaNbHjdyxsM5L212zbHijTnLdinVh+yW2wFVRfY74+qWbSwpQwq8S2P0Pl0gL1pe4iGvMw2vxZeMeTJdSKHftHuL5fS9mi2hbo7Gk+l8fMmy4XHbuvhxbyT0oklfk5zREKExhlWKtrqC2ZJ4cdnbEj5tDBrxJeBoAgDK1nFkjxBY6G2vJOwZmkzICzQxVcS5qEyAolRlVZB0fdN1mTFUZsmUGWqqbPukTOflwvBLK1GQSKdoa746LNkuvTKBXQTT63LX0ad8tb9AK33om7MYpIfZJmAYWjnovY2WOlDLGWCr6UQgb5FQSlQwtUaHPp29zxo0c9Rtvz9pgymXTdhdNnKd1XnnrHakKcuHV2dpAn9mPnBMJRSbl3RTNjTQur5vmaZOOcOH++yw3sNMMknPCufQFGSjq9PTTJLA+9WGTcBmeHmRt5ooF/4lkGkWocVpvXDxMhh6I1NOCGmTB7ps1yz9rxzLKVZ65thRBDr4zDH5yjEZbI5VtSUxmG+IBzxPHUGRj3pzNui3D7S+GOxKQrVLObHn10dBKzXfq3PmnDbdrT6ft1XJFavBZuly61igrQvUUX/XVDxjJwWNun/WBprOTz3KP9NbdEzxoDRUmUDm4kuXakdJVdivvD0Z13V2uh9PkpM6td4xc3bXx3k73Y57DYqKlDN/aa5OencRwuX1O/J5SN6N1zFKPQ7Ypwl8016TZL1FML4t8++wKpW75ONoxX/WcbnFs2ubYmvnkItBHKMgrrzlXrmG6yRE6Xl2h3w5r2upJchNiWFEgWbaLZqX6TrNdGlAN9ttVmaYm9i7ovgEUQyDjZeflcvZ68f6zwDhvoNRYKOodgoT6CJc+UPEvF5lNTCICgkDjMyQyOVuA9RlVmozdLdNt5p0V+IaYrMtyBIttbkWqJSHYTwKRhHYxCh6lsrck1Q2EPQOHsr1dC4qMFEVOCYlOVqnJPaZl5P1EqCEKO4oF70dtt7iKeztDz7KAVP70E589HJwD0WBKHz9ZWsWxIW12aDpQu18m9/nZ7dSkD22l2/AeTICIu1Ev4n+Voe/ZfJ9xo3HjG/hQWJ7uaghdY0jD16RPD/6oEvOkztX8pRumO9bPxuewlKfM7qfZJ88eGf8/U5EJDURXW+3hhytl+NLcjolRQuauaCMSHiKoegGNUEwIarwbIY7FFD3ENRfCfI76k8n3+3P+JLYDSYxeZv3hDDlYvkXt7EJwvltTCWEz/72qvd0JKlbjLL4K5vok0tbjviP9zrYgfk+Yh6TnzSM7I92fRHr4RySZz6+vMDJV7n8Pn/DChiSsB4ZYWH0GPyrAF8d/my8F/mOJSZsWicx+v5JOZ9NrxULwjAJYlWqFIbHeVngjM8H1PnY9FuYQgD/utFk+NsbzUIbTMjk2luV+17v3zfXvIIuEBEv7BVYXisZuZyTwwPnYT7/AvjliAZy/U8j+jmTt9/Mv1seavr5fXj7Bw==</con:value></con:property><con:property><con:name>tName</con:name><con:value>WithRightsLockerDataGet and MUC</con:value></con:property><con:property><con:name>sName</con:name><con:value>ISC_TestCases</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>D8BE7D11CB019805E0401F0A07992E11</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>D8BE7D11CAE49805E0401F0A07992E11</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>7600</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>connection</con:name><con:value>close</con:value></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D14403889CD0F3ECE0401F0A07992161/User/urn:dece:userid:org:dece:D14403889CDFF3ECE0401F0A07992161/Policy/urn:dece:type:policy:UserLinkConsent</con:value></con:property><con:property><con:name>policyId</con:name><con:value>urn:dece:type:policy:UserLinkConsent</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D8BE7D11CAE49805E0401F0A07992E11/User/urn:dece:userid:org:dece:D8BE7D11CB019805E0401F0A07992E11/Policy/urn:dece:type:policy:UserLinkConsent</con:value></con:property><con:property><con:name>ENNODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD3DD6C150D6CC4DCE0401F0A0799470D</con:value></con:property><con:property><con:name>ENNODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD3CD44C830AA5460E0401F0A079913BD</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AUserLinkConsent</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD8BE7D11CAE49805E0401F0A07992E11</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD8BE7D11CB019805E0401F0A07992E11</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\ISC_Nodes\7600.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateMUC_nodes" searchProperties="true" id="02e196fd-6a33-458f-a779-20bdcb8f65f6"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="4a1fa38b-4b5a-43bc-b4ac-c8b2cd422c62"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("ENCODED_NODE_USER_ID",null);
tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("SAML",null);
tC.setPropertyValue("expectErrType",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="78a51972-e97c-4fcc-a444-ae8c86a62bc6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("NODE_USER_ID",callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID",callTC.getPropertyValue("NODE_ACCOUNT_ID"));

if (tP.getPropertyValue("versionMinor")=="06" || tP.getPropertyValue("versionMinor")=="07"){
			tC.setPropertyValue("ENCODED_NODE_USER_ID", URLEncoder.encode("urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"), "UTF-8"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			}else{
				tC.setPropertyValue("ENCODED_NODE_USER_ID", "urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			}
			
tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));
tC.setPropertyValue("expectErrType",callTC.getPropertyValue("PolicyCreateResponseType"));
tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:ManageUserConsent", "UTF-8"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="45db53d0-e287-4b60-a809-f9e6735e4f2f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreateSinglePolicyPost_MUC");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="517a95b3-ce83-437a-827d-5e49fdb10fa1">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreateSinglePolicyPost_MUC');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;
/*

def expXML = tStep.httpRequest.response.getResponseContent();
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/
tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                              contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="6a93b9aa-b6dc-4adf-983f-0d78466e7a19">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>tName</con:name><con:value>WithRightsLockerDataGet and MUC</con:value></con:property><con:property><con:name>sName</con:name><con:value>ISC_TestCases</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>D8BE7D11CB019805E0401F0A07992E11</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>D8BE7D11CAE49805E0401F0A07992E11</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>7600</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D8BE7D11CAE49805E0401F0A07992E11/User/urn:dece:userid:org:dece:D8BE7D11CB019805E0401F0A07992E11/Policy/urn:dece:type:policy:ManageUserConsent</con:value></con:property><con:property><con:name>ENNODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD3CD43AEEE91F252E0401F0A079913BF</con:value></con:property><con:property><con:name>ENNODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD3CD44C830AA5460E0401F0A079913BD</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AManageUserConsent</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD8BE7D11CB019805E0401F0A07992E11</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD8BE7D11CAE49805E0401F0A07992E11</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\ISC_Nodes\7600.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f2eeb936-13ad-4f02-a213-128d8a600f31</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="STS_API" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="96fdea5e-3165-42ad-86cd-31f66cb06840">
      <con:settings/>
      <con:testStep type="groovy" name="Establish Test Case Properties" id="8d99845d-0452-49bb-a8f5-2896b6015b82">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("tokentype",null);
tC.setPropertyValue("audience",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);

tC.setPropertyValue("expectErrType","SUCCESS");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="9aff558f-0c81-4342-9dad-da83ccae2322">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def dbUtils;

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

def callTS = tP.getTestSuiteByName(callTSname);

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("username",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));

if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
{
	tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
	tP.setPropertyValue("audience",callTS.getPropertyValue("audience"));
}
else
{
	tC.setPropertyValue("tokentype",URLEncoder.encode(tP.getPropertyValue("urntokenType_userpassword"), "UTF-8"));
	tP.setPropertyValue("audience",URLEncoder.encode(callTS.getPropertyValue("audience"), "UTF-8"));
}

	</script></con:config>
      </con:testStep>
      
      
      
      
      <con:testStep type="groovy" name="Establish pem" id="94b59c95-ff72-47e3-9fd0-fd8d7afd897f">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("POST - STS");
RestTestRequestStep testStep1 = tC.getTestStepByName("GET - STS");

def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);</script></con:config>
      </con:testStep>
      
      <con:testStep type="restrequest" name="POST - STS" id="da50ab70-c483-4d4b-82bc-3d3ee831cc7f"><con:settings/><con:config service="STS" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/SecurityToken/SecurityTokenExchange" methodName="STSCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - STS" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="RET_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes" ?> 
  <Credentials xmlns="${#Project#coordinatorSchema}">
  <Username>${#TestCase#username}</Username> 
  <Password>${#TestCase#password}</Password> 
  </Credentials>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="audience" value="${#Project#audience}"/>
  <con:entry key="tokentype" value="${#TestCase#tokentype}"/>
</con:parameters></con:restRequest></con:config></con:testStep>
      <con:testStep type="groovy" name="Extract Response Body and Headers" id="df8432c8-f922-431d-8412-7c2cdebc6bd5">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def tStep = tC.getTestStepByName('POST - STS');

tC.setPropertyValue("status", null);
tC.setPropertyValue("connection", null);
tC.setPropertyValue("contentType", null);
tC.setPropertyValue("contentLength", null);
tC.setPropertyValue("contentLocation", null);
/*
*  Get the HTTP headers
*/
String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("versionMajor");
String minor = tP.getPropertyValue("versionMinor");

tP.setPropertyValue("targetURL","qa.p.uvvu.com:7001");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("status", status);
tC.setPropertyValue("connection", connection);
tC.setPropertyValue("contentType", contentType);
tC.setPropertyValue("contentLength", contentLength);
tC.setPropertyValue("contentLocation", contentLocation);

this.log.info "contentLength [$contentLength]";
this.log.info "status [$status]";
this.log.info "contentType [$contentType]";
this.log.info "contentLocation [$contentLocation]";

/*
 *if (contentLength.toInteger() > 0) {
	rawResp = new ByteArrayOutputStream();
     rawResp = tStep.httpRequest.response.getRawResponseData();
     strVal  = new String(rawResp);

     int startAssert = strVal.indexOf("&lt;?xml version=\"1.0\" ");
  
	String XMLbody  = strVal.substring(startAssert, strVal.length());
     
	tC.setPropertyValue("XMLbody", XMLbody);
}
*/</script></con:config>
      </con:testStep>
      
      
      <con:testStep type="groovy" name="Verify Response Body and Headers and save assertion" id="10cc5667-c75c-4a90-a82a-1824ee53661f">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def url           = tP.getPropertyValue("targetURL");
//def urnacct       = tP.getPropertyValue("urnaccount");
//def urnstream     = tP.getPropertyValue("urnstream");
def expectErrType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");
def nodeaccountid = tC.getPropertyValue("nodeaccountid");

boolean dobodyXML = true;
boolean doContentTypeHeader = true;
boolean doConnectionClose = false;
boolean doContentLocaton  = false;
boolean contentLengthZero = false;

String errorID     = "";
String errorReason = "";
String errorLink   = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
//String orgRequest  = url + "/dece/Account/" + urnacct + nodeaccountid;
String expectHTTPstatus = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";

if (expectErrType == "") {
	expectErrType = "SUCCESS";
}

this.log.info "expectErrType is $expectErrType";
switch (expectErrType) {
	case "SUCCESS":
	default:
		expectHTTPstatus = "HTTP/1.1 201 Created";
		expectHTTPcontenttype = "application/xml";
		contentLengthZero = false;
		doContentLocaton  = true;
		doContentTypeHeader = false;
		dobodyXML = true;
	break;
}

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("status");
//assert tC.getPropertyValue("status") == expectHTTPstatus;

// Connection
log.info "doConnectionClose=="+doConnectionClose;
if (doConnectionClose) {
	this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("connection");
	assert tC.getPropertyValue("connection") == expectHTTPconnection;
}
/*
//Content-Length
if (contentLengthZero) {
	assert tC.getPropertyValue("contentLength").toInteger() > 0;
} else {
	assert tC.getPropertyValue("contentLength").toInteger() > 0;
}
*/	
//Content-Type
if (doContentTypeHeader) {
	assert tC.getPropertyValue("contentType") == expectHTTPcontenttype;
}

// Content-Location
log.info "doContentLocaton=="+doContentLocaton;
if (doContentLocaton) {
	assert tC.getPropertyValue("contentLocation") != null;
	
	def b = tC.getPropertyValue("contentLocation").toURL();
	log.info "Path=="+b.getPath();
	assert b.getPath().matches("/rest/$major/$minor/SecurityToken/Assertion/[_,0-9,a-f,-]*");
	def parms = b.getPath().split("/");
	tC.setPropertyValue("assertionUUID",parms[parms.size() - 1]);
} else {
	//assert tC.getPropertyValue("contentLocation") == null;
}

if (dobodyXML) {
	if (XMLbody.length() > 0) {
		def myXML = new XmlSlurper().parseText(XMLbody);

		// Verify response sizes...
		assert myXML.saml2:Assertion.size() == 1;
		assert myXML.ds:Signature.size()    == 1;
		assert myXML.ds:SignedInfo.size()   == 1;
		assert myXML.ds:DigestValue.size()  == 1;
		assert myXML.ds:SignatureValue.size()  == 1;
		assert myXML.ds:X509Certificate.size() == 1;
		assert myXML.saml2:NameID.size()    == 1;
		assert myXML.saml2:AudienceRestriction.size() == 1;
		assert myXML.saml2:AssertionURIRef.size() == 1;
		assert myXML.saml2:AssertionURIRef.size() == 1;
	}
}</script></con:config>
      </con:testStep>
      
      
      
      
      
      
      
      
      
      
      <con:testStep type="groovy" name="Return the assertion information to the Calling Test Case" id="1cd14bc0-eb33-4ec8-8ab7-7a9b2117a533">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("assertionUUID",null);
callTC.setPropertyValue("assertionUUID",null);
callTC.setPropertyValue("assertionUUID",tC.getPropertyValue("assertionUUID"));
callTC.setPropertyValue("assertionUUID1",tC.getPropertyValue("assertionUUID"));</script></con:config>
      </con:testStep><con:testStep type="restrequest" name="GET - STS" id="4b0cf0d9-17c7-4733-94ec-6eb365739027"><con:settings/><con:config service="STS" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/SecurityToken/Assertion/{assertionUUID}" methodName="STSGet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - STS" mediaType="application/xml" sslKeystore="RET_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="assertionUUID" value="${#TestCase#assertionUUID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers 1" id="7b8e54fb-3bba-4c8d-874b-d02580a5e4e1">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def tStep  = tC.getTestStepByName('GET - STS');

/*
*  Get the HTTP headers
*/
String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("versionMajor");
String minor = tP.getPropertyValue("versionMinor");
String XMLbody = "";

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

//def expXML = tStep.httpRequest.response.getResponseContent();
this.log.info tStep.httpRequest.response.getRawResponseData();
//new b = tStep.httpRequest.response.getResponseContent();

rawResp = new ByteArrayOutputStream();

rawResp = tStep.httpRequest.response.getRawResponseData();
strVal  = new String(rawResp);
log.info strVal;

int startAssert = strVal.indexOf("&lt;?xml version=\"1.0\" ");
log.info  "startAssert: "+startAssert;

if (startAssert > 0) {
	XMLbody  = strVal.substring(startAssert, strVal.length());
}

tC.setPropertyValue("XMLbody", XMLbody);
tC.setPropertyValue("status", status);
tC.setPropertyValue("connection", connection);
tC.setPropertyValue("contentType", contentType);
tC.setPropertyValue("contentLength", contentLength);
tC.setPropertyValue("contentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Extract Key Elements from &lt;Assertion> Body" id="82ae25a2-0b92-49c1-8931-c55837fede73">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def XMLbody = tC.getPropertyValue("XMLbody");
def expectErrType = tC.getPropertyValue("expectErrType");

int lastColon = 0;
int lastSlash = 0;

if (expectErrType == "" || expectErrType == "SUCCESS") {
	tC.setPropertyValue("SAML",null);
	tC.setPropertyValue("NODE_ACCOUNT_ID",null);
	tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
	tC.setPropertyValue("NODE_USER_ID",null);
	tC.setPropertyValue("NODE_USER_ID_FULL",null);
	
	if (XMLbody.length() > 0) {
		def myXML = new XmlSlurper().parseText(XMLbody).declareNamespace(saml2: "urn:oasis:names:tc:SAML:2.0:assertion");

			// Verify response sizes...
			assert myXML.size() == 1;

			def accountId = myXML."saml2:AttributeStatement"."saml2:Attribute"."saml2:AttributeValue";
			def userId    = myXML."saml2:Subject"."saml2:NameID";
			def NotBefore = myXML."saml2:Conditions".@NotBefore.text();
			def NotOnOrAfter = myXML."saml2:Conditions".@NotOnOrAfter.text();
			def AudienceRestriction = myXML."saml2:Conditions".AudienceRestriction;
			
			this.log.info "accountId [$accountId]";
			this.log.info "userId [$userId]";
			this.log.info "NotBefore [$NotBefore]";
			this.log.info "NotOnOrAfter [$NotOnOrAfter]";
			this.log.info "AudienceRestriction [$AudienceRestriction]";
						
			//tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",accountId.toString());
			//tC.setPropertyValue("NODE_USER_ID_FULL",userId.toString());
			tC.setPropertyValue("assertionNotBefore",NotBefore.toString());
			tC.setPropertyValue("assertionNotOnOrAfter",NotOnOrAfter.toString());
			tC.setPropertyValue("assertionAudienceRestriction",NotBefore.toString());
			tC.setPropertyValue("NODE_ACCOUNT_ID",accountId.toString().substring(accountId.toString().lastIndexOf(':') + 1).toString());
			tC.setPropertyValue("NODE_USER_ID",userId.toString().substring(userId.toString().lastIndexOf(':') + 1).toString());
			
			if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
			{
                    tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",accountId.toString());
				tC.setPropertyValue("NODE_USER_ID_FULL",userId.toString());
        	     } 
        	     else 
        	     {
				tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(accountId.toString()));
				tC.setPropertyValue("NODE_USER_ID_FULL",URLEncoder.encode(userId.toString()));        	     	
		     }
	} 
	else {
		return false;
	}
}</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="37f5c654-ca5e-427b-b887-ca786a315e6f">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def url           = tP.getPropertyValue("targetURL");
//def urnacct       = tP.getPropertyValue("urnaccount");
//def urnstream     = tP.getPropertyValue("urnstream");
def expectErrType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");
def nodeaccountid = tC.getPropertyValue("nodeaccountid");

boolean dobodyXML = true;
boolean doContentTypeHeader = true;
boolean doConnectionClose = false;
boolean doContentLocaton  = false;
boolean contentLengthZero = false;

String errorID     = "";
String errorReason = "";
String errorLink   = "";
//String orgRequest  = url + "/dece/Account/" + urnacct + nodeaccountid;
String expectHTTPstatus = "HTTP/1.1 200 OK";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";

if (expectErrType == "") {
	expectErrType = "SUCCESS";
}

this.log.info "expectErrType is $expectErrType";
switch (expectErrType) {
	case "SUCCESS":
	default:
		expectHTTPstatus = "HTTP/1.1 200 OK";
		expectHTTPcontenttype = "application/xml";
		contentLengthZero = false;
		doContentLocaton  = false;
		doContentTypeHeader = false;
		dobodyXML = true;
	break;
}

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("status");
//assert tC.getPropertyValue("status") == expectHTTPstatus;

// Connection

if (doConnectionClose) {
	this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("connection");
	assert tC.getPropertyValue("connection") == expectHTTPconnection;
}
/*
//Content-Length
if (contentLengthZero) {
	assert tC.getPropertyValue("contentLength").toInteger() == 0;
} else {
	assert tC.getPropertyValue("contentLength").toInteger() > 0;
}
*/	
//Content-Type
if (doContentTypeHeader) {
	assert tC.getPropertyValue("contentType") == expectHTTPcontenttype;
}

// Content-Location
if (doContentLocaton) {
	assert tC.getPropertyValue("contentLocation") != null;
	
	def b = tC.getPropertyValue("contentLocation").toURL();
	assert b.getPath().matches("/dece/SecurityToken/Assertion/[0-9,a-f,-]*");
	def parms = b.getPath().split("/");
	
	tC.setPropertyValue("assertionUUID",parms[parms.size() - 1]);
} else {
	assert tC.getPropertyValue("contentLocation") == null;
}

if (dobodyXML) {
	if (XMLbody.length() > 0) {
		def myXML = new XmlSlurper().parseText(XMLbody);

		// Verify response sizes...
		assert myXML.saml2:Assertion.size() == 1;
		assert myXML.ds:Signature.size()    == 1;
		assert myXML.ds:SignedInfo.size()   == 1;
		assert myXML.ds:DigestValue.size()  == 1;
		assert myXML.ds:SignatureValue.size()  == 1;
		assert myXML.ds:X509Certificate.size() == 1;
		assert myXML.saml2:NameID.size()    == 1;
		assert myXML.saml2:AudienceRestriction.size() == 1;
		assert myXML.saml2:AssertionURIRef.size() == 1;
		assert myXML.saml2:AssertionURIRef.size() == 1;
/*
		
		// ErrorCode
		this.log.info "ErrorCode: Expect[$errorID] Received: " + myXML.Error.@ErrorID.toString();
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason: Expect[$errorReason] Received: " + myXML.Error.Reason.toString();
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorReason: Expect[$errorLink] Received: " + myXML.Error.ErrorLink.toString();
		//assert myXML.Error.ErrorLink.toString() == errorLink;
		*/
	} else {
		return false;
	}
}



</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Deflate and encode the &lt;Assertion>" id="8811ac5c-ff1b-42f9-bffc-d75fd43ab9d9">
        <con:settings/>
        <con:config><script>import java.util.zip.Deflater;
import org.w3c.tools.codec.Base64Encoder;
import java.io.ByteArrayOutputStream;
import java.util.zip.DeflaterOutputStream;
import java.lang.*;

import org.opensaml.xml.util.Base64;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)


int compressedLength = 0;
//String XMLbody = tC.getPropertyValue("XMLassertion").toString();
String XMLbodyRaw = tC.getPropertyValue("XMLbody").toString();

int startAssert = XMLbodyRaw.indexOf("&lt;saml2:Assertion ");
int endAssert   = XMLbodyRaw.indexOf("&lt;/saml2:Assertion>");


String XMLbody = XMLbodyRaw.substring(startAssert, endAssert + 18).trim();
String base64encodeStr = "";

this.log.info "XMLbody is [$XMLbody]";

def myXML = new XmlSlurper().parseText(XMLbody);
tC.setPropertyValue("assertId",myXML.@ID.toString());

// Perform Deflation
//byte[] xmlBytes = XMLbody.trim().getBytes();
byte [] xmlBytes = new byte[XMLbody.trim().length()];

Deflater compresser = new Deflater(Deflater.DEFLATED, true);
compresser.setInput(XMLbody.trim().getBytes());
compresser.finish();
compressedLength = compresser.deflate(xmlBytes);

byte [] subArray = Arrays.copyOfRange(xmlBytes, 0, compressedLength);
base64encodeStr = Base64.encodeBytes(subArray,Base64.DONT_BREAK_LINES);
// finally, URL encode it
tC.setPropertyValue("SAML", "SAML2 Assertion="+base64encodeStr);


</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Return extracted Properties back to calling Test Case" id="5ed538ec-cb66-4e35-9b47-6082c2e69ccd">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

String acctID = tC.getPropertyValue("NODE_ACCOUNT_ID");
String userID = tC.getPropertyValue("NODE_USER_ID");

callTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));
//callTC.setPropertyValue("SAML_USER1",tC.getPropertyValue("SAML"));

if (acctID != null &amp;&amp; acctID.length() > 0) {
	
	callTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
	//callTC.setPropertyValue("NODE_ACCOUNT_ID1",tC.getPropertyValue("NODE_ACCOUNT_ID"));
	callTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
	//callTC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
} else {
	callTC.setPropertyValue("assertionAccountId","ERROR");
}
if (userID != null &amp;&amp; userID.length() > 0) {
	callTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID"));
	//callTC.setPropertyValue("NODE_USER_ID1",tC.getPropertyValue("NODE_USER_ID"));
	callTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
	//callTC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL"));
} else {
	callTC.setPropertyValue("assertionUserId","ERROR");
}</script></con:config>
      </con:testStep><con:properties>
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
      <con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/RET_concat.pem</con:value></con:property><con:property><con:name>tName</con:name><con:value>User_Create_STS_Policies</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Create_API</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>audience</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value>usercreate20140513_084414</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>connection</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>contentType</con:name><con:value>text/xml;charset=UTF-8</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>2980</con:value></con:property><con:property><con:name>contentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorStatusCode</con:name><con:value/></con:property><con:property><con:name>errorReason</con:name><con:value/></con:property><con:property><con:name>errorID</con:name><con:value/></con:property><con:property><con:name>assertionUUIDprior</con:name><con:value>_732606f9-3702-470e-9ecf-2bbb514a18ba</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_17f7da12-670c-47f0-9937-7bf18562b369</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<saml2:Assertion ID="_17f7da12-670c-47f0-9937-7bf18562b369" IssueInstant="2014-05-14T00:44:15.278Z" Version="2.0" xmlns:saml2="urn:oasis:names:tc:SAML:2.0:assertion"><saml2:Issuer>http://c.decellc.com/</saml2:Issuer><ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
<ds:SignedInfo>
<ds:CanonicalizationMethod Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"/>
<ds:SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/>
<ds:Reference URI="#_17f7da12-670c-47f0-9937-7bf18562b369">
<ds:Transforms>
<ds:Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/>
<ds:Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"><ec:InclusiveNamespaces PrefixList="ds saml2 xs xsi" xmlns:ec="http://www.w3.org/2001/10/xml-exc-c14n#"/></ds:Transform>
</ds:Transforms>
<ds:DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/>
<ds:DigestValue>1YHYZrJ2qS0t2HJQcAva5w+GjZg=</ds:DigestValue>
</ds:Reference>
</ds:SignedInfo>
<ds:SignatureValue>
Y3LEsIqJ21AfAyAvzoBXjdx0gzeoDsHKNjxaUyC7LOqQynpfgtuWRIiKmoxNzzZzmCfzY0ZORbe/
SRGBZEbYyzLG3WzT99uHxDDnPeD2dM7R5NBXMiRanfJU7gdJdYwef90ET0oNXhGY8XoJL34N5+uG
JigWVn2foiH8s5es/04=
</ds:SignatureValue>
</ds:Signature><saml2:Subject><saml2:NameID Format="urn:oasis:names:tc:SAML:2.0:nameid-format:persistent">urn:dece:userid:org:dece:F950235940171B42E0401F0A05990975</saml2:NameID><saml2:SubjectConfirmation Method="urn:oasis:names:tc:SAML:2.0:cm:sender-vouches"><saml2:SubjectConfirmationData InResponseTo="_1iqtsivgy29og1b9au3ewqd7ne" NotOnOrAfter="2014-05-14T03:44:15.278Z" Recipient="https://stdecqavutl1.va.neustar.com:2485/simplesaml/module.php/saml/sp/saml2-acs.php/RET"/></saml2:SubjectConfirmation></saml2:Subject><saml2:Conditions NotBefore="2014-05-14T00:44:05.278Z" NotOnOrAfter="2014-05-14T06:44:15.278Z"><saml2:AudienceRestriction><saml2:Audience>urn:dece:org:org:dece:RET_CS_1</saml2:Audience><saml2:Audience>urn:dece:org:org:dece:RET</saml2:Audience></saml2:AudienceRestriction></saml2:Conditions><saml2:Advice><saml2:AssertionURIRef>https://qa.q.uvvu.com:7001/rest/1/11/SecurityToken/Assertion/_17f7da12-670c-47f0-9937-7bf18562b369</saml2:AssertionURIRef></saml2:Advice><saml2:AuthnStatement AuthnInstant="2014-05-14T00:44:15.278Z" SessionIndex="_17f7da12-670c-47f0-9937-7bf18562b369"><saml2:AuthnContext><saml2:AuthnContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:Password</saml2:AuthnContextClassRef><saml2:AuthenticatingAuthority>urn:dece:org:org:dece:coordinator</saml2:AuthenticatingAuthority></saml2:AuthnContext></saml2:AuthnStatement><saml2:AttributeStatement><saml2:Attribute Name="accountID" NameFormat="urn:dece:type:accountID"><saml2:AttributeValue xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xs:string">urn:dece:accountid:org:dece:F950212C2CCEDAE0E0401F0A059909A5</saml2:AttributeValue></saml2:Attribute></saml2:AttributeStatement></saml2:Assertion>]]></con:value></con:property><con:property><con:name>username1</con:name><con:value>firstuser20130726_035156</con:value></con:property><con:property><con:name>SAML</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SAML2 Assertion=nVZdc9o6EH3vr/C4jx3jDyCOPYEZAjSBEtICSUNeOkJeG+XaElgyX7/+SiYmQEguvTOZIVqvds/uHh3piqMkdvwG55AKwqjWadX0P7YbugGyHePCtbBRcUPL8Lyya7iT0L6sXjiT8oWnax3OM+hQLhAVNd2x7IphVQ27MrIsv1Lx7WrJcS+fde0RUi5DS5eSpWurJKbcz9PW9CylPkOccJ+iBLgvsD9s3PV86emjApNev9qizBOm9akQM980cSkADHGMS5gl5pV54HMVcH9IIopElsJrzoDX9Ne9y+WytCyXWBqZjmVZpuWZ0ifgJPqq178UmyHo0JBt101EGSUYxWSDFKg7EFMWaI04YikR0+SD0LZpWyq0AStsYLtCv+rmW4Ic3ZmRDkCmHBl8iuwi2ABCSIFi0B4GnZr+9bwJbveOUkR5yNKEH63/DhLQBcRsBoHBi8oKdOdHPNGu+hVgv0NxnHGygL6iyQxh4NrPFEKy6hEuyRdwLR+/tuLyjxQsA/w3Y7ky97FK6OaJ7rRIBFz8n5ntz2sb5RHFGdTt8e34Oe0686ElnNvuL9xYoOry283Lc1TLIew7b0Htxv26Pibrjluvm8blXpt35l3HboSNdWOxYddPL8HKijbAWvz2R/9lhR7WTbd3P/+1prMwEtnvQYf8SNiqv9k8b5JmuBlbz/eDCZhfhoOb6+f2ZLze9G7Kvzcjz8tuV60W/QktJ7hzB9X+9dMdGSAadh/cKOgG4yWEntUeWaz/NL0ZXz6xbq9c6Ve/ZTdfuiT6/UidkJHbS14FblqV2ltN+zUcGgtJGGaTF8CiWCp6dFradzkvJD6XF2UhgRHmrv5MaRQXQIVeV7uUtPiZFCAS+HKY2/V3r2o55apXsWzXvq44bUv+991qWFXPszy3WmjQFsURxCajIVG5lMpu+fM5QJz4HGgAqbFgGZ4C1z+J2EICaR06kIeDUQ4jplSczIU8M9Ha8VhkTzyUlWE5D1wKutZn4p7ep41QQHqo3eUD7R4AJjMCSuAVw7mkOBeyGXO0yERslxaoRCGTV0CqVNh3KpdVk5NkFoOCaiYsyGIozaazvDUm3/46BsI8tw7ao/zkfVjY8beiB9InIMqBq1quQc4RTlxCVlHIxwVf7BdchG9kAVEHTDZUpARvkRx+euOJIsiOJLKiP83hH7vAvXM/e/v7neYnoMzjfuwSBQuyl7a4TeUFIeWjXkxzjkrzUrZYZPn8XCWNqQxvSoW0zSHgTOrbesT+AWruQphnXS871EeZd/ZDfJmY0qFAAhLJNi1fnvG2GAJXb4uOPCercx8uByll3wSsxClbM5ZPEIX401cK9rHyk+af8mfJ0uBtXCdi7eWRdcoHhSA0Uit1kaw/IAVmMiyRysfS/eCnApxKfmjcNXmHRUg2TTIBH3/RlKTVdIQxy6jotPTcsC+zOU6xnoH/5vQuTC7lr3fzin94Nz/d9YZS8BKk73zJfzsbJKcLluom/XMsNX0ln5oyOY32ZP0V4Dtlt52m02y2W422dajsjZ2yH1ZSf2d+b9nr6fF5qP8L</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>F950212C2CCEDAE0E0401F0A059909A5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950212C2CCEDAE0E0401F0A059909A5</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>F950235940171B42E0401F0A05990975</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:F950235940171B42E0401F0A05990975</con:value></con:property><con:property><con:name>assertionNotBefore</con:name><con:value>2014-05-14T00:44:05.278Z</con:value></con:property><con:property><con:name>assertionNotOnOrAfter</con:name><con:value>2014-05-14T06:44:15.278Z</con:value></con:property><con:property><con:name>assertionAudienceRestriction</con:name><con:value>2014-05-14T00:44:05.278Z</con:value></con:property><con:property><con:name>assertId</con:name><con:value>_17f7da12-670c-47f0-9937-7bf18562b369</con:value></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>555384c9-6fa2-448b-a38e-713264e945f2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserGet_API" searchProperties="true" id="a9371951-a0d7-4374-b477-39820ba727c5"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="34eab9ef-094b-4ea5-b816-16bad8f3019a"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="SetPem" id="ab184205-d3f8-4833-a390-e2590f4dff15"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("User_Get");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="User_Get" id="34ea641f-a94a-47d6-9957-cf0f9e5f051c"><con:settings/><con:config service="Users" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" methodName="UserGet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User_Get" mediaType="application/xml" sslKeystore="RET_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="3475aa35-aee4-44f3-bc56-b7358d0abca8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('User_Get');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String ETag = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);

//tC.setPropertyValue("ETagPrior",tC.getPropertyValue("ETag"));
tC.setPropertyValue("ETag", ETag);

//log.info "ETagPrior: " + tC.getPropertyValue("ETagPrior")+", ETag: "+ tC.getPropertyValue("ETag");
//assert tC.getPropertyValue("ETagPrior")!= tC.getPropertyValue("ETag");
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="621e6c79-25ba-4fc8-86b5-0fa7a2e3401f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseTypeUserGet}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

def RequestorType = "";
def RequestorClass = "";
def Requestee = "";

def usernamestring = "";
def givennamestring = "";
def surnamestring = "";

int firstmask = 0;
int lastmask = 0;

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#TestCase#AccountID}')+ "/User/" + context.expand('${#TestCase#UserID}');
String expectHTTPstatus      = "HTTP/1.1 200 OK";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
	break;

	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
		errorReason = "The API call is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_VALID":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserIdInvalid";
		errorReason = "The user ID is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
		expectHTTPconnection = "close";
	break;

	case "USER_INACTIVE":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
		errorReason = "The requesting member is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;

     case "URL_NOT_FOUND":
		expectHTTPstatus = "HTTP/1.1 404 Not Found";
		expectHTTPcontenttype = "text/xml"
		XMLbodynull     = true;
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	case "MTHD_NOT_ALLWD":
		expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
		expectHTTPcontenttype = "text/plain; charset=UTF-8"
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	case "USER_NOT_IN_ACC":
		expectHTTPstatus = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:UserNotFound";
		errorReason = "The user ID was not found.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotFound";
	break;

     case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;

	case "NO_ENABLE_MNG_USR_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the EnableManageUserConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:EnableManageUserConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:EnableManageUserConsentRequired";
	break;

	case "NO_MNG_USR_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageUserConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
	break;

	case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		//errorReason = "The identified account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "SPL_CS_ALLOWED_ACCT":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;

     case "SPL_CS_ALLOWED_USER":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToDeleteSuspendedUsers";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToDeleteSuspendedUsers";
     break;

    case "REQUESTEE_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorReason = "The member has been removed.";
		errorID     = "urn:dece:errorid:org:dece:AccountUserStatusDeleted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserStatusDeleted";
		expectHTTPconnection = "close";
	break;
      
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
////assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

      def a = context.expand( '${#TestCase#httpLocation}');
      def b = a.toURL();
      def urlStr = b.getPath();

      if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
      	{                                
			assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
			
			int lastColon = urlStr.lastIndexOf(':');
			int lastSlash = urlStr.lastIndexOf('/');
			userid     = urlStr.substring(lastColon + 1);
			def node_User = urlStr.substring(lastSlash + 1);
			                                 
			tC.setPropertyValue("NODE_USER_ID",userid);			
			tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
      	} 
      else 
      	{
			assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");
			int lastColon = urlStr.lastIndexOf('%3A');
			int lastSlash = urlStr.lastIndexOf('/');
			userid     = urlStr.substring(lastColon + 3);
			def node_User = urlStr.substring(lastSlash + 1);
			                      
			tC.setPropertyValue("NODE_USER_ID",userid);			
			tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
      	}
	
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
//assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}


if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorLink Received [" + myXML.Error.ErrorLink.toString() + "] Exp[$errorLink]";
		//assert myXML.Error.ErrorLink.toString() == errorLink;

	} 
  else
  {
   //Data Types
   // RequestorType: Self, CLG, CS, Other
   // RequestorClass: BAU,SAU,FAU
   //Requestee: CHILD, YOUTH, ADULT

   RequestorType = context.expand( '${#TestCase#RequestorType}');
   RequestorClass = context.expand( '${#TestCase#RequestorClass}');
   Requestee = context.expand( '${#TestCase#Requestee}');

    // Following Fields returned for Everyone
    // Contact Info shwon only for CLG or Self or Portal:CS or DECE:CS or COORD:CS - kalyan 05092013
    if ( (RequestorType == "Other")  || (RequestorType == "CS")|| (RequestorType == "SPLCS"))
    {
         assert myXML.@UserClass.size() == 1;
         assert myXML.@UserClass.toString().matches("urn:dece:role:user:class:[a-z]*");
         
         assert myXML.Credentials.size() == 1;
         assert myXML.Credentials.Username.size() == 1;
         assert myXML.Credentials.Password.size() == 0;

         assert myXML.Name.size() == 1;
         assert myXML.Name.GivenName.size() == 1;
         assert myXML.Name.SurName.size() == 1;
            
         assert myXML.Languages.size() == 1;
         assert myXML.Languages.Language.size() > 0;
     
         assert myXML.ResourceStatus.size() == 1;
         assert myXML.ResourceStatus.Current.size() == 1;
    }
    else
    {
    	    assert myXML.@UserClass.size() == 1;
         assert myXML.@UserClass.toString().matches("urn:dece:role:user:class:[a-z]*");
         
         assert myXML.Credentials.size() == 1;
         assert myXML.Credentials.Username.size() == 1;
         assert myXML.Credentials.Password.size() == 0;

         assert myXML.Name.size() == 1;
         assert myXML.Name.GivenName.size() == 1;
         assert myXML.Name.SurName.size() == 1;
  /*      
         def a = myXML.DisplayImage.DisplayImageURL;
         log.info a ;
		//def b = a.toURL();
		//log.info b;
		 log.info "Response_DisplayImageURL: "+a.getPath();
         assert  a.matches("https://qa.uvvu.com:7001/ssp/image?type=image&amp;imageId=[0-9,A-F]*");
        log.info "here";
*/
        
         assert myXML.ContactInfo.size() == 1;
         assert myXML.ContactInfo.Address.size() == 1;
         assert myXML.ContactInfo.Address.PostalAddress.size() == 1;
         assert myXML.ContactInfo.Address.PostalCode.size() == 1;
         assert myXML.ContactInfo.Address.Locality.size() == 1;
         assert myXML.ContactInfo.Address.StateOrProvince.size() == 1;
         assert myXML.ContactInfo.Address.Country.size() == 1;
         assert myXML.ContactInfo.TelephoneNumber.size() == 1;
         assert myXML.ContactInfo.TelephoneNumber.Value.size() == 1;
         assert myXML.ContactInfo.MobileTelephoneNumber.size() == 1;
         assert myXML.ContactInfo.MobileTelephoneNumber.Value.size() == 1;
     
         assert myXML.Languages.size() == 1;
         assert myXML.Languages.Language.size() > 0;
     
         assert myXML.ResourceStatus.size() == 1;
         assert myXML.ResourceStatus.Current.size() == 1;
    }
         if ((RequestorType == "CS")|| (RequestorType == "SPLCS"))
         {
           assert myXML.ResourceStatus.History.size() > 0; 	
         } 
         else
         {
           assert myXML.ResourceStatus.History.size() == 0; 	
         }

   /******************************************************************************************************************/
           
   //Filtering fields based on PI and Access levels

   if(Requestee == "CHILD")
    {

    	  this.log.info "Getting CHILD details";
    	  
  	 if((RequestorType == "CLG") || (RequestorType == "Self") || (RequestorType == "SPLCS"))
  	 {
  	   /****************DOB, Security Token and Email Shown only to Self,CLG and CS**********/
         assert myXML.DateOfBirth.size() == 1;     
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0;
        
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;     
  	 }
  	 else
  	  {
         /****************DOB, Security Token and Email not shown to CS and others**********/
         assert myXML.DateOfBirth.size() == 0;     
       //  assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() == 0;
         //assert myXML.LegalGuardian.size() == 1; 

         assert myXML.ContactInfo.PrimaryEmail.size() == 0;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 0;
  	   

         /**************Verifying Masking of CHILD PI details *******************/
          
         usernamestring = myXML.Credentials.Username.toString();
         givennamestring = myXML.Name.GivenName.toString();
         surnamestring = myXML.Name.SurName.toString();
                
         //*************Verifying Masking of CHILD UserName details ******************

         //firstmask = usernamestring.indexOf('u');
        lastmask = usernamestring.length();
        
     log.info firstmask;
 		 log.info  lastmask;
        usernamestring = usernamestring.substring(1,lastmask-1);
        //usernamestring = "••••••";
   log.info usernamestring;
//        assert usernamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
         assert usernamestring == "••••••";

       //*************Verifying Masking of CHILD GivenName details ******************
          
        //firstmask = givennamestring.indexOf('â');
        lastmask = givennamestring.length();

         givennamestring = givennamestring.substring(1,lastmask-1);

       // assert givennamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
        assert givennamestring == "••••••";

         //*************Verifying Masking of CHILD SurName details ******************
          
       // firstmask = surnamestring.indexOf('â');
        lastmask = surnamestring.length();

         surnamestring = surnamestring.substring(1,lastmask-1);

       //assert surnamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";     
      assert surnamestring == "••••••";        
    }
  	 if ((RequestorType == "CS")|| (RequestorType == "SPLCS"))
          {
             this.log.info "Getting CHILD CLG details for CS";
             
             assert myXML.LegalGuardian.size() > 0; 

              if(myXML.LegalGuardian.size() == 1)     	
             {
           	 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");	
             }
             else
             if(myXML.LegalGuardian.size() == 2)     	
             {
                if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                	assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else
               if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
             	{
           	  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";	
               } 
            }         
          else if(myXML.LegalGuardian.size() != 0)     	
                {
            	   this.log.info "Getting CHILD Active CLG details for NonCS";
            	 
           	   assert myXML.LegalGuardian.size() == 1;   
           	   assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";	
               }
           else
               {
            	 this.log.info "Getting CHILD Pending CLG details for NonCS";
           	 assert myXML.LegalGuardian.size() == 0;  
              }
          }
    }  
   else if((RequestorClass == "FAU") || (RequestorClass == "SAU") || (RequestorType == "Self")|| (RequestorType == "SPLCS")|| (RequestorType == "CS"))
    {
    	       	  
    	    assert myXML.DateOfBirth.size() == 1; 
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0; 

         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;
         
          if(Requestee == "YOUTH")	
          {
            this.log.info "Getting YOUTH details";
            assert myXML.LegalGuardian.size() == 0; 
/*
             if(RequestorType == "CS")
            {
              assert myXML.LegalGuardian.size() > 0; 

              if(myXML.LegalGuardian.size() == 1)     	
             {
           	 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");	
             }
             else if(myXML.LegalGuardian.size() == 2)     	
             {
           	 if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                	assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
             	{
           	  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";	
               } 
            }
            else if(myXML.LegalGuardian.size() != 0)     	
            {
           	 assert myXML.LegalGuardian.size() == 1;   
           	 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";	
            }
           else
            {
           	 assert myXML.LegalGuardian.size() == 0;  
            }      	
          }
*/          
       }  
     else
        {
           this.log.info "Getting ADULT details";	
           //assert myxml.LegalGuardian.size() == 0; 	
		assert myXML.LegalGuardian.size() == 0; 	
        }
    }  
     else 
    {   
    	    this.log.info "BAU geting other's details";
    	    
    	    assert myXML.DateOfBirth.size() == 1; 
        // assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() == 0; 
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1; 
         
         if(Requestee == "YOUTH")	
          {
            if(myXML.LegalGuardian.size() != 0)     	
            {
           	 assert myXML.LegalGuardian.size() == 1;   
           	 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";	
            }
          else
            {
           	 assert myXML.LegalGuardian.size() == 0;  
            }	
          }
          else
          {
            assert myXML.LegalGuardian.size() == 0; 	
          }      	
    }       
    
  }	// end if for SUCCESS response
} // end if for XML Body Validations
</script></con:config></con:testStep><con:testStep type="groovy" name="Return_ETag_to_Calling_TestCase" id="492e96de-f3da-485b-bd40-0c97736d4383"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));</script></con:config></con:testStep><con:properties><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"E71D15E51CCE0124E0401F0A079930BC:DA855416"</con:value></con:property><con:property><con:name>ETagPrior</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>2683</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs//RET_concat.pem</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E71D152E3AE61F8FE0401F0A079911AF</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E71D152E3AF91F8FE0401F0A079911AF</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E5F850C559F9CD04E0401F0A05993FCD</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E71D152E3AF91F8FE0401F0A079911AF</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E5F850C559F9CD04E0401F0A05993FCD</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>FAU</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Self</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>sName</con:name><con:value>06.Functional_UserGet_NonCS</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00042_UserGet_FUNC_NonCS_Full_Get_Self by P Host</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E603BD56DDEEF0CEE0401F0A07990E43</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E5F850C559FACD04E0401F0A05993FCD</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<User UserClass="urn:dece:role:user:class:full" UserID="urn:dece:userid:org:dece:E71D152E3AF91F8FE0401F0A079911AF" xmlns="http://www.decellc.org/schema/2013/06/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Name>
      <GivenName>userget_firstuser20130924_032954</GivenName>
      <SurName>userget_firstuser20130924_032954</SurName>
   </Name>
   <DisplayImage>
      <DisplayImageURL>https://qa.uvvu.com:7001/ssp/image?type=image&amp;imageId=E71D152E3AFA1F8FE0401F0A079911AF</DisplayImageURL>
   </DisplayImage>
   <ContactInfo>
      <PrimaryEmail VerificationStatus="urn:dece:type:status:pending">
         <Value>testing@uvvutesting.biz</Value>
      </PrimaryEmail>
      <AlternateEmail Notify="false" VerificationStatus="urn:dece:type:status:pending">
         <Value>testing_+428@uvvutesting.biz</Value>
      </AlternateEmail>
      <Address>
         <PostalAddress>46000 Center Oak Plaza</PostalAddress>
         <PostalCode>20166</PostalCode>
         <Locality>Sterling</Locality>
         <StateOrProvince>VA</StateOrProvince>
         <Country>US</Country>
      </Address>
      <TelephoneNumber>
         <Value>+1.703598741</Value>
      </TelephoneNumber>
      <MobileTelephoneNumber>
         <Value>+1.703598742</Value>
      </MobileTelephoneNumber>
   </ContactInfo>
   <Languages>
      <Language primary="true">en-us</Language>
      <Language primary="false">en</Language>
   </Languages>
   <DateOfBirth MeetsAgeOfMajority="true">1994-09-29</DateOfBirth>
   <Credentials>
      <Username>userget_firstuser20130924_032954</Username>
   </Credentials>
   <UserRecoveryTokens>
      <RecoveryItem>
         <QuestionID>1200</QuestionID>
         <Question>What is the name of your favorite movie?</Question>
         <QuestionResponse>myname</QuestionResponse>
      </RecoveryItem>
      <RecoveryItem>
         <QuestionID>1650</QuestionID>
         <Question>What is the name of your favorite song?</Question>
         <QuestionResponse>myname</QuestionResponse>
      </RecoveryItem>
   </UserRecoveryTokens>
   <ResourceStatus>
      <Current ModifiedBy="urn:dece:org:org:dece:RET" ModificationDate="2013-09-24T07:30:03.623Z" CreatedBy="urn:dece:org:org:dece:RET" CreationDate="2013-09-24T07:29:54.946Z">
         <Value>urn:dece:type:status:active</Value>
         <Description>Flipping User Status to active</Description>
      </Current>
   </ResourceStatus>
</User>]]></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>cc891f73-44b8-47ce-9d08-8d9a2f63ef82</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c72b5513-a556-4ec7-9925-002c39bb23ff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9c734ae7-5af5-42b8-9df0-6dd308e44f7c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateMUC_API" searchProperties="true" id="b842e70d-a8b1-44af-91c2-44516599f032"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="2f6f11e4-b262-4539-abd5-dcf3510bdfe2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

tC.setPropertyValue("expectErrType","SUCCESS");

if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
{
	tC.setPropertyValue("Policy_Class","urn:dece:type:policy:ManageUserConsent");
}
else
{
	tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:ManageUserConsent", "UTF-8"));
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="27537223-b9a8-499b-a470-acb6da6bdf9e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreateSinglePolicyPost_MUC");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="Policy_Create_MUC" id="f76eca3c-e908-4cf1-b469-d0a951aec9da"><con:settings/><con:config service="Policy_Create" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="Policy_Create_User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Policy_Create_MUC" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd"  xmlns:dece="${#Project#coordinatorSchema}"  xmlns:ds="http://www.w3.org/2000/09/xmldsig#"  xmlns:md="http://www.movielabs.com/md"  xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <dece:Policy>
    <dece:PolicyClass>urn:dece:type:policy:ManageUserConsent</dece:PolicyClass>
    <dece:Resource>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_REQ_ENTITY}</dece:Resource>
    <dece:RequestingEntity>urn:dece:org:org:dece:${#TestCase#nodeid}</dece:RequestingEntity>
    <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
    <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_CREATED_BY}">
        <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
    </dece:ResourceStatus>
  </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="108dd42e-fbb2-4593-9363-554ce4b665e0">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('Policy_Create_MUC');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                             contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="9a0b83a1-cd94-4313-934e-0b62adf8fad7">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4jx3jDyCOPYEZAjSBEtICSUNeOkJeG+XaElgyX7/+SiYmQEguvTOZIVqvds/uHh3piqMkdvwG55AKwqjWadX0P7YbugGyHePCtbBRcUPL8Lyya7iT0L6sXjiT8oWnax3OM+hQLhAVNd2x7IphVQ27MrIsv1Lx7WrJcS+fde0RUi5DS5eSpWurJKbcz9PW9CylPkOccJ+iBLgvsD9s3PV86emjApNev9qizBOm9akQM980cSkADHGMS5gl5pV54HMVcH9IIopElsJrzoDX9Ne9y+WytCyXWBqZjmVZpuWZ0ifgJPqq178UmyHo0JBt101EGSUYxWSDFKg7EFMWaI04YikR0+SD0LZpWyq0AStsYLtCv+rmW4Ic3ZmRDkCmHBl8iuwi2ABCSIFi0B4GnZr+9bwJbveOUkR5yNKEH63/DhLQBcRsBoHBi8oKdOdHPNGu+hVgv0NxnHGygL6iyQxh4NrPFEKy6hEuyRdwLR+/tuLyjxQsA/w3Y7ky97FK6OaJ7rRIBFz8n5ntz2sb5RHFGdTt8e34Oe0686ElnNvuL9xYoOry283Lc1TLIew7b0Htxv26Pibrjluvm8blXpt35l3HboSNdWOxYddPL8HKijbAWvz2R/9lhR7WTbd3P/+1prMwEtnvQYf8SNiqv9k8b5JmuBlbz/eDCZhfhoOb6+f2ZLze9G7Kvzcjz8tuV60W/QktJ7hzB9X+9dMdGSAadh/cKOgG4yWEntUeWaz/NL0ZXz6xbq9c6Ve/ZTdfuiT6/UidkJHbS14FblqV2ltN+zUcGgtJGGaTF8CiWCp6dFradzkvJD6XF2UhgRHmrv5MaRQXQIVeV7uUtPiZFCAS+HKY2/V3r2o55apXsWzXvq44bUv+991qWFXPszy3WmjQFsURxCajIVG5lMpu+fM5QJz4HGgAqbFgGZ4C1z+J2EICaR06kIeDUQ4jplSczIU8M9Ha8VhkTzyUlWE5D1wKutZn4p7ep41QQHqo3eUD7R4AJjMCSuAVw7mkOBeyGXO0yERslxaoRCGTV0CqVNh3KpdVk5NkFoOCaiYsyGIozaazvDUm3/46BsI8tw7ao/zkfVjY8beiB9InIMqBq1quQc4RTlxCVlHIxwVf7BdchG9kAVEHTDZUpARvkRx+euOJIsiOJLKiP83hH7vAvXM/e/v7neYnoMzjfuwSBQuyl7a4TeUFIeWjXkxzjkrzUrZYZPn8XCWNqQxvSoW0zSHgTOrbesT+AWruQphnXS871EeZd/ZDfJmY0qFAAhLJNi1fnvG2GAJXb4uOPCercx8uByll3wSsxClbM5ZPEIX401cK9rHyk+af8mfJ0uBtXCdi7eWRdcoHhSA0Uit1kaw/IAVmMiyRysfS/eCnApxKfmjcNXmHRUg2TTIBH3/RlKTVdIQxy6jotPTcsC+zOU6xnoH/5vQuTC7lr3fzin94Nz/d9YZS8BKk73zJfzsbJKcLluom/XMsNX0ln5oyOY32ZP0V4Dtlt52m02y2W422dajsjZ2yH1ZSf2d+b9nr6fF5qP8L</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00005_UserUpdate_FUNC_NonCS_Full_Update_UserName_Others</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Update_Access_NonCS</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4E99389111664AEE0401F0A07990AF6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950212C2CCEDAE0E0401F0A059909A5</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D12F2DD48A10D559E0401F0A059918B0/User/urn:dece:userid:org:dece:D12F2DD48A1ED559E0401F0A059918B0/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/11/Account/urn:dece:accountid:org:dece:F950212C2CCEDAE0E0401F0A059909A5/User/urn:dece:userid:org:dece:F950235940171B42E0401F0A05990975/Policy/urn:dece:type:policy:ManageUserConsent</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn:dece:type:policy:ManageUserConsent</con:value></con:property><con:property><con:name>ENNODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD3CD43AEEE91F252E0401F0A079913BF</con:value></con:property><con:property><con:name>ENNODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD3CD44C830AA5460E0401F0A079913BD</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE1B04F1ACAC275C1E0401F0A079905C0</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE1B04F1ACAA475C1E0401F0A079905C0</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/RET_concat.pem</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:F950235940171B42E0401F0A05990975</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950212C2CCEDAE0E0401F0A059909A5</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E4E99389111664AEE0401F0A07990AF6</con:value></con:property><con:property><con:name>NODE_USER_ID_REQ_ENTITY</con:name><con:value>F950235940171B42E0401F0A05990975</con:value></con:property><con:property><con:name>NODE_USER_ID_CREATED_BY</con:name><con:value>F950235940171B42E0401F0A05990975</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bd6efb96-bbf3-4226-9917-48245caf20c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateULC_API" searchProperties="true" id="83f8ec9e-e670-4d15-9748-2397296769d1"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="4a37609c-d0d9-4bf4-ac1b-5ec09ed8407c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

tC.setPropertyValue("expectErrType","SUCCESS");

if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
{
	tC.setPropertyValue("Policy_Class","urn:dece:type:policy:UserLinkConsent");
}
else
{
	tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:UserLinkConsent", "UTF-8"));
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="7446b881-17aa-4acf-b603-755b3c8b554c"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreate_ULC");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreate_ULC" id="782980bf-25bb-45ca-878f-7e356eaea285"><con:settings/><con:config service="Policy_Create" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="Policy_Create_User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreate_ULC" mediaType="application/xml" postQueryString="false" sslKeystore="RET_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd"  xmlns:dece="${#Project#coordinatorSchema}"  xmlns:ds="http://www.w3.org/2000/09/xmldsig#"  xmlns:md="http://www.movielabs.com/md"  xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <dece:Policy>
    <dece:PolicyClass>urn:dece:type:policy:UserLinkConsent</dece:PolicyClass>
    <dece:Resource>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_REQ_ENTITY}</dece:Resource>
    <dece:RequestingEntity>urn:dece:org:org:dece:${#TestCase#nodeid}</dece:RequestingEntity>
    <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
    <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_CREATED_BY}">
        <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
    </dece:ResourceStatus>
  </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="56a69daa-d796-481f-ac85-61449b0380a4">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreate_ULC');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                             contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="4ce68f8c-17e7-4615-b0b6-23c09aac6482">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F95022FF717C406FE0401F0A079903A3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:F95022C79DCA5148E0401F0A079902DB</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4jxnjC+ZiT2CGQEjJCbkApU1eOoq8gFJbAkk20F9/JBMTICSHnplMGK1Xu99e9O2eC5TEXtgSArgkjBq9TsP85YMX+DBxrKr6b/nloGo9o3rdcjGq+V45QEGATKMnRAo9KiSismF6jutbTsVy/ZHjhOV6WCmXPNd7Mo0xcKFMK5WSYxqrJKYizN02zJTTkCFBREhRAiKUOBy2+jeh0gxRgclsnm9Q5g55cyblPLRtXIoAQxzjEmaJfW7v6ZxHIhySKUUy5fDqMxIN8/XucrksLcslxqe25ziO7QS20okEmX41m1+KyxD16IRtzm1EGSUYxeQP0qD6IGcsMlrxlHEiZ8kHpl3bdbRpC1bYwq5Pv5r2m4Mc3YmW9kBygSwxQ25hbAAT4EAxGN8HvYb59bQKbu6OOKJiwngiDs5/BwloBjGbQ2SJIrIC3ekWj6SreQ447FEcp4JkcKvbZI4wCOOew4SsbohQzRcJIy+/sRLqjxRdBvhvynJu72JV0O0j2emQKQj5f2q2W6+NlTGKU2g+XMtkGg0fM55dOjfUrQ3x6mn6BHf2tJFD2FXegNqW+/V82Kzb3nq99NOmoywb1a9n38bfvSwaXaQ8/n3HguvIScqVlx9nl6kQ41aVOYL2z1yOnF7n1llcoNGNcxW0HuL4YTxrPfh+5enLbPDyexEl8+u7dupxsb4advv1rD9LBut/6inyPHlfvb+8ale7t/zK8+6fqL26Ka8Xj/C4bskltK/txbP07+ndGL78OINv3+VV3778Nl4kZ/J68Nh4i2k3hn1hQQnD9PkFsCyOuj16HaOr6oXk5/SiJSSyJrlqONccJSRQaTb1LU0tYaoIiEShKubm3A0qjue1a0Gn3aq4fv3S8R2367ScWhA4Xuei4KANigOIbUYnRPvSLLvpn88B4iQUQCPgVsZSPANhfmKxgyQyenSgHgejAkZMsfh6OX2pvhBIVn8Cl9WhjtiKpguvbhq3TN7RO96aSOD71F3eo+4BYDInoPldN7hQHS6kysUCZamM3VKGShRSNQG4JuHQ8+sVW5BkHoNGaicsSmMozWfzPDO22Px6FsIilw4uR/nD+zCuw29FCpRORLSC0LFcgCojHJlBfhHIxwFXdwMuzLfSiOj3pfIpOcEbJPuf3tpE98e2R1REv9rDX26Be6t+8vX3N+1PQNmH+dg6ijKy47YYpmo+KPZoFtVcoNKilGZZmtevppmRK/O2IkjXHgJOFb2tR+w3UHtrwj5pumxRH3jeyvfxpXJGhxJJSFS3GfnxhNViCEKvFj31TFan7i17LlXeJKzkMVk7VhuIRvzpkoJDrPWU+F79LBmP3sp1xNaOHxWn2ickoVN90nNk/UFTYKbMEkV8jO8aP2bgmPN94TbJWyxSddNzKuHjL4ZmtIaJMGYplb2OmQt2WTbHKddzCN+U3pnJmfx1NK/Eh6P5Z/9mqPguQeZWl/y3skXydsFg6g0gx9IwV2rTVM7pdIfVXwG+J/Zut+bW2r5T7e4Re7lV3iZwL5LmO/F7yU5OD99D818=</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn:dece:type:policy:UserLinkConsent</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/RET_concat.pem</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/11/Account/urn:dece:accountid:org:dece:F95022FF717C406FE0401F0A079903A3/User/urn:dece:userid:org:dece:F95022C79DCA5148E0401F0A079902DB/Policy/urn:dece:type:policy:UserLinkConsent</con:value></con:property><con:property><con:name>NODE_USER_ID_CREATED_BY</con:name><con:value>F95022C79DCA5148E0401F0A079902DB</con:value></con:property><con:property><con:name>NODE_USER_ID_REQ_ENTITY</con:name><con:value>F95022C79DCA5148E0401F0A079902DB</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bd6efb96-bbf3-4226-9917-48245caf20c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>43c5dbf9-3574-4373-9d3f-f1b49a7247c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateGeoPrivacyAssent" searchProperties="true" id="1a42b403-fac9-4e9b-beba-08428b612d51"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="8115a839-72ad-411b-a9a4-d5875210b62c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

tC.setPropertyValue("expectErrType","SUCCESS");

if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
{
	tC.setPropertyValue("Policy_Class","urn:dece:type:policy:GeoPrivacyAssent");
}
else
{
	tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:GeoPrivacyAssent", "UTF-8"));
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="2be07e21-4be8-40f1-83e7-1b8f57847b2d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreateSinglePolicyPost_CLGAttestation");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateGeoPrivacyAssent" id="b305b9d4-15fd-4703-8e5a-891fd81e2ce0"><con:settings/><con:config service="Policy_Create" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="Policy_Create_User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateGeoPrivacyAssent" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd"  xmlns:dece="${#Project#coordinatorSchema}"  xmlns:ds="http://www.w3.org/2000/09/xmldsig#"  xmlns:md="http://www.movielabs.com/md"  xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <dece:Policy>
    <dece:PolicyClass>urn:dece:type:policy:GeoPrivacyAssent</dece:PolicyClass>
    <dece:Resource>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_REQ_ENTITY}</dece:Resource>
    <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
    <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_CREATED_BY}">
        <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
    </dece:ResourceStatus>
  </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="b6911ceb-53ee-41a7-9be5-93f4bcaa15d9">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreateGeoPrivacyAssent');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                             contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="ee2e0b7e-288a-4384-94fd-cb6f4729c239">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+o6EP5+fkWnfjxTmpYWaEeYqSBHPIheQUW/ODFdaLxtik0K6K8/SbEIiF7OnWGGyXaz++xLnt1jjpPY9gPOIRM0ZVqv09QfPSesktDxDIImyHAaQAyvSiaGB1D1AIVYSnStx3kOPcYFZqKp28hyDOQaljNCyK/WfKtaQdX6g67dQsalaalSQbq2TGLG/cJtU88z5qeYU+4znAD3BfGHwUXfl5o+LjHpreMVysJh1oqEmPmmSSohEIhjUiFpYh6bWzrHIfeHdMqwyDN49xnypv5+d7FYVBbVSppNTRshZCLPlDohp9MjvfWjvAxhj03S1bmNWcoowTF9wwrUBYgoDbUgnqYZFVHyhWnLtJAybcCSGMRy2JFufjgo0B1oaQtkxrHBI2yVxq5hAhkwAtrNda+pHx1WwdXdUYYZn6RZwnfOfwcJ2BzidAahwcvISnSHW9yTrtYxEL/HSJxzOoeBapMZJsC1qwwmdNmnXDZfyLWi/NqSyx8tuwzI35Tl2NzEKqGbe7LToVPg4v/UbLNeKyu3OM6h9TB2H+b2sFYb3wzcc3JSJVdB7QmufmOnWUDYVF6BWpf7/bzbrOveer9091QdvV3cd+vp+fkZe44vPXYf3DhAG7/7hDhz+4F3guj19heNcuYtBiekvxg3Hvqn1KpN7uNfbl5rBI154/mUjH/EN28kJt6d27kl2KU/bwIv6V/OBhk6TV4GXfttaiOH/WwvrPuzYNC/TG87sOTdt/PEvnLEGLsDd8EGs9HZwz/mDzpGdX55R00SLe9mcdy7nzY/YtqMYVtYUsIwf3oGIsqjao9eR+vKemHxPb0oCQ2NSaHqzxRHcQFM6C11S1GLn0sCoqEvi7k6dz3XQp7dqXXaJ0HNaZwiB1ldFCDX86peHZUctEKxA7GdsglVvhTLrvrne4Ak8TmwEDJjnuYkAq5/Y7GDBdZ67Fo+jpRxGKWSxa0oD58ikgsn9lKrilH9NWngNGrUdG2Qikt2mQUTAdk2d1e3uPsaCJ1RUASvOpzLFudCJuMFz3MRW5U5rjDI5QjIFAv7ttNwTU6TWQwKqpmkYR5DZRbNitSYfPVvG5jwQnp9Oipe3peB7X4rcyB1QqoUuIrlBGQdYc8QQmUgXwdc2wy4NB/kIVUPTCZUZJSskGx/+ugT1SDrJpERPbaHj1aJe61+8PXPN81vQJm7+Vg7Cud0w205TeWAkPTRKqv5gisvlXw+z4v61RU1ZtK8KRnSModAcslvr6P0X2Dm2oR50HhZo97xvJZv48tFxIYCC0hkt2nF8YDdYghc7RY9+U6Why4uWy5l3gQsxT5ZO5YriEL87ZZCfKL0pPhK/i3SLPwo1x5bG35knHKhEJRN1UkNktcvmoKk0iyVzJdmm8b3GdjnfFu4TvIai5Dd9JQL+PqLpiitqWNC0pyJXkcvBJs0W+AUrzPwP5Q+mSmo/H02L/mXs3l80R9Kwkuwvtal/61s0KJdCOhqBSiwNPWlXDWlczbdoPV3gDvMjmzLDhzX6bqntfYmsyPPO1kncCuS1ifxZ8lGTnffQ+sP</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00005_UserUpdate_FUNC_NonCS_Full_Update_UserName_Others</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Update_Access_NonCS</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4DAFF5120AEA1B8E0401F0A079957C6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D12F2DD48A10D559E0401F0A059918B0/User/urn:dece:userid:org:dece:D12F2DD48A1ED559E0401F0A059918B0/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/11/Account/urn:dece:accountid:org:dece:F950212A454F5E6CE0401F0A0599099B/User/urn:dece:userid:org:dece:F951092D6DE1A648E0401F0A05993970/Policy/urn:dece:type:policy:GeoPrivacyAssent</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn:dece:type:policy:GeoPrivacyAssent</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">/opt/dece/certs/RET_concat.pem</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:F951092D6DE1A648E0401F0A05993970</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950212A454F5E6CE0401F0A0599099B</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E4DAFF51203BA1B8E0401F0A079957C6</con:value></con:property><con:property><con:name>NODE_USER_ID_REQ_ENTITY</con:name><con:value>F951092D6DE1A648E0401F0A05993970</con:value></con:property><con:property><con:name>NODE_USER_ID_CREATED_BY</con:name><con:value>F951092D6DCBA648E0401F0A05993970</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bd6efb96-bbf3-4226-9917-48245caf20c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6f62f720-8990-433e-b87f-e5bfb4b7fa27</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update_UserStatus" searchProperties="true" id="8b84599f-9011-4a1a-a266-93bd146fbbc4"><con:settings/><con:testStep type="groovy" name="Update_User_Status" id="6ec2efe5-9d4b-4be7-afd4-000076dada5e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def status = context.expand( '${#TestCase#Status}' )
def userID = context.expand( '${#TestCase#User_OID}' )

def dbHost = context.expand( '${#Project#targetSystem}' );

a = new dbUtils.dbUtils(log,dbHost);

String sql = """update ACCOUNT_USER set STATUS = '$status' where USER_OID =  hextoraw('$userID')""";

log.info "SQL : " + sql;

a.dbConnExecuteUpdate(sql,dbHost);
</script></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>deleted</con:value></con:property><con:property><con:name>UserID</con:name><con:value>${#TestCase#UserID}</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E357C457986AEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE357C457986AEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>user_oid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F95107652ADB3F80E0401F0A059930AD</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E357C457986BEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00049_FUNC_UVTC_UserName_RequestorUser_any_status_RequesteeUser_any_and_other_than_active_pending_or_blocked_UnlockMe_Role_RET_CS (Negative)_400_BADREQUEST_P1</con:value></con:property><con:property><con:name>sName</con:name><con:value>03.UserValidationTokenCreate_FUNC_P1</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20130917_070832</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update_AccStatus" searchProperties="true" id="80487ede-aacb-4a03-9614-e48d276255d6"><con:settings/><con:testStep type="groovy" name="Update_AccStatus" id="ee521f02-7420-44a3-a842-dcf9ac88d4f8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def status = context.expand( '${#TestCase#Status}' )
def accountID = context.expand( '${#TestCase#account_oid}' )

a = new dbUtils.dbAccount(log,context.expand( '${#Project#targetSystem}' ));

assert a.accountSetStatus(accountID,status) == 1;

</script></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>mergedeleted</con:value></con:property><con:property><con:name>UserID</con:name><con:value>${#TestCase#UserID}</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E357C457986AEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE357C457986AEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>user_oid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00040_UserGet_FUNC_NonCS_Get_AccStatus_Mergedeleted_P2</con:value></con:property><con:property><con:name>sName</con:name><con:value>06.Functional_UserGet_NonCS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5fdeaf38-c814-4c84-a148-2fc4448e3d23</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7ebe7972-d488-48c3-9a7f-c13ef2cdf20d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update_Policy_Status" searchProperties="true" id="0fe6ceb2-bf24-4dc3-a614-abc94dd19143"><con:settings/><con:testStep type="groovy" name="Update_Policy_Status" id="d3c3b099-610c-4859-9bdc-74333e63bbf1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def status = context.expand( '${#TestCase#Status}' )
def policyclass = context.expand( '${#TestCase#Policy}' )
def username = context.expand( '${#TestCase#Username}' )

def dbHost = context.expand( '${#Project#targetSystem}' );

a = new dbUtils.dbUtils(log,dbHost);


//String sql = """update POLICY set STATUS = '$status' where CREATED_BY = hextoraw('$userID') and POLICY_CLASS = '$Policy'""";


String sql = """update policy set status = '$status' where status = 'active' and policy_oid in (select policy_oid from policy_relationship where policy_actor in 
((select user_oid from account_user where lower(username) = lower('$username')),
(select account_oid from account_user where lower(username) = lower('$username')))) and policy_class='$policyclass'"""



log.info "SQL : " + sql;

a.dbConnExecuteUpdate(sql,dbHost);






</script></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>deleted</con:value></con:property><con:property><con:name>UserID</con:name><con:value>${#TestCase#UserID}</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E357C457986AEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE357C457986AEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>user_oid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E67B0B0EA6B4A35AE0401F0A059938AF</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E357C457986BEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00016_UserGet_FUNC_NonCS_No_ManageUserConsent_P1</con:value></con:property><con:property><con:name>sName</con:name><con:value>06.Functional_UserGet_NonCS</con:value></con:property><con:property><con:name>Policy</con:name><con:value>200</con:value></con:property><con:property><con:name>username</con:name><con:value>usercreate20130924_032248</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5fdeaf38-c814-4c84-a148-2fc4448e3d23</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7ebe7972-d488-48c3-9a7f-c13ef2cdf20d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RenameTCs" searchProperties="true" id="9dedc8c4-1bc7-4f3d-90f8-76fc1c3bb757"><con:settings/><con:testStep type="groovy" name="Rename" id="84eb1ee1-1b12-4b35-b3fc-c9932c9de6b7"><con:settings/><con:config><script>import java.io.*;

def testCase  = testRunner.getTestCase();
def testSuite = "04.UserValidationTokenCreate_Access_P1";

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

BufferedReader br = new BufferedReader(new FileReader("C:\\Users\\ralluri\\Desktop\\TCs.txt"));

def newTestCaseName;

log.info "TCCount:"+TCCount;

for(i = 0; i &lt;= TCCount - 1; i++)
{               
                def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);

                newTestCaseName = br.readLine();
                log.info "Input Test Case Name: "+newTestCaseName;
                
                                targetTestCase.setFailOnError(true);
                                targetTestCase.name = newTestCaseName;    
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Get_Responses" id="e30d35b2-c0e5-4faf-b4af-527cf400ad64"><con:settings/><con:config><script>import java.io.*;

//def commonTestStep = "User_Delete_API";

def testCase  = testRunner.getTestCase();
def TSList = testRunner.testCase.testSuite.project.getTestSuiteList();
def TSCount = testRunner.testCase.testSuite.project.getTestSuiteCount();

//def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
//def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();


log.info "TS List:"+TSList[0].name;

//log.info "TCCount:"+TCCount;

for(k in (0..TSCount-1))
      {
            def testSuite = TSList[k].name;
            def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList(); 
            def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();
            log.info "TestSuite  " + testSuite +"  TCCount:"+TCCount;
            log.info "TSList[k].disabled " + TSList[k].disabled 
            
            if ((TSList[k].disabled).toString() != "true")
            {                              
                  for(i in (0..TCCount-1))                                                                  
				{                                                                                         
                  	try {
                        		def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
						def targetStep = targetTestCase.getTestStepByName(commonTestStep);
						log.info  testSuite + " " + targetTestCase.name+" "+targetStep.getPropertyValue("ResponseType");         
                  		}
                  	catch(Throwable e) {
                        log.info "Exception : " + e;
                        }                                                                              
                   }                              
            }
      }
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserValidationTokenCreate_Account_User" searchProperties="true" id="87aaa131-c493-425d-8953-d52f00d1d732"><con:settings/><con:testStep type="groovy" name="SetPem" id="26c150b6-7f6b-48dc-aab8-87bbc685357a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("UserValidationTokenCreate");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="UserValidationTokenCreate" id="56be7576-4e05-403d-ac6e-a74625044df0"><con:settings/><con:config service="UserValidationTokenCreate" resourcePath="${#Project#HostName}/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}/VerificationToken/{TokenType}" methodName="UserValidationTokenCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserValidationTokenCreate" mediaType="application/xml" postQueryString="false" sslKeystore="RET_concat.pem" id="bc89fd3d-63d7-4393-8f06-84b03c63632f" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">Mandatory and Data</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="TokenType" value="${#TestCase#TokenType}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Response_Details" id="8fb8431a-4b55-4dfb-9130-7551c6ce2568"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('UserValidationTokenCreate');
def expXML = tStep.httpRequest.response.getResponseContent();
log.info "Extracting Response Details"

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);

log.info "End of Extracting Response Details"
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response_Details"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#errorRespType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;


String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype =  "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
                errorHost = "http://error.decellc.org";
} else {
                errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
               case "SUCCESS":        
                			  log.info "Success message --->"	                        
                                expectHTTPstatus   = "HTTP/1.1 200 OK";
                                XMLbodynull        = true;
                                httpLocationHeader = true;
                                //this.log.info "Hello";
                break;           
                
                case "API_NOT_AUTH":
                		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
                		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
                		//errorReason = "API call not authorized";
					errorReason = "The API call is not authorized.";
                		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
                break;

                case "ACCOUNT_FORBIDDEN":
                          expectHTTPstatus = "HTTP/1.1 403 Forbidden";                               
                          errorID = "urn:dece:errorid:org:dece:AccountIdUnmatched";
                          //errorReason = "Request Account ID not match";
					 errorReason = "The account ID does not match.";
                          errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
                break;

                case "SECURITY_FORBIDDEN":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";                               
                                errorID = "urn:dece:errorid:org:dece:securitycontext:unauthorized";
                                errorReason = "The request is not authorized.";							
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html";
                break;

                case "NOT_FOUND":
                                expectHTTPstatus = "HTTP/1.1 404 Not Found";                               
                                 XMLbodynull        = true;
                                 httpLocationHeader = true;
                                 expectHTTPcontenttype = "text/xml;charset=UTF-8";                               
                break;   
			
			case "INVALID_TOKENTYPE":						
                                expectHTTPstatus = "HTTP/1.1 400 Bad Request";                               
                                errorID = "urn:dece:errorid:org:dece:TokenTypeNotValid";
                                //errorReason = "Token type in the request is not valid";
						  errorReason = "The token type is not valid";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#TokenTypeNotValid";
                break;   

			case "INVALID_METHOD":
						expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
						errorID = "urn:dece:error:MalformedRequest";
						//errorReason = "405 Method Not Allowed. The request cannot be fulfilled because the method is unknown or not supported at the requested server.";	
						errorReason = "The request cannot be fulfilled because the method is unknown or not supported by the server.";							
			break;
			
			case "INVALID_USERID":						
                                expectHTTPstatus = "HTTP/1.1 400 Bad Request";                               
                                errorID = "urn:dece:errorid:org:dece:UserIdInvalid";
                                //errorReason = "The supplied UserID is invalid.";
						   errorReason = "The user ID is not valid.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
                break;   
                case "FORBIDDEN_COORD":
			               expectHTTPstatus = "HTTP/1.1 403 Forbidden";
						errorID = "urn:dece:errorid:org:dece:RequestCannotBeServiced";
						//errorReason = "Coordinator cannot service the request.";
						errorReason = "The request cannot be serviced.";
						errorLink = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestCannotBeServiced";
			break;
			case "USER_STATUS_NOT_VALID":
						expectHTTPstatus = "HTTP/1.1 400 Bad Request";
						errorID = "urn:dece:errorid:org:dece:UserStatusNotValid";
						//errorReason = "The user status is invalid.";
						errorReason = "The member\'s status is not valid.";
						errorLink = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserStatusNotValid";					
			break;
			case "REQUESTOR_NOT_ACTIVE":
						expectHTTPstatus = "HTTP/1.1 403 Forbidden";
						errorID = "urn:dece:errorid:org:dece:RequestorNotActive";
						//errorReason = "The requestor is not active.";
						errorReason = "The requesting member is not active.";
						errorLink = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";	
			break;
			case "FORBIDDEN_USER_LINK_CONSENT":
						expectHTTPstatus = "HTTP/1.1 403 Forbidden";
						errorID = "urn:dece:errorid:org:dece:Policy:UserLinkConsentRequired";
						errorReason = "The setting of the \"User Link Consent\" policy prevents the requested action from being completed.";
						errorLink = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:UserLinkConsentRequired";	
			break;

			case "Invalid_Assertion":
						expectHTTPstatus = "HTTP/1.1 403 Forbidden";
						errorID = "urn:dece:errorid:org:dece:securitycontext:InvalidAssertion";
						errorReason = "The security token is required.";
						errorLink = "$errorHost/rest/$major/$minor/error/en/ErrorList.html";	
			break;
						
			
}

// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//////assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
                assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
                assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

                assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
                def myXML = new XmlSlurper().parseText(XMLbody);
  
                if (errorRespType != "SUCCESS" ) {
                                // Verify response sizes...
                                assert myXML.Error.size() == 1;
                                assert myXML.Error.Reason.size() == 1;
                                assert myXML.Error.OriginalRequest.size() == 1;
                                assert myXML.Error.ErrorLink.size() == 1;
                                
                                // ErrorCode
                                this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
                                assert myXML.Error.@ErrorID.toString() == errorID;
                
                                // ErrorReason
                                this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
                                assert myXML.Error.Reason.toString() == errorReason;

                                // ErrorLink
                                //assert myXML.Error.ErrorLink.toString() == errorLink;
                } 
                
 } 



</script></con:config></con:testStep><con:properties><con:property><con:name>TokenType</con:name><con:value>urn:dece:type:token:ValidateEmail</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorRespType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/RET_concat.pem</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00036_ACCESS_UVTC_UserName_RequestorUserSAU_Active_RequesteeOtherSAU_ValidateEmail_Role_DECE_200_OK_P1</con:value></con:property><con:property><con:name>sName</con:name><con:value>04.UserValidationTokenCreate_Access_P1</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jS55ALgZKoIIVbly2FltBdui+VcQZwG5wQOymcX3/s0FCgtIc9EhLyZDzzzcXfzDVDy9ByPcYg4SSiSq9dV5+rVsWpwVWgAcamZleqjoZm1SvNCcpls1q2cM3AqtJjLIUeZRxRXlctw7Q1o6KZ9tgwXNt2TatUqzl/VOUXJEyYFiolQ1XWy5AyN3dbV9OEuhFihLkULYG5HLu+d9d3haaLCkxq43qLMneYNBacx66u41IAGMIQl3C01K/1A53rgLk+mVPE0wTefQasrr7ffXt7K72VS1Ey1y3DMHTD0YVOwMj8Um1cFJch6NFZtD23EI0owSgk/yAJ6g74IgoUL5xHCeGL5RemTd00pGkN1ljDpk0vVf3DQY7uTEsHIBOGNLZAZmFsBDNIgGJQHke9unp5XgW3d8cJomwWJUt2dP47SEAzCKMYAo0VkRXozrd4Il2Na8Buj+IwZSSDgWyTGGFgyn0CM7LuEyaaL2BKXn5lzcSPFF0G+G/Kcq3vYxXQ9RPZaZM5MP5/arZfr62VXyhMoRFaM3TjNS2vXV0tNoNR+WlqNO1Wi8we6zmEfeUtqF2538/HzbrrrfdLJBtH1u84HnbsDr3NajdOt/3o25sHNPGp1b8dvTws1nE7uXrAwR+9+2M6GFSyJtV1f/Pk/wgDxy8vjOnNPXpNpxfJ3WTt10ZdY8m88eC+FtljNohXT31/gl+Gt9bKHtpxTLPu0+3NJPvZJVX74e5nqw/rq2YUNmcdNAnSYdSv+j3vYvK7NuD2uulXVmzwqCdz57X+EdN+DIfCghL8dPoCmBdH2R69ttIV9UL8e3qREhJos1zVjSVHMQ6Uqw15S1KLmwoCIoErirk9d52KaThmt21b1VazbHQM2zC7hmdUHKfsVL2Cg7YojiC2Ijoj0pdk2W3/fA8QL10GNIBEy6IUL4Cp31hsI46UHh2JxxFRBuNIsLg5DeistqmhMpBatYwqoeUwHFuCugcRH9Jh4s04JIfUXT6g7hFgEhOQ/C4bnIkOZ1zkYoWylIdmKUMlCqmYAIkkYdeyaxWdkWUcgkSqL6MgDaEUL+I8Mzrb/lsawiyXjjrj/OF9GdfxtyIFQicgUoHJWJogyggnZpBRBPJ1wNX9gAvzXhoQ+b5EPnlC8BbJ4aePNpH9sesREdFzy382C9w79bOvf76pfwNKP87HzlGQkT23xTAV80GwR6Oo5gqVVqU0y9K8fleSGRNhXhcEaeo+4FTQ22YcvQLVdyb0s6bLDvWR5538EF/KF9TniMNSdJuSH89YLXxgcrXoiWeyPndvOXAp8sZhzU/JWqHYQCTib5cU7GKpJ8T34u8tSoKPcp2wtedHxCn2CU7oXJ7kHNl80RQ4EmaJIL4o2Td+ysAp54fCXZJ3WLjopmnK4esvimS0uoowjlLKe201F+yzbI6Tb2JwP5Q+mcmZ/H00r9mXo3ly1/cF3y2RutMl/62skbxdMKhyA8ix1NW12DSFczrfY/V3gEfEblim1bJarU7b6xwQu+F4lV0CDyJpfBJ/luzl9Pg9NP4F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:F950235940171B42E0401F0A05990975</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950212C2CCEDAE0E0401F0A059909A5</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>F950212AC6D629DFE0401F0A059909A1</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>05f29811-9d45-4892-ab42-c44278163a96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>QC_TestPlanDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestLabDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestSet</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="First_User_Create" disabled="true" id="8460a866-5bc0-4352-88b9-9f8720556504"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Account_Create_Firsrt_User_Create_STS_Policies" searchProperties="true" id="bf6be7d4-9561-4c60-9314-ec69bcea736d"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="f05e0c99-e0d5-45df-a3a3-69bdd405b626"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tS.getPropertyValue("nodeid"));




</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Create" id="b22f4d74-fbc4-4f52-a231-a2af54a4c7b5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("AccountCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for First User Create" id="57425f41-8bed-43f1-9682-e8ddf1503292"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "uvtc_firstuser"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);

tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("MeetsAgeOfMajority",tP.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First User Create" id="89dbbb5b-ca70-4576-bddc-ad8814220224"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("FirstUserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS API for First User" id="c59c261e-5586-4111-b07d-6cd1242ceabb">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def callTSname = tS.getPropertyValue("sName");

def callTS = tP.getTestSuiteByName(callTSname);

tS.setPropertyValue("audience",callTS.getPropertyValue("audience"));

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;



tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID1",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call Policy Create - TOU" id="e6208c62-8032-4167-8fe7-b1e646db891c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateTOU_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call Policy Create - MUC" id="46b32662-9018-40a0-a4f9-f1cc928f2dae"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateMUC_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20140513_08445</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>F950212C2CCEDAE0E0401F0A059909A5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950212C2CCEDAE0E0401F0A059909A5</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>uvtc_firstuser20140513_08445</con:value></con:property><con:property><con:name>SurName</con:name><con:value>uvtc_firstuser20140513_08445</con:value></con:property><con:property><con:name>UserName</con:name><con:value>uvtc_firstuser20140513_08445</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>F950239D7D8D1715E0401F0A05990981</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950239D7D8D1715E0401F0A05990981</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:F950239D7D8D1715E0401F0A05990981</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950239D7D8D1715E0401F0A05990981</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950239D7D8E1715E0401F0A05990981</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>F950212C2CCFDAE0E0401F0A059909A5</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1995-05-18</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_aaaade39-5673-4556-894b-690bdf32614d</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_aaaade39-5673-4556-894b-690bdf32614d</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+o6EP7ur+jUj05pSlteOsAMAt7LCCqUA+oXJ6QpxFNSaNIW/fUnKbbyol7OdZxhst3sPrv75EkaDK6CstNmDEechFTpd5vqCxR/Hjbrml2pmppl2xWtVrfmWqUO5p5vliuG5alKn7EY9ynjkPKmWgaGpQFbM6wJAI5lOaBaAqb1rCpTHDERWriUgKpsVwFlTpa2qcYRdULICHMoXGHmcOS47eHAEZ4OzDGprcYOZZYwai05Xzu6jkoeRjgIUAmFK72hH/g0POa4ZEEhjyP8kdNjTfVjb5qmpdQshdFCLwMAdFDXhY/HyOJSbV3km7HXp364W3cgDSlBMCDvUIIaYr4MPaUdLMKI8OXqm9CGbgAZWsNbpCHDopeq/pkgQ3dmpAOQEYMaW0IjDzbGPo4wRVj5Ne431cvzJrjbO4kgZX4YrdjR+u8gYZrgIFxjT2N5ZTm68yN+0a5WAyOnT1EQM5LgO0mTNUSYKQ8R9sl2QJggn8eUbPzKlol/krMMo78ZS0Pfxyqg6190p0sWmPH/M7P9ee2iTGEQ45ZVfryO32uDh3Y6GKVe5Yr6m/tt7991AJoZhH3nHahi3B/rY7IW3PrYxDeD0fCajno8nVvm3Ju63B281m9eK88e2Xavnp6fU2ylrnk7mqWjQVQhm+veuO4GyawTjbsbczIP2rXXmc9+PV+wYac6Cl7bG4b4P0kySxGY3t6WbXQfpJvx8moYvY6H15MrsLmN57VBZzGtptXwrhe1p8kIgOQ31NF7zO3Hd59cVDwaPs0e3+5mKXR9cvN032t+1rRfw6ExlwQ3nr9ixPOlpEe/q9yIeUH+s7xIC/E0P3N11lKjGMeUqy25S0qLEwsBIp4jhrlb39RtUDbr3Wq31jWqht0DFjBuQBvY9Tqo14xcg3YojiB2QuoTmUuq7I4/PwNEK4dh6uFIS8IYLTFTf4jYhRwqfToWhyOkDE9CoeJGYi5rtRS8WdWKZXrVcM5No2Ybhqrchfye3kdtn+PoULrNA+keY0TWBEt9lwRnguGMi15sYBLzwCglsERxLG6ASIqwU7Zqts7Iah1giVRfhV4c4NJ6uc46o7Pdb1mDiGXWcW+SHbxv6zr+lrdA+HhEOjBZyzUWY8Qnd5Dp2Hkh3xdc2S84D9+OPSLPl+gnjwjaITn89EkTyY+CI6Kil477UnChcD97++lO/QdQ+nE/ikReQvbS5pepuB+EerTyaW5gaVOKkyTO5leVyhiJ8LoQSEN3MYqFvL1Nwt+Y6kUI/azbpUB9lLmwH+KL+ZK6HHK8EmxTsuUZTwsXM/m06Itjsj333XKQUvSN4y3/ytYJxAtEIv7xkYIcJP2E+UH8pGH0WfhXsfbyiDrFe4ITupAreY+8fUMKFIqwRAhfGO0H/yrAV8kPjUWTCyxcsGkec/z9F0UqWlOFCIUx5f2umhn2VTbDyd/W2Pl0OgmTKfnH1bxl317Nj8OBK/RuBdXCl/y3s0YyuiCsyhdAhqWpbsVLUySniz1V/wB4IuxGuVPudHrddg8cCnvbLhp4UEnrxHxq2evp8Xlo/QE=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+o6EP7ur+jUj05pSlteOsAMAt7LCCqUA+oXJ6QpxFNSaNIW/fUnKbbyol7OdZxhst3sPrv75EkaDK6CstNmDEechFTpd5vqCxR/Hjbrml2pmppl2xWtVrfmWqUO5p5vliuG5alKn7EY9ynjkPKmWgaGpQFbM6wJAI5lOaBaAqb1rCpTHDERWriUgKpsVwFlTpa2qcYRdULICHMoXGHmcOS47eHAEZ4OzDGprcYOZZYwai05Xzu6jkoeRjgIUAmFK72hH/g0POa4ZEEhjyP8kdNjTfVjb5qmpdQshdFCLwMAdFDXhY/HyOJSbV3km7HXp364W3cgDSlBMCDvUIIaYr4MPaUdLMKI8OXqm9CGbgAZWsNbpCHDopeq/pkgQ3dmpAOQEYMaW0IjDzbGPo4wRVj5Ne431cvzJrjbO4kgZX4YrdjR+u8gYZrgIFxjT2N5ZTm68yN+0a5WAyOnT1EQM5LgO0mTNUSYKQ8R9sl2QJggn8eUbPzKlol/krMMo78ZS0Pfxyqg6190p0sWmPH/M7P9ee2iTGEQ45ZVfryO32uDh3Y6GKVe5Yr6m/tt7991AJoZhH3nHahi3B/rY7IW3PrYxDeD0fCajno8nVvm3Ju63B281m9eK88e2Xavnp6fU2ylrnk7mqWjQVQhm+veuO4GyawTjbsbczIP2rXXmc9+PV+wYac6Cl7bG4b4P0kySxGY3t6WbXQfpJvx8moYvY6H15MrsLmN57VBZzGtptXwrhe1p8kIgOQ31NF7zO3Hd59cVDwaPs0e3+5mKXR9cvN032t+1rRfw6ExlwQ3nr9ixPOlpEe/q9yIeUH+s7xIC/E0P3N11lKjGMeUqy25S0qLEwsBIp4jhrlb39RtUDbr3Wq31jWqht0DFjBuQBvY9Tqo14xcg3YojiB2QuoTmUuq7I4/PwNEK4dh6uFIS8IYLTFTf4jYhRwqfToWhyOkDE9CoeJGYi5rtRS8WdWKZXrVcM5No2Ybhqrchfye3kdtn+PoULrNA+keY0TWBEt9lwRnguGMi15sYBLzwCglsERxLG6ASIqwU7Zqts7Iah1giVRfhV4c4NJ6uc46o7Pdb1mDiGXWcW+SHbxv6zr+lrdA+HhEOjBZyzUWY8Qnd5Dp2Hkh3xdc2S84D9+OPSLPl+gnjwjaITn89EkTyY+CI6Kil477UnChcD97++lO/QdQ+nE/ikReQvbS5pepuB+EerTyaW5gaVOKkyTO5leVyhiJ8LoQSEN3MYqFvL1Nwt+Y6kUI/azbpUB9lLmwH+KL+ZK6HHK8EmxTsuUZTwsXM/m06Itjsj333XKQUvSN4y3/ytYJxAtEIv7xkYIcJP2E+UH8pGH0WfhXsfbyiDrFe4ITupAreY+8fUMKFIqwRAhfGO0H/yrAV8kPjUWTCyxcsGkec/z9F0UqWlOFCIUx5f2umhn2VTbDyd/W2Pl0OgmTKfnH1bxl317Nj8OBK/RuBdXCl/y3s0YyuiCsyhdAhqWpbsVLUySniz1V/wB4IuxGuVPudHrddg8cCnvbLhp4UEnrxHxq2evp8Xlo/QE=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950212C2CCEDAE0E0401F0A059909A5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950212C2CCEDAE0E0401F0A059909A5</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:${#Project#nodeidRTLCS}</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>tName</con:name><con:value>TC_DECE_00036_ACCESS_UVTC_UserName_RequestorUserSAU_Active_RequesteeOtherSAU_ValidateEmail_Role_DECE_200_OK_P1</con:value></con:property><con:property><con:name>sName</con:name><con:value>04.UserValidationTokenCreate_Access_P1</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E603091B0B6BE1E4E0401F0A05995622</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E603091B0B6BE1E4E0401F0A05995622</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E6030B86105B021EE0401F0A07992E9E</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E6030B86105B021EE0401F0A07992E9E</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:${#Project#nodeidRTLCS}</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="User_Create_API" disabled="true" id="bb3eee6b-9748-481b-8f8b-ddd65c4e633d"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="User_Create_STS_Policies" searchProperties="true" id="d4a22e7e-29ae-4d26-b76c-def0e45086de"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="27d7ed5d-3471-474a-90b0-bd0d0ce61dc1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("userType",null);
tC.setPropertyValue("Privilege",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("GivenName",null);
tC.setPropertyValue("SurName",null);
tC.setPropertyValue("PrimaryEmail",null);
tC.setPropertyValue("Language1",null);
tC.setPropertyValue("DisplayImageURL",null);
tC.setPropertyValue("AlternateEmail",null);
tC.setPropertyValue("PostalAddress",null);
tC.setPropertyValue("PostalCode",null);
tC.setPropertyValue("Locality",null);
tC.setPropertyValue("StateOrProvince",null);
tC.setPropertyValue("Country",null);
tC.setPropertyValue("TelephoneNumber",null);
tC.setPropertyValue("MobileTelephoneNumber",null);
tC.setPropertyValue("MeetsAgeOfMajority",null);
tC.setPropertyValue("DateOfBirth",null);
tC.setPropertyValue("urnUser",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("QuestionID1",null);
tC.setPropertyValue("QuestionResponse1",null);
tC.setPropertyValue("QuestionID2",null);
tC.setPropertyValue("QuestionResponse2",null);
tC.setPropertyValue("ResourceStatus",null);

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_USER_ID_FULL",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("SAML",null);
tC.setPropertyValue("ResponseType",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="e4457366-ffe3-4c20-9707-5fb5d033e5ab"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tS.getPropertyValue("sName");
def callTCname = tS.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tP.setPropertyValue("Request_XML",tP.getPropertyValue("Request_XML_Buffer"));

tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserCreate"));

tC.setPropertyValue("SAML",callTC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("userType",callTC.getPropertyValue("userType"));
tC.setPropertyValue("GivenName",callTC.getPropertyValue("GivenName"));
tC.setPropertyValue("SurName",callTC.getPropertyValue("SurName"));
tC.setPropertyValue("PrimaryEmail",callTC.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("Language1",callTC.getPropertyValue("Language1"));
tC.setPropertyValue("DisplayImageURL",callTC.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",callTC.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",callTC.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",callTC.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",callTC.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",callTC.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",callTC.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",callTC.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",callTC.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("urnUser",callTC.getPropertyValue("urnUser"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",callTC.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",callTC.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",callTC.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",callTC.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",callTC.getPropertyValue("ResourceStatus"));
tC.setPropertyValue("LegalGuardian",callTC.getPropertyValue("LegalGuardian"));

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID1", callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL", callTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("SAML",callTC.getPropertyValue("SAML"));
tC.setPropertyValue("CLG_NODE_USER_ID",callTC.getPropertyValue("CLG_NODE_USER_ID"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create" id="eff808d4-5ee2-4e3d-966f-5d272d65ca38"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS API" id="6636aab1-4384-4223-849b-2de54e1e4327">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tS.getPropertyValue("sName");

def callTS = tP.getTestSuiteByName(callTSname);

tS.setPropertyValue("audience",callTS.getPropertyValue("audience"));

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

//tC.setPropertyValue("SAML_USER2",context.expand( '${#TestCase#SAML}'));
//tC.setPropertyValue("NODE_ACCOUNT_ID1",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
//tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
//tC.setPropertyValue("NODE_USER_ID2",context.expand( '${#TestCase#NODE_USER_ID}'));
//tC.setPropertyValue("NODE_USER_ID_FULL2",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call Policy Create - TOU" id="2bb0ae99-3f69-42b2-86cc-f20b02406a96"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateTOU_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call Policy Create - MUC" id="c5d7788d-ec5f-48aa-80db-33364e868aca"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateMUC_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-05-18</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_17f7da12-670c-47f0-9937-7bf18562b369</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_17f7da12-670c-47f0-9937-7bf18562b369</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2003-05-16</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1995-05-18</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E5F8A903DB8B8399E0401F0A07992F13:DC7DFFA6"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_084414</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950212C2CCEDAE0E0401F0A059909A5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950212C2CCEDAE0E0401F0A059909A5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">F950235940171B42E0401F0A05990975</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:F950235940171B42E0401F0A05990975</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E5F89A132C6625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E56B6CBBFC218D76E0401F0A07991CCF</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4jx3jDyCOPYEZAjSBEtICSUNeOkJeG+XaElgyX7/+SiYmQEguvTOZIVqvds/uHh3piqMkdvwG55AKwqjWadX0P7YbugGyHePCtbBRcUPL8Lyya7iT0L6sXjiT8oWnax3OM+hQLhAVNd2x7IphVQ27MrIsv1Lx7WrJcS+fde0RUi5DS5eSpWurJKbcz9PW9CylPkOccJ+iBLgvsD9s3PV86emjApNev9qizBOm9akQM980cSkADHGMS5gl5pV54HMVcH9IIopElsJrzoDX9Ne9y+WytCyXWBqZjmVZpuWZ0ifgJPqq178UmyHo0JBt101EGSUYxWSDFKg7EFMWaI04YikR0+SD0LZpWyq0AStsYLtCv+rmW4Ic3ZmRDkCmHBl8iuwi2ABCSIFi0B4GnZr+9bwJbveOUkR5yNKEH63/DhLQBcRsBoHBi8oKdOdHPNGu+hVgv0NxnHGygL6iyQxh4NrPFEKy6hEuyRdwLR+/tuLyjxQsA/w3Y7ky97FK6OaJ7rRIBFz8n5ntz2sb5RHFGdTt8e34Oe0686ElnNvuL9xYoOry283Lc1TLIew7b0Htxv26Pibrjluvm8blXpt35l3HboSNdWOxYddPL8HKijbAWvz2R/9lhR7WTbd3P/+1prMwEtnvQYf8SNiqv9k8b5JmuBlbz/eDCZhfhoOb6+f2ZLze9G7Kvzcjz8tuV60W/QktJ7hzB9X+9dMdGSAadh/cKOgG4yWEntUeWaz/NL0ZXz6xbq9c6Ve/ZTdfuiT6/UidkJHbS14FblqV2ltN+zUcGgtJGGaTF8CiWCp6dFradzkvJD6XF2UhgRHmrv5MaRQXQIVeV7uUtPiZFCAS+HKY2/V3r2o55apXsWzXvq44bUv+991qWFXPszy3WmjQFsURxCajIVG5lMpu+fM5QJz4HGgAqbFgGZ4C1z+J2EICaR06kIeDUQ4jplSczIU8M9Ha8VhkTzyUlWE5D1wKutZn4p7ep41QQHqo3eUD7R4AJjMCSuAVw7mkOBeyGXO0yERslxaoRCGTV0CqVNh3KpdVk5NkFoOCaiYsyGIozaazvDUm3/46BsI8tw7ao/zkfVjY8beiB9InIMqBq1quQc4RTlxCVlHIxwVf7BdchG9kAVEHTDZUpARvkRx+euOJIsiOJLKiP83hH7vAvXM/e/v7neYnoMzjfuwSBQuyl7a4TeUFIeWjXkxzjkrzUrZYZPn8XCWNqQxvSoW0zSHgTOrbesT+AWruQphnXS871EeZd/ZDfJmY0qFAAhLJNi1fnvG2GAJXb4uOPCercx8uByll3wSsxClbM5ZPEIX401cK9rHyk+af8mfJ0uBtXCdi7eWRdcoHhSA0Uit1kaw/IAVmMiyRysfS/eCnApxKfmjcNXmHRUg2TTIBH3/RlKTVdIQxy6jotPTcsC+zOU6xnoH/5vQuTC7lr3fzin94Nz/d9YZS8BKk73zJfzsbJKcLluom/XMsNX0ln5oyOY32ZP0V4Dtlt52m02y2W422dajsjZ2yH1ZSf2d+b9nr6fF5qP8L</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_084414</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20140513_084414</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>firstuser20130903_114248</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130903_114310</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>seconduser20130902_104922</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>F950235940181B42E0401F0A05990975</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>E5F89A132C6725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E56B6CBBFC228D76E0401F0A07991CCF</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-27</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>httpConnect</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>27d7ed5d-3471-474a-90b0-bd0d0ce61dc1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e4457366-ffe3-4c20-9707-5fb5d033e5ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00036_ACCESS_UVTC_UserName_RequestorUserSAU_Active_RequesteeOtherSAU_ValidateEmail_Role_DECE_200_OK_P1</con:value></con:property><con:property><con:name>sName</con:name><con:value>04.UserValidationTokenCreate_Access_P1</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:${#Project#nodeidRTLCS}</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Child_User_Create_API" disabled="true" id="54815342-06ed-46f6-8c4a-58ec79f8092e"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Child_User_Create_STS_Policies" searchProperties="true" id="d28a0c5d-89e3-4133-8e7a-f724774172a5"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="5693d113-a944-4e94-85b2-a927e8d069f2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("userType",null);
tC.setPropertyValue("Privilege",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("GivenName",null);
tC.setPropertyValue("SurName",null);
tC.setPropertyValue("PrimaryEmail",null);
tC.setPropertyValue("Language1",null);
tC.setPropertyValue("DisplayImageURL",null);
tC.setPropertyValue("AlternateEmail",null);
tC.setPropertyValue("PostalAddress",null);
tC.setPropertyValue("PostalCode",null);
tC.setPropertyValue("Locality",null);
tC.setPropertyValue("StateOrProvince",null);
tC.setPropertyValue("Country",null);
tC.setPropertyValue("TelephoneNumber",null);
tC.setPropertyValue("MobileTelephoneNumber",null);
tC.setPropertyValue("MeetsAgeOfMajority",null);
tC.setPropertyValue("DateOfBirth",null);
tC.setPropertyValue("urnUser",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("QuestionID1",null);
tC.setPropertyValue("QuestionResponse1",null);
tC.setPropertyValue("QuestionID2",null);
tC.setPropertyValue("QuestionResponse2",null);
tC.setPropertyValue("ResourceStatus",null);


tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("CLG_NODE_USER_ID",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_USER_ID_FULL",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("SAML",null);
tC.setPropertyValue("ResponseType",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="7ac260eb-6a2a-4109-b5c6-3cd49ff237a3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tS.getPropertyValue("sName");
def callTCname = tS.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tP.setPropertyValue("Request_XML",tP.getPropertyValue("Request_XML_Buffer"));

tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserCreate"));

tC.setPropertyValue("SAML",callTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("CLG_NODE_USER_ID",callTC.getPropertyValue("CLG_NODE_USER_ID"));

tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("userType",callTC.getPropertyValue("userType"));
tC.setPropertyValue("GivenName",callTC.getPropertyValue("GivenName"));
tC.setPropertyValue("SurName",callTC.getPropertyValue("SurName"));
tC.setPropertyValue("PrimaryEmail",callTC.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("Language1",callTC.getPropertyValue("Language1"));
tC.setPropertyValue("DisplayImageURL",callTC.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",callTC.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",callTC.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",callTC.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",callTC.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",callTC.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",callTC.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",callTC.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",callTC.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("urnUser",callTC.getPropertyValue("urnUser"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",callTC.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",callTC.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",callTC.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",callTC.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",callTC.getPropertyValue("ResourceStatus"));
tC.setPropertyValue("LegalGuardian",callTC.getPropertyValue("LegalGuardian"));

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID1", callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL", callTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("SAML",callTC.getPropertyValue("SAML"));
tC.setPropertyValue("CLG_NODE_USER_ID",callTC.getPropertyValue("CLG_NODE_USER_ID"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create" id="edccc006-9b15-43ef-8621-56f953f987c0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Policy Create - CLGAttestation for Child User" id="f0b3d2fd-8570-4db7-8628-d08eae32ed7f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateCLGAttestation")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("NODE_ACCOUNT_ID", tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("CLG_NODE_USER_ID", tC.getPropertyValue("CLG_NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_CHILD", tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL", tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("NODE_USER_ID_FULL", tC.getPropertyValue("NODE_USER_ID_FULL"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call Policy Create - TOU for Child User" id="6b04f029-d0fe-4566-b432-6718ef8c346a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateTOU_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("CLG_NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call Policy Create - GeoPrivacyAssent for Child User" id="7a1bd6ce-43ac-496e-9a3d-20a51123738e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateGeoPrivacyAssent")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("CLG_NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));



//myTC.setPropertyValue("tName",tC.getName());
//myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call Policy Create - MUC for Child User" id="9e683dae-6936-4421-9e5b-6cf051307e19"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateMUC_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("CLG_NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS API" id="c5295d99-5448-463a-a7c7-16da5cdfeac0">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tS.getPropertyValue("sName");

def callTS = tP.getTestSuiteByName(callTSname);

tS.setPropertyValue("audience",callTS.getPropertyValue("audience"));


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

//tC.setPropertyValue("SAML_USER2",context.expand( '${#TestCase#SAML}'));
//tC.setPropertyValue("NODE_ACCOUNT_ID1",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
//tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
//tC.setPropertyValue("NODE_USER_ID2",context.expand( '${#TestCase#NODE_USER_ID}'));
//tC.setPropertyValue("NODE_USER_ID_FULL2",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config>
      </con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-05-18</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_b11d84a4-445e-4df7-878b-88495a19ac13</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_b11d84a4-445e-4df7-878b-88495a19ac13</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2003-05-16</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>F951092D6DCBA648E0401F0A05993970</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2003-05-16</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E5F8A903DB8B8399E0401F0A07992F13:DC7DFFA6"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083614</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>F950212A454F5E6CE0401F0A0599099B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950212A454F5E6CE0401F0A0599099B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>F951092D6DE1A648E0401F0A05993970</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:F951092D6DE1A648E0401F0A05993970</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E5F89A132C6625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E56B6CBBFC218D76E0401F0A07991CCF</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdT+pMEL73VzT1uvQToY2QIKiHE1AEJeqNWbZTWCzb0t3Scn792S0WAdGX8yYkZKezM8987DNzydAitLwWY5BwElGl22mobxPT9OsOcjTHqYLm+EFNq9fqE61ed9wqMl2ETVtVuoyl0KWMI8obqmWYjmZUNdN5NAzPvvDMWsW1jFdVGUPChGmhUjFUJV+ElHmF24aaJtSLECPMo2gBzOPYG7X6PU9oeqjEpDYvNygLh0lzxnns6Tqu+IAhDHEFRwv9Ut/TufSZNyJTiniawIdPnzXUj7tZllUyuxIlU90yDEM3XF3o+IxMz9XmWXkZ/C4Nos25jWhECUYh+YMkqD7wWeQrrXAaJYTPFt+YNnXTkKY1yLGGTYeeq/qngwLdiZb2QCYMaWyGzNLYEAJIgGJQnobdhnp+WgU3dx8TRFkQJQt2cP43SEBXEEYx+BorIyvRnW7xSLqal4C9LsVhysgK7mSbxAgDUwYJBCTvESaaz2dKUX4lZ+JHyi4D/C9ludR3sQro+pHsdMgUGP8/Ndut18bKGIUpNJf3z3fcsFt3dmx3h3P7MRsPiDkfrPrdRgFhV3kDalvuj/Nhs2576+MShPrAfLifzg27TetR7fVGr7bbcce6S+zhLO6vesw0yBXj8xzGt8HzNB7+sgf5y9qiuL0MJ9koQK/D4ctqbhlnN50nO5sl2R3MX1rrMLgPrOdbv1V/yK+DyXoWXf+5Cm6fXvG4/Q6Dq/f1b5+4bl2f9XH2++GlfmHhXi8fOuxhbP86q1svThv0Yd43F8vxL2u0zhqfMe3GsC8sKWGUTuaAeXmU7dHtKDeiXoj/TC9SQnwtKFS9WHIU40C52pS3JLV4qSAg4nuimJvzjVs1DdfqXHSuzdaFU782HMO8MVpG1XVtt2aUHLRBcQCxHdGASF+SZTf98zNAvPAYUB8SbRWleAZM/cFiB3GkdOlQPI6IMniMBIubS8t10BSt1zhZR2wyxRnY2boWqspdxO/pfdIKOCT71G3vUfcQMIkJSH6XDc5EhzMucrFEq5SHZmWFKhRSMQESScKe5dSrOiOLOASJVF9EfhpCJZ7FRWZ0tvm3NIRZIR1ePxYP79u4Dr+VKRA6PpEKTMZyBaKMcGQGGWUg3wd8sRtwab6V+kS+L5FPnhC8QbL/6bNNZH9se0RE9NYevZkl7q36yde/3tR/AKUf5mPryF+RHbflMBXzQbBHs6zmElWWlXS1Sov61SQzJsK8LgjS1EeAU0Fv68foHai+NaGfNF22qA88b+X7+FI+oyOOOCxEtynF8YTVYgRMrhZd8UzyU/eWPZcibxxyfkzWDsUGIhH/uKRgD0s9IR6IvyxK/M9yHbG140fEKfYJTuhUnuQcWX/TFDgSZokgvijZNX7MwDHn+8JtkrdYuOimScrh+y+KZLSGijCOUsq7HbUQ7LJsgZOvY/A+lb6YKZj8YzTn7NvR/NzvjQTfLZC61SX/rayRol0wqHIDKLA01FxsmsI5ne6w+gfAA2I3LNNqOVXnpnp90d4ldsN1r7YJ3Iuk+UX8VbKT08P30PwL</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083614</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20140513_083614</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>firstuser20130903_114248</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130903_114310</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>seconduser20130902_104922</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>F951092D6DE2A648E0401F0A05993970</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>E5F89A132C6725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E56B6CBBFC228D76E0401F0A07991CCF</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-27</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>27d7ed5d-3471-474a-90b0-bd0d0ce61dc1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e4457366-ffe3-4c20-9707-5fb5d033e5ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c5295d99-5448-463a-a7c7-16da5cdfeac0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00037_FUNC_UVTC_UserName_RequestorUserChild_any_status_RequesteeOtherUser_blocked_ResetPassword_Role_RET_CS_200_OK_P1</con:value></con:property><con:property><con:name>sName</con:name><con:value>03.UserValidationTokenCreate_FUNC_P1</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:RET_CS_1</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="UtilitySuite" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RenameTestCases" searchProperties="true" id="a6aedc74-2e80-4072-acc9-9a81d460d8d0"><con:settings/><con:testStep type="groovy" name="Rename"><con:settings/><con:config><script>import java.io.*;

def testCase  = testRunner.getTestCase();
def testSuite = "04.UserValidationTokenCreate_Access_P1";

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

BufferedReader br = new BufferedReader(new FileReader("C:\\Users\\ksaxena\\Desktop\\TestCaseNames.txt"));

def newTestCaseName;

log.info "TCCount:"+TCCount;

for(i = 0; i &lt;= TCCount - 1; i++)
{               
                def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);

                newTestCaseName = br.readLine();
                log.info "Input Test Case Name: "+newTestCaseName;
                
                                targetTestCase.setFailOnError(true);
                                targetTestCase.name = newTestCaseName;    
}
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="SetupScripts"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Setup" searchProperties="true" id="6aba6096-792b-416d-85d5-32309af12af7"><con:settings/><con:testStep type="groovy" name="Set ENV Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def projectPath = groovyUtils.projectPath

def propMap=[:]
BufferedReader reader = new BufferedReader(new FileReader(projectPath+"/project.properties"));
String line;
while ((line = reader.readLine()) != null)
	{
		if (line.trim().length()==0) continue;
		if (line.charAt(0)=='#') continue;

		int delimPosition = line.indexOf("=");
		String key = line.substring(0, delimPosition-0).trim();
		String value = line.substring(delimPosition+1).trim();
		propMap.put(key, value);
	}

propMap.each{ k, v -> tP.setPropertyValue(k,v)}

if (System.properties['os.name'].toLowerCase().contains('windows')) 
	{
    		log.info "it's Windows";
    		scriptLibrary = tP.getPropertyValue("scriptsPath_Windows");
	} 
else 
	{
    		log.info "it's not Windows"
    		scriptLibrary = tP.getPropertyValue("scriptsPath_Linux");
	}

log.info  " ScriptLibrary     ... " + scriptLibrary;

com.eviware.soapui.SoapUI.settings.setString( "Script Library", scriptLibrary);

log.info "updated_project_properties from properties file";

</script></con:config></con:testStep><con:testStep type="groovy" name="Set_CoordinatorSchema"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

log.info "versionMinor: "+tP.getPropertyValue("versionMinor");

def v2 = context.expand( '${#Project#versionMinor}' )
def schema = tP.getPropertyValue("coordinatorSchema_"+v2);

tP.setPropertyValue("coordinatorSchema",schema);
log.info "Setting the coordinatorSchema value ---- "+schema;
</script></con:config></con:testStep><con:testStep type="datasource" name="Country"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">US&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">GB&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">CA&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">IE&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">AU&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">NZ&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">AT&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">DE&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">CH&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">FR&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">BE&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">NL&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">LU&lt;/con:entry></row></con:configuration></con:dataSource><con:property>Country</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="groovy" name="TOUSetup"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def tP = testSuite.getProject();

def dBHost = context.expand( '${#Project#targetSystem}' )

def country = context.expand( '${Country#Country}' )

def a = new dbUtils.dbUtils(log,dBHost);
String sql = """select consent_version from (select
	            consent_version            
	            from
	            CONSENT
	            where
	            CONSENT_URN = 'urn:dece:type:policy:TermsOfUse'
	            and
	            COUNTRY = '""" + country + """'
	            order by
	            consent_version desc)
	            where rownum &lt; 2""";             
	log.info sql;
        
        results = a.SelectFromDB(sql,dBHost);

//                            a.dbConnClose();
       assert results.length() > 0;
       log.info "results" + results;

       def myXML = new XmlSlurper().parseText(results);   

       log.info myXML.ResultSet.Row.CONSENT_VERSION.text();
                testCase.setPropertyValue("Consent_Version",myXML.ResultSet.Row.CONSENT_VERSION.text());
                

def consent_Version = context.expand( '${#TestCase#Consent_Version}' )

tP.setPropertyValue("TOU_"+country,consent_Version);


</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>Country</dataSourceStep><targetStep>TOUSetup</targetStep></con:config></con:testStep><con:properties><con:property><con:name>Consent_Version</con:name><con:value>20140218</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>48eef7a0-e5f2-4926-99bb-c9ecd11b1888</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c0f3550c-c4aa-4ddc-abb8-3d629c23599f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="01.UserValidationTokenCreate_PYLD_P2"><con:settings><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Users\ralluri\Desktop\LatestProjects_Users\Build_4.1</con:setting></con:settings><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00001_PYLD_UVTC_UserName_AccountID_UserID_SAML_Valid_200_OK_P2" searchProperties="true" id="cd7f6d76-5103-4ac6-9a10-95e3d5202668"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F951092D64FDA648E0401F0A05993970</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E69037541D3A38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F951092D64FDA648E0401F0A05993970</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950212C1A21DAE0E0401F0A059909A5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950212C1A21DAE0E0401F0A059909A5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH49CnHApiQpSDmyXrLq0Bban25eV40yCu8FOYwcov/7YoaFAL4c9EhLyZDzzzcXfzLnAi8z1AyGgkJQzIxz2zF+e40VdgpAF7U7TarUSYkUR7lgR8jy32yZR0+mYRihECSETEjPZM13ktCzUtpzWDCHfbfnIbaBO9940bqEQyrRSaSDTWC8yJvzKbc8sC+ZzLKjwGV6A8CXxp8H3S19p+rjGZPbPtygrh0V/LmXu2zZpxEAgy0iD8IV9bh/onMfCn9KUYVkW8OwzFj3z+e5qtWqsmg1epLaLELKRZyudWND0s9n/VF+GOGQJ354HmHFGCc7oBmtQ30HOeWwEWcoLKueLd0w7toO0aQvWxCJOi3027RcHFboTLR2ALAS2xBw7tbEJJFAAI2D8mIQ98/NpFdzenRWYiYQXC3F0/jNIwJaQ8RxiS9SR1ehOt/hGuvrnQPyQkawUdAlj3SY5JiCM6wISur6kQjVfLIyq/MZaqB+tuwzIn5Tl3N7HqqDbb2RnSFMQ8v/UbL9eWyu3OCuhT8fL33+lvLlgeBJf5yyd3OSzchAkYdCrIOwrb0Htyv18Pm7WXW89X+Kju7uns7LbLZ2CbYS4T4N11P3nht+EwWB2N7p4upAxeijjH9nm28PZdL2BNp08fM3vPXt5MxoHw3gy/dku2NBBnxx8MwqiH91ocHm/+WbfJjP00JV3SRA9jr6STTwJ3dvRrfvQuZ4/PWbhOCdfk3TQvcrHVzGLRj/psKTCvi0Dbq8+paufwmuNr1bjwaT7TYzS36L3EtN+DIfCmhKmZfQARNZH3R7h0LhQ9cLyY3rREhpbSaXq55qjhAQmzb6+panFLxUB0dhXxdyeL7w2ch134ASuMwy+oC+ohZwLFKC25yEvaNcctEVxBHHAWUK1L82y2/75GCBZ+AJYDIW15CWZgzA/sDjEEhshm6jHwZmAGVcs3lqjTWc1zxMOkfPoKfk6xUXRdkxjzOUVuyqCREJxSN3NA+qeAKE5Bc3vusGF6nAhVS4e8bKUmdNY4gaDUk2AQpOwutpt24Iu8gw0UnvB4zKDRj7Pq8zYYvvvWpiISjr5Mqse3rtxHX+rU6B0YqoVhI7lb1BlhFczqOm360DeD7izH3BtPihjqt+XyqcsKNkiOfz00ia6P3Y9oiL6NZj+cmrcO/WTr7++aX8Ayj7Ox85RvKR7buthquaDYo9+Xc1H3HhslMtlWdXvTDNjoczbiiAdewqkVPT2NOO/gdk7E/ZJ02WH+sjzTn6Ir5RzNpVYwkJ1m1EdT1gtpiD0ahGqZ7I+dW85cKnyJmEt35INMrWBaMQfLinEJ1pPia/V34oX8Uu53rC150fFqfYJSVmqT3qOPL3TFIQrs1QRHy/2jb9l4C3nh8JdkndYpOqmqJTw/hdDM1rPxITwkslwaFaCfZatcMqnHPwXpVdmKiZ/Hs1r8e5ovvt+OVV8t8DmTpf+t7JFq3YhYOoNoMLSM9dq01TOWbrH6s8Aj4jdQZ477LQuhkGn1d0n9qZ3hnYJPIik/0r8WrKX0+P30P8X</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082355</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950212C1A22DAE0E0401F0A059909A5</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E69037541DE038AAE0401F0A059918D0</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13602d08-9c94-45c0-9151-f446f7597ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9225d8a-71fc-436d-a964-369cbdfcdd97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00002_PYLD_UVTC_UserName_SAML_Invalid_403_FORBIDDEN_P2" searchProperties="true" id="9044e18b-ff8a-4ac5-85bd-9186a18d6583"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML","SAML2 Assertion=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");
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","Invalid_Assertion");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F9502129F740E314E0401F0A07990586</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E69037541D3A38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F9502129F740E314E0401F0A07990586</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950221F2D57F204E0401F0A079902D1</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950221F2D57F204E0401F0A079902D1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3vr4jSx6uQTwpEBYktpU3pBwul2+1LZZwJeJvYEDtA++uvHZoUKO1lr4SEPBnPnJk5PvYpR0ns+G3OIRWEUS3oNPVnpzEG7EWR4bmNuuE545rRQOOqMQ4tL0RQi9wG1rWA8wwCygWioqk7lu0ZVtWwvXvL8h3Pt+1K/aTxpGsPkHIZWrpULF1bJTHlfp62qWcp9RnihPsUJcB9gf1h++bal54+KjDprdM1yjxh2poKMfNNE1dCwBDHuIJZYp6aWz6nIfeHZEKRyFJ4zxnypv6+d7lcVpZuhaUT07Esy7QapvQJOZkc662jYjOEAY3Yen2GKKMEo5i8IQXqBsSUhVo7nrCUiGnyRWjbtC0V2oAVNrDt0WPd/EiQozsw0hbIlCODT5FdBBtABClQDNpoEDT148MmuN57nyLKI5YmfGf9d5CALiBmMwgNXlRWoDs84p52tU4B+wHFccbJAm4VTWYIA9f6KURkdU24JF/ItXz82orLHylYBvhvxnJqbmKV0M093emQCXDxf2a2Oa91lAcUZ9BC4/jHzLscs7cHt+8M8dU8fnx7/fV7GrebOYRN5zWoctzv612yltx63xQ+omB037XD8M8ojW5H9cXsatntObbocPT78Qb3OvGc9Ub4wh71ex0J49ejqP1jJ+JBoJeQdoIn96W7su+g0z8an8RP8RIuenH0p1ofjV7T5YD0+lcRPMXsxHbdDAnv7Oeif9l3H9ygPRh1f/LqhXVz+XB5UTuvnV9lSTaJ2V2j1j5irNdvP9Wt5PHtNmuL1Z370vyoabOGbWMhCcNs/AewKJaKHkFH68p5IfG9vCgLCY0od/VnSqO4ACr0ltqlpMXPpACR0JfDXK+7jarlOHbX6VRrXcfyzi3PsrtW26o1GpbTsQsNWqPYgXjGaERULqWya/58DxAnPgcaQmosWIanwPVvInaQQFpAB/JwMMrhnkkVtwmnk/lLNV0yxu20Frv2tD6tVZNE126ZuKN3aTsSkG5rt7ul3QPAZEZACbxiOJcU50I2Y44WmYjtygJVKGTyCkiVCsut9arJSTKLQUE1ExZmMVRm01neGpOv/x0DYZ5bB+f3+cn7srDdb0UPpE9IlANXtfwAOUfYcwlZRSFfF3yyWXARvp2FRB0w2VCRErxGsv3pgyeKICVJZEXPZ8Pnkgyl+8HbP+80vwFl7vajTBQuyEba4jaVF4SUj1YxzTmqzCvZYpHl86spaUxleFMqpG0OAWdS317v2QtQswxhHnS9lKh3Mpf2bXyZmNKhQAISyTYtXx7wthgCV2+LQJ6T1aEPl62Usm8CVmKf7SyWTxCF+NtXCvax8pPmvvxbsjT8GNeeWBt5ZJ3yQSEInaiVukhevyAFZjIskcrH0s3g+wLsS75tLJtcYhGSTeNMwNdfNCVpTR1hzDIqgo6eGzZlNscpXmfgfzh9CpNL+fvdvOJf3s2PN9dDKXgJ0ktf8t/OBsnpgkFXT4AcS1NfyaemTE4nG7L+DvCTsttOo1vzrHPX3lb2av2kbOBWJa1P5s+WjZ7unofWvw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082410</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950221F2D58F204E0401F0A079902D1</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E69037541DE038AAE0401F0A059918D0</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13602d08-9c94-45c0-9151-f446f7597ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9225d8a-71fc-436d-a964-369cbdfcdd97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00003_PYLD_UVTC_UserName_SAML_Null_403_FORBIDDEN_P2" searchProperties="true" id="3f7f009f-80bd-4fdd-8df9-3337a99a44c4"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML","SAML2 Assertion=");
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SECURITY_FORBIDDEN");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F951091E4B7B7B21E0401F0A05993966</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E69037541D3A38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F951091E4B7B7B21E0401F0A05993966</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95106351D20A25AE0401F0A0799534D</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95106351D20A25AE0401F0A0799534D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZrU+I8FP7ur+jUjzslDS2XdoQZtLDbXVG3eFn9shOSAFnbFJsUqr9+k2IREH3Zd3SGyem5POeSJ+dEoCSu+z0haCZZyo0w6Ji/mw1nDMdjxyKEtC2XjNtWewLbVr1Vb0EXKqltm0YoRE5DLiTismPWbehadsOC7rVt+3XXh82aC50H07ilmVCulUpNWRVJzIVfhu2Yecb9FAkmfI4SKnyJ/VFveO4rTR9VmMzuyQplGTDrzqSc+wDgGqGYxjGu4TQBJ2BL54QIf8SmHMk8o68xieiYr7bL5bK2dGppNgV127aB7QGlQwSbHpvdo8qYkpBP0tX5DPGUM4xi9oI0qCGVs5QYvXiaZkzOkg9cQwBt7dqiBbYwdPmxCd4ClOgO9LQFMhPIEjMEK2cRndCMckyNmyjsmMeHdXBle50hLiZploid879BonxB43ROiSWqzCp0h3vcU67uCcV+yHGcC7agF3pM5ghTYVxldMKKcybU8BFhlO03CqH+WTVlFP9LW07AJlYFHeypTsCmVMj/07PNfq283KI4p93GoP7l6W7SZ+fwErjDnz88GsOHXqv5td8pIWwqr0Ct2/163h3W9Wy9Gi3bg7uvDZdj55t3e/9wHz1G962z9C5E118HYHERBffDIPzGUQYdGjSGwruaL4Nb9DKL7CwoyKBo35Hbh0dS5MFRo9V7Ts7biSdBkP6M5xE551fEGQeT9tXyqR09ut8vrwC4H/66ufs5/XLqthz5iCIPfr/7MR5xmf6IQt6MT/vAhUfw5VvPuQlvAnlzYU9EvRn3O285beawLawoYZSP/1Asq6MejzAwBqpfSH5OL1rCiDUpVf255ighKZdmV1tpavFzRUCM+KqZq/PAa0C76TRgULd79Uavb7s2HNg9u+V5DccNKg5aodiBeJbyCdOxNMuu5udzgDjxBeWEZtYizfGMCvMTjwGSyAh5pC5HygW9ThWLF8kMoj8vxQzZDC7tgpEXymI7m5nGRSov+WXWm0iabVO3s0XdEcVszqjmdz3gQk24kKoWT2iRyxjWFqjGaa5egEyTsDJtN4BgyTymGilIUpLHtDafzcvKALH6rVsIi1Ia9a/Li/dhXrvfqhIoHcK0gtC5nFLVRrrnDbKrRD5OuLmZcOW+lxOm75eqp8wYXiHZ/vQ2Jno+1jOiMvp9NvoNK9xr9YPN31uCT0CB3XqsA5EF2whbPabqfVDs0a26+YRqT7V8scjL/rU0M2bKPVAECcGI4lzR2/N1+kg5WLsAB70ua9Q7kdfybXy5nPGRRJImatqM8njAajGiQq8WobomxaF7y1ZIVTdJC7lPdharDUQj/nRJwT7Wekp8pX6WaUbe2rXH10YclafaJyTjU33S78jzB0OBU+WWKeJLs03n+xzsC74tXBd5jUWqaRrnkn78xdCM1jERxmnOZRiYpWCTZUuc8nlO/Teld25KJn99mgvx4dP8a3g+UnyXIHOty/5b2WLluGBq6g2gxNIxC7VpquB8usHqrwDfEbsH++5pS/3V4ZrYG57neM3muoBbmXTfid9LNmq6ex+6fwE=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082414</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95106351D21A25AE0401F0A0799534D</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E69037541DE038AAE0401F0A059918D0</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13602d08-9c94-45c0-9151-f446f7597ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9225d8a-71fc-436d-a964-369cbdfcdd97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00004_PYLD_UVTC_UserName_AccountID_Null_404_NOT_FOUND_P2" searchProperties="true" id="bcd6ba86-2613-4b48-913a-208703287c10"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","NOT_FOUND");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95107651A803F80E0401F0A059930AD</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E69037541D3A38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95107651A803F80E0401F0A059930AD</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950212AE96FF905E0401F0A079905EF</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950212AE96FF905E0401F0A079905EF</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZZb+I6FH6fXxFlHqsQJ4QtKki0lBm60kLLTF9GxjkEt8FJbYelv37s0KRAaS9zJSR0Ts7yncWffSzwLHL9thDAJY2Z0es0zT+4WqsTqGKrXAHX8jBpWI0ywVbFReV6o44qKJiYRk+IFHpMSMxk03SR41moYjneECHf9XzXKVU979E0HoALFVqZlJBpLGcRE36WtmmmnPkxFlT4DM9A+JL4g/bVpa8sfZxjMlvHa5RZQt6aSpn4tk1KARCIIlIi8cw+trdsjgPhD2jIsEw5vOUMRNN8810sFqVFuRTz0HYRQjZq2MomEDT8bra+5c4Q9NgkXsunmMWMEhzRV6xBXYGcxoHRjsKYUzmdfRLasR2kQ1uwJBZxPPbdtN8TZOgOjLQFkgtsiSl28mB3MAEOjIBxf9drmt8Pm+Dad8gxE5OYz8SO/G+QgM0hihMILJFXlqM7POKedrWOgfg9RqJU0Dlc6zVJMAFh9DlM6PKSCrV8gTCy8RtLoX403zIg/zKWY3sTq4Ju7+lOh4Yg5P+Z2ea81lEecJRCqz7ni4uL2vJydH15zyvs6bmW/F7djZyfpJlB2DRegyrG/SbvLmuxW29O43rj8Sq8XSSr+4flzSu1G/P+r0H/qNupdbq3vydo8GM0jK46j8Pn/up67KDzm/DHfPEsj07OvRGui9f4ZCRvmTs8P/s2rFVf4ffj4mKO7ZjeHEWT6jm/+DEC76j/cDt+qDykRzQ8X92jp+vprRvKJKJe7wmFL6STPJ+5v0JX/Q9eRuzq9ttP++zy56wbyH778WQUsE7gNd9r2qxhW5lTwiAdPwGRuajXo9cxumpeWH5NL1pDA2uSmfqJ5ighgUmzpb00tfipIiAa+GqYa7nbqCDXcdtnjWq320CVM+Qhp4vaqNbQUjfnoDWKHYinMZtQnUuz7Hp/vgZIZr4AFgC35nFKpiDMLyJ2sMRGj92pwxEzAcNYsXgtJaEiLf4a1GZjjvnrWNaD0FMcfB3LG3bD2xMJfJu5y1vMfQeEJhQ0vev9FmrBhVSteMHzVEZOaY5LDFJ1AXDNwcq1XrEFnSURaKD2LA7SCErJNMkaY4v1v2thIjLt3dkwO3eflrX7Le+AsgmoNhC6lhNQU4Q9V5CTF/J5wdXNgvPw7TSg+nipdkpOyRrJ9qf3LdHrUayIqujP6eCPk+MuzA92/+hpfwHK3u1HkSiY0420+V2qrgdFHq18mi+49FJK5/M0m19NEyNX4W3Fj449AJIqdlsN42dgdhHCPuhyKVDvZC702/hSOWUDiSXM1LYZmXjAy2IAQr8seuqULA99tmylVH2TsJT7dKeReoBoxF++UYhPtJ1S99XfIubB+7j2xNrIo+pUzwlJWaglfY2sPlkKEquwVPFezDeD7wuwL/m2smhygUWqbRqnEj7/YmhCa5qYkDhlstcxM8UmyWY45SoB/93oQ5iMyN9u5qX49Gb+dXU5UHQ3w2ZhS//b2KLZuhAw9QMgw9I0l+qhqZKzcIPU3wDu8LqDatWK066jcreOCl6vNBpl1O4UDdyqpPVB/VGz0dPd89D6Cw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdbk6q6En73V1iuR8sBFEGsmakKFxUV71dedmEIiHKTgKC/fgcdXTprZp3Z50nT6XR/faHz5RUbnlttAoxRFDuBX1Tlt9I/sGbxNGfAikGzVoU1BLoiWAhVWM40eMusV2lGKBVVjBOk+jg2/PitRGS1Ci1UGHrGMM1ao1nnXlimqpeKCxRhYpqovNClYua5Pm5e3L6VkshvBgZ2cNM3PISbMWxOgdZvEs2mccNUen+9orw4jN63cRw2KQq+mAgi14UvMPCoV+pJ59XEzalj+0acROjDp4nfSh9n0zR9SWsvQWRTVZqmKVqgiI6JHftX6b1wO4xM1beC61oy/MB3oOE6ZyMHpaF4G5hF4NpB5MRb7xvTDMXQuekKymAFMqz/q0T9dnBB90NLTyAjbFTw1mBuxibIQhHyISrOJ+pb6dfPKng9O4sMH1tB5OFP6/8GCflH5AYhMiv4FtkN3c8tfpGu91cEm6oP3QQ7RzTI2yQ0IMLFUYQsJ+s7mDSfiYuX8hczfOswBP9LSV6pR5wENvVFZmTHRjj+f+r1WKurlYXhJujd3Az9NIrj2AyrDb5BeccumC5lmtHttwuER+UrqHupP9afG/XeVx+HgH6QAEWFHW+43wWCyLOzATQyqC43IyFgww6KDHleXfBhnwnP7GFSV5aOMRqMeQLMtI6Gmkq4fPYtY68VOlun7ojlyBsmPWdxpgd+bX5QyhvHX/P9APM06YFso8/XEh+zHD0x1Ho2yDY0lyJFreKyARJ1vOLHOsesCo59ED3KmdTrKdAXYuZt12+/Y3qMIY+rh06XIPP/qzotyEZs3BdSPiks8nnG6F1TVaksSxJAkg1SVQS2KvbPYCDa+8N277SFlBbBeN4CMjhpE5DK9lpejMc9JTUXC1dfqK2WqE3YtAPWcoFsyEq2kPVVlzaWeriutmh9KormahJsat3Q7OzTzhYOtJmWDmbqSdsp2WCm0MuLzM7I+qztNGY4m9cKy50oaBMlldOLR1lJtwN9OQnXcyGFZ2WsAbYNmLkibbXOzFswsDbZwp3S18D+Ihe3mrRYaJkyA6OCaA8WJLaZ1NJD6JnhxnO3D8Y7xPjMbC9Om7ab6Gdlp0lKW5oe2lN1U5PHShdM1vPNcrE3lq1jAXYGYHPzSEpsrILU1hupPF53e4Gubo9wAMaKKI4BSRcNNLXdBUFbBBoLnOws7UQukMxWSnWruFAW3Da3OjmHFTbatGswjQaz7i+50YGTFb+s95LNbqttV61huTc1j3MhFs5rfCwfOcNhYBZa45XSiXuZ1RlPC5uRnK1gp2zaXco9C61I47sgOp+2rmZP4iU3xKeNY1lLcTVkXd5ytdoktFwrPOHyLBjvI5oTUa1KrU/HXlwAtiYC0N7Nd+JYExt5Uk01Ha810QAtJU7AeVeNe9XFods5unBdA0HWWw53+4/CmHKqiFQ6VkhbKYWGDMy8CJ3pXGntwFy07Ui0lZY4hjIYr9Veuib5mneI8uc8ti55tBURKDUdcEKnUJvTQjyMpywLTr4491vCVjtkS5PzaP6AlP50ELKphgeWry+DveY50TxKpvNeb9DPNrOkvd+RWWXR096xpheU4z4EzqA32+7lQDZG4Xodh2UfRjBWQ09Ts/NQx7uGs/HobrnOiCNahnx17m3SedtQ9F5kT5leZ+KParxQwIl16njlXSNdlmdTLuRNybfk04nSowUdgKAlTOoHM6tW99t52udSqwv2G6M6yFxBPAlKT5/BdDLuLadeuV6oH/t9jz7PKHYQDtNpO2WV8bhcM8VZZ4bDyFknDTuLhr5ZXRsxd9TpBeeE7l6oJvsZG9YWtkeKNTqaIa+NCmN2BXXP5kPYpSbUESi81Vfbp83ZOIfeEF4H6OfpcBde5wf1OFmeRs+NdExJtyIY35b5BaTKxRa5FYz47wQmlzhmxbqoNsOcBeEY+XHpPT+Vk5dmQiiOYzbJlXFdKxzNKTItiVydkxotUaFZmmnRgOYFgZZ4+cZyrig+QZQC33JyXzmPu95SfwcIvSZGvomiyjFI4Bbh0l8s5vkqqv6EXL+Bj9EsIDyRVoSayHMyy9JyQ6ySvmbrXJ0XW4pYbzE8VyoOgnjoDyNgxSh65ojsE0ecIOiEDsqJZH6bYnKd4pik5GAck9hlXo7Gi48SQjWjnO01q2yjTmHHC12UA6a8wExc9BJuw0uCKHz9rVYMiC/SiTL7R51Kl5v+2xA/792yQXRMJ1fAeTwiIhVFXxBe9hbM90Hzj0HfzIPEdPILnaQ2jhx4RfK89btj8la5twuJ6gb5rvlZ8GSV+hzQ3ZF5dOC95+/PAcImCd94v5XkYLwcXpLjMbkUgc+5VETMUwxF89QUwYQQotMs2COfupugfsRF76g/eb7Ln/El8dafxuR79kjLFC/LHzxEpgjnDxGVtHz201fOk0uStxhl8VcyySXvlRzxX580sAlzPSIekZ80iMzf5frC1oMfEmc+wBzfzlc58zx90xQwIGYdMsSC6NH4Vwa+cv4svCf5jiUm3bRJYvT9TjGfTm8lA8Ig8WNVLl0EjxPzgjM+haj5W+kPMxfu90HmM/wtmV9p/SmZXZ5Ruus6/1u54lzaBSJyCjsXLG+ljLxLiXPffpjQHwD/GNKAURhRAIKkgE9DunVP4FMk73+I/5Q85PTz9/D+Lw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082420</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950212AE970F905E0401F0A079905EF</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E69037541DE038AAE0401F0A059918D0</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13602d08-9c94-45c0-9151-f446f7597ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9225d8a-71fc-436d-a964-369cbdfcdd97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00005_PYLD_UVTC_UserName_AccountID_mismatch_403_FORBIDDEN_P2" searchProperties="true" id="f2d342a1-45f0-472e-aefb-62e05bb555c1"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL","urn:dece:accountid:org:dece:E69037541D3A38AAE0401F0A059918D0");

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","ACCOUNT_FORBIDDEN");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950212A3CDC5E6CE0401F0A0599099B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E69037541D3A38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950212A3CDC5E6CE0401F0A0599099B</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950D2056BB0048FE0401F0A059927C1</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950D2056BB0048FE0401F0A059927C1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj1XIBQIkKkjhdk56ZQtL232pjOOA28QOscOlv37t0KRAaQ97JCTkyXjmm5nPn33BQBxZrscYSjmmRPF7LfV5OrVhEzhAm9YbgVarWrbm1GsNLXBgIwxCuxEaU1XxGcuQTxgHhLdUyzBrmmFrZm1sGK5Vc616xWzYv1VlglImQguXiqEq6zgizM3TttQsJS4FDDOXgBgxl0N35N1cu8LTBQUmtX2xRZknTNtzzhNX12ElQBBFEaxAGusX+p7PRcDcEZ4RwLMUvecMWEt937tarSqraoWmM90yDEM3HF34BAzPztT2j2IzCnwS0u26CwglGIIIvwEJ6gbxOQ0UL5rRFPN5/EVoUzcNGVpDa6hBs0bOVP0jQY7uxEh7IFMGNDYHZhHsHoUoRQQi5de931LPTpvgdu84BYSFNI3ZwfrvICGyRBFNUKCxorIC3ekRj7SrfYGg6xMYZQwv0a2kSQIgYsowRSFeX2MmyBcwJR+/smbihwuWIfg3Y7nQd7EK6PqR7vTwDDH+f2a2O69tlAmIMtTO0p+XG9ikt4vY1q8nnSrsDZ8GT+v0EbZyCLvOW1DluN/Xh2QtufW+CT7RK347f8F30K8+dZpLw8bNBX6IY5Ys4uum73v9p+G/6/PssZ70VtPNQxM+Nu2J3x2dTy+9wFjO+oFxmawm4+oP3z93Xq5ex6ZFhuPhg/k7xtf3XuONe8tJX98E4WKw8l7owg5X2N+QZPRAfnmbf8xNfO5lV5ZnvtbYq+d33poD64dpjxud6RUdD8J6MqyNLn/OWh817dawbywkYZRNXxDkxVLSw+8pAzEvwL+XF2nBgRbmrm4iNYpxRLjalruktLiZECAcuGKY2/XAsY2eZdj1Tscwas1B36gZ5sDwDNtxrEbXLDRoi+IAYpeSEMtcUmW3/PkeIIxdhkiAUm1JMzhHTP0mYg9woPjkXhwOShgaU6HiMJxWjQaxN/Gam86bSbGzSsirWVOVW8rvyF3qhRyl+9Jd3ZPuewRxgpHUd0lwJhjOuOjFAiwzHpmVJagQlIkbIJUiLLY2bZ3hOImQRKrHNMgiVEnmSd4ZnW3/LQ1Allvv++P84H1Z1+G3ogXCJ8DSgclaOkiMER25g8yikK8Lru8WXIT3sgDL8yX6yVMMt0j2P33QRPKj5Iio6Lk7ei65ULqfvP3zTv0bUPphP8pEwRLvpC0uU3E/CPVoF9NcgMqiki2XWT6/hlTGVITXhUCa+gjBTMjbZkxfEdHLEPpJt0uJ+iBzad/Hl/E5GXHAUSzYpuTLE54WI8Tk08IXx2R96rtlL6XoG0drfszWjcQLRCL+9pECXSj9hHko/lY0DT7GdSTWTh5Rp3hPcExmciXvkc0XpIBUhMVC+Gi6G/xYgGPJ941lk0ssXLBpmnH09RdFKlpLBRDSjHC/p+aGXZXNcfJNgtwPp09hciV/v5rX7Mur+fHmeiT0LgZq6Yv/21nDOV0gUuULIMfSUtfipSmSk9mOqr8DPBR2y7S8arfXtfv17q6wG47TKRu4V0n7k/mzZaenh+eh/Qc=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082424</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950D2056BB1048FE0401F0A059927C1</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E69037541DE038AAE0401F0A059918D0</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13602d08-9c94-45c0-9151-f446f7597ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9225d8a-71fc-436d-a964-369cbdfcdd97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00006_PYLD_UVTC_UserName_UserID_Null_404_NOT_FOUND_P2" searchProperties="true" id="068a81cc-c4b6-431e-ae10-abd34aaf73f2"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",null);
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","NOT_FOUND");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95107A0F0B01761E0401F0A0799554A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E69037541D3A38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95107A0F0B01761E0401F0A0799554A</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F951092D6545A648E0401F0A05993970</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F951092D6545A648E0401F0A05993970</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4jxljGcyHPYEZCklLmpAWE5rkJSPkNaixJWLJQPrrK5nYAUJy6Z1hhtF6tXt29+hIpwIncdXvCgGppJwZg37bfHBJfQqkRaxmC4jl1htTC7tOzXKajQjXGo36NJyaxkCIDAZMSMxk26wix7VQ3XLcMUJ+1fVrqFKrt+5NYwKpUKGVSwWZxjqJmfDztG0zS5nPsaDCZzgB4UviB92rS195+rjAZHZONyjzhGlnLuXCt21SCYFAHJMK4Yl9au/4nIbCD+iMYZml8JIzFG3zZe9qtaqsahWezuwqQshGnq18QkFnn83Op2IzhAMW8c26hxlnlOCY/sEa1BXIOQ+NbjzjKZXz5J3Qju0gHdqCNbGI47LPpv2aIEd3ZKQdkKnAlphjpwg2gghSYASMm9GgbX4+boKbveMUMxHxNBF763+DBGwJMV9AaImisgLd8REPtKtzCsQfMBJngi5hqGmywASE8SOFiK4vqVDkC4WRj99YC/WjBcuA/MtYTu1trAq6faA7fToDIf/PzLbntYkywXEGHfguWTatojDJksnTGIL52cmJm41Q47GdQ9h23oAqx/2y3idrya2XTYvZ17tr/LvPk2Ua2D+uvsYXf27uv6wdceMid5H+jC5aNW/mDOKfw5vEZoSNvv06g0tvVAvod9Lo39+s19ljDdVmfz51H89Wd3DxzGfB8s47x8PJYIjHLScNe03buRvW3evJt2Z0F1/EvzyRLR0+CS5X/RPnUaSuc9KbPuGa3ZoO+er526dIfm3SgPXS29v7bPJ0OQbefq1pu4ZdYyEJQTb9DUQWS02PQd84V/PC8mN50RYaWlHu6i+0RgkJTJodvUtLi58pAaKhr4a5WZ97dQd51X6j7ta7Dbd1hlzknKMuqntezWuiQoM2KPYg9jiLqM6lVXbDn48BksQXwEJIrSXPyByE+UHEPpbYGLCROhycCRhzpeJOK1yFXigQWzYiB/NptEZhOq+GTdMYcnnNrtNuJCHd1e7ajnaPgNAFBS3wmuFCUVxI1YwnvMxk7FSWuMIgU1dAqlVYbW3VbUGTRQwaqp3wMIuhspgv8tbYYvNftTARuXV0Ns5P3ruF7X8reqB8QqodhK7lC6g5woFLqFoU8n7Bje2Ci/DdLKT6gKmGypSSDZLdT6880QQpSaIqeugFD06Bu3Q/evvbnfYHoOz9fpSJwiXdSlvcpuqCUPLRKab5hCtPlWy5zPL5NbU0piq8rRTSsQMgmdK35zF/BGaXIeyjrpcS9V7m0r6LL5NzFkgsIVFsM/LlEW+LAIR+WwzUOVkf+3DZSan6JmEtD9l6sXqCaMQfvlKIT7SfMv9Qfyuehq/jOhBrK4+qUz0oJGUzvdIXyfM7pCBchaVK+Xi6HfxQgEPJd41lk0ssUrFpmkl4/4uhJa1tYkJ4xuSgb+aGbZnNccrnBfivTm/C5FL+cjevxbt38+3VZaAEL8Fm6Uv/29miOV0ImPoJkGNpm2v11FTJ2WxL1l8AvlH2Zhedoy9IccUplb3pefW62y0buFNJ5435rWWrp/vnofMX</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082429</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951092D6546A648E0401F0A05993970</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E69037541DE038AAE0401F0A059918D0</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13602d08-9c94-45c0-9151-f446f7597ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9225d8a-71fc-436d-a964-369cbdfcdd97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00007_PYLD_UVTC_UserName_UserID_Invalid_403_FORBIDDEN_P2" searchProperties="true" id="dd061d42-c06f-4d80-a94d-3d81285e3984"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_FULL","fd14545f4354453433435644");
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","INVALID_USERID");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950D2016E7CC0E6E0401F0A059927B5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E69037541D3A38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950D2016E7CC0E6E0401F0A059927B5</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95022FF5D00406FE0401F0A079903A3</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95022FF5D00406FE0401F0A079903A3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZZb+I6FH7vr4jSx1HIAmGJChLrTKZlhiGUVn2pXOcALomTxg5Lf/3YoUmB0l7mSlWRT87yncWfzxVDYWA5bcYg4SSiittrqo9+Gdm4YVW0ql01tYpZtbUGqhuaX6/UKsjCZqNhqIrLWAouZRxR3lQtw6xohq2ZlYlhOFbFKdsl264/qMoUEiZcC5WSsNqEAWVOFrappgl1IsQIcygKgTkcO157eOMITQflmNTW1Q5lFjBpLTiPHV3HJR8wBAEu4SjUr/QDnSufOR6ZU8TTBN5i+qypvtmu1+vSulyKkrluGYahGw1d6PiMzC/V1kVuDL5LZ9Hu3EU0ogSjgLwiCWoIfBH5SjuYRwnhi/AT16ZuGtK1BhusYbNCL1X9PUCG7kxPByAThjS2QGbubAwzSIBiUG7HblO9PK+DO9tJgiibRUnIjs7/BgnoCoIoBl9jeWY5uvM9nihX6wqw41IcpIys4JcckxhhYMoogRnZ3BAmhs9nStZ+ZcPEH8mnDPC/tOVK38cqoOsnqtMjc2D8//Rsv187L1MUpNAK19e3HYiuw3g7ItP1bGjjpzmpd18nRjODsK+8A1W0++18PKzFbL0ZebObUd1qJ0bfn66AdJaL9fPrujserFfTxf1kpd+NPPc+7f+s1YPGYnEbbx6WPzq1p+9m/cZ7cv8wzDxuunG1PFpfzEY12h27Pd0jy+2r3nn1UmvTR9+NQX3qrjc/BixAcF2mFhs2utOAos4SjIdv99bd65CS2t2fdLKsLpOH0Wo+vpj22u733regsd20f96Nyx6Kmu857edwKMwpwUufngHz/CjHw+0pA9EvxL+mFykhvjbLVJ1YchTjQLnaklaSWpxUEBDxHdHM3XnQsA3LGgzsnmFUjOqgL/6bA6Nt1MRtKrfLOQftUBxB7EZ0RmQsybK7+fkaIA4dBtSHRFtFKV4AU7/w2EMcKS4di8sRUQaTSLC4mTw9z9PUeK5aVQQv5YUQ1OJtTVV+Rfw3/Z20ZxySQ+YuHzD3GDCJCUh6l/PNxIAzLkrxglYpD8zSCpUopOIBSCQHC9O6rTMSxgFIoHoY+WkApXgRZ4XR2e7X0hBmmXTcn2T37tO0jr/lFRA6PpEKTObSAdFFOPEEWXkinydc3U84d99OfSKvlygnTwjeITn89D4lcjyKEREZPXa9RzPHXaifbf7RUv8ClH5cjyKQvyJ7YfO3VDwPgjxaeTdfUOmllK5Wada/miTGRLjXBT+augc4Fey2nURLoHrhQj/rcSlQH0Uu5If4Ur6gHkccQjFtSnY8Y7PwgMnNwhW3ZHPu2nIQUtSNw4afknUDsYBIxF/uKNjBUk+IR+JnHSX+e7tO+NqLI/IU6wQndC5P8hnZfjIUOBJuieC9KNl3fsrBqeCHwqLIBRYupukp5fD5F0USWlNFGEcp5W5PzQT7JJvh5NsYnHelD24yIn97mTfs05f5fnjjCboLkVrokv9W1kg2LhhUuQBkWJrqRiyaIjid75H6G8BjXu+JKav2a92u0a8WvG43GlatYxcFPMik9UH8UbJX0+P70PoL</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082434</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95022FF5D01406FE0401F0A079903A3</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E69037541DE038AAE0401F0A059918D0</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13602d08-9c94-45c0-9151-f446f7597ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9225d8a-71fc-436d-a964-369cbdfcdd97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00008_PYLD_UVTC_UserName_AccountID_not_Existed_403_FORBIDDEN_P2" searchProperties="true" id="0e877829-9312-4c9e-9263-9d0e9f520d72"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL","urn:dece:accountid:org:dece:BF9B730FBABCDEFGH0401F0A07995726");

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","ACCOUNT_FORBIDDEN");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950D20679AB134FE0401F0A059927C5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E69037541D3A38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950D20679AB134FE0401F0A059927C5</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950223963B22296E0401F0A05990987</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950223963B22296E0401F0A05990987</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZZb+o6EH7vr4jSx6OQFWgiQGK9JzoFWpZuL5VxBnCbODR2gPbXXzs0FCj0cq6EhDwZz3yz+JupMBSFlldnDBJOYqr4rar6bDoucszA0Myriak5jjnRXLCLmoGmyMVQnhQdV1V8xlLwKeOI8qpqGaajGUXNdEaG4VmO5xiFonn1pCp3kDBhWqgUDFVZRyFlXua2qqYJ9WLECPMoioB5HHvDevfaE5oeyjGptcoGZeYwqc05X3i6jgsBYAhDXMBxpFf0PZ1KwLwhmVHE0wQ+fQasqn7eXa1WhZVdiJOZbhmGoRuuLnQCRmaXau0ivwyBT6fx5txENKYEo5B8IAmqC3weB0o9nMUJ4fPohGlTNw1pWoM11rDp0EtV/3KQoTvT0h7IhCGNzZGZGxvAFBKgGJTxwK+ql+dVcHN3lCDKpnESsYPz30ECuoQwXkCgsTyyHN35Fo+kq1YB7PkUhykjS+jJNlkgDEy5SWBK1teEieYLmJKVX1kz8SN5lwH+m7JU9F2sArp+JDstMgPG/0/Nduu1sXKHwhRq5afy7U2g9+q/b6+68ayp3zZ66avrFnm9mkHYVd6A2pb783zYrNve+rw06syub6bt/u/em78Yrrud9nCx+gWx7dqdFSfX5ev2g293R227aTf1wYfr9J/s9n3/8f6DoNJTr91y5o1+3XJXD48XNBjPh6UxDO7H1IrIy4c9XXZbEfwDq/dy8SbCMxsP7v48Fl/aUeO90x+PG3dPDbdjDKL7puGy2+TXwJ7MexNjYl1c3dyP0av+4o9S/PrHDYf8sfoV024M+8KcEobp5AUwz4+yPfyW0hH1QvxnepESEmjTTNVbSI5iHChXa/KWpBYvFQREAk8Uc3PuuEXDsmy3ZDcsy3JLbcMxzI5RN4qua7hX5ZyDNigOIDZjOiXSl2TZTf/8DBBHHgMaQKIt4xTPgak/WGwhjhSfDsTjiCmDUSxYnDPLXixL66jsuClzZwE2XjBKy6rSi3mf9pP6lEOyz9z2HnMPAJMFAUnvsr+ZaHDGRSre0DLloVlYogKFVAyARHKwuHpV1BmJFiFIoHoUB2kIhcV8kSVGZ5t/S0OYZdJBe5S9u5NhHX7LMyB0AiIVmIylAaKKcGQE2XkgpwMu7Qacm6+nAZHPS6STJwRvkOx/+uoS2R7bFhERPTeHz2aOe6t+9vXvN/UfQOmH+dg6CpZkx20+S8V4EORRy6v5hgpvhXS5TLP6lSUxJsK8LvjR1IeAU8Fu76P4Fai+NaGfNVy2qA88b+X7+FI+p0OOOESi25TseMZmMQQmNwtfvJL1uWvLnkuRNw5rfkzWDMUCIhH/uKNgD0s9Ib4Rf6s4Cb7KdcTWjh8Rp1gnOKEzeZJj5P1EU+BYmCWC9+Jk1/gxA8ec7wu3Sd5i4aKbJimH018USWhVFWEcp5T7LTUT7JJshpO/L8D7UvpmJiPyz8m8Zicn80P3eijoLkLqVpf8t7JGsnbBoMoFIMNSVddi0RTO6WyH1D8BHvJ6yzJKZbfeMG2ns8vrVrlZ3CZwL5LaN/F3yU5OD99D7V8=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082439</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950223963B32296E0401F0A05990987</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E69037541DE038AAE0401F0A059918D0</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13602d08-9c94-45c0-9151-f446f7597ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9225d8a-71fc-436d-a964-369cbdfcdd97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00009_PYLD_UVTC_UserName_UserID_not_Existed_403_FORBIDDEN_P2" searchProperties="true" id="c90cc730-0050-4c1a-a52e-655a7d34e311"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_FULL","urn:dece:userid:org:dece:C01ACACC558795CE0401F0A05990C5E");
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","INVALID_USERID");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950226006F41379E0401F0A079902D7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E69037541D3A38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950226006F41379E0401F0A079902D7</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950228A96227D2AE0401F0A079904DE</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950228A96227D2AE0401F0A079904DE</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZRU+o6EH4/v6JTH53StBQKHWEGBa49g4iAHPXFiWkKwTatTVqKv/4mxSIgejl3hhkm283ut7tfvuSCwTAwnQ5jOOEkoorbbanPvocAskFT80zoa5ZVq2kNyza1et1r2thAVcuwVcVlLMUuZRxS3lJNYFgaqGmGNQXAMS3HqleA1XhSlRlOmAgtXCpAVfIwoMwp0rbUNKFOBBlhDoUhZg5HzqRzM3CEpwNLTGr7YoOySJi0F5zHjq6jiocRDgJUQVGoX+h7PhcecyZkTiFPE/yR02Mt9WPvarWqrKqVKJnrJgBAB01d+HiMzM/U9q9yM/Zc6keb9RWkESUIBuQdSlA3mC8iT+kE8yghfBF+E9rQDSBDazhHGjIseqbqnwkKdCdG2gOZMKixBTTKYGPs4wRThJX7sdtSz06b4GbvNIGU+VESsoP130HCNMNBFGNPY2VlJbrTIx5pV/sCI8elKEgZyfBQ0iSGCDNllGCf5APCBPk8phTjV3ImfqRkGUZ/M5YLfRergK4f6U6XzDHj/2dmu/PaRJnBIMXt80aP//MSTqfBaNj8M7pbubRaPe/d37y7rQLCrvMG1HbcH+tDsm659bHJvbcbj+txZ0CfdIyfroJ84Of9Zvz7NZtTY9W4e69OIYzR7MGYDfX5erqee+O1CxL/lt6O4uDNzUB2F5nJJRr8ur7v5svFC1vml/ms9nB9+7q85fXJkPsw7Q+v58317AU8dN7PHx+6a3uyXHTH69gzetAevU6WvdkK33avnkI9XdrjX8ZvfXmd/8maHW90vnjsIx+1PmvarWHfWErCJH1ZYsTLpaSH21X6Yl6Q/ywv0kI8zS9cnVhqFOOYcrUtd0lpcVIhQMRzxDA3636zBkyz0WnWTdPump0esIDRBx1gN5vA6vZKDdqgOIB4FVGfyFxSZTf8+RkgCh2GqYcTLYtStMBM/SFiF3KouHQsDkdEGZ5GQsWRT8Ebyby8sawZUVxFFjDt7HVhqMow4mKyScfnONmX7uqedI8xIjHBUt8lwZlgOOOiF28wS3lgVDJYoTgVN0AiRVhsbdR0RsI4wBKpHkZeGuBKvIiLzuhs829qELHCOu5Ni4P3bV2H38oWCB+PSAcma7nEYoz4yB1ULQv5vuD6bsFl+E7qEXm+RD95QtAGyf6nT5pIfmw5Iip6vpo8GyXurfvJ27/u1H8ApR/2Y5vIy8hO2vIyFfeDUI92Oc03WHmrpFmWFvOzpTImIrwuBNLQJxilQt7W0+gVU30bQj/pdtmiPsi8te/jS/mCTjjkOBRsU4rlCU+LCWbyaeGKY5Kf+m7ZSyn6xnHOj9muAvECkYh/fKQgB0k/YR6Jv1WUeJ/jOhJrJ4+oU7wnOKFzuZL3yPobUqBIhCVC+KJkN/ixAMeS7xu3Td5i4YJNLynH339RpKK1VIhQlFLudtXCsKuyBU6+jrHz6fQlTKHkH1dzzr69mh9uBhOhdyFUt77kv501UtAFYVW+AAosLTUXL02RnM53VP0D4FdhrwNQ71tG1W7uCbvZ/eTyXiXtL+avlp2eHp6H9r8=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082444</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950228A96237D2AE0401F0A079904DE</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E69037541DE038AAE0401F0A059918D0</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13602d08-9c94-45c0-9151-f446f7597ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9225d8a-71fc-436d-a964-369cbdfcdd97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00010_PYLD_UVTC_UserName_TokenType_Null_404_NOT_FOUND_P2" searchProperties="true" id="dcb4d336-d55f-4619-864d-2e98d1882831"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",null);
myTC.setPropertyValue("errorRespType","NOT_FOUND");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F9502319EF2C5CEBE0401F0A0599096F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E69037541D3A38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F9502319EF2C5CEBE0401F0A0599096F</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F951078381580194E0401F0A059930A1</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F951078381580194E0401F0A059930A1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3vr4jSxyokIaGQqCBRPpZ0ocsG+vmych0DbhM7jR0I/fVrhyYFSnvZKyEhT8YzZ2aOj33BQBRW3TZjKOGYEsXrNtU/pmMF9eAJaE6tZmu2Wa9qTr0GtdoTgo7ZCBpWAFXFYyxFHmEcEN5Uq4Zpa0ZNM+2pYbhV262ZFavuPKrKLUqYCC1cKoaqZFFImJunbappQlwKGGYuARFiLofupD0ausLTBQUmtXWxQZknTFoLzmNX12ElQBCFIaxAGukX+o7PRcDcCZ4TwNMEvecMWFN937tarSorq0KTuV41DEM3HF34BAzPT9XWSbEZBR6Z0c26AwglGIIQvwEJaoT4ggZKO5zTBPNF9EVoUzcNGVpDGdSgaZNTVf9IkKM7MtIOyIQBjS2AWQTz0QwliECk3PheUz09boKbvdMEEDajScT21v8GCZElCmmMAo0VlRXojo94oF2tCwRdj8AwZXiJriVNYgARU8YJmuFsiJkgX8CUfPxKxsQPFyxD8F/GcqFvYxXQ9QPd6eI5Yvz/zGx7XpsotyBMUctvT6x7/fnno/+6di7f0qvJenm1OrPjDm3mELadN6DKcb+v98lacut902/b5yvz59Bf3q69Z2CHySDJbt6il3trOe5PkdH3z7NzloUBGPe8+jhOx349GMFRY9S9mQ4ewngVdJKeQUH8drLuvDg/unf2qtq9POfdqf8weOlePT3X9Vv+MMH20B8MB7O3aTCfVx/j+7PLs1p38sNj8PLh7GYYjsbwDvZe59Xo9zI+aQxoMKD0ml7d4UbUWAz7sPlR03YNu8ZCEibp0zOCvFhKenhdpS/mBfj38iItONBmuasbS41iHBGutuQuKS1uKgQIB64Y5mbdd2qmUW9YDbPWMEzH7hm2YfaNtlFzHMtom4UGbVDsQexQMsMyl1TZDX++BwgjlyESoERb0hQuEFO/idgFHCge8cXhoIShKZUqPrNmPLStzFo5tolip5HEScZXb6mqXFP+i/xK2jOOkl3ttna020cQxxhJgZcMZ4LijItmvIJlykOzsgQVglJxBSRShcXWRk1nOIpDJKHqEQ3SEFXiRZy3Rmeb/6oGIMutfm+an7wvC9v/VvRA+ARYOjBZyyUSc0QHLiG7KOTrgs+3Cy7Ct9MAywMmGsoTDDdIdj998EQSpCSJqOhPZ/KnJEPpfvT2zzv1b0Dp+/0oEwVLvJW2uE3FBSHko1VM8xVUXivpcpnm86tLaUxEeF0opKlPEEyFvq2n9AURvQyhH3W9lKj3Mpf2XXwpX5AJBxxFgm1KvjzibTFBTL4tPHFOsmMfLjspRd84yvghWycUTxCJ+NtXCnSh9BPmsfhb0ST4GNeBWFt5RJ3iQcExmcuVvEjWX5ACUhEWC+WjyXbwQwEOJd81lk0usXDBpqeUo6+/KFLSmiqAkKaEe101N2zLbI6Tr2Pkfjh9CpNL+fvdnLEv7+b70XAiBC8CaumL/9tZwzldIFLlEyDH0lQz8dQUycl8S9bfAe4pu1G1TKfXr3Zqnd7ltrIbznm/bOBOJa1P5s+WrZ7un4fWXw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082449</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951078381590194E0401F0A059930A1</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E69037541DE038AAE0401F0A059918D0</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13602d08-9c94-45c0-9151-f446f7597ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9225d8a-71fc-436d-a964-369cbdfcdd97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00011_PYLD_UVTC_UserName_TokenType_Invalid_403_FORBIDDEN_P2" searchProperties="true" id="5dac02ca-33ba-4703-b59e-8ec28e50d030"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType","recovermypassword");
myTC.setPropertyValue("errorRespType","INVALID_TOKENTYPE");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950219278B83C50E0401F0A0799053D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E69037541D3A38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950219278B83C50E0401F0A0799053D</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95022CED08D19C6E0401F0A05990969</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95022CED08D19C6E0401F0A05990969</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj6uQCwRCVJC4tGcj6LaF0su+VMaZgGnipLHDpb/+2KFJgdIe9khIyJPxzDcXfzPnDEWh5XYYg5STmCpev6U+W2bg1BqOo2F/WtVqJoDmOLih1RqBhacOqht2Q1U8xjLwKOOI8pZqGWZNM2zNrN0ZhmvVXNuuNKrWH1W5h5QJ00KlYqjKOgopc3O3LTVLqRsjRphLUQTM5dgdd66GrtB0UYFJbZ9vUeYO0/ac88TVdVzxAUMY4gqOI/1c39M595k7JjOKeJbCu0+ftdT3u6vVqrKqVuJ0pluGYehGUxc6PiOzM7X9o7gMvkeDeHvuIRpTglFI3pAEdQV8HvtKJ5zFKeHz6AvTpm4a0rQGa6xhs0bPVP3DQY7uREt7IFOGNDZHZmFsBAGkQDEok5HXUs9Oq+D27l2KKAviNGIH57+DBHQJYZyAr7EisgLd6RaPpKt9Dtj1KA4zRpbwW7ZJgjAw5SaFgKyHhInm85mSl19ZM/EjRZcB/puynOu7WAV0/Uh2+mQGjP+fmu3Wa2vlHoUZtHsPs1/hdXdlGYv57WhA0vuA/nFMPFjhVg5hV3kLqiz3+/mwWcveer8U4scsSn86wWapR6l+O13VncHLqN9ZvHQfHkaLx3o4eXOSK3qPGjOMOt79xeU6Ad3vLJYPr8GiuljV6sF0GdEn/0fHIK+1btd2qoPrzW3EHobewLm4sfAkm7Dbq8aT9zQyu+GKDji/6Q3C3oPFJ78uwt7L9Wx0P7xaNGfYbDiT5vif6Mes/9MzVjHTh7fRpKP3DXvS+ohpN4Z9YUEJ42y6AMyLo2wPr69cinoh/j29SAnxtSBXdRPJUYwD5Wpb3pLU4maCgIjvimJuz5dN27Cs3kXfcPpms1e/MGqGeWl0DLvZNJr1ZsFBWxQHEHsxDYj0JVl22z/fA8SRy4D6kGrLOMNzYOo3FvuII8WjI/E4YsrgLhYsbrLlix1NG3TDE2o2E87eNjYEUXWhKr9jfk2v007AId3n7uoed48Ak4SAJHjZ4Uy0OOMiGa9omfHQrCxRhUImRkAqWVhcdWydkSgJQULVo9jPQqgk8yRPjc62/5aGMMulo4u7/OV9GdjhtyIHQscnUoHJWLog6ghHhlCtCOTrgOu7ARfmO5lP5AMTCeUpwVsk+58++kQ2SNkkIqLn3vjZLHCX6idf/3xT/waUfpiP0pG/JDtui2kqBoSgj3ZRzVdUea1ky2WW168hqTEV5nXBkKY+BpwJftvcxS9A9dKEftJ4KVEfeC7l+/gyPqdjjjhEotuU/HjCbjEGJncLT7yT9amLy55LkTcOa35M1gvFCiIRf7ulYBdLPSG+EX+rOPU/ynXE1o4fEadYKDihM3mSg2TzRVPgWJglgvnidNf4MQPHnO8LyySXWLjopmnG4esviqS0loowjjPKvb6aC3ZpNsfJNwm4H0qfzORU/j6b1+zL2fx4NRwLwouQWuqS/1bWSN4uGFS5AuRYWuparJrCOZ3t0Po7wE/MbjathtN1qj3bKJm9IZjdrvbLBO5F0v4k/izZyenhe2j/Cw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdbk6q6En73V1iuR8sBFEGsmakKFxUV71dedmEIiHKTgKC/fgcdXTprZp3Z50nT6XR/faHz5RUbnlttAoxRFDuBX1Tlt9I/sGbxNGfAikGzVoU1BLoiWAhVWM40eMusV2lGKBVVjBOk+jg2/PitRGS1Ci1UGHrGMM1ao1nnXlimqpeKCxRhYpqovNClYua5Pm5e3L6VkshvBgZ2cNM3PISbMWxOgdZvEs2mccNUen+9orw4jN63cRw2KQq+mAgi14UvMPCoV+pJ59XEzalj+0acROjDp4nfSh9n0zR9SWsvQWRTVZqmKVqgiI6JHftX6b1wO4xM1beC61oy/MB3oOE6ZyMHpaF4G5hF4NpB5MRb7xvTDMXQuekKymAFMqz/q0T9dnBB90NLTyAjbFTw1mBuxibIQhHyISrOJ+pb6dfPKng9O4sMH1tB5OFP6/8GCflH5AYhMiv4FtkN3c8tfpGu91cEm6oP3QQ7RzTI2yQ0IMLFUYQsJ+s7mDSfiYuX8hczfOswBP9LSV6pR5wENvVFZmTHRjj+f+r1WKurlYXhJujd3Az9NIrj2AyrDb5BeccumC5lmtHttwuER+UrqHupP9afG/XeVx+HgH6QAEWFHW+43wWCyLOzATQyqC43IyFgww6KDHleXfBhnwnP7GFSV5aOMRqMeQLMtI6Gmkq4fPYtY68VOlun7ojlyBsmPWdxpgd+bX5QyhvHX/P9APM06YFso8/XEh+zHD0x1Ho2yDY0lyJFreKyARJ1vOLHOsesCo59ED3KmdTrKdAXYuZt12+/Y3qMIY+rh06XIPP/qzotyEZs3BdSPiks8nnG6F1TVaksSxJAkg1SVQS2KvbPYCDa+8N277SFlBbBeN4CMjhpE5DK9lpejMc9JTUXC1dfqK2WqE3YtAPWcoFsyEq2kPVVlzaWeriutmh9KormahJsat3Q7OzTzhYOtJmWDmbqSdsp2WCm0MuLzM7I+qztNGY4m9cKy50oaBMlldOLR1lJtwN9OQnXcyGFZ2WsAbYNmLkibbXOzFswsDbZwp3S18D+Ihe3mrRYaJkyA6OCaA8WJLaZ1NJD6JnhxnO3D8Y7xPjMbC9Om7ab6Gdlp0lKW5oe2lN1U5PHShdM1vPNcrE3lq1jAXYGYHPzSEpsrILU1hupPF53e4Gubo9wAMaKKI4BSRcNNLXdBUFbBBoLnOws7UQukMxWSnWruFAW3Da3OjmHFTbatGswjQaz7i+50YGTFb+s95LNbqttV61huTc1j3MhFs5rfCwfOcNhYBZa45XSiXuZ1RlPC5uRnK1gp2zaXco9C61I47sgOp+2rmZP4iU3xKeNY1lLcTVkXd5ytdoktFwrPOHyLBjvI5oTUa1KrU/HXlwAtiYC0N7Nd+JYExt5Uk01Ha810QAtJU7AeVeNe9XFods5unBdA0HWWw53+4/CmHKqiFQ6VkhbKYWGDMy8CJ3pXGntwFy07Ui0lZY4hjIYr9Veuib5mneI8uc8ti55tBURKDUdcEKnUJvTQjyMpywLTr4491vCVjtkS5PzaP6AlP50ELKphgeWry+DveY50TxKpvNeb9DPNrOkvd+RWWXR096xpheU4z4EzqA32+7lQDZG4Xodh2UfRjBWQ09Ts/NQx7uGs/HobrnOiCNahnx17m3SedtQ9F5kT5leZ+KParxQwIl16njlXSNdlmdTLuRNybfk04nSowUdgKAlTOoHM6tW99t52udSqwv2G6M6yFxBPAlKT5/BdDLuLadeuV6oH/t9jz7PKHYQDtNpO2WV8bhcM8VZZ4bDyFknDTuLhr5ZXRsxd9TpBeeE7l6oJvsZG9YWtkeKNTqaIa+NCmN2BXXP5kPYpSbUESi81Vfbp83ZOIfeEF4H6OfpcBde5wf1OFmeRs+NdExJtyIY35b5BaTKxRa5FYz47wQmlzhmxbqoNsOcBeEY+XHpPT+Vk5dmQiiOYzbJlXFdKxzNKTItiVydkxotUaFZmmnRgOYFgZZ4+cZyrig+QZQC33JyXzmPu95SfwcIvSZGvomiyjFI4Bbh0l8s5vkqqv6EXL+Bj9EsIDyRVoSayHMyy9JyQ6ySvmbrXJ0XW4pYbzE8VyoOgnjoDyNgxSh65ojsE0ecIOiEDsqJZH6bYnKd4pik5GAck9hlXo7Gi48SQjWjnO01q2yjTmHHC12UA6a8wExc9BJuw0uCKHz9rVYMiC/SiTL7R51Kl5v+2xA/792yQXRMJ1fAeTwiIhVFXxBe9hbM90Hzj0HfzIPEdPILnaQ2jhx4RfK89btj8la5twuJ6gb5rvlZ8GSV+hzQ3ZF5dOC95+/PAcImCd94v5XkYLwcXpLjMbkUgc+5VETMUwxF89QUwYQQotMs2COfupugfsRF76g/eb7Ln/El8dafxuR79kjLFC/LHzxEpgjnDxGVtHz201fOk0uStxhl8VcyySXvlRzxX580sAlzPSIekZ80iMzf5frC1oMfEmc+wBzfzlc58zx90xQwIGYdMsSC6NH4Vwa+cv4svCf5jiUm3bRJYvT9TjGfTm8lA8Ig8WNVLl0EjxPzgjM+haj5W+kPMxfu90HmM/wtmV9p/SmZXZ5Ruus6/1u54lzaBSJyCjsXLG+ljLxLiXPffpjQHwD/GNKAURhRAIKkgE9DunVP4FMk73+I/5Q85PTz9/D+Lw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082454</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95022CED08E19C6E0401F0A05990969</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E69037541DE038AAE0401F0A059918D0</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13602d08-9c94-45c0-9151-f446f7597ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9225d8a-71fc-436d-a964-369cbdfcdd97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00012_PYLD_UVTC_UserName_TokenType_CaseChange_Validate_Email_200_OK_P2" searchProperties="true" id="f73388dc-658d-4171-a0db-6e3e2f8795eb"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950212A3DE55E6CE0401F0A0599099B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E69037541D3A38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950212A3DE55E6CE0401F0A0599099B</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F951077A840EA0E0E0401F0A07995550</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F951077A840EA0E0E0401F0A07995550</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4jx1j2dgh9gRmKJBiJiEJkN62Lx0hy6DUlo0kGye//komdoB8XHonmWG0Xu2e3T060gWHSWz7fc4xEySlWjDs6r8Rtu1lu31ueG7HNpxldG5A24IGwFbnzMEuRBjqWsB5jgPKBaSiq9vAcgzgGpazAMC3XR+A1hlwfunad8y4DC1dWkDXyiSm3K/SdvWcUT+FnHCfwgRzXyB/3r++8qWnD2tMeu9ih7JKyHprITLfNFErxAjHMWqhNDEvzAOfi5D7c7KiUOQMP+cMeVd/3rvdblvbditlK9MGAJjAM6VPyMnqs977VG/GYUCjdLceQJpSgmBMnqACdY3FOg21frxKGRHr5J3QlmkBFdrAJTKQ5dDPuvmSoEJ3YqQDkIxDg6+hVQeb4QgzTBHW7mdBV/982gR3excMUh6lLOFH67+DhGmB4zTDocHrymp0p0d8o129C4z8gKI456TAU0WTTKLn2i3DESmvCJfkC7lWjV8rufwnNcsw+puxXJj7WCV0843uDMkKc/F/ZrY/r12U7zDOce9p84uN7WixvZ2wu+FdPhTWl9n99b3jBN0Kwr7zDlQz7uf1MVkbbj1v6ntZsvz1FG3Yw2N/8TO/A2UxvDZhdJ8FYVaejccDSWry4E2e7JvVYvrj+7QczUbkcm23xz+S4UORJOfbWfFPZ7T6tOCjSdDOyodJNJ1OTXpDngp3PTtvd5bZ43I4ue1/cwZnJfhzBztl+iWeXs2mm/v8cnIzuQrGpX1nti2W2kXHG0efwE+88b5E39b2dGBF43zIRt2XmvZrODTWkjDPlw8YiXqp6BEMtUs5Lyg+lhdlIaERVa5+pjSKC0yF3lO7lLT4uRQgEvpymLv1pedaoNPpnztg1Acj+ecA6xL0QcfzXNcFtQbtUBxBHKQ0IiqXUtkdfz4GiBKfYxpiZhRpjtaY6x9EHEIBtYDO5OFIKceLVKq49YC2diag9+hS+qeN0g1lXhK2PV2bpuKG3rB+JDA7lO72gXTPMCIZwUrfFcG5ZDgXshcbWOQitloFbFGcyxuAKRH2befcNTlJshgrpGaShnmMW9k6qzpj8t2vbUDEK+tstKgO3rt1HX+rWyB9QqIcuKrlK5ZjxK/uIMd360LeL/hsv+A6fD8PiTpfsp+CEbRDcvjphSaKHw1HZEW/B/PfVo27cT95++ud5gegzON+NInCguylrS9TeT9I9ejV09zA1qaVF0Veza+jlJHJ8KYUSMucY5RLeXtcpH8wNZsQ5km3S4P6KHNjP8SXizWdCyhwItmmVcsTnhZzzNXTIpDHpDz13XKQUvZN4FK8ZRvE8gWiEH/4SEE+Un7SfCt/tikLX8b1Rqy9PLJO+Z4QhK7USt0jj++QAqUyLJHCl7L94G8FeCv5obFpcoNFSDYtc4Hf/6IpRevqEKE0pyIY6pVhX2UrnOIxw/6L06swlZI/X80lf/dq/nF9NZd6l0C98SX/7WyQii4I6+oFUGHp6qV8acrkdLWn6s8Aj4Qd2Jbdbw9Hrjs6GzTC7noe8LyvTQMPKum9Mr+27PX0+Dz0/gU=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8uwqYiVpGoQVFRccePmLRxGQNlk2PTXv4NGT5KTnC/vd6XT09P99ELPM8/Y8Fy2DTBGUewEflmRXir/CAy/YxFD1xqsiWp1EzI1AUKuhmjDNBoMzbLsrlJWME6Q4uPY8OOXCkszXI0Wagyv0XybbbS55lOT5vVKeYUiTEwTlSe6Us4918ftq9uXShL57cDADm77hodwO4btBVBHbaLZNu6YKq/PN5RXh9GrHcdhm6Lgk4kgcl34BAOPeqY+6DybuL1wLN+Ikwi9+TTxS+XtbJZlTxn3FEQWxdI0TdECRXRM7Fi/Kq+l+2FkKv4+uK07hh/4DjRc52IUoFQU24FZBq4VRE5se9+YZiiGLkzXUA5rkKn7vyrUbwdXdD+09AFkhI0atg3mbmyO9ihCPkTl5Vx5qfz6WQVvZ7XI8PE+iDz8af3fICE/RW4QIrOG75Hd0f3c4hfpen1GsK340E2wk6Jx0SahAREuTyO0d/KRg0nzmbh8LX85x/cOQ/C/lOSZeo+TwKa+yIzkWAjH/0+93tfqZmVluAl6XWc2vlhSMtT4y9ay+VjUpRnk6qlDv1whvFe+gXqU+m39uVEfffV2qJtxl9UuNcNwt2mazS2wU1oBu/VUlAJZOsT7znqkw54bM9veIesNfT5zxczseQd3ixDY5GqVj6fmpTlbN0ut1uEwEaWZkK+ldAJ57nKqOq1zmrR2nj2JNGfMm1kjy3qdUDtVtT7O7OU5Pmbn0z6cS6thrz72+6k51neGXgJ7L+QH3CiKO54H54e4u3z5HdP7GIq4huh8DbL4v2nQgmTExmPRKSbFnnyeMXpVFaVTlTodgDoWyBQRWIo4uoCxaB1P9tHpCRktgtmyCyRwVucgk6yttJrNhnJmrlauvlK6XVGd17M+2EolsiHJ+UrSNwPaWOvhlu3S+kIUzc082HGD0Owfs74Nx6qmZmNNOasHOR9rMr2+yqycrC/qQWUm2pIrrQ+ioM7lTMquHiU5s8f6eh5ul0IGL/JMBfUeYJZyx1b7mrdiIDe34UEeqeB4lYu22lmt1FzWwLQkWuMViU3rdPUQema481z7nfE+Ma6ZvdV513MT/SIf1I7c6yxOvYWy46SZPADz7XK3Xh2NdTctwf4Y7O4enYZjbILM0luZNNsOhoGu2Ckcg5ksijNA0kUDVekNQNATgVoHTn7pHMRm0DG7GTVgcakquL3m5uycNtjo0a7BtFrMdrRuTk9NSfar+jDZHWzV3nQn1eHCTJdCLFy2OK2mTcNhYB7uZxu5Hw/zfX+2KO2mUr6B/appDSj3InQjlR+A6HK2XdWax+vmBJ93zn6/FjeTusvvXZWbh3t3H55xVQtmx4huiohjqe05HcYlYKkiAL3D8iDOVLFVJNVUstlWFQ3QleMEXA5sPGRXp0E/deGWA0E+XE8Ox7fCmFImi1Q2k0lbyaWWBMyiCP3FUu4ewFK0rEi05K44gxKYbZVhtiX5WvaJ8uc8dq95tGQRyJwOmkK/xC1pIZ7Ei3odnH1x6XcFWz3la7Pp0fwJyaPFOKxnKh7vfX0dHFXPiZZRslgOh+NRvtOS3vFAZtWeXgxTTi/J6TEEznio2UcpkIxpuN3GYdWHEYyV0FOV/DLR8aHl7Dx6UG0w4pSWIM8uvV227BmyPoysBTPsz/0pxwslnOzPfa96aGXrqrZohrzZ8ffS+Uzp0YoOQNAV5o2TmbPs0V5mo2a2H4DjzmDHuSuIZ0Ee6hrM5rPheuFVG6VGOhp59EWj6uNwki16WV2ezaqcKWp9DYeRs01aVh5NfJPdGnEz1elV0wndo8AmR60ecivLI8WakmHGq9PSrL6BumfxIRxQcyoFMr8fKb3z7mJcQm8CbwP083R4CG/zg3o/WT6MnjvpWJBuRTC+L4sLSJHKXXIrGPHfCUwhccza/qraDgsWhGPkx5XX4lRBXtoJoTiO2SZXxm0tNwWa4xt1RpK6XAsAma7TTJcGdEMQmJZE31nODcUniJ3A3zuFr4LH3W6pvwOEXhsj30RRLQ0SaCNc+YvFIl9lxZ+T6zfwMdICwhNBqyNxbKsh002Z6QCZkSW+wXXEusABvisTtjcO4ok/icA+RtEHjsjQHzjiHEEndFBBJIvbFJPrFMckJScjTWKXeUqNJx8lhGpGBdtrs/VWg8KOF7qoAEx5gZm46Cm0w2uCKHz7ZWsGxFfpXNb+URad603/bYif9+7ZIDqmUyjgIh4RkYqiLwgvew/m+6C590HfzYPEdIoLnaQ2jhx4Q/Jx63fHFK3yaBcS1R3yQ/Oz4INV6nNAD0dm6sBHzz+eA4RNEr7xei/JyXg6PSVpmlyLwBdcKiLmKYaieWqBYEII0VkLjsinHiaoH3HRB+pPnh/yj/iS2PYXMfmePdIy5evyBw+RBcLFQ0QhLZ//9JXzwSXJW4zy+CtZxyXvlQLxX580sA0LPSKekp8siMzf5frC1js/JM5igDm+VawK5nn+pilgQMw6ZIgF0XvjXxn4yvlH4SPJDywx6aZdEqPvd8rFdHqpGBAGiR8rUuUqeD8xrzjjc4jav5X+MHPlfm9kPsffkvmNOlqQ2eUZlYeu87+Va861XSAip7BzxfJSycm7lDj3rXcT+g3g10OaA38b0h8jef1D/KfkXU4/fw+v/wI=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082459</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951077A840FA0E0E0401F0A07995550</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E69037541DE038AAE0401F0A059918D0</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13602d08-9c94-45c0-9151-f446f7597ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9225d8a-71fc-436d-a964-369cbdfcdd97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00013_PYLD_UVTC_UserName_TokenType_CaseChange_ResetPassword_200_OK_P2" searchProperties="true" id="e0466b30-a393-4485-a3fb-c1b98b77dd64"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950212C1B40DAE0E0401F0A059909A5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E69037541D3A38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950212C1B40DAE0E0401F0A059909A5</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950D2062129C5D0E0401F0A0799566B</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950D2062129C5D0E0401F0A0799566B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdU+I8FL73V3TqpVOallJpR5hhQbQq6AKrrjdOTFOItkltUj72129SLF+iL/vOMMPk9OSc55zz5EnOOExi229xjjNBGNWCTkN/dmz71LOgZ7jAqRoOBLZRR1XbsDwcIuTUPQBruhZwnuOAcgGpaOg2sBwD1AzLGQHg2zUfuJWaC5507R5nXIaWLhWga/Mkptwv0jb0PKM+g5xwn8IEc18gf9jq3fjS04clJr15tkRZJMyaEyFS3zRRJcQIxzGqIJaYZ+aWz1nI/SEZUyjyDH/kDHlD/9g7m80qs2qFZWPTBgCYwDOlT8jJ+FhvHpWbcRjQiC3XbUgZJQjG5A9UoHpYTFioteIxy4iYJF+EtkwLqNAGniMDWQ491s11ggLdgZG2QGYcGnwCrTLYAEc4wxRh7dcgaOjHh01wuXeUQcojliV8Z/1vkDCd4pilODR4WVmJ7vCIe9rVPMPIDyiKc06muK9okkKEuXaX4YjMbwiX5Au5Voxfm3P5IyXLMPqXsZyZm1gldHNPdzpkjLn4PzPbnNcyyj2Mc9zs9R9mwn3qkdF7Pb3rBz2zfk16Dz+dhDcKCJvOS1CrcX+sd8m64tbHptidD11zft8OL27O86p3cRX+7LxlZu9+Lvp3J05q2/HlxcXdVX20iLJo+N6+zB9P0y6HrtOdVJMxfbh6uj//LRsXHT11yeD2/HXUeYyiafXpN3t8iS5PHq0r17UeT/tVZg2d3snCfU+dZHJxy1piBl/ZtfV0id8u395q0d3kCti9/nUrmh0Fs3H317TVzh9m9ZvF4CE5DRrrmjZr2DaWkjDMX14xEuVS0SPoaF05Lyi+lxdlIaERFa5+qjSKC0yF3lS7lLT4uRQgEvpymMt116uBjg1c27K9dq0DzoEDrC5ogVPPq7nuj1KDlih2ILYZjYjKpVR2yZ/vAaLE55iGODOmLEcTzPVvInaggFpAB/JwMMrxiEkVt6wJn3jiz8urwolAxGvjMX/JXpCu9Zm4pbdZKxI429bu6pZ2DzAiKcFK4BXDuaQ4F7IZ73Cai9iqTGGF4lxeAZlSYd926jWTkySNsYJqJizMY1xJJ2nRGpMv/20DIl5YB+ej4uR9Wdjut7IH0ickyoGrWn5gOUf86RJy/FpZyNcFu5sFl+FbeUjUAZMNFRlBSyTbn9Y8UQRZkURW9NwePlsl7pX7wds/7zS/AWXu9mOVKJySjbTlbSovCCkfzXKa77DyXsmn07yY36mSxkyGN6VCWuYQo1zq22LE3jA1VyHMg66XFeqdzCv7Nr5cTOhQQIETyTatWB7wthhirt4WgTwn80MfLlspZd8Enot9tnYsnyAK8bevFOQj5SfNd/JvxrJwPa49sTbyyDrlg0IQOlYrdZEsviAFYjIskcrHss3g+wLsS75tXDV5hUVINr3kAn/9RVOS1tAhQiynIujohWFTZgucYpFif+30KUwh5R9385x/eTc/9m6GUvASqK98yX87G6SgC8K6egIUWBr6XD41ZXI63pD1D4C7yi5VvW39cECndb5W9prnAa+15vJWJc1P5s+WjZ7unofmXw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_08254</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950D206212AC5D0E0401F0A0799566B</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E69037541DE038AAE0401F0A059918D0</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13602d08-9c94-45c0-9151-f446f7597ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9225d8a-71fc-436d-a964-369cbdfcdd97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00014_PYLD_UVTC_UserName_TokenType_CaseChange_UnlockMe_200_OK_P2" searchProperties="true" id="e8d58ded-a5df-4053-8eb9-24a283dd8164"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F951091E4C987B21E0401F0A05993966</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E69037541D3A38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F951091E4C987B21E0401F0A05993966</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950D2056C00048FE0401F0A059927C1</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950D2056C00048FE0401F0A059927C1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZhb9o8EP6+XxGlH6eQBAiUqCBRoCwrpVuhXbcvlXEO4jaxwXYC7a+fHRoKlPZlr4SEfDnfPXf3+LHPBErist8WArgkjBpBt2k+NLxw4rl1sPDpdGpVoYKt0ykOLexWPdSY1Ke1Sc00AiFSCKiQiMqmWXbcquV4llsdO45f9nzXKdUrjT+mcQdcqNDKpeSYxiqJqfDztE0z5dRnSBDhU5SA8CX2R+2rga88fVRgMltna5R5Qt6KpJz7to1LIWCIY1zCLLHP7B2fs1D4IzKjSKYcXnOGomm+7l0ul6VlpcT4zC47jmM7DVv5hILMTszWl2IzhAGdsvW6gyijBKOYvCAN6gpkxEKjHc8YJzJKPgjt2q6jQ1uwwrp99MS03xLk6I6MtAOSC2SJCLlFsBuYAgeKwbi9CZrmyXETXO8dc0TFlPFE7K3/DRLQDGI2h9ASRWUFuuMjHmhX6wywH1Acp4JkMNQ0mSMMwvjBYUpWAyIU+UJh5OM3VkL9SMEywP8yljN7G6uCbh/oTpfMQMj/M7Ptea2j3KE4hdbIXTxlzoJ1hn/mqyTs2p349ulb//uid9rMIWw7r0Ftxv263ifrhluvm+Tvideu9etu1B3+/j0J6f3zr/i2Gz99LZ/3BlO4bjjd4d3Aqw5qy6+9WmgH1w1y9+3ipjfu38/obPxYifDt5dVlL7j8wki1m1wuv46dcf1XVhstvSHv98dZf/Lc/tW5vMFywrKLoXx8ZPe1SYJ71Z8dToPBCA+FHcnvIurN73nlZ5nS6y/1cfsRBr2+XIlh3L3DaXDbfKtpu4ZdYyEJo3TyCFgWS02PoGtcqHkh+bm8aAsJrWnu6s+1RgkJVJotvUtLi58qASKhr4a5Xl80PKdbdrxaR422enrRc6qOe+G0Ha/RKNc7bqFBaxR7EDuMTonOpVV2zZ/PAeLEF0BD4FbGUhyBMD+J2EUSGQG9UYeDUQFjplT8KVrV4kqV8DCWLll48PICNZq9cNMYMnlNr3l7KoHvSndlR7pvAJM5Aa3vmuBCMVxI1YsFylIZu6UMlSik6gbgWoT9cvXUswVJ5jFopHbCwjSG0jya552xxfq/bCEscqsiWH7wPqxr/1vRAuUTEu0gdC3noMYIB+4gpyjk44Jr2wUX4dtpSPT5Uv2UnOA1kt1PbzTR/NhwRFX00Bk9bLiwcT96+/ud9ieg7P1+bBKFGdlKW1ym6n5Q6tEqprlApUUpzbI0n19dKyNX4W0lkK49ApwqeXsesyeg9iaEfdTtskG9l3lj38WXyoiOJJKQKLYZ+fKIp8UIhH5aBOqYrI59t+ykVH2TsJKHbJ1YvUA04k8fKdjH2k+Zf6i/JePh27gOxNrKo+pU7wlJ6Eyv9D3y/AEpMFNhiRI+xreDHwpwKPmucdPkDRap2DRJJXz8xdCK1jQRxiylMuiauWFbZXOc8nkO/pvTuzC5kr9ezSvx4dV8f6XuiggSZG58yX87WySnCwZTvwByLE1zpV6aKjmdban6K8A9YXedhturdhqn9fOyuy3slUbtjcs7lbTemd9btnq6fx5afwE=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_08259</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950D2056C01048FE0401F0A059927C1</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E69037541DE038AAE0401F0A059918D0</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13602d08-9c94-45c0-9151-f446f7597ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9225d8a-71fc-436d-a964-369cbdfcdd97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00015_PYLD_UVTC_UserName_AccountID_urn_namespace_CaseChange_200_OK_P2" searchProperties="true" id="3cff50ba-c6bf-42e0-bf84-c9f480024bab"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
def node_AccountID = tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1").toUpperCase();
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",node_AccountID);

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F9502359252B1B42E0401F0A05990975</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E69037541D3A38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F9502359252B1B42E0401F0A05990975</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950212AC6D629DFE0401F0A059909A1</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950212AC6D629DFE0401F0A059909A1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EH2fr3B5HinjS2yIXYEqLsmuk0kmwyWTycuUIrdBG1t2JBkIX7+SiR0gJMtsFVWU2q3u091HRzrjKE2coMc5MEEyqoXDjv77MfLj9iPEho3i2HBPopbhW1HbiH2w3PjUazstW9dCzgsIKReIio7uWLZrWJ5huxPLChwvsL2mdeI96NodMC5DS5empWurNKE8KNN29ILRIEOc8ICiFHggcDDuXX8LpGeAKkx692yDskzIunMh8sA0cTMCDEmCmzhLzTNzx+cs4sGYzCgSBYPXnBHv6K97l8tlc3nSzNjMdCzLMi3flD4RJ7OvevdLtRmikMbZZj1ANKMEo4SskQJ1DWKeRVovmWWMiHn6QWjbtC0V2oAVNrDt0q+6+ZagRHdkpB2QjCODz5FdBRtBDAwoBm06Cjv61+MmuNk7YYjyOGMp31v/GSSgC0iyHCKDV5VV6I6PeKBd3TPAQUhxUnCygBtFkxxh4Notg5isvhEuyRdxrRy/tuLyRyqWAf6TsZyZ21gldPNAd4ZkBlz8n5ltz2sT5Q4lBXQHAy+MTyfrm1EjpMxzFlbxdPv40LgpzjslhG3nDah63K/rfbLW3HrdNPfcpwja7vzyuu1coew+GRRrO1xPxekITq8W908/L8mwccejS+b6/otoPT7Q6GI44H1nhfG9O/+7cU7cNH4Y/fwysbCb4AgtTtZX6+LuHv2ckP4auX1zeTX9MbksistsPfz7tj1FYjlYJSn17V+3v9qikZIff2FmXzusMeldTOeX+ZeGf+8tz8d308Hk2RZT3B+5nbeatmvYNVaSMC4e/wEsqqWiRzjULuS8kPhcXpSFREZcuga50igugAq9q3YpaQkKKUAkCuQwN+sL37Mc2+kNWsOW4w8vzi3Xsi+snuX5vuX37EqDNij2IA4yGhOVS6nshj+fA8RpwIFGwIxFVuA5cP2TiEMkkBbSkTwcGeUwyaSK5zy243br5TR/Wdt5kks9FehJOEzXbjLxnX5nvVgA25Xukx3pHgEmOQGl74rgXDKcC9mLZ7QoRGI3F6hJoZA3AFMiHDjuqWdykuYJKKRmmkVFAs18npedMfnm3zEQ5qV1dD4pD96Hde1/q1ogfSKiHLiqpQ9yjHDgDrKqQj4uuLVdcBW+V0REnS/ZT8EI3iDZ/fRGE8WPmiOyot+D8e+aC7X70dvf7zQ/AWXu96NOFC3IVtrqMpX3g1SPbjXNZ9R8bhaLRVHOr62UkcnwphRI2xwDLqS8vUyyJ6BmHcI86napUe9lru27+Aoxp2OBBKSSbVq5POJpMQaunhahPCarY98tOyll3wSsxCHbIJEvEIX400cKDrDyk+Zb+bfMWPQ2rgOxtvLIOuV7QhA6Uyt1j7x8QAqcybBECl/GtoMfCnAo+a6xbnKNRUg2PRYCPv6iKUXr6AjjrKAiHOqlYVtlS5ziJYfgzeldmFLJX6/mFf/war6//jaWepcivfYl/+1skJIuGHT1AiixdPSVfGnK5HS2peqvAN8J+4nnO57Tt/uusyvsba9u4E4l3Xfm95atnu6fh+6/</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8uwqYiVpGoQVFRccePmLRxGQNlk2PTXv4NGT5KTnC/vd6XT09P99ELPM8/Y8Fy2DTBGUewEflmRXir/CAy/YxFD1xqsiWp1EzI1AUKuhmjDNBoMzbLsrlJWME6Q4uPY8OOXCkszXI0Wagyv0XybbbS55lOT5vVKeYUiTEwTlSe6Us4918ftq9uXShL57cDADm77hodwO4btBVBHbaLZNu6YKq/PN5RXh9GrHcdhm6Lgk4kgcl34BAOPeqY+6DybuL1wLN+Ikwi9+TTxS+XtbJZlTxn3FEQWxdI0TdECRXRM7Fi/Kq+l+2FkKv4+uK07hh/4DjRc52IUoFQU24FZBq4VRE5se9+YZiiGLkzXUA5rkKn7vyrUbwdXdD+09AFkhI0atg3mbmyO9ihCPkTl5Vx5qfz6WQVvZ7XI8PE+iDz8af3fICE/RW4QIrOG75Hd0f3c4hfpen1GsK340E2wk6Jx0SahAREuTyO0d/KRg0nzmbh8LX85x/cOQ/C/lOSZeo+TwKa+yIzkWAjH/0+93tfqZmVluAl6XWc2vlhSMtT4y9ay+VjUpRnk6qlDv1whvFe+gXqU+m39uVEfffV2qJtxl9UuNcNwt2mazS2wU1oBu/VUlAJZOsT7znqkw54bM9veIesNfT5zxczseQd3ixDY5GqVj6fmpTlbN0ut1uEwEaWZkK+ldAJ57nKqOq1zmrR2nj2JNGfMm1kjy3qdUDtVtT7O7OU5Pmbn0z6cS6thrz72+6k51neGXgJ7L+QH3CiKO54H54e4u3z5HdP7GIq4huh8DbL4v2nQgmTExmPRKSbFnnyeMXpVFaVTlTodgDoWyBQRWIo4uoCxaB1P9tHpCRktgtmyCyRwVucgk6yttJrNhnJmrlauvlK6XVGd17M+2EolsiHJ+UrSNwPaWOvhlu3S+kIUzc082HGD0Owfs74Nx6qmZmNNOasHOR9rMr2+yqycrC/qQWUm2pIrrQ+ioM7lTMquHiU5s8f6eh5ul0IGL/JMBfUeYJZyx1b7mrdiIDe34UEeqeB4lYu22lmt1FzWwLQkWuMViU3rdPUQema481z7nfE+Ma6ZvdV513MT/SIf1I7c6yxOvYWy46SZPADz7XK3Xh2NdTctwf4Y7O4enYZjbILM0luZNNsOhoGu2Ckcg5ksijNA0kUDVekNQNATgVoHTn7pHMRm0DG7GTVgcakquL3m5uycNtjo0a7BtFrMdrRuTk9NSfar+jDZHWzV3nQn1eHCTJdCLFy2OK2mTcNhYB7uZxu5Hw/zfX+2KO2mUr6B/appDSj3InQjlR+A6HK2XdWax+vmBJ93zn6/FjeTusvvXZWbh3t3H55xVQtmx4huiohjqe05HcYlYKkiAL3D8iDOVLFVJNVUstlWFQ3QleMEXA5sPGRXp0E/deGWA0E+XE8Ox7fCmFImi1Q2k0lbyaWWBMyiCP3FUu4ewFK0rEi05K44gxKYbZVhtiX5WvaJ8uc8dq95tGQRyJwOmkK/xC1pIZ7Ei3odnH1x6XcFWz3la7Pp0fwJyaPFOKxnKh7vfX0dHFXPiZZRslgOh+NRvtOS3vFAZtWeXgxTTi/J6TEEznio2UcpkIxpuN3GYdWHEYyV0FOV/DLR8aHl7Dx6UG0w4pSWIM8uvV227BmyPoysBTPsz/0pxwslnOzPfa96aGXrqrZohrzZ8ffS+Uzp0YoOQNAV5o2TmbPs0V5mo2a2H4DjzmDHuSuIZ0Ee6hrM5rPheuFVG6VGOhp59EWj6uNwki16WV2ezaqcKWp9DYeRs01aVh5NfJPdGnEz1elV0wndo8AmR60ecivLI8WakmHGq9PSrL6BumfxIRxQcyoFMr8fKb3z7mJcQm8CbwP083R4CG/zg3o/WT6MnjvpWJBuRTC+L4sLSJHKXXIrGPHfCUwhccza/qraDgsWhGPkx5XX4lRBXtoJoTiO2SZXxm0tNwWa4xt1RpK6XAsAma7TTJcGdEMQmJZE31nODcUniJ3A3zuFr4LH3W6pvwOEXhsj30RRLQ0SaCNc+YvFIl9lxZ+T6zfwMdICwhNBqyNxbKsh002Z6QCZkSW+wXXEusABvisTtjcO4ok/icA+RtEHjsjQHzjiHEEndFBBJIvbFJPrFMckJScjTWKXeUqNJx8lhGpGBdtrs/VWg8KOF7qoAEx5gZm46Cm0w2uCKHz7ZWsGxFfpXNb+URad603/bYif9+7ZIDqmUyjgIh4RkYqiLwgvew/m+6C590HfzYPEdIoLnaQ2jhx4Q/Jx63fHFK3yaBcS1R3yQ/Oz4INV6nNAD0dm6sBHzz+eA4RNEr7xei/JyXg6PSVpmlyLwBdcKiLmKYaieWqBYEII0VkLjsinHiaoH3HRB+pPnh/yj/iS2PYXMfmePdIy5evyBw+RBcLFQ0QhLZ//9JXzwSXJW4zy+CtZxyXvlQLxX580sA0LPSKekp8siMzf5frC1js/JM5igDm+VawK5nn+pilgQMw6ZIgF0XvjXxn4yvlH4SPJDywx6aZdEqPvd8rFdHqpGBAGiR8rUuUqeD8xrzjjc4jav5X+MHPlfm9kPsffkvmNOlqQ2eUZlYeu87+Va861XSAip7BzxfJSycm7lDj3rXcT+g3g10OaA38b0h8jef1D/KfkXU4/fw+v/wI=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082513</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950212AC6D729DFE0401F0A059909A1</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E69037541DE038AAE0401F0A059918D0</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13602d08-9c94-45c0-9151-f446f7597ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9225d8a-71fc-436d-a964-369cbdfcdd97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00016_PYLD_UVTC_UserName_UserID_urn_namespace_CaseChange_200_OK_P2" searchProperties="true" id="74d4ed0f-1614-4d2a-8ab3-d5ef6a5d7fed"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));

def node_UserID = tC.getPropertyValue("NODE_USER_ID_FULL1").toUpperCase();
myTC.setPropertyValue("NODE_USER_ID_FULL",node_UserID);
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95107651C663F80E0401F0A059930AD</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E69037541D3A38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95107651C663F80E0401F0A059930AD</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95022D67526FFBCE0401F0A079902E1</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95022D67526FFBCE0401F0A079902E1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E69037541DDF38AAE0401F0A059918D0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVfZcuq6En3nKyj2I0U8YDCmklTJA2DAgLEZX04ZWR7AEx6Brz8yCWySneybc59ArVb36sGtpefE8D26C5IExakbBlVZfKn9QzGkYXRaTKNJ0+0Gw6Fdo8Mau0ab3TUNi4EsQ5u1qpwkGZKDJDWC9KVGk1SzQXINitVJtku3uhT71KY621p1ieIEm8YqT2StevK9IOle3b7UsjjohkbiJt3A8FHSTWFXA8q4izW7xg1T7fX5DeXVYfzqpGnUJQj4ZCKIPA8+wdAnnokPOs9m0tVcOzDSLEbvPs3kpfZ+tiiKp6L5FMY2QZMkSZAcgXXMxLV/1V4rt8PIlAMrfFsLRhAGLjQ892KUoBSUOqFZBZ4dxm7q+N+YpgiKLE030Ak2IMUEv2rEbwdXdD+09AFknBiNxDGom7E5slCMAoiqi7n8Uvv1swq+ndVjI0isMPaTT+v/BgkFOfLCCJmN5BbZDd3PLX6RrtdnBLtyAL0scXM0KdskMiBKqrMYWe5p7Ca4+cykei1/9ZTcOgzB/1KSZ+IRJ4ZNfJEZ0bVRkv4/9Xqs1ZuVpeFl6JUsIBQGQSLI0a7YUup+cJjpQrsn98KXK4RH5TdQ91K/rz836r2v3g9lnFYwa3e+WejDlhRYZ0UVtHy+dSZjO7YzrScchE1BZ1Z20LSNBTawxa326Wg6ZFRivDpuGWHmrPgOsGO3wu7ZnD7Qea5qnAbdk6R7qzEzE8m9orWNHujM+IXszeCBFs7FSHCAnM1Zn5xsSO9wzMCxVTRn5GarG+dNvxJSRjCk01Gqcs6CWMzqlvzyO6bHGMq4Ruh8DbL8v26RnGikxn0hlJPCwp9nil4VWRbqoiAAJNigkHlgy/z4Aia8fTg6B7fPFSQP1EUPiOCszEEh2htxqaojqTCXS2+7lHs9XpkzxQBsxAreEKXTUtyuh6Sx2kYbukduNZ431/Nw1xxG5uBQDBw4UXSlmOjyWdlLp4kukaurzD7h9UXZK9RUXzQrqz3PKXOpEIurR1EqnMl2NY82C66AF0lVANMH1EISHGWg+0sKNucO3EtjBRyuct5RhOVSwVkHswpvT5Y4Nl3obSPom9HO95wH4wNsXDf7y/Ou72Xbi7RXBKkvaMe+Ju+aoioNAe6I3Wp5MFa9vAIHE7C7eXRbrrEOC3vbKUR1MxyFW9nJ4QSoEs+rAKeLBIrcH4KwzwOFAe7pIuz5diiYvYIY0kmlznn99vrsHteJ0Sc9g+p0qM141Z4d26IU1LejbLd3FGfdm9ZHmpkvuJS7bJK8nrcNl4KnyFLX0iAdnayBqlV2M/G0hoO6aQ8J78L1YoUdgvhydjzFnqer9jQ571zLWvHrKeOxlqc055HlWdE5qeuheojJNo+aNLE556O0AmyFB6C/X+x5VeE7ZVJNuVA3Cm+AnpRm4LLH/Ugvj8NB7sFNE4Sn0Wq6P7wXxhQLiScKVcJtJVU6IjDLIgy0hdTbgwVv2zFvSz1ehSJQN/Ko2OB8LQZY+XMee9c82hIPpOYWtLlBpbkguXSaagwDzgG/CHqcoxxPK7Ptk+wRSWNtEjGFkkysYLsKD4rvxos40xaj0WR82ulZ/7DHs8oitVHe3Fak/BABdzLSnYMYisYs2mzSqB7AGKZy5Cvy6TLdJvuOu/PJYb1F8TNShCy98HfFom9I21Fsa9RoMA9mTZarJJl1Hvj1fadY1XWtHbGmEFji+Uxs4yUZgrDHzVtH80TTB2dRjNuFNQSHnUFPTh7HnzlptNVhMVdHK82vtyqtfDz2yYtOMJNoWmj9gpFUtd40eX2gJ1HsbrKOfYqngUlvjLSdb8ll2428A0dnB52Jmkvbx8Wa5WbEKrOKyqzh1rfZCA6JOZEDibXGcv+8uxiXyJ/CtwH6eTrchW/zg3icLB9Gz410aLhbEUxvy/ICksVqD98KRvp3AlNKXLNhXVW7UcmCkhQFae21PFWSl26GKY5rdvGV8baW2hzZZFsMJTJSswOARDIk1SMB2eI4qiOSN5bzhuITRCEMLLf0VfK4t1vq7wCh301QYKK4kYcZdFBS+4vFMl9VOZjj6zcMEqSHmCeyTYanRYZhKZZsgU6PpPkWXogM2e4BTuJr1UmYToNpDKwUxR84IkV+4IhzBN3IRSWRLG/TBF+nSYpTcjTyLPWop9x4ClCGqWZcsr0uzXRaROL6kYdKwIQfmpmHniInuiaISN5+6YYBk6t0Lun/yJpwvem/DfHz3i0bWMd0S4WkjIdHuKLoC8JL3oL5PujmY9A38yAz3fJCx6lNYxe+Ifm49btjyla5t0sZlaD9Q91w39V/fPzPk8RfQBGf83F3ZObug9sbc8dkFNOV11tFj8bT8SnL8+xaQ7akYjE2T1AEyRIaghnmU2c9PKCAuJsgfkRl76g/eb7LP+LLUifQUjwOfNxx1evyB+8YDSXlO0bGX8zpp4+kDy5x3lJ0Sr+SCR5+7pSI//oigl1Y6mHxDP8UYfw78K9sPfjBcZbzzw3sclUS1/M3TQFDbNbFMzCMH41/ZeAr5x+F9yTfsaS4m3ZZir7fqZbD7aVmQBhmQSqLtavgceBecabnCHV/K/1h5kod398Cp+Tbt8BaGWt49PlG7a7r/m/lhnttF4jwqcS9YnmpnfCzFjsP7IcB/w7w6xnfBH+b8R8jef1D/KfkIaefv4fXfwE=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZRU+o8EH33V3Tqo1OaFgrSEWYK2GtVUAERfXFimkKwTbFJAf31Nym2AqIf95thhsl2s3t29+QkZwxGoWk7jOGEk5gqXqehPvsoAMAyK5oPy1irVCplDQYg0KoYmMCoVnzrBauKx1iKPco4pLyhig8VDViaURkCYJuWbYJS2ag9qcoIJ0yEFi4loCqrKKTMztI21DShdgwZYTaFEWY2R/bA6V7bwtOGOSa1ebZGmSVMmlPO57auo5KPEQ5DVEJxpJ/pWz5nPrMHZEIhTxP8mdNnDfVz73K5LC3LpTiZ6CYAQAd1Xfj4jEyO1eZRvhn7Hg3i9boNaUwJgiH5gBJUF/Np7CtOOIkTwqfRD6EN3QAytIZXSENGhR6r+leCDN2BkbZAJgxqbAqNPFgfBzjBFGHlvu811OPDJrjeO0wgZUGcRGxn/W+QMF3gMJ5jX2N5ZTm6wyPuaVfzDCPboyhMGVngnqTJHCLMlNsEB2R1TZggn8+UbPzKiokfyVmG0b+M5UzfxCqg63u60yETzPj/mdnmvNZRRjBMcXM47S6HIF5cvdC71uqNWXr/YTEetbzWeSODsOm8BlWM+3O9S9aCW5+bUjT+w+49Z4RnN71wHBn97shcddzWjXs6vB7Paxf3c3R38mTeuLNw6bWvasHV4ubWGHw4Mz64CB5No+681hPHe0dHTv3iEl6ORu4fkg7dpGd2jcsTQ+9fQF6vrpwPdFn+6C3JZHL98IieZsHV6vFpNE1TXhleVl+swOu2Hlyv9gFPnN7RrXc3dpl7H4fL7px+sNsxaHzVtFnDtjGXhEH6MsOI50tJD6+juGJekP8uL9JCfC3IXO251CjGMeVqU+6S0mKnQoCIb4thrtdu3QKm2anWLLPquq32OagAwwUOqNXrwDw3cg1ao9iB2I5pQGQuqbJr/vwOEEU2w9THibaIUzTFTP0lYgdyqHi0Lw5HTBkexkLFDb+S1tjsLeBTa2GwaBq+v1qG7898VenF/IbeJE7AcbKt3eUt7e5jROYES4GXDGeC4oyLZrzBRcpDo7SAJYpTcQUkUoVts3Jq6YxE8xBLqHoU+2mIS/PpPGuNztb/pgYRy6z982F28n4sbPdb3gPh4xPpwGQtLSzmiPdcQkZeyM8FVzcLzsM7qU/kARMN5QlBayTbn754IglSkERU9NwePBdkKNwP3v59p/4LKH23H0Uif0E20ua3qbgghHw082m+wdJbKV0s0mx+NSmNiQivC4U09AFGqdC392H8iqlehNAPul4K1DuZC/s2vpRP6YBDjiPBNiVbHvC2GGAm3xaeOCerQx8uWylF3zhe8X22diieIBLxr68UZCPpJ8y34m8ZJ/7XuPbE2sgj6hQPCk7oRK7kRfL+AylQLMISoXxxshl8X4B9ybeNRZMLLFyw6SXl+OcvipS0hgoRilPKvY6aGTZlNsPJ3+fY/nL6FiaT8s+7ecV+vJvH3euBELwIqoUv+W9njWR0QeJlKvwzLA11JZ6aIjmdbMj6J8AdZTdArWoZ7Wq17J6CQtmter0MnE7RwK1Kmt/M3y0bPd09D82/</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082518</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130917_125820</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95022D67527FFBCE0401F0A079902E1</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E69037541DE038AAE0401F0A059918D0</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13602d08-9c94-45c0-9151-f446f7597ac3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9225d8a-71fc-436d-a964-369cbdfcdd97</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00017_PYLD_UVTC_UserName_With_Method_HEAD_405_METHOD_NOT_ALLOWED_P2" searchProperties="true" id="b9144e54-2b16-4091-ad76-269930a52a0f"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID_FULL",myTC.getPropertyValue("NODE_USER_ID_FULL1"));


</script></con:config></con:testStep><con:testStep type="restrequest" name="UserValidationTokenCreate_HEAD"><con:settings/><con:config service="UserValidationTokenCreate" resourcePath="${#Project#HostName}/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}/VerificationToken/{TokenType}" methodName="HEAD" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserValidationTokenCreate_HEAD" mediaType="application/xml" postQueryString="false" sslKeystore="999901.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">Mandatory and Data</con:setting><con:setting id="RecordRequestRepresentations">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="TokenType" value="${#Project#TokenType_VE}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Response_Details"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('UserValidationTokenCreate_HEAD');
def expXML = tStep.httpRequest.response.getResponseContent();
log.info "Extracting Response Details"

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);

log.info "End of Extracting Response Details"
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response_Details"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def url = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#errorRespType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#V1}' );
String minor = context.expand( '${#Project#V2}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
                errorHost = "http://error.decellc.org";
} else {
                errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
                case "SUCCESS":                                
                                expectHTTPstatus   = "HTTP/1.1 200 OK";
                                XMLbodynull        = true;
                                httpLocationHeader = true;
                                //this.log.info "Hello";
                break;

                case "INVALID_DISPLAY_NAME":
                     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
                      errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
                      erorReason = "The display name exceeds 256 characters (or is empty).";
                      errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
                break;

                case "INVALID_COUNTRY":
                	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
                	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
                	errorReason = "The supplied country code is invalid.";
                	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
                break;

                case "NULL_COUNTRY":
                	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
                	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
                	errorReason = "The country code cannot be null.";
                	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
                break;
                
                case "API_NOT_AUTH":
                	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
                	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
                	errorReason = "API call not authorized";
                	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
                break;

                case "ACCOUNT_FORBIDDEN":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";                               
                                errorID = "urn:dece:errorid:org:dece:AccountIdUnmatched";
                                errorReason = "Request Account ID not match";
                                errorLink   = "https://qa.q.uvvu.com:7001/rest/1/02/error/en/ErrorList.html#AccountIdUnmatched";
                break;

                case "SECURITY_FORBIDDEN":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";                               
                                errorID = "urn:dece:errorid:org:dece:securitycontext:forbidden:1122";
                                errorReason = "forbidden";
                                errorLink   = "https://qa.q.uvvu.com:7001/deceerrors/error/error_response.html";
                break;

                case "NOT_FOUND":
                                expectHTTPstatus = "HTTP/1.1 404 Not Found";
                                XMLbodynull        = true;
                                httpLocationHeader = true;                               
                               // errorID = "urn:dece:errorid:org:dece:securitycontext:forbidden:1122";
                                //errorReason = "forbidden";
                                //errorLink   = "https://qa.q.uvvu.com:7001/deceerrors/error/error_response.html";
                break;   
			
			case "INVALID_TOKENTYPE":
						  expectHTTPstatus = "HTTP/1.1 400 Bad Request";                               
                                errorID = "urn:dece:errorid:org:dece:TokenTypeNotValid";
                                errorReason = "Token type in the request is not valid";
                                errorLink   = "https://qa.q.uvvu.com:7001/rest/1/02/error/en/ErrorList.html#TokenTypeNotValid";
                break;     
                
			 
               case "INVALID_METHOD":
						expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
						errorID = "urn:dece:error:MalformedRequest";
						errorReason = "405 Method Not Allowed. The request cannot be fulfilled because the method is unknown or not supported at the requested server.";
						expectHTTPcontenttype = "text/plain;charset=UTF-8";
			break;     
            
}

// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
////assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
                assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
                assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
                assert context.expand( '${#TestCase#httpLocation}') != null;

                def a = context.expand( '${#TestCase#httpLocation}');
                def b = a.toURL();
                def urlStr = b.getPath();

                assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
                
                int lastColon = urlStr.lastIndexOf(':');
                int lastSlash = urlStr.lastIndexOf('/');
                accountid     = urlStr.substring(lastColon + 1);
                //streamidFULL = urlStr.substring(lastSlash + 1);

                //this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

                tP.setPropertyValue("NODEACCID",accountid);
                //tC.setPropertyValue("streamhandleFULL",streamidFULL);
} else {
                assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

                assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
                def myXML = new XmlSlurper().parseText(XMLbody);
  
                if (errorRespType != "SUCCESS" ) {
                                // Verify response sizes...
                                assert myXML.Error.size() == 1;
                                assert myXML.Error.Reason.size() == 1;
                                assert myXML.Error.OriginalRequest.size() == 1;
                                assert myXML.Error.ErrorLink.size() == 1;
                                
                                // ErrorCode
                                this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
                                assert myXML.Error.@ErrorID.toString() == errorID;
                
                                // ErrorReason
                                this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
                                assert myXML.Error.Reason.toString() == errorReason;

                                // ErrorLink
                                //assert myXML.Error.ErrorLink.toString() == errorLink;
                } 
                
 } 



</script></con:config></con:testStep><con:properties><con:property><con:name>errorRespType</con:name><con:value>INVALID_METHOD</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 405 Method Not Allowed</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>text/plain;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/A4jxlj2dhcPIEZrg1pmyYYculLR5EFVmrLYEnG5NdXMjEBQnLomWGG0Xq1++1F3+4Fg3Fkex3GcMpJQrVRv6X/btQcZFuzugEbDjQcMHsymk8OMJygie2nRlB1HKhrI8YEHlHGIeUt3QaWYwDXsJwJAJ7tyl8FVMEvXbvDKZOmpUoF6FoeR5R5hduWLlLqJZAR5lEYY+Zx5PmdH989qenBEpPevtigLBym7ZDzhWeaqBJghKMIVVASmxfmns5FwDyfzCnkIsWvPgPW0l/vrlaryqpaSdK5aQMATNA0pU7AyPxMb38pL+NgRGfJ5tyDNKEEwYi8QAXqB+ZhEmidaJ6khIfxB6Yt0wLKtIFzZCDLoWe6+eagQHeipT2QKYMGC6FVGhvjGU4xRVibjkct/ey0Cm7uTlJI2SxJY3Zw/jdImGY4ShY4MFgZWYnudItH0tW+wMgbURQJRjJ8rdpkARFm2k2KZyT/TphsvoBpRfm1nMkfKbsMo38py4W5i1VCN49kp0/mmPH/U7Pdem2s3MFI4PbkJjIX37o4SrNb0b0n335dd5yVdSfWSauAsKu8AbUt9+v5sFm3vfV66fFq5M/4A234X63u7dQU9C69v/e71cdhtqqfT6b1+tV4PYmXwXI8nS7/VJ/dQWL2J4Ow6oY9J6/Wcp/9DL/ZOWx8WT/gy56wn1+CQf9xFtxd1s7zu7CKapc3BKNl5Iq53/g6vRTBtXt9dRsub4bnj72X3vMLsG7J5Uvce3Eevi6HrtMLvtznyePIvMwzuKw92bAxTVjrLabdGPaFJSX44ukZI14eVXuM+tpQ1gvyz+lFSUhgzApVb6E4inFMud5WtxS1eEISEAk8WczNedh0Qd8GttscWE6/aw+AA6wh6IB6s+nWam7JQRsUBxB7CZ0R5Uux7KZ/PgeIYo9hGuDUyBKBQsz0Tyz2IYfaiI7l40gow5NEsrgVAlcsqrU4pM/I4iyz83CegXWD6tp1wn/Sn2lnxnG6z93VPe4eY0QWBCuCVx3OZIszLpOxhJngkVXJYIViIUdAqljYs52GazISLyKsoJpxEogIVxbhokiNyTb/tgERK6TjwaR4eR8GdvitzIHUCYhSYCqWLpZ1xEeGkFUG8nHAtd2AS/MdERD1wGRCeUrQBsn+p7c+UQ2ybRIZ0e+e/9sqcW/VT77+/qb5CSjzMB9bR0FGdtyW01QOCEkf7bKaS1hZVkSWiaJ+dUWNqTRvSoa0TB8jIfltPUn+YGpuTZgnjZct6gPPW/k+PsFD6nPIcSy7TSuOJ+wWPmZqtxjJd5KfurjsuZR54zjnx2S9SK4gCvGnWwrykNKT4hv5t0rS4K1cR2zt+JFxyoWCEzpXJzVI1h80BUqkWSKZL0l3jR8zcMz5vnCb5C0WLrvpSXD88RdNUVpLhwglgvJRXy8EuzRb4OTrBfbelN6ZKaj8dTbn7MPZ/PDjuy8JL4b6Vpf8t7JBinZBWFcrQIGlpedy1ZTO6XyH1l8BHjK7bfdrddcBw2G3t8vswB68Pea9SNrvxO8lOzk9fA/tvw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F95022D67540FFBCE0401F0A079902E1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:F950D20259E14DB2E0401F0A07995665</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>6f52c49b-d09b-4191-87f8-f972a9963290</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1a8514b6-f24b-4ffb-b164-e2b1dd94d326</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00018_PYLD_UVTC_UserName_With_Method_PUT_405_METHOD_NOT_ALLOWED_P2" searchProperties="true" id="9b198477-a333-4259-852d-9ac029eae034"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID_FULL",myTC.getPropertyValue("NODE_USER_ID_FULL1"));


</script></con:config></con:testStep><con:testStep type="restrequest" name="UserValidationTokenCreate_PUT"><con:settings/><con:config service="UserValidationTokenCreate" resourcePath="${#Project#HostName}/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}/VerificationToken/{TokenType}" methodName="PUT" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserValidationTokenCreate_PUT" mediaType="application/xml" postQueryString="false" sslKeystore="999901.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="TokenType" value="${#Project#TokenType_VE}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>errorRespType</con:name><con:value>INVALID_METHOD</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value>PUT method is not allowed for API call: https://qa.q.uvvu.com:7001/rest/1/07/Account/urn:dece:accountid:org:dece:E74A26B2D27731AAE0401F0A05994546/User/urn:dece:userid:org:dece:E74A27AA50195634E0401F0A05994540/VerificationToken/urn:dece:type:token:ValidateEmail
</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 405 Method Not Allowed</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>text/plain;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>261</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH1chN26JClIKZZvTAl2gl+3LyjgTcBecYDtc9tcfOzQUKO1hj4SEPBnPfHPxN3PB0Xzm+AHnwARJqBa2G/qvGsRR2UaeARGuG2XLdQ1Ur0SGU3XtuufU4rpl61rIeQYh5QJR0dAdyy4bVsWwyyPL8p2K73ilSsV91rUHYFyaliolS9fW8xnlfu62oWeM+gnihPsUzYH7AvvDoHvrS00fFZj05sUWZe6QNadCpL5p4lIEGGYzXMLJ3LwwD3QuIu4PyYQikTF49Rnxhv56d7ValVZuKWET07Esy7Q8U+pEnEy+6s0vxWWIQhon23ML0YQSjGbkD1KguiCmSaQFs0nCiJjOPzBtm7alTBuwxga2y/Srbr45yNGdaekAJOPI4FNkF8YGEAMDikG7H4QN/et5FdzeHTFEeZywOT86/x0koEuYJSlEBi8iK9Cdb/FEupoXgP2Q4lnGyRJ6qk1ShIFrdwxisr4lXDZfxLW8/Nqayx8pugzw35TlwtzHKqGbJ7LTJhPg4v/UbL9eWysPaJZB06Qv3eEa1Wv4ZfFkvVw9f1/a406l9lJLGjmEfeUtqF25X8/HzbrrrddLPx/TaDOsVoP4cRE+rv4Em97NZY/d/XRqj6PRFXc3ZezUY0v0nafRDa2jh+tvz+P4+83ds5u0n6B9ed8NV8t0YP9Yf+l63/pB+M/I612v0hSHnt1uLWkFrx7QTad/s/hd2wQ99GNUfX7wWL9z7z4N4u6P26dF/3rKQLQmg84DHk/jJAunX54v7yZe0L+3W9+v73swZotV4y2m/RgOhQUlDLPxC2BRHFV7hG2tI+uFxOf0oiQkMuJc1U8VR3EBVOhNdUtRi59JAiKRL4u5PXe8im15dqdVbtdbl651ZZUtu2MFVsXzXK8aFBy0RXEEsZXQmChfimW3/fM5QDz3OdAImLFMMjwFrn9isY0E0kI6kI8joRxGiWRxm64XC5fFNqtRZo8dL11FzrpSRmVd6yWiT/ssiAWwQ+52D7h7AJikBBTBqw7nssW5kMlYoGUmZnZpiUoUMjkCmGJh3ynXKyYn83QGCqo5T6JsBqV0muapMfn23zEQ5rl0cDXKX96HgR1/K3IgdSKiFLiK5RJkHeHEELKLQD4OuLofcGE+yCKiHphMqGAEb5EcfnrrE9UguyaREf1qDX/ZBe6d+tnX3980PwFlHudj5yhakj23xTSVA0LSR7Oo5gKVFqVsuczy+tUUNTJp3pQMaZtDwJnkt80o+Q3U3JkwzxovO9RHnnfyQ3yZmNKhQALmstu0/HjGbjEErnaLUL6T9bmLy4FLmTcBa3FK1prJFUQh/nRLwT5WelJ8J/9WCYveynXC1p4fGadcKAShE3VSg2TzQVPgRJolkvkStm/8lIFTzg+FuyTvsAjZTeNMwMdfNEVpDR1hnGRUhG09F+zTbI5TbFLw35Temcmp/HU2r/mHs/mpezuUhDdH+k6X/LeyQfJ2waCrFSDH0tDXctWUzulkj9ZfAb5j9lq1YrdqNbdTP2R2K2jvEngQSfOd+L1kL6fH76H5Lw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F95107651C773F80E0401F0A059930AD</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:F951091FC4D8CB30E0401F0A0599396A</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fae5f753-895e-47d5-a752-4010e714aeb9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00019_PYLD_UVTC_UserName_With_Method_DELETE_405_METHOD_NOT_ALLOWED_P2" searchProperties="true" id="2f39ba34-580d-4070-8216-7b56c6123265"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID_FULL",myTC.getPropertyValue("NODE_USER_ID_FULL1"));


</script></con:config></con:testStep><con:testStep type="restrequest" name="UserValidationTokenCreate_DELETE"><con:settings/><con:config service="UserValidationTokenCreate" resourcePath="${#Project#HostName}/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}/VerificationToken/{TokenType}" methodName="DELETE" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserValidationTokenCreate_DELETE" mediaType="application/xml" postQueryString="false" sslKeystore="999901.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="TokenType" value="${#Project#TokenType_VE}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>errorRespType</con:name><con:value>INVALID_METHOD</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value>DELETE method is not allowed for API call: https://qa.p.uvvu.com:7001/rest/1/07/Account/urn:dece:accountid:org:dece:E74A414050821B36E0401F0A05994517/User/urn:dece:userid:org:dece:E74A2BD42D79036CE0401F0A07995CC1/VerificationToken/urn:dece:type:token:ValidateEmail
</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 405 Method Not Allowed</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>text/plain;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>264</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3vr4iyj1chTgKURAWJj9JLl3a3odvb9qUyzgS8JA7EDh/99dcOTQqU9rJXQkKejGfOzBwf+4LjOLK9NueQCpowbdBr6i9jBzUc23KNhh3aRjUMHMMN63WjhlDVqY8DaDQaujbgPIMB4wIz0dRtZFUNVDOs6j1Cnl3znGrFbtSede0BUi5DS5cK0rV1HDHu5WmbepYyL8Gcco/hGLgniDdq3ww96enhApPeutiizBOmrakQc880SSUAAlFEKiSJzQtzz+ci4N6IThgWWQpvOQPe1N/2rlarysqpJOnEtBFCJnJN6RNwOvmmt86KzRAMWJhs113MEkYJjugrVqBuQEyTQGtHkySlYhp/EtoyLaRCG7AmBrGq7JtuvifI0Z0YaQ9kyrHBp9gqgvkQQgqMgPbLHzT1b6dNcLv3PsWMh0ka84P1n0ECtoQomUNg8KKyAt3pEY+0q3UBxBswEmWcLuFW0WSOCXDtZwohXQ8pl+QLuJaPX1tz+aMFy4D8yVguzF2sErp5pDs9OgEu/s/Mdue1jfKAowxa5+biFdDdeNjvEJMOKRb4ii2u/XnvqZlD2HXegirH/bY+JGvJrbdNYvz0vUdqnW6tTljUSB7Hj3VwA/ZsQnYXXz5CnbnP1xt/Cqht+uzu8um5a/nj9SP7GQ/WndnS5y65vbntPfQ3Z3HqPphdu71w8V/P4EThtd/528ELf46HT4ve7Hdw9eReXRN0ZX/vtNc15zGd3c9ciAao/cyicxbYT/7dP8v25tf0rHuH+8NZOKlu0OusunDTEWm+17Rbw76xkIRRNv4NRBRLRY9BT+vLeWHxtbwoCw2MMHf15kqjuAAm9JbapaTFy6QA0cCTw9yu+27NQq7V71b7jW7HQZeoiqw+aqOa6zpuvV1o0BbFAcRuwkKqcimV3fLna4Ak9jiwAFJjmWRkClz/ImJPskYbMF8ejoRxuE+kiq+qk5XTeH0d43BsidBF4/FqOX9dTHTtNhE/2I+0HQpI96Xb2ZNuHwidU1D6rgjOJcO5kL1Y4GUmIquyxBUGmbwBUiXCnl1t1ExO43kECqkZJ0EWQWU+needMfn23zYw4bnVv7zPD96ndR1+K1ogfQKqHLiqpQNyjHDkDrKLQj4vuL5bcBG+nQVUnS/ZT5FSskWy/+mdJoofJUdkRS/d0YtV4C7dT97+caf5BSjzsB9lomBJd9IWl6m8H6R6tIppLnBlUcmWyyyf37lSxlSGN6VAWuYISCblbXOfzICZZQjzpNulRH2QubTv48vElI0EFhBLtmn58oSnxQi4eloM5DFZn/pu2Usp+yZgLY7ZupF8gSjEXz5SiEeUnzT/lH+rJA3ex3Uk1k4eWad8TwjKJmql7pHNJ6QgiQxLpfAl6W7wYwGOJd83lk0usQjJpnEm4PMvmlK0po4JSTImBj09N+yqbI5TbObgvTt9CJMr+dvVvOafXs2PN8OR1LsY66Uv/W9ng+Z0IaCrF0COpamv5UtTJmeTHVV/A3gg7Mi2Lx2700VOzaqVwn7uushxumUD9yppfTB/tOz09PA8tP4F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F95022E32BC03515E0401F0A0799033C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:F951091FC4F8CB30E0401F0A0599396A</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>220cee83-c733-474f-a198-50663c32945e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00020_PYLD_UVTC_UserName_With_Method_GET_405_METHOD_NOT_ALLOWED_P2" searchProperties="true" id="696d08ce-c2c5-4b75-9968-64d6817e7384"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID_FULL",myTC.getPropertyValue("NODE_USER_ID_FULL1"));


</script></con:config></con:testStep><con:testStep type="restrequest" name="UserValidationTokenCreate_GET"><con:settings/><con:config service="UserValidationTokenCreate" resourcePath="${#Project#HostName}/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}/VerificationToken/{TokenType}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserValidationTokenCreate_GET" mediaType="application/xml" postQueryString="false" sslKeystore="999901.pem" id="1d4ea664-9073-4f71-8397-f3a665375fb2"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="TokenType" value="${#Project#TokenType_VE}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>errorRespType</con:name><con:value>INVALID_METHOD</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 405 Method Not Allowed</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>text/plain; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>237</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value/></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH49C7hSigkS5dOmNCrrVbl9WrjOBlMQG2wmhv/7YoaFAaQ97JCTkyXjmm4u/mXOO0sQJOpwDEzEl2rDX0v94UR2Hjo8MJ4x8w/PCptE4AzAa4Lte3feQ5Tm6NuQ8gyHhAhHR0h3L9gzLN2zvwbICxw/cRq3u20+69giMS9NSpWbpWpEmhAel25aeMRJQxGMeEJQCDwQOJp3bm0BqBqjCpLfPNyhLh6w9E2IRmCauhYAhSXAN09Q8N/d0zkMeTOIpQSJj8OYz5C397e5qtaqt3BplU9OxLMu0mqbUCXk8/a63v1WXIRySiG7OXUQoiTFK4lekQN2CmNFQ6yRTymIxSz8xbZu2pUwbUGAD2x75rpvvDkp0J1raA8k4MvgM2ZWxMUTAgGDQfo6HLf37aRXc3H1giPCIspQfnP8OEpAcErqA0OBVZBW60y0eSVf7HHAwJDjJeJzDnWqTBcLAtXsGUVzcxFw2X8i1svxaweUvrroM8N+U5dzcxSqhm0ey04unwMX/qdluvTZWHlGSQXt6HaUweYKnUZP/ns+Xl/jmsWFOl5TPWyWEXeUNqG25386HzbrtrbdLP66LZnbrzqbez18j63lR1L3fOKH3TmH7D/691bnxvIvV/VW/uPzHy/PxxfL2Yime53OaX175xc9rqzse0Pq8Oxqzb/aPOXk6e43yxsQTL7R//bLu5dDP0tGP/Fc+Tujd820z8ZOnkJv2mk/XzL2+6vQLd3TpNOfT3+nj67BnmrOCIfate7FMXlf2Fbv3F7PF8On6udF6j2k3hn1hRQmT7PkFsKiOqj2GPW0g64XE1/SiJHFoRKVqsFAcxQUQobfVLUUtQSYJKA4DWczNedD0LccZDPy+b3tWfdC3PMseWB3rrNm03I5bcdAGxQHELiVRrHwplt30z9cAcRpwICEwI6cZngHXv7DYQwJpQzKWj4MSDg9UsrggDTuiy/liFa1tktFp/sL9YuUxXbujYkRGrBMJYPvU7e5R9xhwvIhB8btqcC47nAuZiyXKM5HYtRzVCGRyAjBFwoHjNXyTx+kiAYXUTGmYJVCTlS0zY/LNv2MgzEvpuP9QPrxP4zr8VqVA6oSxUuAqlguQZYQjM8ipAvk84PpuwJX5ThbG6n3JfAoW4w2S/U/vbaL6Y9sjMqI/3ckfu8K9VT/5+seb5hegzMN8bB2Febzjthqmcj5I9mhX1Vyi2rKW5XlW1u9MMSOT5k1JkLY5AZxJels/0DkQc2vCPGm6bFEfeN7K9/FlYkYmAglIZbdp5fGE1WICXK0WQ/lMilP3lj2XMm8CCnFM1k3kBqIQf7mk4AArPSm+l38rysL3ch2xteNHxin3CRGTqTqpObL+pCkwlWZjSXyU7Ro/ZuCY833hNslbLEJ203Mm4PMvmmK0lo4wphkRw55eCnZZtsQp1gsI3pU+mCmZ/G00F/zT0fzr9mYi+S5F+lY3/m9lIy7bBYOuNoASS0sv5KYpnZPpDqu/AfxA7K5r192GU3e93h6xO/2zbQL3Iml/EH+U7OT08D20/wU=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F95023316382634DE0401F0A079902E7</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:F95022FF5E51406FE0401F0A079903A3</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>a390397e-f583-4a7f-b991-88363c00d5ce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00021_PYLD_UVTC_UserName_With_Method_OPTIONS_405_METHOD_NOT_ALLOWED_P2" searchProperties="true" id="c48e1cbb-28c4-403c-8806-0aad39d33f4b"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID_FULL",myTC.getPropertyValue("NODE_USER_ID_FULL1"));


</script></con:config></con:testStep><con:testStep type="restrequest" name="UserValidationTokenCreate_OPTIONS"><con:settings/><con:config service="UserValidationTokenCreate" resourcePath="${#Project#HostName}/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}/VerificationToken/{TokenType}" methodName="OPTIONS" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserValidationTokenCreate_OPTIONS" mediaType="application/xml" postQueryString="false" sslKeystore="999901.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="TokenType" value="${#Project#TokenType_VE}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>errorRespType</con:name><con:value>INVALID_METHOD</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 405 Method Not Allowed</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>text/plain; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>237</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value/></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSx1XIDUqJChLX3ZwtXUootH1ZGWcg3iY2jR2g/fXHDg0FSnvYIyEhT8Yz31z8zVxxlMSO1+QcUkEY1fxOXf9dcZ3ZpWVNjdo0xEa5XLYN5FbKxtSqostp1XWndkXXfM4z8CkXiIq67lh22bAqhl0eWZbnVLyyU7qwK4+6NoaUS9NSpWTp2jqJKfdyt3U9S6nHECfcoygB7gnsBc3+tSc1PVRg0htXG5S5w7QRCbHwTBOXQsAQx7iEWWJemXs6VyH3AjKnSGQpvPkMeV1/u7tarUort8TSuelYlmVaNVPqhJzMz/XGWXEZQp/O2ObcRpRRglFMXpEC1QcRsVBrxnOWEhEln5i2TdtSpg1YYwPbZXqum+8OcnQnWtoDmXJk8AjZhbEhzCAFikG7G/p1/fy0Cm7ujlJE+YylCT84/x0koEuI2QJCgxeRFehOt3gkXY0rwJ5PcZxxsoQb1SYLhIFrgxRmZH1NuGy+kGt5+bU1lz9SdBngvynLlbmLVUI3j2SnQ+bAxf+p2W69NlbGKM6gURvEq9tvs9pCvDTt1l2QVJvT+WS2ivrdeg5hV3kDalvut/Nhs2576+3SjWNdvtiO234djedd1m35P+4uo9of+XB/hLfsYYKs6sMYxHJpus9B/LQ0r1uJ/2KmeBx+7z1WfGvOu69+r9+LKmf9qEuxPfgGr6bd6rXZpI8Go2kf/MRZDZr3YphMasGwS+2f4ePsOo6m/2DSnbT91XjYJIMJeRxlzZ/oNkya99Oz58V4EgWpsMLxPBi6C+v7Q/09pt0Y9oUFJQTZ9A9gURxVe/gdrSfrhcTX9KIkJDRmuaq3UBzFBVChN9QtRS1eJgmIhJ4s5ubcq1WsjmO5ruO07Mua3bXKlt2zmlalVnOqrV7BQRsUBxDbjM6I8qVYdtM/XwPEiceBhpAaS5bhCLj+hcUOEkjz6VA+DkY5jJhkcXuaXaAULp6fOFvB/MlhOKtUs3StazdM/KK/0uZMQLpP3e4edQ8BkwUBxe+qwbnscC5kLp7RMhOxXVqiEoVMToBUkbDnlC8rJifJIgaF1ExYmMVQWkSLPDMm3/w7BsI8lw67o/zhfRrX4bciBVInJEqBq1haIMsIR2aQWwTyecAXuwEX5ptZSNT7kvkUKcEbJPuf3ttE9ce2R2REv9vBb7vAvVU/+frHm+YXoMzDfGwdhUuy47YYpnI+SPZoFNV8RqXnUrZcZnn9qooZU2nelARpmwHgTNLby4g9ATW3JsyTpssW9YHnrXwfXyYiGggkIJHdpuXHE1aLALhaLXz5TNan7i17LmXeBKzFMVk7lhuIQvzlkoI9rPSkeCD/ViwN38t1xNaOHxmn3CcEoXN1UnPk5ZOmwEyaJZL4WLpr/JiBY873hdskb7EI2U3TTMDnXzTFaHUdYcwyKvyOngt2WTbHKV4W4L0rfTCTM/nbaF7zT0fzff86kHyXIH2rS/5b2SB5u2DQ1QaQY6nra7lpSud0vsPqbwAPiN22JJ+X2+1OteXsEbtbu7jYJnAvksYH8UfJTk4P30PjXw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F951091E4CCD7B21E0401F0A05993966</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:F950D203322B1891E0401F0A059927BF</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>53b8f6c2-5384-4d77-b942-11ffc26207ae</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>role</con:name><con:value>nodeIdRTL</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:${#Project#nodeidRTLCS}</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="02.UserValidationTokenCreate_PERM_P1"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00001_PERM_UVTC_UserName_Valid_Role_DECE_with_TokenType_ValidateEmail_200_OK_P1" searchProperties="true" id="f767bf88-3fc4-4d5e-a30d-3b96494c4540"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DECE_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDECECS"));
//tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdDECE"));
tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdDECE"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full DECE">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID1",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082545</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F9502192790A3C50E0401F0A0799053D</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_52417813-dc88-496e-9ace-d24607849dd2</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_52417813-dc88-496e-9ace-d24607849dd2</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3fXxGlj1XIhXBJVJCAQpu29Aa97L4cuc4A3k1siB0u/fpjB5ICpT3dR0JCnoxn1swsL/uEozhy/BbnkAjCqBacNvR/Ko5r1+p22QhxvW64XhUMD2EwQsetWrW664Who2sB5ykElAtERUN3LNs1rIphu0PL8p2KX7FKda/yomuPkHAZWrqULF1bxhHlfpa2oacJ9RnihPsUxcB9gf1Bq3/lS08f5Zj05skaZZYwaU6EmPqmiUshYIgiXMIsNk/MHZ+TkPsDMqZIpAlscoa8oW/2LhaL0qJcYsnYdCzLMi3PlD4hJ+Mjvfkr3wxhQEdsve4gyijBKCLvSIHqg5iwUGtFY5YQMYm/CG2btqVCG7DEBrZdeqSbHwkydD+MtAMy4cjgE2Tnwe5hBAlQDNrDfdDQj342wfXeYYIoH7Ek5nvrv4MEdA4Rm0Jo8LyyHN3PIx5oV/MEsB9QHKWczOFa0WQqK+HabQIjsrwiXJIv5Fo2fm3J5Y/kLAP8N2M5MbexSujmge6ckjFw8X9mtj2vdZRHFKXQ9OJu+4w9BR1C2+cPnZc2d2/79epxUO02MgjbzmtQxbg3632yFtzabCKr9xa6NDvwW3RMfnVcJVd/nvFF72Vy2vVWZ2fD48f4bXR/3Z/aSfBaq8/scBgm6NWuDtNVv8rK3qu7eJrMlnZ/8Qts3PLegvK4+/A7jW/ETW31Nnfaj3fvYjo+b8/vwpeL4SKN7s4XxzB7P6sfoxs8WMkyn6qz+4va6PXsyr28PON4EfxarpZOcPH47PTGd3dxpydWuPFR03YNu8ZcEgbp6x/AIl8qegSnWk/OC4nv5UVZSGiMMld/qjSKC6BCb6pdSlr8VAoQCX05zPW661qebdmeU670eq12t2u5lt2zWlbF8yy5yDVojWIPYofREVG5lMqu+fM9QBz7HGgIiTFnKZ4A17+JeIoE0gJ6Lw8HoxyGTKo4uJbD5qnn8HK9QmdvKUnn4Zi5unbNxA29SVojAcmucpd3lPseMJkSUPKu+M0lwbmQrZiheSoiuzRHJQqpvAASpcG+49YrJifxNAIF1IxZmEZQmk6mWWNMvv53DIR5Zs26inl29r4sbf9b3gXpExLlwFU9bZCThAPXkJsX80XRlb3rKg/fSkOijphsqUgIXiPZ/fTBFEWRgiabqnLYhfe+YSeyuV9UkSycE1zwvbiopc5LFWjmY5mh0qyUzudpNoiaUrhEhjel0NnmAHAqZWo1ZG9AzSKE+aNbokC9l7mw7+JLxYQOBBIQS9po2fIHT4QBcPVECCTdlz99f+yklH0TsBSHbJ1IviQU4m8fG9jHyk+ab+XfgiXhx7gOxNrKI+uU7wJB6Fit1H2w+oIYmMmwRAoYS7aDHwpwKPmusWhygUVINr2mAr7+oillaugIY5ZSEZzqmWFbLTOcYjUF/8PpU5hMkTdX7JJ/ecU+968GUrdipBe+5L+dDZLRBYOubvIMS0NfyhejTE7HW+q8AXhYoN3OdwK9W0nzk/mzZaun++eh+S8=</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3fXxGlj1XIhXBJVJCAQpu29Aa97L4cuc4A3k1siB0u/fpjB5ICpT3dR0JCnoxn1swsL/uEozhy/BbnkAjCqBacNvR/Ko5r1+p22QhxvW64XhUMD2EwQsetWrW664Who2sB5ykElAtERUN3LNs1rIphu0PL8p2KX7FKda/yomuPkHAZWrqULF1bxhHlfpa2oacJ9RnihPsUxcB9gf1Bq3/lS08f5Zj05skaZZYwaU6EmPqmiUshYIgiXMIsNk/MHZ+TkPsDMqZIpAlscoa8oW/2LhaL0qJcYsnYdCzLMi3PlD4hJ+Mjvfkr3wxhQEdsve4gyijBKCLvSIHqg5iwUGtFY5YQMYm/CG2btqVCG7DEBrZdeqSbHwkydD+MtAMy4cjgE2Tnwe5hBAlQDNrDfdDQj342wfXeYYIoH7Ek5nvrv4MEdA4Rm0Jo8LyyHN3PIx5oV/MEsB9QHKWczOFa0WQqK+HabQIjsrwiXJIv5Fo2fm3J5Y/kLAP8N2M5MbexSujmge6ckjFw8X9mtj2vdZRHFKXQ9OJu+4w9BR1C2+cPnZc2d2/79epxUO02MgjbzmtQxbg3632yFtzabCKr9xa6NDvwW3RMfnVcJVd/nvFF72Vy2vVWZ2fD48f4bXR/3Z/aSfBaq8/scBgm6NWuDtNVv8rK3qu7eJrMlnZ/8Qts3PLegvK4+/A7jW/ETW31Nnfaj3fvYjo+b8/vwpeL4SKN7s4XxzB7P6sfoxs8WMkyn6qz+4va6PXsyr28PON4EfxarpZOcPH47PTGd3dxpydWuPFR03YNu8ZcEgbp6x/AIl8qegSnWk/OC4nv5UVZSGiMMld/qjSKC6BCb6pdSlr8VAoQCX05zPW661qebdmeU670eq12t2u5lt2zWlbF8yy5yDVojWIPYofREVG5lMqu+fM9QBz7HGgIiTFnKZ4A17+JeIoE0gJ6Lw8HoxyGTKo4uJbD5qnn8HK9QmdvKUnn4Zi5unbNxA29SVojAcmucpd3lPseMJkSUPKu+M0lwbmQrZiheSoiuzRHJQqpvAASpcG+49YrJifxNAIF1IxZmEZQmk6mWWNMvv53DIR5Zs26inl29r4sbf9b3gXpExLlwFU9bZCThAPXkJsX80XRlb3rKg/fSkOijphsqUgIXiPZ/fTBFEWRgiabqnLYhfe+YSeyuV9UkSycE1zwvbiopc5LFWjmY5mh0qyUzudpNoiaUrhEhjel0NnmAHAqZWo1ZG9AzSKE+aNbokC9l7mw7+JLxYQOBBIQS9po2fIHT4QBcPVECCTdlz99f+yklH0TsBSHbJ1IviQU4m8fG9jHyk+ab+XfgiXhx7gOxNrKI+uU7wJB6Fit1H2w+oIYmMmwRAoYS7aDHwpwKPmusWhygUVINr2mAr7+oillaugIY5ZSEZzqmWFbLTOcYjUF/8PpU5hMkTdX7JJ/ecU+968GUrdipBe+5L+dDZLRBYOubvIMS0NfyhejTE7HW+q8AXhYoN3OdwK9W0nzk/mzZaun++eh+S8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00002_PERM_UVTC_UserName_Valid_Role_Portal_with_TokenType_ValidateEmail_200_OK_P1" searchProperties="true" id="ccf0c5ec-aa2b-41db-8aa2-0cf292c29b45"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportal"));

tS.setPropertyValue("audience","");
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F951062F565EF689E0401F0A07995349</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F951062F565EF689E0401F0A07995349</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082552</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951062F565FF689E0401F0A07995349</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8uwiAtWkqpBUFFREfebt3AYFmWTAQF//Tdo9CQ5yfnyvjfiND3dTy/0PPOMdc9lOwBjFMVO4Jdl8aXyT2tf52iGQzWGYxo18ndf4yHdrhmMSdfpVoul2+1KWcY4QbKPY92PXyoszdRrNF9juQXd7NS5Tp154tvsrlJeoQgT00Tlia6UM8/1cefq9qWSRH4n0LGDO77uIdyJYUcDyrhDNDv6HVPl9fmG8uowerXjOOxQFHwyEESuC59g4FHP1AedZwN3NMfy9TiJ0JtPA79U3vamafqU1p+CyKJYmqYpmqeIjoEd61fltXTfjAzZN4Pbuqv7ge9A3XUuegFKQbEdGGXgWkHkxLb3jWmGYujCdA1lsAYZzv9VoX47uKL7oaUPICOs17CtM3djc2SiCPkQlZdz+aXy62cVvO1dRLqPzSDy8Kf1v4OE/DNygxAZNXyP7I7u5xa/SNfrM4Id2Ydugp0zmhRtEuoQ4fIsQqaTjR1Mms/A5Wv5yxm+dxiC/6Ykz9R7nAQ29UVmRMdCOP4v9Xpfq5uVle4m6HUzPlwaE+cgjU+Y2Rr8pBo115Oj7uy5lyuE98o3UI9Sv60/N+qjr942HZleSsWimwJzdHB68zyri0dN6obKapwIdDvptsXWpM8kk8gEozWXq/OGy8ATbmx5VXDH0pT16KV47IZ5WBoAU4EXvj+n8myyjdbbndxvyCjW3PWB0vjpirY3Ckf7khfO2LnZaDXOGmsyc7Bg3MOAcVQapOlhI2gD3i7RuZ9I3cFOC1tr2WnaWay+/I7pfQxFXCOUX4Ms/m8aNC/qsf5YdItJYZLPM0aviix3q2K3C1DXAqksAEsWxhcwEazjyT46fT6lBaAue0AEuTIHqWhtxZWqjqTUWK3c3Uru9QRlzqUDsBVL5IUoZStxtxnS+noXbtkevdMEwdjMg319GBqDYzqw4URZKOlkIefKQcomC4leX2VWRtYX5aAw08WyXlofBF6ZS6mYXj2KUmpPdut5uF3yKbxIqgK4PmCWUtdWBgtvxcD63IakNxRwvMoFW+muVkomLcCsJFiTFYlt0e3tQugZ4d5z7XfGB8T4wuiv8n3fTXYX6aB0pX5XO/U1eV8XVWkI5tvlfr066uveuQQHE7C/e3Qajr4JUmvXTkV1OxwFO9k+wwlQJUFQAUkXDRS5PwRBXwAKB5zs0j0IzaBrkEYbsrhU5d1+c5M7pw3W+7SrM+02sx2vm7NTU5T86m6U7A+2Ym960+pIM85LPuYvW3yunpu6w8AsNNWNNIhHmTlQtdJ+JmYbOKga1pByL3wvUlpDEF1y21WsebxuTnG+d0xzLWymnNsyXaU+D03XDHNcXQTqMaKbAqqz1DY/j+ISsBQBgP5heRBURWgXSTXkVN0qgg56UpyAy4GNR+zqNBycXbitgyAbraeH41thDDGVBCpVJdJWUqktAqMowkBbSr0DWAqWFQmW1BNUKAJ1K4/SLcnXckCUP+exd82jJQlAqu9Akx+U6kuaj6exxnEg94Wl3+Nt5ZStjaZHt05IGmuTkEsVPDH93To4Kp4TLaNEW45Gk3G2XyT944HMKpPWRuf6riSdjyFwJqOFfRQDUZ+F220cVn0YwVgOPUXOLtMdPrSdvUcPqw1GmNEibLFLb58u+7q0G0WWxowGc39Wb/ElnJj5wKse2um6utCaYcvo+qaY59QuWtEBCHr8vHEyMpY92st03EzNITjudXaSubyQ89Jot4DpXB2tNa/aKDXO47FHXxYUNwmnqdZPOUlVq3VDWAwWOIycbdK2smjqG+xWj5vnHb1qOqF75NnkuODC+srySLFmZyNsKbOSym3gzrNaIRxSc+oMpJY5lvv5/qJfQm8KbwP083R4CG/zg3o/WT6Mnjvp0Ei3Ihjfl8UBJIvlHjkV9PjvBKaQOEbNvKp2woIF4Rj5ceW12FWQl05CKI5jdMiRcVtLHM0zNMOz9UavBwRJosnR3aMB3eB5mizuLOeG4hPEbuCbTuGr4HG3U+rvAKHXwcg3UFQ7Bwm0Ea78xWKRr7Lsz8nxG/gYLQLCE0GzBYBEAAOm2Wt0eUlkJZpviwLLC82eKFbKkyCe+tMImDGKPnJE/gNHnCPohA4qiGRxmmJynOKYpOSkn5PYZZ7O+pOPEkI1o4LtdViu3aCw44UuKgBTXmAkLnoK7fCaIArfnmxNh/gqLbIL8fWg/zbCz+/uySA6hlMo4CIcAZGCoi/4LnuP5ZuYG5948d08SAynOM9JZuPIgTckH1/9bpiiUx7dcv2B+A77of1Z8MEy9TmohzPj7MBH2z9uBIRQEsrxeq/KSX86PSXnc3KtQ6ugUxExTzEU3aI0BBPCifJFcEQ+9TBB/YiOPlB/8vyQf8SXxLavxeST9kjXlK/LH9xFNISLu4hMuj776UXng0uStxhl8VeyrkuuLAXiv95qYAcWekQ8I480iIzf5frC1js/JM5ihjm+VawK8pl/0xgwIGYdMseC6L3xrwx85fyj8JHkB5aYdNM+idH3b8rFgHqp6BAGiR/LxSAggvdD84ozzkPU+a30h5kr/Xvj8xn+ls9vlLFGxpenVx66zv9XrjnXdoGI7MLOFctLJSNXU+Lct94N6TeAX89prvu3Of0xktc/xH9K3uX08/fw+j8=</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH6sQBxJoooJEoezm3n5tabvsvlwZZwJuEzuNHT76668dmhQo7e1eCQl5Mp45M3N87BOB06QZ9IWAXFLOjHDYNf9B7aaLEG5bLjRblhv5njWNIseKnbY/7cTEiaK2aYRCFBAyITGTXbOJHNdCnuW4twgFTS/wWg2/5fw2jXvIhQqtXBrINFZpwkRQpu2aRc4CjgUVAcMpiECSYNy/OA+UZ4ArTGbvZIOyTJj35lJmgW2TRgQEkoQ0CE/tE3vH5yQSwZjOGJZFDi85I9E1X/Yul8vGstXg+cxuIoRs5NvKJxJ09tXsfak2QxSymG/WA8w4owQn9BlrUBcg5zwy+smM51TO03dCO7aDdGgLVsQijsu+mvZrghLdJyPtgMwFtsQcO1WwG4ghB0bAuLsJu+bXz01ws/c2x0zEPE/F3vrPIAFbQMIziCxRVVah+3zEA+3qnQAJQkaSQtAFXGqaZJiAMK5ziOnqnApFvkgY5fiNlVA/WrEMyJ+M5cTexqqg2we6M6QzEPL/zGx7Xpso9zgpoPe8upgW4BTHZ99h6C8e45+jGUF2cSQfuyWEbecNqHrcL+t9stbcetlE0xG7u/aTuxnc9JOIf/sxxxB+Z4Nf/v3SdTow6OMJuvh5Nn26Hs8n09bRIwrD5gS7nd9XP9y/j+/b7Vn/1DuV37wvv/g9jkTOf9zR9XVx4co0+eXfyr/a0xGRzurhdJmNJ/PO5BLZ5yN//DBbd9LiKDqa+qhYf4+wfxmvryYzeneeHn25DuOzh/X0eXh/nI0m52OERPe1pu0ado2VJIyL6QMQWS01PcKhMVLzwvJjedEWGllx6RpkWqOEBCbNnt6lpSUolADRKFDD3KxHvueogzXy2t7ZqH3snyEXOSPURx3f91quX2nQBsUexAFnMdW5tMpu+PMxQJIGAlgEubXgBZmDMD+IOMQSGyG7UYeDMwG3XKm4s+BixUQ7e0KxcJ4eUB6314mXuo+mccnlFbvK+7GEfFe7WzvafQOEZhS0wGuGC0VxIVUznvCikInTWOAGg0JdAblW4aDpHnu2oGmWgIZqpzwqEmhk86xsjS02/00LE1FaqSAZzyVOnPIAvlvf/reqFconotpB6JJOQY0TDtxFblXP+3W3t+uuwveLiOpzpvoqc0o2SHY/vdJF86TmymthFfJ6w75hJ7i9X1edL1pQUvO+vrCV3is16FXDecKNp0axWBTlODpa6XIV3laC59hjIIWSq/UtfwRm1yHsT90WNeq9zLV9F18h52wssYRUkccol594KoxB6KdCqGi/+uw7ZCel6puElTxkGyTqRaERf/joIAHRfsp8rf6WPI9ex3Ug1lYeVad6H0jKZnql74X1O9wgXIWlSsh4vh38UIBDyXeNdZNrLFKxaVpIeP+LoRWqa2JCeMFkODRLw7ZqljjlOoPg1elNmFKZX67alXj3qp1cnI+VfqXYrH3pfztbtKQLAVPf6CWWrrlSL0eVnM22VPoF4Buh9p3RwGs6g9MWqoXa8/2W3+7XDdyppPfG/Nay1dP989D7Fw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F951091FC521CB30E0401F0A0599396A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F951091FC521CB30E0401F0A0599396A</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00003_PERM_UVTC_UserName_Valid_Role_Retailer_with_TokenType_ValidateEmail_200_OK_P1" searchProperties="true" id="807d6575-e2f0-4ab1-821a-fd193accb8d4"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950D2025A1B4DB2E0401F0A07995665</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950D2025A1B4DB2E0401F0A07995665</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082556</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950D2025A1C4DB2E0401F0A07995665</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH1chlyZcooLErS20bLtA221fVq49EJ8mDsQOt19/7NCkQGkPeyQk5Ml45puLv5lzjqLQ8ZucQyJozLRep67/sd3JxHPPPMNyEDZcjKpG1SpXDEI8QmoulGvVM13rcZ5Cj3GBmKjrjmW7huUZtju2LN/xfK9asj3vWdceIOHStFQpWbq2ikLG/cxtXU8T5seIU+4zFAH3BfZHzcGNLzV9lGPSG+dblJnDpBEIMfNNE5cIYAhDXMJxZJ6bezrnhPsjOmVIpAm8+SS8rr/dXS6XpeVZKU6mpmNZlmnVTKlDOJ1+1xvf8stAemwSb89txGJGMQrpBilQAxBBTLRmOI0TKoLoE9O2aVvKtAErbGDbZd91891Bhu5ES3sgE44MHiA7NzaECSTAMGj3w15d/35aBbd3xwlifBInET84/x0kYAsI4xkQg+eR5ehOt3gkXY1zwH6P4TDldAE/VZvMEAau3SUwoasbymXzEa5l5ddWXP5o3mWA/6Ys5+YuVgndPJKdDp0CF/+nZrv12lp5QGEKjcu00hnMN9CO3cVv92qTWFHX5QsH31j1DMKu8hZUUe6382GzFr31dum19cravwbBa0DKqz562vxgv3qD0Vl8NbzBaYWHr5115TFcB8sBXHtP7f60Hz52wjEbmrP78bP582nQ2VTXy8UVffx2fXsfjPsPL8+otUatIHUdm6bQHg5aCX4SZFyzbvusy+xp6HHyYHqD56D7++J2TYP2fTh5npLLu/UE9Zvrp4uXb9eP5btk3W8mA3juOp0fl6xZf49pN4Z9YU4Jo/TlH8AiP6r26HW0C1kvJL6mFyWhxJhkqv5McRQXwITeULcUtfipJCBKfFnM7fmi5lkdx3K8pt1yOy2na7mWfWE1rUqt5pXLXs5BWxQHENsxm1DlS7Hstn++BogjnwMjkBiLOMUBcP0Lix0kkNZjQ/k4YsZhHCsWn8dVstnMI+4uYbNA9FWUHWtSq+raz1jcstukORGQ7FP32R51DwHTGQXF76rBuexwLmQu5miRitAuLVCJQSonQKJI2HfcqmdyGs1CUEjNKCZpCKVZMMsyY/Ltv2MgzDPpsDvOHt6ncR1+y1MgdQhVClzF0gJZRjgyg9w8kM8DLu8GnJtvpoSq9yXzKRKKt0j2P723ieqPokdkRH/aoz92jrtQP/n6x5vmF6DMw3wUjsiC7rjNh6mcD5I9Gnk156g0L6WLRZrVr6KYMZHmTUmQtjkCnEp6W4/jV2BmYcI8aboUqA88F/J9fKkI2EggAZHsNi07nrBajICr1aInn8nq1L1lz6XMm4CVOCZrh3IDUYi/XFKwj5WeFN/Jv2WckPdyHbG140fGKfcJQdlUndQcWX/SFDiWZqkkvjjZNX7MwDHn+8IiyQUWIbvpJRXw+RdNMVpdRxjHKRO9jp4Jdlk2wynWM/DflT6YyZj8bTSv+Kej+ffgZiT5LkJ6oUv/W9mgWbtg0NUGkGGp6yu5aUrnbLrD6m8AD4ndcSpuq1rp1sqtSkHsXq1m1aqtIoF7kTQ+iD9KdnJ6+B4a/wI=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F9502274B87E96B7E0401F0A0599098B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F9502274B87E96B7E0401F0A0599098B</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00004_PERM_UVTC_UserName_Valid_Role_Dynamic_LASP_with_TokenType_ValidateEmail_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDLASP"));

tS.setPropertyValue("audience","");</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950212AC73729DFE0401F0A059909A1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950212AC73729DFE0401F0A059909A1</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_08260</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950212AC73829DFE0401F0A059909A1</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EH2fr3B5HqeMr9xcgSoCycQTcgWyO3nZElJjlNgykWQgfP1KJnaAXDazVVRRare6T3cfHelIoDTxwp4QwCXNmBENOuY/DURcv9WYWo4ftK0Ak5k1bUBgBa7n+7g1RU3smEYkRA4RExIx2TE9xw0sp265wdhxQq8ROl7Nbzj3pnEHXKjQyqWmdq3ThImwSNsxc87CDAkqQoZSEKHE4ah3MQyVZ4hKTGb3aIuySMi7cykXoW3jGgEMSYJrOEvtI3vP54iIcERjhmTO4SUnER3zZe9qtaqt/FrGY9tzHMd22rbyIYLG383ut3IzkIjNsu26j1jGKEYJ3SAN6gLkPCNGL4kzTuU8/SC0a7uODm3BGlvYDdh3035NUKD7YqQ9kFwgS8yRWwa7hRlwYBiMyW3UMb9/bYLbvWOOmJhlPBUH6z+DBGwJSbYAYomyshLd1yO+067uEeAwYjjJBV3CpabJAmEQxjWHGV0PqVDkI8Ioxm+shfrRkmWA/2QsR/YuVgXdfqc7AxqDkP9nZrvz2ka5Q0kO3Yu+n96f3N03bqKWs9w8Opv7OnDvBAeiU0DYdd6Cqsb9sj4ka8Wtl03XzdF5azL5qx47ZPj7rH7X927Ozm7Wv5c/6/cOdtH05Lztb7w66QfnD2KFW+dwap80e+Oe4/wky9ZwE9yuj5/QAl9+iyeTy+sx4ff8R9Z384mfXT0wyYL+pLXhM4yufrlXQ76qP0R44z8Pz8ZPZ5yweHobXaV3/HK9aZxvNg9k5J3/4N/wKUUe2HTgj47vLkZec9zrvNa0W8O+sZSEUT59ACzLpaZHNDBO1byQ/FxetIUSa1a4hgutUUICk2ZX79LSEuZKgCgJ1TC369N23fFcr9dv+k2vPTg9cQLHPXV6Tr3ddto9t9SgLYoDiP2MzajOpVV2y5/PAeI0FMAIcGuZ5XgOwvwk4gBJZETsVh2OjAkYZ0rFuVi1gri19vDDY6PpPxH38ZH4cWwal5m8Yle8N5PA95Xb31PuW8B0QUHLu+a3UAQXUrXiCS1zmbi1JaoxyNUFwLUGh17QqtuCposENFA7zUieQG0xXxSNscX237MQFoV1MOyNrouT92Fhh9/KHigfQrWD0NUcg5ojvLmE6mG9LOXjkhu7JZfhezmh+oCphkpO8RbJ/qdXnmiCVCQpaipBV76Hhr249mFJVSqypLjienVJK41XCtAtR/KEak+1fLnMiyE0tbpxFd5WIufaI8C5kqjncfYIzK5C2F+6ISrUB5kr+z6+XM7ZSCIJqaKMUSy/8DwYgdDPg0hRff3Vt8deStU3CWv5nq2fqFeERvzpQwOHWPsp87X6W2WcvI7rnVg7eVSd6k0gKYv1St8Fzx/QAmcqLFXilfHd4O8FeC/5vrFqcoVFKjZNcwkffzG0KnVMhHGWMxkNzMKwq5QFTvm8gPDV6U2YQo1frte1+PB6/ftiOFKalSKz8qX/7WzRgi4YTH2LF1g65lq9FlVyFu8o8wvAN+Ls+27DP+43/GBQiXNTibN30qwauFdJ9435rWWnp4fnofsv</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950233163BC634DE0401F0A079902E7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950233163BC634DE0401F0A079902E7</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00005_PERM_UVTC_UserName_Valid_Role_Linked_LASP_with_TokenType_ValidateEmail_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdLLASP"));

tS.setPropertyValue("audience","");</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>LLASP</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950D2016F16C0E6E0401F0A059927B5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950D2016F16C0E6E0401F0A059927B5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_08265</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950D2016F17C0E6E0401F0A059927B5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0Tp41bIBUJIVJAolG5aSnsIvb4cuY4DbhM72A7Qfv22Q5MCvZzuIyEhT8Yza2aWl33EQZo4QZdzxASmRBv22/q/cevRserQN1DDA0aj7jUN0IptI27Zkf1Yd+M4jnRtyHmOhoQLQERbdyy7YViuYTemlhU4zcBq1hoN90HXbhDjMrR0qVm6tk4TwoMibVvPGQko4JgHBKSIBwIGYfdiFEjPAJSY9M7RBmWRkHXmQmSBacJahCBKEliDNDWPzB2fo4gHIZ4RIHKG3nJGvK2/7V2tVrVVvUbZzHQsyzIt35Q+EcezQ71zUG5G0ZDEdLPuAUIJhiDBr0CBukBiTiOtm8wow2KefhHaNm1LhTbQGhrQbpBD3XxPUKD7YaQdkIwDg8+BXQaboBgxRCDSrifDtn74swlu9k4ZIDymLOV767+DhMgSJTRDkcHLykp0P4/4Sbs6RwgGQwKTnOMlGiuaZAAirl0xFOP1CHNJvohrxfi1NZc/XLIMwb8Zy5G5jVVCNz/pTh/PEBf/Z2bb89pEuQFJjjorO/TMnn92N0W/nsN7dj6i0E28c4t02wWEbecNqGrcb+t9slbcetv0vHy6a4I4GXundz2WU+fuqnFxE9fpwrPDkwlpsft7cv2aTVg2Pk3zydPy8vgcjwbjxI3PF+mvvpt0m/Xpnf9PlB6kYHgZOr8nrSgaoElu1rOV3bu8HfNXcbMI7+11GIXZJWktThuJ1wovrm8fbs8nLyG7OfPXlPZ611fuk1uv3xyH04OpE3u3KTiji/7zw+Dst//y3H6vabuGXWMpCWH++ISgKJeKHsO+NpDzAuJ7eVEWHBlx4RpkSqO4QEToHbVLSUuQSwHCUSCHuVkPfNfqS51rDuxmzzppnlgNyx5YXcv1fcc7dksN2qDYg9ijJMYql1LZDX++BwjTgCMSIWYsaQ7niOvfROwDAbQhmcjDQQlHUypV3EYJwLMkt1bx0mZe89mftdKXeJ7o2piKS3LJurFAbFe66zvSPUEQZxgpfVcE55LhXMheLMAyF4ldW4IaQbm8AZgS4cBptFyT4zRLkEJqpjTKE1TL5lnRGZNv/h0DQF5YR6NueFUcvS8r2/9WNkH6RFg5cFXNMZKDRB9uITdwy1K+Lrm5XXIZvptHWJ0w2VHBMNwg2f30ThTFkIolRU0l6Mp337AT19wvqUoVLTGsyF7d0lLkpQR0ypEsQG1Ry5fLvBiCp+SNyfCmVDnbDBHMpUa9TOkzImYVwvzRFVGh3stc2Xfx5WJOQgEESiVltGL5g/dBiLh6Hwwl19c/fXzspJR9E2gtPrP1EvmMUIi/fWnAACo/ab6SfyvK3gv/LNZWHlmnfBQITGZqpS6Dly9oAakMi6V6UbYd/LMAnyXfNVZNrrAIyabHXKCvv2hKlto6gJDmRAz7emHYlsoCp3jJUPDu9CFMIcdv9+uaf3m/3l2MQilaKdArX/zfzgYu6AKRrq7xAktbX8vnokxOZlvS/AZwX50dp2lZLc+1655fqbPn+5bT96oG7lTS+WD+aNnq6f556PwB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950226008751379E0401F0A079902D7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950226008751379E0401F0A079902D7</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00006_PERM_UVTC_UserName_Valid_Role_AccessPortal_with_TokenType_ValidateEmail_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdAccportal"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Access Portal"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdAccportal"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>ACCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F9510635749ED0B0E0401F0A07995357</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F9510635749ED0B0E0401F0A07995357</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_08269</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F9510635749FD0B0E0401F0A07995357</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+o4EH7vr4jSxyrEgYRLVJC4nk1bKAv0xssqdRwwJHZqO0DPr187NBQo7XJWQkKejGe+ufibueZ+HBXdJueICUyJ5nXq+j/Oa2CHAJQMp+iEhl2zgFELkWWE5VLoBOFrDUKoax7nKfIIFz4Rdb0ILNsAjmHZEwDcYtm1QKFqlaa69ogYl6alSgHo2iaOCHczt3U9ZcSlPsfcJX6MuCugO27271yp6fo5Jr1xvUWZOWSNuRCJa5qwECCIoggWII3Na/NA5zrg7hjPiC9Shj58Bryuf9xdr9eFdalA2cwsAgBMUDOlTsDx7FJvXOSXUeCRkG7PbZ9QgqEf4d++AtVHYk4DrRnNKMNiHn9j2jItoEwbaAMNaNnkUjc/HWTozrR0AJJx3+Bz38qNjVCIGCIQaQ8jr65fnlfB7d0J8wkPKYv50fnPICGyQhFNUGDwPLIc3fkWT6SrcY2g6xEYpRyv0EC1SeJDxLUhQyHe3GEumy/gWlZ+bcPlD+ddhuCflOXa3McqoZsnstPBM8TF/6nZfr22Vh79KEWN9eu0n3hgBeziaAGmbLZ5Hy6qQ3g1e6lnEPaVt6B25f44Hzfrrrc+LsXJZOP1vHXaJle/6Y1NSot2sVv0hpTb3Wd7cM/TUX959dQOm2/DVugsemlgXU3L0EKjp+eblvXrxvpr+ffAgi16MWWrLhxVJ17LmT51aj5Yvv16qD6EcSsKl6xS7Q3vnkYz1Oy/3I6W7YfEuY2Xy6XTsYfN5eMgvRvPbxcvz/2kG0wfL5zXwXAS8rLNmqxyUxmA91n9M6b9GA6FOSWM09cFgiI/qvbwOlpP1ssXP9OLkuDACDNVN1EcxQUiQm+oW4pa3FQSEA5cWcztuVdzLFAuORW71u2AFugCG1g90ASVWs2R4pyDtiiOILYpCbHypVh22z8/A4SxyxEJEDNWNIVzxPUfLHZ84WseGcnHQQlHEypZ3LIYqaBK9a244tBK40U1mDsJpmVb1wZU3JN71gwFYofcXTrg7hGCOMFIEbzqcC5bnAuZjDd/lYrIKqz8AkGpHAFMsbBbtKuOyXGcREhBNWMapBEqJPMkS43Jt/9Fw4c8k466k+zlfRvY8bc8B1InwEqBq1haSNYRnRhCIA/k+4DL+wHn5ptpgNUDkwkVDMMtksNPn32iGmTXJM12uzse56h3yuddlun4etP8AZJ5nI2do2CF99zms1SOB0kejbyWb37hrZCuVmlWvYoiRibNm5IfLXOMYCrZ7X1Cl4iYOxPmWcNlh/rI805+iC8VczIWvkCx7DUtO56xWYwRV5uFJ1/J5ty15cClzJtAG3FK1o7kAqIQ/7ijQBcqPSkeyr81ZcFnuU7Y2vMj45TrhMBkpk5qjLx/0xSQSrNY8h5l+8ZPGTjl/FC4S/IOi5Dd9JoK9P0XTRFaXfchpCkRXkfPBPskm+EU7wlyP5W+mMmI/GMyb/i3k/m5fzeWdBf7+k4X/7eygbN2gUhXC0CGpa5v5KIpnZPZHql/ADziddApAqcHqr1epWcf8Hq5XNsl8CCSxhfxV8leTo/fQ+Nf</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950D205F08FF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950D205F08FF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVdZc6pME773V1ieS8uwiAtWkqpBUFFREfebt3AYFmWTAQF//Tdo9CQ5yfnyvjfiND3dTy/0PPOMdc9lOwBjFMVO4Jdl8aXyT2tf52iGQzWGYxo18ndf4yHdrhmMSdfpVoul2+1KWcY4QbKPY92PXyoszdRrNF9juQXd7NS5Tp154tvsrlJeoQgT00Tlia6UM8/1cefq9qWSRH4n0LGDO77uIdyJYUcDyrhDNDv6HVPl9fmG8uowerXjOOxQFHwyEESuC59g4FHP1AedZwN3NMfy9TiJ0JtPA79U3vamafqU1p+CyKJYmqYpmqeIjoEd61fltXTfjAzZN4Pbuqv7ge9A3XUuegFKQbEdGGXgWkHkxLb3jWmGYujCdA1lsAYZzv9VoX47uKL7oaUPICOs17CtM3djc2SiCPkQlZdz+aXy62cVvO1dRLqPzSDy8Kf1v4OE/DNygxAZNXyP7I7u5xa/SNfrM4Id2Ydugp0zmhRtEuoQ4fIsQqaTjR1Mms/A5Wv5yxm+dxiC/6Ykz9R7nAQ29UVmRMdCOP4v9Xpfq5uVle4m6HUzPlwaE+cgjU+Y2Rr8pBo115Oj7uy5lyuE98o3UI9Sv60/N+qjr942HZleSsWimwJzdHB68zyri0dN6obKapwIdDvptsXWpM8kk8gEozWXq/OGy8ATbmx5VXDH0pT16KV47IZ5WBoAU4EXvj+n8myyjdbbndxvyCjW3PWB0vjpirY3Ckf7khfO2LnZaDXOGmsyc7Bg3MOAcVQapOlhI2gD3i7RuZ9I3cFOC1tr2WnaWay+/I7pfQxFXCOUX4Ms/m8aNC/qsf5YdItJYZLPM0aviix3q2K3C1DXAqksAEsWxhcwEazjyT46fT6lBaAue0AEuTIHqWhtxZWqjqTUWK3c3Uru9QRlzqUDsBVL5IUoZStxtxnS+noXbtkevdMEwdjMg319GBqDYzqw4URZKOlkIefKQcomC4leX2VWRtYX5aAw08WyXlofBF6ZS6mYXj2KUmpPdut5uF3yKbxIqgK4PmCWUtdWBgtvxcD63IakNxRwvMoFW+muVkomLcCsJFiTFYlt0e3tQugZ4d5z7XfGB8T4wuiv8n3fTXYX6aB0pX5XO/U1eV8XVWkI5tvlfr066uveuQQHE7C/e3Qajr4JUmvXTkV1OxwFO9k+wwlQJUFQAUkXDRS5PwRBXwAKB5zs0j0IzaBrkEYbsrhU5d1+c5M7pw3W+7SrM+02sx2vm7NTU5T86m6U7A+2Ym960+pIM85LPuYvW3yunpu6w8AsNNWNNIhHmTlQtdJ+JmYbOKga1pByL3wvUlpDEF1y21WsebxuTnG+d0xzLWymnNsyXaU+D03XDHNcXQTqMaKbAqqz1DY/j+ISsBQBgP5heRBURWgXSTXkVN0qgg56UpyAy4GNR+zqNBycXbitgyAbraeH41thDDGVBCpVJdJWUqktAqMowkBbSr0DWAqWFQmW1BNUKAJ1K4/SLcnXckCUP+exd82jJQlAqu9Akx+U6kuaj6exxnEg94Wl3+Nt5ZStjaZHt05IGmuTkEsVPDH93To4Kp4TLaNEW45Gk3G2XyT944HMKpPWRuf6riSdjyFwJqOFfRQDUZ+F220cVn0YwVgOPUXOLtMdPrSdvUcPqw1GmNEibLFLb58u+7q0G0WWxowGc39Wb/ElnJj5wKse2um6utCaYcvo+qaY59QuWtEBCHr8vHEyMpY92st03EzNITjudXaSubyQ89Jot4DpXB2tNa/aKDXO47FHXxYUNwmnqdZPOUlVq3VDWAwWOIycbdK2smjqG+xWj5vnHb1qOqF75NnkuODC+srySLFmZyNsKbOSym3gzrNaIRxSc+oMpJY5lvv5/qJfQm8KbwP083R4CG/zg3o/WT6Mnjvp0Ei3Ihjfl8UBJIvlHjkV9PjvBKaQOEbNvKp2woIF4Rj5ceW12FWQl05CKI5jdMiRcVtLHM0zNMOz9UavBwRJosnR3aMB3eB5mizuLOeG4hPEbuCbTuGr4HG3U+rvAKHXwcg3UFQ7Bwm0Ea78xWKRr7Lsz8nxG/gYLQLCE0GzBYBEAAOm2Wt0eUlkJZpviwLLC82eKFbKkyCe+tMImDGKPnJE/gNHnCPohA4qiGRxmmJynOKYpOSkn5PYZZ7O+pOPEkI1o4LtdViu3aCw44UuKgBTXmAkLnoK7fCaIArfnmxNh/gqLbIL8fWg/zbCz+/uySA6hlMo4CIcAZGCoi/4LnuP5ZuYG5948d08SAynOM9JZuPIgTckH1/9bpiiUx7dcv2B+A77of1Z8MEy9TmohzPj7MBH2z9uBIRQEsrxeq/KSX86PSXnc3KtQ6ugUxExTzEU3aI0BBPCifJFcEQ+9TBB/YiOPlB/8vyQf8SXxLavxeST9kjXlK/LH9xFNISLu4hMuj776UXng0uStxhl8VeyrkuuLAXiv95qYAcWekQ8I480iIzf5frC1js/JM5ihjm+VawK8pl/0xgwIGYdMseC6L3xrwx85fyj8JHkB5aYdNM+idH3b8rFgHqp6BAGiR/LxSAggvdD84ozzkPU+a30h5kr/Xvj8xn+ls9vlLFGxpenVx66zv9XrjnXdoGI7MLOFctLJSNXU+Lct94N6TeAX89prvu3Of0xktc/xH9K3uX08/fw+j8=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bb96fc41-2093-4734-aaeb-331d8f527d02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00007_PERM_UVTC_UserName_Valid_Role_DECE_CS_with_TokenType_ValidateEmail_200_OK_P1" searchProperties="true" id="71fa5dfa-f4ad-42f0-aba1-803c3d204002"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DECE_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDECECS"));
tS.setPropertyValue("audience","");</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full DECE">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID1",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082613</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F9502129F80EE314E0401F0A07990586</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_53257d12-ca17-41c1-87a1-852d6585c011</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_53257d12-ca17-41c1-87a1-852d6585c011</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdU/I6EL73V3TqdWmLLUgHmEFErR+ooL7qzZmQLiXaptAkfP36kxRaAcHje2YcmWw3u8/uPnmSOkNxVPZajEHKSUI1/7yh/+OelN1qYJcNjOyq4djYNk6rSP5zy0HFPXWxZdu65jMmwKeMI8obetmyHcNyDdt5siyvXPHs01Klar/r2gukTIaWLiVL1+ZxRJmXpW3oIqVeghhhHkUxMI9jr9+6u/Wkp4dyTHqzvkKZJUybI87HnmniUgAYogiXcBKbdXPLpx4wr09CirhIYZ0zYA19vXc2m5VmJ6UkDc2yZVmmVTOlT8BIeKw3j/LNEPh0mKzWbUQTSjCKyBIpUHfAR0mgtaIwSQkfxQdC26ZtqdAGzLGBbYce6+ZXggzdLyNtgUwZMtgI2XmwHgwhBYpBe+75Df34dxNc7X1KEWXDJI3ZzvrvIAGdQpSMITBYXlmO7vcR97SrWQfs+RRHgpEpdBVNxggD0x5SGJL5LWGSfAHTsvFrcyb/SM4ywH8zlrq5iVVCN/d055yEwPj/mdnmvFZRXlAkoMnePl7nn4+puLhPHp10Iiq3I9qJ55+V50YGYdN5BaoY93q9S9aCW+tNi+6EiY/WkxAXnVCeOfH58BhcR933PmlbYfT2sXibnnwErcmLP1tSc1KzcDwLYXnGEnf2DL3W1WR8Uwmv6NXVzVE7jKbDHu7cv75fPp6Gy1bk/rm87nXM7jV9GbycPw+GncV9/DhYzt/aPrxeVYOHt4fB45/xwr2szToD6o9u3vtvQa1iHZ10H9h130ndWvzO4X1RXT43vmrarGHbmEtCXww+APN8qejhn2sXcl6I/ywvykICY5i5emOlUYwD5XpT7VLS4gkpQCTw5DBX645j1WzLrpVP3IuL1lmnYzmWfWG1LLdWs+Qi16AVih2I7YQOicqlVHbFn58B4thjQANIjWki8AiY/kPEc8SR5tOePBwJZfCUSBW3p8l0Xh47AtMAE+dToE8GzmS21LVuwu/pfdoacki3pftkS7p7gMmYgNJ3RXAmGc647MUETQWP7NIUlSgIeQOkSoS9snPqmozE4wgUUjNOAhFBaTwaZ50x2eq3bCDMMmvWVsyyw3ewtt1veRukT0CUA1P1nIEcJey5h6y8mANFuzv3VR6+JQKizpjsKU8JXiHZ/vRFFcWRgifrqnLYhfeuYSuyuVtUkSyYElwQvrippdBLGWjmY5mg0qQkplORDaKqJC6V4U2pdLbZByykTi2ekk+gZhHC/NU1UaDeyVzYt/EJPqJ9jjjEkjZatvzFG6EPTL0RfMn3+W8fIFspZd84zPk+WzuSTwmF+MfXBvaw8pPmB/kzS9Lga1x7Ym3kkXXKhwEnNFQrdSEsDhADJzIskQqWpJvB9wXYl3zbWDS5wMIlmwaCw+EvmpKmho4wTgTl/rmeGTblMsPJF2Pwvpy+hckkeX3HztnBO/b17rYvhStGeuFL/tvZIBldMOjqKs+wNPS5fDLK5DTckOc1wP0K7bR/UujtSprfzN8tGz3dPQ/NfwE=</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdU/I6EL73V3TqdWmLLUgHmEFErR+ooL7qzZmQLiXaptAkfP36kxRaAcHje2YcmWw3u8/uPnmSOkNxVPZajEHKSUI1/7yh/+OelN1qYJcNjOyq4djYNk6rSP5zy0HFPXWxZdu65jMmwKeMI8obetmyHcNyDdt5siyvXPHs01Klar/r2gukTIaWLiVL1+ZxRJmXpW3oIqVeghhhHkUxMI9jr9+6u/Wkp4dyTHqzvkKZJUybI87HnmniUgAYogiXcBKbdXPLpx4wr09CirhIYZ0zYA19vXc2m5VmJ6UkDc2yZVmmVTOlT8BIeKw3j/LNEPh0mKzWbUQTSjCKyBIpUHfAR0mgtaIwSQkfxQdC26ZtqdAGzLGBbYce6+ZXggzdLyNtgUwZMtgI2XmwHgwhBYpBe+75Df34dxNc7X1KEWXDJI3ZzvrvIAGdQpSMITBYXlmO7vcR97SrWQfs+RRHgpEpdBVNxggD0x5SGJL5LWGSfAHTsvFrcyb/SM4ywH8zlrq5iVVCN/d055yEwPj/mdnmvFZRXlAkoMnePl7nn4+puLhPHp10Iiq3I9qJ55+V50YGYdN5BaoY93q9S9aCW+tNi+6EiY/WkxAXnVCeOfH58BhcR933PmlbYfT2sXibnnwErcmLP1tSc1KzcDwLYXnGEnf2DL3W1WR8Uwmv6NXVzVE7jKbDHu7cv75fPp6Gy1bk/rm87nXM7jV9GbycPw+GncV9/DhYzt/aPrxeVYOHt4fB45/xwr2szToD6o9u3vtvQa1iHZ10H9h130ndWvzO4X1RXT43vmrarGHbmEtCXww+APN8qejhn2sXcl6I/ywvykICY5i5emOlUYwD5XpT7VLS4gkpQCTw5DBX645j1WzLrpVP3IuL1lmnYzmWfWG1LLdWs+Qi16AVih2I7YQOicqlVHbFn58B4thjQANIjWki8AiY/kPEc8SR5tOePBwJZfCUSBW3p8l0Xh47AtMAE+dToE8GzmS21LVuwu/pfdoacki3pftkS7p7gMmYgNJ3RXAmGc647MUETQWP7NIUlSgIeQOkSoS9snPqmozE4wgUUjNOAhFBaTwaZ50x2eq3bCDMMmvWVsyyw3ewtt1veRukT0CUA1P1nIEcJey5h6y8mANFuzv3VR6+JQKizpjsKU8JXiHZ/vRFFcWRgifrqnLYhfeuYSuyuVtUkSyYElwQvrippdBLGWjmY5mg0qQkplORDaKqJC6V4U2pdLbZByykTi2ekk+gZhHC/NU1UaDeyVzYt/EJPqJ9jjjEkjZatvzFG6EPTL0RfMn3+W8fIFspZd84zPk+WzuSTwmF+MfXBvaw8pPmB/kzS9Lga1x7Ym3kkXXKhwEnNFQrdSEsDhADJzIskQqWpJvB9wXYl3zbWDS5wMIlmwaCw+EvmpKmho4wTgTl/rmeGTblMsPJF2Pwvpy+hckkeX3HztnBO/b17rYvhStGeuFL/tvZIBldMOjqKs+wNPS5fDLK5DTckOc1wP0K7bR/UujtSprfzN8tGz3dPQ/NfwE=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00008_PERM_UVTC_UserName_Valid_Role_Coord_CS_with_TokenType_ValidateEmail_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node SPL CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCoordCS"));
tS.setPropertyValue("audience","");</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full COORD_CS">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID1",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>coord:cs</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234DFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234DFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E40910192360FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E40910192360FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E40910192360FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E40910192360FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082620</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950D205F0D0F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_74959473-b9ff-4b15-bd75-e2a300b331a7</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_74959473-b9ff-4b15-bd75-e2a300b331a7</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0Tp41GIE8ItAiRaikrVK9DbfjkyjhO8m9hgO4H267cdSAqU9rCPhIQ8Gc+s8SyvcVvAJHb9nhCYS8KoMex3zH8bXqvW8hpVa9oKQ8ubOjVrGjRqFnZhFYBpterAhmkMhUjxkAoJqeyYLnA8C9Qsx5sA4Lt13/UqTbf2yzSeMBcqtHKpANNYJTEVfp62Y6ac+gwKInwKEyx8ifxx7+baV54+LDCZ3fYaZZ6Qd2dSzn3bRpUAIxzHqIJYYrftHZ92IPwxiSiUKcebnIHomJu9y+WysqxWGI9sFwBgg5atfAJBolOze1JsxsGQhmy9PoeUUYJgTD6gBnWD5YwFRi+OGCdylnwT2rEdoENbeIUs5Hj01LQ/E+Tojoy0A5ILaIkZdIpgIxxijinCxuNo2DFPj+vgeu+EQypCxhOxt/47SJhmOGZzHFiiqKxAd3zEA8fVbWPkDymKU0EyfKtpMocIC+Oe45CsrolQ5AuEkbffWAn1IwXLMPqbtrTtbawKun3gdPokwkL+n55t92sd5QnGKe6mIKt5y+bVYz0ggxl3q4/zq6sbDsCvqJND2HZegyrbvVnvk7Xk1mbTgLzeZ+HFuXvvPDZfFuJ1Ktgg6j1IOEkuG70VwKObpxdvOhfjWfWfy+eg0XSTl2VST8bn2VkUN+y3+H4iqldPL9nJ9eJtcgNq05BBN3kV0w+70Whw5NR7vXv+sGjVn0YP7mP2Pvrdr6a3/WcwHkXNMRep+1p7Rx/n/O558jFz3+pXgp94oO60HvrEng2fn+vPzuV1s/NZ03YNu8ZCEsbp9DdGslhqegz7xkD1C8qf5UVbSGCFuas/1xolJKbS7OpdWlr8VAkQCXzVzPX6wgMtBzgtt1oHg97ZxQXwgDMAPVBrtYBaFBq0RrEH8ZzRkOhcWmXX/PkZIEp8gWmAuZWxFM2wMH+I2IcSGkM6UpeDUYEnTKm4Iz5kuBJgxerMISFYJlEsEPdqpnHL5B29471QYr4r3dUd6R5hROYEa33XBBeK4UKqs1jALJWxU8lgheJUTQCuRVjta9ZsQZJ5jDVSO2FBGuPKfDbPT8YW63/XgkjkVsQYD3wk8tv3bXH734pzUD4B0Q5CF3SGVS/xgUHkFNV8qbp2cGAV4XtpQPQlU4cqOUFrJLufPrmiSVISpSirwF267xt2Qtv7VZXZgoygkvLlrFZSr4SgWzRmASuLSpplad6KhhY5rsLbSusce4xRqpTqfcLeMLXLEPZRg6JEvZe5tO/iS+WMjiWUOFHEMfLlEa+EMRb6lTBUjF8d+wTZSanOTeKVPGQ7j9VjQiP+8b2BfKT9lPle/S1VCz/bdSDWVh5Vp3oaSEIjvdIj4f0nZhClYYxvBz8U4FDyXWN5yCUWqdg0TSX+/ouhxaljQoRYSuWwb+aGbcHMccr3OfY/nb6EyUV5M2VX4tsp+3JzPVbSlUCz9CX/7WyRnC4Im3qY51g65ko9GlVyGm0J9AbgYY32+j9p9G4l3S/mr5atM92/D90/</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0Tp41GIE8ItAiRaikrVK9DbfjkyjhO8m9hgO4H267cdSAqU9rCPhIQ8Gc+s8SyvcVvAJHb9nhCYS8KoMex3zH8bXqvW8hpVa9oKQ8ubOjVrGjRqFnZhFYBpterAhmkMhUjxkAoJqeyYLnA8C9Qsx5sA4Lt13/UqTbf2yzSeMBcqtHKpANNYJTEVfp62Y6ac+gwKInwKEyx8ifxx7+baV54+LDCZ3fYaZZ6Qd2dSzn3bRpUAIxzHqIJYYrftHZ92IPwxiSiUKcebnIHomJu9y+WysqxWGI9sFwBgg5atfAJBolOze1JsxsGQhmy9PoeUUYJgTD6gBnWD5YwFRi+OGCdylnwT2rEdoENbeIUs5Hj01LQ/E+Tojoy0A5ILaIkZdIpgIxxijinCxuNo2DFPj+vgeu+EQypCxhOxt/47SJhmOGZzHFiiqKxAd3zEA8fVbWPkDymKU0EyfKtpMocIC+Oe45CsrolQ5AuEkbffWAn1IwXLMPqbtrTtbawKun3gdPokwkL+n55t92sd5QnGKe6mIKt5y+bVYz0ggxl3q4/zq6sbDsCvqJND2HZegyrbvVnvk7Xk1mbTgLzeZ+HFuXvvPDZfFuJ1Ktgg6j1IOEkuG70VwKObpxdvOhfjWfWfy+eg0XSTl2VST8bn2VkUN+y3+H4iqldPL9nJ9eJtcgNq05BBN3kV0w+70Whw5NR7vXv+sGjVn0YP7mP2Pvrdr6a3/WcwHkXNMRep+1p7Rx/n/O558jFz3+pXgp94oO60HvrEng2fn+vPzuV1s/NZ03YNu8ZCEsbp9DdGslhqegz7xkD1C8qf5UVbSGCFuas/1xolJKbS7OpdWlr8VAkQCXzVzPX6wgMtBzgtt1oHg97ZxQXwgDMAPVBrtYBaFBq0RrEH8ZzRkOhcWmXX/PkZIEp8gWmAuZWxFM2wMH+I2IcSGkM6UpeDUYEnTKm4Iz5kuBJgxerMISFYJlEsEPdqpnHL5B29471QYr4r3dUd6R5hROYEa33XBBeK4UKqs1jALJWxU8lgheJUTQCuRVjta9ZsQZJ5jDVSO2FBGuPKfDbPT8YW63/XgkjkVsQYD3wk8tv3bXH734pzUD4B0Q5CF3SGVS/xgUHkFNV8qbp2cGAV4XtpQPQlU4cqOUFrJLufPrmiSVISpSirwF267xt2Qtv7VZXZgoygkvLlrFZSr4SgWzRmASuLSpplad6KhhY5rsLbSusce4xRqpTqfcLeMLXLEPZRg6JEvZe5tO/iS+WMjiWUOFHEMfLlEa+EMRb6lTBUjF8d+wTZSanOTeKVPGQ7j9VjQiP+8b2BfKT9lPle/S1VCz/bdSDWVh5Vp3oaSEIjvdIj4f0nZhClYYxvBz8U4FDyXWN5yCUWqdg0TSX+/ouhxaljQoRYSuWwb+aGbcHMccr3OfY/nb6EyUV5M2VX4tsp+3JzPVbSlUCz9CX/7WyRnC4Im3qY51g65ko9GlVyGm0J9AbgYY32+j9p9G4l3S/mr5atM92/D90/</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E4091019234DFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E4091019234DFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00009_PERM_UVTC_UserName_Valid_Role_Portal_CS_with_TokenType_ValidateEmail_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportal"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdportalCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Portal_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportalCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950212AC76629DFE0401F0A059909A1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950212AC76629DFE0401F0A059909A1</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082626</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950212AC76729DFE0401F0A059909A1</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4jSRxRyKRASFaQcKNNMb1PoZdSXI+PsgGnipLEToF8/dmhSoLSnPRIS8s722mtfvOwThuLIcj3GIOMkoYo/7Kn/ttthNwztUDOQZWstcxpojnmMNcexQmNqWxBAV1V8xnLwKeOI8p5qGWZLM9qa2bo1DNfquJbdbLWdR1W5h4wJaOHSNFRlFUeUuWXYnppn1E0QI8ylKAbmcuxOvMsLV3i6qOKk9k82LMuAWX/OeerqOm4GgCGKcBMnsX6i7/icBMydkBlFPM/gNWbAeurr3uVy2VweN5NspluGYeiGowufgJHZkdr/UW2GwKdhslkPEE0owSgiL0iSugQ+TwLFi2ZJRvg8/gDa1E1DQmuwwho2W/RI1d8ClOy+iLRDMmNIY3NkVmBjCCEDikG5G/s99ehrHdzsvc0QZWGSxWxv/T1KQAuIkhQCjVWZVey+jnigXP0TwK5PcZQzUsCVHJMUYWDK7wxCsrogTAxfwJSy/cqKiR+ppgzwd9pyom9zFdT1A9UZkhkw/n96tt2vDco9inLoz6fn+HSwGF5eLW+uunc4fJ5ET3F7Pbg+7ZUUtp03pOp2v673h7WerddNY06cIJ2fRcVkFPN1CHA3esken/8kNw8Xd+frhun4vx/1+8ZlI+MP018re2qP143w+mlhdE47w4sRDcJb/Sryzl5+NOb24n60NG4i8M/9Nbnr8rM5IaMzKLxf/s+nJ8P2FsWvVT6MGtYjKxo3Xhw9TBh/mRyjwengT9Z+QOfTn2kxJz/QeP5MO1dxHqQP00xHP7te7y2n7Rx2jZUkTPLpAjCvlnI8/KEyEv1C/HN5kRYSaGHp6qZSoxgHytW+3CWlxc2FAJHAFc3crEdO27BMyxvYnY7lDEenRsswR4ZntB3HcDyz0qANiz2Kg4SGRMaSKruZn88J4thlQAPItCLJ8RyY+gniEHGk+HQsDkdCGdwmQsVNqx2uCEo7SZctFth0LHu96oRMVa4Sfk2vMy/kkO0q9/GOco8Bk5SAlHc530wMOOOiFM+oyHlkNgvUpJCLCyCTGuxarW5bZyROI5BE9TgJ8gia6TwtC6Ozzb+lIcxKK2E4TTKOIrM8fh9mt/+tKoTwCYh0YDKlf0A0Ew7cRGaVz8d5d7bzruC9PCDylImq8ozgDZPdT2/DIqeknpQ6Mczqqai3fBPiAID+CT99vzR1vKAgW9Gr21VcGEJO+lV/n1HzuZkXRV521JZSmQl4XSimqU8A50Lv1rfJE1C9htC/dN3UrPci1/Zdfjmf0wlHHGIxf0q5/MJbYwJMvjV8cW5WX33I7IQUdeOw4odsg0g8SSTjT18t2MXST5h/i79lkgVv7TqAtRVH5CkeGJzQmVzJi2X9wWzgRMASoYRJtg1+COBQ8F1jXeSaCxfTNM05fPxFkRLXUxHGSU65P1RLw7bsljz5OgX3zekdTCntr3f1in14V/+5vJgIAYyRWvuS/3bWSDkuGFT5JCi59NSVeHqK4HS2JfOvBN8pvdX1HNtq2UPLq5XeFkrfGp7WBdzJpP/O/N6yVdP989D/Cw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950228A97247D2AE0401F0A079904DE</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950228A97247D2AE0401F0A079904DE</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>94425ff6-2b60-4326-ada1-54c3cdb51a67</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00010_PERM_UVTC_UserName_Valid_Role_Retailer_CS_with_TokenType_ValidateEmail_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950221F2F40F204E0401F0A079902D1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950221F2F40F204E0401F0A079902D1</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082629</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950221F2F41F204E0401F0A079902D1</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdT+s4EH3nV0ThcZXmo+lHIloptJQNlAuiXJbLCzLOpPUlsdvYSQu/fu2UhLYUtnclpOLJeObMzPGxTzhKE8cPOIdMEEa1cNjTn1BsO62o2TKiTjc2XJD/eYCR4TbBcR0rbkOno2sh5zmElAtERU93LNs1rJZhu3eW5Tttv2k1vGbrUdfuIeMytHRpWLq2ShPK/TJtT88z6jPECfcpSoH7AvuT4GrsS08fVZj0/skaZZkw68+EmPumiRsRYEgS3MAsNU/MLZ+TiPsTMqVI5Bm854x4T3/fu1wuG8tmg2VT07Esy7Q8U/pEnEyP9f5RtRmikMZsvR4gyijBKCFvSIG6AjFjkRYkU5YRMUu/CG2btqVCG7DCBrZdeqybHwlKdAdG2gKZcWTwGbKrYLcQQwYUg/bzNuzpx4dNcL33LkOUxyxL+c76zyABLSBhc4gMXlVWoTs84p529U8A+yHFSc5JAT8UTeYIA9duMojJaky4JF/EtXL82orLP1KxDPCfjOXE3MQqoZt7ujMkU+Di/8xsc17rKPcoyaE/XuUTp1jxhZkGgzS+tM6f7wPRbImM9UoIm85rUPW439e7ZK259b4pZwu4ZmM8yIvnED1MrVY7enx7bF/kp/Tq9OYGnRIcdIJB8bwYPwZB++KfC2Re3N6LF/74eL24HL6mD2cv5+4yptZRhsa/+SAmU4t1im5zZF6s/nKTB+pMX66a/K15XuTBJf31t7gsHro/wyn/5SF6vRSdZBW+uZkQMEjTiUtfuZUcjXk8a6MkW6YdbxY8JOc3L72PmjZr2DZWkjDJn38DFtVS0SMcaiM5LyS+lxdlIZERl67+XGkUF0CF3le7lLT4uRQgEvlymOv1yGtZjmOPnJFrjRzLPbNcyx5ZgdXxPMsZ2pUGrVHsQBwwGhOVS6nsmj/fA8Spz4FGkBkFy/EMuP5NxCESSAvprTwcjHK4Y1LFebfdbXn2C7wyge08nefAZ8mS6doPJq7pdRbEArJt5W5uKfctYDInoORd8ZtLgnMhW7FARS4Su1GgBoVcXgCZ0mDfcbstk5N0noACaqYsyhNozGfzsjEmX/86BsK8tN6e3ZXn7suydr9VHZA+EVEOXNVyCnKKsOcKcqpCvi64vVlwFT7II6KOl2ynyAheI9n+9MESRY+aIrKip8HkqaZC7X7w9s87zW9Ambv9qBNFBdlIW92l8nqQ4tGvprlAjUUjL4q8nF9HCWMmw5tSH21zAjiX6vZ6x16AmnUI86DLpUa9k7m2b+PLxYxOBBKQSrZp5fKAl8UEuHpZhPKUrA59tmyllH0TsBL7bINEPkAU4m/fKNjHyk+ab+TPkmXRx7j2xNrII+uUzwlB6FSt1DXy+gUpMJNhidQ9lm0G3xdgX/JtY93kGouQbHrOBXz9RVOC1tMRxiynIhzqpWFTZEuc4nUO/ofTpzClkL/fzCv+5c38cDWeSLlLkV77kv92NkhJFwy6egCUWHr6Sj40ZXI63RD1d4Cfdb3ptd2B5zheu9b1ltR1r/vB5a1K+p/Mny0bPd09D/1/AQ==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950223964C92296E0401F0A05990987</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950223964C92296E0401F0A05990987</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>930885f3-a4db-4c89-a0c5-4b5518f49e63</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00011_PERM_UVTC_UserName_Valid_Role_Dynamic_LASP_CS_with_TokenType_ValidateEmail_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDLASP"));

tS.setPropertyValue("audience","");</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DLASP_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDLASPCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full DLASP_CS">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082635</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950212A52734295E0401F0A079905C8</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_460f784c-9485-4f1c-9f34-693129039fed</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_460f784c-9485-4f1c-9f34-693129039fed</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4jxnjD4yLPYEZAuHWKSEk0CTNS0eR1yBqS8SSCfDrr2RiBwjJTe8MM0br1e7Z3eMjnXKUJk7Q4RwyQRjVwl5L/+16Vvyt6WLDd5sNw41t+S+uu4bn123Ht+p+DJGuhZznEFIuEBUt3bFs17Aahu1OLCtwvKDerHmu/6Brt5BxGVq61CxdW6UJ5UGRtqXnGQ0Y4oQHFKXAA4GDcedyEEjPAJWY9PbpFmWRMGvPhFgEpolrEWBIElzDLDVPzT2f04gHYzKlSOQZvOSMeEt/2fv8/Fx7rtdYNjUdy7JMyzelT8TJ9Kve/lJuhiikMduuu4gySjBKyAYpUJcgZizSOsmUZUTM0ndC26ZtqdAGrLCBbZd+1c3XBAW6T0baA5lxZPAZsstgNxBDBhSD9vMmbOlfPzfB7d5JhiiPWZbyg/XfQQK6hIQtIDJ4WVmJ7vMRj7SrfQo4CClOck6WMFQ0WSAMXBtlEJPVgHBJvohrxfi1FZc/UrIM8N+M5dTcxSqhm0e60yNT4OL/zGx3XtsotyjJoX11d/HDuv4Tjn6yk4m3ufCG/tll//6pMbxuFRB2nbegqnG/rA/JWnHrZVPUWbA1mTPUmF+n86Xtgrho0Cx1HsxEWIPbfvMBfnWcyX20mXjMvKifpP9QoDej/mbIL3KXT3+l3xfXazfvN7+M7laxe9Mz47tw9WidzJbifnPXZHm6OfvWnQzX66eu5z0u1nfh2h4N5vmMDt24cf9wNWlkeE3Pv8f+Az879xhroi9/pvH610V/0K3jH/P8pN58cFuvNe3WsG8sJWGcP84Bi3Kp6BH2tL6cFxIfy4uykMiIC9dgoTSKC6BCb6tdSlqCXAoQiQI5zO363LV827J9p+45/c7Z+bnlWnbf6lgN37fkotSgLYoDiF1GY6JyKZXd8udjgDgNONAIMmPJcjwDrn8QsYcE0kJ6Iz8ORjlMmFTx6bPVmOd1q7lxVnb8uHxCc480/Yaja0MmruhV1okFZPvSXd+T7hvAZEFA6bsiOJcM50L24gktc5HYtSWqUcjlCZApEQ4cKTYmJ+kiAYXUTFmUJ1BbzBZFZ0y+fToGwryw9gad8eh3d/zbLr6/d8s7fFd2QvpERDlwVdIZyGnCkaPIKet5v25vt+4yfCePiPrMZFtFRvAWyf6rV7YomlRUeS2sRF5tODTsBTcP66ryRUuCK9pX57WUeykG7XI4T6j2VMuXy7wYxzcldJkMb0q9s80x4Fyq1XrC/gA1qxDmpw6LCvVB5sq+jy8XMzoWSEAqyaMVy0/cFMbA1U0hlKxfffYaspdS9k3AShyzdRN5oVCIP7xz4AArP2keycczy14LPxZrJ4+sU14PBKFTtVLHwvodbmAmwxKpYyzbDX4swLHk+8aqyRUWIdn0mAt4/42mBKqlI4xZTkXY0wvDrmgWOMV6AcGr05swhTC/nLQr/u5Je385GEv5SpFe+ZL/djZIQRcMujrQCywtfSUvjjI5ne6I9AvA4zrt9j/S6f1K2m/Mby07PT38Htr/Ag==</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4jxnjD4yLPYEZAuHWKSEk0CTNS0eR1yBqS8SSCfDrr2RiBwjJTe8MM0br1e7Z3eMjnXKUJk7Q4RwyQRjVwl5L/+16Vvyt6WLDd5sNw41t+S+uu4bn123Ht+p+DJGuhZznEFIuEBUt3bFs17Aahu1OLCtwvKDerHmu/6Brt5BxGVq61CxdW6UJ5UGRtqXnGQ0Y4oQHFKXAA4GDcedyEEjPAJWY9PbpFmWRMGvPhFgEpolrEWBIElzDLDVPzT2f04gHYzKlSOQZvOSMeEt/2fv8/Fx7rtdYNjUdy7JMyzelT8TJ9Kve/lJuhiikMduuu4gySjBKyAYpUJcgZizSOsmUZUTM0ndC26ZtqdAGrLCBbZd+1c3XBAW6T0baA5lxZPAZsstgNxBDBhSD9vMmbOlfPzfB7d5JhiiPWZbyg/XfQQK6hIQtIDJ4WVmJ7vMRj7SrfQo4CClOck6WMFQ0WSAMXBtlEJPVgHBJvohrxfi1FZc/UrIM8N+M5dTcxSqhm0e60yNT4OL/zGx3XtsotyjJoX11d/HDuv4Tjn6yk4m3ufCG/tll//6pMbxuFRB2nbegqnG/rA/JWnHrZVPUWbA1mTPUmF+n86Xtgrho0Cx1HsxEWIPbfvMBfnWcyX20mXjMvKifpP9QoDej/mbIL3KXT3+l3xfXazfvN7+M7laxe9Mz47tw9WidzJbifnPXZHm6OfvWnQzX66eu5z0u1nfh2h4N5vmMDt24cf9wNWlkeE3Pv8f+Az879xhroi9/pvH610V/0K3jH/P8pN58cFuvNe3WsG8sJWGcP84Bi3Kp6BH2tL6cFxIfy4uykMiIC9dgoTSKC6BCb6tdSlqCXAoQiQI5zO363LV827J9p+45/c7Z+bnlWnbf6lgN37fkotSgLYoDiF1GY6JyKZXd8udjgDgNONAIMmPJcjwDrn8QsYcE0kJ6Iz8ORjlMmFTx6bPVmOd1q7lxVnb8uHxCc480/Yaja0MmruhV1okFZPvSXd+T7hvAZEFA6bsiOJcM50L24gktc5HYtSWqUcjlCZApEQ4cKTYmJ+kiAYXUTFmUJ1BbzBZFZ0y+fToGwryw9gad8eh3d/zbLr6/d8s7fFd2QvpERDlwVdIZyGnCkaPIKet5v25vt+4yfCePiPrMZFtFRvAWyf6rV7YomlRUeS2sRF5tODTsBTcP66ryRUuCK9pX57WUeykG7XI4T6j2VMuXy7wYxzcldJkMb0q9s80x4Fyq1XrC/gA1qxDmpw6LCvVB5sq+jy8XMzoWSEAqyaMVy0/cFMbA1U0hlKxfffYaspdS9k3AShyzdRN5oVCIP7xz4AArP2keycczy14LPxZrJ4+sU14PBKFTtVLHwvodbmAmwxKpYyzbDX4swLHk+8aqyRUWIdn0mAt4/42mBKqlI4xZTkXY0wvDrmgWOMV6AcGr05swhTC/nLQr/u5Je385GEv5SpFe+ZL/djZIQRcMujrQCywtfSUvjjI5ne6I9AvA4zrt9j/S6f1K2m/Mby07PT38Htr/Ag==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F951063574E2D0B0E0401F0A07995357</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b54ca523-aea1-45b1-9f0f-eec821a32f9c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>31d2392e-5053-43d4-b375-6fa36d10c41a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00012_PERM_UVTC_UserName_Valid_Role_Linked_LASP_CS_with_TokenType_ValidateEmail_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdLLASP"));

tS.setPropertyValue("audience","");</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node LLASP_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdLLASPCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full LLASP_CS">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));

</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082646</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950D205F11DF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_e60019de-f795-47af-954b-904128f10d7d</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_e60019de-f795-47af-954b-904128f10d7d</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbRcto6EH3vV3jcx4yRDQZiT2CGBOilJQmJ07TJS0eRF6xiS0SSgeTrr2RiByjJTe8MM4zWq92zu0dHOpE4S+thT0oQinJmjfod+xe0XNcLYnCm7aDp+G08dYKm/+AEru/Vj6eeG7dj2xpJmcOISYWZ6th11/Mdt+l4/o3rhvVW6Ae1htu6t61bEFKH1i4117bWWcpkWKTt2LlgIceSypDhDGSoSBj1zseh9gxxicnunmxQFglFN1FqESJEajEQSFNSIzxDJ2jH5ySWYURnDKtcwEvOWHbsl72r1aq2atS4mKG667rIDZD2iSWdfba7n8rNEI/YlG/WZ5hxRglO6TM2oM5BJTy2eumMC6qS7I3QHvJcE9qBNXGI57PPNnpNUKD7YKQdkEJiRybYK4NdwxQEMALW9+tRx/78sQlu9t4IzOSUi0zurf8OErAlpHwBsSPLykp0H494oF3dEyDhiJE0l3QJF4YmC0xAWhMBU7oeU6nJF0urGL+1lvpHS5YB+ZuxnKBtrBo6OtCdPp2BVP9nZtvz2kS5xWkO3Tu6mrtXq3nbh6tWvd26j758O8vk4/h23ikgbDtvQFXjflnvk7Xi1sumc3zB3efk6CvFRzeSe+d3x+A/3Uzqz6OxP2R+vLjVJxF/ny8TmQwXE5Qen1770c/ky4+rq6OHH99Wkzk/lZeDy5h9SqNe0rzqXV6wwQ93wP0ArWb3ftr32Sj2bo+md8MIMWj228EtXCBFxs1MDNpIDNHx9TyOZxP0+3mNT4/Z6J59esyGX/8RlAtYn64FDe6C885rTds17BpLSYjyh99AVLk09Bj1raGeF1bvy4ux0NiZFq7hwmiUVMCU3TW7jLSEuRYgGod6mJv1wHcDTx+reqNVH/ZOBwPXd72h23ObQeDqRalBGxR7EM84m1KTy6jshj/vAyRZKIHFIJwlz0kC0n4nYh8rbI3YtT4cnEm44VrFvayR5i57Fsm0RQPh5fOF/N1oNQPbuuDqkl2K3lSB2JXuxo50XwOhCwpG3w3BpWa4VLoXj3iZq9SrLXGNQa5vAGFEOKz7x00kabZIwSBFGY/zFGqLZFF0BsnNf93BRBbW8bgXTX6dRb+84vy9Wd7+t7IT2iemxkGakk5BTxMOXEWNsp63625t112G7+UxNcdMt1UJSjZIdj+9ssXQpKLKa2El8mrDvmEnONqvq8oXLympaF/d11rutRh0y+E84tpjLV8u82IcbSN0QodHWu88FAHJtVo93fA5MFSFQB+6LCrUe5kr+y6+XCUsUlhBpsljFcsPvBQikOalMNKsX3/0GbKTUvdNwVodsp2l+kFhEL/75iAhMX7aPNF/Ky5eCz8UayuPrlM/DxRlM7My18LTG9wgXIelWse42A5+KMCh5LvGqskVFqXZ9JArePuLZQSqY2NCeM7UqG8Xhm3RLHCqpwWEr05/hCmE+eWmXcs3b9qf5+NIy1eG7cqX/rezQwu6ELDNhV5g6dhr/XDUydlsS6RfAB7WaX/4nk7vVtL9w/ynZaun++eh+y8=</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbRcto6EH3vV3jcx4yRDQZiT2CGBOilJQmJ07TJS0eRF6xiS0SSgeTrr2RiByjJTe8MM4zWq92zu0dHOpE4S+thT0oQinJmjfod+xe0XNcLYnCm7aDp+G08dYKm/+AEru/Vj6eeG7dj2xpJmcOISYWZ6th11/Mdt+l4/o3rhvVW6Ae1htu6t61bEFKH1i4117bWWcpkWKTt2LlgIceSypDhDGSoSBj1zseh9gxxicnunmxQFglFN1FqESJEajEQSFNSIzxDJ2jH5ySWYURnDKtcwEvOWHbsl72r1aq2atS4mKG667rIDZD2iSWdfba7n8rNEI/YlG/WZ5hxRglO6TM2oM5BJTy2eumMC6qS7I3QHvJcE9qBNXGI57PPNnpNUKD7YKQdkEJiRybYK4NdwxQEMALW9+tRx/78sQlu9t4IzOSUi0zurf8OErAlpHwBsSPLykp0H494oF3dEyDhiJE0l3QJF4YmC0xAWhMBU7oeU6nJF0urGL+1lvpHS5YB+ZuxnKBtrBo6OtCdPp2BVP9nZtvz2kS5xWkO3Tu6mrtXq3nbh6tWvd26j758O8vk4/h23ikgbDtvQFXjflnvk7Xi1sumc3zB3efk6CvFRzeSe+d3x+A/3Uzqz6OxP2R+vLjVJxF/ny8TmQwXE5Qen1770c/ky4+rq6OHH99Wkzk/lZeDy5h9SqNe0rzqXV6wwQ93wP0ArWb3ftr32Sj2bo+md8MIMWj228EtXCBFxs1MDNpIDNHx9TyOZxP0+3mNT4/Z6J59esyGX/8RlAtYn64FDe6C885rTds17BpLSYjyh99AVLk09Bj1raGeF1bvy4ux0NiZFq7hwmiUVMCU3TW7jLSEuRYgGod6mJv1wHcDTx+reqNVH/ZOBwPXd72h23ObQeDqRalBGxR7EM84m1KTy6jshj/vAyRZKIHFIJwlz0kC0n4nYh8rbI3YtT4cnEm44VrFvayR5i57Fsm0RQPh5fOF/N1oNQPbuuDqkl2K3lSB2JXuxo50XwOhCwpG3w3BpWa4VLoXj3iZq9SrLXGNQa5vAGFEOKz7x00kabZIwSBFGY/zFGqLZFF0BsnNf93BRBbW8bgXTX6dRb+84vy9Wd7+t7IT2iemxkGakk5BTxMOXEWNsp63625t112G7+UxNcdMt1UJSjZIdj+9ssXQpKLKa2El8mrDvmEnONqvq8oXLympaF/d11rutRh0y+E84tpjLV8u82IcbSN0QodHWu88FAHJtVo93fA5MFSFQB+6LCrUe5kr+y6+XCUsUlhBpsljFcsPvBQikOalMNKsX3/0GbKTUvdNwVodsp2l+kFhEL/75iAhMX7aPNF/Ky5eCz8UayuPrlM/DxRlM7My18LTG9wgXIelWse42A5+KMCh5LvGqskVFqXZ9JArePuLZQSqY2NCeM7UqG8Xhm3RLHCqpwWEr05/hCmE+eWmXcs3b9qf5+NIy1eG7cqX/rezQwu6ELDNhV5g6dhr/XDUydlsS6RfAB7WaX/4nk7vVtL9w/ynZaun++eh+y8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F951077A8524A0E0E0401F0A07995550</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57925f3d-0445-48fc-849a-c3d2a5ba6773</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0b9bbf2d-1b36-4fc2-84c3-ff96750d36d4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00013_PERM_UVTC_UserName_InValid_Role_dsp_with_TokenType_ValidateEmail(Negative)_403_FORBIDDEN_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DSP"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDSP"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full DSP">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","API_NOT_AUTH");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>DSP</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082651</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950233164E5634DE0401F0A079902E7</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_65017712-6d9e-4099-8b79-7555b61cac6e</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_65017712-6d9e-4099-8b79-7555b61cac6e</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSx1XIjUCJChIUqNgC7QLby3mpjDMEdxMbYifQ/vpjh4YCpT3skZCQJ+OZby7+Zi45iiPHb3IOiSCMar12XX+ueJZdrdqOUQlqYJStWs24mFZrRtXzvGnFxghXQNd6nKfQo1wgKuq6Y9llw/IMuzyxLN+p+F6lVK25/+jaPSRcmpYqJUvX1nFEuZ+7retpQn2GOOE+RTFwX2B/3Bz0fanpowKT3rjcoMwdJo25EAvfNHEpAAxRhEuYxealuadzGXB/TEKKRJrAu8+A1/X3u6vVqrRySywJTceyLNOqmVIn4CQ81xtnxWUIenTGNucrRBklGEXkDSlQAxBzFmjNKGQJEfP4C9O2aVvKtAFrbGC7TM9188NBju5ES3sgE44MPkd2YWwEM0iAYtB+j3p1/fy0Cm7uThJE+YwlMT84/x0koBlEbAGBwYvICnSnWzySrsYlYL9HcZRyksFQtckCYeDaXQIzsu4TLpsv4Fpefm3N5Y8UXQb4b8pyae5ildDNI9lpkxC4+D81263Xxso9ilJo3LQH19hdvd4OH+4fyc8wHHWH4+qsdXvL6jmEXeUNqG2538+HzbrtrfdL/Uq3dbPsT4Onq0nNZA/Xj4Q4bXr1Z0LtP+23zu/Uhet5+6a/fuv0npJyZzpsPj4MoouX9Q8yyLzRIwkeXl+HfVhaZ3aXuyQ03U78wIK78OlnpZmFy/FwOG/1Wm4/ca1f02oGrU5lPECDF2ETtxlHt141fXHai6rTaTXN4GWdXFwnzbPKTezhqBPS0eBJ/PjVXvJV/SOm3Rj2hQUljNPpC2BRHFV79NpaV9YLie/pRUlIYMxyVX+hOIoLoEJvqFuKWvxUEhAJfFnMzbkj35Ft2TXHrTjdZqvTscqW3bWallerWfJQcNAGxQHEK0ZnRPlSLLvpn+8B4tjnQANIjIyleA5c/8ZiGwmk9ehIPg5GOUyYZHEbz6p0kaVe5q7m9syDKLGdtTudMV0bMnFLb5PmTECyz93uHnePAJMFAUXwqsO5bHEuZDKWKEtFZJcyVKKQyhGQKBb2nfKFZ3ISLyJQUM2YBWkEpcV8kafG5Jt/x0CY59L2+C5/eV8GdvityIHUCYhS4CqWFsg6wpEhVC4C+Trgym7AhflmGhD1wGRCRULwBsn+p48+UQ2ybZJRZ/J8NX62C9xb9dOuy4R8vml+A8o8zMfWUZCRHbfFNJUDQtJHo6jmEpWWpTTL0rx+VUWNiTRvSoa0zTHgVPLb64T9AWpuTZgnjZct6gPPW/k+vlTM6VggAbHsNi0/nrBbjIGr3aIn38n61MVlz6XMm4C1OCa7iuQKohB/u6VgHys9Kb6TfyuWBB/lOmJrx4+MUy4UgtBQndQgef2iKTCTZolkPpbsGj9m4JjzfeE2yVssQnbTNBXw9RdNUVpdRxizlIpeW88FuzSb4xSvC/A/lD6Zyan8fTav+Zez+XHQH0vCi5G+1SX/rWyQvF2w3Eylfo6lrq/lqimd03CH1t8BHmf2cvc7Zt+PpPFJ/Fmyk9PD99D4Fw==</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSx1XIjUCJChIUqNgC7QLby3mpjDMEdxMbYifQ/vpjh4YCpT3skZCQJ+OZby7+Zi45iiPHb3IOiSCMar12XX+ueJZdrdqOUQlqYJStWs24mFZrRtXzvGnFxghXQNd6nKfQo1wgKuq6Y9llw/IMuzyxLN+p+F6lVK25/+jaPSRcmpYqJUvX1nFEuZ+7retpQn2GOOE+RTFwX2B/3Bz0fanpowKT3rjcoMwdJo25EAvfNHEpAAxRhEuYxealuadzGXB/TEKKRJrAu8+A1/X3u6vVqrRySywJTceyLNOqmVIn4CQ81xtnxWUIenTGNucrRBklGEXkDSlQAxBzFmjNKGQJEfP4C9O2aVvKtAFrbGC7TM9188NBju5ES3sgE44MPkd2YWwEM0iAYtB+j3p1/fy0Cm7uThJE+YwlMT84/x0koBlEbAGBwYvICnSnWzySrsYlYL9HcZRyksFQtckCYeDaXQIzsu4TLpsv4Fpefm3N5Y8UXQb4b8pyae5ildDNI9lpkxC4+D81263Xxso9ilJo3LQH19hdvd4OH+4fyc8wHHWH4+qsdXvL6jmEXeUNqG2538+HzbrtrfdL/Uq3dbPsT4Onq0nNZA/Xj4Q4bXr1Z0LtP+23zu/Uhet5+6a/fuv0npJyZzpsPj4MoouX9Q8yyLzRIwkeXl+HfVhaZ3aXuyQ03U78wIK78OlnpZmFy/FwOG/1Wm4/ca1f02oGrU5lPECDF2ETtxlHt141fXHai6rTaTXN4GWdXFwnzbPKTezhqBPS0eBJ/PjVXvJV/SOm3Rj2hQUljNPpC2BRHFV79NpaV9YLie/pRUlIYMxyVX+hOIoLoEJvqFuKWvxUEhAJfFnMzbkj35Ft2TXHrTjdZqvTscqW3bWallerWfJQcNAGxQHEK0ZnRPlSLLvpn+8B4tjnQANIjIyleA5c/8ZiGwmk9ehIPg5GOUyYZHEbz6p0kaVe5q7m9syDKLGdtTudMV0bMnFLb5PmTECyz93uHnePAJMFAUXwqsO5bHEuZDKWKEtFZJcyVKKQyhGQKBb2nfKFZ3ISLyJQUM2YBWkEpcV8kafG5Jt/x0CY59L2+C5/eV8GdvityIHUCYhS4CqWFsg6wpEhVC4C+Trgym7AhflmGhD1wGRCRULwBsn+p48+UQ2ybZJRZ/J8NX62C9xb9dOuy4R8vml+A8o8zMfWUZCRHbfFNJUDQtJHo6jmEpWWpTTL0rx+VUWNiTRvSoa0zTHgVPLb64T9AWpuTZgnjZct6gPPW/k+vlTM6VggAbHsNi0/nrBbjIGr3aIn38n61MVlz6XMm4C1OCa7iuQKohB/u6VgHys9Kb6TfyuWBB/lOmJrx4+MUy4UgtBQndQgef2iKTCTZolkPpbsGj9m4JjzfeE2yVssQnbTNBXw9RdNUVpdRxizlIpeW88FuzSb4xSvC/A/lD6Zyan8fTav+Zez+XHQH0vCi5G+1SX/rWyQvF2w3Eylfo6lrq/lqimd03CH1t8BHmf2cvc7Zt+PpPFJ/Fmyk9PD99D4Fw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950226009A11379E0401F0A079902D7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>930885f3-a4db-4c89-a0c5-4b5518f49e63</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c8221854-35d6-498d-a02d-421784be1022</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a8d70240-77fd-4efe-ba84-308dc9d6ea40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00014_PERM_UVTC_UserName_InValid_Role_device_with_TokenType_ValidateEmail(Negative)_403_FORBIDDEN_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Device"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDEV"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full Device">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","API_NOT_AUTH");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>DEV</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082658</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951062D978E4BE7E0401F0A059928E6</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_72601925-02da-4d83-bd89-ea6f0361475b</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_72601925-02da-4d83-bd89-ea6f0361475b</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0TpYxVyIVCIAInrblpaynX39KUyjgFvEpvGToB+/bEDoUCBwz4SEvJkPLPm4jVTYiDwLafKGAo5pkRxG2X1497KG2bRymmG5QHN9gpZbewVihoC+YmRzZv2fW6sKi5jEXIJ44DwsmoZpq0ZOc20B4bhWPeOYWWyduFdVUYoZMK0UMkYqrIKfMKcxG1ZjULiUMAwcwgIEHM4dPrV57YjNB2QYlIrpQ3KxGFYmXG+cHQdZjwEke/DDKSBXtIPdEoec/p4SgCPQrT16bGyur27XC4zy2yGhlPdMgxDN4q60PEYnt6qlZv0MvJcMqGbcx0QSjAEPv4CEtQz4jPqKVV/SkPMZ8EZ06ZuGtK0hlZQg6ZNblX920GC7kpLByBDBjQ2A2ZqrIcmKEQEImXYc8vq7XUV3NwdhICwCQ0DdnT+O0iIxMinC+RpLI0sRXe9xRPpqpQQdFwC/YjhGL3INlkAiJjyGqIJXrUxE83nMSUpv7Ji4ofTLkPwb8pS0vexCuj6iew08BQx/n9qtl+vjZUR8CNUeeBzo0bHw25nNqoPH++yzxYk1ce3r261nEDYV96A2pV7ez5u1l1vbS/Vap2XN9f75wmydn7Co8cG7ayz7Sad83oMi7TbrU1zfx7cpl5dB3A6HMbdwcM8sJvNLh0Hbvv3qxlU87WlPWqRm/xiOc933zEeZn0S38XQ/F1/mfVGd533t2jpjoq/4sIbtOuraDpcv77H3X7ApuDO6j7PipNJM1erB09ff2p565fdvJk/sdZL2B81zOp04T7oVnde/o5pP4ZDYUoJ/Wj8B0GeHmV7uA2lJeoF+GV6kRLsaZNE1VlIjmIcEa5W5C1JLU4kCAh7jijm5ty0jaIpn1U2b7WqtWbTsA2zZVSNXLFoiEPKQRsURxDrlEyw9CVZdtM/lwHCwGGIeCjUYhrBGWLqBYsNwIHikp54HJQwNKCCxc15PIbLvJ8FMViY2QmPec7y7w1aUJUXyjukE1YnHIWH3J094O4egniBkSR42eFMtDjjIhmfII64b2ZikCEoEiMglCzsWHYhpzMcLHwkoeoB9SIfZRazRZIanW3+LQ1AlkgbzVHy8s4GdvwtzYHQ8bBUYDKWGhJ1RD+GUN7JpYGcDzi/H3Bqvhp5WD4wkVAeYrhBcvjpu09kg+yapNccfNT7H2aKe6d+3XWRkJ839Qug9ON87Bx5Md5zm05TMSAEfVTSan6CzGcmiuMoqd+9pMZQmNcFQ5p6H8FI8Nt6QOeI6DsT+lXjZYf6yPNOfogv4jPS54CjQHSbkhyv2C36iMndwhXvZHXt4nLgUuSNoxU/Jav7YgWRiC9uKdCBUk+IX8Xfkobed7lO2NrzI+IUCwXHZCpPcpCszzQFpMIsFsxHw33jpwyccn4o3CV5h4WLbhpHHJ3/okhKK6sAQhoR7jbURLBPswlOvl4g51vph5mEyrezecXOzua353ZfEF4A1J0u/m9lDSftApEqV4AES1ldiVVTOCfTPVrfAjzN7HbrErMfRlL5If4p2cvp8Xuo/As=</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0TpYxVyIVCIAInrblpaynX39KUyjgFvEpvGToB+/bEDoUCBwz4SEvJkPLPm4jVTYiDwLafKGAo5pkRxG2X1497KG2bRymmG5QHN9gpZbewVihoC+YmRzZv2fW6sKi5jEXIJ44DwsmoZpq0ZOc20B4bhWPeOYWWyduFdVUYoZMK0UMkYqrIKfMKcxG1ZjULiUMAwcwgIEHM4dPrV57YjNB2QYlIrpQ3KxGFYmXG+cHQdZjwEke/DDKSBXtIPdEoec/p4SgCPQrT16bGyur27XC4zy2yGhlPdMgxDN4q60PEYnt6qlZv0MvJcMqGbcx0QSjAEPv4CEtQz4jPqKVV/SkPMZ8EZ06ZuGtK0hlZQg6ZNblX920GC7kpLByBDBjQ2A2ZqrIcmKEQEImXYc8vq7XUV3NwdhICwCQ0DdnT+O0iIxMinC+RpLI0sRXe9xRPpqpQQdFwC/YjhGL3INlkAiJjyGqIJXrUxE83nMSUpv7Ji4ofTLkPwb8pS0vexCuj6iew08BQx/n9qtl+vjZUR8CNUeeBzo0bHw25nNqoPH++yzxYk1ce3r261nEDYV96A2pV7ez5u1l1vbS/Vap2XN9f75wmydn7Co8cG7ayz7Sad83oMi7TbrU1zfx7cpl5dB3A6HMbdwcM8sJvNLh0Hbvv3qxlU87WlPWqRm/xiOc933zEeZn0S38XQ/F1/mfVGd533t2jpjoq/4sIbtOuraDpcv77H3X7ApuDO6j7PipNJM1erB09ff2p565fdvJk/sdZL2B81zOp04T7oVnde/o5pP4ZDYUoJ/Wj8B0GeHmV7uA2lJeoF+GV6kRLsaZNE1VlIjmIcEa5W5C1JLU4kCAh7jijm5ty0jaIpn1U2b7WqtWbTsA2zZVSNXLFoiEPKQRsURxDrlEyw9CVZdtM/lwHCwGGIeCjUYhrBGWLqBYsNwIHikp54HJQwNKCCxc15PIbLvJ8FMViY2QmPec7y7w1aUJUXyjukE1YnHIWH3J094O4egniBkSR42eFMtDjjIhmfII64b2ZikCEoEiMglCzsWHYhpzMcLHwkoeoB9SIfZRazRZIanW3+LQ1AlkgbzVHy8s4GdvwtzYHQ8bBUYDKWGhJ1RD+GUN7JpYGcDzi/H3Bqvhp5WD4wkVAeYrhBcvjpu09kg+yapNccfNT7H2aKe6d+3XWRkJ839Qug9ON87Bx5Md5zm05TMSAEfVTSan6CzGcmiuMoqd+9pMZQmNcFQ5p6H8FI8Nt6QOeI6DsT+lXjZYf6yPNOfogv4jPS54CjQHSbkhyv2C36iMndwhXvZHXt4nLgUuSNoxU/Jav7YgWRiC9uKdCBUk+IX8Xfkobed7lO2NrzI+IUCwXHZCpPcpCszzQFpMIsFsxHw33jpwyccn4o3CV5h4WLbhpHHJ3/okhKK6sAQhoR7jbURLBPswlOvl4g51vph5mEyrezecXOzua353ZfEF4A1J0u/m9lDSftApEqV4AES1ldiVVTOCfTPVrfAjzN7HbrErMfRlL5If4p2cvp8Xuo/As=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F9502206EF08EBC6E0401F0A079902CB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>930885f3-a4db-4c89-a0c5-4b5518f49e63</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c8221854-35d6-498d-a02d-421784be1022</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a8d70240-77fd-4efe-ba84-308dc9d6ea40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9ec8f0b3-2385-4152-81c7-4023a56b3086</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8ba6964e-9dc9-4780-a208-7f1c1b1825c7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00015_PERM_UVTC_UserName_InValid_Role_dsp:customersupport_with_TokenType_ValidateEmail(Negative)_403_FORBIDDEN_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DSP_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDSPCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full DSP_CS">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","API_NOT_AUTH");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>DSP_CS_1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082716</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95106357551D0B0E0401F0A07995357</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_25d0306e-f8db-42bc-bacf-fa88537cff80</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_25d0306e-f8db-42bc-bacf-fa88537cff80</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSx6MQJ4RbVJAoobu0XbYFym77sjLOBNxNbIgdoPvrjx0aCpT2sEdCQjOZyzcXf/aFwEns+m0hIJWUM6MXNM1fbiVEZVQFK6qHE8tzJ8SaYBJZEa7XK+UaiaI6Mo2eEBn0mJCYyabpIsezUMVyvBFCvlvzXVSqeI0n0xhDKlRoZVJSXuskZsLP0zbNLGU+x4IKn+EEhC+JP2x/u/WVpY8LTGbrYoMyT5i2ZlLOfdsmpRAIxDEpEZ7YF/aezUUo/CGdMiyzFF5zhqJpvvquVqvSqlzi6dR2EUI2atjKJhR0em62zgpnCHss4hu5gxlnlOCY/sEa1DeQMx4a7XjKUypnyQehHdtBOrQFa2IRx2Pnpv2WIEd3YqQ9kKnAlphhpwg2gAhSYASMh0GvaZ6fNsGN7yjFTEQ8TcSB/HeQgC0h5nMILVFUVqA7PeKRdrUugPg9RuJM0CX09ZrMMQFh3KUQ0fUtFWr5QmHk4zfWQv1osWVA/mYsF/YuVgXdPtKdgE5ByP8zs915baKMcZxB63eXfo2Dy4WN0HjWydoNrztT+S7Hst3MIewab0Btx/0qHy7rdrdene5+qjqntDZ2HyZlkQ6uMavXr0fZ4n65YOhhUO7Vrm6+9r2ReHi+x8ETuuk03OCxiqrpj6C/ri/ClzoZr8okiuOz/neYfq08Vq9q/ZvgR9Kfe1710eVB90v1ell+bgw60XyWDSKB/7EnXwaLxyd2fzfGT25M2i81euvB/TO9JXGle52c1TqN66D7u+6kazHpLJzxn8fmW027NewrC0oYZpNnILIQ9Xr0AuNK9Q/Lz+lFa2hoRbmpP9ccJSQwaba0l6YWP1MERENfDXMjdz3UcJDTcMtV96p92e0iDzlXqI0qjQZSQsFBGxQHEDucRVTn0iy72Z/PAZLEF8BCSK0lz8gMhPlJxABLbPTYQB0OzgSMuGJxx6s9T9N6NaoC504dVdxkxXkFuZlp9Ln8zr6n7UhCus/d5T3uHgChcwqa4PWGC7XiQqpmLPAyk7FTWuISg0xdAalmYd/16hVb0GQeg4ZqJzzMYijNZ/O8NbbY/LsWJiLXBsO7X53hLyc/fh9Wd/itaISyCak2ELqgS1DDhCM3kVNU83HV1d2qi/DtLKT6lKmuypSSDZL9T2/LordkuymD7igvq8C9NT/NvejKe3f7E2T2YVO22cIl3cld3KvqqlBE0irmusClRSlbLrN8kjVNkqkKbyuudOwhkEwx3cuI/wZmb0PYJ100W9QHmbf6fXyZnLGhxBIStXdGLp7wyhiC0K+Mnjox61OfMHspVd8krOUxXSdWjxGN+NP3CvGJtlPqO/W34mn4Nq4jsXbyqDrV00JSNtWSvlJePtgMwlVYqjiQp7vBjwU4lnxfuW3yFotU2zTJJHz8xdDk1jQxITxjsheYuWKXcHOc8mUO/pvRuzA5qb/e0mvx4S3989vtUFFfgs2tLf1vY4vm60LA1I+BHEvTXKtHp0rOpjsE/wrwOMd7V59x/H4lrXfq95qdnh6eh9a/</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSx6MQJ4RbVJAoobu0XbYFym77sjLOBNxNbIgdoPvrjx0aCpT2sEdCQjOZyzcXf/aFwEns+m0hIJWUM6MXNM1fbiVEZVQFK6qHE8tzJ8SaYBJZEa7XK+UaiaI6Mo2eEBn0mJCYyabpIsezUMVyvBFCvlvzXVSqeI0n0xhDKlRoZVJSXuskZsLP0zbNLGU+x4IKn+EEhC+JP2x/u/WVpY8LTGbrYoMyT5i2ZlLOfdsmpRAIxDEpEZ7YF/aezUUo/CGdMiyzFF5zhqJpvvquVqvSqlzi6dR2EUI2atjKJhR0em62zgpnCHss4hu5gxlnlOCY/sEa1DeQMx4a7XjKUypnyQehHdtBOrQFa2IRx2Pnpv2WIEd3YqQ9kKnAlphhpwg2gAhSYASMh0GvaZ6fNsGN7yjFTEQ8TcSB/HeQgC0h5nMILVFUVqA7PeKRdrUugPg9RuJM0CX09ZrMMQFh3KUQ0fUtFWr5QmHk4zfWQv1osWVA/mYsF/YuVgXdPtKdgE5ByP8zs915baKMcZxB63eXfo2Dy4WN0HjWydoNrztT+S7Hst3MIewab0Btx/0qHy7rdrdene5+qjqntDZ2HyZlkQ6uMavXr0fZ4n65YOhhUO7Vrm6+9r2ReHi+x8ETuuk03OCxiqrpj6C/ri/ClzoZr8okiuOz/neYfq08Vq9q/ZvgR9Kfe1710eVB90v1ell+bgw60XyWDSKB/7EnXwaLxyd2fzfGT25M2i81euvB/TO9JXGle52c1TqN66D7u+6kazHpLJzxn8fmW027NewrC0oYZpNnILIQ9Xr0AuNK9Q/Lz+lFa2hoRbmpP9ccJSQwaba0l6YWP1MERENfDXMjdz3UcJDTcMtV96p92e0iDzlXqI0qjQZSQsFBGxQHEDucRVTn0iy72Z/PAZLEF8BCSK0lz8gMhPlJxABLbPTYQB0OzgSMuGJxx6s9T9N6NaoC504dVdxkxXkFuZlp9Ln8zr6n7UhCus/d5T3uHgChcwqa4PWGC7XiQqpmLPAyk7FTWuISg0xdAalmYd/16hVb0GQeg4ZqJzzMYijNZ/O8NbbY/LsWJiLXBsO7X53hLyc/fh9Wd/itaISyCak2ELqgS1DDhCM3kVNU83HV1d2qi/DtLKT6lKmuypSSDZL9T2/LordkuymD7igvq8C9NT/NvejKe3f7E2T2YVO22cIl3cld3KvqqlBE0irmusClRSlbLrN8kjVNkqkKbyuudOwhkEwx3cuI/wZmb0PYJ100W9QHmbf6fXyZnLGhxBIStXdGLp7wyhiC0K+Mnjox61OfMHspVd8krOUxXSdWjxGN+NP3CvGJtlPqO/W34mn4Nq4jsXbyqDrV00JSNtWSvlJePtgMwlVYqjiQp7vBjwU4lnxfuW3yFotU2zTJJHz8xdDk1jQxITxjsheYuWKXcHOc8mUO/pvRuzA5qb/e0mvx4S3989vtUFFfgs2tLf1vY4vm60LA1I+BHEvTXKtHp0rOpjsE/wrwOMd7V59x/H4lrXfq95qdnh6eh9a/</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950221F311EF204E0401F0A079902D1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>930885f3-a4db-4c89-a0c5-4b5518f49e63</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c8221854-35d6-498d-a02d-421784be1022</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a8d70240-77fd-4efe-ba84-308dc9d6ea40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>60d0c277-a9e2-413c-acfa-fba360ade9bd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bbaf77dd-7e4a-4afb-a071-c5af692dba21</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00018_PERM_UVTC_UserName_Valid_Role_DECE_with_TokenType_ResetPassword_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DECE_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDECECS"));
tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdDECE"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full DECE">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID1",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082726</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951062D97B64BE7E0401F0A059928E6</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_1044a83b-9bd3-47e1-9801-6abc7bbacc9a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_1044a83b-9bd3-47e1-9801-6abc7bbacc9a</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj1VIwrWJAIly2bL0CpRt9+XIOAO4TZwQ21z6648dSAoUetgjISFPxjPfzHz+7CpDgZ93G4xBzElItW6rpv9jW8UiuiqMDWfsFYxiBWzDubJso4zGuDIeI4wdpGtdxgR0KeOI8pqet+yiYZUMuzi0LDdfcQtWruBU/ujaCGImQ0uXnKVrq8CnzE3S1nQRUzdEjDCXogCYy7E7aNzdutLTRSkmvV7doEwSxvUZ55FrmjjnAQbfxzkcBmbV3POpeswdkClFXMSwzemxmr7du1wuc8tCLoynZt6yLNNyTOnjMTK90Os/0s3gdekk3KybiIaUYOSTD6RA3QGfhZ7W8KdhTPgsOBHaNm1LhTZghQ1sF+mFbn4mSNCdGWkPZMyQwWbIToP1YQIxUAzac79b0y/Om+Bm7zBGlE3COGAH67+DBHQBfhiBZ7C0shTd+RGPtKteBex2KfYFIwu4VzSJEAamPcYwIatbwiT5PKYl49dWTP5IyjLAfzOWqrmLVUI3j3SnRabA+P+Z2e68NlFGyBdQjx8Xt5dF674gbkpv5UqeR6w8qVwJaC9rCYRd5w2obNzb9SFZM25tN/VQ5+WycTn5/dvv4eZ9a9QV73ekUWl70dPPUVF02QNqoqdpKO5waTh2+q/m+sUS1vUUz4P8r/KkF1R+tVaXz63l649pmw8fB8Hza1Rej0rlueOI+eu4GfdJb9Z5++ixXoFarOLZt9MA+2HH8UC8vd4U2i/r68VTIJ4nN60JtH++tfHox/Vi9Cfv98c3vWjFUPR4U3qqfda0W8O+MZWEgRi/AebpUtGj29I6cl6Ify8vykI8Y5K4upHSKMaBcr2udilpcYUUIOK5cpibdbtoObZlO/lCqdNpXLfbVtGyO1bDKjmOJRepBm1QHEBshnRCVC6lshv+fA8QBy4D6kFsLEKBZ8D0byK2EEdal/bl4Qgpg2GoVHzB8KywRDgcz51oPXuf+uv8hyOYrt2H/IE+xI0Jh3hfugt70t0HTCICSt8VwZlkOOOyF3O0ENy3cwuUoyDkDRArEXbzxauSyUgQ+aCQmkHoCR9y0SxKOmOyzX/eQJgl1qStmCWH72Rth9/SNkgfjygHpuq5BjlKOHIP5dNiThRdOriv0vAN4RF1xmRPeUzwBsn+p0+qKI5kPNlWlcLOvA8Ne5HNw6KyZN6C4Izw2U0thV7KQD0dyxzl5jmxWIhkEBUlcbEMb0qls80BYCF1aj0M34GaWQjzrGsiQ32QObPv4xN8RgcccQgkbbRkecYbYQBMvRG6ku+rcx8geyll3zis+DFb05dPCYX429cGdrHyk+ZH+bcMY+9zXEdi7eSRdcqHASd0qlbqQlifIAYOZVgiFSyMd4MfC3As+b4xa3KGhUs2jQWH0180JU01XfYvFJR3W3pi2JXLBCdfR+B+On0Jk0jy9o5dsZN37Mvd7UAKV4D0zJf8t7NBErpg0NVVnmCp6Sv5ZJTJ6XRHnrcAjyt0sfmdQu9XUv9i/mrZ6enheaj/Cw==</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj1VIwrWJAIly2bL0CpRt9+XIOAO4TZwQ21z6648dSAoUetgjISFPxjPfzHz+7CpDgZ93G4xBzElItW6rpv9jW8UiuiqMDWfsFYxiBWzDubJso4zGuDIeI4wdpGtdxgR0KeOI8pqet+yiYZUMuzi0LDdfcQtWruBU/ujaCGImQ0uXnKVrq8CnzE3S1nQRUzdEjDCXogCYy7E7aNzdutLTRSkmvV7doEwSxvUZ55FrmjjnAQbfxzkcBmbV3POpeswdkClFXMSwzemxmr7du1wuc8tCLoynZt6yLNNyTOnjMTK90Os/0s3gdekk3KybiIaUYOSTD6RA3QGfhZ7W8KdhTPgsOBHaNm1LhTZghQ1sF+mFbn4mSNCdGWkPZMyQwWbIToP1YQIxUAzac79b0y/Om+Bm7zBGlE3COGAH67+DBHQBfhiBZ7C0shTd+RGPtKteBex2KfYFIwu4VzSJEAamPcYwIatbwiT5PKYl49dWTP5IyjLAfzOWqrmLVUI3j3SnRabA+P+Z2e68NlFGyBdQjx8Xt5dF674gbkpv5UqeR6w8qVwJaC9rCYRd5w2obNzb9SFZM25tN/VQ5+WycTn5/dvv4eZ9a9QV73ekUWl70dPPUVF02QNqoqdpKO5waTh2+q/m+sUS1vUUz4P8r/KkF1R+tVaXz63l649pmw8fB8Hza1Rej0rlueOI+eu4GfdJb9Z5++ixXoFarOLZt9MA+2HH8UC8vd4U2i/r68VTIJ4nN60JtH++tfHox/Vi9Cfv98c3vWjFUPR4U3qqfda0W8O+MZWEgRi/AebpUtGj29I6cl6Ify8vykI8Y5K4upHSKMaBcr2udilpcYUUIOK5cpibdbtoObZlO/lCqdNpXLfbVtGyO1bDKjmOJRepBm1QHEBshnRCVC6lshv+fA8QBy4D6kFsLEKBZ8D0byK2EEdal/bl4Qgpg2GoVHzB8KywRDgcz51oPXuf+uv8hyOYrt2H/IE+xI0Jh3hfugt70t0HTCICSt8VwZlkOOOyF3O0ENy3cwuUoyDkDRArEXbzxauSyUgQ+aCQmkHoCR9y0SxKOmOyzX/eQJgl1qStmCWH72Rth9/SNkgfjygHpuq5BjlKOHIP5dNiThRdOriv0vAN4RF1xmRPeUzwBsn+p0+qKI5kPNlWlcLOvA8Ne5HNw6KyZN6C4Izw2U0thV7KQD0dyxzl5jmxWIhkEBUlcbEMb0qls80BYCF1aj0M34GaWQjzrGsiQ32QObPv4xN8RgcccQgkbbRkecYbYQBMvRG6ku+rcx8geyll3zis+DFb05dPCYX429cGdrHyk+ZH+bcMY+9zXEdi7eSRdcqHASd0qlbqQlifIAYOZVgiFSyMd4MfC3As+b4xa3KGhUs2jQWH0180JU01XfYvFJR3W3pi2JXLBCdfR+B+On0Jk0jy9o5dsZN37Mvd7UAKV4D0zJf8t7NBErpg0NVVnmCp6Sv5ZJTJ6XRHnrcAjyt0sfmdQu9XUv9i/mrZ6enheaj/Cw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00019_PERM_UVTC_UserName_Valid_Role_Portal_with_TokenType_ResetPassword_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportal"));

tS.setPropertyValue("audience","");
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950212A3F8A5E6CE0401F0A0599099B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950212A3F8A5E6CE0401F0A0599099B</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082732</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950212A3F8B5E6CE0401F0A0599099B</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EH2fr3A5j1PGF8zNFagyEGacMBPCJdnNy5aQG1DGlkCSDcnXr2xiBxiSzWwVVZTare7T3UdHuhQojhzPFwK4JIxqQb+t/2NBfe5Co2U0am5ouJY7N9AChwZG9Qa4GOGwiXUtECKBgAqJqGzrjmW7hlUzbHdqWZ7T8KpupVZzHnXtHrhQoZVLxdK1XRxR4eVp23rCqceQIMKjKAbhSexN/B9DT3l6qMCkdy73KPOEvLOScu2ZJq6EgCGKcAWz2Lw0j3wuQ+FNyJIimXB4zRmKtv66d7vdVrbVCuNL07Esy7RapvIJBVle6J0vxWYIA7pg+3UPUUYJRhF5QRmoHyBXLNT8aMk4kav4ndC2aVtZaAN22MC2Sy908y1Bju6TkY5AcoEMsUJ2EWwMC+BAMWizcdDWLz43wf3eKUdULBiPxcn6zyABTSFiawgNUVRWoPt8xDPt6lwC9gKKo0SQFH5mNFkjDEIbcViQ3ZAIRb5QaPn4tZ1QP1KwDPCfjOXSPMSqoJtnutMnSxDy/8zscF77KPcoSqDjXK+u7ykXdp0/jWPn7/HjyNzerbpz51c7h3DovAdVjvt1fUrWkluvm/oPs1H/5ec9fLOXwQ276UVW8Oj3+8u7YS/sEjeS7ubqMZ6gYTTyh/ypacddC03jdWNuv/x6ni2aD8PRd9GtW1/9L1f29f30ufvgf02pRW/COw7fyS13N5tpdVB/aFqz5ys6968DgYbf7N7VDplf7Rlhy/i6/xINFtPGiA9Gy2uWvsy+7HpTuGfjYOa/3G3q24d+bdZ+q+mwhmNjIQmTZP4EWBbLjB5BXxuoeSH5sbxkFhIai9zVW2caJSRQqXeyXZm0eIkSIBJ6apj79aBVsxzb8auDpl+7qveuLNeyB5Zv1Votq9XqFhq0R3ECscfogmS5MpXd8+djgDj2BNAQuJGyBK9A6B9E7COJtICO1eFgVMCUKRWvbaurnRNXefwU2pHEqzRlTeRuU137yeQtveX+QgI/lu7qkXSPAZM1gUzfM4ILxXAhVS82KE1kZFdSVKGQqBuAZyLsOW6zZgoSryPIkJoxC5MIKuvVOu+MKfb/joGwyK1E4DXjEkV2fv7eLe/0W9EJ5ROSzEFkJXVBTRPOXEVOUc/7ddcP6y7C+0lIsmOm2io5wXskx5/e2JLRpKTKW2EF8nLDqeEouHlaV5kvTAkuaV/e10rulRh0iuFsUGVTSdI0ycfRyISOq/Cm0jvbnABOlFo9T9kvoGYZwvzUZVGiPslc2o/xJXJFJxJJiBV5tHz5iZfCBET2UggU63effYYcpVR9k7CT52y9SD0oMsQfvjmwhzM/ZR6pvy3j4du4zsQ6yKPqVM8DSegyW2XXwvM73MBMhSVKxxg/DH4uwLnkx8ayySUWqdg0TyS8/0XLBKqtI4xZQmXQ13PDoWjmOOXzGrw3p9/C5ML8etPuxLs37V8/hhMlXzHSS1/y384GyemCQc8u9BxLW9+ph6NKTpcHIv0K8ESnbavuDGqtmjuoN1ulTjdarVrVbZUNPKqk85v5d8tBT0/PQ+df</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F951062F5954F689E0401F0A07995349</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F951062F5954F689E0401F0A07995349</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00020_PERM_UVTC_UserName_Valid_Role_Retailer_with_TokenType_ResetPassword_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F951063C02B60C19E0401F0A07995351</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F951063C02B60C19E0401F0A07995351</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082737</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951063C02B70C19E0401F0A07995351</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbRbuI6EH3fr4iyj6sQJwRCooJEobRRC22B28vuy8o4A7gNTho7QPv1a4cmBUp72SshIU/GM2dmjo99xvEysv0255AKGjMt6Db13/a0WgeMpoZLapbh2A1kNBpTbNgWqtkILJd4M10LOM8gYFxgJpq6jSzHQDXDcsYI+bbrVxsVt974pWsPkHIZWrpUkK5tlhHjfp62qWcp82PMKfcZXgL3BfFH7f6NLz19XGDSW2dblHnCtLUQIvFNk1RCIBBFpELipXlm7vmchdwf0TnDIkvhLWfIm/rb3vV6XVlXK3E6N22EkIk8U/qEnM6/661vxWYIAzaLt+sOZjGjBEf0FStQfRCLONTa0TxOqVgsPwltmRZSoQ3YEINYDvuum+8JcnQnRtoDmXJs8AW2imBDmEEKjID2zzBo6t9Pm+B27zjFjM/idMkP1n8HCdgKojiB0OBFZQW60yMeaVfrDIgfMBJlnK5goGiSYAJcu0thRjc3lEvyhVzLx69tuPzRgmVA/mYsZ+YuVgndPNKdLp0DF/9nZrvz2kZ5wFEGrfApoJf3TNivnQXv2zeOVVt0aa/2I0PNHMKu8xZUOe639SFZS269bVq7w1k2jbrubNIdYSvunl/i4JaOg4eJOXhxryfuvN2Z9K0odTq1n054c309mN52fo1e77jj0NmVffGzbXnJ6nxw9W1NPU9sLrJxfRBbP3j4b3/seXD1OIBb65JmYzy7v17dOY1heF2dTBLcHw1c1ns479QGUe961I+n62T19MMNG9Xk2z3u9u42mT2Y2tXLaBCH/Kn5XtNuDfvGQhJG2fQRiCiWih5BV+vJeWHxtbwoCw2NWe7qJ0qjuAAm9JbapaTFz6QA0dCXw9yue17NQvVqB9nnddSxvAvkIKuH2sj1vFq1ZhUatEVxALETsxlVuZTKbvnzNUCy9DmwEFJjFWdkAVz/ImIXC6wFbCgPR8w4jGOp4pY7RXPiNaZz99H1nLqFUpuiRrjRtUEsbtlt2p4JSPelu7on3UMgNKGg9F0RnEuGcyF78YxXmYisygpXGGTyBkiVCPu206iZnC6TCBRScxmHWQSVZJHknTH59t82MOG5dXgxzg/ep3UdfitaIH1Cqhy4quUc5BjhyB1kF4V8XnB9t+AifDsLqTpfsp8ipWSLZP/TO00UP0qOyIp+d0a/Sy6U7idv/7jT/AKUediPMlG4ojtpi8tU3g9SPVrFNJ9x5bmSrVZZPj9XKWMqw5tSIC1zBCST8vYyjp+AmWUI86TbpUR9kLm07+PLxIKNBBawlGzT8uUJT4sRcPW0COQx2Zz6btlLKfsmYCOO2TqRfIEoxF8+UohPlJ8038m/dZyG7+M6Emsnj6xTvicEZXO1UvfIyyekILEMS6Xwxelu8GMBjiXfN5ZNLrEIyaZpJuDzL5pStKaOCYkzJoKunht2VTbHKV4S8N+dPoTJlfztat7wT6/mSf9mJPVuifXSl/63s0FzuhDQ1Qsgx9LUN/KlKZOz+Y6qvwE8EHZk2x23cWG3a5bT2BV2ZHfPywbuVdL6YP5o2enp4Xlo/QE=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95022C78E2A5148E0401F0A079902DB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95022C78E2A5148E0401F0A079902DB</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00021_PERM_UVTC_UserName_Valid_Role_Dynamic_LASP_with_TokenType_ResetPassword_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDLASP"));

tS.setPropertyValue("audience","");</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F951063C02CF0C19E0401F0A07995351</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F951063C02CF0C19E0401F0A07995351</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082742</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951063C02D00C19E0401F0A07995351</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSxyrEuVGIAIlC6bK9cQhs2305Mo4DbhObxg6X/vq1A0mB0p7ukZCQJ+OZb2Y+f3aDwyS2/TbnOBWEUa3fber/WqHjQAchY2KHE8O1HGjU3Vpk1CzPrdUjiBCa6Fqf8wz3KReQiqZuA8s1gGdY7ggA3z73XafierXfuvYLp1yGli4VoGurJKbcz9M29SylPoOccJ/CBHNfID9o39740tOHBSa91digzBOmrZkQc980USXECMcxqiCWmA1zz6cRcj8gUwpFluJtzpA39e3e5XJZWToVlk5NGwBggropfUJOpqd666TYjMM+jdhm3YGUUYJgTN6gAnWLxYyFWjuespSIWfJJaMu0gApt4BUykOXSU918T5Cj+2akPZAphwafQasINsQRTjFFWBsP+0399HsT3OwdpZDyiKUJP1j/HSRMFzhmcxwavKisQPf9iEfa1Wpg5PcpijNOFvhO0WQOEebaIMURWd0QLskXci0fv7bi8kcKlmH0N2NpmLtYJXTzSHe6ZIq5+D8z253XJsovGGe49RJdXz8E8dklqP18TPiYXUPvMV1kVvLUzCHsOm9AlePerg/JWnJru6l3Ncxmk+qEt6vPF8GVl8aDB++B9saoc3s/fh3by+fRzePk4Xr4s+7czZb3g6X543o18apxjQVZewjA1H0bXV0kZ96JaZ1dWf307eX3YsLOzOeAuz+GSfdulE2fwPNQINPh8xobn9W64nLsxR0xqEEPu89vwfU/rwm76yTMfVw60ePdzUn0RPtPaP3kBjMzGE7XHcSa7zXt1rBvLCQhyCbPGIliqejR72o9OS8ovpYXZSGhEeWu/lxpFBeYCr2ldilp8TMpQCT05TA3617ds0DV6QC70wMdq34JXGD1QBuc1+ue41mFBm1QHEDsMBoRlUup7IY/XwNEic8xDXFqLFiGZpjrX0TsQgG1Ph3Kw8EoxyMmVZzVq1VRq9rrV3tuTaIqPV+AVMo007U7Ju7pfdqOBE73pdvZk+4hRmROsNJ3RXAuGc6F7MUrXGQitioLWKE4kzdAqkTYt92aZ3KSzGOskJoJC7MYV+azed4Zk2/+bQMinlu7N+1gkB+9Tys7/FY0QfqERDlwVc0FloPER24hpyjl85KruyUX4dtZSNQJkx0VKUEbJPuf3omiGFKyJK+pAF36Hhr24pqHJZWpwgVBJdnLW1qKvJSAVjGSV1h5rWSLRZYP4VzJWyrDm1LlLDPAKJMatR6xF0zNMoT5rSuiRH2QubTv48vEjAYCCpxIymj58hvvgwBz9T7oS66vvvv42Esp+ybwShyzdWL5jFCIv3xpIB8pP2keyL8lS8P3cR2JtZNH1ikfBYLQqVqpy2D9CS0Qk2GJVC+W7gY/FuBY8n1j2eQSi5BsmmQCf/5FU7LU1GX/WEZFv6vnhl2pzHGK9Rz7704fwuRyvL1fV/zT+/Xx9iaQopVAvfQl/+1skJwuCOvqGs+xNPWVfC7K5HS6I81bgAfqDGy716u6XtUF1d6uOgOn7ZQN3Kuk9cH80bLT08Pz0PoD</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95022FF6456406FE0401F0A079903A3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95022FF6456406FE0401F0A079903A3</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00022_PERM_UVTC_UserName_Valid_Role_Linked_LASP_with_TokenType_ResetPassword_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdLLASP"));

tS.setPropertyValue("audience","");</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>LLASP</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F951077A857BA0E0E0401F0A07995550</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F951077A857BA0E0E0401F0A07995550</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082746</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951077A857CA0E0E0401F0A07995550</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdU/I6EL73V3TqpVPaQstHR5hBAV9GROVDHW7OhHSBaJtAkxbw15+k2AqIHt8zMNPJdrP77O7TJ7nkKAyKXpNziARhVOu26vo/ZbtsO1UbG9hxXcMB2zKmNbCNGXJ87BSLRWdm6VqX8xi6lAtERV0vWrZjWK5hOyPL8ooVz6kU3Ep5omtPEHEZWroU5K5NGFDupWnrehxRjyFOuEdRCNwT2Bs273qe9PRQhklvXO5QpgmjxkKIpWeauOADhiDABcxC89I88Ln0uTckc4pEHMFHTp/X9Y+96/W6sC4VWDQ3i5ZlmVbNlD4+J/NzvXGWbQa/S2dst75GlFGCUUDekQJ1B2LBfK0ZzFlExCL8JrRt2pYKbcBGdtN26LlufiZI0f0y0gHIiCODL5CdBRvADCKgGLTxoFvXz383wd3eUYQon7Eo5Efrv4MENIGALcE3eFZZhu73EU+0q3EJ2OtSHMScJNBXNFkiDFx7iGBGNj3CJfl8rqXj1zZc/knGMsB/M5ZLcx+rhG6e6E6LzIGL/zOz/XntojyhIIaG77w/Pw7ak3Wy6t+/YYd14ouXaMKH42Y9hbDvvAOVj/tjfUzWnFsfm6LbbY13oNwvbl5DN15cbCaz2vAFRnBPn7uj6eqBTjcjPv0zKDG/8t5Z9crLu6oTtN0KH69vbp0b//atTOF9Hk/Onsavy8fbx+n1nwU03wdP1YvFxdWElQMcLJLWzSPq3YLolMus1E9KN8mffn8oku621KpdRaQ9Fk9tB/CNQx/Gz+2zUTmebOd31ZtVaciT57F5sa5/1rRfw6Exk4RhPH0FLLKloke3pXXkvJD4WV6UhfjGLHX1lkqjuAAq9IbapaTFi6UAEd+Tw9ytOzXXtiqVZtWtXDWttvw5lt2xmlalVnNd18o0aIfiCOI1ozOicimV3fHnZ4A49DhQHyIjYTFeANd/iNhCAmldOpAfB6McRkyquI3m27lLeMUPFuE6mHEHUWcqXF/X+kzc0/uoORMQHUp36UC6B4DJkoDSd0VwLhnOhezFCiWxCOxCggoUYnkCREqEvaJTdU1OwmUACqkZMj8OoLBcLNPOmHz3LBoI89Ta6zWHD+mn921lx++yJkgfnygHrqq5AjlIOHEKlbJSvi+5vF9yFr4Z+0R9YbKjIiJ4h+Tw1SdRFENylqQ1ZaBz32PDQVzzuKQ8lZ8QnJM9P6WlyEsJaGQjWaHCqhAnSZwOoaLkLZLhTalytjkEHEuN2o7YG1AzD2H+6ojIUR9lzu2H+GKxoEOBBISSMlq6/MX9YAhc3Q+6kuub314+DlLKvgnYiFO260BeIxTiH28a2MPKT5of5GPNIv9zXCdi7eWRdcpLgSB0rlbqMNh+QwvMZFgi1YtF+8FPBTiV/NCYNznHIiSbprGA799oSpbqOsKYxVR0W3pq2JfKFKfYLsH7dPoSJpXjj/N1w789X1/uekMpWiHSc1/y384GSemCQVfHeIqlrm/kdVEmp/M9af4A+EWdy6Vrq9huW9d27UCdS66dN/CgksYX81fLXk+Pv4fGvw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F951063C02EE0C19E0401F0A07995351</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F951063C02EE0C19E0401F0A07995351</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00023_PERM_UVTC_UserName_Valid_Role_AccessPortal_with_TokenType_ResetPassword_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdAccportal"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Access Portal"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdAccportal"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>ACCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950219279E43C50E0401F0A0799053D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950219279E43C50E0401F0A0799053D</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082750</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950219279E53C50E0401F0A0799053D</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc5s6EH7vr2DoYwYjMASbiT3j+NKS5uL6kvbk5YwiFqwUhI0EJv31FTg4tuPkuGfGMx4tq91vL/p2LziOI9PtcQ6poAlTvEFH/bcFAIZPTA0h09EsywGt3TZtDXzkAGm2g6DlqIrHeQYe4wIz0VFNZFgasjXDmiHkmo5rG41m03lQlXtIuTQtVRpIVYo4Ytyt3HbULGVugjnlLsMxcFcQd9q7uXalpotrTGr3YoOycph2F0IsXV0nDR8IRBFpkCTWL/Q9nQufu1MaMiyyFF58+ryjvtxdr9eNdbORpKFuIoR01Naljs9p+Fntfqovg++xINmc+5gljBIc0d+4BHUDYpH4Si8Kk5SKRfyOaUM3UGlag4JoxLDYZ1V/dVChO9HSHsiUY40vsFEbm0AAKTACynziddTPp1Vwc3eWYsaDJI35wfnvIAHLIUqW4Gu8jqxGd7rFI+nqXgBxPUaijNMcbss2WWICXBmnENDimnLZfD5XqvIrBZc/WncZkL8py4W+i1VC149kZ0BD4OL/1Gy3Xhsr9zjKoJs+9r6dzah5N7u5fDybpWEOq/z3MGovrE4FYVd5A2pb7pfzYbNue+vlEpn/Mxw6k3kw9/s/4/Fk/t3+1jfHI+PqKjfzge3w3lVSRE/GOVqt1oswGPavIGuJu9+3xXD8jMckfkJ3+GZeYPHpubi/ds7Q/HJ835o/PfxwQnt4tmDfvz4u7i7DM9G7XXo2bfNeUETfpuyL7eVXOG7a/dC697j+0Hvyf0SjZfD9Nlt8Ws/a+MfZ2L7+ev0w/WpMvzyvO68x7cawL6wpYZo9PgER9bFsD2+gjGS9sPiYXkoJ9bWgUnWXJUdxAUyo3fJWSS1uJgmI+q4s5uY8atvINNqm0x5azb6NhshCxgj1kNNuI7s5qDlog+IAYj9hAS19lSy76Z+PAZLY5cB8SLU8ycgCuPqBxQEWWPHYRD6OhHGYJZLFjSa0zsE/d6wsb5q/QttAiK9sYavKbSLu2F3aCwSk+9Td3KPuCRC6pFDye9ngXHY4FzIXK5xnIjIaOW4wyOQESEsSdk2rZeucxssISqR6nPhZBI3lYlllRuebf1PDhFfSyXBWPbx34zr8VqdA6vi0VOBlLJcgywhHZpBVB/J+wOe7Adfme5lPy/cl8ylSSjZI9j+9tknZH9se6fX7w+m0Rr1VPu2yTMfbm/oHkPTDbGwd+TndcVuPUjkdJHd061qucGPVyPI8q6rnlLyYSvO6pEdDnwLJJLk9z5JfwPStCf2k2bJFfeB5K9/Hl4kFmwosIJa9plTHExaLKfBysfDkIylO3Vr2XMq8CSjEMVk/kvtHifjDFYW4pNST4rH8Wyep/1quI7Z2/Mg45TYhKAvLUzlFnt9pCpJIs1TSXpLuGj9m4JjzfeE2yVssQnbTYybg/S9KyWcdFROSZEx4A7US7HJshVM8L8F9VXpjpuLxl8Fc8HcH88+b66lkuxirW13638oardqFgFrO/wpLRy3knimds3CH018AHtL6wEQtczQyzcGltUvr9rljbxO4F0n3jfitZCenh++h+wc=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950D2082FF22DB4E0401F0A07995675</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950D2082FF22DB4E0401F0A07995675</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bb96fc41-2093-4734-aaeb-331d8f527d02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fa8525a5-4dd0-44ab-89af-92e2a4549d94</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00024_PERM_UVTC_UserName_Valid_Role_DECE_CS_with_TokenType_ResetPassword_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DECE_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDECECS"));
tS.setPropertyValue("audience","");</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full DECE">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID1",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082753</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951091E4E217B21E0401F0A05993966</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_a2d1ca33-4af7-4bb0-a9d0-047a6f785eeb</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_a2d1ca33-4af7-4bb0-a9d0-047a6f785eeb</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3fXxGlz8EJJFCigkQv7Ka7LW2h15cj4wzENHGo7XDp1x87kBQo7ek+EhLyZDyzZmZ52UcCJ3HV7wgBXNKUGcFpy/wHV0OH4FrNcvGoYbnDoW3hZmhbttvA9VHj0AMYmkYgRAYBExIz2TKrtuNatmc57sC2/WrD9xoV16u/mMYDcKFCK5eKbRqLJGbCz9O2zIwzP8WCCp/hBIQvid/vXF36ytPHBSazfbRCmSfk7UjKqY8QqYRAII5JhaQJOkJbPkeh8Pt0zLDMOKxzhqJlrvfO5/PKvFZJ+RhVbdtGdhMpn1DQ8YHZ/lVshjBgo3S1PsEsZZTgmL5jDeoKZJSGRicep5zKKPkitIMcW4e2YEEs4rjswEQfCXJ0P4y0BZILbIkIO0WwOxgBB0bAuL8LWubBzya42jvgmIlRyhOxs/47SMBmEKdTCC1RVFag+3nEPe1qHwHxA0biTNAZXGuaTDEBYdxwGNHFJRWKfKEw8vEbC6F+tGAZkL8ZyxHaxKqgoz3dOaVjEPL/zGxzXqsoDzjOoN3oHtfZRR93HrvDi7PbHhoe1qJsSe7q81YOYdN5Baoc93q9S9aSW+tNFM28IEI0eltGk0ZTDl7w7R3nl7fJ06Q3wucTp37m9hqHD9361cmsMZXzHppMznuPMUrm9fqf+v1j5vGn5ak7qf36U7W7t+5h9LDs3HpCBNdhA7zOJH5oXkl6eYFGF8un+9iZ1CdPv2946Azcw5kzGdzTsfRertzntH8e99/TxRIF3i/HDp7f+G3we9rtvmMveg+eWx81bdawbSwkoZ8NJ0BksdT0CE6NrpoXlt/Li7bQ0Brlrv5Ua5SQwKTZ1ru0tPiZEiAa+mqYq/WZazcd22lWa1632zk+O7Nd2+naHdtrNm21KDRohWIH4knKRlTn0iq74s/3AEniC2AhcGuWZiQCYX4T8RRLbATsTh2OlAkYpErFh7JaT+h79B6+Rk79lU8X40XttTEem8Z1KnusxzsjCXxbumtb0n0HhE4paH3XBBeK4UKqXrzhWSZjpzLDFQaZugG4FmG/6h56SNBkGoNGipI0zGKoTKNp3hkkVv9VCxORW/O2EpEfvi9r2/1WtEH5hFQ7CF3PMahRwp57yC2K+aJob+e+KsJ3spDqM6Z6KjklKyTbnz6oojlS8mRdVQG79N41bEVGu0WVycIZJSXhy5taCb2SgXYxljdceatks1mWD6KhJY6r8EgpnYP6QDKlU8tB+goMlSHQj66JEvVO5tK+jS+TEetLLCFRtDHy5Q/eCH0Q+o0QKL4vfvoA2Uqp+iZhIffZTmL1lNCIv31tEJ9oP2W+UX/zlIcf49oTayOPqlM9DCRlY73SF8LyC2KQVIWlSsFSvhl8X4B9ybeNZZNLLFKxaZhJ+PqLoaWpZWJC0ozJ4NTMDZtymeOUyyn4H06fwuSSvL5jF+LLO/bp6rKvhCvBZulL/9vZojldCJj6Ks+xtMyFejKq5Gy8Ic9rgPsV2j35TqG3K2l/Mn+2bPR09zy0/wU=</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3fXxGlz8EJJFCigkQv7Ka7LW2h15cj4wzENHGo7XDp1x87kBQo7ek+EhLyZDyzZmZ52UcCJ3HV7wgBXNKUGcFpy/wHV0OH4FrNcvGoYbnDoW3hZmhbttvA9VHj0AMYmkYgRAYBExIz2TKrtuNatmc57sC2/WrD9xoV16u/mMYDcKFCK5eKbRqLJGbCz9O2zIwzP8WCCp/hBIQvid/vXF36ytPHBSazfbRCmSfk7UjKqY8QqYRAII5JhaQJOkJbPkeh8Pt0zLDMOKxzhqJlrvfO5/PKvFZJ+RhVbdtGdhMpn1DQ8YHZ/lVshjBgo3S1PsEsZZTgmL5jDeoKZJSGRicep5zKKPkitIMcW4e2YEEs4rjswEQfCXJ0P4y0BZILbIkIO0WwOxgBB0bAuL8LWubBzya42jvgmIlRyhOxs/47SMBmEKdTCC1RVFag+3nEPe1qHwHxA0biTNAZXGuaTDEBYdxwGNHFJRWKfKEw8vEbC6F+tGAZkL8ZyxHaxKqgoz3dOaVjEPL/zGxzXqsoDzjOoN3oHtfZRR93HrvDi7PbHhoe1qJsSe7q81YOYdN5Baoc93q9S9aSW+tNFM28IEI0eltGk0ZTDl7w7R3nl7fJ06Q3wucTp37m9hqHD9361cmsMZXzHppMznuPMUrm9fqf+v1j5vGn5ak7qf36U7W7t+5h9LDs3HpCBNdhA7zOJH5oXkl6eYFGF8un+9iZ1CdPv2946Azcw5kzGdzTsfRertzntH8e99/TxRIF3i/HDp7f+G3we9rtvmMveg+eWx81bdawbSwkoZ8NJ0BksdT0CE6NrpoXlt/Li7bQ0Brlrv5Ua5SQwKTZ1ru0tPiZEiAa+mqYq/WZazcd22lWa1632zk+O7Nd2+naHdtrNm21KDRohWIH4knKRlTn0iq74s/3AEniC2AhcGuWZiQCYX4T8RRLbATsTh2OlAkYpErFh7JaT+h79B6+Rk79lU8X40XttTEem8Z1KnusxzsjCXxbumtb0n0HhE4paH3XBBeK4UKqXrzhWSZjpzLDFQaZugG4FmG/6h56SNBkGoNGipI0zGKoTKNp3hkkVv9VCxORW/O2EpEfvi9r2/1WtEH5hFQ7CF3PMahRwp57yC2K+aJob+e+KsJ3spDqM6Z6KjklKyTbnz6oojlS8mRdVQG79N41bEVGu0WVycIZJSXhy5taCb2SgXYxljdceatks1mWD6KhJY6r8EgpnYP6QDKlU8tB+goMlSHQj66JEvVO5tK+jS+TEetLLCFRtDHy5Q/eCH0Q+o0QKL4vfvoA2Uqp+iZhIffZTmL1lNCIv31tEJ9oP2W+UX/zlIcf49oTayOPqlM9DCRlY73SF8LyC2KQVIWlSsFSvhl8X4B9ybeNZZNLLFKxaZhJ+PqLoaWpZWJC0ozJ4NTMDZtymeOUyyn4H06fwuSSvL5jF+LLO/bp6rKvhCvBZulL/9vZojldCJj6Ks+xtMyFejKq5Gy8Ic9rgPsV2j35TqG3K2l/Mn+2bPR09zy0/wU=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00025_PERM_UVTC_UserName_Valid_Role_Coord_CS_with_TokenType_ResetPassword_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node SPL CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCoordCS"));
tS.setPropertyValue("audience","");</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full COORD_CS">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID1",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>coord:cs</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234DFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234DFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E40910192360FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E40910192360FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E40910192360FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E40910192360FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082759</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F9502319F21D5CEBE0401F0A0599096F</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_b1f56332-85dc-4ea7-a696-97fd2ad274b7</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_b1f56332-85dc-4ea7-a696-97fd2ad274b7</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb/I4EH3/fkWUPq5CLlwTARIFytJSSksvbF9WxpkEbxOHxg6E/vq1A0mBUrbfSkjIk/HMGc/xGTcZCgPL6TAGMScRVYa9lvr33PSqtXLZ0hpVF2sVQHUN1eyaZtc910KuVa/M66oyZCyBIWUcUd5SLcOsaEZVMyuPhuFYDccol6p27VVVniFmIrRwKRmqkoYBZU6WtqUmMXUixAhzKAqBORw7087tyBGeDsoxqe3mFmWWMG4vOF86uo5LLmAIAlzCUag39QOfpsucKfEp4kkMu5wua6m7vev1urQul6LY1y3DMHTD1oWPy4h/obZ/5ZvBHVIv2q67iEaUYBSQDyRB3QJfRK7SCfwoJnwRfhPa1E1DhtYgxRo2K/RC1T8TZOh+GOkAZMyQxhbIzIM9gAcxUAzK08OwpV78rIPbvY8xosyL4pAdrX8PEtAVBNESXI3lleXofh7xxHG1m4CdIcVBwsgKxpImS4SBKZMYPJKOCBPkc5mStV9JmfiRnGWAf6ctTX0fq4CunzidHvGB8f/Ts/1+baM8oyCBdiM1py89Nu4blfFYT43Z7WxE7zrButtpZRD2nbeginbv1sdkLbi129RdPCezOrEje7Apd0cfPLyx9LeYDv66R1aZBu7bjWuFvfQ6HNQ8f1rtJ/NZghoL2o/n9xW7P5olMFuheDIY2L+wt9FfbPcPmMyun15xMDbI1ZM5xnfVaDJm/uU6jOA6na78j7rRGPwJ/fXNyMa18czz5o9mD+HHj/Xrqzmb2/fBrxGvjNlg81YLg5e720mf1futz5r2azg05pIwTeb/AOb5UtJj2FOuRL8QPy8v0kJczctcnaXUKMaBcrUtd0lpcRIhQMR1RDO3637FsE3DtK1yzbjqXPZFxwzzyugYVds2xCLXoC2KI4jdiHpE5pIqu+XPeYA4dBhQF2JtFSV4AUw9E7GHOFKG9EFcjogyeIyEipsLe9WYl9OYoOo89Jlv+6uGZbCqqowjfkfv4o7HIT6U7vKBdD8AJksCUt8lwZlgOOPiLN7RKuGBWVqhEoVETIBYirBjVRpVnZFwGYBEqoeRmwRQWi6W2cnobPtvaQizzIqjKHYdzLLb921xx9/ycxA+LpEOTBZ0CaKX8GUQ1Z1qXs2XqqsnB1YevpO4RF4ycag8JniL5PDTJ1ckSQqi5GXluAv3Y8NBaP24qiKbuyK4oHwxq4XUCyFo5415R6X3UrJaJVkr6lLkYhFeF1pn6lPAiVCqzWP0BlQvQug/GhQF6qPMhf0QX8IXdMoRh1AQR8mWP3glTIHJV8JQMD796RPkIKU4Nw4pP2XrBuIxIRGffW9gB0s/YZ6Iv7Vo4We7TsTayyPqFE8DTqgvV3IkbM4xgwgNi+L94KcCnEp+aCwOucDCBZvmCYfvvyhSnFoqwjhKKB/21MywL5gZTr5ZgvPp9CVMJsq7KZuyb6fs7HY0FdIVIrXwJf/trJGMLhhUOcwzLC01FY9GkZz6ewK9A3haoyu9cxp9WEn7i/mrZe9Mj+9D+18=</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb/I4EH3/fkWUPq5CLlwTARIFytJSSksvbF9WxpkEbxOHxg6E/vq1A0mBUrbfSkjIk/HMGc/xGTcZCgPL6TAGMScRVYa9lvr33PSqtXLZ0hpVF2sVQHUN1eyaZtc910KuVa/M66oyZCyBIWUcUd5SLcOsaEZVMyuPhuFYDccol6p27VVVniFmIrRwKRmqkoYBZU6WtqUmMXUixAhzKAqBORw7087tyBGeDsoxqe3mFmWWMG4vOF86uo5LLmAIAlzCUag39QOfpsucKfEp4kkMu5wua6m7vev1urQul6LY1y3DMHTD1oWPy4h/obZ/5ZvBHVIv2q67iEaUYBSQDyRB3QJfRK7SCfwoJnwRfhPa1E1DhtYgxRo2K/RC1T8TZOh+GOkAZMyQxhbIzIM9gAcxUAzK08OwpV78rIPbvY8xosyL4pAdrX8PEtAVBNESXI3lleXofh7xxHG1m4CdIcVBwsgKxpImS4SBKZMYPJKOCBPkc5mStV9JmfiRnGWAf6ctTX0fq4CunzidHvGB8f/Ts/1+baM8oyCBdiM1py89Nu4blfFYT43Z7WxE7zrButtpZRD2nbeginbv1sdkLbi129RdPCezOrEje7Apd0cfPLyx9LeYDv66R1aZBu7bjWuFvfQ6HNQ8f1rtJ/NZghoL2o/n9xW7P5olMFuheDIY2L+wt9FfbPcPmMyun15xMDbI1ZM5xnfVaDJm/uU6jOA6na78j7rRGPwJ/fXNyMa18czz5o9mD+HHj/Xrqzmb2/fBrxGvjNlg81YLg5e720mf1futz5r2azg05pIwTeb/AOb5UtJj2FOuRL8QPy8v0kJczctcnaXUKMaBcrUtd0lpcRIhQMR1RDO3637FsE3DtK1yzbjqXPZFxwzzyugYVds2xCLXoC2KI4jdiHpE5pIqu+XPeYA4dBhQF2JtFSV4AUw9E7GHOFKG9EFcjogyeIyEipsLe9WYl9OYoOo89Jlv+6uGZbCqqowjfkfv4o7HIT6U7vKBdD8AJksCUt8lwZlgOOPiLN7RKuGBWVqhEoVETIBYirBjVRpVnZFwGYBEqoeRmwRQWi6W2cnobPtvaQizzIqjKHYdzLLb921xx9/ycxA+LpEOTBZ0CaKX8GUQ1Z1qXs2XqqsnB1YevpO4RF4ycag8JniL5PDTJ1ckSQqi5GXluAv3Y8NBaP24qiKbuyK4oHwxq4XUCyFo5415R6X3UrJaJVkr6lLkYhFeF1pn6lPAiVCqzWP0BlQvQug/GhQF6qPMhf0QX8IXdMoRh1AQR8mWP3glTIHJV8JQMD796RPkIKU4Nw4pP2XrBuIxIRGffW9gB0s/YZ6Iv7Vo4We7TsTayyPqFE8DTqgvV3IkbM4xgwgNi+L94KcCnEp+aCwOucDCBZvmCYfvvyhSnFoqwjhKKB/21MywL5gZTr5ZgvPp9CVMJsq7KZuyb6fs7HY0FdIVIrXwJf/trJGMLhhUOcwzLC01FY9GkZz6ewK9A3haoyu9cxp9WEn7i/mrZe9Mj+9D+18=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E4091019234DFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E4091019234DFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00026_PERM_UVTC_UserName_Valid_Role_Portal_CS_with_TokenType_ResetPassword_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportal"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdportalCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Portal_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportalCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950D20332FC1891E0401F0A059927BF</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950D20332FC1891E0401F0A059927BF</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_08285</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950D20332FD1891E0401F0A059927BF</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr0CZRxRyIVwSFSRo2k5U2ulAr7wcGWcDniZ2Gjsp9OuPHZoUKO1pj4SEvLO99toXL/uIoziyvQHnkArCaC3we9o/aG5hMJGtg4PautO15rqLm10ddzCaWfLX7La1WsB5BgHlAlHR02zTcnSzpVvOtWl6dtcz2w3btqZa7RZSLqGlS8PUaqs4otwrwva0LKUeQ5xwj6IYuCewNxlcjDzp6aGSk9Y/2rAsAqb9pRCJZxi4EQKGKMINzGLjyNjxOQq5NyELikSWwmvMkPe0173Pz8+N52aDpQvDNk3TMF1D+oScLH5q/R/lZggDOmeb9TGijBKMIvKCFKkLEEsW1gbRgqVELOMPoC3DMhW0DiusY8uhPzXjLUDB7otIOyRTjnS+RFYJNoY5pEAx1G7GQU/7+bUObvZep4jyOUtjvrf+HiWgOUQsgVDnZWYlu68jHihX/wiwF1AcZZzkcKnGJEEYeO0qhTlZjQiXwxfyWtH+2orLHymnDPB32nJkbHOV1I0D1fHJArj4Pz3b7tcG5RZFGfSt5fGLi3/H5snT41MwZDlfz3C3NV78eegVFLadN6Sqdr+u94e1mq3XTfH4fBbOjqPYRwN6Srj/0knOu2cUC7fu3pw/XE0XlyI+W62yoG2FoyD9m9Xd+U3W4Xfdq8H0YlYfni2jsTtai+mPtdO86LSWvn+Smg7c//n1XJ+O+P18yttnkykEd9diFrn1+plTfxmaIoH75uDRNpCfr8Ik42d0dPfrJs7QRTDIf8R39XnevLy9fgTfF+P67cNJ7y2n7Rx2jaUkTLLZX8CiXKrxCPzaqewXEp/Li7KQUJ8Xrl6iNIoLoELrq11KWrxMChAJPdnMzfrUbZm+bTab9umx1XWtE9MxrVNzYLZc1+4MT0sN2rDYo3jM6JyoWEplN/PzOUEcexxoCKmeswwvgWufIPpIoFpAx/JwMMrhmkkVt/IZo6GA2Zq1u11n5rAnRm2+kMfjkonf9Hc6mAtId6W7uSPdY8AkIaD0XQ04lxPOhazFE8ozEVmNHDUoZPIGSJUIe7bTbRmcxEkEiqkRszCLoJEsk6IyBt/82zrCvLASjhOWChRZxfn7ML39b2UlpE9IlANXKQ1BdhPeXUUdr1Xm83He7e28S/hBFhJ1zGRZRUrwhsnup7dpUWNSjUqVGOZWyb3a8k2IAwDGJ/yM/dJU8cKcbEUvr1d5Y0g96Zf9fUKNp0aW51nR0Y7SylTCG1IyLWMCOJOCt75mj0CNCsL40n1Tsd6LXNl3+WViSScCCYjl/NWK5RceGxPg6rERyIOz+upLZiekrJuAlThkO47km0Qx/vTZgj2s/KT5Sv49szR8a9cBrK04Mk/5whCELtRK3SzrD2YDMwlLpBSydBv8EMCh4LvGqsgVFyGnaZYJ+PhLTWlcT0MYs4yKwNcKw7buFjzFOgHvzekdTKHtr5f1in94Wd9fjCZSAWOkVb7kv511UowLBk29CQouPW0l354yOF1s6fwrwX2pt+2OMxy0Bm572NmWetPtDqsC7mTSf2d+b9mq6f556P8L</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F9502274BA5A96B7E0401F0A0599098B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F9502274BA5A96B7E0401F0A0599098B</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>94425ff6-2b60-4326-ada1-54c3cdb51a67</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00027_PERM_UVTC_UserName_Valid_Role_Retailer_CS_with_TokenType_ResetPassword_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95106357596D0B0E0401F0A07995357</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95106357596D0B0E0401F0A07995357</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_08288</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95106357597D0B0E0401F0A07995357</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+o6EP5+fkWnfnRKU6BAO8IMgnh7ROWK4ssXJ6YpREtSkhSrv/4kxVZA9HLuDDNMtpvdZ1/y7B4JOI+rflcIzCVh1Aj6bfOx5bYi/AQ9qxk52Kp7CFkQtKBVd10QNWo1JXZMIxAixQEVElLZNqvAqVvAtZz6NQB+teU7oAK86oNpTDAXyrRSqQDTyOYxFX7utm2mnPoMCiJ8CudY+BL54+750FeaPiwwmZ2jFcrcIe/MpEx820aVECMcx6iC2Nw+sjd0jkLhj8mUQply/OEzFG3z4+7r62vltVZhfGpXAQA28GylEwoyPTA7v4rLOAxoxFbnHqSMEgRj8g41qHMsZyw0uvGUcSJn829MO7YDtGkLZ8hCTp0emPangxzdnpY2QHIBLTGDTmHsCkeYY4qwcXMVtM2D/Sq4unvNIRUR43Oxdf47SJguccwSHFqiiKxAt7/FHenqHGHkBxTFqSBLfKHbJIEIC2PEcUSyIRGq+UJh5OU3MqF+pOgyjP6mLEf2OlYF3d6RnT6ZYiH/T83W67WyMoFxijt3s0Zz2Ds9nt0Ozp5bWRLHslYP75Mee2nnENaVV6DKcn+ct5u17K2PS9lhMg/H9O4fgfrh7Dwc3XKOmoPaw+vlzW3qngXBon/6Yp9JNPWGvQVcZPRfPkno4WK8eH9KRocKHcwesPd2+PyrcXL82yXMbTjvl/VFT3JZix8W3YdgOB06i9OLk2pUb0XsJf1NHsjL+f1kgmgyuU578cV9Q7zUkzEIvd7obuLwwa8Lej9JL0fZxXggqayNbt7O258xrcewKSwoYZw+PWMki6Nuj6BvDFS9oPyZXrSEhFaUq/qJ5ighMZVmR9/S1OKnioBI6Ktirs4Dz3VAo+Y2Xa/RB8fgBNSBMwBd0PQ8V4kLDlqh2ILYYzQi2pdm2VX//AwQzX2BaYi5tWQpmmFh/mCxDyU0AnqlHgejAl8zxeI0qz3NOENvUbW1nLr1apMAMHNd07hg8pJe8m4kMd9k7toGc19hRBKCNb3r/haqwYVUqVjAZSpjp7KEFYpTNQC45mC/Wm+5tiDzJMYaqD1nYRrjSjJL8sTYYvVftSASufTq5Dp/d9+Gtf2tyIDSCYlWEDqWY6yqiHeMIFAE8n3AjfWAC/PdNCT6eal0Sk7QCsnmp88u0e1RtoiK6LE3fnQK3KX63te/3rR/AGVv56N0FC7JmttilqrxoMijU1RzASuLSrpcpnn9mpoYuTJvK3507DFGqWK3t2v2gqldmrD3Gi4l6i3PpXwTXypndCyhxHPVbUZ+3GOzGGOhN4tAvZJs37Vlw6XKm8SZ3CXrxWoB0Yh/3FGQj7SeEo/U3yvj4We5dtha86PiVOuEJHSqT3qMvH3TFIgps0TxHuPrxncZ2OV8U1gmucQiVTc9pRJ//8XQhNY2IUIspTLom7lgnWRznPItwf6n0hczOZF/TOZMfDuZ786HY0V3c2iWuuS/lS2StwvCpl4AcixtM1OLpnJOp2uk/gFwi9dBteZ4g2rNdXsnxyWvu54HvMagTOBGJJ0v4q+StZxuv4fOHw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F9502319F2355CEBE0401F0A0599096F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F9502319F2355CEBE0401F0A0599096F</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>930885f3-a4db-4c89-a0c5-4b5518f49e63</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00028_PERM_UVTC_UserName_Valid_Role_Dynamic_LASP_CS_with_TokenType_ResetPassword_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDLASP"));

tS.setPropertyValue("audience","");</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DLASP_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDLASPCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full DLASP_CS">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082812</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F9502197C72A2573E0401F0A059909AB</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_a1d0633c-c253-4c03-b27e-ff63ec93b21e</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_a1d0633c-c253-4c03-b27e-ff63ec93b21e</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuI6FH3vV0SZxyo4NyiJChLlMpMzdNoBepm+VK6zAc8kNtgO0H79cUJDgdIe5khIyDvba6998bLPJU4TN2xJCUJRzoyo0zAfsRPbNc8jFnGrnuUT27Oe3DOwxuOaByTwnlwHTCOSMoOISYWZapiu7fiWXbUcf2TboVsPnVrFs6sPpnELQmpo7VKxTWOVJkyGRdiGmQkWciypDBlOQYaKhMPWZT/UniEuOZnN8zXLIqBoTpWahQiRSgwEkoRUCE/ROdrxOY9lOKQThlUm4DVmLBvm697lcllZehUuJsi1bRvZAdI+saSTL2bzpNwMccTGfL1uY8YZJTihLzgndQlqymOjlUy4oGqafgDtIMfOoS1Y6Wo6PvtiorcABbsjkXZICoktOcVOCTaAMQhgBIybQdQwvxzXwfXekcBMjrlI5d767ygBW0DCZxBbssysZHc84oFyNc+BhBEjSSbpAn7kYzLDBKRxLWBMV30q9fDF0ijab6yk/tFyyoD8TVvO0TZXTR0dqE6HTkCq/9Oz7X6tUW5xkkEznnTcXt25Q8PA/VX7NW6vni5ZMusukd8oKGw7r0lt2v263h/WzWy9blo83Ufx9G505TnitB+t+oFzrUQrQOJeJF1yk9Hbn6pb+/lSX3kOtGX7fj5OOYOX4XIUZKjnz+vB2e+WunDdi5PT+IHcBledr9Wb/n1VRT8HHGj1VM2Dap+ib39uRur73J93f1xFX+/8s4eIr7oXA2/Wvbsil9zv8Jf57IzWf51+G52eRPGDQMk99JLv16tv839ufLvxltN2DrvGUhKG2dNvIKpc5uMRdYye7hdWn8tLbqGxNS5cw1muUVIBU2Yz35VLS5hpAaJxqJu5Xnd9O3BsJ3C9mttrXXS7tm87PbtlV4PA1otSg9Ys9ii2ORvTPFausuv5+ZwgSUMJLAZhLXhGpiDNTxA7WGEjYgN9ODiTMOJaxRfLKvanaWovUtfBIhDV5Dlb1pPENH5wdcWuRGusQOxKt7cj3QMgdEYh1/d8wKWecKl0LeZ4kanEqSxwhUGmbwCRi3Do+vUqkjSdJZAzRSmPswQqs+msqAyS63/XwkQW1k6/Nbx+bA8fneL8fZje/reyEtonprmDzFO6AN1NOHAV2WU+H+dd2867hG9lMc2PmS6rEpSsmex+epuWfEw2ozLojoq0St4b9+O2v9XlPQD6hBvaL8smXrygW9HLq1XfFlpLmmVv57gyr2SLRVZ08yzXSaHhkZZLBw2BZFrsnkf8DzC0gUBH3TUb1nuRN/ZdfpmasqHCClI9e0axPOKhMQSZPzQifWhWx75idkLquilYqUO2dqLfIznjT58sJCS5nzZf678lF/Fbuw5gbcXReerXhaJskq/yW+X5g9kgXMNSLYNcbIMfAjgUfNe4KfKGi9LT9JQp+PiLketbw8SE8IypqGMWhm3NLXiq5xmEb07vYApdf72oV/LDi/r+sj/U6pdic+NL/9vZosW4EP1M1f4Fl4a50u9OHZxNtjT+leBhmfd7n8n8bibNd+b3lq2a7p+H5r8=</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuI6FH3vV0SZxyo4NyiJChLlMpMzdNoBepm+VK6zAc8kNtgO0H79cUJDgdIe5khIyDvba6998bLPJU4TN2xJCUJRzoyo0zAfsRPbNc8jFnGrnuUT27Oe3DOwxuOaByTwnlwHTCOSMoOISYWZapiu7fiWXbUcf2TboVsPnVrFs6sPpnELQmpo7VKxTWOVJkyGRdiGmQkWciypDBlOQYaKhMPWZT/UniEuOZnN8zXLIqBoTpWahQiRSgwEkoRUCE/ROdrxOY9lOKQThlUm4DVmLBvm697lcllZehUuJsi1bRvZAdI+saSTL2bzpNwMccTGfL1uY8YZJTihLzgndQlqymOjlUy4oGqafgDtIMfOoS1Y6Wo6PvtiorcABbsjkXZICoktOcVOCTaAMQhgBIybQdQwvxzXwfXekcBMjrlI5d767ygBW0DCZxBbssysZHc84oFyNc+BhBEjSSbpAn7kYzLDBKRxLWBMV30q9fDF0ijab6yk/tFyyoD8TVvO0TZXTR0dqE6HTkCq/9Oz7X6tUW5xkkEznnTcXt25Q8PA/VX7NW6vni5ZMusukd8oKGw7r0lt2v263h/WzWy9blo83Ufx9G505TnitB+t+oFzrUQrQOJeJF1yk9Hbn6pb+/lSX3kOtGX7fj5OOYOX4XIUZKjnz+vB2e+WunDdi5PT+IHcBledr9Wb/n1VRT8HHGj1VM2Dap+ib39uRur73J93f1xFX+/8s4eIr7oXA2/Wvbsil9zv8Jf57IzWf51+G52eRPGDQMk99JLv16tv839ufLvxltN2DrvGUhKG2dNvIKpc5uMRdYye7hdWn8tLbqGxNS5cw1muUVIBU2Yz35VLS5hpAaJxqJu5Xnd9O3BsJ3C9mttrXXS7tm87PbtlV4PA1otSg9Ys9ii2ORvTPFausuv5+ZwgSUMJLAZhLXhGpiDNTxA7WGEjYgN9ODiTMOJaxRfLKvanaWovUtfBIhDV5Dlb1pPENH5wdcWuRGusQOxKt7cj3QMgdEYh1/d8wKWecKl0LeZ4kanEqSxwhUGmbwCRi3Do+vUqkjSdJZAzRSmPswQqs+msqAyS63/XwkQW1k6/Nbx+bA8fneL8fZje/reyEtonprmDzFO6AN1NOHAV2WU+H+dd2867hG9lMc2PmS6rEpSsmex+epuWfEw2ozLojoq0St4b9+O2v9XlPQD6hBvaL8smXrygW9HLq1XfFlpLmmVv57gyr2SLRVZ08yzXSaHhkZZLBw2BZFrsnkf8DzC0gUBH3TUb1nuRN/ZdfpmasqHCClI9e0axPOKhMQSZPzQifWhWx75idkLquilYqUO2dqLfIznjT58sJCS5nzZf678lF/Fbuw5gbcXReerXhaJskq/yW+X5g9kgXMNSLYNcbIMfAjgUfNe4KfKGi9LT9JQp+PiLketbw8SE8IypqGMWhm3NLXiq5xmEb07vYApdf72oV/LDi/r+sj/U6pdic+NL/9vZosW4EP1M1f4Fl4a50u9OHZxNtjT+leBhmfd7n8n8bibNd+b3lq2a7p+H5r8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95023DFE6E9EE22E0401F0A0799041A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b54ca523-aea1-45b1-9f0f-eec821a32f9c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>31d2392e-5053-43d4-b375-6fa36d10c41a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00029_PERM_UVTC_UserName_Valid_Role_Linked_LASP_CS_with_TokenType_ResetPassword_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdLLASP"));

tS.setPropertyValue("audience","");</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node LLASP_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdLLASPCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full LLASP_CS">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082818</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95022FF649E406FE0401F0A079903A3</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_6beb24fb-63ee-47f7-b2aa-abd34ada719d</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_6beb24fb-63ee-47f7-b2aa-abd34ada719d</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdU+o6FH33V3Tqo1P6QQHpCDMFxSkXFQE9R1/OhHQDgTaFJAX019+kWAREL+fOMMNkd2fttT+ykiuO4sjxfM6BCZJQLbiu6X/KQxg67mholIsAhlsZVYyhg5CBhmHRRSGq2NVQ1wLOUwgoF4iKmu5YtmtYJcN2B5blOZee4xTcovOqa8/AuISWLgVL19ZxRLmXha3pKaNegjjhHkUxcE9gr+/fdTzp6aGck16/2rDMArL6RIi5Z5q4EAKGKMIFnMTmlbnncxVyr0/GFImUwUfMkNf0j72r1aqwKhYSNjYdy7JMq2pKn5CT8bleP8s3QxjQUbJZNxFNKMEoIu9IkboDMUlCzY/GCSNiEn8DbZu2paANWGMD2y49183PABm7E5H2SDKODD5Bdg7WgxEwoBi0p15Q089P6+Bm74AhykcJi/nB+u8oAV1ClMwhNHieWc7udMQj5apfAfYCiqOUkyXcqzGZIwxc6zIYkXWHcDl8Idey9mtrLn8knzLAf9OWK3OXq6RuHqnONRkDF/+nZ7v92qA8oyiF+vC+0r5Z+O/3U3ZdYY3izHluuObt1H2c1TIKu84bUtt2f6wPh3U7Wx+bbqu/n5oPl6v49rFkiY7TXs/eh3Gpn/5qtV+i+evixS6/X3SrD1OfNX2bVwf/VGJkRl1XNMNm048WF93u/XMVx07nrN+esoa/nN62nqqPwWtv+jxLWvfikfXiabfULgvWDt8DK1wMpmTmXJZfXhdL/9eyTXk7fb1olyeNi3XbYW8L3ng+e2iFohgXk1L46AS4iCrzVe0zp90c9o25JPTT4RSwyJdqPIJrrSX7hcTP8qIsJDRGmas3VxrFBVCh19UuJS1eKgWIhJ5s5mZ941pV27KrTrHstPzGzY3lWnbL8q1StWrJRa5BGxYHFJsJHREVS6nsZn5+JohjjwMNgRnLJMUT4PoPiNdIIC2gPXk4EsphkEgVL1bc2XgVjSapVSxhoGCFw/dhKdG1+0Q80AfmjwSwfeUu7il3DzCZE1DyruabywHnQpZigZapiOzCEhUopPICYEqDPce9LJmcxPMIFFEzTsI0gsJ8Ms8KY/LNv2MgzDNrp+P3u3+a/T92dvy+ze7wW14I6RMS5cBVSg2QzYQjN5Gd5/N93uXdvHN4Pw2JOmWyqoIRvGGy/+lzWNSUbCeldzPI0sp5b91P2/5Zl68A5g/czMOybOOFS7ITPb9Z5WUhpaSe93aBCotCulymWTcrSiaZhDelWtpmH3Aqte5tkMyAmlsI86SrZsv6IPLWvs8vFRPaF0hALGdPy5YnvDP6wNU7I5BnZn3qI2YvpKybgLU4ZmtG8jmiGP/4YsEeVn7S3JV/q4R9Jn4MayeOzFM+LgShY7VSl8rbN7OBEwlLpAombBf8GMCx4PvGbZG3XIScpmEq4PsvmpK3mo4wTlIqgms9M+xKbsZTvM3B+3T6ApPJ+sc9vebf3tO/7zp9KX4x0re+5L+dDZKNCwZdPQcyLjV9LZ+dMjgd70j8B8HjKu+2flL5/UzqX8xfLTs1PTwP9X8B</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdU+o6FH33V3Tqo1P6QQHpCDMFxSkXFQE9R1/OhHQDgTaFJAX019+kWAREL+fOMMNkd2fttT+ykiuO4sjxfM6BCZJQLbiu6X/KQxg67mholIsAhlsZVYyhg5CBhmHRRSGq2NVQ1wLOUwgoF4iKmu5YtmtYJcN2B5blOZee4xTcovOqa8/AuISWLgVL19ZxRLmXha3pKaNegjjhHkUxcE9gr+/fdTzp6aGck16/2rDMArL6RIi5Z5q4EAKGKMIFnMTmlbnncxVyr0/GFImUwUfMkNf0j72r1aqwKhYSNjYdy7JMq2pKn5CT8bleP8s3QxjQUbJZNxFNKMEoIu9IkboDMUlCzY/GCSNiEn8DbZu2paANWGMD2y49183PABm7E5H2SDKODD5Bdg7WgxEwoBi0p15Q089P6+Bm74AhykcJi/nB+u8oAV1ClMwhNHieWc7udMQj5apfAfYCiqOUkyXcqzGZIwxc6zIYkXWHcDl8Idey9mtrLn8knzLAf9OWK3OXq6RuHqnONRkDF/+nZ7v92qA8oyiF+vC+0r5Z+O/3U3ZdYY3izHluuObt1H2c1TIKu84bUtt2f6wPh3U7Wx+bbqu/n5oPl6v49rFkiY7TXs/eh3Gpn/5qtV+i+evixS6/X3SrD1OfNX2bVwf/VGJkRl1XNMNm048WF93u/XMVx07nrN+esoa/nN62nqqPwWtv+jxLWvfikfXiabfULgvWDt8DK1wMpmTmXJZfXhdL/9eyTXk7fb1olyeNi3XbYW8L3ng+e2iFohgXk1L46AS4iCrzVe0zp90c9o25JPTT4RSwyJdqPIJrrSX7hcTP8qIsJDRGmas3VxrFBVCh19UuJS1eKgWIhJ5s5mZ941pV27KrTrHstPzGzY3lWnbL8q1StWrJRa5BGxYHFJsJHREVS6nsZn5+JohjjwMNgRnLJMUT4PoPiNdIIC2gPXk4EsphkEgVL1bc2XgVjSapVSxhoGCFw/dhKdG1+0Q80AfmjwSwfeUu7il3DzCZE1DyruabywHnQpZigZapiOzCEhUopPICYEqDPce9LJmcxPMIFFEzTsI0gsJ8Ms8KY/LNv2MgzDNrp+P3u3+a/T92dvy+ze7wW14I6RMS5cBVSg2QzYQjN5Gd5/N93uXdvHN4Pw2JOmWyqoIRvGGy/+lzWNSUbCeldzPI0sp5b91P2/5Zl68A5g/czMOybOOFS7ITPb9Z5WUhpaSe93aBCotCulymWTcrSiaZhDelWtpmH3Aqte5tkMyAmlsI86SrZsv6IPLWvs8vFRPaF0hALGdPy5YnvDP6wNU7I5BnZn3qI2YvpKybgLU4ZmtG8jmiGP/4YsEeVn7S3JV/q4R9Jn4MayeOzFM+LgShY7VSl8rbN7OBEwlLpAombBf8GMCx4PvGbZG3XIScpmEq4PsvmpK3mo4wTlIqgms9M+xKbsZTvM3B+3T6ApPJ+sc9vebf3tO/7zp9KX4x0re+5L+dDZKNCwZdPQcyLjV9LZ+dMjgd70j8B8HjKu+2flL5/UzqX8xfLTs1PTwP9X8B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950239D66EA1715E0401F0A05990981</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57925f3d-0445-48fc-849a-c3d2a5ba6773</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0b9bbf2d-1b36-4fc2-84c3-ff96750d36d4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00030_PERM_UVTC_UserName_InValid_Role_dsp_with_TokenType_ResetPassword(Negative)_403_FORBIDDEN_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DSP"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDSP"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full DSP">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","API_NOT_AUTH");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>DSP</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082824</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950212AC98B29DFE0401F0A059909A1</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_a6cc8522-d4bf-480e-bbf0-da6ac339e05a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_a6cc8522-d4bf-480e-bbf0-da6ac339e05a</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+o4EH4/vyJKH49CEqBcooLEpezSGyzhtKUvlXGG4J7EhtgJl1+/dmgoUGA5KyEhT8Yz31z8zdxwFAZ5p8E5RIIwqnXbNf0dlTCuXOfzhlccT4xixQJjPJ5YhodKCBcKVbCuka51OY+hS7lAVNT0vGUXDevasItDy3LyFSdfzlWrpTdde4aIS9NSJWfp2jIMKHdStzU9jqjDECfcoSgE7gjsuI3HB0dqOijDpNdvNihTh1F9KsTMMU2c8wBDEOAcZqF5Y+7p3HjccYlPkYgj+PTp8Zr+eXexWOQWhRyLfDNvWZZpVU2p43HiX+n1H9ll8Lp0wjbnFqKMEowCskYK1COIKfO0RuCziIhpeMK0bdqWMm3AEhvYLtIr3fxykKK70NIeyIgjg0+RnRkbwAQioBi0X4NuTb+6rIKbu8MIUT5hUcgPzn8GCWgCAZuBZ/Assgzd5RaPpKt+A9jpUhzEnCTwpNpkhjBwrR/BhCwfCJfN53EtLb+25PJHsi4D/CdluTF3sUro5pHstIkPXPyfmu3Wa2PlGQUx1C2v/DB1B2/W+nehMJmt16NOjzD+d6uPaymEXeUNqG25P8+Hzbrtrc9Lnlup3LV6yR1qYRTZnVVl9NK0+jQhFdcd87fRX3d9axT2/HJ43xX5p2D12pk+oVWSTFps2HefGp3moFNcBUHl54/GMHFny5g1exyS4L5zP0Jwn0C1vx78tEN+9/gy98okeX7uxjDk/oiUXszn0evzMvKHhcmw467j1p3faJPSvPij8evB/oDOutSEYH7/mlTEP7WvmHZj2BdmlODG4w/AIjuq9ui2tY6sFxLn6UVJiGdMUlVnpjiKC6BCr6tbilqcWBIQ8RxZzM35tmhVbcuu5gulfKfRvL21ipbdsRrWdbVqyUPGQRsUBxBbjE6I8qVYdtM/5wHi0OFAPYiMhMV4Clw/Y7GNBNK6dCAfB6MchkyyeJGwse2Py/yjKmhhXBiHC+Rfr6muPTHRo72oMREQ7TN3YY+5B4DJjICid9XfXDY4FzIVc5TEIrBzCcpRiOUAiBQHO/li5drkJJwFoICaIfPiAHKz6SxNjMk3/3kDYZ5K224/fXcnwzr8lmVA6nhEKXAVSxNkFeHICLKzQE4HXNoNODPfiD2inpdMp4gI3iDZ//TVJao9ti0yuB2+t9x3O8O9Vb/sukzI95vmGVDmYT62jryE7LjNZqkcD5I86lk15yg3z8VJEqf1KytijKR5U/KjbbqAY8luqyH7DdTcmjAvGi5b1Aeet/J9fLGYUlcgAaHsNi09XrBZuMDVZtGVr2R56dqy51LmTcBSHJO1ArmAKMRndxTsYKUnxX35t2CR91WuI7Z2/Mg45TohCPXVSY2R1YmmwEyaJZL3WLRr/JiBY873hdskb7EI2U3jWMDpL5oitJqOMGYxFd22ngp2STbFKVYzcL6UvplJifxzMi/5ycn8+vjgSroLkb7VJf+tbJC0XTDoagFIsdT0pVw0pXPq75D6J8DjvF7snOP1/Ujq38TfJTs5PXwP9X8B</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+o4EH4/vyJKH49CEqBcooLEpezSGyzhtKUvlXGG4J7EhtgJl1+/dmgoUGA5KyEhT8Yz31z8zdxwFAZ5p8E5RIIwqnXbNf0dlTCuXOfzhlccT4xixQJjPJ5YhodKCBcKVbCuka51OY+hS7lAVNT0vGUXDevasItDy3LyFSdfzlWrpTdde4aIS9NSJWfp2jIMKHdStzU9jqjDECfcoSgE7gjsuI3HB0dqOijDpNdvNihTh1F9KsTMMU2c8wBDEOAcZqF5Y+7p3HjccYlPkYgj+PTp8Zr+eXexWOQWhRyLfDNvWZZpVU2p43HiX+n1H9ll8Lp0wjbnFqKMEowCskYK1COIKfO0RuCziIhpeMK0bdqWMm3AEhvYLtIr3fxykKK70NIeyIgjg0+RnRkbwAQioBi0X4NuTb+6rIKbu8MIUT5hUcgPzn8GCWgCAZuBZ/Assgzd5RaPpKt+A9jpUhzEnCTwpNpkhjBwrR/BhCwfCJfN53EtLb+25PJHsi4D/CdluTF3sUro5pHstIkPXPyfmu3Wa2PlGQUx1C2v/DB1B2/W+nehMJmt16NOjzD+d6uPaymEXeUNqG25P8+Hzbrtrc9Lnlup3LV6yR1qYRTZnVVl9NK0+jQhFdcd87fRX3d9axT2/HJ43xX5p2D12pk+oVWSTFps2HefGp3moFNcBUHl54/GMHFny5g1exyS4L5zP0Jwn0C1vx78tEN+9/gy98okeX7uxjDk/oiUXszn0evzMvKHhcmw467j1p3faJPSvPij8evB/oDOutSEYH7/mlTEP7WvmHZj2BdmlODG4w/AIjuq9ui2tY6sFxLn6UVJiGdMUlVnpjiKC6BCr6tbilqcWBIQ8RxZzM35tmhVbcuu5gulfKfRvL21ipbdsRrWdbVqyUPGQRsUBxBbjE6I8qVYdtM/5wHi0OFAPYiMhMV4Clw/Y7GNBNK6dCAfB6MchkyyeJGwse2Py/yjKmhhXBiHC+Rfr6muPTHRo72oMREQ7TN3YY+5B4DJjICid9XfXDY4FzIVc5TEIrBzCcpRiOUAiBQHO/li5drkJJwFoICaIfPiAHKz6SxNjMk3/3kDYZ5K224/fXcnwzr8lmVA6nhEKXAVSxNkFeHICLKzQE4HXNoNODPfiD2inpdMp4gI3iDZ//TVJao9ti0yuB2+t9x3O8O9Vb/sukzI95vmGVDmYT62jryE7LjNZqkcD5I86lk15yg3z8VJEqf1KytijKR5U/KjbbqAY8luqyH7DdTcmjAvGi5b1Aeet/J9fLGYUlcgAaHsNi09XrBZuMDVZtGVr2R56dqy51LmTcBSHJO1ArmAKMRndxTsYKUnxX35t2CR91WuI7Z2/Mg45TohCPXVSY2R1YmmwEyaJZL3WLRr/JiBY873hdskb7EI2U3jWMDpL5oitJqOMGYxFd22ngp2STbFKVYzcL6UvplJifxzMi/5ycn8+vjgSroLkb7VJf+tbJC0XTDoagFIsdT0pVw0pXPq75D6J8DjvF7snOP1/Ujq38TfJTs5PXwP9X8B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95022E32D923515E0401F0A0799033C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>930885f3-a4db-4c89-a0c5-4b5518f49e63</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c8221854-35d6-498d-a02d-421784be1022</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a8d70240-77fd-4efe-ba84-308dc9d6ea40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00031_PERM_UVTC_UserName_InValid_Role_device_with_TokenType_ResetPassword(Negative)_403_FORBIDDEN_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Device"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDEV"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full Device">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","API_NOT_AUTH");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>DEV</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082834</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95106351F0CA25AE0401F0A0799534D</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_202ed686-4cb7-48b3-809e-a3fcf3b18331</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_202ed686-4cb7-48b3-809e-a3fcf3b18331</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdT+pMEL73VzT10pR+AUIjJAh4rKIioBJvzLqd0tWyhe62gL/+7BaLgMDLeRMSstPZmWc+9pm5YGgcWk6DMYg5iajitmrqm2VY4JUrZa2I38+1YuXd1ipGFTRk+9i3382KbZuq4jKWgEsZR5TXVMswi5pR0sziwDAcq+LYlYJxbr+qyjPETJgWKgVDVebjkDInc1tTk5g6EWKEORSNgTkcO/3GXccRmg7KMan1iyXKzGFcDzifOLqOCx5gCENcwNFYv9A3dC485vTJiCKexPDt02M19fvubDYrzOxCFI90yzAM3ajqQsdjZHSq1k/yy+C51I+W5yaiESUYheQLSVB3wIPIUxrhKIoJD8Z7TJu6aUjTGsyxhs0iPVX1HwcZuiMtbYCMGdJYgMzcWA98iIFiUJ56bk09Pa6Cy7uDGFHmR/GYbZ3/DRLQFMJoAp7G8shydMdb3JGu+gVgx6U4TBhJ4V62yQRhYEo3Bp/MO4SJ5vOYkpVfmTPxI3mXAf6Xslzo61gFdH1HdlpkBIz/n5qt12tp5RmFCdSHsX+7qJ71gRnWdTDF2H2cWfY0xSNcyyCsKy9Brcr9fd5u1lVvfV+aXuLn4XA0e2y4Z51SpdW6vl7E/ddG0vns9IyuO7OD20W776UDu9xgQblSRM+33SSpfDUenybstdz2yUtxeoVbg+TkfuZ3yM3QbyfdmyFqBjf0un97ZwaLePL13CnrC3T2oLNSqTitXM//dOL7Qdh8avoE3xvVgduq3kwq6Z8uJDed4eikfN59+XgZR483vVfSDFvl0mftJ6b1GDaFOSX0k/cPwDw/yvZwW8qVqBfih+lFSoin+ZmqM5EcxThQrtblLUktTiIIiHiOKOby3C4aVdMwq5Zdtq4al+22UTTMK6NhlKpVQxxyDlqi2ILYjKhPpC/Jssv+OQwQjx0G1INYS6MEB8DUAxZbiCPFpT3xOCLKYBAJFg9hFpb8kH9EHyMzLZcgJUEaVS1LVe4j/kAf4obPId6kbnuDunuAyYSA5HfZ4Ex0OOMiF1OUJjw0CykqUEjEBIglCTtWsVLSGRlPQpBI9XHkJSEUJsEky4zOlv+WhjDLpK32c/bw9sa1/S1PgdDxiFRgMpZLEGWEHTPIygPZH3B5PeDcfCPxiHxfIp88JniJZPPTT5vI/lj1SK89eGv238wc90r9uOsiIb9v6gdA6dv5WDnyUrLmNh+mYj4I9qjn1ZyiwrSQpGmS1e9cMmMszOuCIE29DzgR9LYYRJ9A9ZUJ/ajpskK95Xkl38SX8ID2OeIwFt2mZMcjVgtBmnK1cMUzmR+7t2y4FHnjMOe7ZM1QbCAS8cElBTtY6glxV/zNotj7KdcOW2t+RJxin+CEjuRJzpHFnqbAkTBLBPFF8brxXQZ2Od8UrpK8wsJFN70nHPZ/USSj1VSEcZRQ7rbUTLDOshlOvpiA86P0y0zG5N+jec72jubhXacv+G6M1JUu+W9ljWTtgkGVG0CGpabOxaYpnNPRGqt/A9xN7MWrQ8S+GUn9l/i3ZC2n2++h/hc=</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdT+pMEL73VzT10pR+AUIjJAh4rKIioBJvzLqd0tWyhe62gL/+7BaLgMDLeRMSstPZmWc+9pm5YGgcWk6DMYg5iajitmrqm2VY4JUrZa2I38+1YuXd1ipGFTRk+9i3382KbZuq4jKWgEsZR5TXVMswi5pR0sziwDAcq+LYlYJxbr+qyjPETJgWKgVDVebjkDInc1tTk5g6EWKEORSNgTkcO/3GXccRmg7KMan1iyXKzGFcDzifOLqOCx5gCENcwNFYv9A3dC485vTJiCKexPDt02M19fvubDYrzOxCFI90yzAM3ajqQsdjZHSq1k/yy+C51I+W5yaiESUYheQLSVB3wIPIUxrhKIoJD8Z7TJu6aUjTGsyxhs0iPVX1HwcZuiMtbYCMGdJYgMzcWA98iIFiUJ56bk09Pa6Cy7uDGFHmR/GYbZ3/DRLQFMJoAp7G8shydMdb3JGu+gVgx6U4TBhJ4V62yQRhYEo3Bp/MO4SJ5vOYkpVfmTPxI3mXAf6Xslzo61gFdH1HdlpkBIz/n5qt12tp5RmFCdSHsX+7qJ71gRnWdTDF2H2cWfY0xSNcyyCsKy9Brcr9fd5u1lVvfV+aXuLn4XA0e2y4Z51SpdW6vl7E/ddG0vns9IyuO7OD20W776UDu9xgQblSRM+33SSpfDUenybstdz2yUtxeoVbg+TkfuZ3yM3QbyfdmyFqBjf0un97ZwaLePL13CnrC3T2oLNSqTitXM//dOL7Qdh8avoE3xvVgduq3kwq6Z8uJDed4eikfN59+XgZR483vVfSDFvl0mftJ6b1GDaFOSX0k/cPwDw/yvZwW8qVqBfih+lFSoin+ZmqM5EcxThQrtblLUktTiIIiHiOKOby3C4aVdMwq5Zdtq4al+22UTTMK6NhlKpVQxxyDlqi2ILYjKhPpC/Jssv+OQwQjx0G1INYS6MEB8DUAxZbiCPFpT3xOCLKYBAJFg9hFpb8kH9EHyMzLZcgJUEaVS1LVe4j/kAf4obPId6kbnuDunuAyYSA5HfZ4Ex0OOMiF1OUJjw0CykqUEjEBIglCTtWsVLSGRlPQpBI9XHkJSEUJsEky4zOlv+WhjDLpK32c/bw9sa1/S1PgdDxiFRgMpZLEGWEHTPIygPZH3B5PeDcfCPxiHxfIp88JniJZPPTT5vI/lj1SK89eGv238wc90r9uOsiIb9v6gdA6dv5WDnyUrLmNh+mYj4I9qjn1ZyiwrSQpGmS1e9cMmMszOuCIE29DzgR9LYYRJ9A9ZUJ/ajpskK95Xkl38SX8ID2OeIwFt2mZMcjVgtBmnK1cMUzmR+7t2y4FHnjMOe7ZM1QbCAS8cElBTtY6glxV/zNotj7KdcOW2t+RJxin+CEjuRJzpHFnqbAkTBLBPFF8brxXQZ2Od8UrpK8wsJFN70nHPZ/USSj1VSEcZRQ7rbUTLDOshlOvpiA86P0y0zG5N+jec72jubhXacv+G6M1JUu+W9ljWTtgkGVG0CGpabOxaYpnNPRGqt/A9xN7MWrQ8S+GUn9l/i3ZC2n2++h/hc=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950D2056F8E048FE0401F0A059927C1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>930885f3-a4db-4c89-a0c5-4b5518f49e63</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c8221854-35d6-498d-a02d-421784be1022</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a8d70240-77fd-4efe-ba84-308dc9d6ea40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9ec8f0b3-2385-4152-81c7-4023a56b3086</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8ba6964e-9dc9-4780-a208-7f1c1b1825c7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00032_PERM_UVTC_UserName_InValid_Role_dsp:customersupport_with_TokenType_ResetPassword(Negative)_403_FORBIDDEN_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DSP_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDSPCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full DSP_CS">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","API_NOT_AUTH");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>DSP_CS_1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082852</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950D20333631891E0401F0A059927BF</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_2be67c5d-7a67-4650-bb65-e882f58d8100</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_2be67c5d-7a67-4650-bb65-e882f58d8100</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZZb+I6FH7vr4jSxypkYSlEBQkKnckUSgstXV4q4xzAJXFC7EDorx87EAqUcpkrIaFzcpbvLP7sK4Z8z7LrjEHESUAVp1lV360hlC5x0dUuUelSK5SKhjYclooalMvWqFh2y6ZhqIrDWAwOZRxRXlUtwyxoRlEzC4+GYVtlu1jM5cv5N1UZQMREaGGSE16J71Fmp2mrahxRO0CMMJsiH5jNsd2vd9q2sLRRhkmtXa1Qpgmj2oTz0NZ1nHMBg+fhHA58/Urfsblymd0nY4p4HME6p8uq6tp3sVjkFvlcEI11yzAM3ajowsZlZHyu1s4yZ3AdOgpW8jWiASUYeeQTSVAd4JPAVereOIgIn/g/hDZ105ChNUiwhs0CPVf1rwQpuhMj7YCMGNLYBJlZsB6MIAKKQXnqOVX1/LQJrnwfI0TZKIh8tif/GySgc/CCEFyNZZVl6E6PeKBdtSvAtkOxFzMyhzu5JiHCwJT7CEYkaRMmls9lSjp+JWHiR7ItA/wvY7nSt7EK6PqB7jTJGBj/PzPbntcqygB5MdQm97/y/s1tPHI+ip+8c/Haq0cRWlw0glY1hbBtvAK1Gfda3l/WzW6tndpLJx6/XMza5XiA27w5t16dSc+8m37gxuBtdn1LHvyw070bWIuO7jx+Dhvd1oDeToeFZNF6SkLncmi9IBP1iqWHM/L74/n3RcPp8rD79FF6bVjP9W5JN2b9Nwhvpt3eXaWSdP8YQ/21/gfj9nPyYBhQcX9bSXk5HS7ys/gDZsnt5KXcPWN4ad7GzS6ZUlao9369sHr1q6btGnaVGSX04+EHYJ6Jcj2cpnIj5oX4cXqRGuJqo9TUDiVHMQ6UqzXpJanFjgUBEdcWw1zJrYJRMQ2zYuVL1k290WoZBcO8MepGsVIxhJBx0ArFHsTrgI6IzCVZdrU/xwFi32ZAXYi0eRDjCTD1SMQm4khxaE8cjoAyeAwEiwdzz5wWrGGFm64ZR+MleEuazFCgKncB79JuVB9xiHapO79D3T3AJCQg+V0uOBMbzrjoxQzNY+6ZuTnKUYjFDRBJEratQrmoM+KHHkikuh+4sQe5cBKmndHZ6t/SEGapttm/f7/uv5vp6fuxuP1vWR+EjUukAZMFNUDMEg5cRIWsmp+rLm1XnYWvxy6Rh0w0lUcEr5DsfvraFbkkm0XptR7TsjLcG/PT3LOufHfXjyDT95uyyebOyVbu7FoVN4XgkVo21xnKzXLxfB6nk7yUHBmJ8LqgSlPvA44F0S0fgylQfRNCP+me2aDey7zR7+KL+YT2OeLgi71TUvGER0YfmHxkOOLAJKe+YHZSir5xSPgh3bUn3iIS8dHnCraxtBPqe/G3CCL3a1wHYm3lEXWKlwUndCwleaMsf9gMHIiwRFBgEG0HPxTgUPJd5abJGyxcbNMw5vDzF0VyW1VFGAcx5U5TTRXbfJvi5MsQ7C+jb2FSTl9f0gn78ZJ+6bT7gvl8pG5syX8bayRdFwyqfAukWKpqIt6cIjkdb/H7GuBhii/cHKP43Upq39TfNVs93T8Ptb8=</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZZb+I6FH7vr4jSxypkYSlEBQkKnckUSgstXV4q4xzAJXFC7EDorx87EAqUcpkrIaFzcpbvLP7sK4Z8z7LrjEHESUAVp1lV360hlC5x0dUuUelSK5SKhjYclooalMvWqFh2y6ZhqIrDWAwOZRxRXlUtwyxoRlEzC4+GYVtlu1jM5cv5N1UZQMREaGGSE16J71Fmp2mrahxRO0CMMJsiH5jNsd2vd9q2sLRRhkmtXa1Qpgmj2oTz0NZ1nHMBg+fhHA58/Urfsblymd0nY4p4HME6p8uq6tp3sVjkFvlcEI11yzAM3ajowsZlZHyu1s4yZ3AdOgpW8jWiASUYeeQTSVAd4JPAVereOIgIn/g/hDZ105ChNUiwhs0CPVf1rwQpuhMj7YCMGNLYBJlZsB6MIAKKQXnqOVX1/LQJrnwfI0TZKIh8tif/GySgc/CCEFyNZZVl6E6PeKBdtSvAtkOxFzMyhzu5JiHCwJT7CEYkaRMmls9lSjp+JWHiR7ItA/wvY7nSt7EK6PqB7jTJGBj/PzPbntcqygB5MdQm97/y/s1tPHI+ip+8c/Haq0cRWlw0glY1hbBtvAK1Gfda3l/WzW6tndpLJx6/XMza5XiA27w5t16dSc+8m37gxuBtdn1LHvyw070bWIuO7jx+Dhvd1oDeToeFZNF6SkLncmi9IBP1iqWHM/L74/n3RcPp8rD79FF6bVjP9W5JN2b9Nwhvpt3eXaWSdP8YQ/21/gfj9nPyYBhQcX9bSXk5HS7ys/gDZsnt5KXcPWN4ad7GzS6ZUlao9369sHr1q6btGnaVGSX04+EHYJ6Jcj2cpnIj5oX4cXqRGuJqo9TUDiVHMQ6UqzXpJanFjgUBEdcWw1zJrYJRMQ2zYuVL1k290WoZBcO8MepGsVIxhJBx0ArFHsTrgI6IzCVZdrU/xwFi32ZAXYi0eRDjCTD1SMQm4khxaE8cjoAyeAwEiwdzz5wWrGGFm64ZR+MleEuazFCgKncB79JuVB9xiHapO79D3T3AJCQg+V0uOBMbzrjoxQzNY+6ZuTnKUYjFDRBJEratQrmoM+KHHkikuh+4sQe5cBKmndHZ6t/SEGapttm/f7/uv5vp6fuxuP1vWR+EjUukAZMFNUDMEg5cRIWsmp+rLm1XnYWvxy6Rh0w0lUcEr5DsfvraFbkkm0XptR7TsjLcG/PT3LOufHfXjyDT95uyyebOyVbu7FoVN4XgkVo21xnKzXLxfB6nk7yUHBmJ8LqgSlPvA44F0S0fgylQfRNCP+me2aDey7zR7+KL+YT2OeLgi71TUvGER0YfmHxkOOLAJKe+YHZSir5xSPgh3bUn3iIS8dHnCraxtBPqe/G3CCL3a1wHYm3lEXWKlwUndCwleaMsf9gMHIiwRFBgEG0HPxTgUPJd5abJGyxcbNMw5vDzF0VyW1VFGAcx5U5TTRXbfJvi5MsQ7C+jb2FSTl9f0gn78ZJ+6bT7gvl8pG5syX8bayRdFwyqfAukWKpqIt6cIjkdb/H7GuBhii/cHKP43Upq39TfNVs93T8Ptb8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950212A53204295E0401F0A079905C8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>930885f3-a4db-4c89-a0c5-4b5518f49e63</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c8221854-35d6-498d-a02d-421784be1022</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a8d70240-77fd-4efe-ba84-308dc9d6ea40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>60d0c277-a9e2-413c-acfa-fba360ade9bd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bbaf77dd-7e4a-4afb-a071-c5af692dba21</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00035_PERM_UVTC_UserName_Valid_Role_DECE_with_TokenType_UnlockMe_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DECE_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDECECS"));
tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdDECE"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full DECE">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID1",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082859</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951062D99014BE7E0401F0A059928E6</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_cbe0d44a-14eb-48b1-af93-d31e50ba0334</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_cbe0d44a-14eb-48b1-af93-d31e50ba0334</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH6uQhCRtExUkoJelF3qB7bJ9OTLOAKaJTW0nhf31xw4kBUp7ukdCQp6MZ76Z+fzZJwKlST1qCQFcEkaN7mnD/AePwIl9H1muDyPLPx65FhqHnhV7LgTOCDme55tGV4gMulRIRGXDrDuubzmB2jJwnKgeRo5Xcz3/yTQegQsVWrnUHNNYpAkVUZG2YWacRgwJIiKKUhCRxFG/dXMdKc8IlZjM5skKZZGQN6dSziPbxrUYMCQJrmGW2if2ls9JLKI+mVAkMw7rnLFomOu9r6+vtVevxvjErjuOYzuhrXxiQSbfzea3cjPEXTpmq3UHUUYJRgn5gzSoG5BTFhutZMI4kdP0g9Cu7To6tAULbGHXp99N+y1Bge6LkbZAcoEsMUVuGewBxsCBYjB+PnQb5vevTXC1d8ARFWPGU7Gz/jtIQHNI2BxiS5SVlei+HnFPu5ongKMuxUkmSA49TZM5wiCMOw5jsrgmQpEvFkYxfmMh1I+ULAP8N2M5sTexKuj2nu6ckgkI+X9mtjmvVZRHlGTQHDz56bLTyRaL6TjvBD+HXt/j8ja47R03CgibzitQ1bjX612yVtxab+q9XDhtef345HvtLOf2EHrjJbr/NZktD7I7KTpP6Uxesm7PuRGT++f+ZXY/CuiEDy7kD48Onw+nB5TPxsNZfjP69vORXnQnD78GP7DfPnB/Xx1enucXcHY1PhvmQXJ5NL+7CoPDMMNP4QGpX1236xfuda/TDi9vc+cHitso9d37ePY75d9+J8wfTEYH8X2yGKb1Fmd+462mzRq2jaUk9LPRDLAsl5oe3VPjXM0Lyc/lRVtIbI0L12iuNUpIoNJs6l1aWqJMCRCJIzXM1frMd0LXccO6F5yft9pnZ47vuOdOywnC0FGLUoNWKHYgdhgdE51Lq+yKP58DxGkkgMbArZxleArC/CTiKZLI6NIHdTgYFTBgSsVdtuDx69I9Cg9DB4LpoS9eZvXn2ZFp9Ji8pbe8NZbAt6Xb25LuB8BkTkDruya4UAwXUvXiBeWZTNxajmoUMnUDcC3CUd0/DmxB0nkCGqmdsjhLoDafzovO2GL1X7cQFoW1aCsWxeH7sLbdb2UblE9MtIPQ9bRBjRLe3UPHUVAW80HRwc59VYZvZTHRZ0z1VHKCV0i2P71RRXOk4sm6qhJ25b1r2Ips7xZVJYtzgivCVze1EnolA81yLC+o9lLL8jwrBnGkJY6r8LZSOtfuA86UTi0H7BmoXYWwv3RNVKh3Mlf2bXyZnNK+RBJSRRujWH7hjdAHod8IXcX3xVcfIFspVd8kLOQ+WydRTwmN+NPXBo6w9lPmO/X3ynj8Nq49sTbyqDrVw0ASOtErfSEsPyAGZiosUQrG+GbwfQH2Jd82Vk2usEjFplEm4eMvhpamhokwZhmV3VOzMGzKZYFTLucQvTm9C1NI8vqOXYgP79jhzXVfCVeKzMqX/LezRQq6YDD1VV5gaZgL9WRUyelkQ57XAPcrtN/5TKG3K2m+M7+3bPR09zw0/wU=</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH6uQhCRtExUkoJelF3qB7bJ9OTLOAKaJTW0nhf31xw4kBUp7ukdCQp6MZ76Z+fzZJwKlST1qCQFcEkaN7mnD/AePwIl9H1muDyPLPx65FhqHnhV7LgTOCDme55tGV4gMulRIRGXDrDuubzmB2jJwnKgeRo5Xcz3/yTQegQsVWrnUHNNYpAkVUZG2YWacRgwJIiKKUhCRxFG/dXMdKc8IlZjM5skKZZGQN6dSziPbxrUYMCQJrmGW2if2ls9JLKI+mVAkMw7rnLFomOu9r6+vtVevxvjErjuOYzuhrXxiQSbfzea3cjPEXTpmq3UHUUYJRgn5gzSoG5BTFhutZMI4kdP0g9Cu7To6tAULbGHXp99N+y1Bge6LkbZAcoEsMUVuGewBxsCBYjB+PnQb5vevTXC1d8ARFWPGU7Gz/jtIQHNI2BxiS5SVlei+HnFPu5ongKMuxUkmSA49TZM5wiCMOw5jsrgmQpEvFkYxfmMh1I+ULAP8N2M5sTexKuj2nu6ckgkI+X9mtjmvVZRHlGTQHDz56bLTyRaL6TjvBD+HXt/j8ja47R03CgibzitQ1bjX612yVtxab+q9XDhtef345HvtLOf2EHrjJbr/NZktD7I7KTpP6Uxesm7PuRGT++f+ZXY/CuiEDy7kD48Onw+nB5TPxsNZfjP69vORXnQnD78GP7DfPnB/Xx1enucXcHY1PhvmQXJ5NL+7CoPDMMNP4QGpX1236xfuda/TDi9vc+cHitso9d37ePY75d9+J8wfTEYH8X2yGKb1Fmd+462mzRq2jaUk9LPRDLAsl5oe3VPjXM0Lyc/lRVtIbI0L12iuNUpIoNJs6l1aWqJMCRCJIzXM1frMd0LXccO6F5yft9pnZ47vuOdOywnC0FGLUoNWKHYgdhgdE51Lq+yKP58DxGkkgMbArZxleArC/CTiKZLI6NIHdTgYFTBgSsVdtuDx69I9Cg9DB4LpoS9eZvXn2ZFp9Ji8pbe8NZbAt6Xb25LuB8BkTkDruya4UAwXUvXiBeWZTNxajmoUMnUDcC3CUd0/DmxB0nkCGqmdsjhLoDafzovO2GL1X7cQFoW1aCsWxeH7sLbdb2UblE9MtIPQ9bRBjRLe3UPHUVAW80HRwc59VYZvZTHRZ0z1VHKCV0i2P71RRXOk4sm6qhJ25b1r2Ips7xZVJYtzgivCVze1EnolA81yLC+o9lLL8jwrBnGkJY6r8LZSOtfuA86UTi0H7BmoXYWwv3RNVKh3Mlf2bXyZnNK+RBJSRRujWH7hjdAHod8IXcX3xVcfIFspVd8kLOQ+WydRTwmN+NPXBo6w9lPmO/X3ynj8Nq49sTbyqDrVw0ASOtErfSEsPyAGZiosUQrG+GbwfQH2Jd82Vk2usEjFplEm4eMvhpamhokwZhmV3VOzMGzKZYFTLucQvTm9C1NI8vqOXYgP79jhzXVfCVeKzMqX/LezRQq6YDD1VV5gaZgL9WRUyelkQ57XAPcrtN/5TKG3K2m+M7+3bPR09zw0/wU=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00036_PERM_UVTC_UserName_Valid_Role_Portal_with_TokenType_UnlockMe_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportal"));

tS.setPropertyValue("audience","");
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95022600BFE1379E0401F0A079902D7</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95022600BFE1379E0401F0A079902D7</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_08294</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95022600BFF1379E0401F0A079902D7</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtb+I4EP6+vyLKfjwFO4EAiQoSbdote2zZQne3d19OrjMEl8QJsRNof/3ZoUmBvlz3JCTkyXjmmZnHj30iSBI7/kgIyCVLuTEOBuY/uNu1+47nWP0FwVbHpdjybOha0O15C/Cwjbt90xgLUcCYC0m4HJgOtjsWdi27c4Ox73g+dlu9bvtv0/gJuVChlUsLm8Y2ibnwq7QDs8i5nxLBhM9JAsKX1J+Pvk185emTGpM5PNmhrBLmw6WUmY8QbYVAIY5pi6YJOkEHPieh8Ocs4kQWOTzlDMXAfNq72Wxam3YrzSPkYIwR9pDyCQWLPpvDT/VmCMd8ke7WZ4SnnFESs0eiQX0DuUxDYxRHac7kMnkjtI1srENbsKUWtTv8s4meE1ToPhjpAGQuiCWWxK6DzWABOXAKxo/ZeGB+/tgEd3tvcsLFIs0TcbT+PUjAS4jTDEJL1JXV6D4e8ZV2DU+A+mNO40KwEq40TTJCQRjfc1iw7YQJRb5QGNX4ja1QP1azDOjvjOUE7WNV0NEr3QlYBEL+n5ntz2sX5SeJCxjeSlReJrZLM4TH54HDgrPigXz54k6jQQVh33kHqhn30/qYrA23njblm79Q0L5MSwiv1hkKV9uHJGn/CBari18Jomu0evwpymx9P3mMpverc+d2Mrl2b3sRDf8uuMh6UzaNUrc7P6Py09ev7T6dBu7t5TUIQlflXdnpFRH0QnJ1mQez+PyXe7deXY2cs/4ouj794RHSHd04590gcNCkXcBj3+HTtTcbk0/r+zVFxeZm8cfszy/Xd5fhrD94rmm/hkNjLQnz4u4eqKyXmh7jwLhQ8yLyfXnRFhZai8rVz7RGCQlcmkO9S0uLXygBYqGvhrlbX3gudpwuxqcX53a7553jDrYv8Aj3PA87Qa/WoB2KI4hnKV8wnUur7I4/7wOkiS+Ah5BbZVrQJQjznYgBkcQY85k6HCkXcJMqFbftdfSY5x7th+467MX3bAWbRZoVpnGVyimf5qOFhPxQutsH0j0DyjIGWt81wYViuJCqF2tSFjK2WyVpcSjUDZBrEfadTt9FgiVZDBopStKwiKGVLbOqM0js/h2LUFFZmaBZmksS29X5e7O84291J5RPyLSD0CWdgpomvLiK+r5b1/N23d39uuvwoyJk+piptsqc0R2Sw0/PbNE0aajyXFiNvNlwbDgIjo7ravKFJaMN7Zv7Wsm9EoNhPZw1aa1bRVkW1Th6WuhyFR4pvbPRHGih1OrhJl0BR00I9KHLokF9lLmxH+Ir5JLPJZGQKPIY1fIDL4U5CP1SGCvWbz/6DDlIqfomYStfs53F6kGhEb/75qA+1X7K/F39bdI8fB7XK7H28qg61fNAMh7plb4WHt7gBk1VWKZ0LM33g78W4LXkh8amyQ0Wqdh0V0h4+4uhBWpgEkrTgstxYFaGfdGscMqHDPxnpxdhKmF+umm34s2b9vbbZK7kKyFm48v+29liFV0omPpCr7AMzK16OKrkPNoT6SeAxzodOLjfxv2RE5x29nXa7fbcpoEHlQxfmF9a9np6fB6G/wI=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950D208308A2DB4E0401F0A07995675</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950D208308A2DB4E0401F0A07995675</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00037_PERM_UVTC_UserName_Valid_Role_Retailer_with_TokenType_UnlockMe_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F951091FC79DCB30E0401F0A0599396A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F951091FC79DCB30E0401F0A0599396A</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_08298</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951091FC79ECB30E0401F0A0599396A</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/A4jxlj2ZiAPYEZwKVxSkgDadrTl46Q16DElsCSufTXH9nEDpDLoWeGGUbr1e63F327lwInse11hYBUUs60wG/rv207dOpNAMNCFxeGgy6wgUlzajQgnE7rDrGieqhrgRAZBExIzGRbt5HlGKhhWM49Qp7tesit2aj5S9ceIBXKtFKpIV3bJDETXuG2rWcp8zgWVHgMJyA8SbxJ92boKU0Pl5j0zuUOZeEw7cylXHimSWohEIhjUiM8MS/NA53LUHgTOmNYZik8+wxFW3++u16va+t6jacz00YImcg1lU4o6OxM73wqL0MYsIjvzn3MOKMEx/QPzkHdgJzzUOvGM55SOU/eMW2ZFspNG7AhBrEcdqabLw4KdCdaOgCZCmyIObZKY2OIIAVGQPs+Dtr62WkV3N29TzETEU8TcXT+O0jAVhDzBYSGKCMr0Z1u8Y10dS6BeAEjcSboCkZ5mywwAaF9SyGimyEVqvlCoRXl1zZC/WjZZUD+piyX5j5WBd18Izs+nYGQ/6dm+/XaWXnAcQadP9Z1/DRmt3dfRtFVb1i/u3bHsDyPYsdpFxD2lXegqnI/n4+bteqt50th2PS7wyfnC+8vn8JeeMsDn5230uveqOXP1ktEZjN+fjVKB/0hyNgZ/uom6KeMs+HXOLvf+MvvX/E4a9UJH/Q+Ob3mzT/DjUNvF/5kmPiN7Q+n0bC2/rfH+dhZj6y7/gMhOFpcmSjwH8nmR/NxyxDjw/Xn8+XP86cpuH0xsv118PDp4vvD7Upa9lCsyax+9UCugvZLTPsxHApLSphk00cgsjzm7RH42kDVC8uP6SWX0NCIClVvkXOUkMCk3slv5dTiZYqAaOipYu7OA7dhIdca9Juu3+/V0WfkIGuAuqjhunX3olty0A7FEcQ+ZxHNfeUsu+ufjwGSxBPAQkiNFc/IHIT+gUUfS6wFbKweB2cC7rli8cZii+xp/MfNWGTJJJzGCMckkq6ujbi8ZbdpN5KQHlJ3/YC6x0DogkLO73mDC9XhQqpcLPEqk7FVW+Eag0xNgDQnYc92Wg1T0GQRQ47UTHiYxVBbzBdFZkyx+7cVF4lCOv58Xzy8d+M6/lamQOmENFcQeSw9UGWEVzOo5TXKQN4P+GI/4NJ8Nwtp/r5UPmVKyQ7J4aeXNsn7o+oRFdHv/uS3VeKu1E++/vqm+QEo8zgflaNwRffclsNUzQfFHp2ymktcW9ay1Sor6tfMmTFV5k1FkJY5AZIpetve8ydgZmXCPGm6VKiPPFfyQ3yZnLOJxBIS1W1acTxhtZiAyFeLQD2Tzal7y4FLlTcJG/mWrB+rDSRH/OGSQjyS6ynxN/W35ulL4G/Z2vOj4lT7hKRslp/yObJ9pykIV2apIj6e7ht/y8Bbzg+FVZIrLFJ10zST8P4XLWe0to4J4RmTga8Xgn2WLXDK7QK8F6VXZgomfx7NG/HuaP55M5wovkuwXunS/1Y2aNEuBPR8AyiwtPWN2jSVczbbY/VngEfEjmy732wNWr2G5bQqYm+6LrL9XpXAg0g6r8SvJXs5PX4PnX8B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95022C78F8B5148E0401F0A079902DB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95022C78F8B5148E0401F0A079902DB</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00038_PERM_UVTC_UserName_Valid_Role_Dynamic_LASP_with_TokenType_UnlockMe_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDLASP"));

tS.setPropertyValue("audience","");</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950D2067CBF134FE0401F0A059927C5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950D2067CBF134FE0401F0A059927C5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082911</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950D2067CC0134FE0401F0A059927C5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+o6EP5+fkWnfjxT+kILtCPMIPhSRVHBo/LlTkjTNtom0KSA/PqbFFsB0eu5M8ww2W52n9198iTHDKSJ5XUZQxnHlCh+v63+A6E7tU27qQEThJrtOobWcoNAq9ft0EWWg5xpU1V8xnLkE8YB4W3VMkxbMxzNtMeG4VmuZ1q1Vr0xUZU/KGMitHCpGaqyShPCvCJtW80z4lHAMPMISBHzOPRG3euBJzw9UGJSO8cblEXCrBNzPvN0HdYCBFGSwBqkqX6s7/gcB8wb4YgAnmfoPWfA2ur73uVyWVvWazSLdMswDN1wdeETMBwdqZ1f5WYU+CSkm3UPEEowBAleAwnqGvGYBko3iWiGeZx+EdrUTUOG1tAKatC0yZGqfyQo0P0w0g7IjAGNxcAsg92jEGWIQKQ83Ptt9ehnE9zsHWeAsJBmKdtb/x0kRBYooTMUaKysrET384gH2tU5RtDzCUxyhhfoRtJkBiBiym2GQrwaYCbIFzClGL+yYuKHS5Yh+DdjOda3sQro+oHu9HGEGP8/M9ue1ybKH5DkqHMDLxpm7o7ATYQuSbRYPGeM3KTR5PKhXUDYdt6Aqsb9vt4na8Wt902w+XtAz/vxbbYexWdPQ3uU3oAFPk30c4B135+Y15cnzaf6U+9Zn/ebPrR4bLagO7i6ujN7l2brdG3ErxdTY9h//DV8pmFM7i6M2SP7jV4e7VdjRSL/ohFfOE18dT4Jgzt9HL1OJwOXO+Nsfpe7D4Ng2mDJpDl8GicPk2T18vLcPT0f/lrT7uV8fBHdr4P87oWur4Nu+6Om7Rp2jaUkjPLpC4K8XEp6+H3lTMwL8O/lRVpwoIWFqzeTGsU4IlztyF1SWrxcCBAOPDHMzfpMHKO+ZTSavZMzs26fnRq2YZ4ZXcNxXavZc0oN2qDYg9ijJMQyl1TZDX++BwhTjyESoExb0BzGiKnfROwDDhSf3IvDQQlDYypU3AyxOU+jZd4wwZK3YuPNqS9DC65V5YbyIRlm3ZCjbFe66zvSfY8gnmEk9V0SnAmGMy56MQeLnCdmbQFqBOXiBsikCHuW3XJ0htNZgiRSPaVBnqDaLJ4VndHZ5t/SAGSFtT/ojm6Lo/dlZfvfyiYInwBLByarOUFikOjALWSUpXxdcmO75DJ8Nw+wPGGiozzDcINk99MHUSRDKpYUNZWgK999w05cfb+kKlWwwLAie3VLC5EXEtApRzIHtXktXyzyYghNKW+ZCK8LlTP1EYK50Ki3MX1FRK9C6D+6IirUe5kr+y6+nMdkxAFHqaCMUix/8D4YISbfB77g+uqnj4+dlKJvHK34IVsvEc8Iifjblwb0oPQT5lvxt6RZ8DGuA7G28og6xaOAYxLJlbwM3r6gBaQiLBbqRbPt4IcCHEq+a6yaXGHhgk3TnKOvvyhSltoqgJDmhPt9tTBsS2WBk7/NkPfh9ClMIcfv9+uKfXm/Pl0PRkK0UqBWvvi/nTVc0AUiVV7jBZa2uhLPRZGcRFvS/A5wX50t0+o6dbtrW65TqXPTdQ2n16oauFNJ55P5s2Wrp/vnofMv</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950212A534A4295E0401F0A079905C8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950212A534A4295E0401F0A079905C8</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00039_PERM_UVTC_UserName_Valid_Role_Linked_LASP_with_TokenType_UnlockMe_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdLLASP"));

tS.setPropertyValue("audience","");</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>LLASP</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950212A40FC5E6CE0401F0A0599099B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950212A40FC5E6CE0401F0A0599099B</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082915</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950212A40FD5E6CE0401F0A0599099B</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+o4EH2/vyJKH6uQLwIkAqQUypZeaFmgny8r45hgGpwQOwH669cOJAUKXe4KpMiT8cyZmZNj1ylYBIbjUopihkMiddsN+Z+qPq1B09KUmmlPlbJXmSh2zdaVysSuVEAVTpCJZKlLaYK6hDJAWEM2NL2saJail8ea5hi2o1dKNdt8l6VnFFMemruUNFlaLwJCnSxtQ05i4oSAYuoQsEDUYdAZuf2ewz0dkGOSm/Utyixh3JwxFjmqCksegigIYAmGC7WuHvjUPeqMsE8AS2K0y+nRhrzbu1qtSiuzFMa+amiapmq2yn08iv0rufkr34y8LpmG23ULkJBgCAL8CQSoPmKz0JPcwA9jzGaLM6F1VddEaAWtoQL1MrmS1a8EGboLIx2AjClQ6AzoebAhmqIYEYikp2G3IV9dNsHt3nEMCJ2G8YIerf8MEiIpCsIIeQrNK8vRXR7xRLuadQSdLoFBQnGKHgRNIgARlQYxmuJ1D1NOPo9K2filNeV/nLMMwT8ZS13dx8qhqye608Y+ouz/zGx/XtsozyBIUPNeG3am1wl7vA/UG9/8uDPttPI+ar2l/UYGYd95C6oY9259TNaCW7tN63kyjZaPcGWln3gwe+wFb+2/7u5Jdfn60nuZ/B4N7pOX56G3CdDYvHv2h7P5u+mn19qq/+AON9jtr8ZvrzVzM+rhX9cTqzWZkOQ18Of20rIfPjrg/aZtVEY2W1cGf7uhP6iQgflwbc5Uq+U+lW+q2vPrpDvDLm7X+pZLAu/jyejppPqLuHdlWFl9tkit17F/3w/AR+Orpv0aDo25JIySyRxBli8FPbptqcPnBdjP8iIs2FOmmasTCY2iDBEmN8UuIS1OwgUIew4f5nbdsS3N0A23rHVa1m2ldauVNb2juZpl25pt3+QatEVxBLEVkikWuYTKbvnzM0C4cCgiHoqVNEzgDFH5h4htwIDUJUP+cYSEonHIVXwO6KfNog1ds1T3InsNfGaF89pClh5C9kgeY3fKUHwo3eaBdA8RxBFGQt8FwSlnOGW8F0uQJizQSykoEZTwEyAWIuwY5ZqlUryIAiSQqovQSwJUimZR1hmVbp+GAiDNrL2eOxpkn97Zyo7f5U3gPh4WDlRUc4P4INGJU0jLSzlfcmW/5Dy8m3hYfGG8oyzGcIvk8NUXUQRDCpZkNeWgC99jw0Fc9bikIpWXYliQvTiluchzCWjmI1mC0rKUpGmSDaEq5C3m4VWucro6QjDhGrUZhx+IqEUI9aIjokB9lLmwH+JL2IyMGGBowSkjZcsL7gcjRMX9oMu5vr708nGQkveNoTU7ZWsF/BohEP9404AOFH7cPOCPVRh7X+M6EWsvD6+TXwoYJr5YicNgc4YWMORhMVevMN4PfirAqeSHxqLJBRbG2TRJGDr/RhKy1JABhGFCWLctZ4Z9qcxwsk2EnC+nb2EyOd6dr2t69nx97fdGXLQWQC588X87KzijC+S3S+6fYWnIa35d5MmJvyfNO4Df1NmouTb/VduGW6hzlatzuX1bNPCgkuY383fLXk+Pv4fmvw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950228A9A9A7D2AE0401F0A079904DE</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950228A9A9A7D2AE0401F0A079904DE</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00040_PERM_UVTC_UserName_Valid_Role_AccessPortal_with_TokenType_UnlockMe_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdAccportal"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Access Portal"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdAccportal"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>ACCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F951077A8663A0E0E0401F0A07995550</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F951077A8663A0E0E0401F0A07995550</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082919</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951077A8664A0E0E0401F0A07995550</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH1chDneigpTSy6alpW1YttuXI2MbcJvY1HYg8OuPHRoKlPawR62EPBnPfHPxN3MiYRKX/UBKIhTlzArP2vY/eFyrAtyETq1cJU4VVaDTHDUqThNU6vVRq1Gpg6ZthVKmJGRSQabadhl4VQfUHK86AMAvt/yyVwJe/cm2hkRIbVqrlIBtZUnMpJ+7bdupYD6HkkqfwYRIXyE/Cm56vtb0YYHJ7pysUeYORWeq1Mx3XVTCBJE4RiXEE/fE3dE5wdKP6IRBlQry5hPLtv12d7FYlBaVEhcTtwwAcEHL1TpY0sl3u/OtuExwyMZ8fe5CxhlFMKYraEDdEDXl2AriCRdUTZNPTHuuB4xph2TIQV6Vfbfddwc5uiMt7YAUEjpyCr3C2AMZE0EYItavh7Btfz+uguu7AwGZHHORyL3z30EibE5iPiPYkUVkBbrjLR5IV+eEID9kKE4lnZNb0yYziIi07gQZ06xHpW4+LK28/FYm9T8tuoygvynLibuNVUN3D2TnjE6IVP+nZtv1WlsZwjglHdF9ST28BDN16fYurybdURS/zMiSXvxp5xC2ldegNuV+O+8366a33i71x2G06oth+mP5o8VAtxH86NFGHazm16/Yy/r3T4wP+5wPpni4XA1bCIPoWfx6whD++dmVj7dXLyp1x9cDMPr57f7p8bJ5dVnxgkn/Xp4+N+eD7PE6fHLD5+sL2rtfZr8X3SlOgqE6hcmsj09Xgz+88hDf/15eVh9luZfd1GXjaaFf6rcaENP01gteEy+7jGqjuzlvv8e0HcOusKCEKB09E6SKo2mP8My60PWC6mt6MRKKnXGu6s8MR0lFmLI75pahFj/VBESxr4u5Pl+0ah5oNIJmvV4JwLn+qwLvAgSg0WrVajVQcNAaxR7ELmdjanwZll33z9cAUeJLwjARzpynaEqk/YXFM6igFbIH/Tg4k2TANYt7lVqlvmgt5klVCi+WoxXgLTrxPM3dt1z1WV8EY0XELndXdrj7gSA6o8QQvOlwqVtcKp2MVzhPVeyV5rDESKpHgDAs7JerzZoraTKLiYHqJhynMSnNprM8Na5c/5YdiGQufTgf5C/v08D2vxU50DqYGgVpYjkluo7kwBDyikA+D7i+HXBhPkgxNQ9MJ1QJitZIdj+994lpkE2TBN3ueRQVqDfKx13W6fh40/0CkrufjY0jPKdbbotZqseDJo9OUctXWHotpfN5mlevYYhRaPOu5kfPjQhKNbstB/yFMHdjwj1quGxQ73neyHfxpWrKIgUVSXSvWfnxiM0iItJsFqF+Jdmxa8uOS503RTJ1SNaN9QJiEH+5oyAfGT0tvtM/Cy7we7kO2Nryo+PU64SibGJOZowsP2kKxLVZqnmPi23jhwwccr4r3CR5g0Xpbhqlinz+xTKE1rYhQjxlKjyzc8E2yeY41XJG/HelD2ZyIn+bzJn8dDI/3vQiTXcJtDe69L+VHZq3CyK2WQByLG0704umds4mW6T+BnCP10G5cnZx3gga5+fl8javg6oXbBK4E0nng/ijZCun+++h8y8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95023DFE7A7EE22E0401F0A0799041A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95023DFE7A7EE22E0401F0A0799041A</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bb96fc41-2093-4734-aaeb-331d8f527d02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fa8525a5-4dd0-44ab-89af-92e2a4549d94</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00041_PERM_UVTC_UserName_Valid_Role_DECE_CS_with_TokenType_UnlockMe_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DECE_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDECECS"));
tS.setPropertyValue("audience","");</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full DECE">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID1",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082923</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950212AEB28F905E0401F0A079905EF</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7cd14bef-fb8e-4735-8750-9946a90af389</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7cd14bef-fb8e-4735-8750-9946a90af389</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdb+o4EH2/vyJKH1chCSSFRIBEC1VhC+UCt18vK9eZgEviQOxAuL9+7UBSoNDlroSEPBnPnJk5PnadoTAouy3GIOYkokq33VD/qWLPtN7B1/z3GmhWtWJrtaptaI5jXSPHQH6l5qhKl7EEupRxRHlDLRumpRm2ZloTw3DLjluuluxy5U1VniBmIrRwKRmqkoYBZW6WtqEmMXUjxAhzKQqBuRy741b/wRWeLsoxqc36FmWWMG7OOF+4uo5LHmAIAlzCUajX9QOfusfcMZlSxJMYdjk91lB3e9frdWldKUXxVC8bhqEbji58PEamV2rzR74ZvC71o+36FtGIEowC8htJUH3gs8hTWsE0igmfhWdCm7ppyNAapFjDpkWvVP0zQYbuwkgHIGOGNDZDZh5sBD7EQDEov0bdhnp12QS3eycxosyP4pAdrf8MEtAVBNECPI3lleXoLo94ol3NOmC3S3GQMLKCgaTJAmFgyjAGn6QPhAnyeUzJxq+kTPxIzjLAfzKWur6PVUDXT3SnTabA+P+Z2f68tlGeUJBAczWpdV6vh73ko7p6aU+flkvHdmDWGv6cNzII+85bUMW4d+tjshbc2m3qc/vxhfa8sIWvO3M0eb4Petx5LluDOd38su6fJr0Reu6vrA/rFlXHVquSjgIeGLdT1LErb2aMfDob9m1r2v/7x3Dd+9lfvAwmjx/OJg3Bor2OU/NY7f6N0HtsRuWlvWw/eLOX6IbD6GNi3A9wbVntrY276/Eg9f9qv8I8bs+7j+QHdOco5j29jV9bK/z7NX5jjc+a9ms4NOaSME7ePwDzfCnp0W0rd2JeiH8vL9JCPM3PXN2F1CjGgXK1KXdJaXETIUDEc8Uwt+uOZTimYTrlin1317rpdAzLMO+MlmE7jiEWuQZtURxBvI2oT2QuqbJb/nwPEIcuA+pBrK2iBM+Aqd9EbCOOlC4dicMRUQaTSKh4JFq1SDY0MS3Hn11bvulY7+t5qiqDiD/Sx7jlc4gPlbtyoNwjwGRBQMq75DcTBGdctGKJVgkPzNIKlSgk4gKIpQa7Zatm64yEiwAkUD2MvCSA0mK2yBqjs+1/WUOYZdasq5hlZ+9sacff8i4IH49IBybruQExSThxDZl5MWeKto+uqzx8K/GIPGKipTwmeIvk8NMnUyRFCprsqsphF97HhoPI+nFRRTJvRXDB9+KiFjovVKCZj2WJSstSslol2SCqUuFiEV4XQmfqY8CJkKnNJJoD1YsQ+kW3RIH6KHNhP8SX8Bkdc8QhFLRRsuUFT4QxMPlE6Aq6p5e+Pw5Sir5xSPkp220gXhIS8bePDexi6SfMQ/G3jmLvc1wnYu3lEXWKdwEndCpX8j7YnCEGjkRYIk5lFO8HPxXgVPJDY9HkAgsXbHpPOJz/okhlaqgI4yihvNtWM8O+WmY4+WYB7qfTlzCZIu+u2JSdvWJf+g9joVshUgtf8t/OGsnogkGVN3mGpaGm4sUoktPpnjrvAJ4WaOv2O4E+rKT5xfzVstfT4/PQ/Bc=</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+o4EH2/vyJKH1chCSSFRIBEC1VhC+UCt18vK9eZgEviQOxAuL9+7UBSoNDlroSEPBnPnJk5PnadoTAouy3GIOYkokq33VD/qWLPtN7B1/z3GmhWtWJrtaptaI5jXSPHQH6l5qhKl7EEupRxRHlDLRumpRm2ZloTw3DLjluuluxy5U1VniBmIrRwKRmqkoYBZW6WtqEmMXUjxAhzKQqBuRy741b/wRWeLsoxqc36FmWWMG7OOF+4uo5LHmAIAlzCUajX9QOfusfcMZlSxJMYdjk91lB3e9frdWldKUXxVC8bhqEbji58PEamV2rzR74ZvC71o+36FtGIEowC8htJUH3gs8hTWsE0igmfhWdCm7ppyNAapFjDpkWvVP0zQYbuwkgHIGOGNDZDZh5sBD7EQDEov0bdhnp12QS3eycxosyP4pAdrf8MEtAVBNECPI3lleXoLo94ol3NOmC3S3GQMLKCgaTJAmFgyjAGn6QPhAnyeUzJxq+kTPxIzjLAfzKWur6PVUDXT3SnTabA+P+Z2f68tlGeUJBAczWpdV6vh73ko7p6aU+flkvHdmDWGv6cNzII+85bUMW4d+tjshbc2m3qc/vxhfa8sIWvO3M0eb4Petx5LluDOd38su6fJr0Reu6vrA/rFlXHVquSjgIeGLdT1LErb2aMfDob9m1r2v/7x3Dd+9lfvAwmjx/OJg3Bor2OU/NY7f6N0HtsRuWlvWw/eLOX6IbD6GNi3A9wbVntrY276/Eg9f9qv8I8bs+7j+QHdOco5j29jV9bK/z7NX5jjc+a9ms4NOaSME7ePwDzfCnp0W0rd2JeiH8vL9JCPM3PXN2F1CjGgXK1KXdJaXETIUDEc8Uwt+uOZTimYTrlin1317rpdAzLMO+MlmE7jiEWuQZtURxBvI2oT2QuqbJb/nwPEIcuA+pBrK2iBM+Aqd9EbCOOlC4dicMRUQaTSKh4JFq1SDY0MS3Hn11bvulY7+t5qiqDiD/Sx7jlc4gPlbtyoNwjwGRBQMq75DcTBGdctGKJVgkPzNIKlSgk4gKIpQa7Zatm64yEiwAkUD2MvCSA0mK2yBqjs+1/WUOYZdasq5hlZ+9sacff8i4IH49IBybruQExSThxDZl5MWeKto+uqzx8K/GIPGKipTwmeIvk8NMnUyRFCprsqsphF97HhoPI+nFRRTJvRXDB9+KiFjovVKCZj2WJSstSslol2SCqUuFiEV4XQmfqY8CJkKnNJJoD1YsQ+kW3RIH6KHNhP8SX8Bkdc8QhFLRRsuUFT4QxMPlE6Aq6p5e+Pw5Sir5xSPkp220gXhIS8bePDexi6SfMQ/G3jmLvc1wnYu3lEXWKdwEndCpX8j7YnCEGjkRYIk5lFO8HPxXgVPJDY9HkAgsXbHpPOJz/okhlaqgI4yihvNtWM8O+WmY4+WYB7qfTlzCZIu+u2JSdvWJf+g9joVshUgtf8t/OGsnogkGVN3mGpaGm4sUoktPpnjrvAJ4WaOv2O4E+rKT5xfzVstfT4/PQ/Bc=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00042_PERM_UVTC_UserName_Valid_Role_Coord_CS_with_TokenType_UnlockMe_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node SPL CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCoordCS"));
tS.setPropertyValue("audience","");</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full COORD_CS">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID1",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>coord:cs</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234DFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234DFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E40910192360FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E40910192360FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E40910192360FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E40910192360FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082928</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F9502197C87C2573E0401F0A059909AB</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_c1d2eaed-ac7e-44c7-accb-09c95b5dab8e</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_c1d2eaed-ac7e-44c7-accb-09c95b5dab8e</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSRwS5AAuJACncutntnW636suRcQbibuKE2AnQX3/sQFKglMMeCSl4Mp75ZubLZ3cYCgPTdhiDhJOIKu6wq/6DDc8EBF4V4RZUGw3cEv/wtKpb2GpOmx6atkFVXMZScCnjiPKuaupGo6o3q0bjSddt07LrZq1hGa+q8gwJE6GFS01XlVUYUGbnabtqmlA7Qowwm6IQmM2xPXFurm3haaMCk9rrbFDmCZOez3lsaxqueYAhCHANR6HW0fZ8Oh6zJ2ROEU8T2Ob0WFfd7l0ul7VlvRYlc83UdV3TLU34eIzML9XeRbEZPJfOos16gGhECUYBeUcS1A1wP/IUJ5hHCeF++EVoQzN0GboKK1zFRoNeqtpHghzdmZH2QCYMVZmPjCLYI8wgAYpB+fXodtXL8ya42fuUIMpmURKyg/XfQQKaQRDFIiUrKivQnR/xSLt6HcC2S3GQMpLBraRJjDAw5T6BGVldEybI5zElH7+yYuJHCpYB/puxdLRdrAK6dqQ7QzIHxv/PzHbntYnyjIIUeoMHv3J/7WXLBvcWY9ZsBY/NwfqVZX2nm0PYdd6AKse9XR+SteTWdtP4Lvk17w81euX/vq8PjXryMrrSK+TH3bSSrcys5bvG28Kr3Gb0ffTn7fZheO2j9vd6MJ9dVUYW6C+j725bn/fd1/Ai5L9j9mz9ZM4N8uPsbZqEi6yRvbbZ5G362jRMXlnPfjjzp0iLK+nsGQ9pa+yEy2U87KM5uvkO3GNx+w456c+LuOJoZOW/u4E2erDYYLRsdz9q2q1h31hIwiSdvgHmxVLSwx0qYzEvxE/Li7QQrzrLXe1YahTjQLnak7uktNipECDi2WKYm/WooVuGblhm/Zs+dvqjkd7QjbHu6E3L0sWi0KANigOIg4jOiMwlVXbDn9MAcWgzoB4k1SxKsQ9MPRFxiDhSXPooPo6IMniKhIr7M32BMpx+M2Zv76lFlla0FlnWqnIb8Tt6lzgzDsm+ctf3lPsRMIkJSHmX/GaC4IyLVoiwKQ+MWoZqFFJxACRSg22z0W5qjIRxABKoFkZeGkAt9uO8MRrbPE0hRSy34ihKPBuz/OP7srbDd0UbhI9HpAOTBfVBjBKOnENmUc2nqptHz6sivJN6RH5joqc8IXiDZP/VB1UkR0qeFGUVuEv3Q8NeaO2wqjKblxFcMr48qoXSCx3oFYNZoNqilmZZmo+iJTUuEeE1IXWGNgGcCqFaP0V/gGplCO2sc6JEfZC5tO/jS7lPJxxxCAVxlHx5xiVhAkxeElxB+NW5N5C9lKJvHFb8mG0QiLuERHzyuoFtLP2E+V48lmKEH+M6Emsnj6hT3Aw4oXO5kifC+hQziJCwKNkNfizAseT7xrLJJRYu2DRNOXz9RpHa1FVFL6OUcneo5oZdvcxx8nUM9ofTpzC5Jm8P2RX78pB9ubmeCOUKkVr6kv92rpKcLlhcMYV/jqWrrsSdUSSn8x193gI8LtGN4SmJ3q+k98n82bLT08Pvofcv</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSRwS5AAuJACncutntnW636suRcQbibuKE2AnQX3/sQFKglMMeCSl4Mp75ZubLZ3cYCgPTdhiDhJOIKu6wq/6DDc8EBF4V4RZUGw3cEv/wtKpb2GpOmx6atkFVXMZScCnjiPKuaupGo6o3q0bjSddt07LrZq1hGa+q8gwJE6GFS01XlVUYUGbnabtqmlA7Qowwm6IQmM2xPXFurm3haaMCk9rrbFDmCZOez3lsaxqueYAhCHANR6HW0fZ8Oh6zJ2ROEU8T2Ob0WFfd7l0ul7VlvRYlc83UdV3TLU34eIzML9XeRbEZPJfOos16gGhECUYBeUcS1A1wP/IUJ5hHCeF++EVoQzN0GboKK1zFRoNeqtpHghzdmZH2QCYMVZmPjCLYI8wgAYpB+fXodtXL8ya42fuUIMpmURKyg/XfQQKaQRDFIiUrKivQnR/xSLt6HcC2S3GQMpLBraRJjDAw5T6BGVldEybI5zElH7+yYuJHCpYB/puxdLRdrAK6dqQ7QzIHxv/PzHbntYnyjIIUeoMHv3J/7WXLBvcWY9ZsBY/NwfqVZX2nm0PYdd6AKse9XR+SteTWdtP4Lvk17w81euX/vq8PjXryMrrSK+TH3bSSrcys5bvG28Kr3Gb0ffTn7fZheO2j9vd6MJ9dVUYW6C+j725bn/fd1/Ai5L9j9mz9ZM4N8uPsbZqEi6yRvbbZ5G362jRMXlnPfjjzp0iLK+nsGQ9pa+yEy2U87KM5uvkO3GNx+w456c+LuOJoZOW/u4E2erDYYLRsdz9q2q1h31hIwiSdvgHmxVLSwx0qYzEvxE/Li7QQrzrLXe1YahTjQLnak7uktNipECDi2WKYm/WooVuGblhm/Zs+dvqjkd7QjbHu6E3L0sWi0KANigOIg4jOiMwlVXbDn9MAcWgzoB4k1SxKsQ9MPRFxiDhSXPooPo6IMniKhIr7M32BMpx+M2Zv76lFlla0FlnWqnIb8Tt6lzgzDsm+ctf3lPsRMIkJSHmX/GaC4IyLVoiwKQ+MWoZqFFJxACRSg22z0W5qjIRxABKoFkZeGkAt9uO8MRrbPE0hRSy34ihKPBuz/OP7srbDd0UbhI9HpAOTBfVBjBKOnENmUc2nqptHz6sivJN6RH5joqc8IXiDZP/VB1UkR0qeFGUVuEv3Q8NeaO2wqjKblxFcMr48qoXSCx3oFYNZoNqilmZZmo+iJTUuEeE1IXWGNgGcCqFaP0V/gGplCO2sc6JEfZC5tO/jS7lPJxxxCAVxlHx5xiVhAkxeElxB+NW5N5C9lKJvHFb8mG0QiLuERHzyuoFtLP2E+V48lmKEH+M6Emsnj6hT3Aw4oXO5kifC+hQziJCwKNkNfizAseT7xrLJJRYu2DRNOXz9RpHa1FVFL6OUcneo5oZdvcxx8nUM9ofTpzC5Jm8P2RX78pB9ubmeCOUKkVr6kv92rpKcLlhcMYV/jqWrrsSdUSSn8x193gI8LtGN4SmJ3q+k98n82bLT08Pvofcv</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E4091019234DFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E4091019234DFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00043_PERM_UVTC_UserName_Valid_Role_Portal_CS_with_TokenType_UnlockMe_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportal"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdportalCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Portal_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportalCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F951062D99A04BE7E0401F0A059928E6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F951062D99A04BE7E0401F0A059928E6</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082934</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951062D99A14BE7E0401F0A059928E6</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZbuo6FH3vV0Tp41HIQAYSFSTGc9LTgZIOtC9XxjHgNnFC7ADt1187NClQ6G2vhIS8s7322oOXfUZBHBlem1KUMZwQye815X9MJ5yaBoQK1J2JYk6QrUw011Bsy52Eel2v25O6LPmU5sgnlAHCmrKh6aaiWYpu3mqaZ7he3aqZTuNJlu5RRjk0d6lpsrSOI0K9ImxTzjPiJYBi6hEQI+ox6AXtywuPe3qg5CS3zjYsi4BZa85Y6qkqrIUIoiiCNZjE6pm643MWUi/AMwJYnqH3mCFtyu97V6tVbVWvJdlMNTRNUzVX5T4hxbNTuXVSbkahT6bJZt0FJCEYggi/AUHqErF5EkrtaJZkmM3jI9C6qmsCWkFrUU2TnMrqR4CC3TeRdkhmFCh0DvQSbISmKEMEIulu5Dfl0+91cLP3NgOETpMspnvrn1FCZImiJEWhQsvMSnbfRzxQrtYZgp5PYJRTvERXYkxSABGVhhma4vUFpnz4QioV7ZfWlP9wOWUI/qQtZ+o2V05dPVCdHp4hyv5Pz7b7tUG5B1GOWuO335emZWD3YXTzED7dd+bx+dpq/KF3SbOgsO28IVW1+329P6zVbL1vehkM78yLx/XkJfLNR5v9HUY3vdlipVsXqdFOgwW9HT734oXT0eNGbHf7dL0E4bw/mpuZPYwf769H+Pczww+W5p/0x8tgsAAuaXTHi9VV/uzU1ZdRb9UL5m9Pjdhs/OpeTZ9m7HwxNl/HK+dPugoerUEUX7aXtnnt1m9ezp3bcZDmg/OTRt124dvsF+ro+spgQcPxmx85beewaywlIcgnzwiycinGw+9JA94vwL6WF2HBoTItXL1UaBRliDC5JXYJafFyLkA49HgzN+uBa+mabfRct62Znb7T10xNH2htzXJdo9G3Sw3asNij2E3IFItYQmU38/M1QRh7FJEQZcoyyeEcUfkLxB5gQPLJiB+OhFB0m3AV12M7Agv8CmYvbA7sBcqiNE51bMnSVcKuyXXWnjKU7Up3fUe6RwjiFCOh72LAKZ9wyngtFmCZs0ivLUGNoJzfAJkQYc8wG5ZKcZxGSDBV4yTMI1RL52lRGZVu/g0FQFpYMYVpkjEQ6cX5O5re/reyEtwnxMKBipQ6iHcTHbiKjDKf43nb23mX8O08xOKY8bKyDMMNk91PH9MixqQalSoxSPWSe7XlhxAHANQv+Kn7panihUu8Fb28XvmNwfWkVfZ3AWqLWr5c5kVHHaGVGYdXuWTqaoBgzgXv9TZ5QUStINRv3TcV673IlX2XX87mJGCAoZjPn1Qsv/HYCBAVjw2fH5z1d18yOyF53Rhas0O2bsTfJILxl88W6EHhx81D/rdKsvCjXQewtuLwPPkLg2EyEytxs7wemQ2YcFjMpTDJtsEPARwKvmusilxxYXyaJjlDx79IQuOaMoAwyQnze3Jh2Nbdgid7TZH34fQJptD298t6TY9e1uPLi4ArYAzkyhf/t7OCi3GBSBZvgoJLU17ztycPTmZbOv9OcE/qtR6fMkc3na7Wt3ek3ulYVQF3Mml9Mn+2bNV0/zy0/gU=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950D2017147C0E6E0401F0A059927B5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950D2017147C0E6E0401F0A059927B5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>94425ff6-2b60-4326-ada1-54c3cdb51a67</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00044_PERM_UVTC_UserName_Valid_Role_Retailer_CS_with_TokenType_UnlockMe_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234CFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95107729767F33DE0401F0A059930AB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E4091019235FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95107729767F33DE0401F0A059930AB</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082937</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95107729768F33DE0401F0A059930AB</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7b34014e-1415-401b-9c08-d1f030772088</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZZb+o4FH7vr4jSRxSyESBRQaIsc3NLaQt0mXmpjHMAt4mTxg6l/fVjhyYFSjvckZCQT87yncXf8RlDUWh5HcYg5SSmit9rqY+BU3fBaDS1ZgPmWg2wqc1cXNPqgMRvjsEyXVXxGcvAp4wjyluqZZg1zXA0szY1DM9yPdutWrXmP6pyBykTroVK1VCVdRRS5uVhW2qWUi9GjDCPogiYx7E36VwOPaHpoQKT2j7boMwDpu0l54mn67gaAIYwxFUcR/qZvqNzFjBvQhYU8SyFj5gBa6kftq+vr9VXuxqnC90yDEM3XF3oBIwsTtX2SWEMgU/n8ebcRTSmBKOQvCMJ6hL4Mg6UTriIU8KX0TeuTd00pGsN1ljDZo2eqvpngBzdkZ52QKYMaWyJzMLZGOaQAsWg3I79lnp6XAc3ttMUUTaP04jtnf8MEtAVhHECgcaKzAp0x3s8UK72GWDPpzjMGFnBSI5JgjAw5TqFOVkPCRPDFzAlb7+yZuJHiikD/CdtOdO3sQro+oHq9MgCGP8/Pdvu18bLHQozaD8EOF0sb9iawu2SdrKbaHbe6KXOc99v5RC2lTegynZ/nPeHtZytD6P+kHeildkcDJvMcOgVgG1eXPYv4ofKLXpAI+N6dNH967pCKpOAJs9j6wm9d6bYHq3v0eL3r79vneTubl5/GJL54MQx+9dP4hBkUf85dMbPw8V7ZcH7DWt1byfT0cIfwtPrS6U5Ol9OhC0fuL/vxt2r82lt4Di/Hvrdt2Q269Wve/Xs5Bei4+dRfXT/EiJWqVwY/k3rM6ftHHaFBSVMstkTYF4c5Xj4PWUg+oX4z/QiJSTQ5rmql0iOYhwoV9vSSlKLlwkCIoEnmrk5D1zHNBoNy23UGwPb7vWNmmEOjI7huK5tdM4LDtqg2IPYjemcyFiSZTfz8zNAHHkMaACptoozvASm/uCxhzhSfDoWlyOmDKaxYPGoGdeQhVfm+8o2ed1CZFajdRu/qcoo5lf0Ku3MOaS71G3vUPcYMEkISH6XA87EhDMuavGCVhkPzeoKVSlkYgOkkoQ9YeTojERJCBKpHsVBFkI1WSZ5ZXS2+bc0hFkuHfen+cX7Nq/9b0UJhE5ApAKTuZyDaCMc2EFWkcj3Cde3Ey7cd7KAyPsl6slTgjdIdj99jomcj3JGREaP3cmjWeAu1Y82/2qp/wBK369HGShYka2wxTIV+0GwR7vo5guqvlSz1SrL+9eQzJgK97ogSFOfAM4Evb1N42egeulCP2q7lKj3IpfyXXwZX9IJRxwiMW1KfjziaTEBJp8Wvrgm62PfLTshRd04rPkhWVcwEpOIf3ykYA9LPSG+Fn+vcRp8tuuAr604Ik/xnuCELuRJ7pG3b4YCx8ItEcQXp9vODzk4FHxXWBa5xMLFNM0yDt9/USSjtVSEcZxR7vfUXLDNsjlO/paA96n0xU3O5B+rec2+Xc0Pl8OJ4LsIqaUu+W9ljeTjgkGVL4AcS0tdi5emCE4XW6z+AXCP2A3L6ttWv9OxHdMpib3huoZtd8sC7mTS/iL+Ktmq6f59aP8L</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95022E32EAA3515E0401F0A0799033C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95022E32EAA3515E0401F0A0799033C</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>930885f3-a4db-4c89-a0c5-4b5518f49e63</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00045_PERM_UVTC_UserName_Valid_Role_Dynamic_LASP_CS_with_TokenType_UnlockMe_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDLASP"));

tS.setPropertyValue("audience","");</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DLASP_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDLASPCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full DLASP_CS">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082941</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950D2017163C0E6E0401F0A059927B5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_92cdcfd9-6c1a-42da-b579-637b10af7cc1</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_92cdcfd9-6c1a-42da-b579-637b10af7cc1</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZrT+pMEP7ur2jqR1N6AUQaIQERxeCNgihfTtbtlK6229LdFvTXn91iERB5OW9CQmY6O/PMZZ/Zc4bCwLJbjEHCSUSVXqeh/qlb2MWeW9dOsYm0iuUi7bVaE2K59moayKthbKpKj7EUepRxRHlDtQyzohlVzawMDcO26nalWjo1axNVeYKECdfCpGSoyiIMKLPzsA01TagdIUaYTVEIzObYdlq3fVtY2qjApDbPlyjzgEnT5zy2dR2XXMAQBLiEo1A/1zdszl1mO2RKEU8T+Irpsob6dXY+n5fm5VKUTHXLMAzdqOvCxmVkeqw2j4rD4PaoFy3lC0QjSjAKyCeSoG6B+5GrtIJplBDuh7+4NnXTkK41WGANmxV6rOrfAXJ0B3raAJkwpDEfmYWzAXiQAMWgjAa9hnp8WAeXZ4cJosyLkpBtyf8GCWgGQRSDq7EiswLd4R53lKt5DtjuURykjGRwJ8ckRhiY8pCARxZ9wsTwuUzJ268smPiRYsoA/0tbzvV1rAK6vqM6HTIFxv9Pz9b7tfTyhIIUmlfEy4YwIcbjW9hywpeT95u7mnn24nyOGjmEdeMlqFW7v+TtYV3N1teht6e03Tbdp/54ZLUTHvLF48dN95rMytRw69Dmo08R4fWZcgt5MHTmL+4dlB/1mbcY1z7TxGldXfTTUVae+t2jywr3e+HTzB9ckbvyHfEBVzvJ7CO7D2ropMbv43Fy5kzi20G3PM2m4f2ie1V/95kVX59OOvPZ+3Vw2/XGvVH3ZHw08vC1E4+fb4e1q2wwmdwYRuM7p/UcNpUFJTjp6xtgXohyPHodpSv6hfh+epEa4mpebmrHkqMYB8rVpjwlqcVOBQER1xbNXMqXFaNuGmbdKp9a3Vb78tKoGGbXaBnVet0QQsFBSxRbEC8i6hEZS7Lscn72A8ShzYC6kGhZlGIfmLrHYwdxpPToQFyOiDIYRoLF41e/+oboW/px9mnWGbjl+byGZp81VbmL+D29T1oeh2STussb1D0ATGICkt/lgDMx4YyLWsxQlvLALGWoRCEVGyCRJGxblbOqzkgYByCR6mHkpgGUYj/OK6Oz5b+lIcxybaffch7+XDh/zPz+/Zre9reiEsLGJdKAyZTaILoJO1ZRucjn97xP1/Mu3LdSl8hrJsrKE4KXSDY/fU+LHJPVqAwuh3laBe6V+WHHv+vy04G+B5u+XZZVPDcja9GL1Sq2heCSZtHbGSrNSmmWpXk3a5InE+FeF3Rp6g7gVJDdxzB6B6qvXOgH7ZoV6q3IK/0mvpT71OGIQyhmT8nFAx4aDjD50OiJS7M49BWzEVLUjcOC79JdBOI9IhHvfbJgG0s7oX4Qf/Mocb/btcPXWhyRp3hdcEKnUpJb5eOX2cCRcEsEDUbJuvNdDnYF31SuirzCwsU0vaYcfv+iSH5rqAjjKKW811FzxTrn5jj5Rwz2t9EPNzmvfy3qBft1UT/f9h3BfiFSV7bkv401ko8LBlW+B3IsDXUh3p0iOJ2ucfwXwN00X+nuo/nNTJo/1D81azXdvg/Nvw==</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZrT+pMEP7ur2jqR1N6AUQaIQERxeCNgihfTtbtlK6229LdFvTXn91iERB5OW9CQmY6O/PMZZ/Zc4bCwLJbjEHCSUSVXqeh/qlb2MWeW9dOsYm0iuUi7bVaE2K59moayKthbKpKj7EUepRxRHlDtQyzohlVzawMDcO26nalWjo1axNVeYKECdfCpGSoyiIMKLPzsA01TagdIUaYTVEIzObYdlq3fVtY2qjApDbPlyjzgEnT5zy2dR2XXMAQBLiEo1A/1zdszl1mO2RKEU8T+Irpsob6dXY+n5fm5VKUTHXLMAzdqOvCxmVkeqw2j4rD4PaoFy3lC0QjSjAKyCeSoG6B+5GrtIJplBDuh7+4NnXTkK41WGANmxV6rOrfAXJ0B3raAJkwpDEfmYWzAXiQAMWgjAa9hnp8WAeXZ4cJosyLkpBtyf8GCWgGQRSDq7EiswLd4R53lKt5DtjuURykjGRwJ8ckRhiY8pCARxZ9wsTwuUzJ268smPiRYsoA/0tbzvV1rAK6vqM6HTIFxv9Pz9b7tfTyhIIUmlfEy4YwIcbjW9hywpeT95u7mnn24nyOGjmEdeMlqFW7v+TtYV3N1teht6e03Tbdp/54ZLUTHvLF48dN95rMytRw69Dmo08R4fWZcgt5MHTmL+4dlB/1mbcY1z7TxGldXfTTUVae+t2jywr3e+HTzB9ckbvyHfEBVzvJ7CO7D2ropMbv43Fy5kzi20G3PM2m4f2ie1V/95kVX59OOvPZ+3Vw2/XGvVH3ZHw08vC1E4+fb4e1q2wwmdwYRuM7p/UcNpUFJTjp6xtgXohyPHodpSv6hfh+epEa4mpebmrHkqMYB8rVpjwlqcVOBQER1xbNXMqXFaNuGmbdKp9a3Vb78tKoGGbXaBnVet0QQsFBSxRbEC8i6hEZS7Lscn72A8ShzYC6kGhZlGIfmLrHYwdxpPToQFyOiDIYRoLF41e/+oboW/px9mnWGbjl+byGZp81VbmL+D29T1oeh2STussb1D0ATGICkt/lgDMx4YyLWsxQlvLALGWoRCEVGyCRJGxblbOqzkgYByCR6mHkpgGUYj/OK6Oz5b+lIcxybaffch7+XDh/zPz+/Zre9reiEsLGJdKAyZTaILoJO1ZRucjn97xP1/Mu3LdSl8hrJsrKE4KXSDY/fU+LHJPVqAwuh3laBe6V+WHHv+vy04G+B5u+XZZVPDcja9GL1Sq2heCSZtHbGSrNSmmWpXk3a5InE+FeF3Rp6g7gVJDdxzB6B6qvXOgH7ZoV6q3IK/0mvpT71OGIQyhmT8nFAx4aDjD50OiJS7M49BWzEVLUjcOC79JdBOI9IhHvfbJgG0s7oX4Qf/Mocb/btcPXWhyRp3hdcEKnUpJb5eOX2cCRcEsEDUbJuvNdDnYF31SuirzCwsU0vaYcfv+iSH5rqAjjKKW811FzxTrn5jj5Rwz2t9EPNzmvfy3qBft1UT/f9h3BfiFSV7bkv401ko8LBlW+B3IsDXUh3p0iOJ2ucfwXwN00X+nuo/nNTJo/1D81azXdvg/Nvw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F9502239695E2296E0401F0A05990987</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b54ca523-aea1-45b1-9f0f-eec821a32f9c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>31d2392e-5053-43d4-b375-6fa36d10c41a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00046_PERM_UVTC_UserName_Valid_Role_Linked_LASP_CS_with_TokenType_UnlockMe_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdLLASP"));

tS.setPropertyValue("audience","");</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node LLASP_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdLLASPCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full LLASP_CS">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082951</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950D2056FF9048FE0401F0A059927C1</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_1a9e9667-873e-46ae-b0e8-7ee6be59cd2c</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_1a9e9667-873e-46ae-b0e8-7ee6be59cd2c</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I8EH3fXxFlH6uQCymFqCClXHbTQtsF2m37sjLOAIbEgdgJob9+7dBQoLQf+0lIyJPxmTMXH/uSoTCwHJcxiDmJqOK16uofE9WgVqlcaNWLMmh2BYE2MqCqXQBURnBew76FVcVjLAGPMo4or6uWYdqaca6Z9tAwHKvmnNulmnnxoiqPEDMBLVxKhqpkYUCZk4etq0lMnQgxwhyKQmAOx87A7XUd4emggpPauNywzAPGjSnnC0fXcckHDEGASzgK9Ut9z+fSZ86ATCjiSQxvMX1WV9/2rlar0qpciuKJbhmGoRs1Xfj4jEy+q41vxWbwPTqONusmohElGAXkFUlSPeDTyFfcYBLFhE/DT6BN3TQktAYZ1rBp0++q/h4gZ3ci0h7JmCGNTZFZgPVhDDFQDMpD36ur30/r4GbvMEaUjaM4ZAfrf6MENIUgWoCvsSKzgt3piEfK1bgE7HgUBwkjKdzKMVkgDEy5j2FMsi5hYvh8puTtVzImfqSYMsD/0pZLfZeroK4fqU6LTIDx/9Oz3X5tUB5RkECj8piNs8ly3v2ZWjd344uYtnvTGz/Vz+x6TmHXeUNq2+639eGwbmfrbdNTc9D7+XQVzW9fBqv19R3MFn75ZdxMhr+gW0leW89WqzVPq677w3XP7ka/jNXv9fWoNaxW7dfe9Mp+WHZa63sjxT/It17rd9Sd0/v2y+/zB4+uxnezm2F0vbwZrh/ch1l8O3yK+/OO/+s2C/RZFp3N0Oj19axtdkz67K10f7Bulp+W1vOTkX2rnIVm/yrUm8+P9v2tvX648urvOe3msG8sJGGQjGaAebGU4+G1lI7oF+Jfy4u0EF8b567OQmoU40C52pC7pLQ4iRAg4juimZt12zZqpmHWrHLF6rhX7bZhG2bHcI3zWs0Qi0KDNiwOKDYjOiYyllTZzfx8TRCHDgPqQ6ylUYKnwNQvEFuII8WjfXE4IspgGAkVn/vVWcjQomLXqBWvq3ZqlAMmcJTbiN/Ru9gdc4j3lbu8p9x9wGRBQMq7nG8mBpxxUYolShMemKUUlSgk4gKIpQY7ll091xkJFwFIonoY+UkApcV0kRdGZ5t/S0OY5dZu1x3c/2kO/pj58fs0u8NvRSGEj0+kA5MpXYFoJhy5iewin8/zruzmXcC7iU/kKRNV5THBGyb7n96HRU7JdlL67WGeVsF7637a9ve6fATQv+CmH5ZlG89PyU704mYVl4WQkkbR2yUqLUtJmiZ5Ny+kTMYCXhdqaeoDwInQuvUwmgPVtxD6SVfNlvVB5K19n1/Cp3TAEYdQzJ6SL094ZwyAyXeGJ85MduojZi+kqBuHjB+zNQPxHJGMv3yxYAdLP2G+F3+rKPbf23UEayeOyFM8LjihE7mSl8r6k9nAkYAlQgWjeBf8GMCx4PvGbZG3XLiYplHC4fMvipS3uoowjhLKvZaaG3YlN+fJ1wtw3p0+wOSy/nZPZ+zTe/qp1x0I8QuRuvUl/+2skXxcMKjyOZBzqauZeHaK4HSyI/FvBI+rvN35SuX3M2l8MH+07NT08Dw0/gI=</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I8EH3fXxFlH6uQCymFqCClXHbTQtsF2m37sjLOAIbEgdgJob9+7dBQoLQf+0lIyJPxmTMXH/uSoTCwHJcxiDmJqOK16uofE9WgVqlcaNWLMmh2BYE2MqCqXQBURnBew76FVcVjLAGPMo4or6uWYdqaca6Z9tAwHKvmnNulmnnxoiqPEDMBLVxKhqpkYUCZk4etq0lMnQgxwhyKQmAOx87A7XUd4emggpPauNywzAPGjSnnC0fXcckHDEGASzgK9Ut9z+fSZ86ATCjiSQxvMX1WV9/2rlar0qpciuKJbhmGoRs1Xfj4jEy+q41vxWbwPTqONusmohElGAXkFUlSPeDTyFfcYBLFhE/DT6BN3TQktAYZ1rBp0++q/h4gZ3ci0h7JmCGNTZFZgPVhDDFQDMpD36ur30/r4GbvMEaUjaM4ZAfrf6MENIUgWoCvsSKzgt3piEfK1bgE7HgUBwkjKdzKMVkgDEy5j2FMsi5hYvh8puTtVzImfqSYMsD/0pZLfZeroK4fqU6LTIDx/9Oz3X5tUB5RkECj8piNs8ly3v2ZWjd344uYtnvTGz/Vz+x6TmHXeUNq2+639eGwbmfrbdNTc9D7+XQVzW9fBqv19R3MFn75ZdxMhr+gW0leW89WqzVPq677w3XP7ka/jNXv9fWoNaxW7dfe9Mp+WHZa63sjxT/It17rd9Sd0/v2y+/zB4+uxnezm2F0vbwZrh/ch1l8O3yK+/OO/+s2C/RZFp3N0Oj19axtdkz67K10f7Bulp+W1vOTkX2rnIVm/yrUm8+P9v2tvX648urvOe3msG8sJGGQjGaAebGU4+G1lI7oF+Jfy4u0EF8b567OQmoU40C52pC7pLQ4iRAg4juimZt12zZqpmHWrHLF6rhX7bZhG2bHcI3zWs0Qi0KDNiwOKDYjOiYyllTZzfx8TRCHDgPqQ6ylUYKnwNQvEFuII8WjfXE4IspgGAkVn/vVWcjQomLXqBWvq3ZqlAMmcJTbiN/Ru9gdc4j3lbu8p9x9wGRBQMq7nG8mBpxxUYolShMemKUUlSgk4gKIpQY7ll091xkJFwFIonoY+UkApcV0kRdGZ5t/S0OY5dZu1x3c/2kO/pj58fs0u8NvRSGEj0+kA5MpXYFoJhy5iewin8/zruzmXcC7iU/kKRNV5THBGyb7n96HRU7JdlL67WGeVsF7637a9ve6fATQv+CmH5ZlG89PyU704mYVl4WQkkbR2yUqLUtJmiZ5Ny+kTMYCXhdqaeoDwInQuvUwmgPVtxD6SVfNlvVB5K19n1/Cp3TAEYdQzJ6SL094ZwyAyXeGJ85MduojZi+kqBuHjB+zNQPxHJGMv3yxYAdLP2G+F3+rKPbf23UEayeOyFM8LjihE7mSl8r6k9nAkYAlQgWjeBf8GMCx4PvGbZG3XLiYplHC4fMvipS3uoowjhLKvZaaG3YlN+fJ1wtw3p0+wOSy/nZPZ+zTe/qp1x0I8QuRuvUl/+2skXxcMKjyOZBzqauZeHaK4HSyI/FvBI+rvN35SuX3M2l8MH+07NT08Dw0/gI=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950212A414B5E6CE0401F0A0599099B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57925f3d-0445-48fc-849a-c3d2a5ba6773</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0b9bbf2d-1b36-4fc2-84c3-ff96750d36d4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00047_PERM_UVTC_UserName_InValid_Role_dsp_with_TokenType_UnlockMe(Negative)_403_FORBIDDEN_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DSP"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDSP"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full DSP">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","API_NOT_AUTH");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>DSP</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_082956</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F9502331689E634DE0401F0A079902E7</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_73a8ab1f-bb4b-434f-ab33-5dea238c35b1</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_73a8ab1f-bb4b-434f-ab33-5dea238c35b1</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3fXxGlj1shDoS2RAWJcunO6Z1boS+VcQZwG+w0dgLt1x87NBQo7WEfCQl5Mp5Zc/GaORN4Hha9uhAQS8qZ4Ter5tNJCZ/isTOxxmN3bLkld2LhcalklQPAxdIpKZXHjmn4QiTgMyExk1WziBzXQmXLcXsIeSXkIadQrJQfTWMAsVCmlUoBmcZyHjLhZW6rZhIzj2NBhcfwHIQnidetX195StPDOSazdrZCmTmMazMpI8+2SSEAAmFICoTP7TN7S+csEF6XThmWSQwfPgNRNT/uLhaLwqJU4PHULiKEbFSxlU4g6PTIrP3KL0PgswlfnRuYcUYJDuk71qCuQc54YNTDKY+pnM2/Me3YDtKmLVgSizguOzLtTwcZugMtbYGMBbbEDDu5sQ5MIAZGwOh3/Kp5dFgFV3d7MWZiwuO52Dn/HSRgKYQ8gsASeWQ5usMt7klX7QyI5zMSJoKmcKPbJMIEhHEXw4Qur6hQzRcIIyu/sRTqR/MuA/I3ZTmzN7Eq6Pae7DTpFIT8PzXbrNfKygCHCdR47NruP9dRp5LOXtLXAYlHo7eH85vJaFTNIGwqr0Cty/1x3m3WdW99XCL9qz/243DwuxU8ttDsfRzfv7USfHWMBs1+Gw0uLo6DeXBzdRnilyF6jsujFwf7wwZUSsP3P50g7Z3/fkgvTxukQX7J+/D+Vlxe9kM/SV4b50P/ceG+8HARRMHt+4V9f4IeXHpf9x/q1wyiaDm6WMpJPxo2+m5v6bf7f7qX4xtSHjVt+av8fHI/mN4NFyj9XWljP5qJ6mdMmzFsC3NK6CbjZyAyP+r28JtGW9ULy5/pRUtoYE0yVS/SHCUkMGnW9C1NLV6iCIgGnirm6txyUcVBTqVYOi626+etFnKR00Z1VK5UkDrkHLRCsQOxwdmEal+aZVf98zNAMvcEsABiK+UJmYEwf7DYxBIbPuuox8GZgB5XLF50pi/cTSvlSjJdusc8YrQMaaSY+4bLW3Yb1ycS4m3mLm0xdwcIjShoetf9LVSDC6lS8YrTRIZOIcUFBokaALHmYK/onpZtQedRCBqoPedBEkIhmkVZYmyx+i9amIhM2uzeZe/u27B2v+UZUDoB1QpCx3IOqoqwO4KKFa+cB/J9wMebAefm60lA9fNS6ZQxJSsk258+u0S3x7pFOq3eU6P75OS41+qHXVcJ+XrT/gGUvZuPtaMgpRtu81mqxoMij1pezVdceC0kaZpk9TvRxBgr87biR8fuAkkUu731+Aswe23CPmi4rFHveF7Lt/Elcsa6EkuYq24zsuMBm0UXhN4sfPVKloeuLVsuVd4kLOU+WSNUC4hG/OOOQjyi9ZT4Tv0teBx8lmuPrQ0/Kk61TkjKpvqkx8jbN01BuDJLFe/xeNP4PgP7nG8L10leY5Gqm8aJhO+/GJrQqiYmhCdM+k0zE2ySbIZTvkXgfSp9MZMR+cdkXopvJ/Pw+qqr6G6OzbUu/W9li2btQsDUC0CGpWou1aKpnLPpBql/ANzP6277J17fjqT2RfxVspHT3fdQ+xc=</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3fXxGlj1shDoS2RAWJcunO6Z1boS+VcQZwG+w0dgLt1x87NBQo7WEfCQl5Mp5Zc/GaORN4Hha9uhAQS8qZ4Ter5tNJCZ/isTOxxmN3bLkld2LhcalklQPAxdIpKZXHjmn4QiTgMyExk1WziBzXQmXLcXsIeSXkIadQrJQfTWMAsVCmlUoBmcZyHjLhZW6rZhIzj2NBhcfwHIQnidetX195StPDOSazdrZCmTmMazMpI8+2SSEAAmFICoTP7TN7S+csEF6XThmWSQwfPgNRNT/uLhaLwqJU4PHULiKEbFSxlU4g6PTIrP3KL0PgswlfnRuYcUYJDuk71qCuQc54YNTDKY+pnM2/Me3YDtKmLVgSizguOzLtTwcZugMtbYGMBbbEDDu5sQ5MIAZGwOh3/Kp5dFgFV3d7MWZiwuO52Dn/HSRgKYQ8gsASeWQ5usMt7klX7QyI5zMSJoKmcKPbJMIEhHEXw4Qur6hQzRcIIyu/sRTqR/MuA/I3ZTmzN7Eq6Pae7DTpFIT8PzXbrNfKygCHCdR47NruP9dRp5LOXtLXAYlHo7eH85vJaFTNIGwqr0Cty/1x3m3WdW99XCL9qz/243DwuxU8ttDsfRzfv7USfHWMBs1+Gw0uLo6DeXBzdRnilyF6jsujFwf7wwZUSsP3P50g7Z3/fkgvTxukQX7J+/D+Vlxe9kM/SV4b50P/ceG+8HARRMHt+4V9f4IeXHpf9x/q1wyiaDm6WMpJPxo2+m5v6bf7f7qX4xtSHjVt+av8fHI/mN4NFyj9XWljP5qJ6mdMmzFsC3NK6CbjZyAyP+r28JtGW9ULy5/pRUtoYE0yVS/SHCUkMGnW9C1NLV6iCIgGnirm6txyUcVBTqVYOi626+etFnKR00Z1VK5UkDrkHLRCsQOxwdmEal+aZVf98zNAMvcEsABiK+UJmYEwf7DYxBIbPuuox8GZgB5XLF50pi/cTSvlSjJdusc8YrQMaaSY+4bLW3Yb1ycS4m3mLm0xdwcIjShoetf9LVSDC6lS8YrTRIZOIcUFBokaALHmYK/onpZtQedRCBqoPedBEkIhmkVZYmyx+i9amIhM2uzeZe/u27B2v+UZUDoB1QpCx3IOqoqwO4KKFa+cB/J9wMebAefm60lA9fNS6ZQxJSsk258+u0S3x7pFOq3eU6P75OS41+qHXVcJ+XrT/gGUvZuPtaMgpRtu81mqxoMij1pezVdceC0kaZpk9TvRxBgr87biR8fuAkkUu731+Aswe23CPmi4rFHveF7Lt/Elcsa6EkuYq24zsuMBm0UXhN4sfPVKloeuLVsuVd4kLOU+WSNUC4hG/OOOQjyi9ZT4Tv0teBx8lmuPrQ0/Kk61TkjKpvqkx8jbN01BuDJLFe/xeNP4PgP7nG8L10leY5Gqm8aJhO+/GJrQqiYmhCdM+k0zE2ySbIZTvkXgfSp9MZMR+cdkXopvJ/Pw+qqr6G6OzbUu/W9li2btQsDUC0CGpWou1aKpnLPpBql/ANzP6277J17fjqT2RfxVspHT3fdQ+xc=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95023DFE813EE22E0401F0A0799041A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>930885f3-a4db-4c89-a0c5-4b5518f49e63</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c8221854-35d6-498d-a02d-421784be1022</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a8d70240-77fd-4efe-ba84-308dc9d6ea40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00048_PERM_UVTC_UserName_InValid_Role_device_with_TokenType_UnlockMe(Negative)_403_FORBIDDEN_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Device"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDEV"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full Device">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","API_NOT_AUTH");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>DEV</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_08302</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951077298A4F33DE0401F0A059930AB</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_993f22c5-420e-4ebd-a4e0-a322c2ab8f25</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_993f22c5-420e-4ebd-a4e0-a322c2ab8f25</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZZb+o6EH7vr4jSx6OQhdA2UUGiQHvSU7oAly4vlXEGMCR2Gjss/fXXDg0FSns5V0JCnoxnvln8zZxzFEeOX+ccUkEY1YJmVX/1vPLQcXDFcB0LDBcGoYFcsAxUllIHDc6GTkXXAs4zCCgXiIqq7li2a1gVw3Z7luWXLd86LTnu2Yuu9SHl0rRUKVm6togjyv3cbVXPUuozxAn3KYqB+wL73Xr7xpeaPiow6bXzFcrcYVobC5H4polLIWCIIlzCLDbPzS2d85D7XTKiSGQpfPgMeVX/uDufz0vzcomlI9OxLMu0PFPqhJyMjvXaUXEZwoAO2ercQJRRglFE3pEC1QYxZqFWj0YsJWIcf2PaNm1LmTZggQ1su/RYNz8d5OgOtLQFMuXI4GNkF8Y6MIQUKAbtn05Q1Y8Pq+Dqbi9FlA9ZGvOd899BAjqDiCUQGryIrEB3uMU96aqdA/YDiqOMkxncqjZJEAau3acwJIsbwmXzhVzLy68tuPyRossA/01Zzs1NrBK6uSc7TTICLv5PzTbrtbLSR1EGNfdqUmk/1C8HzCPQmy6hE4+W1EOD+rSaQ9hUXoFal/vjvNus6976uHSfXD8+nVz9CYfhaNZo/SJd+9fD+2/75eql3l3+fvi9pDZu3z6V+9dpOLLfH06ep9fl5iO9zOzp89lj0ru4veqNzF7/pHHUhDhw7Vb4vvizbNzZ3J4EneFU3BPebt8/VDyredP1JmZs9/qsza7fPfTUwjNvwPD9so0COmtNWmMGdHyHpkf4rJ5Mms/lUTi/s3puq1+ZVz9j2oxhW1hQQjcbTACL4qjaI2hql7JeSPxML0pCQmOYq/qJ4igugAq9pm4pavEzSUAk9GUxV+eWa3m2ZXtO+cS5rF+0WpZr2ZdW3ap4niUPBQetUOxAbDA6JMqXYtlV//wMEMc+BxpCasxYhsfA9R8sNpFAWkA78nEwyqHHJIuzWSRSQjKEkoEdEmd5msaYsuFE126ZuKN3aX0oIN2m7vIWdXcAk4SA4nfV4Fx2OBcyF29olonILs1QiUImJ0CqSNiXlyomJ3ESgUJqxizMIigl4yTPjMlX/46BMM+lzVY/f3jfxrX7rUiB1AmJUuAqlguQZYTdGeR4fqUI5PuATzYDLszXs5Co9yXzKVOIV0i2P322ieqPdY90Wr3XRvfVLnCv1Q+7LhPy9ab5AyhzNx9rR+GMbLgthqmcD5I9akU131DprZTNZllev1PFjKk0b0qCtM0u4EzS27LHpkDNtQnzoOmyRr3jeS3fxpeJMe0KJCCW3ablxwNWiy5wtVoE8pksDt1btlzKvAlYiH2yRiQ3EIX4xyUF+1jpSfG9/JuzNPws1x5bG35knHKfEISO1EnNkeU3TYGZNEsk8bF00/g+A/ucbwvXSV5jEbKbBpmA779oitGqOsKYZVQETT0XbLJsjlMsE/A/lb6YyZn8YzQv+Lej+al905V8FyN9rUv+W9kgebtg0NUGkGOp6gu5aUrndLTB6h8A9xO7e/kTsW9HUvsi/irZyOnue6j9Cw==</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZZb+o6EH7vr4jSx6OQhdA2UUGiQHvSU7oAly4vlXEGMCR2Gjss/fXXDg0FSns5V0JCnoxnvln8zZxzFEeOX+ccUkEY1YJmVX/1vPLQcXDFcB0LDBcGoYFcsAxUllIHDc6GTkXXAs4zCCgXiIqq7li2a1gVw3Z7luWXLd86LTnu2Yuu9SHl0rRUKVm6togjyv3cbVXPUuozxAn3KYqB+wL73Xr7xpeaPiow6bXzFcrcYVobC5H4polLIWCIIlzCLDbPzS2d85D7XTKiSGQpfPgMeVX/uDufz0vzcomlI9OxLMu0PFPqhJyMjvXaUXEZwoAO2ercQJRRglFE3pEC1QYxZqFWj0YsJWIcf2PaNm1LmTZggQ1su/RYNz8d5OgOtLQFMuXI4GNkF8Y6MIQUKAbtn05Q1Y8Pq+Dqbi9FlA9ZGvOd899BAjqDiCUQGryIrEB3uMU96aqdA/YDiqOMkxncqjZJEAau3acwJIsbwmXzhVzLy68tuPyRossA/01Zzs1NrBK6uSc7TTICLv5PzTbrtbLSR1EGNfdqUmk/1C8HzCPQmy6hE4+W1EOD+rSaQ9hUXoFal/vjvNus6976uHSfXD8+nVz9CYfhaNZo/SJd+9fD+2/75eql3l3+fvi9pDZu3z6V+9dpOLLfH06ep9fl5iO9zOzp89lj0ru4veqNzF7/pHHUhDhw7Vb4vvizbNzZ3J4EneFU3BPebt8/VDyredP1JmZs9/qsza7fPfTUwjNvwPD9so0COmtNWmMGdHyHpkf4rJ5Mms/lUTi/s3puq1+ZVz9j2oxhW1hQQjcbTACL4qjaI2hql7JeSPxML0pCQmOYq/qJ4igugAq9pm4pavEzSUAk9GUxV+eWa3m2ZXtO+cS5rF+0WpZr2ZdW3ap4niUPBQetUOxAbDA6JMqXYtlV//wMEMc+BxpCasxYhsfA9R8sNpFAWkA78nEwyqHHJIuzWSRSQjKEkoEdEmd5msaYsuFE126ZuKN3aX0oIN2m7vIWdXcAk4SA4nfV4Fx2OBcyF29olonILs1QiUImJ0CqSNiXlyomJ3ESgUJqxizMIigl4yTPjMlX/46BMM+lzVY/f3jfxrX7rUiB1AmJUuAqlguQZYTdGeR4fqUI5PuATzYDLszXs5Co9yXzKVOIV0i2P322ieqPdY90Wr3XRvfVLnCv1Q+7LhPy9ab5AyhzNx9rR+GMbLgthqmcD5I9akU131DprZTNZllev1PFjKk0b0qCtM0u4EzS27LHpkDNtQnzoOmyRr3jeS3fxpeJMe0KJCCW3ablxwNWiy5wtVoE8pksDt1btlzKvAlYiH2yRiQ3EIX4xyUF+1jpSfG9/JuzNPws1x5bG35knHKfEISO1EnNkeU3TYGZNEsk8bF00/g+A/ucbwvXSV5jEbKbBpmA779oitGqOsKYZVQETT0XbLJsjlMsE/A/lb6YyZn8YzQv+Lej+al905V8FyN9rUv+W9kgebtg0NUGkGOp6gu5aUrndLTB6h8A9xO7e/kTsW9HUvsi/irZyOnue6j9Cw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F951091E4FF07B21E0401F0A05993966</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>930885f3-a4db-4c89-a0c5-4b5518f49e63</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c8221854-35d6-498d-a02d-421784be1022</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a8d70240-77fd-4efe-ba84-308dc9d6ea40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9ec8f0b3-2385-4152-81c7-4023a56b3086</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8ba6964e-9dc9-4780-a208-7f1c1b1825c7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00049_PERM_UVTC_UserName_InValid_Role_dsp:customersupport_with_TokenType_UnlockMe(Negative)_403_FORBIDDEN_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account and First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DSP_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDSPCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full DSP_CS">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","API_NOT_AUTH");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>DSP_CS_1</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20130816_085346</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>firstuser20130816_085348</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130816_085413</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083019</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950212A416E5E6CE0401F0A0599099B</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E40910192350FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_1003c7d1-1fa6-4329-83ab-41d25d98d5f9</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_1003c7d1-1fa6-4329-83ab-41d25d98d5f9</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZrU+o8EP7ur+jUj05pCgWhI8wg6LHeuMrx+MWJaQqRNilNWqq//iTFIiD6ct4ZZphsN7vPXvLsnnEYBmWnzTmOBWFUc7tN/dkCoIJOPcuwfFgz7Eq5YdQr8MWwLa9c9Rp1r+o3dM3lPMEu5QJS0dTLwLINUDUsewyAUwFOuVIqg9MnXZvgmEvTUqUEdC0LA8qd3G1TT2LqMMgJdygMMXcEckbtu1tHajqwwKS3zlYoc4dxayZE5JgmKnkY4SBAJcRC88zc0jnzuDMiUwpFEuMPnx5v6h93l8tlaVkpsXhqlgEAJmiYUsfjZHqst46Ky9hzqc9W5w6kjBIEA/IOFag7LGbM09rBlMVEzMJvTFumBZRpA2fIQJZNj3Xz00GO7kBLWyBjDg0+g1ZhbIh9HGOKsPYwdJv68WEVXN0dx5Byn8Uh3zn/GyRMUxywCHsGLyIr0B1ucU+6WmcYOS5FQcJJiu9Vm0QQYa71Y+yT7JZw2Xwe1/LyaxmXP1J0GUb/UpYzcxOrhG7uyU6XTDEX/6dmm/VaWZnAIMEt9/zyz8Vk0vvdS58WuDdpT62g221TX6BmDmFTeQVqXe6P826zrnvr49JiGN5nw7Fffb0yx6fDlE7un14eT1Dv91PD7YiBfzOp95jVGXXfYJ0LcHft8ood4pdFMhn7WTQfTDLWWU6uBr8GR/2T6/ljeBFlYlqOJva8UZun4f3VfOGS6iKoov7VKXsZ33SvHt3ltc0AEtdX9caf29HMqqGb+YM9YnfZoAPaWQiP3muvVhq+Pjxc/rJP3vq2mA+anzFtxrAtLChhlLy8YiSKo2oPt6tdynpB8TO9KAnxDD9XdSLFUVxgKvSWuqWoxUkkARHPkcVcnS9s0LCA1ShXauXL9vnFBbCBdQnaoNpoAHkoOGiFYgdih1GfKF+KZVf98zNAFDocUw/HRsoSNMNc/8FiFwqouXQoHwejHI+ZYvE0SGvvC6ter1jIgv5bBoLXYB5FQtfumejRXtz2BY63ubuyxd1DjEhEsCJ41eFctjgXMhkLmCYisEopLFGcyBEQKxZ2yna9anISRgFWUM2QeUmAS9EsylNj8tV/2YCI59LuqP/cGT1b+fP7Nrrdb0UipI5HlAJXAZ1jWUy8ZxJZRTTfR13bjLow3048ol6ZzKqICVoh2f702SyqS9adMrwY52EVuNfqh10vsvL1uvkDMnM3KWtvXko2fBdzVY4KSSStoq4LWFqUkjRN8kqeKpKMpXlTcqVljjBKJNO9jdkcU3Ntwjxo0KxR73hey7fxJWJGRwIKHMq+0/LjAVvGCHO1ZbjyxWSHrjBbLmXeBM7EPlknkMuIQvzjvoIcpPSkuC//liz2Psu1x9aGHxmnXC0EoVN1UiPl7ZvOQEyaJZIDWbxpfJ+Bfc63heskr7EI2U0vicDff9EUuTV1iBBLqHC7ei7YJNwcp3iLsPOp9MVMTuofUzrj307px7vbkaS+EOprXfLfygbJ2wVhXS0DOZamnsmlUzqn0w2C/wC4n+Pty584fjuS1hfxV8lGTnffQ+sv</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZrU+o8EP7ur+jUj05pCgWhI8wg6LHeuMrx+MWJaQqRNilNWqq//iTFIiD6ct4ZZphsN7vPXvLsnnEYBmWnzTmOBWFUc7tN/dkCoIJOPcuwfFgz7Eq5YdQr8MWwLa9c9Rp1r+o3dM3lPMEu5QJS0dTLwLINUDUsewyAUwFOuVIqg9MnXZvgmEvTUqUEdC0LA8qd3G1TT2LqMMgJdygMMXcEckbtu1tHajqwwKS3zlYoc4dxayZE5JgmKnkY4SBAJcRC88zc0jnzuDMiUwpFEuMPnx5v6h93l8tlaVkpsXhqlgEAJmiYUsfjZHqst46Ky9hzqc9W5w6kjBIEA/IOFag7LGbM09rBlMVEzMJvTFumBZRpA2fIQJZNj3Xz00GO7kBLWyBjDg0+g1ZhbIh9HGOKsPYwdJv68WEVXN0dx5Byn8Uh3zn/GyRMUxywCHsGLyIr0B1ucU+6WmcYOS5FQcJJiu9Vm0QQYa71Y+yT7JZw2Xwe1/LyaxmXP1J0GUb/UpYzcxOrhG7uyU6XTDEX/6dmm/VaWZnAIMEt9/zyz8Vk0vvdS58WuDdpT62g221TX6BmDmFTeQVqXe6P826zrnvr49JiGN5nw7Fffb0yx6fDlE7un14eT1Dv91PD7YiBfzOp95jVGXXfYJ0LcHft8ood4pdFMhn7WTQfTDLWWU6uBr8GR/2T6/ljeBFlYlqOJva8UZun4f3VfOGS6iKoov7VKXsZ33SvHt3ltc0AEtdX9caf29HMqqGb+YM9YnfZoAPaWQiP3muvVhq+Pjxc/rJP3vq2mA+anzFtxrAtLChhlLy8YiSKo2oPt6tdynpB8TO9KAnxDD9XdSLFUVxgKvSWuqWoxUkkARHPkcVcnS9s0LCA1ShXauXL9vnFBbCBdQnaoNpoAHkoOGiFYgdih1GfKF+KZVf98zNAFDocUw/HRsoSNMNc/8FiFwqouXQoHwejHI+ZYvE0SGvvC6ter1jIgv5bBoLXYB5FQtfumejRXtz2BY63ubuyxd1DjEhEsCJ41eFctjgXMhkLmCYisEopLFGcyBEQKxZ2yna9anISRgFWUM2QeUmAS9EsylNj8tV/2YCI59LuqP/cGT1b+fP7Nrrdb0UipI5HlAJXAZ1jWUy8ZxJZRTTfR13bjLow3048ol6ZzKqICVoh2f702SyqS9adMrwY52EVuNfqh10vsvL1uvkDMnM3KWtvXko2fBdzVY4KSSStoq4LWFqUkjRN8kqeKpKMpXlTcqVljjBKJNO9jdkcU3Ntwjxo0KxR73hey7fxJWJGRwIKHMq+0/LjAVvGCHO1ZbjyxWSHrjBbLmXeBM7EPlknkMuIQvzjvoIcpPSkuC//liz2Psu1x9aGHxmnXC0EoVN1UiPl7ZvOQEyaJZIDWbxpfJ+Bfc63heskr7EI2U0vicDff9EUuTV1iBBLqHC7ei7YJNwcp3iLsPOp9MVMTuofUzrj307px7vbkaS+EOprXfLfygbJ2wVhXS0DOZamnsmlUzqn0w2C/wC4n+Pty584fjuS1hfxV8lGTnffQ+sv</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95022C790645148E0401F0A079902DB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E4091019234FFABEE0401F0A05990E04</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E71C5110903464ACE0401F0A07992748:4402DFF6"</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E40910192362FABEE0401F0A05990E04</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:DECE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c2989f0f-dfaa-4bac-b303-a557246a5656</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd3046be-20a9-4f95-9ca2-dee2b55dd391</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5fe9e05-9d27-4adf-8ca0-aff31ed8f78a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>930885f3-a4db-4c89-a0c5-4b5518f49e63</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c8221854-35d6-498d-a02d-421784be1022</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a8d70240-77fd-4efe-ba84-308dc9d6ea40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>60d0c277-a9e2-413c-acfa-fba360ade9bd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bbaf77dd-7e4a-4afb-a071-c5af692dba21</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>role</con:name><con:value>nodeIdRTL</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:RET_CS_1</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="03.UserValidationTokenCreate_FUNC_P1"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00001_FUNC_UVTC_UserName_RequestorUserCLG_active_RequesteeChild_active_ResetPassword_200_OK_P1" searchProperties="true" id="aa7c83ff-7ab4-49f4-9257-6e824816255d"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU+JKEH73V6TioxUyieGWEqpYkJVdQeWiri/WOGlgMJmEzCSAv35ngkFA9LCniipqOj3dX1/m677gOPBtt8E5xIKGTOu0avqzbWHPQ/jFsAipGE4FOUbFqWKjVDovjgnx7LFT1bUO5wl0GBeYiZpuI8sxUNGwnCFC7jly7VLBqpafdO0eYi5NS5UC0rVl4DPuZm5rehIzN8SccpfhALgriDtodK9dqeniHJNev1ijzBzG9akQkWuapOABAd8nBRIG5oW5o3PhcXdAJwyLJIZ3nx6v6e93F4tFYXFeCOOJaSOETFQ1pY7H6eRUr5/kl8HrsHG4PjcxCxkl2KdvWIHqgpiGntbwJ2FMxTT4wrRlWkiZNmBJDGI57FQ3Pxxk6I60tAMy5tjgU2zlxvowhhgYAW3U79T00+MquL47jDHj4zAO+N753yABS8EPI/AMnkeWozve4oF01S+AuB1G/ITTFHqqTSJMgGu3MYzp8ppy2Xwe17Lya0sufzTvMiD/UpYLcxurhG4eyE6LToCL/1Oz7XqtrdxjP4H6TxONe5eVSgDiN4ycqo1WvyaiN30a8VoGYVt5DWpT7vfzfrNueuv90tB8ObubW8uHt4eu007Cxfj1ejSnbJr8Phu8JYvuay8uWiu0NMsUt4Lbp173poz9n7Nl+vSCmtCc9eE1glb663J+cns3P0seHLt7Z1okiPkwlBE8oSs8ZCWwXq7i1cBudJIrkv64dfyrqPH45/Wmf3+b/igN36q9qDNt/7kn0Yh7wejkLqX0sbyCVWt2g3k8u6Kj2kdM2zHsCnNKGCQvMyAiP6r26LS0tqwXFt/Ti5JQzxhnqm6kOIoLYEKvq1uKWtxEEhD1XFnM9bldLSLbLiHUQo51Xq5eIgdZbdRA5WoV2a1yzkFrFHsQmyEbU+VLsey6f74HSAKXA/MgNtIwIVPg+jcWW1hgrcP68nGEjMMwlCy+RJUZ45UVxgvHWqw8TKzibGJNirrWC8UNu4kbYwHxLnWf71B3HwiNKCh+Vw3OZYdzIXMxx2kifKuQ4gKDRE6AWJGwazuVoslpEPmgkJpB6CU+FKJplGXG5Ot/28CEZ9L+5TB7eF/Gtf8tT4HU8ahS4CqWHyDLCAdmkJUH8nXApe2Ac/ONxKPqfcl8ipiSNZLdTx9tovpj0yMyoufm4NnKcW/Uj77++ab5DShzPx8bR15Kt9zmw1TOB8ke9byac1yYF5I0TbL6lRUzxtK8KQnSMgdAEklvq2H4CszcmDCPmi4b1HueN/JdfImYsoHAAgLZbVp2PGK1GABXq0VHPpPlsXvLjkuZNwFLcUjW9OUGohB/u6QQlyg9Kb6Vf4sw9j7KdcDWlh8Zp9wnBGUTdVJzZPVFU5BQmqWS+MJ42/ghA4ec7wo3Sd5gEbKbXhIBX3/RFKPVdExImDDRaemZYJtlM5xiFYH7ofTJTMbk76N5yb8czY/d64HkuwDrG13638oGzdqFgK42gAxLTV/KTVM6Z5MtVn8HuE/sLRsVy+i8jZxKe0PsxWrVLjc/HvNOJPVP4s+SrZzuv4f6Xw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950D205703F048FE0401F0A059927C1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950D205703F048FE0401F0A059927C1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95022600D041379E0401F0A079902D7</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95022600D041379E0401F0A079902D7</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083024</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95022600D051379E0401F0A079902D7</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083028</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083028</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083028</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>F95022600D041379E0401F0A079902D7</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbU+JKEH73V6TioxUyieGWEqpYkJVdQeWiri/WOGlgMJmEzCSAv35ngkFA9LCniipqOj3dX1/m677gOPBtt8E5xIKGTOu0avqzbWHPQ/jFsAipGE4FOUbFqWKjVDovjgnx7LFT1bUO5wl0GBeYiZpuI8sxUNGwnCFC7jly7VLBqpafdO0eYi5NS5UC0rVl4DPuZm5rehIzN8SccpfhALgriDtodK9dqeniHJNev1ijzBzG9akQkWuapOABAd8nBRIG5oW5o3PhcXdAJwyLJIZ3nx6v6e93F4tFYXFeCOOJaSOETFQ1pY7H6eRUr5/kl8HrsHG4PjcxCxkl2KdvWIHqgpiGntbwJ2FMxTT4wrRlWkiZNmBJDGI57FQ3Pxxk6I60tAMy5tjgU2zlxvowhhgYAW3U79T00+MquL47jDHj4zAO+N753yABS8EPI/AMnkeWozve4oF01S+AuB1G/ITTFHqqTSJMgGu3MYzp8ppy2Xwe17Lya0sufzTvMiD/UpYLcxurhG4eyE6LToCL/1Oz7XqtrdxjP4H6TxONe5eVSgDiN4ycqo1WvyaiN30a8VoGYVt5DWpT7vfzfrNueuv90tB8ObubW8uHt4eu007Cxfj1ejSnbJr8Phu8JYvuay8uWiu0NMsUt4Lbp173poz9n7Nl+vSCmtCc9eE1glb663J+cns3P0seHLt7Z1okiPkwlBE8oSs8ZCWwXq7i1cBudJIrkv64dfyrqPH45/Wmf3+b/igN36q9qDNt/7kn0Yh7wejkLqX0sbyCVWt2g3k8u6Kj2kdM2zHsCnNKGCQvMyAiP6r26LS0tqwXFt/Ti5JQzxhnqm6kOIoLYEKvq1uKWtxEEhD1XFnM9bldLSLbLiHUQo51Xq5eIgdZbdRA5WoV2a1yzkFrFHsQmyEbU+VLsey6f74HSAKXA/MgNtIwIVPg+jcWW1hgrcP68nGEjMMwlCy+RJUZ45UVxgvHWqw8TKzibGJNirrWC8UNu4kbYwHxLnWf71B3HwiNKCh+Vw3OZYdzIXMxx2kifKuQ4gKDRE6AWJGwazuVoslpEPmgkJpB6CU+FKJplGXG5Ot/28CEZ9L+5TB7eF/Gtf8tT4HU8ahS4CqWHyDLCAdmkJUH8nXApe2Ac/ONxKPqfcl8ipiSNZLdTx9tovpj0yMyoufm4NnKcW/Uj77++ab5DShzPx8bR15Kt9zmw1TOB8ke9byac1yYF5I0TbL6lRUzxtK8KQnSMgdAEklvq2H4CszcmDCPmi4b1HueN/JdfImYsoHAAgLZbVp2PGK1GABXq0VHPpPlsXvLjkuZNwFLcUjW9OUGohB/u6QQlyg9Kb6Vf4sw9j7KdcDWlh8Zp9wnBGUTdVJzZPVFU5BQmqWS+MJ42/ghA4ec7wo3Sd5gEbKbXhIBX3/RFKPVdExImDDRaemZYJtlM5xiFYH7ofTJTMbk76N5yb8czY/d64HkuwDrG13638oGzdqFgK42gAxLTV/KTVM6Z5MtVn8HuE/sLRsVy+i8jZxKe0PsxWrVLjc/HvNOJPVP4s+SrZzuv4f6Xw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950D205703F048FE0401F0A059927C1</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj1XIhQAlKkgUyi7b0htsT8vLyjgT8DaxQ+wE0l9/7NBQoLSHPRIS8mQ8883F38w5R1HoeB3OIRGEUW3Qa+m/cb3h2k3kGpbvuIbr+lVjWp+CEWA/qNv47Kw5DXRtwHkKA8oFoqKlO5Yt9WuG7Y4ty6vKX61iVZ2Jrj1CwqVpqVKxdG0VhZR7hduWnibUY4gT7lEUAfcE9kad4bUnNT1UYtLb52uUhcOkPRci9kwTV3zAEIa4gllknps7Ouc+90ZkRpFIE3jz6fOW/nZ3uVxWltUKS2amY1mWaTVNqeNzMvumt0/Ky+APaMDW5y6ijBKMQvKKFKghiDnztU44YwkR8+gT07ZpW8q0AStsYNul33Tz3UGB7khLOyATjgw+R3Zp7AECSIBi0H49DFr6t+MquL47ThDlAUsivnf+O0hAMwhZDL7By8hKdMdbPJCu9jlgb0BxmHKSwY1qkxhh4NpdAgFZXRMum8/nWlF+bcXlj5RdBvhvynJubmOV0M0D2emRGXDxf2q2Xa+1lUcUptAeOvmfxWwWXJz2eH/+K314yq20PvrJfgxbBYRt5TWoTbnfzvvNuumtt0vXp/fX9/3o5820f3cfoXq3U+/U/2G1xiQir+S03lnl1cX4suewRtYZh4PHPL29W64uT+GM+cl9/eZyBpOo/iOPWe9k4l5BnjfoBQlqw1Fj0K+5p/fp8GbIc56cuXT8fTEdz67i1bhT700emYlvxeS5F/ypYZwNvl89LarP2eNjbb4K7k7g1yt6ubjqvD5lrynU7q8nz633mLZj2BWWlDBKp38Ai/Ko2mPQ0/qyXkh8TS9KQnwjKFS9WHEUF0CF3la3FLV4qSQg4nuymOtzv1mzHNvpXHYb1X7Tql1armX3rY7VaKpTv+SgNYo9iF1GA6J8KZZd98/XAHHkcaA+JEbGUjwHrn9hsYcE0gb0QT4ORjmMmWTxmPnpC46Thv0S2zOR5tkyFyLnC127YeKW3iadQECyS93VHep+AExiAorfVYNz2eFcyFwsUJaK0K5kqEIhlRMgUSTsOe5ZzeQkikNQSM1IIgihEs/jIjMmX/87BsK8kD5cjouH92lc+9/KFEgdnygFrmK5AFlGODCDnDKQzwOubwdcmu+kPlHvS+ZTJASvkex+em8T1R+bHpER/e6Oftsl7o360dc/3jS/AGXu52PjyM/IlttymMr5INmjXVZzgSqLSpplaVG/hmLGRJo3JUHa5ghwKuktH7MXoObGhHnUdNmg3vO8ke/iS8WcjgQSEMlu04rjEavFCLhaLQbymayO3Vt2XMq8CViJQ7JuKDcQhfjLJQV7WOlJ8Z38W7LEfy/XAVtbfmSccp8QhM7USc2R/JOmwEyaJZL4WLJt/JCBQ853hZskb7AI2U3TVMDnXzTFaC0dYcxSKgY9vRBss2yBU+QxeO9KH8wUTP42mlf809H8NLweSb6LkL7RJf+tbJCiXTDoagMosLT0ldw0pXM622L1N4D7xN5zrFrDqvYt96y/IfZas+k0uu+PeSeS9gfxR8lWTvffQ/tf</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950212AEC73F905E0401F0A079905EF</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950212AEC73F905E0401F0A079905EF</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083028</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950212AEC74F905E0401F0A079905EF</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00002_FUNC_UVTC_UserName_RequestorUserNonCLG_active_RequesteeChild_active_ResetPassword_(Negative)_403_FORBIDDEN_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for NonCLG"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - NonCLG"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","FORBIDDEN_COORD");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj6uQG7dEBYlCOZul9AJ0u9uXlbFNYjbYEDsQ+uuPHZoUKO1hj4SEPBnPfHPxN3PJwSJ2/A7nOBGEUS3otfTfCHuoAeHMaAAAjapVmxrNql03nHrNrs4a7hS6M10LOE9xQLkAVLR0x7KrhlUz7OrEsnxX/poVu+4+69oPnHBpWqpULF3LFjHlfu62pacJ9RnghPsULDD3BfTHneGNLzV9UGDS25c7lLnDpB0JsfRNE1YQhjiOYQWyhXlpHuhcIu6PSUiBSBP86hPxlv56d7PZVDZuhSWh6ViWZVqeKXUQJ+GF3v5SXMYooDO2O3cBZZRAEJMXoEANsYgY0jpxyBIiosUHpm3TtpRpA2fQgHaVXujmm4Mc3ZmWDkAmHBg8AnZhbIRnOMEUYu1xFLT0i/MquLs7SQDlM5Ys+NH57yBhusYxW2Jk8CKyAt35Fk+kq32JoR9QGKecrPGtapMlgJhr9wmekeyGcNl8iGt5+bWMyx8pugzDvynLpbmPVUI3T2SnR0LMxf+p2X69dlZ+gDjF7Z+Nlff1+VfahD/R0/DOcdPbbkbccOiFrRzCvvIOVFnu1/Nxs5a99Xopcu/SZThv3kcbV9Tn6fzFfHiJHgcTuv3HXCQP9tgB35rf5qg7GWWDsTsMNvdJENUeu4Pk9sphg0H6BAYPGYoo+tLsJddsAyasi/BVTUxXz9797fcenD9u6lkPjCa431xtcPwrfJpdD0gINi9blEQ/BhE3a3j53e30AxjyWgzD6MvsYTUddr4+T+oxvZ5TZD09tt5i2o/hUFhQwjidzjEUxVG1R9DT+rJeQHxOL0pCkDHLVf2l4iguMBV6W91S1OKnkoAI8mUxd+e+V7Mcp9+vN66aVavev7aqlt23OlbD8yy34xYctENxBLHL6IwoX4pld/3zOUC48DmmCCfGmqUwwlz/xGIPCKAFdCQfB6McT5hkceGBacrYn+0KcfvPpsYzm4aWt6K6dsvEHb1LOjOBk0Pqdg+oe4QhWRKs+F01OJcdzoXMxQqsUxHblTWoUJzKCZAoEvadarNmcrJYxlghNRcMpTGuLKNlnhmT7/4dA0CeS0fXk/zhfRjX8bciBVIHEaXAVSxXWJYRn5hBThHIxwHX9wMuzHdSRNT7kvkUCYE7JIef3tpE9UfZIzKi393xb7vAXaqfff39TfMTUOZxPkpHaE323BbDVM4HyR7toporUFlV0vU6zevXUMyYSPOmJEjbHGOYSnrbTtgfTM3ShHnWdClRH3ku5Yf4UhHRsQACL2S3afnxjNVijLlaLQL5TLJz95YDlzJvAmfilKwbyw1EIf50SYE+VHpSfC//NixBb+U6YWvPj4xT7hOC0FCd1BzZftAUkEmzRBIfS/aNnzJwyvmhsExyiUXIbpqmAn/8RVOM1tIBhCylIujpuWCfZXOcYrvE/pvSOzM5k7+O5ox/OJp/Dm/Gku8WQC91yX8rGyRvF4h1tQHkWFp6JjdN6ZyGe6z+CvCI2G3Lc3r1jtfo1KvNkthrnud6DatM4EEk7Xfi95K9nB6/h/a/</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F951092D6A97A648E0401F0A05993970</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F951092D6A97A648E0401F0A05993970</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95022FF67B8406FE0401F0A079903A3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95022FF67B8406FE0401F0A079903A3</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083036</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95022FF67B9406FE0401F0A079903A3</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083044</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083044</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083044</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj6uQG7dEBYlCOZul9AJ0u9uXlbFNYjbYEDsQ+uuPHZoUKO1hj4SEPBnPfHPxN3PJwSJ2/A7nOBGEUS3otfTfCHuoAeHMaAAAjapVmxrNql03nHrNrs4a7hS6M10LOE9xQLkAVLR0x7KrhlUz7OrEsnxX/poVu+4+69oPnHBpWqpULF3LFjHlfu62pacJ9RnghPsULDD3BfTHneGNLzV9UGDS25c7lLnDpB0JsfRNE1YQhjiOYQWyhXlpHuhcIu6PSUiBSBP86hPxlv56d7PZVDZuhSWh6ViWZVqeKXUQJ+GF3v5SXMYooDO2O3cBZZRAEJMXoEANsYgY0jpxyBIiosUHpm3TtpRpA2fQgHaVXujmm4Mc3ZmWDkAmHBg8AnZhbIRnOMEUYu1xFLT0i/MquLs7SQDlM5Ys+NH57yBhusYxW2Jk8CKyAt35Fk+kq32JoR9QGKecrPGtapMlgJhr9wmekeyGcNl8iGt5+bWMyx8pugzDvynLpbmPVUI3T2SnR0LMxf+p2X69dlZ+gDjF7Z+Nlff1+VfahD/R0/DOcdPbbkbccOiFrRzCvvIOVFnu1/Nxs5a99Xopcu/SZThv3kcbV9Tn6fzFfHiJHgcTuv3HXCQP9tgB35rf5qg7GWWDsTsMNvdJENUeu4Pk9sphg0H6BAYPGYoo+tLsJddsAyasi/BVTUxXz9797fcenD9u6lkPjCa431xtcPwrfJpdD0gINi9blEQ/BhE3a3j53e30AxjyWgzD6MvsYTUddr4+T+oxvZ5TZD09tt5i2o/hUFhQwjidzjEUxVG1R9DT+rJeQHxOL0pCkDHLVf2l4iguMBV6W91S1OKnkoAI8mUxd+e+V7Mcp9+vN66aVavev7aqlt23OlbD8yy34xYctENxBLHL6IwoX4pld/3zOUC48DmmCCfGmqUwwlz/xGIPCKAFdCQfB6McT5hkceGBacrYn+0KcfvPpsYzm4aWt6K6dsvEHb1LOjOBk0Pqdg+oe4QhWRKs+F01OJcdzoXMxQqsUxHblTWoUJzKCZAoEvadarNmcrJYxlghNRcMpTGuLKNlnhmT7/4dA0CeS0fXk/zhfRjX8bciBVIHEaXAVSxXWJYRn5hBThHIxwHX9wMuzHdSRNT7kvkUCYE7JIef3tpE9UfZIzKi393xb7vAXaqfff39TfMTUOZxPkpHaE323BbDVM4HyR7toporUFlV0vU6zevXUMyYSPOmJEjbHGOYSnrbTtgfTM3ShHnWdClRH3ku5Yf4UhHRsQACL2S3afnxjNVijLlaLQL5TLJz95YDlzJvAmfilKwbyw1EIf50SYE+VHpSfC//NixBb+U6YWvPj4xT7hOC0FCd1BzZftAUkEmzRBIfS/aNnzJwyvmhsExyiUXIbpqmAn/8RVOM1tIBhCylIujpuWCfZXOcYrvE/pvSOzM5k7+O5ox/OJp/Dm/Gku8WQC91yX8rGyRvF4h1tQHkWFp6JjdN6ZyGe6z+CvCI2G3Lc3r1jtfo1KvNkthrnud6DatM4EEk7Xfi95K9nB6/h/a/</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F951092D6A97A648E0401F0A05993970</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZtc6JIEP6+v4JiP14hAwgJVLSK9WWPbGJy6ia7+bKFw6izwgzODIj59TdgIGpMzr0qq6xperqffpmn+4qHSWx6PueICUyJEvQ76q9ZZEHozIEGDBBpbdR2tdC5tDTHQRAC4MyghVQl4DxDAeEiJKKjmsBoa8DWjPYUAM8CXttsWZbxpCoPiHFpWqq0gKoUSUy4V7ntqBkjHg055h4JE8Q9Ab2Jf3vjSU0vrDGp3asdysoh6y6FSD1dh60IQRTHsAVpol/pBzpXEfcmeEFCkTH04jPiHfXl7mazaW2sFmUL3QQA6MDVpU7E8eKz2v1UX0ZRQOZ0d+6FhBIMwxg/hyWoWySWNFL8eEEZFsvkHdOGboDStIYKqEGjTT6r+quDCt2Zlg5AMh5qfBkatbExmiOGCETK93HQUT+fV8Hd3SkLCZ9TlvCj859BQiRHMU1RpPE6shrd+RZPpKt7haAXEBhnHOdoVLZJGkLElXuG5ri4wVw2X8SVqvxKweUP112G4J+U5Urfxyqh6yey08cLxMX/qdl+vXZWHsI4Q93r4ZeUfHsY0Ym4TkH+1Z7bxcq56dvPt50Kwr7yDlRT7pfzcbM2vfVyaRLg/Pnun9GP+fDxBqzHKWfEZrAIxPIGx6uf9z6922Q/26R3Pzb97+LBciNTDL6xeCUW4xGb6eN1vjUca/Ot+PT48Hg73MyfzG18GdkuTRaQX9/37tj092BwO3RmT4OtcGe95GufiMVkusonfxnYIqPx5aU7DPLVtr8e8NEXKwI/Pt2152RFe+n699+P/XG0fmKDzmtM+zEcCmtKmGSz3wiK+li2R9BXhrJeofiYXkoJjrR5peqlJUdxgYhQu+Wtklq8TBIQjjxZzN156NoGcCzbNHzHN21/ANrAGAIfXLiubbX7NQftUBxB7FEyx6WvkmV3/fMxQJh4HJEIMS2nGVwirn5gsR+KUAnIWD4OSjiaUsnihg2eV8REbFkUyEyoG28WYBPnG1UZUXFH7pg/F4gdUrd1QN1jBHGKUcnvZYNz2eFcyFyswzwTsdHKwxZBmZwArCRhz2xf2jrHSRqjEqme0CiLUStdplVmdL77N7UQ8ko6Hkyrh/duXMff6hRInQiXCryM5QuSZUQnZpBVB/J+wM5+wLV5P4tw+b5kPgXDcIfk8NNrm5T90fSIjOhXb/LLqHE36mdff3tT/wCUfpyPxlGU4z239TCV80GyR7eu5jpsrVtZnmdV/S5KZmTSvC4J0tAnCGaS3rZTukJEb0zoZ02XBvWR50Z+iC8TSzIRoUCJ7DalOp6xWkwQL1eLQD6T4ty95cClzJtAhTgl68VyAykRf7ikQA+WelJ8L/82lEWv5Tpha8+PjFPuEwKTRXkq58j2naaAVJrFkvgo2zd+ysAp54fCJskNFiG7aZYJ9P4XpWS0jhpCSDMigr5aCfZZtsIptinyXpXemKmY/GU0F/zd0fzj9mYi+S4J1UYX/7eyhqt2gXIxlfoVlo5ayE1TOieLPVZ/AfiG2F2z7/juhe+0Lxtit13Xci9Ak8CDSLpvxG8lezk9fg/dfwE=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F951063521A6A25AE0401F0A0799534D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F951063521A6A25AE0401F0A0799534D</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083040</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F951063521A7A25AE0401F0A0799534D</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>F95022FF67B8406FE0401F0A079903A3</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj1WIc+GSqCClpT2lB7pdoD27falcewC3iQOxw2V//bFDQ4HSHvZISMiT8cw3F38zZwInsRtGQkAmWcqNTrtpPnnUczCtYqsOxLd813WtgNQaViPwvEYwolVSH5lGR4gcOlxIzGXTdJHjW6hqOf4QodBDoV+voJrzaBoPkAllWqlUkGksk5iLsHDbNPOMhykWTIQcJyBCScJB1OuGSjPEJSazdbZGWTjMWhMpp6FtkwoFAnFMKiRN7DN7R+eMinDAxhzLPIM3n1Q0zbe7i8WisvAqaTa2XYSQjQJb6VDBxt/M1kl5GWiHj9L1+QLzlDOCY/Yba1A9kJOUGlE8TjMmJ8knph3bQdq0BUtiEcfn30z73UGB7khLOyAzgS0xwU5prA8jyIATMO77nab57bgKru8OM8zFKM0SsXf+M0jA5xCnU6CWKCMr0R1v8UC6WmdAwg4ncS7YHG51m0wxAWHcZTBiyy4TqvmoMIryG0uhfqzsMiB/UpYzexurgm4fyE6bjUHI/1Oz7XqtrTzgOIdW/fb38w26Di7aNz9APLBoEL+iPh4+4nGzgLCtvAa1Kffbeb9ZN731dml+wXL0YvfS+qAOk2fee/7dfplky+e73t85i1aX458k6Xf5OYI6iuaUrGZx7ZXGfT4dn6b+P/fCbsRj1xu8/oKTvDFqL1j/1cWPfhXf32d357986nXiHz0mFi55+LXwPIHz0+7pnSvnIslW1GvQ88ns+gb+Su5X/c5sfOP3F1eXo5Pu1XwW9H/Ybm94fernp9XGffM9pu0YdoUlJQzy5xcgsjzq9ui0jStVLyy/phctYdQaFarhVHOUkMCl2dK3NLWEuSIgRkNVzPX5Kqgi1/WCWhR5rhvULpGPnCsUoWoQoKBRLzlojWIP4kXKR0z70iy77p+vAZIkFMApZNY8zckEhPmFxTaW2OjwvnocKRcwTBWLO26w8F4atUTGI+IsEsKofGGNV+yZxm0qv/PvWTSSkO1yt7fD3X0gbMpAE7zucKFaXEiVjBme5zJ2KnNc4ZCrEZBpFg5dv1G1BUumMWiodpLSPIbKdDItUmOL9b9rYSIKaf9yWLy8TwPb/1bmQOlQphWEjuUcVB3hwBDyykA+D7i2HXBpPsop0w9MJVRmjKyR7H567xPdIJsmURE9XQyenBL3Rv3o6x9v2l+AsvfzsXFE52zLbTlN1YBQ9NEqqznDlVkln8/zon51TY2ZMm8rhnTsAZBc8dtqmL4Ctzcm7KPGywb1nueNfBdfLid8ILGERHWbURyP2C0GIPRu0VHvZHns4rLjUuVNwlIekl3EagXRiL/cUkhItJ4S36m/RZrR93IdsLXlR8WpFgrJ+Fif9CBZfdIUJFVmmWK+NNs2fsjAIee7wk2SN1ik6qbnXMLnXwxNaU0TE5LmXHbaZiHYptkCp1xNIXxX+mCmoPK32bwUn87mn73uQBFegs2NLvtvZYsV7ULA1CtAgaVpLtWqqZzz8RatvwHcY3YHBW67FgX1qOY3tpndC+pok8CdSFofxB8lWzndfw+tfwE=</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>F95022396AA32296E0401F0A05990987</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:F95022396AA32296E0401F0A05990987</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20140513_083044</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>F95022396AA42296E0401F0A05990987</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00003_FUNC_UVTC_UserName_RequestorUserChild_active_RequesteeOtherUser_active_ResetPassword_(Negative)_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for FAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - FAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj1WIcyskKkgstN2wtOUA3XPal5VxDLgkdho7XPrrjx2aFCjtYY+EhDwZz3xz8TdzyWES20Gbc5wJwqgWdpv6bzTxgGVbnjFBCBhu/SIyfN/2jbrjgQawPNdygK6FnOc4pFxAKpq6DSzXAJ5huWMAAgcEHqiBC/tJ137hjEvTUqUmb62TmPKgcNvU84wGDHLCAwoTzAOBglH7th9IzQCWmPTW5RZl4TBrzYVIA9NEtQgjHMeohlhiXpp7OpcRD0ZkRqHIM/zmM+JN/e3uarWqrZway2amDQAwgW9KnYiT2Zne+lZexlFIp2x77kDKKEEwJq9QgbrFYs4irR3PWEbEPPnEtGVaQJk28BoZyHLpmW6+OyjQnWhpD2TGocHn0CqNDfEUZ5girD0Mw6Z+dloFt3fHGaR8yrKEH5z/DBKmSxyzFEcGLyMr0Z1u8Ui6WpcYBSFFcc7JEt+pNkkhwlwbZHhK1n3CZfNFXCvKr625/JGyyzD6k7JcmrtYJXTzSHa6ZIa5+D81263X1sovGOe4ZTbWz1ee4108dXzx9DN9ROeDp+f7tG/OmgWEXeUtqKrcb+fDZq166+3SuPF9yp7H/R/9lIT+4nWazW3em8wfnGf0HDce0huwYO3wql0fDJk4Z72RtfDO4zFZ/fjR6wqBgDuYDULnF74Jv53fPPDxZvYC7l/B6u9BcpOlUe5t6t97SzfrsVveW1rAHd4+jv3EXQ6WN3+58C5ZXZtrpy5+wtX9pheKu86oh2PnW9ecPj7272/Xi80i9XzvboOa7zHtxrAvLClhlE+eMRLlUbVH2NWuZb2g+JpelIRExrRQDVLFUVxgKvSWuqWoJcglAZEokMXcnq99D9j2lWNfN64cz/KugAusa9AGdd8HjtMpOWiL4gBih9EpUb4Uy27752uAKAk4phHOjCXL0Rxz/QuLXSigFtKhfByMcjxmksUnJM0m8HWx5r6P7Ve3AenM97OFrt0xcU/vs/ZU4GyfuZ095h5iRFKCFb2r/uaywbmQqXiBy1zEVm0JaxTncgBkioMD2214JidJGmMF1ExYlMe4ls7TIjEm3/7bBkS8kA6vxsW7+zSsw29lBqRORJQCV7F8x7KK+MgIcstAPg/4Yjfg0nw7j4h6XjKdIiNoi2T/03uXqPaoWkRG9Lsz+m2VuCv1k69/vGl+Aco8zEflKFqSHbflLJXjQZJHq6zmC6y91PLlMi/qV1fEmEnzpuRHyxxhlEt224zZAlOzMmGeNFwq1AeeK/k+vlzM6UhAgRPZbVpxPGGzGGGuNotQvpL1qWvLnkuZN4HX4pisE8sFRCH+ckdBAVJ6UjyQfyuWRe/lOmJrx4+MU64TgtCZOqkxsvmkKRCTZonkPZbtGj9m4JjzfWGV5AqLkN00yQX+/IumCK2pQ4RYTkXY1QvBLskWOMUmxcG70gczBZG/TeY1/3Qy/3PbH0m6S6Be6ZL/VjZI0S4I62oBKLA09bVcNKVzOtsh9TeAB7xugfqFZ9td4Fw3QMXrnu87oN2tErgXSeuD+KNkJ6eH76H1Lw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F951076522D03F80E0401F0A059930AD</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F951076522D03F80E0401F0A059930AD</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95022E32F8E3515E0401F0A0799033C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95022E32F8E3515E0401F0A0799033C</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083047</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95022E32F8F3515E0401F0A0799033C</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083055</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083055</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083055</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>F95022E32F8E3515E0401F0A0799033C</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj1WIcyskKkgstN2wtOUA3XPal5VxDLgkdho7XPrrjx2aFCjtYY+EhDwZz3xz8TdzyWES20Gbc5wJwqgWdpv6bzTxgGVbnjFBCBhu/SIyfN/2jbrjgQawPNdygK6FnOc4pFxAKpq6DSzXAJ5huWMAAgcEHqiBC/tJ137hjEvTUqUmb62TmPKgcNvU84wGDHLCAwoTzAOBglH7th9IzQCWmPTW5RZl4TBrzYVIA9NEtQgjHMeohlhiXpp7OpcRD0ZkRqHIM/zmM+JN/e3uarWqrZway2amDQAwgW9KnYiT2Zne+lZexlFIp2x77kDKKEEwJq9QgbrFYs4irR3PWEbEPPnEtGVaQJk28BoZyHLpmW6+OyjQnWhpD2TGocHn0CqNDfEUZ5girD0Mw6Z+dloFt3fHGaR8yrKEH5z/DBKmSxyzFEcGLyMr0Z1u8Ui6WpcYBSFFcc7JEt+pNkkhwlwbZHhK1n3CZfNFXCvKr625/JGyyzD6k7JcmrtYJXTzSHa6ZIa5+D81263X1sovGOe4ZTbWz1ee4108dXzx9DN9ROeDp+f7tG/OmgWEXeUtqKrcb+fDZq166+3SuPF9yp7H/R/9lIT+4nWazW3em8wfnGf0HDce0huwYO3wql0fDJk4Z72RtfDO4zFZ/fjR6wqBgDuYDULnF74Jv53fPPDxZvYC7l/B6u9BcpOlUe5t6t97SzfrsVveW1rAHd4+jv3EXQ6WN3+58C5ZXZtrpy5+wtX9pheKu86oh2PnW9ecPj7272/Xi80i9XzvboOa7zHtxrAvLClhlE+eMRLlUbVH2NWuZb2g+JpelIRExrRQDVLFUVxgKvSWuqWoJcglAZEokMXcnq99D9j2lWNfN64cz/KugAusa9AGdd8HjtMpOWiL4gBih9EpUb4Uy27752uAKAk4phHOjCXL0Rxz/QuLXSigFtKhfByMcjxmksUnJM0m8HWx5r6P7Ve3AenM97OFrt0xcU/vs/ZU4GyfuZ095h5iRFKCFb2r/uaywbmQqXiBy1zEVm0JaxTncgBkioMD2214JidJGmMF1ExYlMe4ls7TIjEm3/7bBkS8kA6vxsW7+zSsw29lBqRORJQCV7F8x7KK+MgIcstAPg/4Yjfg0nw7j4h6XjKdIiNoi2T/03uXqPaoWkRG9Lsz+m2VuCv1k69/vGl+Aco8zEflKFqSHbflLJXjQZJHq6zmC6y91PLlMi/qV1fEmEnzpuRHyxxhlEt224zZAlOzMmGeNFwq1AeeK/k+vlzM6UhAgRPZbVpxPGGzGGGuNotQvpL1qWvLnkuZN4HX4pisE8sFRCH+ckdBAVJ6UjyQfyuWRe/lOmJrx4+MU64TgtCZOqkxsvmkKRCTZonkPZbtGj9m4JjzfWGV5AqLkN00yQX+/IumCK2pQ4RYTkXY1QvBLskWOMUmxcG70gczBZG/TeY1/3Qy/3PbH0m6S6Be6ZL/VjZI0S4I62oBKLA09bVcNKVzOtsh9TeAB7xugfqFZ9td4Fw3QMXrnu87oN2tErgXSeuD+KNkJ6eH76H1Lw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F951076522D03F80E0401F0A059930AD</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH6uQG5ASFaQUyhE6lF7gsLt9WRlnIG4TJ9hOoPz6Y4eGAqU97JGQkCfjmW8u/mauOEpixw84ByZISrVBr63/dppNhJ2WZbieg4w6usTGrOE6RtOaYa/hzTwPN3VtwHkOA8oFoqKtO5ZdN6yGYdcnluW7lt9o1Oqu+6RrU2BcmpYqNUvX1klMuV+6bes5o36KOOE+RQlwX2B/HNwOfanpowqT3rnaoiwdsk4kROabJq6FgCGOcQ2niXllHuhchdwfkwVFImfw5jPkbf3t7mq1qq3cWsoWpmNZlmm1TKkTcrL4rne+VZchHNB5uj13EU0pwSgmG6RA3YKI0lAL4kXKiIiST0zbpm0p0wassYHtOv2um+8OSnRnWjoAyTgyeITsytgjzIEBxaD98zho69/Pq+D27oQhyucpS/jR+c8gAS0gTjMIDV5FVqE73+KJdHWuAPsDiuOckwJGqk0yhIFr9wzmZD0kXDZfyLWy/Nqayx+pugzwn5TlytzHKqGbJ7LTIwvg4v/UbL9eWytTFOfQ+fWSzMbLsBv9XJrDpBFGLXax9oLpQ/jSLiHsK29B7cr9dj5u1l1vvV0a1Avs9ebei3tpkx8o2XT/fppkbhC5w+7TeP4ITw4E6EdxG994FzeR5zxvNj9F/a/cnfd7uTctcIsxd5pP7oaTbxdotlnEo6fe9fVgc51dP1w2Lu5GSZHHL428D/cpC5I1mTxvGC3YqHv7XPxq3vSLZuC+4Bs3W668C+sBut0sGkff8JMbTrsCm63pKM7mQ6u/aL/HtB/DobCihHE+ewYsqqNqj0FP68t6IfE1vSgJCY15qepniqO4ACr0jrqlqMXPJQGR0JfF3J77rYZteZ7TCmyn77q9G6tu2X0rsBqtlmsF1xUHbVEcQeymdE6UL8Wy2/75GiBOfA40BGYUaY4j4PoXFntIIG1AH+XjSCmHSSpZfLVpsUhYm9YyxUmBRYY9sYg2ia6NUnFH71gwF8AOmds9YO5HwCQjoOhd9TeXDc6FTMUSFbmI7VqBahRyOQCY4mDfqV82TE6SLAYF1EzSMI+hlkVZmRiTb/8dA2FeSh9vJuW7+zSs429VBqROSJQCV7Fcg6winBhB9SqQzwNu7gdcmQ/ykKjnJdMpGMFbJIef3rtEtceuRWREv7vj33aFe6d+9vWPN80vQJnH+dg5Cguy57aapXI8SPLoVNVcotqylhdFXtbPU8TIpHlT8qNtjgHnkt1eJ+kLUHNnwjxruOxQH3neyQ/x5SKiY4EEJLLbtPJ4xmYxBq42i4F8Jetz15YDlzJvAtbilKwbywVEIf5yR8E+VnpSfC//VikL38t1wtaeHxmnXCcEoQt1UmPk9ZOmwKk0SyTvpWzf+CkDp5wfCndJ3mERsptmuYDPv2iK0No6wjjNqRj09FKwT7IlTvGagf+u9MFMSeRvk3nNP53MP2+HY0l3CdJ3uuS/lQ1StgsGXS0AJZa2vpaLpnROF3uk/gbwI683G47Ts9z+pXXE671dAg8i6XwQf5Ts5fT4PXT+BQ==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F95107729A12F33DE0401F0A059930AB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F95107729A12F33DE0401F0A059930AB</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083051</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F95107729A13F33DE0401F0A059930AB</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3Pr/C4jxlj2ZgPewIzLoQUmo8GaJrkJSNkgZXaEkiyIf31lUxMgJBcemeYYbRe7Z7dPTrSmYBp4gahEJhLwqjR77bMJxR5juM3q1YdYMfyajVkQQB9a1KtVScNNPEjNzKNvhAZ7lMhIZUt0wWOZ4Ga5XhjAIIqCGqNCnDAo2ncYS5UaOVSAaaxShMqgiJty8w4DRgURAQUplgEEgWj8OoyUJ4BLDGZ7bM1yiIhb8dSzgPbRpUII5wkqIJYap/ZOz5nkQhGZEahzDh+zRmJlvm6d7lcVpbVCuMz2wUA2MC3lU8kyOyL2T4pN+OoT6dsve5AyihBMCF/oAZ1hWXMIiNMZowTGacfhHZsB+jQFl4hCzke/WLabwkKdEdG2gHJBbREDJ0y2BBPMccUYePnsN8yvxw3wfXeMYdUTBlPxd763yBhmuOEzXFkibKyEt3xEQ+0q32GUdCnKMkEyfG1pskcIiyMHxxPyeqSCEW+SBjF+I2VUD9SsgyjfxnLmb2NVUG3D3SnS2ZYyP8zs+15raPcwSTDbZ7Xf0tveNGrxY8TRzR6TPjPXv00Ir9bBYRt5zWozbhf1/tk3XDrdROLL+qQRUO7Pkrd4bLaQ19RLGqD+tL3x9V6OLvuAdRd2oP48tftJLTnj/ff/QGaX11/W/rnxF388saTzi1b8ZCe2N75KUoH4eB0jK56l4NvLw/nQ34/Ov2ZjE8HF/LX7QgM/Itv8Qo80OWFx7OOjOJ8kdPQmQ4f7yB27ya3AndWpHoSrS6+L/IfzfCnc3c/unnsDB9abzVt17BrLCVhlE2eMZLlUtOj3zV6al5Qfi4v2kIia1q4BnOtUUJiKs223qWlJciUAJEoUMNcr3t+DXRdUG90mw2n6vXOgQecHghBzffdRqdWatAaxR7EDqNTonNplV3z53OAKA0EphHmVs4yFGNhfhKxCyU0+nSoDgejAo+ZUnFn4XH6B3pz2vRRrlglmzyeecmzaVwzeUNveDiVmO9Kd3VHuocYkTnBWt81wYViuJCqFwuYZzJxKjmsUJypG4BrEQ5cr1mzBUnnCdZI7ZRFWYIr83hedMYW63/XgkgU1uH5uDh4H9a1/61sgfKJiHYQupavWI0RH7iDvLKQjwuubxdchg+ziOjzpfopOUFrJLuf3mii+bHhiKroqTN6ckrcG/ejt7/faX8Cyt7vxyZRlJOttOVlqu4HpR7tcpoLWFlUsjzPivk1tDJyFd5WAunYI4wyJW8vY/YbU3sTwj7qdtmg3su8se/iy2RMRxJKnCq2GcXyiKfFCAv9tOirY7I69t2yk1L1TeKVPGTrJOoFohF/+khBAdJ+yvxD/S0Zfyv8UKytPKpO9Z6QhM70St8jLx+QAjEVlijhY3w7+KEAh5LvGjdN3mCRik2TTOKPvxha0VomRIhlVPa7ZmHYVtkCp3yZ4+DN6V2YQslfr+aV+PBqvr+6HCm9S6G58SX/7WyRgi4Im/oFUGBpmSv10lTJ6WxL1V8B7gm7Axr1mut2QbXXBNvCXgVhd9PAnUra78zvLVs93T8P7b8=</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>F950D2067D87134FE0401F0A059927C5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:F950D2067D87134FE0401F0A059927C5</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20140513_083055</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>F950D2067D88134FE0401F0A059927C5</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5964f10a-b509-40e9-862f-fa1b94ce9895</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7aaed2f-7952-4584-a739-c774cb776a89</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00004_FUNC_UVTC_UserName_RequestorUserChild_active_RequesteeSelf_ResetPassword_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EH2fr3A5jynjC77ErkAV4ZIlN1jMJpm8TClyY5SxZceSCeHrVzIxAXJZZqtSodRudZ/uPjrSKUNpYgUdxqDgJKPKsNdSf6HIb8Ljia05kelp9klka8hzT7SZ4/qua9jiv6MqQ8ZKGFLGEeUt1TJMWzMczbSnhhE0zcAwGv6J/aAqt1AwEVq4NAxVWaYJZUGVtqWWBQ0yxAgLKEqBBRwHYef6KhCeAaoxqe3TNcoqYdGec54Huo4bEWBIEtzAWaqf6js+pxELQhJTxMsC3nJGrKW+7X15eWm8NBtZEeuWYRi64evCJ2IkPlLbP+rNEA3pLFuvu4hmlGCUkBWSoK6Bz7NI6SRxVhA+T78IbeqmIUNrsMQaNm16pOrvCSp0B0baAVkwpLE5MutgE5hBARSD8s9k2FKPDpvgeu+0QJTNsiJle+s/gwR0AUmWQ6SxurIa3eERP2lX+xRwMKQ4KRlZwI2kSY4wMGVcwIwsrwgT5IuYUo1fWTLxR2qWAf6TsZzq21gFdP2T7vRIDIz/n5ltz2sd5RYlJbSz80nxdLy4md1nEI6oHs6ssTdumn2v36ogbDuvQW3G/bbeJ+uGW2+brl8N053Mbrqd6+fLuXOXJ17/aWl1c/c+9S4cvbyJR5ej3sVjWoyOsXHX/Mu+vfTPJ1N8bjPkr1aMX3r98IVMRxc/zHPrLv6Z3cDwevB7EE/GK79XEO/24aJ8uj/rP6DUpe7kyhobTz99bxF1V97x7PmSjpOR7V8tRyvz/A6dJyUJe7c/kjg3k/5x/DzJH6bhoLvw/26917Rdw66xloSwfHwCzOulpMewpwzEvBD/Xl6khUTarHINcqlRjAPlalvuktISlEKASBSIYa7XA98xDc+z/E7TGTSbvb5hG+bA6BiO7zeNzlmtQWsUexC7GZ0RmUuq7Jo/3wPEacCARlBoi6zEc2DqNxF7iCNlSCficGSUwTQTKm66r0ALP7dX4Po5ckmc24+eFQvpvsn4iI6KzoxDsSvdzR3pngAmOQGp75LgTDCccdGLZ7QoeWI2FqhBoRQ3QCFFOLDsE0dnJM0TkEj1NIvKBBr5PK86o7P1r6UhzCrrpD+tDt6Xde1/q1sgfCIiHZis5QzEGOHDHWQETl3I1wW72wXX4TtlROT5Ev3kBcFrJLuf3mki+bHhiKjoVzf8Zda4N+4Hb/+4U/8GlL7fj02iaEG20taXqbgfhHq062k+o8Zzo1wsymp+nlTGQoTXhUCaegi4FPL2Os1+A9U3IfSDbpcN6r3MG/suvpLPacgRh1SwTamWBzwtQmDyaTEUx2R56LtlJ6XoG4cl/8zWTcQLRCL+9pGCAyz9hHksfl6yInof1yextvKIOsV7ghMay5W8R16/IAXORFgihC8rtoN/FuCz5LvGTZM3WLhg02PJ4esvilS0loowzkrKhz21MmyrbIWTv+YQvDt9CFMp+dvVvGRfXs3311eh0LsUqRtf8t/OGqnogkGVL4AKS0tdipemSE7jLVV/A7gn7EbPMiyn79p278zaCLvn+467xeWdStofzB8tWz3dPw/tfwE=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950D2025E644DB2E0401F0A07995665</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950D2025E644DB2E0401F0A07995665</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95107729A35F33DE0401F0A059930AB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95107729A35F33DE0401F0A059930AB</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083059</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95107729A36F33DE0401F0A059930AB</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_08313</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_08313</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_08313</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>F95107729A35F33DE0401F0A059930AB</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EH2fr3A5jynjC77ErkAV4ZIlN1jMJpm8TClyY5SxZceSCeHrVzIxAXJZZqtSodRudZ/uPjrSKUNpYgUdxqDgJKPKsNdSf6HIb8Ljia05kelp9klka8hzT7SZ4/qua9jiv6MqQ8ZKGFLGEeUt1TJMWzMczbSnhhE0zcAwGv6J/aAqt1AwEVq4NAxVWaYJZUGVtqWWBQ0yxAgLKEqBBRwHYef6KhCeAaoxqe3TNcoqYdGec54Huo4bEWBIEtzAWaqf6js+pxELQhJTxMsC3nJGrKW+7X15eWm8NBtZEeuWYRi64evCJ2IkPlLbP+rNEA3pLFuvu4hmlGCUkBWSoK6Bz7NI6SRxVhA+T78IbeqmIUNrsMQaNm16pOrvCSp0B0baAVkwpLE5MutgE5hBARSD8s9k2FKPDpvgeu+0QJTNsiJle+s/gwR0AUmWQ6SxurIa3eERP2lX+xRwMKQ4KRlZwI2kSY4wMGVcwIwsrwgT5IuYUo1fWTLxR2qWAf6TsZzq21gFdP2T7vRIDIz/n5ltz2sd5RYlJbSz80nxdLy4md1nEI6oHs6ssTdumn2v36ogbDuvQW3G/bbeJ+uGW2+brl8N053Mbrqd6+fLuXOXJ17/aWl1c/c+9S4cvbyJR5ej3sVjWoyOsXHX/Mu+vfTPJ1N8bjPkr1aMX3r98IVMRxc/zHPrLv6Z3cDwevB7EE/GK79XEO/24aJ8uj/rP6DUpe7kyhobTz99bxF1V97x7PmSjpOR7V8tRyvz/A6dJyUJe7c/kjg3k/5x/DzJH6bhoLvw/26917Rdw66xloSwfHwCzOulpMewpwzEvBD/Xl6khUTarHINcqlRjAPlalvuktISlEKASBSIYa7XA98xDc+z/E7TGTSbvb5hG+bA6BiO7zeNzlmtQWsUexC7GZ0RmUuq7Jo/3wPEacCARlBoi6zEc2DqNxF7iCNlSCficGSUwTQTKm66r0ALP7dX4Po5ckmc24+eFQvpvsn4iI6KzoxDsSvdzR3pngAmOQGp75LgTDCccdGLZ7QoeWI2FqhBoRQ3QCFFOLDsE0dnJM0TkEj1NIvKBBr5PK86o7P1r6UhzCrrpD+tDt6Xde1/q1sgfCIiHZis5QzEGOHDHWQETl3I1wW72wXX4TtlROT5Ev3kBcFrJLuf3mki+bHhiKjoVzf8Zda4N+4Hb/+4U/8GlL7fj02iaEG20taXqbgfhHq062k+o8Zzo1wsymp+nlTGQoTXhUCaegi4FPL2Os1+A9U3IfSDbpcN6r3MG/suvpLPacgRh1SwTamWBzwtQmDyaTEUx2R56LtlJ6XoG4cl/8zWTcQLRCL+9pGCAyz9hHksfl6yInof1yextvKIOsV7ghMay5W8R16/IAXORFgihC8rtoN/FuCz5LvGTZM3WLhg02PJ4esvilS0loowzkrKhz21MmyrbIWTv+YQvDt9CFMp+dvVvGRfXs3311eh0LsUqRtf8t/OGqnogkGVL4AKS0tdipemSE7jLVV/A7gn7EbPMiyn79p278zaCLvn+467xeWdStofzB8tWz3dPw/tfwE=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950D2025E644DB2E0401F0A07995665</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbc6JKEH7fX0Gxj1vIgKCRilbF2657Ek00m9vL1jg0MFkYCDPg5defAYNRY3LcU2WVNU1P99eX+brPOY5C07ngHFJBY6aM+m31t2vXPROThmYCGJqFMNLmZ/MzbW7VURMZYFpuQ1VGnGcwYlxgJtqqiQxLQ7ZmWLcIOXXDQY2aiawnVbmDlEvTUqWGVGUZhYw7pdu2mqXMiTGn3GE4Au4I4swuri4dqengCpPaOd+gLB2mnUCIxNF1UnOBQBiSGokj/Vzf0zl3uTOjPsMiS+HVp8vb6uvdxWJRW9RrcerrJkJIRy1d6ric+l/VzpfqMrgj5sWbcw+zmFGCQ7rGBagrEEHsKhehH6dUBNEHpg3dQIVpDZZEI4bFvqr6m4MS3YmW9kCmHGs8wEZlbAoepMAIKL+mo7b69bQKbu7epphxL04jfnD+O0jAcgjjBFyNV5FV6E63eCRdnXMgzoiRMOM0h3HRJgkmwJXrFDy6vKRcNp/LlbL8ypLLH626DMjflOVc38UqoetHstOnPnDxf2q2W6+NlTscZtDh6fSSJZN16g0Tdzry2J9x3Gz8cy0ag3YJYVd5A2pb7tfzYbNue+v1Enuq+8nk8Qr/WQyGv4YZTVpB73t+n9z3blzUfbpDwcOiGf+8QcxfJtNBa92c2Ne33e69/8xuaJ5b2QuzRuMXnD1+uXNbTO892835+KaB9Mxe/bi//8bwCsI1u1/n357XbPJ8E7FlP8u97vrJ7/vJuJd/f/g18buDces6iNaBjXzq3nwxdG82++E9mmhgDMkcBxPSfotpN4Z9YUUJs2z+DERUx6I9Rn1lKOuFxef0Ukioq3mlqpMUHMUFMKF2ilsFtTiZJCDqOrKYm/OwZaO+iUx70BxY/a45QBYyhugCNVstu9GwKw7aoDiA2IuZRwtfBctu+udzgCRyODAXUi2PMxIAVz+x2McCKyM2lY8jZhxuY8niK9xqokws7XoChseDs1W6WvvPxkpVxrGYsEl64QlI96m7vkfdUyA0oVDwe9HgXHY4FzIXLzjPRGjUclxjkMkJkBYk7JjWma1zGiUhFEj1KHazEGpJkJSZ0fnm39Qw4aV0OrgtH96HcR1+q1IgdVxaKPAili7IMsK7GYQcuwrk44AbuwFX5i8ylxbvS+ZTpJRskOx/emuToj+2PSIj+t2b/TYq3Fv1k6+/v6l/Ako/zMfWkZvTHbfVMJXzQbJHp6rmC6691LI8z8r6NQtmTKV5XRKkoc+AZJLeVrfxH2D61oR+0nTZoj7wvJXv48tEwGYCC4hktynl8YTVYga8WC1G8pksT91b9lzKvAlYimOyXig3kALxp0sKcUihJ8XX8m8Rp+5buY7Y2vEj45T7hKDML07FHFl90BQklmapJL443TV+zMAx5/vCbZK3WITspnkm4OMvSsFobRUTEmdMjPpqKdhl2RKnWCXgvCm9M1My+etoXvIPR/PD1eVM8l2E1a0u/W9ljZbtQkAtNoASS1tdyk1TOmf+Dqu/AjxO7A3rM2Lfj6TzTvxespPTw/fQ+Rc=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950D2025E7E4DB2E0401F0A07995665</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950D2025E7E4DB2E0401F0A07995665</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_08313</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950D2025E7F4DB2E0401F0A07995665</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5964f10a-b509-40e9-862f-fa1b94ce9895</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7aaed2f-7952-4584-a739-c774cb776a89</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00005_FUNC_UVTC_UserName_RequestorUserCLG_active_RequesteeChild_pending_ResetPassword_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","pending");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH1chF2ADUUFKoZdsaYsaDtvdl5XrDOA22KntBNpff+zQpEAvhz1SJerJeOabmc+ffSTQMvWCUAjgkjBqRMOe+Qdhx79rOncW8jt3VstpORb6rv7zPARN1PR8SFzTiITIIaJCIip7pue4LctpW25r4jhB0w2cTsP3/d+mMQUuVGjl0nBMY71MqQjKtD0z5zRgSBARULQEEUgcxOHlKFCeAaowmf2jDcoyIe8vpMwC28aNBDCkKW5gtrSP7B2fo0QEMZlTJHMOLzkT0TNf9q5Wq8aq2WB8bnuO49hO11Y+iSDzr2b/S7UZkojO2GY9QJRRglFKnpEGdQlywRIjTOeME7lYfhDatV1Hh7ZgjS3stuhX035NUKI7MNIOSC6QJRbIrYLdwAw4UAzGPzdRz/x62AQ3eyccUTFjfCn21n8HCWgBKcsgsURVWYXu8IjvtKt/BDiIKE5zQQq40jTJEAZhjDnMyHpEhCJfIoxy/MZaqD9SsQzw34zlyN7GqqDb73RnSOYg5P+Z2fa8NlGmKM2hf3aZ4GmeRO7gaprZ8TRp5+PxaB6NZp1eCWHbeQOqHvfLep+sNbdeNp3EZznhcF6sJ9l41vbZ8JvIB2fP08lkgryxf3X9cBpfjAaz8fGtF/nJ6jlxLsV1sU7nk2ISekM88M6fu3F82w2/2LPw6mdn1pp3hpdocB4OmqKdzBFni4v7G0m8s1W8ZBPXOz25+jn++Zu1m8X9t6ffHkPTi7Qz/eY9rO9/+RfFucPlFye+85xbeLB/HPOHbDEe3f7qvda0XcOusZKEOL+7ByyrpaZHNDRO1byQ/FxetIUk1qx0DTKtUUIClWZf79LSEuRKgEgSqGFu1qfdtuM1u8Pv4enA9d32iTpW7qkTOu1u1+l23EqDNij2IA4YnRGdS6vshj+fA8TLQABNgFsFy/EChPlJxCGSyIjojTocjAqYMKXiLm0uFgkFlHHpuF4KzfvOukUKzk3jislres3DmQS+q93NHe2+AUwyAlrgNcOForiQqhmPqMhl6jYK1KCQqyuAaxUOvFanbQuyzFLQUO0lS/IUGtkiK1tji82vZyEsSuvNyaQ8eR8Wtv+t6oHySYh2ELqWY1BzhDeXkBO0q0I+Lvj7dsFV+DBPiD5gqqGSE7xBsvvplSeaIDVJVEV/BvGfmgy1+8Hb3+60PwFl7/ejTpQUZCttdZuqC0LJR7+a5iNqPDbyosjL+flaGrkKbyuFdO0YcK707WnCHoDadQj7oOulRr2Xubbv4svlgsYSSVgqthnl8oC3RQxCvy0idU7Whz5cdlKqvklYy/dsg1Q9QTTiT18pOMDaT5nH6mfFePI6rndibeVRdaoHhSR0rlf6Inn6gBSYqbBEKR/j28HfC/Be8l1j3eQai1RsusslfPzF0JLWMxHGLKcyGpqlYVtmS5zyKYPg1elNmFLKX+7mtfjwbr69HMVK8JbIrH3JfztbpKQLBlM/AUosPXOtnpoqOZ1vyfoLwDfK7nXC7vHJ0B96Ya3svlL21vCkbuBOJf035reWrZ7un4f+vw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950228A9BED7D2AE0401F0A079904DE</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950228A9BED7D2AE0401F0A079904DE</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950239D6AFC1715E0401F0A05990981</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950239D6AFC1715E0401F0A05990981</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_08317</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950239D6AFD1715E0401F0A05990981</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083110</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083110</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083110</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>F950239D6AFC1715E0401F0A05990981</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH1chF2ADUUFKoZdsaYsaDtvdl5XrDOA22KntBNpff+zQpEAvhz1SJerJeOabmc+ffSTQMvWCUAjgkjBqRMOe+Qdhx79rOncW8jt3VstpORb6rv7zPARN1PR8SFzTiITIIaJCIip7pue4LctpW25r4jhB0w2cTsP3/d+mMQUuVGjl0nBMY71MqQjKtD0z5zRgSBARULQEEUgcxOHlKFCeAaowmf2jDcoyIe8vpMwC28aNBDCkKW5gtrSP7B2fo0QEMZlTJHMOLzkT0TNf9q5Wq8aq2WB8bnuO49hO11Y+iSDzr2b/S7UZkojO2GY9QJRRglFKnpEGdQlywRIjTOeME7lYfhDatV1Hh7ZgjS3stuhX035NUKI7MNIOSC6QJRbIrYLdwAw4UAzGPzdRz/x62AQ3eyccUTFjfCn21n8HCWgBKcsgsURVWYXu8IjvtKt/BDiIKE5zQQq40jTJEAZhjDnMyHpEhCJfIoxy/MZaqD9SsQzw34zlyN7GqqDb73RnSOYg5P+Z2fa8NlGmKM2hf3aZ4GmeRO7gaprZ8TRp5+PxaB6NZp1eCWHbeQOqHvfLep+sNbdeNp3EZznhcF6sJ9l41vbZ8JvIB2fP08lkgryxf3X9cBpfjAaz8fGtF/nJ6jlxLsV1sU7nk2ISekM88M6fu3F82w2/2LPw6mdn1pp3hpdocB4OmqKdzBFni4v7G0m8s1W8ZBPXOz25+jn++Zu1m8X9t6ffHkPTi7Qz/eY9rO9/+RfFucPlFye+85xbeLB/HPOHbDEe3f7qvda0XcOusZKEOL+7ByyrpaZHNDRO1byQ/FxetIUk1qx0DTKtUUIClWZf79LSEuRKgEgSqGFu1qfdtuM1u8Pv4enA9d32iTpW7qkTOu1u1+l23EqDNij2IA4YnRGdS6vshj+fA8TLQABNgFsFy/EChPlJxCGSyIjojTocjAqYMKXiLm0uFgkFlHHpuF4KzfvOukUKzk3jislres3DmQS+q93NHe2+AUwyAlrgNcOForiQqhmPqMhl6jYK1KCQqyuAaxUOvFanbQuyzFLQUO0lS/IUGtkiK1tji82vZyEsSuvNyaQ8eR8Wtv+t6oHySYh2ELqWY1BzhDeXkBO0q0I+Lvj7dsFV+DBPiD5gqqGSE7xBsvvplSeaIDVJVEV/BvGfmgy1+8Hb3+60PwFl7/ejTpQUZCttdZuqC0LJR7+a5iNqPDbyosjL+flaGrkKbyuFdO0YcK707WnCHoDadQj7oOulRr2Xubbv4svlgsYSSVgqthnl8oC3RQxCvy0idU7Whz5cdlKqvklYy/dsg1Q9QTTiT18pOMDaT5nH6mfFePI6rndibeVRdaoHhSR0rlf6Inn6gBSYqbBEKR/j28HfC/Be8l1j3eQai1RsusslfPzF0JLWMxHGLKcyGpqlYVtmS5zyKYPg1elNmFLKX+7mtfjwbr69HMVK8JbIrH3JfztbpKQLBlM/AUosPXOtnpoqOZ1vyfoLwDfK7nXC7vHJ0B96Ya3svlL21vCkbuBOJf035reWrZ7un4f+vw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950228A9BED7D2AE0401F0A079904DE</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZtU+o6EP7ur+jUjw6kLRWkA8ygyDn1ii8UPeoXJ6QLRNq0NGlBf/1NCkVA9HLuDEOb7Wb32Zc82QbHYWA5bc4hETRimttp6q/+kJgGNqFk4VG1ZNfkX71WkW9AhiNMRpYJVV1zOU/BZVxgJpq6ZZh2yTgtmfbAMJyK6Zh22ajVX3TtERIuTUuVsqFrizBg3MndNvU0YU6EOeUOwyFwRxDHa/euHanp4AKT3mosUeYOk9ZEiNhBiJR9IBAEpEyiEDXQlk7D545HxwyLNIGVT5839dXe+XxenlfKUTJGlmEYyKgjqeNzOj7WW0fFZvBdNoqW6wvMIkYJDugHVqB6ICaRr7WDcZRQMQm/MW0i01CmS7AgJWLa7FhHnw5ydAda2gKZcFziE2wWxvowggQYAe2h7zb148MquNw7SDDjoygJ+c767yAByyCIYvBLvIisQHe4xT3pajWAOC4jQcppBjeqTWJMgGt3CYzo4ppy2Xw+1/Lyawsuf7ToMiB/U5YG2sQqoaM92enQMXDxf2q2Wa+llUccpNDq+WJaA7vejfsfH70TOn2J/wgb3isTt5lD2FReglqXe7XebdZ1b602nT97t5aFHycZeP7trPY2ec4ugqC7eIJfo1/IPfmoLa6vH4fVp5cTPj2/OTm/Z9VZ3bwTXnTvGt1/nt03twvZab+fHv0Wc3tKJ/5V/XeMT8Dvp2RwTyo9dHXDxHRqXsVZt/tw/XLjLqLQ74xRirgdnPyJ2655WzNevNkdqn64MXqY94+eH0KUPQ/POvD4XhFdFnqXzc+YNmPYFhaU4KXDNyCiWKr2cDtaV9YLi5/pRUmoXxrlqk6sOIoLYEJvqV2KWpxUEhD1HVnM5bpbPzWsSsWsds461YrduTRsw+wabUlzdcO6rBUctESxA/EiYiOqfCmWXfbPzwBJ6HBgPiSlLErJBLj+g8UOFlhzWV8ejohxGESSxU1WmddqiT3E89OROU6G0wAHlVTMhK7dROKW3SbtkYBkm7srW9zdB0JjCorgVYdz2eJcyGTMcJaKwCxnuMwglVdAoljYseyzU8RpGAegoKIw8tMAyvEkzlOD+PJplTDhubR/OchP3reB7X4rciB1fKoUuIrlHGQdYc8lZBSBfB9wdTPgwnw79ak6YDKhIqFkiWT702efqAZZN4mM6PXCezUL3Gv1g7d/3Yl+AIV287F25Gd0w21xm8oLQtJHq6jmDJdn5TTL0rx+NUWNiTSPJEOayAOSSn57H0RTYGhtAh10vaxR73hey7fxpWLCPIEFhLLbtHx5wGzhAVezhSvPyeLQwWXLpcybgIXYJ7sI5AiiEP84pRCHKD0pvpOPeZT4n+XaY2vDj4xTDhSCsrFaqYvk/ZumIJE0SyXzRcmm8X0G9jnfFq6TvMYiZDcNUwHff9EUpTV1TEiUMuF29FywSbM5TvEeg/Op9MVMTuWru3nBv72bn3rXniS8EOtrXfrfyiWatwsBXY0AOZamvpCjpnTOxhu0vgL4hdmts3b9/LJT61jtLWaXRL9O4FYkrS/ir5KNnO6eh9a/</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F95023316D8D634DE0401F0A079902E7</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F95023316D8D634DE0401F0A079902E7</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083110</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F95023316D8E634DE0401F0A079902E7</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>f6fc7a63-faef-46c5-9b13-3c79410bac19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00006_FUNC_UVTC_UserName_RequestorUserNonCLG_active_RequesteeChild_pending_ResetPassword_(Negative)_403_FORBIDDEN_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for NonCLG"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - NonCLG"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","pending");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","FORBIDDEN_COORD");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0TpYxXikABNBEhpac+JRGkL9PpSGccBl8ROY4dLv37bgVCgtId9JCTkyXhmzczyspscJnHV8znHmSCMakGnpb/ZThQ1wkbDGFUjx3Bw5Bqj0cgy6q7jODaIbOCOdC3gPMcB5QJS0dKrwHIMUDMsZwiAZ1ueVa+c27VXXXvEGZehpUsF6NoiiSn3irQtPc+oxyAn3KMwwdwTyBv4N11PenqwxKS3myuURcKsPREi9UwTVUKMcByjCmKJ2TR3fJoh9wZkTKHIM7zOGfKWvt47n88rc7vCsrFZBQCYwDWlT8jJ+FRvn5SbcRjQiK3Wl5AyShCMySdUoG6wmLBQ8+Mxy4iYJD+EtkwLqNAGXiADWQ491c2vBAW6IyPtgMw4NPgEWmWwPo5whinC2kM/aOmnx01wtXeYQcojliV8b/13kDCd4ZilODR4WVmJ7viIB9rVbmLkBRTFOScz3FM0SSHCXLvLcEQWXcIl+UKuFePXFlz+SMkyjP5mLE1zG6uEbh7oToeMMRf/Z2bb81pFeYRxjts5unXvaL7sgqu08xI47zy9CExngGzQKiBsO69Abca9Xu+TdcOt9ablmfkUPIaZfeujx/wufyXzu+f3rHffPafz+AGE4ev5vSQ3j3vjRn/RnyTh2Quvp53X3tOIOkt/kU/nVeh2r/+hJ6yTTv1PeFZn06qdnHHLfkaDd+v+Mhv2PocvH2eBf58+Tqfdccat9+t0MJ2RJzq+HD1V3zuNOAbI7k5CHv2bv1ydPPU+3IA7/mIaPT081B24nLa+atquYddYSsIgH71jJMqlokfQ0a7lvKD4XV6UhYRGVLh6qdIoLjAVelvtUtLi5VKASOjJYa7W127NAo1G1fUbF9e23bkCDrCugQ9qrmsD/6LUoBWKPYiXjEZE5VIqu+LP7wBR4nFMQ5wZM5ajCeb6LxE7UEAtoH15OBjleMikirv1am0RYhClyIk/rbpg9XNWExNd6zFxS28zPxI421Vue0e5+xiRlGAl74rfXBKcC9mKDzjLRWxVZrBCcS4vgExpsFd1zmsmJ0kaYwXUTFiYx7iSTtKiMSZf/VcNiHhh7V8Ni3P3Y1n738oOSJ+QKAeuarnAcor4wBUEykJ+Lri+XXAZ3s9Doo6XbKfICFoh2f30xRJFjw1FZEVvl4M3q8S9cT96+/ed5i+gzP1+bBKFM7KVtrxL5fUgxaNdTvMDVj4q+WyWF/NrKGHMZHhT6qNlDjDKpboth2yKqbkJYR51uWxQ72Xe2Hfx5WJCBwIKnEi2acXyiJfFAHP1sgjkKVkc+2zZSSn7JvBCHLJdxvIBohD/+kZBHlJ+0nwn/+YsC7/GdSDWVh5Zp1RcQehYrdQ1svyBFIjJsETqHsu2gx8KcCj5rnHT5A0WIdk0ygX++YumBK2lQ4RYTkXQ0QvDtsgWOMUyxd6X07cwhZCvb+YF//Fmfr7pDqTcJVDf+JL/djZIQReEdfUAKLC09IV8aMrkdLwl6muA33TdrXbqF8D36875jq67DbBp4E4l7W/m75atnu6fh/Yf</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F951092D6B0AA648E0401F0A05993970</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F951092D6B0AA648E0401F0A05993970</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95107729A7BF33DE0401F0A059930AB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95107729A7BF33DE0401F0A059930AB</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083115</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95107729A7CF33DE0401F0A059930AB</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083121</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083121</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083121</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0TpYxXikABNBEhpac+JRGkL9PpSGccBl8ROY4dLv37bgVCgtId9JCTkyXhmzczyspscJnHV8znHmSCMakGnpb/ZThQ1wkbDGFUjx3Bw5Bqj0cgy6q7jODaIbOCOdC3gPMcB5QJS0dKrwHIMUDMsZwiAZ1ueVa+c27VXXXvEGZehpUsF6NoiiSn3irQtPc+oxyAn3KMwwdwTyBv4N11PenqwxKS3myuURcKsPREi9UwTVUKMcByjCmKJ2TR3fJoh9wZkTKHIM7zOGfKWvt47n88rc7vCsrFZBQCYwDWlT8jJ+FRvn5SbcRjQiK3Wl5AyShCMySdUoG6wmLBQ8+Mxy4iYJD+EtkwLqNAGXiADWQ491c2vBAW6IyPtgMw4NPgEWmWwPo5whinC2kM/aOmnx01wtXeYQcojliV8b/13kDCd4ZilODR4WVmJ7viIB9rVbmLkBRTFOScz3FM0SSHCXLvLcEQWXcIl+UKuFePXFlz+SMkyjP5mLE1zG6uEbh7oToeMMRf/Z2bb81pFeYRxjts5unXvaL7sgqu08xI47zy9CExngGzQKiBsO69Abca9Xu+TdcOt9ablmfkUPIaZfeujx/wufyXzu+f3rHffPafz+AGE4ev5vSQ3j3vjRn/RnyTh2Quvp53X3tOIOkt/kU/nVeh2r/+hJ6yTTv1PeFZn06qdnHHLfkaDd+v+Mhv2PocvH2eBf58+Tqfdccat9+t0MJ2RJzq+HD1V3zuNOAbI7k5CHv2bv1ydPPU+3IA7/mIaPT081B24nLa+atquYddYSsIgH71jJMqlokfQ0a7lvKD4XV6UhYRGVLh6qdIoLjAVelvtUtLi5VKASOjJYa7W127NAo1G1fUbF9e23bkCDrCugQ9qrmsD/6LUoBWKPYiXjEZE5VIqu+LP7wBR4nFMQ5wZM5ajCeb6LxE7UEAtoH15OBjleMikirv1am0RYhClyIk/rbpg9XNWExNd6zFxS28zPxI421Vue0e5+xiRlGAl74rfXBKcC9mKDzjLRWxVZrBCcS4vgExpsFd1zmsmJ0kaYwXUTFiYx7iSTtKiMSZf/VcNiHhh7V8Ni3P3Y1n738oOSJ+QKAeuarnAcor4wBUEykJ+Lri+XXAZ3s9Doo6XbKfICFoh2f30xRJFjw1FZEVvl4M3q8S9cT96+/ed5i+gzP1+bBKFM7KVtrxL5fUgxaNdTvMDVj4q+WyWF/NrKGHMZHhT6qNlDjDKpboth2yKqbkJYR51uWxQ72Xe2Hfx5WJCBwIKnEi2acXyiJfFAHP1sgjkKVkc+2zZSSn7JvBCHLJdxvIBohD/+kZBHlJ+0nwn/+YsC7/GdSDWVh5Zp1RcQehYrdQ1svyBFIjJsETqHsu2gx8KcCj5rnHT5A0WIdk0ygX++YumBK2lQ4RYTkXQ0QvDtsgWOMUyxd6X07cwhZCvb+YF//Fmfr7pDqTcJVDf+JL/djZIQReEdfUAKLC09IV8aMrkdLwl6muA33TdrXbqF8D36875jq67DbBp4E4l7W/m75atnu6fh/Yf</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F951092D6B0AA648E0401F0A05993970</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbU+JKEH73V6TioxVyIYCkhKoosMYD6gKyqy/WMOmEWZMJZCaA/vozE0wERA97qiyp6fR0f32Zr/uCoTiyHJcxSDlJqOJ1WupzdRpMAdVszTSsqmb7CDQEgSH+1c5RUAvOzWpNVTzGMvAo44jylmoZpq0ZNc20x4bhVE3HMip1y35SlQmkTJgWKhVDVdZxRJmTu22pWUqdBDHCHIpiYA7Hzsgd9B2h6aACk9q+2KDMHabtGedzR9dxxQcMUYQrOIn1C31H58JnzoiEFPEshXefPmup73dXq1VlVa0kaahbhmHoRlMXOj4j4anaPikug+/RINmcrxBNKMEoIm9IghoAnyW+4kZhkhI+i78wbeqmIU1rsMYaNm16quofDnJ0R1raAZkypLEZMgtjQwggBYpBeRh6LfX0uApu7o5TRFmQpDHbO/8dJKBLiJI5+BorIivQHW/xQLraF4Adj+IoY2QJt7JN5ggDU+5TCMi6T5hoPp8pefmVNRN/pOgywH9Tlgt9G6uArh/IToeEwPj/qdl2vTZWJijKoM2acWiE0eNVGsNt/foarlP+svjVX7FBK4ewrbwBVZb7/bzfrGVvvV+6/PEybj6cxb/HZw+j+yQYvPmLm8Hq2vSmd5PJ7cs/TwTOGo1Aj4dvaffV6t7ytRV2FmgyyUjYvIteTXua/fKW9h96Ml6sBrNaX7dsHqbTand+CTXaJW73ZjA7fzSfzF7P/2mOHrtn42k3jFD/8ee43+3gRt3j6/htMBvSxfTuKR0P5v5JIx5A7+aHdR+uqu6fkVUfuq2PmLZj2BUWlDDKpn8A8+Io28PrKD1RL8S/pxcpIb4W5KrOXHIU40C52pa3JLU4mSAg4juimJtzr1kzjYZr9Bpm12zUza5hG2bPcI1Gs1mr2W7BQRsUexCvEhoQ6Uuy7KZ/vgeIY4cB9SHVlkmGZ8DUbyx2EEeKR4ficSSUwTgRLL5M1qJwUViFhmEmVbrgVfLm+7NAVW4TfkfvUjfgkO5Sd3WHuoeAyZyA5HfZ4Ex0OOMiFwu0zHhkVpaoQiETEyCVJOxY9nlNZySeRyCR6nHiZxFU5rN5nhmdbX4tDWGWS4fdcf7wvoxr/1uRAqHjE6nAZCyXIMoIB2aQWQTydcD17YAL827mE/m+RD55SvAGye6njzaR/VH2iIjo+Wr0bBa4S/Wjr3++qX8DSt/PR+nIX5Itt8UwFfNBsEe7qOYCVRaVbLnM8vo1JDOmwrwuCNLUR4AzQW+v4+QFqF6a0I+aLiXqPc+lfBdfxmd0xBGHWHSbkh+PWC1GwORq4Ylnsj52b9lxKfLGYc0Pya4isYFIxN8uKdjBUk+I78XPKkn9j3IdsLXlR8Qp9glOaChPco68ftEUOBFmiSC+JN02fsjAIee7wjLJJRYuummacfj6iyIZraUijJOMcq+j5oJtls1x8tc5OB9Kn8zkTP4+mtfsy9H8e9AfCb6LkVrqkv9W1kjeLhhUuQHkWFrqWmyawjkNt1j9HeAnYm9anfql4bp1+7wk9lqzWW02jDKBO5G0P4k/S7Zyuv8e2v8C</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F95107A0F71E1761E0401F0A0799554A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F95107A0F71E1761E0401F0A0799554A</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083119</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F95107A0F71F1761E0401F0A0799554A</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>F95107729A7BF33DE0401F0A059930AB</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZtc6I6FP6+v4JhP2MCChamOmO13cvWrtvqbbv9shNDwFwhoSQg9tffgMWqtb3unXHGyeHknOe85DnnXKAktryBECSTlDPNH/X03w4K50G72zFCFxOjE8IzY96F0EDm2dwhsO2QwNY1X4ic+ExIxGRPt6DZMaBtmJ0ZhF7b9Cy7Be2zJ127J5lQppVKC+pamcRMeLXbnp5nzONIUOExlBDhSexNBzdjT2l6qMGk9883KGuHWX8hZeoBgFsBwSSOcQvzBJyDPZ3zQHhTGjEk84y8+gxET3+9u1qtWqt2i2cRsCCEALpA6QSCRl/1/pfmMgl8FvLNeYgYZxSjmL6gCtQNkQseaIM44hmVi+QD0yYwYWXaICU2sNlhX3Xw5qBGd6KlPZCZQIZYILMxdkdCkhGGifb3nd/Tv55Wwc3dWYaYCHmWiIPzn0EirCAxT0lgiCayBt3pFo+kq39OsOczHOeCFuRH1SYpwkRoPzMS0nJMhWq+QGh1+bVSqB9tuozgPynLOdjFqqCDI9kZ0YgI+X9qtluvjZV7FOekz8mvjrN2Xp6W84f4dnX7EF1Fg5RdRd/8Xg1hV3kDalvu1/Nhs2576/XS48PFdZiUY/sfJ4qe3HTmJKU9yebuY2H62csT8Z+7l1ejziV4+X4fgTQQXC67EzD6/jCA2G1H86mVzm6d23SZf+G/ivHKhDdFiC+d0M2G7BqYdGaXJU2/hQVYpXKCx9/xZPG0tNFj95tzYU3zv/iYMVcun9f3D9PJNWkvh/fg5ot9twrxegVBG47a109SOLz3FtNuDPvChhKm+fwfgmVzrNrDH2lXql5Ifk4vlYQGRliremnFUUISJvV+dauiFi9XBEQDTxVzc75ybWhZw65rnZm22Tm7hB1oXsEB7LoutEYXDQdtUBxAHHIW0spXxbKb/vkcIE48QVhAMqPgOV4QoX9icYQk0nx2px4HZ4LMuGJxMyV2uQwX6wWNkMnCsKTPvAhYInTtB5cTNskGoSTZPne397j7jmCaUlIRfNXhQrW4kCoZz6jIZWy2CtRiJFcjIKtY2LM6ZzYQNEljUkEFCQ/ymLTSRVqnBojNv2UgLGrp3eWsfnkfBnb4rcmB0glopSCqWC6IqiM5MoTMJpCPA3Z2A27MD/KAVg9MJVRmFG+Q7H9665OqQbZNoiL6PZz+NhvcW/WTr7+/CT4BBQ7zsXUUFHTHbTNN1YBQ9NFvqvmMWs+tvCjyun7dihozZR4ohjTBlOBc8dt6xpeEga0JcNJ42aI+8LyV7+PL5YJNJZIkUd2m1ccTdospEdVu4at3Up66uOy5VHmTpJTHZMNYrSAV4k+3FOzhSk+Jf6q/Fc+Ct3IdsbXjR8WpFgpJWVSdqkGy/qApMFdmqWI+nu0aP2bgmPN94TbJWyxSddM8l+TjL1pFaT0dYcxzJv2RXgt2abbGKdcp8d6U3pmpqfx1Npfiw9n8eDOeKsJLkL7Vpf+tbNC6XTDRqxWgxtLTS7VqKucs2qH1V4AHzG5C1xo5F3AwcHaY3XbdttuF2wTuRdJ/J34v2cnp4Xvo/ws=</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>F95022C792815148E0401F0A079902DB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:F95022C792815148E0401F0A079902DB</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20140513_083121</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>F95022C792825148E0401F0A079902DB</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00007_FUNC_UVTC_UserName_RequestorUserChild_active_RequesteeOtherUser_pending_ResetPassword_(Negative)_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for FAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - FAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","pending");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj1XIhWuigpRCadPbcqDbbvelMs4Q3CZ2iB2g/fXHDg0FSnvYIyEhT8Yz38x8/uwTjpLY8XzOIROEUS3otfWnRstxJlYLjIYNjlFrVMFwnWrNGI9bVhOPXbBsV9cCznMIKBeIirbuWHbNsOqGXbuzLK9qe06z4jZbf3TtHjIuQ0uXiqVryySm3CvStvU8ox5DnHCPogS4J7A38m+uPenpoRKT3jlZoSwSZp2pEKlnmrgSAoY4xhXMEvPE3PI5Cbk3IhFFIs/gPWfI2/r73sViUVlUKyyLTMeyLNNyTekTchId6Z0f5WYIAzphq3UXUUYJRjF5QwrUDYgpCzU/jlhGxDT5IrRt2pYKbcASG9iu0SPd/EhQoDsw0hbIjCODT5FdBhvCBDKgGLRfw6CtHx02wdXeuwxRPmFZwnfWfwcJ6BxilkJo8LKyEt3hEfe0q3MC2AsojnNO5nCraJIiDFwbZDAhy2vCJflCrhXj15Zc/kjJMsB/M5YTcxOrhG7u6U6PRMDF/5nZ5rxWUe5RnEMH4kEaPAfCGl2N/MvjriTwafT7XPDjRbuAsOm8ArUe9/t6l6xrbr1vGlcJanZ/LdKbP3AHwAdhcBn/erytz9HjC368gNntcX15fOw3LoOGeLiop9f9i8FDHV+KBueLaf85sB9SuKV9V/xIordHyxzwe5a81U7z+cXZ4w21owHrUnH/EMTP9+l02Kr6jTxgN777yof5jEXdWdTrD8fR+VW8cAdo0Tt3aW354yVL/wkmtasrFtYv8+vxpdlqf9S0WcO2sZSEUT5+BizKpaJH0NP6cl5IfC8vykJCY1K4eqnSKC6ACr2jdilp8XIpQCT05DBX675btxyn12j6p3a/f9o9s2qW3bd8q+m6lnNmlxq0QrEDscvohKhcSmVX/PkeIE48DjSEzJizHE+B699E7CGBtIAO5eFglMMdkyq+fE1neI6qWbU6tVtJ64WHlKRvNaprt0z8pD8zfyIg25bu6pZ0DwGTlIDSd0VwLhnOhezFDM1zEduVOapQyOUNkCkR9pxaq25ykqQxKKRmwsI8hko6TYvOmHz17xgI88I6PLsrDt6Xde1+K1sgfUKiHLiq5RTkGGHPHWSXhXxdcGOz4DK8n4dEnS/ZT5ERvEKy/emDJoofa47Iip66o6c1F9buB2//vNP8BpS52491onBONtKWl6m8H6R6dMppzlBlVsnn87yYX1MpYybDm1IgbXMEOJfy9nrHXoCa6xDmQbfLGvVO5rV9G18upnQkkIBEsk0rlgc8LUbA1dMikMdkeei7ZSul7JuApdhn68byBaIQf/tIwR5WftI8kH8LloUf49oTayOPrFO+JwShkVqpe+T1C1JgJsMSKXws2wy+L8C+5NvGdZPXWIRk0zgX8PUXTSlaW0cYs5yKoKcXhk2VLXCK1xS8D6dPYQolf7+al/zLq/n3zfVI6l2C9LUv+W9ngxR0waCrF0CBpa0v5UtTJqfRhqq/A/ws7C3f7fb8Zs/xt4S91jtbN3Crks4n82fLRk93z0PnXw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950228A9CDA7D2AE0401F0A079904DE</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950228A9CDA7D2AE0401F0A079904DE</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95022D67AB1FFBCE0401F0A079902E1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95022D67AB1FFBCE0401F0A079902E1</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083126</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95022D67AB2FFBCE0401F0A079902E1</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083133</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083133</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083133</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>F95022D67AB1FFBCE0401F0A079902E1</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj1XIhWuigpRCadPbcqDbbvelMs4Q3CZ2iB2g/fXHDg0FSnvYIyEhT8Yz38x8/uwTjpLY8XzOIROEUS3otfWnRstxJlYLjIYNjlFrVMFwnWrNGI9bVhOPXbBsV9cCznMIKBeIirbuWHbNsOqGXbuzLK9qe06z4jZbf3TtHjIuQ0uXiqVryySm3CvStvU8ox5DnHCPogS4J7A38m+uPenpoRKT3jlZoSwSZp2pEKlnmrgSAoY4xhXMEvPE3PI5Cbk3IhFFIs/gPWfI2/r73sViUVlUKyyLTMeyLNNyTekTchId6Z0f5WYIAzphq3UXUUYJRjF5QwrUDYgpCzU/jlhGxDT5IrRt2pYKbcASG9iu0SPd/EhQoDsw0hbIjCODT5FdBhvCBDKgGLRfw6CtHx02wdXeuwxRPmFZwnfWfwcJ6BxilkJo8LKyEt3hEfe0q3MC2AsojnNO5nCraJIiDFwbZDAhy2vCJflCrhXj15Zc/kjJMsB/M5YTcxOrhG7u6U6PRMDF/5nZ5rxWUe5RnEMH4kEaPAfCGl2N/MvjriTwafT7XPDjRbuAsOm8ArUe9/t6l6xrbr1vGlcJanZ/LdKbP3AHwAdhcBn/erytz9HjC368gNntcX15fOw3LoOGeLiop9f9i8FDHV+KBueLaf85sB9SuKV9V/xIordHyxzwe5a81U7z+cXZ4w21owHrUnH/EMTP9+l02Kr6jTxgN777yof5jEXdWdTrD8fR+VW8cAdo0Tt3aW354yVL/wkmtasrFtYv8+vxpdlqf9S0WcO2sZSEUT5+BizKpaJH0NP6cl5IfC8vykJCY1K4eqnSKC6ACr2jdilp8XIpQCT05DBX675btxyn12j6p3a/f9o9s2qW3bd8q+m6lnNmlxq0QrEDscvohKhcSmVX/PkeIE48DjSEzJizHE+B699E7CGBtIAO5eFglMMdkyq+fE1neI6qWbU6tVtJ64WHlKRvNaprt0z8pD8zfyIg25bu6pZ0DwGTlIDSd0VwLhnOhezFDM1zEduVOapQyOUNkCkR9pxaq25ykqQxKKRmwsI8hko6TYvOmHz17xgI88I6PLsrDt6Xde1+K1sgfUKiHLiq5RTkGGHPHWSXhXxdcGOz4DK8n4dEnS/ZT5ERvEKy/emDJoofa47Iip66o6c1F9buB2//vNP8BpS52491onBONtKWl6m8H6R6dMppzlBlVsnn87yYX1MpYybDm1IgbXMEOJfy9nrHXoCa6xDmQbfLGvVO5rV9G18upnQkkIBEsk0rlgc8LUbA1dMikMdkeei7ZSul7JuApdhn68byBaIQf/tIwR5WftI8kH8LloUf49oTayOPrFO+JwShkVqpe+T1C1JgJsMSKXws2wy+L8C+5NvGdZPXWIRk0zgX8PUXTSlaW0cYs5yKoKcXhk2VLXCK1xS8D6dPYQolf7+al/zLq/n3zfVI6l2C9LUv+W9ngxR0waCrF0CBpa0v5UtTJqfRhqq/A/ws7C3f7fb8Zs/xt4S91jtbN3Crks4n82fLRk93z0PnXw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950228A9CDA7D2AE0401F0A079904DE</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3vr4iyj6vgJISSRAUpC+1utNDSQru996VyHQfMJjbETgj99WuHhgKlveyVqiJPxjNnPnxmLjhME9sPOMeZIIxqYb+jP7WcZ6vZ9KDRRpFrOC0UG67blP8sz45i97l97ri6FnKe45ByAano6LZpOYbZMixnYpp+0/KbdsNruf/q2gPOuDQtVRqmrpVpQrlfue3oeUZ9BjnhPoUp5r5A/jgYDnyp6cMak9692KCsHGbdmRALHwDUiDDCSYIaiKXgAuzpXETcH5MphSLP8KvPiHf017ur1aqxajZYNgW2aZrA9IDUiTiZftG7Z/VlHIU0ZptzD1JGCYIJeYEK1BCLGYu0IJmyjIhZ+oFpC1imMm3gEhnIcugXHbw5qNCdaGkPZMahwWfQqo3d4RhnmCKs3d+FHf3LaRXc3J1kkPKYZSk/OP8dJEwLnLAFjgxeR1ajO93ikXR1LzDyQ4qSnJMCX6s2WUCEuTbKcEzKAeGy+SKuVeXXSi7/SN1lGP1NWS7ALlYJHRzJTp9MMRf/p2a79dpYeYBJjrtF/yaDw+XjUNxOI2rZo0fvel0sxs1Z0Kkg7CpvQG3L/Xo+bNZtb71eurZGa9eNvg4mDy9g/tMqU/Dj2+35kt7+8NL21T9Dt3cD8CwOMmc9undefo8fB+iX+DlouuXg/vGyxz2aLYPxA4vnZzG7HYxA84UHE/PccybJTfB1zvP4+ZclBmT1cDeN587lNSl/FmsoImCLm2UyioomJaD1nZLb9ZCHc9Nmy1V5do+S7+etgWOHSdmKZwluhZ23mHZj2BfWlDDOn+cYifqo2iPsa1eyXlB8Ti9KQiIjrlT9heIoLjAVelfdUtTi55KASOTLYm7OV17LtO1e27MDq2U57qXpmNaVGZhtzzPt/reagzYoDiD2GI2J8qVYdtM/nwNEqc8xjXBmFCxHM8z1Tyz2oYBaSO/k42CU4wmTLM6Ey9yXzFnOC2jNqORnFFNizSJdu2biht5kQSxwtk/dzT3qvsOILAhW/K4anMsO50LmYgmLXCRWo4ANinM5ATJFwr7tuC3ASbpIsEIKUhblCW4sZosqM4Bvfm0DIl5J7y4n1cP7MK7Db3UKpE5ElAJXsXzDsoz4yAyy60A+Dvh8N+DafJBHRL0vmU+REbRBsv/prU1Uf2x7REb01Bs/WTXurfrJ19/fBJ+AAof52DqKCrLjth6mcj5I9ujW1VzCxrKRF0Ve1a+tmDGT5oEkSAuMMcolva0n7DemYGsCnDRdtqgPPG/l+/hyMaNjAQVOZbdp1fGE1WKMuVotQvlMylP3lj2XMm8Cl+KYrJfIDUQh/nRJQT5SelI8kj8rlkVv5Tpia8ePjFPuE4LQqTqpObL+oCkQk2aJJD6W7Ro/ZuCY833hNslbLEJ203Mu8MdfNMVoHR0ixHIqwr5eCXZZtsIp1gvsvym9M1Mx+etoLvmHo/lxOBhLvkuhvtUl/61skKpdENbVBlBh6eil3DSlczrdYfVXgO+J3Q28Xj9o9+1gj9id/uU2gXuRdN+J30t2cnr4Hrp/AA==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F95022C792A15148E0401F0A079902DB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F95022C792A15148E0401F0A079902DB</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083129</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F95022C792A25148E0401F0A079902DB</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH6sQBwIkUUFKgXaj2xa20G7Zl8o4Dnib2Gns8NFff+3QpEBpL3slJOTJeObMzPGxzzlM4rrnc44zQRjVgn5HfwqbTRxFLcdooygy7NCyDGfmuoZjh7NGG7Rsx3V1LeA8xwHlAlLR0evAsg3QNCx7AoDXsLxGqwaa7d+69oAzLkNLlxrQtXUSU+4VaTt6nlGPQU64R2GCuSeQN/Zvrj3p6cESk94936IsEmbdhRCpZ5qoFmKE4xjVEEvMc3PP5zzk3pjMKRR5ht9yhryjv+1drVa1VaPGsrlZBwCYwDWlT8jJ/Lve/VZuxmFAI7Zd9yBllCAYk1eoQN1gsWCh5sdzlhGxSD4JbZkWUKENvEYGsmz6XTffExToToy0BzLj0OALaJXB7nCEM0wR1u7vgo7+/bQJbvdOMkh5xLKEH6z/DhKmSxyzFIcGLysr0Z0e8Ui7uucYeQFFcc7JEt8qmqQQYa6NMhyR9TXhknwh14rxa2suf6RkGUZ/M5ZzcxerhG4e6U6fzDEX/2dmu/PaRnmAcY67i2ZzOmCPt8PXpBed5aN78bhwJzS5SqadAsKu8xZUNe639SFZK269bYL1aepcBs16/LAKzbE9jcK70HlsEjDpkZfZ1at4uMrW6fX09Tb8EUwFZTyob66SM7sVE2DfR00w4m2cZP6D/633kI7O1s/Li0EIrrP+2eBnC52NrthwYKZnuDfdNEbYuXw26fSXdcuCXxe/B/3ZjeOPzB/3l8/Imv8yh2Dwcz4h8eTbn2G6+mcyuAoHr4uEOZse+9l5r2m3hn1jKQnjfPYHI1EuFT2CvnYp5wXF1/KiLCQ0osLVS5VGcYGp0Ltql5IWL5cCREJPDnO7vnSbFmg7Dafdt4Dl2gNgA+sS+KDpug3gW6UGbVEcQOwxGhGVS6nslj9fA0SJxzENcWYsWY4WmOtfROxDAbWA3snDwSjHEyZV3LIabMlEIn8pSFubnK2eM/ramunaLRNDOsz8SOBsX7obe9J9hxFJCVb6rgjOJcO5kL14gctcxFZtCWsU5/IGyJQIe3XbaZqcJGmMFVIzYWEe41q6SIvOmHz7Xzcg4oX1bjApDt6ndR1+K1sgfUKiHLiq5QLLMeIjd1C9LOTzglu7BZfh/Twk6nzJfoqMoC2S/U/vNFH8qDgiK3rqjZ8qLlTuJ2//uNP8ApR52I8qUbgkO2nLy1TeD1I9uuU0X2DtpZYvl3kxv7ZSxkyGN6VAWuYYo1zK22bCnjE1qxDmSbdLhfogc2Xfx5eLBR0LKHAi2aYVyxOeFmPM1dMikMdkfeq7ZS+l7JvAa3HM1ovlC0Qh/vKRgjyk/KR5JP9WLAvfx3Uk1k4eWad8TwhC52ql7pHNJ6RATIYlUvhYthv8WIBjyfeNVZMrLEKyaZYL/PkXTSlaR4cIsZyKoK8Xhl2VLXCKTYq9d6cPYQolf7ua1/zTq/nx5nos9S6BeuVL/tvZIAVdENbVC6DA0tHX8qUpk9P5jqq/ATwQdlCvO77b6/vtft2vhL3tusDuD6oG7lXS/WD+aNnp6eF56P4L</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>F951078387D10194E0401F0A059930A1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:F951078387D10194E0401F0A059930A1</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20140513_083133</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>F951078387D20194E0401F0A059930A1</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5964f10a-b509-40e9-862f-fa1b94ce9895</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7aaed2f-7952-4584-a739-c774cb776a89</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f18fd18e-7fe3-432f-9d31-a8f2e7d96e8b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00008_FUNC_UVTC_UserName_RequestorUserCLG_active_RequesteeChild_blocked_ResetPassword_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH6uQC+GSqCBx1cm2tF2g3d2+rIwzgCmx09iBdH/9sUOTAqU97JGQkCfjmW9mPn/2JUfR2vE7nEMiCKNa0G/pv5uO16hb84bheIAMF1l1Y+badQM367OmM2/as5mnawHnKQSUC0RFS3cs2zWsmmG7U8vyq7bv2hWrZj3q2gMkXIaWLhVL17JoTbmfp23paUJ9hjjhPkURcF9gf9IZXfvS00cFJr19uUOZJ0zaSyFi3zRxJQQM6zWuYBaZl+aBz2XI/QlZUCTSBF5zhrylv+7dbreVbbXCkoXpWJZlWp4pfUJOFl/19pdiM4QBnbPduocoowSjNfmDFKgRiCULtc56wRIiltEHoW3TtlRoAzJsYNulX3XzLUGO7sxIByATjgy+RHYRbAxzSIBi0O7HQUv/et4Ed3unCaJ8zpKIH63/DhLQDaxZDKHBi8oKdOdHPNGu9iVgP6B4nXKygRtFkxhh4NpdAnOSXRMuyRdyLR+/lnH5IwXLAP/NWC7NfawSunmiO32yAC7+z8z257WL8oDWKbQXk8ZsSasP9zfPZFa9yrLMG/y8r827o1Erh7DvvANVjvt1fUzWkluvm7La4w+I2cVoOHjsNweRCOq96cDr3dSti9oqvhh86we/HNJA91YQ3PZ+dKg3xnfDkWfZ0+t0bF48PNvV3kt3+eup+eVP/Yply+HKnPx4RMuL707feXr6OWQdN7gya1139Q0eO2z2DcMvjp+sP9uHSPTINe7HnYhuvz/i+WhyO3HRjXs9/vLP7OI++idOr5JxklbZ4G711Hqrab+GQ2MhCZN0tgIsiqWiR9DXhnJeSHwuL8pCQmOeu/qx0igugAq9rXYpafFTKUAk9OUwd+uhV7Mcx7N61XrD7nb7A8u17KHVsWqeZ3meXWjQDsURxB6jc6JyKZXd8edzgDjyOdAQEmPDUrwErn8SsY8E0gI6loeDUQ5TJlXcJvZmlcUJ4fM0XiUOqUfIobC1de2GiVt6m3TmApJD6a4eSPcYMIkJKH1XBOeS4VzIXjyjTSrWdmWDKhRSeQMkSoR9x23WTE6ieA0KqRmxMF1DJV7GeWdMvvt3DIR5bh0PpvnB+7Cu429FC6RPSJQDV7V0QY4RTtxB1aKQjwuu7xdchO+kIVHnS/ZTJATvkBx+eqOJ4kfJEVnR797kd8mF0v3s7e93mp+AMo/7USYKN2QvbXGZyvtBqke7mOYzqjxX0s0mzefXUMqYyPCmFEjbnABOpby9TNkTULMMYZ51u5SojzKX9kN8qVjSiUACIsk2LV+e8bSYAFdPi0Aek+zcd8tBStk3AZk4Zeut5QtEIf70kYJ9rPyk+U7+bVkSvo3rRKy9PLJO+Z4QhC7USt0jLx+QAjMZlkjhY8l+8FMBTiU/NJZNLrEIyaZZKuDjL5pStJaOMGYpFUFfzw37KpvjFC8x+G9O78LkSv56NWf8w6v55+h6IvUuQnrpS/7b2SA5XTDo6gWQY2npmXxpyuR0safqrwDfCXu15jn9Wsfuus6hsDdqZQMPKmm/M7+37PX0+Dy0/wU=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95023592D5A1B42E0401F0A05990975</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95023592D5A1B42E0401F0A05990975</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F9502290C3671BBDE0401F0A05990991</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F9502290C3671BBDE0401F0A05990991</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083139</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F9502290C3681BBDE0401F0A05990991</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083143</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083143</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083143</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>F9502290C3671BBDE0401F0A05990991</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH6uQC+GSqCBx1cm2tF2g3d2+rIwzgCmx09iBdH/9sUOTAqU97JGQkCfjmW9mPn/2JUfR2vE7nEMiCKNa0G/pv5uO16hb84bheIAMF1l1Y+badQM367OmM2/as5mnawHnKQSUC0RFS3cs2zWsmmG7U8vyq7bv2hWrZj3q2gMkXIaWLhVL17JoTbmfp23paUJ9hjjhPkURcF9gf9IZXfvS00cFJr19uUOZJ0zaSyFi3zRxJQQM6zWuYBaZl+aBz2XI/QlZUCTSBF5zhrylv+7dbreVbbXCkoXpWJZlWp4pfUJOFl/19pdiM4QBnbPduocoowSjNfmDFKgRiCULtc56wRIiltEHoW3TtlRoAzJsYNulX3XzLUGO7sxIByATjgy+RHYRbAxzSIBi0O7HQUv/et4Ed3unCaJ8zpKIH63/DhLQDaxZDKHBi8oKdOdHPNGu9iVgP6B4nXKygRtFkxhh4NpdAnOSXRMuyRdyLR+/lnH5IwXLAP/NWC7NfawSunmiO32yAC7+z8z257WL8oDWKbQXk8ZsSasP9zfPZFa9yrLMG/y8r827o1Erh7DvvANVjvt1fUzWkluvm7La4w+I2cVoOHjsNweRCOq96cDr3dSti9oqvhh86we/HNJA91YQ3PZ+dKg3xnfDkWfZ0+t0bF48PNvV3kt3+eup+eVP/Yply+HKnPx4RMuL707feXr6OWQdN7gya1139Q0eO2z2DcMvjp+sP9uHSPTINe7HnYhuvz/i+WhyO3HRjXs9/vLP7OI++idOr5JxklbZ4G711Hqrab+GQ2MhCZN0tgIsiqWiR9DXhnJeSHwuL8pCQmOeu/qx0igugAq9rXYpafFTKUAk9OUwd+uhV7Mcx7N61XrD7nb7A8u17KHVsWqeZ3meXWjQDsURxB6jc6JyKZXd8edzgDjyOdAQEmPDUrwErn8SsY8E0gI6loeDUQ5TJlXcJvZmlcUJ4fM0XiUOqUfIobC1de2GiVt6m3TmApJD6a4eSPcYMIkJKH1XBOeS4VzIXjyjTSrWdmWDKhRSeQMkSoR9x23WTE6ieA0KqRmxMF1DJV7GeWdMvvt3DIR5bh0PpvnB+7Cu429FC6RPSJQDV7V0QY4RTtxB1aKQjwuu7xdchO+kIVHnS/ZTJATvkBx+eqOJ4kfJEVnR797kd8mF0v3s7e93mp+AMo/7USYKN2QvbXGZyvtBqke7mOYzqjxX0s0mzefXUMqYyPCmFEjbnABOpby9TNkTULMMYZ51u5SojzKX9kN8qVjSiUACIsk2LV+e8bSYAFdPi0Aek+zcd8tBStk3AZk4Zeut5QtEIf70kYJ9rPyk+U7+bVkSvo3rRKy9PLJO+Z4QhC7USt0jLx+QAjMZlkjhY8l+8FMBTiU/NJZNLrEIyaZZKuDjL5pStJaOMGYpFUFfzw37KpvjFC8x+G9O78LkSv56NWf8w6v55+h6IvUuQnrpS/7b2SA5XTDo6gWQY2npmXxpyuR0safqrwDfCXu15jn9Wsfuus6hsDdqZQMPKmm/M7+37PX0+Dy0/wU=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F95023592D5A1B42E0401F0A05990975</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZtb+I4EP6+vyLKfjwFJyEQEhWkFNoepe2yQFu6X1bGccBHYtPYCbS//uzQpEBpjz0JCXkynnnmxc/MGYdJbPsB5zgVhFGt32vrv3HoYjOqtwzHc5qGEyHX8LALDdvGtue6LasRYV3rc57hPuUCUtHWbdNyDLNhWM7ENP265TturVV3funaA065NC1VaqaubZKYcr9w29azlPoMcsJ9ChPMfYH8cXB740tNH5aY9M7ZFmXhMO0shFj5AKBaiBGOY1RDLAFnYE/nLOT+mMwpFFmK33yGvK2/3V2v17V1vcbSObBN0wSmB6ROyMn8u975Vl7GYZ9GbHvuQsooQTAmr1CBusViwUItiOcsJWKRfGLaApapTBt4gwxkOfS7Dt4dFOhOtLQHMuXQ4AtolcZGOMIppghr96N+W/9+WgW3dycppDxiacIPzn8GCdMcx2yFQ4OXkZXoTrd4JF2dM4z8PkVxxkmO71SbrCDCXBumOCKbG8Jl84VcK8qvbbj8kbLLMPqTspyBXawSOjiSnR6ZYy7+T81267W18gDjDHcem2njwpye1+tg9nD+dyNp5W4+GAXOeN4uIOwqb0FV5X47HzZr1Vtvl8Jzj7DVdAoGs15vur4bguTcCyZPf91YMW0Fyzq4H04ni+lyCQbe+v4Z0LF9YV3bi/7k6fHBQYE7NfHQfSBpd/Ztmcx+humADL36r6tZGA7mt+D+Z8heu4OluInHkDz1glb83HS8y8fRdb74Nbmar38+3l41HYfZo8EVaQ76XhctCfuWTGbdVhYv714vkvx6OprfPbXfY9qNYV9YUsI4m/2DkSiPqj36Pe1S1guKr+lFSUhoRIWqv1IcxQWmQu+oW4pa/EwSEAl9Wczt+dJrmLZlBxe9ZvPSM2XVHNO6NAPT9dTpsuSgLYoDiF1GI6J8KZbd9s/XAFHic0xDnBo5y9ACc/0Liz0ooNanI/k4GOV4wiSLL6N0lUeu12jFTRSar+56k4URy3Ttjokf9EcaRAKn+8xd32PuEUZkRbCid9XfXDY4FzIVzzDPRGzVclijOJMDIFUc7NtOqwE4SVYxVkBBwsIsxrXVYlUkBvDtv21AxAvp6GJSvLtPwzr8VmZA6oREKXAVyzmWVcRHRlC9DOTzgJu7AZfmgywk6nnJdIqUoC2S/U/vXaLao2oRGdHv7vi3VeKu1E++/vEm+AIUOMxH5SjMyY7bcpbK8SDJo1NW8xnWnmtZnmdF/VxFjKk0DyQ/WmCMUSbZ7WXClpiCygQ4abhUqA88V/J9fJlY0LGAAiey27TieMJmMcZcbRZ9+Uo2p64tey5l3gTeiGOybiwXEIX4yx0F+UjpSfFQ/q1ZGr6X64itHT8yTrlOCELn6qTGyMsnTYGYNEsk77F01/gxA8ec7wurJFdYhOymWSbw5180RWhtHSLEMir6Pb0Q7JJsgVO8rLD/rvTBTEHkb5N5wz+dzNPbm7GkuwTqlS75b2WDFO2C5F4q9QssbX0jF03pnM53SP0N4Aderzc8u9cIrHPHrni9IXndcxtVAvci6XwQf5Ts5PTwPXT+BQ==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950212AED66F905E0401F0A079905EF</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950212AED66F905E0401F0A079905EF</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083143</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950212AED67F905E0401F0A079905EF</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>f6fc7a63-faef-46c5-9b13-3c79410bac19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00009_FUNC_UVTC_UserName_RequestorUserNonCLG_active_RequesteeChild_blocked_ResetPassword_(Negative)_403_FORBIDDEN_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for NonCLG"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - NonCLG"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","FORBIDDEN_COORD");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH6uQK4VEBQkItHRpYYGFc/alMs4AbhOHxk6g/fVrh4YCpT3skZCQJ+OZby7+Zq4YikLLazAGCScxVbp+TX2ozAK3Aq6lzZwANGcGjladz1xthsx5uRogC88qqtJlLIUuZRxRXlMtw3Q0o6yZztgwPNv0ylbJqFq/VWUCCROmhUrJUJVNFFLm5W5rappQL0aMMI+iCJjHsTdq3PU8oemhApNav9qizB0m9SXnK0/XcSkADGGISziO9Cv9QOcqYN6ILCjiaQJvPgNWU9/urtfr0touxclCtwzD0A1XFzoBI4vvav1bcRmCLp3H23ML0ZgSjELyiiSoO+DLOFAa4SJOCF9Gn5g2ddOQpjXYYA2bDv2u6u8OcnRnWjoAmTCksSUyC2NDmEMCFIPya9itqd/Pq+D27jhBlM3jJGJH57+DBDSDMF5BoLEisgLd+RZPpKt+BdjrUhymjGRwL9tkhTAwZZDAnGx6hInmC5iSl1/ZMPEjRZcB/puyXOn7WAV0/UR2fLIAxv9PzfbrtbUyQWEK9VY1xENOgtn11OfJejW9Hfz813GzRdiu5RD2lbegduV+Ox8366633i797NvTu6dx66Id+ptyxXeXj8Tpt+3+TWUUVW8H4+WwkZGLC3fyFLwMDNu2dPjZG04nrHo9z4yLZkhGM6u99ucV+s0fpKbj6u3WzdQNf93O3Mla6G+a8bL948V/zO5hAI3Zim3Q/fjW7fQvDew2zZegd2O9Nn8ve2zSS5sXWf9u+Tv8dtO+DiP9R2e6usDpdNKyfFZ7j2k/hkNhQQmjdPYImBdH2R5dX+mIeiH+Nb1ICQm0ea7qrSRHMQ6Uq3V5S1KLlwoCIoEnirk9d9yyaVQqltvouB3b9tuGY5gdo2GUXdc2Gs2Cg7YojiC2Yjon0pdk2W3/fA0QRx4DGkCiZXGKl8DULyz6iCOlS4ficcSUwTgWLG4G7NXKLKtKsyfbfq4YVVhkIas4qnIf8z7tJ405h+SQuu0D6h4CJisCkt9lgzPR4YyLXDyjLOWhWcpQiUIqJkAiSdiznGpZZyRahSCR6lEcpCGUVstVnhmdbf8tDWGWS4ftcf7wPo3r+FuRAqETEKnAZCxNEGWEEzPIKQL5PODL/YAL8400IPJ9iXzyhOAtksNP720i+2PXIyKih9bowSxw79TPvv7xpv4FKP04HztHQUb23BbDVMwHwR71oprPqPRcSrMszetXkcyYCPO6IEhTHwFOBb29jOMnoPrOhH7WdNmhPvK8kx/iS/mSjjjiEIluU/LjGavFCJhcLbrimWzO3VsOXIq8cdjwU7JWKDYQifjLJQV7WOoJ8UD8reMkeC/XCVt7fkScYp/ghC7kSc6Rl0+aAsfCLBHEFyf7xk8ZOOX8ULhL8g4LF900Szl8/kWRjFZTEcZxSnnXV3PBPsvmOPnLCrx3pQ9mciZ/G80b9ulo/ueuNxJ8FyF1p0v+W1kjebtgUOUGkGOpqRuxaQrndLHH6m8Aj4jdsCyzY186zY5lODtir7iuYfnvj/kgkvoH8UfJXk6P30P9Dw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950221F364BF204E0401F0A079902D1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950221F364BF204E0401F0A079902D1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95107729AF9F33DE0401F0A059930AB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95107729AF9F33DE0401F0A059930AB</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083150</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95107729AFAF33DE0401F0A059930AB</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083157</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083157</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083157</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH6uQK4VEBQkItHRpYYGFc/alMs4AbhOHxk6g/fVrh4YCpT3skZCQJ+OZby7+Zq4YikLLazAGCScxVbp+TX2ozAK3Aq6lzZwANGcGjladz1xthsx5uRogC88qqtJlLIUuZRxRXlMtw3Q0o6yZztgwPNv0ylbJqFq/VWUCCROmhUrJUJVNFFLm5W5rappQL0aMMI+iCJjHsTdq3PU8oemhApNav9qizB0m9SXnK0/XcSkADGGISziO9Cv9QOcqYN6ILCjiaQJvPgNWU9/urtfr0touxclCtwzD0A1XFzoBI4vvav1bcRmCLp3H23ML0ZgSjELyiiSoO+DLOFAa4SJOCF9Gn5g2ddOQpjXYYA2bDv2u6u8OcnRnWjoAmTCksSUyC2NDmEMCFIPya9itqd/Pq+D27jhBlM3jJGJH57+DBDSDMF5BoLEisgLd+RZPpKt+BdjrUhymjGRwL9tkhTAwZZDAnGx6hInmC5iSl1/ZMPEjRZcB/puyXOn7WAV0/UR2fLIAxv9PzfbrtbUyQWEK9VY1xENOgtn11OfJejW9Hfz813GzRdiu5RD2lbegduV+Ox8366633i797NvTu6dx66Id+ptyxXeXj8Tpt+3+TWUUVW8H4+WwkZGLC3fyFLwMDNu2dPjZG04nrHo9z4yLZkhGM6u99ucV+s0fpKbj6u3WzdQNf93O3Mla6G+a8bL948V/zO5hAI3Zim3Q/fjW7fQvDew2zZegd2O9Nn8ve2zSS5sXWf9u+Tv8dtO+DiP9R2e6usDpdNKyfFZ7j2k/hkNhQQmjdPYImBdH2R5dX+mIeiH+Nb1ICQm0ea7qrSRHMQ6Uq3V5S1KLlwoCIoEnirk9d9yyaVQqltvouB3b9tuGY5gdo2GUXdc2Gs2Cg7YojiC2Yjon0pdk2W3/fA0QRx4DGkCiZXGKl8DULyz6iCOlS4ficcSUwTgWLG4G7NXKLKtKsyfbfq4YVVhkIas4qnIf8z7tJ405h+SQuu0D6h4CJisCkt9lgzPR4YyLXDyjLOWhWcpQiUIqJkAiSdiznGpZZyRahSCR6lEcpCGUVstVnhmdbf8tDWGWS4ftcf7wPo3r+FuRAqETEKnAZCxNEGWEEzPIKQL5PODL/YAL8400IPJ9iXzyhOAtksNP720i+2PXIyKih9bowSxw79TPvv7xpv4FKP04HztHQUb23BbDVMwHwR71oprPqPRcSrMszetXkcyYCPO6IEhTHwFOBb29jOMnoPrOhH7WdNmhPvK8kx/iS/mSjjjiEIluU/LjGavFCJhcLbrimWzO3VsOXIq8cdjwU7JWKDYQifjLJQV7WOoJ8UD8reMkeC/XCVt7fkScYp/ghC7kSc6Rl0+aAsfCLBHEFyf7xk8ZOOX8ULhL8g4LF900Szl8/kWRjFZTEcZxSnnXV3PBPsvmOPnLCrx3pQ9mciZ/G80b9ulo/ueuNxJ8FyF1p0v+W1kjebtgUOUGkGOpqRuxaQrndLHH6m8Aj4jdsCyzY186zY5lODtir7iuYfnvj/kgkvoH8UfJXk6P30P9Dw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950221F364BF204E0401F0A079902D1</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4jx3jD2zAnsAMhZDrpjSpoW2al44sLaDGlo0lE+ivv5KJCRCSS+8MM4zWq7NnP3SkC47SxAn6nEMhaMa0cNjVf82IDR60O0bLcduG2/abBvJjx4iR62EHWsT3O7oWcl5CyLhATHR1x7Jdw/IM251aVtC0A6/VcJveva59h4JLaOnSsHRtnSaMB1XYrl4WLMgQpzxgKAUeCBxM+uPPgfQMUM1J711sWVYBi95CiDwwTdwggCFJcANnqXlhHvhcEB5M6JwhURbwFJPwrv609/HxsfHYbGTF3HQsyzIt35Q+hNP5e733rt4MJGSzbLseIJYxilFC/yBFagxikRGtn8yzgopF+gq0bdqWgjZgjQ1su+y9bj4HqNidiXRAsuDI4Atk12ARzKAAhkH7FoVd/f15HdzunRaI8VlWpPxo/XeUgK0gyXIgBq8zq9mdj3iiXL0LwEHIcFJyuoIvakxyhIFrtwXM6Poz5XL4CNeq9mtrLn+0njLAf9OWC3Ofq6RunqjOkM6Bi//Ts/1+bVG+o6SEXnG1nLaS6aBoX35a8Evz5tNkOXIcC/0z7lYU9p23pHbtflofD+tutp42RbjZ6twPfj9aMGn/2Vy3Nt5N5LRCe/njuv9t7N1t/E/IfrhbRtnsYfQjz51O8yt8GE1vf9s47UzuH0iOUta/jnH6bvo9osn6o393P7ry7PjGSj4Q3/VTE24fFjFebcyfhCxDbs/i9ZXn0piFt3ciWg1cH6Y311fgDH9E8WjVXPDbd9lgHLKvX80o+mLDcLzh8c/uc077ORwaa0mYlPFvwKJeqvEIh9pI9guJt+VFWSgxZpVrkCuN4gKY0Htql5KWoJQCREkgm7ldj3zPcmzHHw06l5dN2720XMseWX2r7fuW12nVGrRlcURxkLEZVbGUym7n522COA04MAKFscpKvACuv4E4RAJpIYvk4cgYh2kmVTyL/fk8J4uyJGv64MEK+YuYlLr2JRM37KbozwQUh8LdPBDuCDDNKSh1V+PN5XxzISuxRKtSJHZjhRoMSqn/hZLgwHE7nslpmiegeJppRsoEGvkir+pi8u2/YyDMK2t0Oa2O3atZHX+rCyB9CFUOXOXyEWQT4cQN5NaJvJ5waz/hGr5fEqpOl6ymKCjeMjn89Dwkajp2EyIz+jWY/LJr3jv3s7e/3Gm+Qco8rscuEFnRvbD1VSpvB6kdvbqbS9RYNsrVqqz611a6WEh4U8qjbU4Al1LcNtPsAZi5gzDPult2rI8i7+yH/EqxYBOBBKRy2rRqecbDYgJcPSxCeUjW575aDkLKuglYi1O2QSLfH4rxm08UHGDlJ8238u8xK8hzu05g7cWRecrXhKBsrlbqFtm8MhQ4k7BUyl5W7IOfAjgV/NC4K/KOi5DTFJcCXv+iKT3r6gjjrGQiHOqVYV9jK55ik0Pw7PQCptLxp4t5zV+9mO/GnydS7VKk73zpfzsbtBoXDLq6/ysuXX0t35kyOJvvafoTwRey7tijZsv9OHKsQ1l3hs+H+SCT3gvzS8teTY/PQ+9f</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F9502129FC8EE314E0401F0A07990586</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F9502129FC8EE314E0401F0A07990586</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083154</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F9502129FC8FE314E0401F0A07990586</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>F95107729AF9F33DE0401F0A059930AB</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbb+o4EH4/vyLKeaxCnJBwiQoSl7KHll4O0G7blyPXGYhLcKjtQOivXzs0FOhl2ZWQkCfjmW8u/mZOBZ7HbtASArikCTP63Yb5B0gVUNmpWVX8hC3Pm4TWE9TA8pETonqV4KpTMY2+ECn0mZCYyYbpIsezkG853hihoOwGCJXqvvNoGnfAhTKtVErINLJ5zESQu22YKWdBggUVAcNzEIEkwah1OQiUZoALTGbzdIMyd8ibkZSLwLZJKQQCcUxKJJnbp/aezmkoghGdMixTDm8+Q9Ew3+6uVqvSqlxK+NR2EUI2qttKJxR0+tNs/iguQ9hnk2Rz7mCWMEpwTF+xBnUJMkpCoxVPE05lNP/CtGM7SJu2ICMWcTz207TfHeTojrS0B5ILbIkIO4WxIUyAAyNg3A77DfPncRXc3B1zzMQk4XNxcP5vkIAtIU4WEFqiiKxAd7zFT9LVPAUS9BmJU0GXcKXbZIEJCOOGw4RmAypU84XCyMtvZEL9aNFlQP5LWU7tXawKuv1Jdrp0CkL+n5rt1mtj5Q7HKTQF5/bL4+2td/UwvvjbXaP+7Fevdf0s5O9GDmFXeQNqW+6382Gzbnvr7dL47MKT5eHo9sWOHrNL9yVZ3L9mrw9D+hSGXmtx8lp/qLfqM/r7cfYw/YUeV8gf1Dqjv+5bbjZzaq3zixN8nXB0L1Y/TsrLs6jej335eAszZxb5z+3Lk9HvuxU5H7y2aq/n7epNd/k8ntN13Y78m5Nzt81/zQZXVFysRp2HAfeWJzdPw0kkf/BBWpuWvfXav+MXbTa8cr3Ge0y7MewLC0oYpU/PQGRx1O3R7xo9VS8sv6cXLaGhNclVg4XmKCGBSbOpb2lqCVJFQDQMVDE3517dR10XVdxqvdfxu+gMecjpoRaq1ut+pdIuOGiD4gBiJ2ETqn1plt30z/cAyTwQwELg1jJJSQTC/MZiF0ts9NlQPY6ECRgnisUxx8jPwmdEEj4hfhbh2K1Mptw0rhJ5za55ayKB7zN3eY+5h0DogoKmd93fQjW4kCoVL3iZytgpLXGJQaoGANccHLhezbcFnS9i0EDteRKmMZQW0SJPjC02/66Ficilw7Nx/u6+DOvwW5EBpRNSrSB0LG1QVYQPI8gJ/CKQrwOu7AZcmG+lIdXPS6VTcko2SPY/vXeJbo9ti6iI/nRGf5wC91b96Osfb9rfgLIP87F1FC7pjttilqrxoMijWVTzBZdeSulymeb1q2pi5Mq8rfjRsUdAUsVu63EyA2ZvTdhHDZct6gPPW/k+vlRGbCSxhLnqNiM/HrFZjEDozaKvXkl27Nqy51LlTUImP5N1YrWAaMTf7igkIFpPiW/U3yrh4Xu5PrG140fFqdYJSdlUn/QYWX/RFCRRZqnivYTvGv/MwGfO94XbJG+xSNVNT6mEr78YmtAaJiYkSZnsd81csEuyOU65XkDwrvTBTE7kb5M5E19O5vvLwUjR3RybW13678oWzduFgKkXgBxLw8zUoqmcs+kOqb8BPOR113V65YrX7rnI2+V15HbfH/NeJM0P4o+SnZwevofmPw==</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>F950D206279FC5D0E0401F0A0799566B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:F950D206279FC5D0E0401F0A0799566B</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20140513_083157</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>F950D20627A0C5D0E0401F0A0799566B</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00010_FUNC_UVTC_UserName_RequestorUserChild_active_RequesteeOtherUser_blocked_ResetPassword_(Negative)_403_FORBIDDEN_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for FAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - FAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH6sQ5wI0UUGiBc7JWWi3QLvtvqyMbcBt4oTYTtP99ccODQV6OeyRkJAn45lvLv5mzjhMYjfscU5yQVNmRP2O+avpNptegAMLOi1o+S0PWgF0oTX3sYPddgsRjE0j4lySiHEBmeiYLnB8CzQtx58BEHpuCLwG8IKfpnFLcq5MK5UGMI0yiRkPK7cdU+YsTCGnPGQwITwUKJz2xqNQaYawxmR2zzYoK4d5dyVEFto2amCCSByjBkoT+8ze0znDPJzSJYNC5uTFJ+Yd8+Xu09NT48lrpPnSdgEANghspYM5XX41u1/qywRHbJFuzheQpYwiGNPfUIMaE7FKsdGLl2lOxSr5wLRjO0CbtkiJLOT47Ktpvzqo0B1paQ9kzqHFV9CpjU3IguSEIWLcTKKO+fW4Cm7uznLI+CLNE35w/jNIhBUkTjOCLV5HVqM73uI76eqeERRGDMWS04Jc6jbJICLc+J6TBS1HlKvmw9yoym+UXP1o3WUE/UlZzuxdrAq6/U52+nRJuPg/Ndut18bKLYwl6d7Rp9Q9H50+jCF1RZlh1h4MB+OxW950Kgi7yhtQ23K/nA+bddtbL5ceB+0Zx8Pgwf4RZ72LHKbJ6IRNwfzxYTT5gUrY+6twH5rgWTaHV/0WnSzv5+hufvt78a3lTM/9djK6nt/bt1fDQny5zsZRkyG/JUc/H2/72bo/wuWcfgMz73TYi3zoXLsBn3+HAPx9w8ayANHKLS5pcfIPuhETW557v5ei1ZaPJ86Xk7t7cX85un72AjlY+mQ6GndeY9qNYV9YU8JUzh8IEvVRt0fUN4aqXlB8Ti9aQrG1qFTDTHMUF4QJs6tvaWoJpSIgikNVzM15GDSB67jBsN8GA8/xB8AHzhD0QDsIQPO0VXPQBsUBxIuULaj2pVl20z+fA0RJyAnDJLeKVKIV4eYnFvtQQCNiE/U4UsbJLFUs7hQtuV4943IdND1n7a/mJfbnGS6QaVym4opd5b2FIPk+d3t73D0hiGaUaILXHc5Vi3OhkrGGhRSx0yhggxGpRkCuWTh0/dOmzWmSxURDtZMUy5g0slVWpcbmm3/XgohX0slgVr28DwM7/FbnQOlgqhW4juWcqDqSN0PICZt1IB8H3NoNuDbfk5jqB6YSKnKKNkj2P732iW6QbZOoiH5dTH85Ne6t+tHX3960PwFlH+Zj6wgXdMdtPU3VgFD00a2ruYaNdUMWhazq19bUmCvztmJIx54SJBW/Pc/SR8LsrQn7qPGyRX3geSvfxyfFik0FFCRR3WZUxyN2iynhereI1Dspj11c9lyqvAlSivdkF7FaQTTiT7cUFCKtp8Tf1d9Tmr8G/p6tHT8qTrVQCMqW+qQHyfMHTYFSZZYq5kvzXePvGXjP+b5wm+QtFqG6aS4F+fiLoSmtY0KEUslE1DcrwS7NVjjFc0bCV6U3Zioqf5nNJf9wNt+NR1NFeAk0t7r0v5UtWrULIqZeASosHbNUq6ZyzpY7tP4C8A2ze/3hIBi0BgPX3WN23+ltE7gXSfeN+K1kJ6eH76H7Lw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95023DFE9E6EE22E0401F0A0799041A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95023DFE9E6EE22E0401F0A0799041A</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F9502129FD70E314E0401F0A07990586</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F9502129FD70E314E0401F0A07990586</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_08322</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F9502129FD71E314E0401F0A07990586</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_08327</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_08327</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_08327</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>F9502129FD70E314E0401F0A07990586</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH6sQ5wI0UUGiBc7JWWi3QLvtvqyMbcBt4oTYTtP99ccODQV6OeyRkJAn45lvLv5mzjhMYjfscU5yQVNmRP2O+avpNptegAMLOi1o+S0PWgF0oTX3sYPddgsRjE0j4lySiHEBmeiYLnB8CzQtx58BEHpuCLwG8IKfpnFLcq5MK5UGMI0yiRkPK7cdU+YsTCGnPGQwITwUKJz2xqNQaYawxmR2zzYoK4d5dyVEFto2amCCSByjBkoT+8ze0znDPJzSJYNC5uTFJ+Yd8+Xu09NT48lrpPnSdgEANghspYM5XX41u1/qywRHbJFuzheQpYwiGNPfUIMaE7FKsdGLl2lOxSr5wLRjO0CbtkiJLOT47Ktpvzqo0B1paQ9kzqHFV9CpjU3IguSEIWLcTKKO+fW4Cm7uznLI+CLNE35w/jNIhBUkTjOCLV5HVqM73uI76eqeERRGDMWS04Jc6jbJICLc+J6TBS1HlKvmw9yoym+UXP1o3WUE/UlZzuxdrAq6/U52+nRJuPg/Ndut18bKLYwl6d7Rp9Q9H50+jCF1RZlh1h4MB+OxW950Kgi7yhtQ23K/nA+bddtbL5ceB+0Zx8Pgwf4RZ72LHKbJ6IRNwfzxYTT5gUrY+6twH5rgWTaHV/0WnSzv5+hufvt78a3lTM/9djK6nt/bt1fDQny5zsZRkyG/JUc/H2/72bo/wuWcfgMz73TYi3zoXLsBn3+HAPx9w8ayANHKLS5pcfIPuhETW557v5ei1ZaPJ86Xk7t7cX85un72AjlY+mQ6GndeY9qNYV9YU8JUzh8IEvVRt0fUN4aqXlB8Ti9aQrG1qFTDTHMUF4QJs6tvaWoJpSIgikNVzM15GDSB67jBsN8GA8/xB8AHzhD0QDsIQPO0VXPQBsUBxIuULaj2pVl20z+fA0RJyAnDJLeKVKIV4eYnFvtQQCNiE/U4UsbJLFUs7hQtuV4943IdND1n7a/mJfbnGS6QaVym4opd5b2FIPk+d3t73D0hiGaUaILXHc5Vi3OhkrGGhRSx0yhggxGpRkCuWTh0/dOmzWmSxURDtZMUy5g0slVWpcbmm3/XgohX0slgVr28DwM7/FbnQOlgqhW4juWcqDqSN0PICZt1IB8H3NoNuDbfk5jqB6YSKnKKNkj2P732iW6QbZOoiH5dTH85Ne6t+tHX3960PwFlH+Zj6wgXdMdtPU3VgFD00a2ruYaNdUMWhazq19bUmCvztmJIx54SJBW/Pc/SR8LsrQn7qPGyRX3geSvfxyfFik0FFCRR3WZUxyN2iynhereI1Dspj11c9lyqvAlSivdkF7FaQTTiT7cUFCKtp8Tf1d9Tmr8G/p6tHT8qTrVQCMqW+qQHyfMHTYFSZZYq5kvzXePvGXjP+b5wm+QtFqG6aS4F+fiLoSmtY0KEUslE1DcrwS7NVjjFc0bCV6U3Zioqf5nNJf9wNt+NR1NFeAk0t7r0v5UtWrULIqZeASosHbNUq6ZyzpY7tP4C8A2ze/3hIBi0BgPX3WN23+ltE7gXSfeN+K1kJ6eH76H7Lw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F95023DFE9E6EE22E0401F0A0799041A</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH6sQJ+FSooJEgfawhdIFetuXlXEm4JI4qe0A3V9/7NBQoJfDHgkJeTKe+ebib+ZM4Dhy/ZYQwCVNmNHrNMzfyAsDOPWQVfemdas8DavWqRdiCwKolqeAACPXNHpCZNBjQmImG6aLnLKFKpZTniDke66PaiXXQ79M4w64UKaVSgmZxjqOmPBztw0z48xPsKDCZzgG4Uvij1uDvq80fVxgMptnG5S5Q96cS5n6tk1KARCIIlIiSWyf2Xs6Z4Hwx3TGsMw4vPoMRMN8vbtarUorr5Twme0ihGxUt5VOIOjsu9n8VlyGoMfCZHNuY5YwSnBE/2ANagByngRGK5olnMp5/Ilpx3aQNm3BmljEKbPvpv3mIEd3pKU9kFxgS8yxUxgbQQgcGAHjdtRrmN+Pq+Dm7oRjJsKEx+Lg/HeQgC0hSlIILFFEVqA73uIH6WqeAfF7jESZoEu41m2SYgLCuOEQ0nWfCtV8gTDy8htroX606DIgf1OWM3sXq4Juf5CdDp2BkP+nZrv12li5w1EGzZ+L7vM96Qc/wvVdnbuzazt5uLtIa8Onn40cwq7yBtS23K/nw2bd9tbrpX/gJEpbj/c33m189cTc+3k4vZn/Oq9ReJCnA8ce3w+qj7fjdDwIbtYxONM/P0745RVeTn7xx4ey465POsJuu70s/ZbZaL26P6m3Mn6+uo/6dxVvRq9eRtdpjywe2y6fXdrdxZC/1NxFtfYclsvnIELSOW/biAS3o/58MYiuOl0+RJffRjDsLyGYXQ8ni8u7EJFWq/EW024M+8KCEsbZ9AmILI66PXod40LVC8uv6UVLaGCFuaqfao4SEpg0m/qWphY/UwREA18Vc3O+qFeQ63Y9z62WvYpT6aIyci5QC9XqdeR57YKDNigOILYTFlLtS7Pspn++BkhiXwALgFvLJCNzEOYXFjtYYqPHRupxJEzAJFEs7pyiLHyqLKmYrzynwgA7TOJT/EJM4zqRQzbkrVAC3+dub4+7R0BoSkETvO5woVpcSJWMZ7zMZOSUlrjEIFMjgGsW9t3yacUWNE4j0FDtOAmyCErpPM1TY4vNv2thInLpqDvJX96ngR1+K3KgdAKqFYSO5RxUHeHdEHL8ShHI5wFXdwMuzLeygOoHphIqOSUbJPuf3vpEN8i2SVREv9vj306Be6t+9PX3N+0vQNmH+dg6CpZ0x20xTdWAUPTRLKr5jEvPpWy5zPL61TQ1cmXeVgypaAFIpvjtZZIsgNlbE/ZR42WL+sDzVr6PL5NzNpZYQqy6zciPR+wWYxB6t+ipd7I+dnHZc6nyJmEtP5K1I7WCaMRfbinEJ1pPiW/U3yrhwVu5PrC140fFqRYKSdlMn/QgefmkKUiizFLFfAnfNf6RgY+c7wu3Sd5ikaqbppmEz78YmtIaJiYkyZjsdcxcsEuzOU75koL/pvTOTE7lr7N5LT6dzQ+D/lgRXozNrS79b2WL5u1CwNQrQI6lYa7Vqqmcs9kOrb8CfMfsXueiW+9Wu13F8bvMXnZa2wTuRdJ8J34v2cnp4Xto/gs=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F95022E332643515E0401F0A0799033C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F95022E332643515E0401F0A0799033C</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_08324</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F95022E332653515E0401F0A0799033C</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH1chV25RQUq59KQt23IpuzovlXEGcJs4IXYg9NevHRoK9HLYIyEhT8Yz38x8/uwLhqLQcj3GIOUkporfbamPuGqadROwZtaRpTmBhbSZU2tqCLBj1+zAaSCkKj5jGfiUcUR5S7UM09GMqmY6E8Nwbcs1GpW66fyrKlNImQgtXCqGquRRSJlbpG2pWUrdGDHCXIoiYC7H7tgb3LrC00UlJrV9sUNZJEzbS84TV9dxJQAMYYgrOI70C/3I5yJg7pgsKOJZCq85A9ZSX/duNpvKxq7E6UK3DMPQjaYufAJGFt/V9rdyMwQ+nce7dQfRmBKMQvKCJKgB8GUcKF64iFPCl9EnoU3dNGRoDXKsYdOh31X9LUGB7sxIRyBThjS2RGYZbARzSIFiUB5Gfkv9ft4Ed3snKaJsHqcRO1n/HSSgawjjBAKNlZWV6M6P+EG72heAXZ/iMGNkDT8lTRKEgSn3KcxJfkuYIF/AlGL8Ss7Ej5QsA/w3Y7nQD7EK6PoH3emSBTD+f2Z2OK9dlCkKM2j39Ku+GV4Krt1MV53kbjnhz4372oj+fGgVEA6dd6D2435dn5J1z63XTXC1ssOre9S9uvF+5bfb61o0/G1jPHU21WHneTAi9/6v4Q+/Zj/ZgTefTtGYeyt0e22NfRjevFRT/JSndtd7GYy+zQc9YziAcXPd+9Gb3d0Yg4fRw0vfHFUX1Nz24XmyMmfOKE7/+QHQnPvX48Szupd54jejX8+8YQ8bebAcbrabl9q3mQG0udDjXmdCq97Tw3S+ab3VdFjDsbGUhHE2ewLMy6Wkh99V+mJeiH8tL9JCAm1euLqJ1CjGgXK1LXdJaXEzIUAkcMUwd+t+s2oadc/o1xuWWa+ZPcMxzL7hGfVms1p1vFKDdihOIHZiOicyl1TZHX++BogjlwENINXWcYaXwNQvInYRR4pPR+JwxJTBJBYqPqsZm+wlq9trEm/ovB4ie5VbKFGVnzG/o3epN+eQHiu3faTcI8AkISDlXfKbCYIzLlqxQuuMh2ZljSoUMnEBpFKDXctpVHVGoiQECVSP4iALoZIsk6IxOtv9WxrCrLCOepPi3H1a1um3sgPCJyDSgclaLkFMEd5dQaZbLQv5vODaYcFleC8LiDxeop08JXiH5PjTG0skPfYUERU9dsaPZol773729vc79S9A6af92CcK1uQgbXmXiutBiEe7nOYKVVaVbL3OivnVpTCmIrwu9NHUx4AzoW7bSfwMVN+H0M+6XPaoTzLv7cf4Mr6kY444RIJtSrE842UxBiZfFr44Jfm5z5ajlKJvHHL+ka0TigeIRPzlGwW7WPoJ873428Rp8DauD2Id5BF1iucEJ3QhV/Ia2X5CChyLsEToXpweBv8owEfJj437Ju+xcMGmWcbh8y+KFLSWijCOM8r9rloYDkW2wMm3CbhvTu/CFEL+ejPn7NOb+ffgdizkLkLq3pf8t7NGCrpgUOUDoMDSUnPx0BTJ6eJA1F8Bnui6Ydndfq/Zq/V6lnWo64Zj7nX9uJL2O/N7y0FPT89D+w8=</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>F95107A0F7821761E0401F0A0799554A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:F95107A0F7821761E0401F0A0799554A</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20140513_08327</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>F95107A0F7831761E0401F0A0799554A</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5964f10a-b509-40e9-862f-fa1b94ce9895</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7aaed2f-7952-4584-a739-c774cb776a89</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f18fd18e-7fe3-432f-9d31-a8f2e7d96e8b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00011_FUNC_UVTC_UserName_RequestorUserCLG_other_than_active_RequesteeChild_active_ResetPassword_(Negative)_403_FORBIDDEN_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","deleted");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","REQUESTOR_NOT_ACTIVE");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH1chTiBAooJEYWnTBdqSbtvLy8o4AxgSB2IHaH/9dUKTAqW97JWQkCfjmTMfPjMXHIeB6bQ4h1jQiClup6H+IVUfV+r1qlbBVVurAEEaNshEs8qTsemjMVh2TVVczhNwGReYiYZqIqOiIUszKg8IOWXTMYxStWKMVOURYi5NS5USUpVtGDDuZG4bahIzJ8KccofhELgjiOO1+j1Hajo4x6Q2L3YoM4dxcybE0tF1UvKBQBCQEolC/UI/0LnwuePRKcMiieHNp88b6tvdzWZT2pRLUTzVTYSQjmxd6vicTr+rzW/5ZfBdNol25zZmEaMEB/QVp6D6IGaRr7SCaRRTMQs/MW3oBkpNa7AlGjEq7LuqvzvI0J1p6QBkzLHGZ9jIjQ1hAjEwAsrvodtQv59Xwd3dhxgzPonikB+d/w4SsDUE0RJ8jeeR5ejOt3giXc0LII7LSJBwuoZB2iZLTIArdzFM6LZHuWw+nytZ+ZUtlz+adxmQvynLhb6PVULXT2SnQ6fAxf+p2X69dlYecZBA867CnoMNmT+Prp6EGT33DFr/HSTbhec2Mgj7yjtQRbnfzsfNWvTW26XOvDsYjce9ftsS19PhwsJeFLbn/fXIsH7AnNCnm7o5Xsw3j9cjPqjeu1d3cDnsheIFau5rz366vuq1jYF5XV9cfXtwezerzvaRodjrWP8kvww6r171k20ZBd7PbffmZd6NPfg9smZWNNg+lq+e7vt++T4yg/Ivq/1jdBvGL/d2edPdLL715q9k+uh67RvjdbYYDcaT+8Z7TPsxHApzSvCS8RyIyI9pe7gdpSvrhcXX9JJKqK9NMlVnmXIUF8CE2kxvpdTiJJKAqO/IYu7OXdsyULVs1eqtWgddop+ogowuaqGabVtSnHPQDsURxHbEJjT1lbLsrn++BkhChwPzIdbWUUJmwNUvLHawwIrLhvJxRIzDQyRZHEy0YrPZhPDVcrGq1Om0StCSRKoyiMQtu41bEwHxIXOXD5h7CIQuKaT0nvY3lw3OhUzFCq8TERilNS4xSOQAiFMOdsxK3dI5DZcBpED1MPKTAErL2TJLjM53/6aGCc+kw58P2bv7NKzjb3kGpI5PUwWexnIJsopwYgShPJDPA67uB5ybbyU+TZ+XTKeIKdkhOfz03iVpexQtIiP60/b+GDnuQv3s6x9v6l+A0o/zUTjy13TPbT5L5XiQ5NHMq7nCpVUpWa+TrH61lBhjaV6X/GjoHpBEstvLQ7QAphcm9LOGS4H6yHMhP8SXiBnzBBYQym5TsuMZm4UHPN0sXPlKtueuLQcuZd4EbMUpWTuQC0iK+MsdhTgk1ZPiO/m3iWL/vVwnbO35kXHKdUJQNk1P6Rh5+aQpSCTNUsl7Ubxv/JSBU84PhUWSCyxCdtM4EfD5FyUltIaKCYkSJtyOmgn2STbDKV6W4LwrfTCTEfnbZN7yTyfzc7/nSboLsVro0v9W1mjWLgTUdAHIsDTUrVw0pXM23SP1N4BHvI5Mw6617U7VtGrlgtct20Z267JI4EEkzQ/ij5K9nB6/h+a/</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F9502197C9D62573E0401F0A059909AB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F9502197C9D62573E0401F0A059909AB</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F951063578A7D0B0E0401F0A07995357</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F951063578A7D0B0E0401F0A07995357</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083210</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951063578A8D0B0E0401F0A07995357</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083213</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083213</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083213</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>F951063578A7D0B0E0401F0A07995357</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH1chTiBAooJEYWnTBdqSbtvLy8o4AxgSB2IHaH/9dUKTAqW97JWQkCfjmTMfPjMXHIeB6bQ4h1jQiClup6H+IVUfV+r1qlbBVVurAEEaNshEs8qTsemjMVh2TVVczhNwGReYiYZqIqOiIUszKg8IOWXTMYxStWKMVOURYi5NS5USUpVtGDDuZG4bahIzJ8KccofhELgjiOO1+j1Hajo4x6Q2L3YoM4dxcybE0tF1UvKBQBCQEolC/UI/0LnwuePRKcMiieHNp88b6tvdzWZT2pRLUTzVTYSQjmxd6vicTr+rzW/5ZfBdNol25zZmEaMEB/QVp6D6IGaRr7SCaRRTMQs/MW3oBkpNa7AlGjEq7LuqvzvI0J1p6QBkzLHGZ9jIjQ1hAjEwAsrvodtQv59Xwd3dhxgzPonikB+d/w4SsDUE0RJ8jeeR5ejOt3giXc0LII7LSJBwuoZB2iZLTIArdzFM6LZHuWw+nytZ+ZUtlz+adxmQvynLhb6PVULXT2SnQ6fAxf+p2X69dlYecZBA867CnoMNmT+Prp6EGT33DFr/HSTbhec2Mgj7yjtQRbnfzsfNWvTW26XOvDsYjce9ftsS19PhwsJeFLbn/fXIsH7AnNCnm7o5Xsw3j9cjPqjeu1d3cDnsheIFau5rz366vuq1jYF5XV9cfXtwezerzvaRodjrWP8kvww6r171k20ZBd7PbffmZd6NPfg9smZWNNg+lq+e7vt++T4yg/Ivq/1jdBvGL/d2edPdLL715q9k+uh67RvjdbYYDcaT+8Z7TPsxHApzSvCS8RyIyI9pe7gdpSvrhcXX9JJKqK9NMlVnmXIUF8CE2kxvpdTiJJKAqO/IYu7OXdsyULVs1eqtWgddop+ogowuaqGabVtSnHPQDsURxHbEJjT1lbLsrn++BkhChwPzIdbWUUJmwNUvLHawwIrLhvJxRIzDQyRZHEy0YrPZhPDVcrGq1Om0StCSRKoyiMQtu41bEwHxIXOXD5h7CIQuKaT0nvY3lw3OhUzFCq8TERilNS4xSOQAiFMOdsxK3dI5DZcBpED1MPKTAErL2TJLjM53/6aGCc+kw58P2bv7NKzjb3kGpI5PUwWexnIJsopwYgShPJDPA67uB5ybbyU+TZ+XTKeIKdkhOfz03iVpexQtIiP60/b+GDnuQv3s6x9v6l+A0o/zUTjy13TPbT5L5XiQ5NHMq7nCpVUpWa+TrH61lBhjaV6X/GjoHpBEstvLQ7QAphcm9LOGS4H6yHMhP8SXiBnzBBYQym5TsuMZm4UHPN0sXPlKtueuLQcuZd4EbMUpWTuQC0iK+MsdhTgk1ZPiO/m3iWL/vVwnbO35kXHKdUJQNk1P6Rh5+aQpSCTNUsl7Ubxv/JSBU84PhUWSCyxCdtM4EfD5FyUltIaKCYkSJtyOmgn2STbDKV6W4LwrfTCTEfnbZN7yTyfzc7/nSboLsVro0v9W1mjWLgTUdAHIsDTUrVw0pXM23SP1N4BHvI5Mw6617U7VtGrlgtct20Z267JI4EEkzQ/ij5K9nB6/h+a/</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F9502197C9D62573E0401F0A059909AB</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4jxnjC+ZiT2DGAdLSQkICadO8dBR5jZXaElgy0P76SiZ2gJAceiaZYbRe7X570bd7zlGaOH7AOWSCMKoN+x39Z4gcu9FoOIYTNl3DbTQ8wwtbrhG1XNS02yisR5GuDTnPYUi5QFR0dMeyXcNqGLY7syy/7vh2s1ZvWg+69g0yLk1LlZqla5s0odwv3Hb0PKM+Q5xwn6IUuC+wPw3GI19q+qjEpHfPtygLh1k3FmLhmyauhYAhSXANs9Q8N/d0zkPuT8mcIpFn8Owz5B39+e56va6t6zWWzU3HsizT8kypE3Iy/6h3P5SXIRzSiG3PPUQZJRgl5A9SoMYgYhZqQTJnGRFx+oZp27QtZdqADTaw7dKPuvnioEB3oqU9kBlHBo+RXRq7hQgyoBi0u9thR/94WgW3d2cZojxiWcoPzv8GCegKEraA0OBlZCW60y0eSVf3HLA/pDjJOVnBlWqTBcLAtUkGEdmMCJfNF3KtKL+24fKflF0G+F/Kcm7uYpXQzSPZ6ZM5cPF/arZbr62VbyjJofvj07hNWPIZLpz19Ip6DZht2OS+1YzvOgWEXeUtqKrcz+fDZq166/nS9/kqXz+szcmEfe//aCejs/v5Q2AN4vXm1yOZI9NLHhej5G4Sfv+6/JHWvwSzm57I47P7T71LcjMX48V4tvny1Y1E8uGMeePL60+CPtzY5h2Eo7vBxeencPI0GIhBlH0mMR851nzYHi+Hkwl22suzm2XTbV+Nb6P2NQswf7hxB5fUFHj4wYt6sVs/e/oT94Jp2J7Aw7rzEtNuDPvCkhKm+eMTYFEeVXsM+9qlrBcS79OLkpDQiApVf6E4igugQu+qW4pa/FwSEAl9Wczt+dJr2FarFbQvAkdmT/65ln1pBVbL8+Rjs0oO2qI4gNhjNCLKl2LZbf+8DxCnPgcaQmasWI5j4Po7FvtIIG1Ib+XjYJTDjEkWt9M4fPrzCE2R1H/ZT44tNksbP6J6pmtXTFzT6yyIBGT73F3f4+5bwGRBQBG86nAuW5wLmYwlWuUisWsrVKOQyxGQKRb2HbfdMDlJFwkoqGbKwjyB2iJeFKkx+fbXMRDmhfR2MCte3puBHX4rcyB1QqIUuIrlAmQd4cgQsspA3g64uRtwaT7IQ6IemEyoyAjeItn/9NInqkGqJpER/exNf9ol7kr95Ouvb5rvgDIP81E5Cldkx205TeWAkPTRLau5RLVlLV+t8qJ+LUWNmTRvSoa0zSngXPLb7xn7BdSsTJgnjZcK9YHnSr6PLxcxnQokIJXdphXHE3aLKXC1WwzlO9mcurjsuZR5E7ARx2S9RK4gCvG7Wwr2sdKT4on8WbMsfCnXEVs7fmSccqEQhM7VSQ2S3280BWbSLJHMx7Jd48cMHHO+L6ySXGERspsecwFvf9EUpXV0hDHLqRj29UKwS7MFTvF7Af6L0iszBZU/z+YNf3M2349HU0l4KdIrXfLfygYp2gWDrlaAAktH38hVUzqn8x1afwZ4wOyWY3utntdvOo1WvWL2hudZXnBRJXAvku4r8WvJTk4P30P3Lw==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F951077A8BA2A0E0E0401F0A07995550</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F951077A8BA2A0E0E0401F0A07995550</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083213</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F951077A8BA3A0E0E0401F0A07995550</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>396003bc-5eb5-48ff-ae28-a5266d1eb557</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00012_FUNC_UVTC_UserName_RequestorUserNonCLG_other_than_active_RequesteeChild_active_ResetPassword_(Negative)_403_FORBIDDEN_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for NonCLG"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - NonCLG"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","deleted");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","REQUESTOR_NOT_ACTIVE");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I8EH3vr4jSxyrkQsIlKkhcSpUupV2gl+1LZRxD3CY2xE5I++vXDk0KlPZjPwkJeTKeOTNzfOxzBqLQcjuMoZhjShSv31Kfqw273jBnhubPbKDZ0G5ozZrpaHVg+8bcadaA0VAVj7EEeYRxQHhLtQzT1gxHM+2pYbhVyzWblapjPqnKPYqZCC1cKoaqZFFImJunbalJTFwKGGYuARFiLofupHM9dIWnCwpMavt8gzJPGLcDzpeursOKjyAKQ1iBNNLP9R2fc5+5E7wggCcx+sjps5b6sXe9XlfW1QqNF7plGIZuNHXh4zO8OFXbJ8Vm5HtkTjfrHiCUYAhC/A4kqGvEA+ornXBBY8yD6JvQpm4aMrSGMqhB0yanqv6ZIEd3ZKQdkDEDGguAWQQbozmKEYFIuRt7LfX0uAlu9k5jQNicxhHbW/8bJERSFNIl8jVWVFagOz7igXa1zxF0PQLDhOEUjSRNlgAiptzGaI6zIWaCfD5T8vErGRM/XLAMwX8Zy7m+jVVA1w90p48XiPH/M7PteW2i3IMwQe20aS3uUnh793D1mA3S37P7YIbHD90M01YOYdt5A6oc98d6n6wltz42saunsHcZ+n+CxSN9s9eThjN/HDJBhGi6GvTe+51ZN5z+unyY1TxA10YyzEYe7Q3XxAmur84eeot0qmdnL6/pLT5JnrxR9D7pRmc3HE7Gl8nT8DUeOLcx7/e81z+R/ja7nK+oVU/TwZ1nj+6d4Mm4a+i/GoP0zo5r8XXi2I13i9JR9yT5vZiMatHFan02fnoJp++j69ZnTds17BoLSZgksxcEebGU9PD6ykDMC/Cf5UVasK/Nc1d3KTWKcUS42pa7pLS4iRAg7LtimJv1oOkYltWrN+1qzzHtxoVhG+bA6Bj1ZtOw+t1CgzYo9iD2KJljmUuq7IY/PwOEkcsQ8VGspTSBAWLqDxH7gAPFI2NxOChhaEqFipur4L36Ql8NgzTCWa0apKvEbjpZpiojym/ITdyZcxTvSnd1R7rHCOIlRlLfJcGZYDjjohcrkCY8NCspqBCUiBsgliLsWnbD0RmOliGSSPWI+kmIKstgmXdGZ5t/SwOQ5dbxxTQ/eN/Wtf+taIHw8bF0YLKWLhJjRAfuIKMo5PuCa9sFF+E7iY/l+RL95DGGGyS7nz5pIvlRckRU9NybPJsF7tL96O1fd+o/gNL3+1Em8lO8lba4TMX9INSjXUxzBSqrSpKmST6/ulTGWITXhUCa+gTBRMjb25S+IqKXIfSjbpcS9V7m0r6LL+EBmXDAUSTYpuTLI54WE8Tk08ITxyQ79t2yk1L0jaOMH7L1QvECkYh/fKRAF0o/Yb4Vf2sa+5/jOhBrK4+oU7wnOCYLuZL3yNs3pIBUhMVC+Gi8HfxQgEPJd41lk0ssXLBplnD0/RdFKlpLBRDShHCvr+aGbZXNcfK3JXI/nb6EyZX842rO2LdX8+P1cCL0LgJq6Yv/21nDOV0gUuULIMfSUjPx0hTJyWJL1T8A7gt7X7Cs7nQvesZFrRR2p9m06l2nbOBOJe0v5q+WrZ7un4f2Xw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950D20175BEC0E6E0401F0A059927B5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950D20175BEC0E6E0401F0A059927B5</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95022C7943C5148E0401F0A079902DB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95022C7943C5148E0401F0A079902DB</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083217</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95022C7943D5148E0401F0A079902DB</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083224</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083224</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083224</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I8EH3vr4jSxyrkQsIlKkhcSpUupV2gl+1LZRxD3CY2xE5I++vXDk0KlPZjPwkJeTKeOTNzfOxzBqLQcjuMoZhjShSv31Kfqw273jBnhubPbKDZ0G5ozZrpaHVg+8bcadaA0VAVj7EEeYRxQHhLtQzT1gxHM+2pYbhVyzWblapjPqnKPYqZCC1cKoaqZFFImJunbalJTFwKGGYuARFiLofupHM9dIWnCwpMavt8gzJPGLcDzpeursOKjyAKQ1iBNNLP9R2fc5+5E7wggCcx+sjps5b6sXe9XlfW1QqNF7plGIZuNHXh4zO8OFXbJ8Vm5HtkTjfrHiCUYAhC/A4kqGvEA+ornXBBY8yD6JvQpm4aMrSGMqhB0yanqv6ZIEd3ZKQdkDEDGguAWQQbozmKEYFIuRt7LfX0uAlu9k5jQNicxhHbW/8bJERSFNIl8jVWVFagOz7igXa1zxF0PQLDhOEUjSRNlgAiptzGaI6zIWaCfD5T8vErGRM/XLAMwX8Zy7m+jVVA1w90p48XiPH/M7PteW2i3IMwQe20aS3uUnh793D1mA3S37P7YIbHD90M01YOYdt5A6oc98d6n6wltz42saunsHcZ+n+CxSN9s9eThjN/HDJBhGi6GvTe+51ZN5z+unyY1TxA10YyzEYe7Q3XxAmur84eeot0qmdnL6/pLT5JnrxR9D7pRmc3HE7Gl8nT8DUeOLcx7/e81z+R/ja7nK+oVU/TwZ1nj+6d4Mm4a+i/GoP0zo5r8XXi2I13i9JR9yT5vZiMatHFan02fnoJp++j69ZnTds17BoLSZgksxcEebGU9PD6ykDMC/Cf5UVasK/Nc1d3KTWKcUS42pa7pLS4iRAg7LtimJv1oOkYltWrN+1qzzHtxoVhG+bA6Bj1ZtOw+t1CgzYo9iD2KJljmUuq7IY/PwOEkcsQ8VGspTSBAWLqDxH7gAPFI2NxOChhaEqFipur4L36Ql8NgzTCWa0apKvEbjpZpiojym/ITdyZcxTvSnd1R7rHCOIlRlLfJcGZYDjjohcrkCY8NCspqBCUiBsgliLsWnbD0RmOliGSSPWI+kmIKstgmXdGZ5t/SwOQ5dbxxTQ/eN/Wtf+taIHw8bF0YLKWLhJjRAfuIKMo5PuCa9sFF+E7iY/l+RL95DGGGyS7nz5pIvlRckRU9NybPJsF7tL96O1fd+o/gNL3+1Em8lO8lba4TMX9INSjXUxzBSqrSpKmST6/ulTGWITXhUCa+gTBRMjb25S+IqKXIfSjbpcS9V7m0r6LL+EBmXDAUSTYpuTLI54WE8Tk08ITxyQ79t2yk1L0jaOMH7L1QvECkYh/fKRAF0o/Yb4Vf2sa+5/jOhBrK4+oU7wnOCYLuZL3yNs3pIBUhMVC+Gi8HfxQgEPJd41lk0ssXLBplnD0/RdFKlpLBRDShHCvr+aGbZXNcfK3JXI/nb6EyZX842rO2LdX8+P1cCL0LgJq6Yv/21nDOV0gUuULIMfSUjPx0hTJyWJL1T8A7gt7X7Cs7nQvesZFrRR2p9m06l2nbOBOJe0v5q+WrZ7un4f2Xw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950D20175BEC0E6E0401F0A059927B5</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH4+CkxCgiQoS1zbdsr1Auz37sjLOBHyaOCF2gO6vP3ZoUqC0hz0SEvJkPPPNxd/MOcdxZHtdziETNGGaP2jrv0zHdWYwaxmWbYWGQ2au4c7MwAicVr0JZ6Ed4Jau+Zzn4DMuMBNt3TYtxzAbhuVMTdOr255dr1lN+6euPULGpWmpUjN1bRNHjHuF27aeZ8xLMKfcYzgG7gniTbrja09qerjEpHfOtygLh1lnIUTqIURqARCIIlIjSYzO0Z7OecC9CZ0zLPIMXn0GvK2/3l2v17V1vZZkc2SbpolMF0mdgNP5V73zpbwMgc/CZHvuY5YwSnBEf2MFagxikQRaN5onGRWL+APTFrJMZdqADTGI5bCvOnpzUKA70dIeyIxjgy+wVRq7hxAyYAS0h3u/rX89rYLbu9MMMx4mWcwPzn8GCdgKoiSFwOBlZCW60y0eSVfnHIjnMxLlnK7gu2qTFBPg2m0GId1cUy6bL+BaUX5tw+WPll0G5E/Kco52sUro6Eh2BnQOXPyfmu3Wa2vlEUc5dG7T8dR8fG7SNW/irv00sNhT7y51n1pmu4Cwq7wFVZX79XzYrFVvvV7yzXFI73y7vl7EiUR+0W30yRw/2N+vvl26ogu/w5Q9XF7Z/BJlU/JtVnfR3cryKdzfWt3uZe6K5tLpkWmaNL+Ml+M5G1+PltOz4Y/hOnR8dHHTXz3f+H8LjtDlqEFHP25HD8+D/o1bnzWz38m1M714mYZXL5T85WDUW2weG1M+H7S+bCZ1mDw+50+3woouhqO7n+P2W0y7MewLS0qY5LN/gIjyqNrDH2gjWS8sPqcXJaGBERaqXqo4igtgQu+oW4pavFwSEA08WczteeQ2zIFtntUblmMPes7QdExrZHbNlus2mq1GyUFbFAcQ+wkLqfKlWHbbP58DJLHHgQWQGaskJwvg+icWB1hgzWf38nEkjMM0kSxutWbP6cuinop4uVk35+lykVrr/Azr2vdE3LCbrBsKyPapu75H3fdAaEpB8btqcC47nAuZiyVe5SKyaitcY5DLCZApEvZs56yBOI3TCBRSFCdBHkEtXaRFZhDf/tsGJryQ3g+nxcP7MK7Db2UKpE5AlQJXsfRAlhGOzCCrDOTjgJu7AZfmu3lA1fuS+RQZJVsk+5/e2kT1R9UjMqJf/ckvq8RdqZ98/f1N9AkodJiPylGwojtuy2Eq54Nkj05ZzSWuLWv5apUX9WspZsykeSQJ0kITILmkt5dp8gwMVSbQSdOlQn3guZLv48vFgk0EFhDLbtOK4wmrxQS4Wi18+Uw2p+4tey5l3gRsxDFZP5IbiEL86ZJCPKL0pPhW/q2TLHgr1xFbO35knHKfEJTN1UnNkZcPmoIk0iyVxJdku8aPGTjmfF9YJbnCImQ3zXIBH3/RFKO1dUxIkjPhD/RCsMuyBU7xkoL3pvTOTMHkr6N5wz8czU/j64nkuxjrlS79b2WDFu1CQFcbQIGlrW/kpimds/kOq78CPELsVqvRG/bNYbMi9obr2q1eRez7kXTeid9LdnJ6+B46/wI=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950D20835142DB4E0401F0A07995675</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950D20835142DB4E0401F0A07995675</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083221</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950D20835152DB4E0401F0A07995675</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>F95022C7943C5148E0401F0A079902DB</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSx1VwbkCIChLlItCWS4HttvtSuc4EDIlDYwfo+fXHCU0KlPawR0JCnoxnvpn5/Nk3HIeB6TY5h1jQiCn9dl191i2vhh2nptmOXdXsmmNpL77jaZblVB3f1MGyLVXpc55An3GBmairpm7Yml7WDHum665luqZTqljOH1V5gJjL0NKlpKvKLgwYd7O0dTWJmRthTrnLcAjcFcSdNgd3rvR0cY5JbdzsUWYJ48ZCiLWLECl5QCAISIlEIbpBRz43HnendM6wSGJ4z+nxuvq+d7vdlrZWKYrnyNR1Hek1JH08TufXauMq3wxen/nRft3CLGKU4ID+g1NQAxCLyFOawTyKqViEX4Q2kKGnoTXYEY0YNrtW0UeCDN2FkY5AxhxrfIGNPNgEfIiBEVB+Tfp19fqyCe73zmLMuB/FIT9Z/x0kYBsIojV4Gs8ry9FdHvFMuxo3QNw+I0HC6QaGKU3WmABXxjH4dHdHuSSfx5Vs/MqOyx/NWQbkb8Zygw6xSujoTHfadA5c/J+ZHc5rH+UBBwk0Rnbl5cUxfveqVb3SG7fGj7PH9S9uY2jWMwiHzntQxbjf16dkLbj1vqm9Weo/zPvHwY57LWsUzW8n2DdQ1H5aWeXZU+g8VH5DrzNY2r2R/rKq3PtrvffLK//RzbCJUHk4HgFCM2Mgho9X93S36kK58xP9JKslqS0rC7LZjHDMHf/1x0YAe/uxHIetzvB+i56ELZqw+Ll87N63J+MeZYP1n/GqfYed3w+L4ZVHOz2nOx6w8uKWt+4W2+FT/aOmwxqOjbkkTJOXJRCRL1N69NtKV84Li+/lJbVQT/MzV3edahSX2IXaSHel0uImUoCo58ph7tfdWlk3LcuodC27Ytntjm7rRldv6tVaTTc71VyD9ihOILYi5tM0V6qye/58D5CELgfmQaxtooQsgKvfRGxjgZU+m8jDETEOs0iquEFgx00vTBJ/pVeC6iKK40hUA1CVYSRGbBQ3fQHxsXRbR9I9AULXFFJ9TwnOJcO5kL14xZtEBEZpg0sMEnkDxKkIu6btlBGn4TqAFCkKIy8JoLRerLPOIL7/NzVMeGaddGbZwfuyrtNveQukj0dTB57WcgtyjHDmDjLyQr4uuHJYcB6+mXg0PV+ynyKmZI/k+NMHTVJ+FByRFT23ps9Gjrtwv3j7553oG1DotB9FIm9DD9Lml6m8H6R6NPJpvuLSaynZbJJsftVUGWMZHkmBNNAUSCLl7W0WrYChIgS66HYpUJ9kLuzH+BKxYFOBBYSSbUq2vOBpMQWePi368pjsLn23HKWUfROwE+dsrUC+QFLE3z5SiEtSP2key79tFHsf4zoT6yCPrFO+JwRl83SV3iNvX5CCRDIslcIXxYfBzwU4l/zYWDS5wCIkm14SAV9/UVJFq6uYkChhot9WM8OhymY4xdsa3A+nT2EyJX+/mnf8y6v5cXA3lXoXYrXwpf/trNGMLkSqm/TPsNTVnXxpyuRsfqDq7wBPhb0tWVYt33ZaeqdSCHu5VjOrt+WigUeVND6ZP1sOenp6Hhr/Ag==</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>F95023316F34634DE0401F0A079902E7</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:F95023316F34634DE0401F0A079902E7</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20140513_083224</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>F95023316F35634DE0401F0A079902E7</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00013_FUNC_UVTC_UserName_RequestorUserChild_other_than_active_RequesteeOtherUser_active_ResetPassword_(Negative)_403_FORBIDDEN_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for FAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - FAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","deleted");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","REQUESTOR_NOT_ACTIVE");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZZb+o6EH7vr4jS5xAnJSwRIFGWlqMuFLqc9qUyzgDuSWyInQD31187EAqU9nKuFCnyeDzzzeJvXBM4Cl2/KQTEknJm9Np18x0VSaWMishClQtkFStVxxqhkmMFbtEJimUHjYKSafSESKDHhMRM1k0XOUULeZZTfETIv3DVV3DKpTfTeIZYKNNKpYBMYxmFTPiZ27qZxMznWFDhMxyB8CXxh83bG19p+jjHZDZqa5SZw7gxlXLm2zYpBEAgDEmB8Miu2Xs6tUD4QzphWCYxbHwGom5uzi4Wi8LiosDjie0ihGxUtZVOIOjk3Gyc5Ych6LExX69bmHFGCQ7pP1iDugU55YHRDCc8pnIafWPasR2kTVuwJBZxiuzctD8dZOhOtLQHMhbYElPs5MYGMIYYGAHjadCrm+enVXB99jHGTIx5HImD9d9BApZCyGcQWCKPLEd3usUj6WrUgPg9RsJE0BTudJvMMAFh9GMY0+UNFar5AmFk5TeWQn007zIgf1OWmr2LVUG3j2SnTScg5P+p2W691laecZhA4/KuLO/HbxV3LrnbL3aC1pD13XQ0SBf1DMKu8hrUttyb9WGzbntrc4imk+7V2wP7NSyVq/0nrxWwD3fOJ7fhgJOXexT3EJBXu+M1F25/HPW7V9eDx5eJHETSdccRbRY/PNL5HT33bu7OOGeA+l41XHjt++CP2o/uKvzaHZXcaLp6TV+WTn959Qxu14k+Ju3+dWsFl93r6S8U9tPFxQNbBcVfr29JWzzfn5WvPzpPgxdBhvKm9CBH4+i1/hnTbgz7wpwShsnoA4jMl7o9em2jq+qF5c/0oiU0sMaZqj/THCUkMGk29ClNLX6iCIgGvirmet2teqjtopJb7nZaXht11AVzuqiJytWqVypd5hy0RnEAscXZmGpfmmXX/fMzQBL5AlgAsZXyhExBmD9YbGOJjR4bqMvBmYBHrlg89CqwjD+SiTufkimm3gqN6GIFpnHH5T27j5tjCfE+c1/sMfcACJ1R0PSu+1uoBhdSpWKO00SGTiHFBQaJGgCx5mDfLVY8W9BoFoIGakc8SEIozKazLDG2WP9dCxORSQedx+zefRvW4V6eAaUTUK0gdCyXoKoIR0aQmwfyfcCl3YBz880koPp6qXTKmJI1kv2tzy7R7bFtERXRe2v47uS4t+onH/960v4BlH2Yj62jIKU7bvNZqsaDIo9GXs05LswLSZomWf3KmhhjZd5W/OjYQyCJYrfVI/8DzN6asE8aLlvUB5638n18iZyyocQSItVtRrY84WUxBKFfFj11S5anPlv2XKq8SVjKY7JWqB4gGvGPbxTiE62nxH31W/A4+CzXEVs7flSc6jkhKZvolR4jq2+agnBllire4/Gu8WMGjjnfF26TvMUiVTeNEgnf7xia0OomJoQnTPbaZibYJdkMp1zNwP9U+mImI/LNZF6Kbyfz79uboaK7CJtbXfrfyhbN2oUodlP6GZa6uVQPTeWcTXZIfQPwgNcdVLrwypV2qY0u93ldibcJ3Iuk8UX8VbKT08P70PgX</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F951063578D6D0B0E0401F0A07995357</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F951063578D6D0B0E0401F0A07995357</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950D20627FEC5D0E0401F0A0799566B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950D20627FEC5D0E0401F0A0799566B</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083230</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950D20627FFC5D0E0401F0A0799566B</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083241</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083241</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083241</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>F950D20627FEC5D0E0401F0A0799566B</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZZb+o6EH7vr4jS5xAnJSwRIFGWlqMuFLqc9qUyzgDuSWyInQD31187EAqU9nKuFCnyeDzzzeJvXBM4Cl2/KQTEknJm9Np18x0VSaWMishClQtkFStVxxqhkmMFbtEJimUHjYKSafSESKDHhMRM1k0XOUULeZZTfETIv3DVV3DKpTfTeIZYKNNKpYBMYxmFTPiZ27qZxMznWFDhMxyB8CXxh83bG19p+jjHZDZqa5SZw7gxlXLm2zYpBEAgDEmB8Miu2Xs6tUD4QzphWCYxbHwGom5uzi4Wi8LiosDjie0ihGxUtZVOIOjk3Gyc5Ych6LExX69bmHFGCQ7pP1iDugU55YHRDCc8pnIafWPasR2kTVuwJBZxiuzctD8dZOhOtLQHMhbYElPs5MYGMIYYGAHjadCrm+enVXB99jHGTIx5HImD9d9BApZCyGcQWCKPLEd3usUj6WrUgPg9RsJE0BTudJvMMAFh9GMY0+UNFar5AmFk5TeWQn007zIgf1OWmr2LVUG3j2SnTScg5P+p2W691laecZhA4/KuLO/HbxV3LrnbL3aC1pD13XQ0SBf1DMKu8hrUttyb9WGzbntrc4imk+7V2wP7NSyVq/0nrxWwD3fOJ7fhgJOXexT3EJBXu+M1F25/HPW7V9eDx5eJHETSdccRbRY/PNL5HT33bu7OOGeA+l41XHjt++CP2o/uKvzaHZXcaLp6TV+WTn959Qxu14k+Ju3+dWsFl93r6S8U9tPFxQNbBcVfr29JWzzfn5WvPzpPgxdBhvKm9CBH4+i1/hnTbgz7wpwShsnoA4jMl7o9em2jq+qF5c/0oiU0sMaZqj/THCUkMGk29ClNLX6iCIgGvirmet2teqjtopJb7nZaXht11AVzuqiJytWqVypd5hy0RnEAscXZmGpfmmXX/fMzQBL5AlgAsZXyhExBmD9YbGOJjR4bqMvBmYBHrlg89CqwjD+SiTufkimm3gqN6GIFpnHH5T27j5tjCfE+c1/sMfcACJ1R0PSu+1uoBhdSpWKO00SGTiHFBQaJGgCx5mDfLVY8W9BoFoIGakc8SEIozKazLDG2WP9dCxORSQedx+zefRvW4V6eAaUTUK0gdCyXoKoIR0aQmwfyfcCl3YBz880koPp6qXTKmJI1kv2tzy7R7bFtERXRe2v47uS4t+onH/960v4BlH2Yj62jIKU7bvNZqsaDIo9GXs05LswLSZomWf3KmhhjZd5W/OjYQyCJYrfVI/8DzN6asE8aLlvUB5638n18iZyyocQSItVtRrY84WUxBKFfFj11S5anPlv2XKq8SVjKY7JWqB4gGvGPbxTiE62nxH31W/A4+CzXEVs7flSc6jkhKZvolR4jq2+agnBllire4/Gu8WMGjjnfF26TvMUiVTeNEgnf7xia0OomJoQnTPbaZibYJdkMp1zNwP9U+mImI/LNZF6Kbyfz79uboaK7CJtbXfrfyhbN2oUodlP6GZa6uVQPTeWcTXZIfQPwgNcdVLrwypV2qY0u93ldibcJ3Iuk8UX8VbKT08P70PgX</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F951063578D6D0B0E0401F0A07995357</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4j2eML9gQPIEZEkjqBtIECG146Qh5ATW2RCSZS379kUxMgJAcemYyQ7Re7X570bd7LlCaeGFTCOCSMGpErbr523fLKEBVxzrzA8fyKw6yxrWqq/7zK14ZuR64VdOIhMggokIiKuum57i+5QSW6w8cJyx7oe+UfNcfmcYQuFCmlUrJMY1VmlAR5m7rZsZpyJAgIqQoBRFKHPab3U6oNENUYDIb5xuUuUPemEk5D20bl2LAkCS4hFlqn9t7OuexCPtkSpHMOLz6jEXdfL27XC5Ly3KJ8antOY5jOzVb6cSCTL+ajS/FZYgjOmGb8yWijBKMEvKCNKguyBmLjWYyZZzIWfqBadd2HW3aghW2sOvTr6b95iBHd6KlPZBcIEvMkFsY68EEOFAMxkMvqptfT6vg5u6AIyomjKfi4Px3kIAuIGFziC1RRFagO93ikXQ1zgGHEcVJJsgCbnWbzBEGYdxxmJBVhwjVfLEw8vIbK6H+SNFlgP+mLOf2LlYF3T6SnRaZgpD/p2a79dpYGaIkg0atJWd33cfet4cVE6Ph6Gy9GA8fez9/LZv1HMKu8gbUttyv58Nm3fbW66VvNVh0hvQyxeOoXZOT+5Fz9bKMq376RKrkO/W7EWXBbfvn80U/ur9no4eH6/gOls/XZHjWZu0R7Ty2O150z+/vvyw95wK+tYL1wC1Xsic/sK+FvR7UIs6C67uHwfPtU3sY2Ly7bo/GFzdjXOnfwGQyfxHqNVfRP1nnl0cQI8uYl7/MuuXLRNbim/XicUp/IEJZ/S2m3Rj2hQUl9LPxH8CyOOr2iFrGlaoXkp/Ti5aQ2JrkquFcc5SQQKXZ0Lc0tYSZIiASh6qYm/NVLXA812u227XyVc0J2o7vuFdO06nW9Omq4KANigOIl4xOiPalWXbTP58DxGkogMbArQXL8AyE+YnFFpLIiGhPPQ5GBQyYZvFlnE4qwF/+jP+4iYotnVZpsMaJadwy+YP+4M2JBL5P3eU96u4BJnMCmt91gwvV4UKqXDyjRSYTt7RAJQqZmgBck3Do+WeBLUg6T0AjtVMWZwmU5rN5nhlbbH49C2GRS3vtQf7wPozr8FuRAqUTE60gdCwXoMoIR2ZQuQjk44AruwEX5ptZTPT7UvmUnOANkv1Pb22i+2PbIyqi35f9326Be6t+8vX3N+1PQNmH+dg6ihdkx20xTNV8UOzRKKr5jErPpWyxyPL6VTUzcmXeVgTp2n3AmaK39YA9AbW3JuyTpssW9YHnrXwfXyZntC+RhFR1m5EfT1gt+iD0ahGpZ7I6dW/Zc6nyJmElj8kuE7WBaMSfLik4xFpPie/Uz5Lx+K1cR2zt+FFxqn1CEjrVJz1H1h80BWbKLFHEx/iu8WMGjjnfF26TvMUiVTeNMwkffzE0o9VNhDHLqIxaZi7YZdkcp1zPIXxTemcmZ/LX0bwSH47mX91OX/FdisytLvlvZYvk7YLB1BtAjqVurtSmqZzT6Q6rvwI8IHbXqZSD6lmr0nIunF1iD5R4m8C9SBrvxO8lOzk9fA+NfwE=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950212AEE93F905E0401F0A079905EF</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950212AEE93F905E0401F0A079905EF</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083236</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950212AEE94F905E0401F0A079905EF</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH6uQCySQqCDR0AttKV1ou6u+VMYx4JI4IbZD6K9fOzQpUNrDHgkJeTKe+ebib+aUgii0vC6lKGU4Jkq/11ZfJpZrTBy3qVlu3dIajuFqLcMwNHsCnBYypwEwgKr0KeWoTygDhLVVyzAbmmFrZuPBMLy65TWsWsuqP6vKE0qpMC1Uaoaq5FFIqFe4bas8JV4MKKYeARGiHoPeuDu49YSmB0pMaud0g7JwmHbmjCWersNagCAKQ1iDcaSf6js6pwH1xnhGAOMpevcZ0Lb6fne1WtVW9VqcznRLBKYbri50AopnP9XOj/IyCvpkGm/OPiAxwRCE+A1IUAPE5nGgdMNZnGI2j74wbeqmIU1rKIcaNBvkp6p/OCjQHWlpB2RKgUbnwCyNjdAUpYhApDyO+m3153EV3Nx9SAGh0ziN6N753yAhkqEwTlCg0TKyEt3xFg+kq3OKoNcnMOQUZ+hOtkkCIKLKfYqmOL/FVDRfQJWi/EpOxQ+XXYbgv5TlVN/GKqDrB7LTwzNE2f+p2Xa9NlaeQMhR52nxS79oPc79HOs3ETrv+oszOr9fvz0t2gWEbeUNqKrc7+f9Zq166/3Sn0v8K1k2gX19GbFn/3LpX9qu0zu7fhyxVlMPLm/O6sPBqtXo+s/z2/Pe4oqf3K8Gmb6kryfWkIexvTR++U/0Op/+eM3yJLDz4cLUf9+Mr+yH4LZ/NXSzye/VJRjcO/7NZHGSv/Xunefr0UXm1huP68S5sfsxpOGYTdb87s+gZfGW7z//eD1ZNRM4DIx5NuNrQGaDWfsjpu0YdoUlJYz55BVBVh5le/R7yoWoF2Df04uU4ECbFqpeIjmKMkSY2pG3JLV4XBAQDjxRzM35wrUNy7S6jXrjwj53/HOjYZgXRtewXddw3bOSgzYo9iD6MZli6Uuy7KZ/vgcII48iEqBUy2IO54iq31jsAQaUPhmJxxETih5iweJTzmfhFOahM3UaOV/wWTppEfiqKncxG5Jh2p0ylO4yd32HuUcI4gQjSe+yv6locMpEKpYg4yw0axmoEcTFAEglB3tWo2XrFEdJiCRQPYoDHqJaMk+KxOh0829pANJCOjp/KN7dl2HtfyszIHQCLBWojOUMiSqiAyOoXgbydcDOdsCl+S4PsHxeIp0sxXCDZPfTR5fI9qhaRET04o9fzBJ3pX709c839W9A6fv5qBwFGd5yW85SMR4EeXTKai5BbVnjWcaL+jUlMabCvC740dTHCHLBbuuHeIGIXpnQjxouFeo9z5V8Fx9nczJmgKFIdJtSHI/YLMaIys2iL15JfuzasuNS5I2hnB2S+aFYQCTib3cU6EGpJ8T34m8Vp8FHuQ7Y2vIj4hTrBMNkJk9yjKy/aAoYC7NY8F6cbhs/ZOCQ811hleQKCxPdNOEMff1FkYTWVgGEMSes31MLwTbJFjjZOkHeh9InMwWRv0/mnH45mf8MbseC7iKgVrr4v5U1XLQLRKpcAAosbTUXi6ZwTmZbpP4OcI/XTcOp281Wz+kZZ0bF603XtYW4SuBOJJ1P4s+SrZzuv4fOXw==</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>F950212A434F5E6CE0401F0A0599099B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:F950212A434F5E6CE0401F0A0599099B</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20140513_083241</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>F950212A43505E6CE0401F0A0599099B</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5964f10a-b509-40e9-862f-fa1b94ce9895</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7aaed2f-7952-4584-a739-c774cb776a89</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f18fd18e-7fe3-432f-9d31-a8f2e7d96e8b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00014_FUNC_UVTC_UserName_RequestorUserChild_other_than_active_RequesteeSelf_ResetPassword_(Negative)_403_FORBIDDEN_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","deleted");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","REQUESTOR_NOT_ACTIVE");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3vr4iyj1XIB+EjUUGihW5pC0uBVr33ZWWcIbhNbGo7QPvr1w4NBUp72SshIU/GM2dmjo99JlCaeGFLCOCSMGp02w3z9zSo+4CrNWviu3XLr9R8K3ADbLmTSuRXXIwmQc00ukJk0KVCIiobpue4vuVULNcfO05Y9kK/VqqWy/+axgNwoUIrl5JjGqs0oSLM0zbMjNOQIUFESFEKIpQ4HLV6t6HyDFGByWyerVHmCXlzJuU8tG1cigBDkuASZql9Zu/4nEUiHJGYIplxeM8ZiYb5vne5XJaW5RLjse05jmM7ga18IkHiH2bzpNgMUZdO2Xp9gSijBKOEvCENqgdyxiKjlcSMEzlLvwjt2q6jQ1uwwhZ2ffrDtD8S5OiOjLQDkgtkiRlyi2BDmAIHisG4H3Yb5o/jJrjeO+aIiinjqdhb/x0koAtI2BwiSxSVFeiOj3igXc0zwGGX4iQTZAF9TZM5wiCMAYcpWd0SocgXCSMfv7ES6kcKlgH+m7Gc2dtYFXT7QHfaJAYh/8/Mtue1jvKAkgyafr0WOX3vaTmXgzs2ulq89d3HcWV8U71v5BC2ndegNuN+X++TdcOt900/k8HV3dt9K148naYj58p/5H7v+tx+BTm+Ht8+nibiYsnj3sXEcYN0uKzeBLee+yuTg6EbtKGObrPXzjNJKhWZntC3+KXfk883dXn+XH5C1z9b1V565/awP/PfLp87VzNsx1P6sxucP9xQetpPReCeXtVPV0w+e3RFqj16Pz/v8Zt/Tq77QzEYBFfT1Wl/9TLty+5d46Om7Rp2jYUkjLLJE2BZLDU9um3jUs0Lye/lRVtIZE1z13CuNUpIoNJs6l1aWsJMCRCJQjXM9foyqDhtz6mXK9WW1z73O47vuJdOy6kFQaVaqxQatEaxB/GC0SnRubTKrvnzPUCchgJoBNxasAzPQJjfRGwjiYwuHarDwaiAMVMq7koWs1ePRzirJi6avCyZIkA1Ftw0+kz+or94ayqB72p3eUe7h4DJnIAWeM1woSgupGrGC1pkMnFLC1SikKkrgGsVDj2/XrEFSecJaKh2yqIsgdJ8Ns9bY4v1v2chLHLrsDPOT96Xhe1/K3qgfCKiHYSu5RzUHOHAJVQuCvm64Op2wUX4VhYRfcBUQyUneI1k99MHTzRBNiRRFf2+GP12C9wb96O3f95pfwPK3u/HJlG0IFtpi9tUXRBKPprFNF9Q6aWULRZZPr+alkauwttKIV17BDhT+vY6Zs9A7U0I+6jrZYN6L/PGvosvkzM6kkhCqthm5Msj3hYjEPpt0VXnZHXsw2UnpeqbhJU8ZLtI1BNEI/72lYJDrP2UeaD+loxHH+M6EGsrj6pTPSgkobFe6Yvk9QtSYKbCEqV8jG8HPxTgUPJd46bJGyxSsWmSSfj6i6ElrWEijFlGZbdt5oZtmc1xytc5hB9On8LkUv5+N6/El3fzY+92pAQvRebGl/y3s0VyumAw9RMgx9IwV+qpqZLTeEvW3wHuK7tXbl92Wn610/G8bWV3fLe1aeBOJc1P5s+WrZ7un4fmHw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95023DFEA46EE22E0401F0A0799041A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95023DFEA46EE22E0401F0A0799041A</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950D208356A2DB4E0401F0A07995675</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950D208356A2DB4E0401F0A07995675</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083246</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950D208356B2DB4E0401F0A07995675</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083249</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083249</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083249</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>F950D208356A2DB4E0401F0A07995675</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3vr4iyj1XIB+EjUUGihW5pC0uBVr33ZWWcIbhNbGo7QPvr1w4NBUp72SshIU/GM2dmjo99JlCaeGFLCOCSMGp02w3z9zSo+4CrNWviu3XLr9R8K3ADbLmTSuRXXIwmQc00ukJk0KVCIiobpue4vuVULNcfO05Y9kK/VqqWy/+axgNwoUIrl5JjGqs0oSLM0zbMjNOQIUFESFEKIpQ4HLV6t6HyDFGByWyerVHmCXlzJuU8tG1cigBDkuASZql9Zu/4nEUiHJGYIplxeM8ZiYb5vne5XJaW5RLjse05jmM7ga18IkHiH2bzpNgMUZdO2Xp9gSijBKOEvCENqgdyxiKjlcSMEzlLvwjt2q6jQ1uwwhZ2ffrDtD8S5OiOjLQDkgtkiRlyi2BDmAIHisG4H3Yb5o/jJrjeO+aIiinjqdhb/x0koAtI2BwiSxSVFeiOj3igXc0zwGGX4iQTZAF9TZM5wiCMAYcpWd0SocgXCSMfv7ES6kcKlgH+m7Gc2dtYFXT7QHfaJAYh/8/Mtue1jvKAkgyafr0WOX3vaTmXgzs2ulq89d3HcWV8U71v5BC2ndegNuN+X++TdcOt900/k8HV3dt9K148naYj58p/5H7v+tx+BTm+Ht8+nibiYsnj3sXEcYN0uKzeBLee+yuTg6EbtKGObrPXzjNJKhWZntC3+KXfk883dXn+XH5C1z9b1V565/awP/PfLp87VzNsx1P6sxucP9xQetpPReCeXtVPV0w+e3RFqj16Pz/v8Zt/Tq77QzEYBFfT1Wl/9TLty+5d46Om7Rp2jYUkjLLJE2BZLDU9um3jUs0Lye/lRVtIZE1z13CuNUpIoNJs6l1aWsJMCRCJQjXM9foyqDhtz6mXK9WW1z73O47vuJdOy6kFQaVaqxQatEaxB/GC0SnRubTKrvnzPUCchgJoBNxasAzPQJjfRGwjiYwuHarDwaiAMVMq7koWs1ePRzirJi6avCyZIkA1Ftw0+kz+or94ayqB72p3eUe7h4DJnIAWeM1woSgupGrGC1pkMnFLC1SikKkrgGsVDj2/XrEFSecJaKh2yqIsgdJ8Ns9bY4v1v2chLHLrsDPOT96Xhe1/K3qgfCKiHYSu5RzUHOHAJVQuCvm64Op2wUX4VhYRfcBUQyUneI1k99MHTzRBNiRRFf2+GP12C9wb96O3f95pfwPK3u/HJlG0IFtpi9tUXRBKPprFNF9Q6aWULRZZPr+alkauwttKIV17BDhT+vY6Zs9A7U0I+6jrZYN6L/PGvosvkzM6kkhCqthm5Msj3hYjEPpt0VXnZHXsw2UnpeqbhJU8ZLtI1BNEI/72lYJDrP2UeaD+loxHH+M6EGsrj6pTPSgkobFe6Yvk9QtSYKbCEqV8jG8HPxTgUPJd46bJGyxSsWmSSfj6i6ElrWEijFlGZbdt5oZtmc1xytc5hB9On8LkUv5+N6/El3fzY+92pAQvRebGl/y3s0VyumAw9RMgx9IwV+qpqZLTeEvW3wHuK7tXbl92Wn610/G8bWV3fLe1aeBOJc1P5s+WrZ7un4fmHw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F95023DFEA46EE22E0401F0A0799041A</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlHytwEsIlUUGiQLecXpf0/rJynYG4Tew0dijw648dGgqU9rBHQkKejGe+ufibORQ4iR2/KwRkknJmDPtt84/dsMau3SSVmlezK27D8iotsN1KvWE1Q89tuM1wbBpDIXIYMiExk23TsZSCVa/Y7rVl+TXHrztVr+Y9msYtZEKZVipVyzRmScyEX7htm3nGfI4FFT7DCQhfEj/onp/5StPHJSazc7hEWTjMOpGUqY8QqYZAII5JlfAEHaINncNQ+AGdMCzzDN59hqJtvt99e3urvtWqPJsgx7IsZHlI6YSCTn6anR/lZQiHbMyX5x5mnFGCY7rAGtQ5yIiHRjee8IzKKPnCtI1sS5uuwIxUiO2ynyb6cFCg29PSBshM4IqIsF0aG8EYMmAEjJvRsG3+3K+Cy7vXGWZizLNEbJ3/DhKwKcQ8hbAiyshKdPtb3JGuziEQf8hInAs6hQvdJikmIIyrDMZ0dkaFar5QGEX5jZlQP1p2GZC/KcshWseqoKMd2enTCQj5f2q2Xq+llVsc59AROHXm4fxJPDtj/OI6v9KDwHW80H3qtgsI68pLUKtyv5+3m3XVW++XjgYv7tEimJ7w+ztiHy2aD5H3+/yyBtYc7uXEq7E6XRxfzEbB00UgktEDaiyOrEcUwcnpYjzoN1sXgwCgNzrlLz/6U3Y6baGTB5ikV1ZyfwO9MLUe7vr1Zgvdsn/Oo9/5QevSax73RQgnv1F0dYtvfvVQFB08Mu/MoQ5vPnTzaHGW/5CPZyTkd9nd/fD0sTZ/umxN2h8xrcewKSwpIcifnoHI8qjbY9g3jlW9sPyeXrSEhpVxoeqnmqOEBCbNjr6lqcXPFQHR0FfFXJ6PvbrlOL2m5zbtuu22BpZr2cdW12p6nuX0j0oOWqLYgtjjbEy1L82yy/75HiBJfAEshKwy5TmJQJjfWOxjiY0hG6nHwZmAa65Z/IU2eOu5lccTLBL69ux6CaNcvJrGBZeX7DLrjiVkm9Rd26DuERCaUtD8rhtcqA4XUuXiFU9zGdvVKa4yyNUEyDQJ+47bqiNBkzQGjRQlPMxjqKZRWmQGieW/U8FEFNLR4Lp4eF/Gtf2tTIHSCalWEDqWI1BlhB0zyC0D+TrgxnrApfluHlL9vlQ+ZUbJEsnmp4820f2x6hEV0Z9e8Mcuca/U977++Sb6BhTazsfKUTila27LYarmg2KPTlnNV1x9rebTaV7Ur6mZMVPmkSJIGwVAckVv82v+AgytTKC9pssK9ZbnlXwTXy4jFkgsIVHdZhTHPVaLAIReLYbqmcz23Vs2XKq8SZjJXbJerDYQjfjbJYX4ROsp8ZX6e+NZ+FGuHbbW/Kg41T4hKZvok54j8y+agnBlliri49m68V0GdjnfFK6SvMIiVTc95RK+/mJoRmubmBCeMznsm4VgnWULnHKegv+h9MlMweTvo3kmvhzN9+dngeK7BJsrXfrfyhVatAsBU28ABZa2OVObpnLOJmus/g7wE7HX+seDrtsYDBxng9hdu7tK4EYknU/iz5K1nG6/h86/</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F95022C794715148E0401F0A079902DB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F95022C794715148E0401F0A079902DB</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083249</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F95022C794725148E0401F0A079902DB</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5964f10a-b509-40e9-862f-fa1b94ce9895</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7aaed2f-7952-4584-a739-c774cb776a89</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f18fd18e-7fe3-432f-9d31-a8f2e7d96e8b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00015_FUNC_UVTC_UserName_RequestorUserCLG_active_RequesteeChild_other_than_active_pending_or_blocked_ResetPassword_(Negative)_400_BADREQUEST_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","deleted");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","USER_STATUS_NOT_VALID");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSx6OQC+GSqCBRSNuwLW2B9mz7sjLOAC6JQ2OHy/76tQNJgdIe9khIyJPxzDcXfzMXDEWh5bYYg4STmCp+p6H+CkaWiawRaA4yTM0261VtZFZszSxbUBuVx9W6jVTFZywFnzKOKG+olmHamlHRTHtoGG7ZciuVUtUqv6rKMyRMmBYqJUNVVlFImZu5bahpQt0YMcJciiJgLsfuoHV36wpNF+WY1ObFBmXmMGlOOZ+7uo5LAWAIQ1zCcaRf6Hs6FwFzB2RCEU8T2PoMWEPd3l0ul6VluRQnE90yDEM3HF3oBIxMztXmWX4ZAp+O4825jWhMCUYh+Y0kqDvg0zhQWuEkTgifRl+YNnXTkKY1WGENmzY9V/UPBxm6Ey3tgUwY0tgUmbmxPowhAYpBeer7DfX8tApu7g4TRNk4TiJ2cP47SEAXEMZzCDSWR5ajO93ikXQ1LwC7PsVhysgCerJN5ggDUx4SGJPVLWGi+QKmZOVXVkz8SN5lgP+mLBf6LlYBXT+SnQ6ZAOP/p2a79dpYeUZhCs0XYtjPN95o+bOHnmDl1ex/e+UZimZzv5FB2FXegCrKvT0fNmvRW9tLL3WdmK//1PC6/kajPg0QevBY2+isnl8qk5db52l52XF67Klv3fnsqn79MiPeZXcdrq/Z/RB3f1wGP/zO/Q335vwMXt46vpM4OHztd7opWc66ZtIdhcNFv764fnr3HsfetXHbfUyi1th/6AXdQTvBnt2rxmWj/BibtRvnFWbVbm/hn5lzv+tbXm9084wtnNy8xcvGR0y7MewLc0oYpKM3wDw/yvbwO8qVqBfi39OLlJBAG2eq7lxyFONAudqUtyS1uKkgIBK4opib85VTMTqWYVUNy7E7l5Zn2IZ5ZbSMmuNUqtVKzkEbFAcQ2zEdE+lLsuymf74HiCOXAQ0g0RZxiqfA1G8sdhBHik/74nHElMEwFixuVt8iwVpkWcYGq8zWNhc0gOnit6r0Yn5P75PWmEOyT93lPeruAyZzApLfZYMz0eGMi1y8o0XKQ7O0QCUKqZgAiSRh17LrFZ2RaB6CRKpHcZCGUJpP51lmdLb5tzSEWSbte8Ps4X0Z1+G3PAVCJyBSgclYLkGUEY7MIDsP5OuAq7sB5+ZbaUDk+xL55AnBGyT7nz7aRPZH0SMiol/twS8zx12on3z98039G1D6YT4KR8GC7LjNh6mYD4I9mnk131HpvZQuFmlWv5pkxkSY1wVBmvoAcCrobT2MZ0D1woR+0nQpUB94LuT7+FI+pQOOOESi25TseMJqMQAmVwtfPJPVqXvLnkuRNw4rfkzWDsUGIhF/u6RgF0s9IX4Qf8s4CT7KdcTWjh8Rp9gnOKETeZJzZP1FU+BYmCWC+OJk1/gxA8ec7wuLJBdYuOimUcrh6y+KZLSGijCOU8r9jpoJdlk2w8nXc3A/lD6ZyZh8O5pX7MvR/PPudiD4LkJqoUv+W1kjWbtgUOUGkGFpqCuxaQrndLLD6luAR4jdrFW8ctvwqgWxVxzHql0WxL4fSfOT+LNkJ6eH76H5Bw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950D20175E3C0E6E0401F0A059927B5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950D20175E3C0E6E0401F0A059927B5</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950D20260294DB2E0401F0A07995665</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950D20260294DB2E0401F0A07995665</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083254</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950D202602A4DB2E0401F0A07995665</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083257</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083257</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083257</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>F950D20260294DB2E0401F0A07995665</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSx6OQC+GSqCBRSNuwLW2B9mz7sjLOAC6JQ2OHy/76tQNJgdIe9khIyJPxzDcXfzMXDEWh5bYYg4STmCp+p6H+CkaWiawRaA4yTM0261VtZFZszSxbUBuVx9W6jVTFZywFnzKOKG+olmHamlHRTHtoGG7ZciuVUtUqv6rKMyRMmBYqJUNVVlFImZu5bahpQt0YMcJciiJgLsfuoHV36wpNF+WY1ObFBmXmMGlOOZ+7uo5LAWAIQ1zCcaRf6Hs6FwFzB2RCEU8T2PoMWEPd3l0ul6VluRQnE90yDEM3HF3oBIxMztXmWX4ZAp+O4825jWhMCUYh+Y0kqDvg0zhQWuEkTgifRl+YNnXTkKY1WGENmzY9V/UPBxm6Ey3tgUwY0tgUmbmxPowhAYpBeer7DfX8tApu7g4TRNk4TiJ2cP47SEAXEMZzCDSWR5ajO93ikXQ1LwC7PsVhysgCerJN5ggDUx4SGJPVLWGi+QKmZOVXVkz8SN5lgP+mLBf6LlYBXT+SnQ6ZAOP/p2a79dpYeUZhCs0XYtjPN95o+bOHnmDl1ex/e+UZimZzv5FB2FXegCrKvT0fNmvRW9tLL3WdmK//1PC6/kajPg0QevBY2+isnl8qk5db52l52XF67Klv3fnsqn79MiPeZXcdrq/Z/RB3f1wGP/zO/Q335vwMXt46vpM4OHztd7opWc66ZtIdhcNFv764fnr3HsfetXHbfUyi1th/6AXdQTvBnt2rxmWj/BibtRvnFWbVbm/hn5lzv+tbXm9084wtnNy8xcvGR0y7MewLc0oYpKM3wDw/yvbwO8qVqBfi39OLlJBAG2eq7lxyFONAudqUtyS1uKkgIBK4opib85VTMTqWYVUNy7E7l5Zn2IZ5ZbSMmuNUqtVKzkEbFAcQ2zEdE+lLsuymf74HiCOXAQ0g0RZxiqfA1G8sdhBHik/74nHElMEwFixuVt8iwVpkWcYGq8zWNhc0gOnit6r0Yn5P75PWmEOyT93lPeruAyZzApLfZYMz0eGMi1y8o0XKQ7O0QCUKqZgAiSRh17LrFZ2RaB6CRKpHcZCGUJpP51lmdLb5tzSEWSbte8Ps4X0Z1+G3PAVCJyBSgclYLkGUEY7MIDsP5OuAq7sB5+ZbaUDk+xL55AnBGyT7nz7aRPZH0SMiol/twS8zx12on3z98039G1D6YT4KR8GC7LjNh6mYD4I9mnk131HpvZQuFmlWv5pkxkSY1wVBmvoAcCrobT2MZ0D1woR+0nQpUB94LuT7+FI+pQOOOESi25TseMJqMQAmVwtfPJPVqXvLnkuRNw4rfkzWDsUGIhF/u6RgF0s9IX4Qf8s4CT7KdcTWjh8Rp9gnOKETeZJzZP1FU+BYmCWC+OJk1/gxA8ec7wuLJBdYuOimUcrh6y+KZLSGijCOU8r9jpoJdlk2w8nXc3A/lD6ZyZh8O5pX7MvR/PPudiD4LkJqoUv+W1kjWbtgUOUGkGFpqCuxaQrndLLD6luAR4jdrFW8ctvwqgWxVxzHql0WxL4fSfOT+LNkJ6eH76H5Bw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950D20175E3C0E6E0401F0A059927B5</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH6sQJ4QCUUHio93SLd2WdPd2+7JynAm4TZxgO4H2118nNCnQj8teCQl5Mp45M3N87BOB48h2B0IAlzRh2mTc0/84TdRsNX1iOJbVNJywYxm+42Cj6/iBDx1sh01f1yZCZDBhQmIme7qNLMdALcNybhFym00XoYbt2Pe69gu4UKGVSwPp2jqOmHDLtD0948xNsKDCZTgG4UrieoPppas8XVxh0vsnG5RlQt5fSJm6pkkaARCIItIgSWyemDs+J4FwPTpnWGYcXnIGoqe/7F2tVo1Vs5HwuWkjhEzUNZVPIOj8q97/Um2GYMLCZLMeYZYwSnBEn3EBagpykQTaIJonnMpF/EFoy7RQEdqANTGI5bCvuvmaoER3YKQdkFxgQyywVQWbQQgcGAHt52zS078eNsHN3luOmQgTHou99d9BApZDlKQQGKKqrEJ3eMR32tU/AeJOGIkyQXO4KmiSYgJCu+YQ0vUlFYp8gdDK8WtroX60YhmQvxnLibmNVUE33+nOmM5ByP8zs+15baL8wlEG/bb0z/2L4zH8g9DFaLZ2Ln/HF2HaFnzaKyFsO29A1eN+We+TtebWy6aRNbtuTVt3jw83CJ+Pcq9zD6n/LAl/mIqHi2WHdb5N87N4EY5JF35+t7pHkff7bjFs3Xpnk2+m8I/u1+nD/fB8ePFF0nNz7MvwZjxN8K/2+Tdsysc5PfIG5vxotji3VnIipubpzdHSsyEPVz/k3XU0vPaH3uVvPls/XT2MLUa67WyQfBlm6H7oLO469zf5aX6crzjqvda0XcOusZIEL/MfgMhqWdBjMtbO1Lyw/FxeCgsNjLB0ddNCo4QEJvV+sauQFjdTAkQDVw1zsz7rtpBtD6z2oGWfdUbtU+Qg6wwNULvbRfa4W2nQBsUexFHCQlrkKlR2w5/PAZLYFcAC4EaeZGQBQv8k4hhLrE3YTB2OhAm4TZSKp9HT85wurWX6ZFs8RCJ/XOVoIUDXrhL5g/3gg1AC35Xu5o50z4DQlEKh7wXBhWK4kKoXS5xnMrIaOW4wyNQNwAsRdm2n0zIFjdMICqRmnARZBI10kZadMcXm3zYwEaV1dnpbHrwP69r/VrVA+QS0cBBFLUNQY4Q3d5DttqpCPi74eLvgKvwgC2hxvlQ/Jadkg2T30ytNCn7UHFEV/Rl5f6wKd+1+8Pa3O81PQJn7/agTBTndSltdpup+UOrRr6a5xI1lI8vzrJxfu1BGrsKbSiAt0wOSKXl7uk0egZl1CPOg26VGvZe5tu/iy+SCeRJLiBXbtHJ5wNPCA1E8LSbqmKwPfbfspFR9k7CW79lGkXqBFIg/faQQlxR+ynyt/lYJD17H9U6srTyqTvWekJTNi1Vxjzx9QAqSqLBUCV/Ct4O/F+C95LvGusk1FqnY5GcSPv6iFYrW0zEhScbkZKyXhm2VLXHKpxTcV6c3YUolf7ma1+LDq/lueukpvYuxXvvS/3Y2aEkXotRN+ZdYevpavTRVcjbfUvUXgPvCPlYsa7dOmyN0elwLe6vbtdvDVt3AnUr6b8xvLVs93T8P/X8B</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F95022A17A52F8C7E0401F0A079902D9</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F95022A17A52F8C7E0401F0A079902D9</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083257</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F95022A17A53F8C7E0401F0A079902D9</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>f6fc7a63-faef-46c5-9b13-3c79410bac19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00016_FUNC_UVTC_UserName_RequestorUserNonCLG_active_RequesteeChild_other_than_active_pending_or_blocked_ResetPassword_(Negative)_400_BADREQUEST_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for NonCLG"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - NonCLG"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","deleted");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","USER_STATUS_NOT_VALID");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj0fBTrgUooJEoexySmkXaHu6LyvjTILbxAmxDWl//XFCQ4FeDnskJOTJeOabi7+ZM0Gi0HG7QkAqWcyNYb9t/rabnn1aJTWLAG1ZNa/qW3MKYJFWg1LiQKNpn5rGUAgFQy4k4bJtOtiuWbhu2bUZxm616mKnUq/av0zjDlKhTWuVCjaNLAq5cAu3bVOl3I2JYMLlJALhSupOu1cjV2u6pMRkds42KAuHaWchZeIiRCseUAhDWqFxhM7Qns6ZJ9wpCziRKoVXn55om6931+t1ZV2txGmAHIwxwi2kdTzBgm9m56S8DN6Q+/Hm3CM85oySkL2QHNQVyEXsGd0wiFMmF9Enpm1k49y0BRm1qF3j30z05qBAd6SlPZCpIJZYELs0NgEfUuAUjNvJsG1+O66Cm7uzlHDhx2kkDs5/Bgn4CsI4Ac8SZWQluuMtfpCuzhlQd8hpqARbwThvk4RQEMZNCj7LRkzo5vOEUZTfyIT+sbLLgP5JWc7QLlYNHX2QnT4LQMj/U7Pdem2s3JFQQaeKmVrenqKmz2LEeQ/Z2aX66+oimly0Cwi7yhtQ23K/ng+bddtbr5eS5/t0jsOX8OFe3N21Hpf18fDHZTIa9X20nov6eOw0snlPRQ8Be+he40G8/Ht0k6Kf31+ixdp55pdR7UfUHxOk2Ml8wmZYZC+TW//GPx/cjQcPnlr+HMPye/8c4+5axedO2CfXvwbsPr36Ph2txkpMWvakNevdiyz5Gdi1QTd7ai3rJ09BE99MLsfT3v2PxyZcV3HQfotpN4Z9YUkJUzV/BCrLY94ew74x0PUi8mt6ySXMs/xC1U1yjhISuDQ7+a2cWlylCYh5ri7m5jxo1bFjO63BxXnzomrXLnAN2wPcxaetFq43GyUHbVAcQOzF3Ge5r5xlN/3zNUAauQK4B6m1ihVdgDC/sNgnkhhDPtGPI+YCZrFm8TmsXoKFX3PADxThUSvMmkHy+GQa41he8+u060tI95m7usfcE6AsYZDTe97fQje4kDoVS7JSMrQrK1LhoPQASHMOdp1as44Ei5IQcqAoij0VQiVZJEVikNj8OxahopBOLmbFu/s0rMNvZQa0jsdyBZHHcg66ivBuBDluvQzk84AbuwGX5rvKY/nz0umUKaMbJPuf3rokb49ti+iIfvemv+0S91b96Ovvb6IvQKHDfGwdeSu247acpXo8aPLolNVcksqyolYrVdTvNCfGVJtHmh9tNAWqNLs9z+In4GhrAh01XLaoDzxv5fv4lFzwqSQSIt1tRnE8YrOYgsg3i6F+Jdmxa8ueS503CZn8SNYL9QKSI/5yR6EuzfW0+Eb/rePUeyvXB7Z2/Og49TohGQ/yUz5Gnj9pChprs0zzXpzuGv/IwEfO94XbJG+xSN1NcyXh8y9GTmhtk1AaKy6HfbMQ7JJsgVM+J+C+Kb0zUxD562TOxKeT+Z+r0VTTXUTMrS77b2WLFe1CwcwXgAJL28z0oqmd82CH1F8BvuN1ZzBoNFunNdwY7PF6tVvdJnAvks478XvJTk4P30PnXw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95022FF6897406FE0401F0A079903A3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95022FF6897406FE0401F0A079903A3</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F9502129FEB8E314E0401F0A07990586</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F9502129FEB8E314E0401F0A07990586</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_08331</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F9502129FEB9E314E0401F0A07990586</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_08338</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_08338</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_08338</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj0fBTrgUooJEoexySmkXaHu6LyvjTILbxAmxDWl//XFCQ4FeDnskJOTJeOabi7+ZM0Gi0HG7QkAqWcyNYb9t/rabnn1aJTWLAG1ZNa/qW3MKYJFWg1LiQKNpn5rGUAgFQy4k4bJtOtiuWbhu2bUZxm616mKnUq/av0zjDlKhTWuVCjaNLAq5cAu3bVOl3I2JYMLlJALhSupOu1cjV2u6pMRkds42KAuHaWchZeIiRCseUAhDWqFxhM7Qns6ZJ9wpCziRKoVXn55om6931+t1ZV2txGmAHIwxwi2kdTzBgm9m56S8DN6Q+/Hm3CM85oySkL2QHNQVyEXsGd0wiFMmF9Enpm1k49y0BRm1qF3j30z05qBAd6SlPZCpIJZYELs0NgEfUuAUjNvJsG1+O66Cm7uzlHDhx2kkDs5/Bgn4CsI4Ac8SZWQluuMtfpCuzhlQd8hpqARbwThvk4RQEMZNCj7LRkzo5vOEUZTfyIT+sbLLgP5JWc7QLlYNHX2QnT4LQMj/U7Pdem2s3JFQQaeKmVrenqKmz2LEeQ/Z2aX66+oimly0Cwi7yhtQ23K/ng+bddtbr5eS5/t0jsOX8OFe3N21Hpf18fDHZTIa9X20nov6eOw0snlPRQ8Be+he40G8/Ht0k6Kf31+ixdp55pdR7UfUHxOk2Ml8wmZYZC+TW//GPx/cjQcPnlr+HMPye/8c4+5axedO2CfXvwbsPr36Ph2txkpMWvakNevdiyz5Gdi1QTd7ai3rJ09BE99MLsfT3v2PxyZcV3HQfotpN4Z9YUkJUzV/BCrLY94ew74x0PUi8mt6ySXMs/xC1U1yjhISuDQ7+a2cWlylCYh5ri7m5jxo1bFjO63BxXnzomrXLnAN2wPcxaetFq43GyUHbVAcQOzF3Ge5r5xlN/3zNUAauQK4B6m1ihVdgDC/sNgnkhhDPtGPI+YCZrFm8TmsXoKFX3PADxThUSvMmkHy+GQa41he8+u060tI95m7usfcE6AsYZDTe97fQje4kDoVS7JSMrQrK1LhoPQASHMOdp1as44Ei5IQcqAoij0VQiVZJEVikNj8OxahopBOLmbFu/s0rMNvZQa0jsdyBZHHcg66ivBuBDluvQzk84AbuwGX5rvKY/nz0umUKaMbJPuf3rokb49ti+iIfvemv+0S91b96Ovvb6IvQKHDfGwdeSu247acpXo8aPLolNVcksqyolYrVdTvNCfGVJtHmh9tNAWqNLs9z+In4GhrAh01XLaoDzxv5fv4lFzwqSQSIt1tRnE8YrOYgsg3i6F+Jdmxa8ueS503CZn8SNYL9QKSI/5yR6EuzfW0+Eb/rePUeyvXB7Z2/Og49TohGQ/yUz5Gnj9pChprs0zzXpzuGv/IwEfO94XbJG+xSN1NcyXh8y9GTmhtk1AaKy6HfbMQ7JJsgVM+J+C+Kb0zUxD562TOxKeT+Z+r0VTTXUTMrS77b2WLFe1CwcwXgAJL28z0oqmd82CH1F8BvuN1ZzBoNFunNdwY7PF6tVvdJnAvks478XvJTk4P30PnXw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F95022FF6897406FE0401F0A079903A3</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbc6JKEH7Pr6DYxxRy9QIVrSIad6kTE1ez2SQvW2RoZBIYkBnQ+OvPDAai5nLcU2WVNU1P99eX+brPqJ/EhuNSCjnDKZG8UV/+owem/mjYptLpBrpihWAqdse2lUfDgHbXMI1u2JUlj9ICPEKZT1hfNjTdUrS2ols3muaYpqN1WobWfpClW8gpN81VWposrZOYUKdy25eLnDipTzF1iJ8AdRhy5u7k0uGajl9jkgdnW5SVw3wQMZY5qopaASCIY9RCaaKeqXs6ZwF15nhBfFbk8OozoH359e5qtWqtzFaaL1RD0zRVs1WuE1C8+CYPTurLEHgkTLfnoU9SgpEf440vQE2ARWkgufEizTGLkk9M66quCdMKrJGCdIt8k9U3BxW6Iy3tgcypr9DI12tjMwghB4JA+jXz+vK34yq4vXuT+4SGaZ7Qg/PfQQJSQpxmECi0jqxGd7zFD9I1OAPkeATFBcUlXIk2yXwEVJrmEOL1Jaa8+QIqVeWX1pT/cN1lgP6mLGfqLlYOXf0gOyO8AMr+T81267W1cuvHBQyW98nF0+/roDe14K6MStMeWdGTuZx2UL+CsKu8BdWU+/V82KxNb71ectfq5sfzefLr8VyzLMg7UFz2HmI3J1GnvB+FIbue/6Ke7qHZbBUtzc1Gj2+f/0kvN5vJzWSMJ5N19/x0/PN6fvV48vP0gWTo/nRsR9Zprl7fbYb2hRWe+0bp3qJoOmv77t3i8ntk6SxAXnrlBkbec3+cZr9DNd48P0xNhKfR93U+m52MX+xVrz3CpBg+68vO2HtZ9d9i2o1hX1hTwrx4fALE6qNoD28kjXm9fPY1vQgJDpSwUnUywVGUAWHyQNwS1OIUnIBw4PBibs9ju61rttG1z7vDrt1pX2iWpo81V2vbtmn3zJqDtigOIA5TEmLhS7Dstn++BogShwIJIFfKtEARUPkLiyOf+ZJHZvxxpITCTcpZ3GyDRsuk27PLRH/KMmZsND1pJxtZukrZNbnO3ZBBvk/d5h51zwDhDIPgd9HglHc4ZTwXS78sWKy3Sr9FoOATIBck7BhWr61SnGQxCKRqkgZFDK0syqrMqHT7byg+opV0dnFTPbxP4zr8VqeA6wRYKFARyznwMsK7GWQ47TqQzwPu7AZcm3eLAIv3xfPJcoy2SPY/vbWJ6I+mR3hEf4bzP3qNu1E/+vr7m+oXoNTDfDSOghLvuK2HKZ8PnD0GdTWXfmvZKsqyqOrXFcyYc/MqJ0hdnQMqOL293KTPQNTGhHrUdGlQH3hu5Pv4ChaROfMZJLzbpOp4xGoxBypWC48/k/Wxe8ueS543Bmv2kWwY8w1EIP5ySUEOEnpcPOV/qzQP3sr1ga0dPzxOvk8wTBbiJObIyydNgVJuFnPiS/Nd4x8Z+Mj5vrBJcoOF8W56LBh8/kUSjNaXfYTSgjBvJFeCXZatcLKXDJw3pXdmKiZ/Hc1r+ulovptczjnfJb7c6OL/VlZw1S4IZLEBVFj68ppvmtw5Weyw+ivAA2LXDGM87vTsrqV1xg2xd21bM92G2PcjGbwTv5fs5PTwPQz+BQ==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F95109279B7C7965E0401F0A05993983</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F95109279B7C7965E0401F0A05993983</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_08334</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F95109279B7D7965E0401F0A05993983</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>F9502129FEB8E314E0401F0A07990586</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH49CLgQCUUGipai0he0BetuXynUmYJo4qe0A5devHZoUKO1hj4SEPBnPfHPxN3PCURw5fodzYIIkVOt3W/pTw214z1XsGTXLCw232nAN5DiBgcLArSEX3GYz1LU+5xn0KReIipbuWLZrWDXDdieW5Vervu1UPLfxW9fugHFpWqpULF1bxRHlfu62pWeM+gnihPsUxcB9gf1xZ3DtS00fFZj09skGZe6QtWdCpL5p4koAGKIIV3ASmyfmjs5JwP0xmVIkMgbvPgPe0t/vLpfLyrJaSdjUdCzLMq2mKXUCTqY/9faP4jIEfRomm/MZogklGEVkjRSoAYhZEmidaJowImbxF6Zt07aUaQNW2MC2S3/q5oeDHN2RlnZAMo4MPkN2YWwEITCgGLTbUb+l/zyugpu7E4YoDxMW873z30ECuoAoSSEweBFZge54iwfS1T4B7PcpjjJOFjBUbZIiDFy7YRCS1TXhsvkCruXl11Zc/kjRZYD/piwn5jZWCd08kJ0umQIX/6dm2/XaWLlDUQZt047Wj9P66cU9+rcadZ1ROGu8vp0PwT1v5RC2lTegynK/n/ebteyt90vrQYP2rp3JJZn+Dvr3bHVWS+k8617d1flyjMN0Ti6ubzq/6pZDHyIxduTHRXRxOere9t/qmZvO7+/XPY9dDSfPPy4j7D107h5obJ82I9xbPl7emYvJY3d2FZFkGPHxby/tLk/xxWl9OTh/gOR+YEc4PutMX9fD+/F6fgs36zs2v/XSH4OX0T/hQ9NyySqjde6S88fWR0zbMewKC0oYZ89zwKI4qvbod7WerBcS39OLkpDACHNVP1UcxQVQobfVLUUtfiYJiAS+LObm3GvWrK5jVaue49qNpn1uuZbdszpWrdl0vNNewUEbFHsQzxIaEuVLseymf74HiGOfAw2AGYskwzPg+jcWu0ggrU9H8nEklMMkkSzOSN2er5PlqspiW9CZtbJmL24EU10bJuIX/cU6oQC2S93VHeoeASYpAcXvqsG57HAuZC5e0SITkV1ZoAqFTE4ApkjYd9xGzeQkTiNQSM04CbIIKukszTNj8s2/YyDMc+nofJI/vC/j2v9WpEDqBEQpcBXLKcgywoEZZBWBfB1wfTvgwnwnC4h6XzKfghG8QbL76aNNVH+UPSIjejobP9kF7lL96Oufb5rfgDL381E6ChZky20xTOV8kOzRLqr5iiqvlWyxyPL6eYoZmTRvSoK0zTHgTNLb2yR5AWqWJsyjpkuJes9zKd/Fl4kZHQskIJbdpuXHI1aLMXC1WvTlM1kdu7fsuJR5E7ASh2RnkdxAFOJvlxTsY6UnxTfyb5mw4KNcB2xt+ZFxyn1CEDpVJzVH3r5oCpxIs0QSX8K2jR8ycMj5rrBMcolFyG56zgR8/UVTjNbSEcZJRkW/q+eCbZbNcYq3FPwPpU9mciZ/H80r/uVofhhcjyXfxUgvdcl/KxskbxcMutoAciwtfSU3TemcTrdY/R3gPrE7Tq9XbzQ916r3SmL3mk2r2qmWCdyJpP1J/FmyldP999D+Aw==</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>F950D20337241891E0401F0A059927BF</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:F950D20337241891E0401F0A059927BF</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20140513_08338</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>F950D20337251891E0401F0A059927BF</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00017_FUNC_UVTC_UserName_RequestorUserChild_active_RequesteeOtherUser_other_than_active_pending_or_blocked_ResetPassword_(Negative)_400_BADREQUEST_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for FAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - FAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","deleted");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","USER_STATUS_NOT_VALID");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbdcto8EL3PU3jcy4zxD7bBnsAMhUJJoEkxSUhvOoossBpbMpYMJE9fycQOEJKPfjOZMFqvds/+6OxeMJDElt9hDGUcU6IMey3196NlWV4duNp87kDN9qCrNaH4FzZD022Gtu2Fj6oyZCxHQ8I4ILylWoZpa4ajmfbUMPx63Tfdmus6v1TlDmVMmBYqNUNVNklMmF+4bal5RnwKGGY+AQliPod+0BmPfKHpgxKT2r7YoiwcZu2I89TXdVgLEURxDGuQJvqFvqdzETI/wAsCeJ6hV58ha6mvd9frdW1dr9FsoVuGYeiGpwudkOHFF7V9Vl5G4ZDM6fbcBYQSDEGMX4AENUY8oqHSiRc0wzxKPjBt6qYhTWtoAzVo2uSLqr85KNCdaGkPZMaAxiJglsYmaI4yRCBSbifDlvrltApu704zQNicZgk7OP8bJERWKKYpCjVWRlaiO93ikXS1LxD0hwTGOcMr9EO2SQogYspNhuZ4M8JMNF/IlKL8yoaJP1x2GYL/UpYLfRergK4fyU4PLxDj/6dmu/XaWrkDcY7aS31Q/xkuCJyMfk7vv89mo4cGzS43ORq3Cgi7yltQVblfz4fNWvXW66XJoGsFs4eRk6AxmEc0Xnc6gR2tBpdPfNb3+Dh6mP6JR8blvde9tPr35CpYPSZx3btbuvl1N8NX8fNjkjR64ffkzOo/e2Q26A1m1/07m6eWm+XzRlQf2/HXIFznt+Ay9rJfvcHtfKM//HFm6e1a95r58voXcRfm+XfnJUiHlOOB/nL27Tyd9q/Ob24eJm5+F3P3/mfrLabdGPaFJSUE+eMfBHl5lO0x7Cl9US/AP6cXKcGhNi9U/VRyFOOIcLUtb0lq8XNBQDj0RTG3577nGD3LcPpNp9Fv9O1vhm2YfaNjNDzPcV2v5KAtigOIXUrmWPqSLLvtn88BwsRniIQo01Y0hxFi6icWe4ADZUgm4nFQwtCUChZ/suH6yXXwclmHJkojbjo0qq/Qk6r8oPyaXGedOUfZPnXX96h7giBOMZL8LhuciQ5nXORiCVY5j83aCtQIysUEyCQJ+5bddHSGkzRGEqme0DCPUS2N0iIzOtv+WhqArJBOvk2Lh/dhXIffyhQInRBLBSZj+YpEGdGRGWSUgXwcsLsbcGm+k4dYvi+RT55huEWy/+mtTWR/VD0iIvrdDX6bJe5K/eTr72/qn4DSD/NROQpXeMdtOUzFfBDs0S6ruQS1ZS1frfKifg3JjJkwrwuCNPUAwVzQ2/OUPiGiVyb0k6ZLhfrAcyXfx5fziAQccJSIblOK4wmrRYCYXC2G4plsTt1b9lyKvHG04cdk3VhsIBLxp0sK9KHUE+Ib8bOmWfhWriO2dvyIOMU+wTFZyJOcI88fNAWkwiwWxEezXePHDBxzvi+sklxh4aKbHnOOPv6iSEZrqQBCmhM+7KmFYJdlC5z8OUX+m9I7MwWTv47mDftwNM/Go0DwXQLUShf/t7KGi3aBSJUbQIGlpW7Epimck8UOq78CPCB20/Cshve102h4rlMRu+N5da9ZrxK4F0n7nfi9ZCenh++h/Rc=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95109279BA77965E0401F0A05993983</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95109279BA77965E0401F0A05993983</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950D205F857F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950D205F857F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083314</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950D205F858F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083323</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083323</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083323</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>F950D205F857F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbdcto8EL3PU3jcy4zxD7bBnsAMhUJJoEkxSUhvOoossBpbMpYMJE9fycQOEJKPfjOZMFqvds/+6OxeMJDElt9hDGUcU6IMey3196NlWV4duNp87kDN9qCrNaH4FzZD022Gtu2Fj6oyZCxHQ8I4ILylWoZpa4ajmfbUMPx63Tfdmus6v1TlDmVMmBYqNUNVNklMmF+4bal5RnwKGGY+AQliPod+0BmPfKHpgxKT2r7YoiwcZu2I89TXdVgLEURxDGuQJvqFvqdzETI/wAsCeJ6hV58ha6mvd9frdW1dr9FsoVuGYeiGpwudkOHFF7V9Vl5G4ZDM6fbcBYQSDEGMX4AENUY8oqHSiRc0wzxKPjBt6qYhTWtoAzVo2uSLqr85KNCdaGkPZMaAxiJglsYmaI4yRCBSbifDlvrltApu704zQNicZgk7OP8bJERWKKYpCjVWRlaiO93ikXS1LxD0hwTGOcMr9EO2SQogYspNhuZ4M8JMNF/IlKL8yoaJP1x2GYL/UpYLfRergK4fyU4PLxDj/6dmu/XaWrkDcY7aS31Q/xkuCJyMfk7vv89mo4cGzS43ORq3Cgi7yltQVblfz4fNWvXW66XJoGsFs4eRk6AxmEc0Xnc6gR2tBpdPfNb3+Dh6mP6JR8blvde9tPr35CpYPSZx3btbuvl1N8NX8fNjkjR64ffkzOo/e2Q26A1m1/07m6eWm+XzRlQf2/HXIFznt+Ay9rJfvcHtfKM//HFm6e1a95r58voXcRfm+XfnJUiHlOOB/nL27Tyd9q/Ob24eJm5+F3P3/mfrLabdGPaFJSUE+eMfBHl5lO0x7Cl9US/AP6cXKcGhNi9U/VRyFOOIcLUtb0lq8XNBQDj0RTG3577nGD3LcPpNp9Fv9O1vhm2YfaNjNDzPcV2v5KAtigOIXUrmWPqSLLvtn88BwsRniIQo01Y0hxFi6icWe4ADZUgm4nFQwtCUChZ/suH6yXXwclmHJkojbjo0qq/Qk6r8oPyaXGedOUfZPnXX96h7giBOMZL8LhuciQ5nXORiCVY5j83aCtQIysUEyCQJ+5bddHSGkzRGEqme0DCPUS2N0iIzOtv+WhqArJBOvk2Lh/dhXIffyhQInRBLBSZj+YpEGdGRGWSUgXwcsLsbcGm+k4dYvi+RT55huEWy/+mtTWR/VD0iIvrdDX6bJe5K/eTr72/qn4DSD/NROQpXeMdtOUzFfBDs0S6ruQS1ZS1frfKifg3JjJkwrwuCNPUAwVzQ2/OUPiGiVyb0k6ZLhfrAcyXfx5fziAQccJSIblOK4wmrRYCYXC2G4plsTt1b9lyKvHG04cdk3VhsIBLxp0sK9KHUE+Ib8bOmWfhWriO2dvyIOMU+wTFZyJOcI88fNAWkwiwWxEezXePHDBxzvi+sklxh4aKbHnOOPv6iSEZrqQBCmhM+7KmFYJdlC5z8OUX+m9I7MwWTv47mDftwNM/Go0DwXQLUShf/t7KGi3aBSJUbQIGlpW7Epimck8UOq78CPCB20/Cshve102h4rlMRu+N5da9ZrxK4F0n7nfi9ZCenh++h/Rc=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F95109279BA77965E0401F0A05993983</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSx1XIlUsiQKL0lm1pKbRsty+VcQbwkjhp7EDaX792aChQ2sMeCQl5Mp755uJvpslQFFpehzFIOYmp4p+21GdouBNs20hzq7ajOS6ytXHNxVpt7Jq4bk4C7DRUxWcsA58yjihvqZZhOppR1Uzn3jA82/Ysq+LUzSdVGUHKhGmhUjFUJY9CyrzCbUvNUurFiBHmURQB8zj2hp3etSc0PVRiUtvNFcrCYdqecZ54uo4rAWAIQ1zBcaQ39S2dZsC8IZlSxLMU3n0GrKW+310ul5WlXYnTqW4ZhqEbri50Akamx2r7qLwMgU8n8ercRTSmBKOQvCEJqgd8FgdKJ5zGKeGz6AvTpm4a0rQGOdaw6dBjVf9wUKA70NIWyJQhjc2QWRobwARSoBiUh4HfUo8Pq+Dq7n2KKJvEacR2zv8GCegCwjiBQGNlZCW6wy3uSVe7CdjzKQ4zRhZwI9skQRiY0k9hQvJrwkTzBUwpyq/kTPxI2WWA/6UsTX0Tq4Cu78nOKZkC4/+nZpv1WlkZoTCDdjrp+XOn2mXWpcNR2LN+jmFc/3Xu3PmtAsKm8grUutzv591mXffW+6Xrxxs/Dx4Xtds8sa2zkCVPMaq9Pupo+OfnQz67W/6Yj8Du/q725/m15ej9sNc7GY2yRcOhj25wczG9OLm9RfXxlX+U99n4miFmZcTXL5L502U6rBsJveGDcT4bTa54/ak6PrF+9C5vqld93pgOust+dvFy+XJ5R8wpihC/TJ7YVeeXfzSPug07uQvc5CFgy/nVef936yOmzRi2hSUlDLPxH8C8PMr28E+Vc1EvxL+nFykhgTYpVL1EchTjQLnalrcktXiZICASeKKYq/O5WzWNeq1qOR3HPm8YZ4ZjmOdGx6i6rm10TksOWqHYgdiN6YRIX5JlV/3zPUAceQxoAKm2iDM8A6Z+Y/EUcaT4dCAeR0wZ3MeCxePX5Rupv0QOMXNqpG8Wiq2xlQgOvon5Lb1NOxMO6TZz21vMPQBMEgKS3mV/M9HgjItUvKBFxkOzskAVCpkYAKnkYM9yGlWdkSgJQQLVozjIQqgks6RIjM5W/5aGMCukg7P74t19GdbutzIDQicgUoHJWE5AVBH2jCCzDOTrgGubAZfmO1lA5PMS6eQpwSsk258+ukS2x7pFRETP3eGzWeJeqx98/fNN/RtQ+m4+1o6CBdlwW85SMR4EebTLar6gykslWyyyon51SYypMK8LfjT1IeBMsNvrfTwHqq9N6AcNlzXqHc9r+Ta+jM/okCMOkeg2pTgesFkMgcnNwhevJD90bdlyKfLGIef7ZN1QLCAS8bc7Cvaw1BPivvhbxmnwUa49tjb8iDjFOsEJncqTHCOvXzQFjoVZIngvTjeN7zOwz/m2cJ3kNRYuummccfj6iyIJraUijOOMcv9ULQSbJFvg5K8JeB9Kn8wURP4+mXP25WR+7F0PBd1FSF3rkv9W1kjRLhhUuQAUWFpqLhZN4ZxON0j9HeAnXnetunvSqdfdWnWL192GvU7gViTtT+LPko2c7r6H9l8=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F951076524A43F80E0401F0A059930AD</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F951076524A43F80E0401F0A059930AD</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083319</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F951076524A53F80E0401F0A059930AD</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxGlj6uQhO9EBQlKu5ddaGlD2XZfKuMM4DaxQ+yEtL/+2oFQoLSXvRIS8mQ8c2bm+NjnHIVB2e1wDrEgjGr9Xkt/qgOuIMDYwDNcNaq2MzWcet0y/HrVt1Ct6YBl61qf8wT6lAtERUsvW3bVsGqGXR1bllupuOVqqVpp/tG1CcRchpYuJUvXsjCg3M3TtvQkpi5DnHCXohC4K7DrdYYDV3q6qMCkt8/XKPOEcXshROSaJi75gCEIcAmz0Dw393zOfe56ZE6RSGLY5PR5S9/sXa1WpVWlxOK5WbYsy7QcU/r4nMzP9Pa3YjP4fTpj6/UFoowSjALyhhSoIYgF87VOMGcxEYvwk9C2aVsqtAGZ7KZdpWe6+Z4gR3dipD2QMUcGXyC7CHYHM4iBYtDu7/ot/ey0Ca73jmNE+YzFIT9Y/x0koCkELALf4EVlBbrTIx5pV/scsNunOEg4SeFa0SRCGLg2imFGsgHhknw+1/LxaxmXP1KwDPDfjOXc3MUqoZtHutMjc+Di/8xsd17rKBMUJNC+DemNPwm6z91J1p0+PtabK8lqa/p2+dLKIew6r0Ftx71ZH5J1y63Nptu08zK1kvpk0J2urt+6KzYii8fnZTl4vs1gns2aQxvxX1bl+XWYzO6+V7ov/AL9nl4/NsYPne9Bw3pIvajXu/r54HxL/okeRs3kmdR/idrrlXfbHy2XLP45iE1TeOMsEeH90lw69OJt4KGogZa4cTO8H0fz6WOzMvkDcUrN6wkP77PRt3L6I+owFv1Y/r7FSzQoO7j1XtNuDfvGQhK8ZPoMWBRLRY9+T7uS80Lia3lRFuIbs9zVjZRGcQFU6G21S0mLm0gBIr4rh7leXzk123Lsy1rZrje6ZfvSqlr2ldWxao5Tkcer0KA1igOIF4zOiMqlVHbNn68B4tDlQH2IjZQleAFc/yJiDwmk9emdPByMchgzqeI2n+IsQGnYCF+EEJit6iyZZmGqa9dM3NCbuDMTEO9Ld2VPuu8Ak4iA0ndFcC4ZzoXsxRKliQjsUopKFBJ5A8RKhOW+Zs3kJIwCUEjNkPlJAKVoEeWdMfn6v2wgzHPr3eU4P3if1nX4rWiB9PGJcuCqli7IMcKRO8guCvm84PpuwUX4TuITdb5kP0VM8BrJ/qd3mih+bDkiK3q68J7sAvfW/eTtH3eaX4AyD/uxTeSnZCdtcZnK+0GqR7uY5hKVlqUkTZN8fg2ljLEMb0qBtE0PcCLl7XXMXoCa2xDmSbfLFvVB5q19H18iFtQTSEAo2ablyxOeFh5w9bToy2OSnfpu2Usp+yYgE8dsF4F8gSjEXz5SsIuVnzSP5N+Kxf77uI7E2skj65TvCUHoXK3UPfL6CSkwk2GJFD4W7wY/FuBY8n3jtslbLEKyaZoI+PyLphStpSOMWUJFv6fnhl2VzXGK1wjcd6cPYXIl31zNGf/0an4YDjypdyHSt77kv50NktMFg65eADmWlp7Jl6ZMTuc7qr4B+FHYyw2n22k0nHptX9iblW0D9yppfzB/tOz09PA8tP8F</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>F951091E52167B21E0401F0A05993966</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:F951091E52167B21E0401F0A05993966</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20140513_083323</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>F951091E52177B21E0401F0A05993966</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5964f10a-b509-40e9-862f-fa1b94ce9895</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7aaed2f-7952-4584-a739-c774cb776a89</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f18fd18e-7fe3-432f-9d31-a8f2e7d96e8b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00018_FUNC_UVTC_UserName_RequestorUser_active_Requestee_active_with_userlinkconsent_exists_ResetPassword_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call PolicyCreateULC_API"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateULC_API");


myTC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH1fghISPRAUpF8qWbmG3DaXbvqxcZwC3wQmxE6C//tqhSYHSXvZKSMiT8cyZmeNjn3G8CGuuxzkkgkZMG/Ta+h8rwFYNNxuVR7tlVmwHoNKaQlCZBmBb00ZgwLSlawPOUxgwLjATbb1mmHbFqFdMe2wYrmW5tVa1aTcfdG0CCZehpUvV0LX1ImTczdO29TRhboQ55S7DC+CuIK7vDa9c6eniApPeOduizBMmnbkQsYsQqQZAIAxJlUQLdIb2fM4C7vp0xrBIE3jNGfC2/rp3tVpVV1Y1SmaoZhgGMhwkfQJOZ1/1zpdiMwQDNo226y5mEaMEh/QFK1BDEPMo0LxwFiVUzBcfhDaRaajQFViTCjFt9lVHbwlydCdG2gOZcFzhc2wWwW5gCgkwAtrtzaCtfz1tgtu94wQzPo2SBT9Y/x0kYBmEUSxz8KKyAt3pEY+0q3MGxB0wEqacZjBSNIkxAa79SmBK11eUS/IFXMvHr625/NGCZUD+ZixnaBerhI6OdKdHZ8DF/5nZ7ry2USY4TKHTCi7vyKR2PWuyDY8vLv3xaOUhGF8/Gu0cwq7zFlQ57tf1IVlLbr1u8siv0Xc/+mdjwJwMe0+9/rOf/n7GF8PVt7h7/e1leTGZ3TWE9/BzM7wY1VDz/h7i7ihzzlffa12v++A9TV5exObucvTlmS/7l3OrNg9HxgT6wyevl3p3iC6fboPMipLb383B1b0fTi6Dza3faDz0mdhEl/aP89AexOsgnH8LVtn0x3c0bnzpOmI98tGL3bWu75/Or71Vq/1W024N+8ZCEvz08QmIKJaKHoOe1pfzwuJzeVEWKg9E7urGSqO4ACb0jtqlpMVNpQDRwJXD3K77Tt2oWU6v0TNMs2nWzw3bMPuGZ9Qdx3BaZqFBWxQHELsRm1KVS6nslj+fAyQLlwMLIKlkUUrmwPVPIvawwNqA3cjDETEO40iqOPCp3SLg8GZGTQyNpbOCTZbBWtdGkfjJfibeVECyL93WnnTfAKExBaXviuBcMpwL2YslzlIRmtUMVxmk8gZIlAi7NbtVR5wu4hAUUrSIgjSEajyP884gvv2vVTDhufXmfJwfvA/rOvxWtED6BFQ5cFXLPyDHCEfuILMo5OOCG7sFF+G9NKDqfMl+ioSSLZL9T280UfwoOSIr+tP1/5RcKN1P3v5+J/oEFDrsR5koyOhO2uIylfeDVI9OMc0lri6raZal+fyaShkTGR5JgTSRDySV8rYZR8/AUBkCnXS7lKgPMpf2fXypmDNfYAELyTYtX57wtPCBq6fFQB6T9anvlr2Usm8C1uKYrRvKF4hC/OkjhbhE+UnzL/m3ipLgbVxHYu3kkXXK94SgbKZW6h7ZfEAKEsmwVApflOwGPxbgWPJ9Y9nkEouQbHpMBXz8RVOK1tYxIVHKxKCn54Zdlc1xik0M7pvTuzC5kr9ezWv+4dX8e3jlS71bYL30pf/tXKE5XQjo6gWQY2nra/nSlMnZbEfVXwEeCLtpNKyu0eibRtd0SmFvOk7dqr8d5r1KOu/M7y07PT08D51/AQ==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F951063C06F10C19E0401F0A07995351</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F951063C06F10C19E0401F0A07995351</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950239D6D011715E0401F0A05990981</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950239D6D011715E0401F0A05990981</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083327</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950239D6D021715E0401F0A05990981</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083331</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083331</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083331</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH1fghISPRAUpF8qWbmG3DaXbvqxcZwC3wQmxE6C//tqhSYHSXvZKSMiT8cyZmeNjn3G8CGuuxzkkgkZMG/Ta+h8rwFYNNxuVR7tlVmwHoNKaQlCZBmBb00ZgwLSlawPOUxgwLjATbb1mmHbFqFdMe2wYrmW5tVa1aTcfdG0CCZehpUvV0LX1ImTczdO29TRhboQ55S7DC+CuIK7vDa9c6eniApPeOduizBMmnbkQsYsQqQZAIAxJlUQLdIb2fM4C7vp0xrBIE3jNGfC2/rp3tVpVV1Y1SmaoZhgGMhwkfQJOZ1/1zpdiMwQDNo226y5mEaMEh/QFK1BDEPMo0LxwFiVUzBcfhDaRaajQFViTCjFt9lVHbwlydCdG2gOZcFzhc2wWwW5gCgkwAtrtzaCtfz1tgtu94wQzPo2SBT9Y/x0kYBmEUSxz8KKyAt3pEY+0q3MGxB0wEqacZjBSNIkxAa79SmBK11eUS/IFXMvHr625/NGCZUD+ZixnaBerhI6OdKdHZ8DF/5nZ7ry2USY4TKHTCi7vyKR2PWuyDY8vLv3xaOUhGF8/Gu0cwq7zFlQ57tf1IVlLbr1u8siv0Xc/+mdjwJwMe0+9/rOf/n7GF8PVt7h7/e1leTGZ3TWE9/BzM7wY1VDz/h7i7ihzzlffa12v++A9TV5exObucvTlmS/7l3OrNg9HxgT6wyevl3p3iC6fboPMipLb383B1b0fTi6Dza3faDz0mdhEl/aP89AexOsgnH8LVtn0x3c0bnzpOmI98tGL3bWu75/Or71Vq/1W024N+8ZCEvz08QmIKJaKHoOe1pfzwuJzeVEWKg9E7urGSqO4ACb0jtqlpMVNpQDRwJXD3K77Tt2oWU6v0TNMs2nWzw3bMPuGZ9Qdx3BaZqFBWxQHELsRm1KVS6nslj+fAyQLlwMLIKlkUUrmwPVPIvawwNqA3cjDETEO40iqOPCp3SLg8GZGTQyNpbOCTZbBWtdGkfjJfibeVECyL93WnnTfAKExBaXviuBcMpwL2YslzlIRmtUMVxmk8gZIlAi7NbtVR5wu4hAUUrSIgjSEajyP884gvv2vVTDhufXmfJwfvA/rOvxWtED6BFQ5cFXLPyDHCEfuILMo5OOCG7sFF+G9NKDqfMl+ioSSLZL9T280UfwoOSIr+tP1/5RcKN1P3v5+J/oEFDrsR5koyOhO2uIylfeDVI9OMc0lri6raZal+fyaShkTGR5JgTSRDySV8rYZR8/AUBkCnXS7lKgPMpf2fXypmDNfYAELyTYtX57wtPCBq6fFQB6T9anvlr2Usm8C1uKYrRvKF4hC/OkjhbhE+UnzL/m3ipLgbVxHYu3kkXXK94SgbKZW6h7ZfEAKEsmwVApflOwGPxbgWPJ9Y9nkEouQbHpMBXz8RVOK1tYxIVHKxKCn54Zdlc1xik0M7pvTuzC5kr9ezWv+4dX8e3jlS71bYL30pf/tXKE5XQjo6gWQY2nra/nSlMnZbEfVXwEeCLtpNKyu0eibRtd0SmFvOk7dqr8d5r1KOu/M7y07PT08D51/AQ==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F951063C06F10C19E0401F0A07995351</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4jSxyokIQRKBEgUypAOTFtoO5SXyjib4NPgQOyEy9cfOxBupT3MkZCQd7bXXvviZVcYmgZ5p84YRJyEVHGbVfXdy3sj+wZZGpiopBVKI6SNMJQ0BHbZ8mxcgkJBVVzGYnAp44jyqpo3zIJm2JpZeDYMx7IcK58rFa2hqrxCxAS0cMkZqrKcBpQ5adiqGkfUCREjzKFoCszh2OnXux1HeDoo46TWKhuWacCoNuF85ug6znmAIQhwDodTvaIf+VQ85vSJTxGPI9jG9FhV3e5dLBa5hZULI1/PG4ahG2Vd+HiM+Fdq7Ue2GTyXjsPNuoFoSAlGAVkjSaoLfBJ6Sj3ww4jwyfQLaFM3DQmtwRJr2CzQK1XfB0jZXYh0RDJiSGMTZGZgPRhDBBSD8tJzq+rVZR3c7H2OEGXjMJqyk/XfUQKaQBDOwNNYllnG7nLEM+WqVQA7LsVBzEgCv+WYzBAGpjxGMCbLDmFi+DympO1Xlkz8SDZlgP+mLRX9kKugrp+pTpP4wPj/6dlhvzYoryiIobZur0rAvZ+FVb0XfgzrveX1669wve42jWpK4dB5Q2rX7u36dFh3s7XdNGKvXW9e/BUn3bfhaJW/bqOCFVpvAzb4MxzYP4vXLu4MHtlbMz9vxqYAG9PkdhUv/fYiLn00bkjE5y/DeqO3oD+6A7e19hOcb3fvRw+tF38dF1qTMR/j4hPqtDsU2lbxPhmO6sbDuN0s2knXf8IkeFrftgaY+ZNyhAKwaf3uD//RbwU36xd87/Zs3lrdNqPiU3Wf02EOx8ZMEvrx6B/APFvK8XCbSkv0C/Hv5UVaiKeNU1dnJjWKcaBcrcldUlqcWAgQ8RzRzM26VbZNo2jZpfKN1TRujTujYJgto26UymVbmDMN2rA4odgI6ZjIWFJlN/PzPUE8dRhQDyItCWM8AaZ+g9hEHCku7YnDEVIGz6FQ8VXeZ8XEXljl1Ye55HQKVmEez2e2qvwO+QN9iOpjDtGxdFtH0t0DTGYEpL7LAWdiwhkXtZijJOaBmUtQjkIsboBIirCTL9zYOiPTWQCSqT4NvTiA3GwySyujs81/XkOYpdbe3XN68L7M6/RbVgLh4xHpwGQutyDaCGfuoHyWyNcJFw8TzuDrsUfk+RL15BHBGybHn/ZjIudjNyMio/dG/93MeO/cL97+eaf+DSn9tB67QF5CDsJml6m4H4R61LJuzlFunouTJE77V5LKGAl4XQikqfcBx0LeVs/hB1B9B6FfdLvsWJ9E3tmP+cV8QvsccZiKaVPS5QVPiz4w+bRwxTFZXvpuOQop6sZhyc/ZGoF4gUjG3z5SsIOlnzA/ir9FGHn7dp3BOogj8hTvCU6oL1fyHll9MRQ4FLBECF8YHYKfAzgX/Ni4K/KOCxfTNIo5fP1FkYpWVRHGYUy521RTw6HKpjz5agbO3ukTTKrk26t5yb68mgfdTl/o3RSpO1/y384aSccFgypfACmXqroUL00RnPoHqr4leEbYG0axZRoNs3wi7PvDfJRJ7ZP5s+WgpqfnofYv</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F95106357983D0B0E0401F0A07995357</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F95106357983D0B0E0401F0A07995357</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083331</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F95106357984D0B0E0401F0A07995357</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00019_FUNC_UVTC_UserName_RequestorUser_active_Requestee_active_with_userlinkconsent_does_not_exists_ResetPassword_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj1XIhQRIVJC4ng1b2i7Q3XZfquBMiEti09ihtL/+2KGhQGkPeyQk5Ml45puLv5kLFqSJ5bUZg4xjShS/11QfHKseuU7d1maWaWg2GI42mxkNrVo3kRW5tlGtuariM5aDTxgPCG+qlmHamlA07alheNWqV3UrrmP+UZVfkDFhWqhUDFVZpwlhXuG2qeYZ8WjAMPNIkALzOPIm7dGlJzS9oMSkti42KAuHWSvmfOnpOqqEgCBJUAXRVL/Q93QuQuZN8JwEPM/gzWfImurb3efn58pztUKzuW4ZhqEbri50QobnZ2rrW3kZQp9EdHPuBoQSjIIEvwYS1Ah4TEOlncxphnmcfmLa1E1DmtZgjTRk2uRM1d8dFOhOtLQHMmOBxuLALI2NIYIMCALlduw31bPTKri5O80CwiKapezg/HeQgKwgoUsINVZGVqI73eKRdLUuAHk+QUnO8AquZJssAwRMuckgwutLzETzhUwpyq+smfjhsssA/U1ZLvRdrAK6fiQ7PTwHxv9PzXbrtbHyK0hyaNEwcyeD2rIzGrqzn8k9ye76/vD+1Yxos4Cwq7wBtS332/mwWbe99XZp2OlP63fu82PDZs7C9BvjjP9+CReXnUeLOVbX6o3uoun50A5o+ybuNK7zP7/79Kpx9Zr4tfGly7/HV3o7GdTj29m37y+LvE+qcB0bjcVjdN7on6f51W3y+rpa2D+6hnN/82jWO+5Loz6GxjWMyPh2OFmN8WBYH/4YDoaOcaO3zfb99/vpN/fc6Y7yzj8Lcj6tT8k0pT+b7zHtxrAvLClhks8eAfHyKNvD7ykDUa+Af00vUoJDLSpUvaXkKMaBcLUlb0lq8XJBQDj0RDE354HgM8O1erWuY7drdqNv2IY5MNqG47pVt26UHLRBcQCxS0mEpS/Jspv++RogSj0GJIRMW9EcxcDULyz2Ah4oPhmLx0EJgykVLL6yeZTgMI7dBTddZM7mj8h+ckJbVa4ovybXWTvikO1Td3WPuseA8BKD5HfZ4Ex0OOMiF0/BKueJWVkFFQK5mACZJGHPshuOznC6TEAi1VMa5glUlvGyyIzONv+WFiBWSMf9afHwPo3r8FuZAqETYqnAZCwdEGWEIzPIKgP5PODabsCl+XYeYvm+RD55htEGyf6n9zaR/bHtERHRQ3fyYJa4t+onX/94U/8ClH6Yj62jcIV33JbDVMwHwR6tsppPQeWpkq9WeVG/umTGTJjXBUGa+gRQLujtZUoXQPStCf2k6bJFfeB5K9/Hl/OYTHjAIRXdphTHE1aLCTC5WvjimaxP3Vv2XIq8cVjzY7JuIjYQifjLJQV5SOoJ8Y34e6ZZ+F6uI7Z2/Ig4xT7BMZnLk5wjL580BaLCLBbER7Nd48cMHHO+L9wmeYuFi26a5Rw+/6JIRmuqAUI0J9zvqYVgl2ULnPxlCd670gczBZO/jeY1+3Q0340uJ4Lv0kDd6uL/VtZw0S4IVLkBFFia6lpsmsI5me+w+hvAA2I3LKvq1rqWbVlubZfYDbdR3yZwL5LWB/FHyU5OD99D618=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95022396C242296E0401F0A05990987</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95022396C242296E0401F0A05990987</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F951092D6C54A648E0401F0A05993970</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F951092D6C54A648E0401F0A05993970</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083338</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951092D6C55A648E0401F0A05993970</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083341</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083341</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083341</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj1XIhQRIVJC4ng1b2i7Q3XZfquBMiEti09ihtL/+2KGhQGkPeyQk5Ml45puLv5kLFqSJ5bUZg4xjShS/11QfHKseuU7d1maWaWg2GI42mxkNrVo3kRW5tlGtuariM5aDTxgPCG+qlmHamlA07alheNWqV3UrrmP+UZVfkDFhWqhUDFVZpwlhXuG2qeYZ8WjAMPNIkALzOPIm7dGlJzS9oMSkti42KAuHWSvmfOnpOqqEgCBJUAXRVL/Q93QuQuZN8JwEPM/gzWfImurb3efn58pztUKzuW4ZhqEbri50QobnZ2rrW3kZQp9EdHPuBoQSjIIEvwYS1Ah4TEOlncxphnmcfmLa1E1DmtZgjTRk2uRM1d8dFOhOtLQHMmOBxuLALI2NIYIMCALlduw31bPTKri5O80CwiKapezg/HeQgKwgoUsINVZGVqI73eKRdLUuAHk+QUnO8AquZJssAwRMuckgwutLzETzhUwpyq+smfjhsssA/U1ZLvRdrAK6fiQ7PTwHxv9PzXbrtbHyK0hyaNEwcyeD2rIzGrqzn8k9ye76/vD+1Yxos4Cwq7wBtS332/mwWbe99XZp2OlP63fu82PDZs7C9BvjjP9+CReXnUeLOVbX6o3uoun50A5o+ybuNK7zP7/79Kpx9Zr4tfGly7/HV3o7GdTj29m37y+LvE+qcB0bjcVjdN7on6f51W3y+rpa2D+6hnN/82jWO+5Loz6GxjWMyPh2OFmN8WBYH/4YDoaOcaO3zfb99/vpN/fc6Y7yzj8Lcj6tT8k0pT+b7zHtxrAvLClhks8eAfHyKNvD7ykDUa+Af00vUoJDLSpUvaXkKMaBcLUlb0lq8XJBQDj0RDE354HgM8O1erWuY7drdqNv2IY5MNqG47pVt26UHLRBcQCxS0mEpS/Jspv++RogSj0GJIRMW9EcxcDULyz2Ah4oPhmLx0EJgykVLL6yeZTgMI7dBTddZM7mj8h+ckJbVa4ovybXWTvikO1Td3WPuseA8BKD5HfZ4Ex0OOMiF0/BKueJWVkFFQK5mACZJGHPshuOznC6TEAi1VMa5glUlvGyyIzONv+WFiBWSMf9afHwPo3r8FuZAqETYqnAZCwdEGWEIzPIKgP5PODabsCl+XYeYvm+RD55htEGyf6n9zaR/bHtERHRQ3fyYJa4t+onX/94U/8ClH6Yj62jcIV33JbDVMwHwR6tsppPQeWpkq9WeVG/umTGTJjXBUGa+gRQLujtZUoXQPStCf2k6bJFfeB5K9/Hl/OYTHjAIRXdphTHE1aLCTC5WvjimaxP3Vv2XIq8cVjzY7JuIjYQifjLJQV5SOoJ8Y34e6ZZ+F6uI7Z2/Ig4xT7BMZnLk5wjL580BaLCLBbER7Nd48cMHHO+L9wmeYuFi26a5Rw+/6JIRmuqAUI0J9zvqYVgl2ULnPxlCd670gczBZO/jeY1+3Q0340uJ4Lv0kDd6uL/VtZw0S4IVLkBFFia6lpsmsI5me+w+hvAA2I3LKvq1rqWbVlubZfYDbdR3yZwL5LWB/FHyU5OD99D618=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F95022396C242296E0401F0A05990987</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH1chX3xGBYmFcpeWthRot9uXyjgDGBI7xA5Qfv21Q5MCpb3slSpRT8YzZ2aOj33BURg4XpNziAVhVOu26/rLxC26ZR/7RsUtVQz5f81AZXCNcWWM3ArgCpTHutblPIEu5QJRUdcdyy4aVsmwiyPL8lzXKzqFaqX6rGuPEHMZWroULF3bhAHlXpq2ricx9RjihHsUhcA9gb1h86bnSU8PZZj0xsUOZZowbsyEiDzTxAUfMAQBLmAWmhfmgc+Fz70hmVIkkhjecvq8rr/tXa/XhbVbYPHUdCzLMq2aKX18Tqbf9ca3bDP4XTphu3ULUUYJRgHZIgXqBsSM+VozmLKYiFn4SWjbtC0V2oANNrBdpN918z1Biu7MSAcgY44MPkN2FmwAE4iBYtAeBt26/v28Ce72jmJE+YTFIT9a/x0koCsIWAS+wbPKMnTnRzzRrsYFYK9LcZBwsoJbRZMIYeBaP4YJ2fQIl+TzuZaOX9tw+UcylgH+m7FcmPtYJXTzRHfaZApc/J+Z7c9rF+URBQk0lq2mdQ+TZnvems1aV6i9Xreerwadeb9bTyHsO+9A5eN+Wx+TNefW26br7a84umnOn5ZReTkajypPtPNb/Kz+KPdua50/zfH2H1a+7N8PE3rXnbX7eMV/tP5U/1TlYeLirt+pkKBMmvHt9ab3bRL50eP2x5Y9sJZ9A4uSPbi68h/7T9xZdpLi6wKuwgWb0vltFW5+Vy+31w8Iocvez94M/xr+Dos2WhSXIzSpPS2+lXqTX6+Dh/vlM9ksBrh3PVvX32var+HQmEnCMBnPAYtsqejRbWsdOS8kvpYXZSG+MUldvUhpFBdAhd5Qu5S0eIkUIOJ7cpi7dadWshzn0nXdYtkt2aVLq2jZHatpVWo1y3VbmQbtUBxBbDE6ISqXUtkdf74GiEOPA/UhNlYswTPg+hcR20ggrUsH8nAwymHEpIrb8/m2mlgUVZaxvXLGZDsVy41VsnXtlok7ehc3JwLiQ+l2D6R7AJhEBJS+K4JzyXAuZC+WaJWIwC6sUIGCpAiKlQh7TrFaMjkJowAUUjNkfhJAIZpFaWdMvvt1DIR5ah1cjtKD92ldx9+yFkgfnygHrmr5CXKMcOIOcrNCPi+4vF9wFr6Z+ESdL9lPERO8Q3L46Z0mih85R2RFL63hi53hzt3P3v5xp/kFKPO4H3kif0X20maXqbwfpHo0smkuUWFZSFarJJ1fRSljLMObUiBtcwg4kfL2OmILoGYewjzrdslRH2XO7Yf4EjGjQ4EEhJJtWro842kxBK6eFl15TDbnvlsOUsq+CdiIU7ZWIF8gCvGXjxTsYeUnzX35s2ax/z6uE7H28sg65XtCEDpVK3WPvH5CCsxkWCKFj8X7wU8FOJX80Jg3OcciJJvGiYDPv2hK0eo6wpglVHTbemrYV9kUp3iNwHt3+hAmVfK3q3nDP72an256Q6l3IdJzX/LfzgZJ6YJBVy+AFEtd38iXpkxOp3uq/gbwo7C7tXLLKTpOrZwLe0kKe61ayRt4UEnjg/mjZa+nx+eh8S8=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F95022E333463515E0401F0A0799033C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F95022E333463515E0401F0A0799033C</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083341</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F95022E333473515E0401F0A0799033C</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00020_FUNC_UVTC_UserName_RequestorUser_any_with_active_status_RequesteeUser_any_and_active_ValidateEmail_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4jx3jb8CewAzhI3GbtAnQJM1LRshrUGMkx5KB9NdXMjEBQnLpnWGG0Xq1e3b36EgnHM1TJ+xwDrkgjGpRr6U/1J246fk+Mpq+mxgemoARYAcMZNkexnYjsVFD1yLOC4goF4iKlu7Ib4blG7Y3tqzQdUOvXrOawb2u3UDOZWjpUrN0bTVPKQ/LtC29yGnIECc8pGgOPBQ4HHUuL0LpGaIKk94+WaMsE+btmRBZaJq4FgOGNMU1zObmibnjcxLzcESmFIkih5ecMW/pL3uXy2Vt6dZYPjUdy7JMKzClT8zJ9LPe/lRthjiiCVuvu4gySjBKyR+kQF2CmLFY66RTlhMxm78T2jZtS4U2YIUNbHv0s26+JijRHRlpB2TOkcFnyK6CDSGBHCgG7ecwaumfj5vgeu84R5QnLJ/zvfW/QQK6gJRlEBu8qqxCd3zEA+1qnwAOI4rTgpMFfFc0yRAGrl3lkJDVBeGSfDHXyvFrKy5/pGIZ4H8Zy4m5jVVCNw90p0emwMX/mdn2vNZRblBaQPs2+hL05Ak545d+h0QQdN3J8OrX+GzMWiWEbec1qM24X9b7ZN1w62XTOD7/Ob4+K3xmT667s8FPd3oXiHH91vuKu6M6PN0PA/NX52L1vXlWuP4pXJjjArE/X4idfLtDvUVyk/uJ92wze/EJ+s/DUb54/CG+fkP+NMp6o/zKb6TpOE7zMyvwXXZKb4mTnCFSPMbnc3Z9flPMzunQ+t3gzv1NdPnnclKYq0KwT0+/Fo8T219Nvo28TFx/se6brdeatmvYNVaSMComvwGLaqnoEfW0gZwXEh/Li7KQ2EhK1zBTGsUFUKG31S4lLWEhBYjEoRzmej0IfKvnWP6geeoMGgOvb3mWPbA6ViMI/Ho9qDRojWIPYpfRhKhcSmXX/PkYIJ6HHGgMubFgBZ4B1z+I2EMCaREdysPBKAdJHf2hgX1rugrmeOk33GXexE7wmGWxq2vfmfhBf+SdREC+q9zujnIPAZOMgJJ3xW8uCc6FbMUTWhQitWsLVKNQyAsgVxocOl7TNzmZZykooOacxUUKtWyWlY0x+frfMRDmpXXYH5fn7t2y9r9VHZA+MVEOXNVyCnKKcOAKcqtC3i+4vl1wFb5TxEQdL9lOkRO8RrL76ZUlih4bisiKHrqjB7vCvXE/evvbneYHoMz9fmwSxQuylba6S+X1IMWjXU3zCdWeasViUZTzayhhzGV4U+qjbY4AF1LdnsfsEai5CWEedblsUO9l3th38RViRkcCCZhLtmnl8oiXxQi4ellE8pSsjn227KSUfROwEods3VQ+QBTiD98oOMTKT5qv5N+S5fHruA7E2soj65TPCUHoVK3UNfL8Dikwk2GJ1D2Wbwc/FOBQ8l3jpskbLEKyaVIIeP+LpgStpSOMWUFF1NNLw7bIljjFcwbhq9ObMKWQv9zMK/7uzXx3eTGScjdH+saX/LezQUq6YNDVA6DE0tJX8qEpk9Pplqi/ANzXdcftDfqdbr/fd5xtXbc8u7Np4E4l7Tfmt5atnu6fh/Zf</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95023DFEACEEE22E0401F0A0799041A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95023DFEACEEE22E0401F0A0799041A</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950D205F8B2F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950D205F8B2F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083345</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950D205F8B3F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083347</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083347</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083347</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4jx3jb8CewAzhI3GbtAnQJM1LRshrUGMkx5KB9NdXMjEBQnLpnWGG0Xq1e3b36EgnHM1TJ+xwDrkgjGpRr6U/1J246fk+Mpq+mxgemoARYAcMZNkexnYjsVFD1yLOC4goF4iKlu7Ib4blG7Y3tqzQdUOvXrOawb2u3UDOZWjpUrN0bTVPKQ/LtC29yGnIECc8pGgOPBQ4HHUuL0LpGaIKk94+WaMsE+btmRBZaJq4FgOGNMU1zObmibnjcxLzcESmFIkih5ecMW/pL3uXy2Vt6dZYPjUdy7JMKzClT8zJ9LPe/lRthjiiCVuvu4gySjBKyR+kQF2CmLFY66RTlhMxm78T2jZtS4U2YIUNbHv0s26+JijRHRlpB2TOkcFnyK6CDSGBHCgG7ecwaumfj5vgeu84R5QnLJ/zvfW/QQK6gJRlEBu8qqxCd3zEA+1qnwAOI4rTgpMFfFc0yRAGrl3lkJDVBeGSfDHXyvFrKy5/pGIZ4H8Zy4m5jVVCNw90p0emwMX/mdn2vNZRblBaQPs2+hL05Ak545d+h0QQdN3J8OrX+GzMWiWEbec1qM24X9b7ZN1w62XTOD7/Ob4+K3xmT667s8FPd3oXiHH91vuKu6M6PN0PA/NX52L1vXlWuP4pXJjjArE/X4idfLtDvUVyk/uJ92wze/EJ+s/DUb54/CG+fkP+NMp6o/zKb6TpOE7zMyvwXXZKb4mTnCFSPMbnc3Z9flPMzunQ+t3gzv1NdPnnclKYq0KwT0+/Fo8T219Nvo28TFx/se6brdeatmvYNVaSMComvwGLaqnoEfW0gZwXEh/Li7KQ2EhK1zBTGsUFUKG31S4lLWEhBYjEoRzmej0IfKvnWP6geeoMGgOvb3mWPbA6ViMI/Ho9qDRojWIPYpfRhKhcSmXX/PkYIJ6HHGgMubFgBZ4B1z+I2EMCaREdysPBKAdJHf2hgX1rugrmeOk33GXexE7wmGWxq2vfmfhBf+SdREC+q9zujnIPAZOMgJJ3xW8uCc6FbMUTWhQitWsLVKNQyAsgVxocOl7TNzmZZykooOacxUUKtWyWlY0x+frfMRDmpXXYH5fn7t2y9r9VHZA+MVEOXNVyCnKKcOAKcqtC3i+4vl1wFb5TxEQdL9lOkRO8RrL76ZUlih4bisiKHrqjB7vCvXE/evvbneYHoMz9fmwSxQuylba6S+X1IMWjXU3zCdWeasViUZTzayhhzGV4U+qjbY4AF1LdnsfsEai5CWEedblsUO9l3th38RViRkcCCZhLtmnl8oiXxQi4ellE8pSsjn227KSUfROwEods3VQ+QBTiD98oOMTKT5qv5N+S5fHruA7E2soj65TPCUHoVK3UNfL8Dikwk2GJ1D2Wbwc/FOBQ8l3jpskbLEKyaVIIeP+LpgStpSOMWUFF1NNLw7bIljjFcwbhq9ObMKWQv9zMK/7uzXx3eTGScjdH+saX/LezQUq6YNDVA6DE0tJX8qEpk9Pplqi/ANzXdcftDfqdbr/fd5xtXbc8u7Np4E4l7Tfmt5atnu6fh/Zf</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F95023DFEACEEE22E0401F0A0799041A</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbU+JKEH73V6Syj1shVy5JCVUIYTceRQ+gx/Vla5w0MJrMYGYC6K8/M8FEQPSwp8oqnE5P99eX+bpPOUoTJ+hyDpkgjGpRv63/tptxq+VC02g0wTa8ph8bDy35n2V5VtNpQbNVb+laxHkOEeUCUdHWHcv2DKtu2N7EsgLXDTy/ZruNe127hYxL01KlZunaOk0oDwq3bT3PaMAQJzygKAUeCByMu5cXgdQMUIlJ75xuUBYOs85ciEVgmrgWA4YkwTXMUvPU3NE5jXkwJjOKRJ7Bm8+Yt/W3u6vVqrZyayybmY5lWablm1In5mT2Te+clJchjuiUbc49RBklGCXkFSlQlyDmLNa6yYxlRMzTT0zbpm0p0wassYFtj37TzXcHBbojLe2AzDgy+BzZpbERTCEDikG7GUVt/dtxFdzcnWSI8inLUr53/jNIQJeQsAXEBi8jK9Edb/FAujqngIOI4iTnZAlD1SYLhIFr1xlMyfqCcNl8MdeK8mtrLv9I2WWA/6Qsp+Y2VgndPJCdPpkBF/+nZtv12li5RUkOnV+DySW9vnLYbXh3RYc/mmE96t/+uE0Tr11A2FbegKrK/Xbeb9aqt94u/Rz8dBc3OX9pDFfhj6fB4/fGy6o3nIXNJJlM6/PlyBKOcx6NB9f/8BlzzuYgPDoc4Obyby9BZ69Ls27XU3bR8LsnZ7xR/054w22AP7m7Ce2np7vxKsEt7+fVaP7LvpaP3f9rNc2GXRaJGza6b81H934P+Yvbcy+9HjxGUWw9YvPMbZ2c06sHcWPGocuszHbXd99Z+z2m7Rh2hSUljPOHR8CiPKr2iPraQNYLia/pRUlIbEwL1WChOIoLoELvqFuKWoJcEhCJA1nMzXng1y3Hdrqe54X1sNEL5WOyB1bXqvu+5ftnJQdtUOxB7DE6JcqXYtlN/3wNEKcBBxpDZixZjufA9S8s9pFAWkRH8nEwymHCJIuv/MVqOn1dNq3Zkz17db3ntc+fHJjp2pCJK3qVdacCsl3qdneoewSYLAgoflcNzmWHcyFz8YyWuUjs2hLVKORyAmSKhAPHa9VNTtJFAgqpmbI4T6C2mC+KzJh88+sYCPNCOgonxcP7NK79b2UKpE5MlAJXsZyBLCMcmEFuGcjnATe2Ay7Nd/OYqPcl8ykygjdIdj+9t4nqj6pHZES/e+Pfdom7Uj/6+seb5hegzP18VI7iJdlyWw5TOR8ke3TKaj6j2nMtXy7zon5NxYyZNG9KgrTNMeBc0tvLhD0BNSsT5lHTpUK957mS7+LLxZyOBRKQym7TiuMRq8UYuFotIvlM1sfuLTsuZd4ErMUhWS+RG4hC/OWSggOs9KT4Wv6sWBa/l+uArS0/Mk65TwhCZ+qk5sjLJ02BmTRLJPGxbNv4IQOHnO8KqyRXWITspodcwOdfNMVobR1hzHIqor5eCLZZtsApXhYQvCt9MFMw+dtoXvNPR/Pd5cVY8l2K9EqX/LeyQYp2waCrDaDA0tbXctOUzulsi9XfAH4gdrc/CLu9MAwdpyL2piR2z+5WCdyJpPNB/FGyldP999D5Fw==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950212A444E5E6CE0401F0A0599099B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950212A444E5E6CE0401F0A0599099B</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083347</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950212A444F5E6CE0401F0A0599099B</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00021_FUNC_UVTC_UserName_RequestorUser_any_with_active_status_RequesteeUser_any_and_pending_ValidateEmail_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","pending");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj6sQJwRIooLEcmnZXmi5tNt9WRlnALeJA7HDpb9+7dBQoLSHPRIS8mQ8883F38w5x1Fo+3XOIRE0ZlqnWdX/VKwS8mwAw3HBNhzHQ8ao4o0Ny/bcctF1se05utbhPIUO4wIzUdVtZDkGKhmWM0DILxb9kl0olp3fuvYACZempUoB6doqChn3M7dVPU2YH2NOuc9wBNwXxO/Xb659qenjHJNeO9+gzBwmtakQM980SSEAAmFICiSOzHNzT+c84H6fThgWaQJvPgNe1d/uLpfLwrJYiJOJaSOETOSZUifgdPJNr53llyHosHG8OTcwixklOKSvWIG6ATGNA60eTuKEimn0iWnLtJAybcCKGMRy2DfdfHeQoTvR0h7IhGODT7GVG+vBGBJgBLRhr1PVv51Wwc3dQYIZH8dJxA/O/wYJ2ALCeAaBwfPIcnSnWzySrto5EL/DSJhyuoBb1SYzTIBrdwmM6eqactl8Adey8msrLn807zIg/1KWc3MXq4RuHslOk06Ai/9Ts916baw84DCF2uuQil5YmrLlbP28NNFzwEbNXvl3dN+qZhB2lTegtuV+Ox8267a33i6FpH85DC5Mb/568TsJ4erxV/Gqk76M4nmyvvNavQt3PnwprcfDQeVHOPxJG63B5GI0d1rRw8+pWP4oXUzEw3Xv5yp8OrufhEWXrt3nKyza86fbyyihrntx6QxumnVAleip3cGDQaVbv+qO0terR7c7vA9732/F/eN8Vbyaxt3u2kWAksrwDCYD3nr1SPvp++Vdqw2WS6rvMe3GsC/MKaGfjp6BiPyo2qPT1NqyXlh8TS9KQgNjnKn6M8VRXAATek3dUtTip5KAaODLYm7Oba9kobLdLtuNcrvsei3kIKuN6qjieaWi4+UctEFxALERszFVvhTLbvrna4Ak8jmwABJjEadkClz/wmITC6x1WE8+jphxGMSSxa3nsse8ycqaY0BW6lbGaP2yIBXxqmu3seiyblIfC0j2ubu4x909IHRGQRG86nAuW5wLmYw5XqQitAoLXGCQyhGQKBb2bcctmZxGsxAUVDOKgzSEwmw6y1Jj8s2/bWDCM2mvNche3qeBHX7LcyB1AqoUuIrlB8g6wpEh5OSBfB5weTfg3Hw9Dah6YDKhIqFkg2T/03ufqAbZNomM6E+j/8fKcW/VT77+8ab5BSjzMB9bR8GC7rjNp6kcEJI+ank157gwL6SLRZrVr6KoMZHmTcmQltkHkkp+Ww/iF2Dm1oR50njZoj7wvJXv40vFlPUFFhDJbtOy4wm7RR+42i068p2sTl1c9lzKvAlYiWOyRihXEIX4yy2F+ETpSfGd/FvGSfBeriO2dvzIOOVCISibqJMaJOtPmoLE0iyVzBcnu8aPGTjmfF+4TfIWi5DdNEoFfP5FU5RW1TEhccpEp6lngl2azXCK9Qz8d6UPZjIqf5vNK/7pbP51c92XhBdhfatL/1vZoFm7ENDVCpBhqeoruWpK52yyQ+tvAA+YHTVtVKrYro0ct71l9pLn2ZXG+2Pei6T2QfxRspPTw/dQ+ws=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950D2057282048FE0401F0A059927C1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950D2057282048FE0401F0A059927C1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F951062F62C6F689E0401F0A07995349</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F951062F62C6F689E0401F0A07995349</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083350</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951062F62C7F689E0401F0A07995349</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083354</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083354</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083354</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj6sQJwRIooLEcmnZXmi5tNt9WRlnALeJA7HDpb9+7dBQoLSHPRIS8mQ8883F38w5x1Fo+3XOIRE0ZlqnWdX/VKwS8mwAw3HBNhzHQ8ao4o0Ny/bcctF1se05utbhPIUO4wIzUdVtZDkGKhmWM0DILxb9kl0olp3fuvYACZempUoB6doqChn3M7dVPU2YH2NOuc9wBNwXxO/Xb659qenjHJNeO9+gzBwmtakQM980SSEAAmFICiSOzHNzT+c84H6fThgWaQJvPgNe1d/uLpfLwrJYiJOJaSOETOSZUifgdPJNr53llyHosHG8OTcwixklOKSvWIG6ATGNA60eTuKEimn0iWnLtJAybcCKGMRy2DfdfHeQoTvR0h7IhGODT7GVG+vBGBJgBLRhr1PVv51Wwc3dQYIZH8dJxA/O/wYJ2ALCeAaBwfPIcnSnWzySrto5EL/DSJhyuoBb1SYzTIBrdwmM6eqactl8Adey8msrLn807zIg/1KWc3MXq4RuHslOk06Ai/9Ts916baw84DCF2uuQil5YmrLlbP28NNFzwEbNXvl3dN+qZhB2lTegtuV+Ox8267a33i6FpH85DC5Mb/568TsJ4erxV/Gqk76M4nmyvvNavQt3PnwprcfDQeVHOPxJG63B5GI0d1rRw8+pWP4oXUzEw3Xv5yp8OrufhEWXrt3nKyza86fbyyihrntx6QxumnVAleip3cGDQaVbv+qO0terR7c7vA9732/F/eN8Vbyaxt3u2kWAksrwDCYD3nr1SPvp++Vdqw2WS6rvMe3GsC/MKaGfjp6BiPyo2qPT1NqyXlh8TS9KQgNjnKn6M8VRXAATek3dUtTip5KAaODLYm7Oba9kobLdLtuNcrvsei3kIKuN6qjieaWi4+UctEFxALERszFVvhTLbvrna4Ak8jmwABJjEadkClz/wmITC6x1WE8+jphxGMSSxa3nsse8ycqaY0BW6lbGaP2yIBXxqmu3seiyblIfC0j2ubu4x909IHRGQRG86nAuW5wLmYw5XqQitAoLXGCQyhGQKBb2bcctmZxGsxAUVDOKgzSEwmw6y1Jj8s2/bWDCM2mvNche3qeBHX7LcyB1AqoUuIrlB8g6wpEh5OSBfB5weTfg3Hw9Dah6YDKhIqFkg2T/03ufqAbZNomM6E+j/8fKcW/VT77+8ab5BSjzMB9bR8GC7rjNp6kcEJI+ank157gwL6SLRZrVr6KoMZHmTcmQltkHkkp+Ww/iF2Dm1oR50njZoj7wvJXv40vFlPUFFhDJbtOy4wm7RR+42i068p2sTl1c9lzKvAlYiWOyRihXEIX4yy2F+ETpSfGd/FvGSfBeriO2dvzIOOVCISibqJMaJOtPmoLE0iyVzBcnu8aPGTjmfF+4TfIWi5DdNEoFfP5FU5RW1TEhccpEp6lngl2azXCK9Qz8d6UPZjIqf5vNK/7pbP51c92XhBdhfatL/1vZoFm7ENDVCpBhqeoruWpK52yyQ+tvAA+YHTVtVKrYro0ct71l9pLn2ZXG+2Pei6T2QfxRspPTw/dQ+ws=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950D2057282048FE0401F0A059927C1</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj0chdy5RQaIBtLSl9AC73d2XletMgkviQOxw+/Vrh4YCpT3skZCQJ+OZb2Y+f/Y1Q0lseW3GIOMkpUq/01R/B2HDDKqBo9Us5GhOzQENuW5De3aC0KnZjVoAhqr0GcuhTxlHlDdVyzAdzXA105kYhmfbnlutWJb9S1W+Q8ZEaOFSEbvWSUyZV6RtqnlGvRQxwjyKEmAex964Pbj3hKeHSkxq63qHskiYtaaczz1dx5UAMMQxruA00a/1I5/rgHljElHE8wxecwasqb7uXa1WlZVdSbNItwzD0I2GLnwCRqIrtfWl3AxBn4bpbu0jmlKCUUy2SIIaAJ+mgdKOozQjfJp8ENrUTUOG1mCNNWw69ErV3xIU6C6MdAQyY0hjU2SWwUYQQgYUg/Jt1G+qV5dNcLd3kiHKwjRL2Mn67yABXUKcziHQWFlZie7yiGfa1boG7PUpjnNGlvAgaTJHGJjymEFI1veECfIFTCnGr6yZ+JGSZYD/ZizX+iFWAV0/050OiYDx/zOzw3ntonxHcQ6tp9th1/9pZC/Vmdl5mCSLaJBjXO883qXNAsKh8w7Uftyv61Oy7rn1usmPbpd3/27CzqM7fVzr6+r0nj8MgQzIZN6oh8TJBpPNMpnaeS3a2C8Wur3bBpHdHdx91R+Xi6cbpw21aDbLRsPsi//jp4Eby2xlOk/bcGM/1IdrH3EfjLzd60Zpx18/9zeLWW/h3vjDX/qGQ/fmuU7H/Cm8ReEoIFv77h8zmsxW/pfuz+34m7EN73vd/Ot8e6/r7eZbTYc1HBtLSRjnzy+AebmU9Oh3lJ6YF+Kfy4u0kEALC1dvLjWKcaBcbcldUlq8XAgQCTwxzN2613ANy250qp1626yZbtdwDLNntA230TAadbPUoB2KE4h+SkMic0mV3fHnc4A48RjQADJtmeZ4Ckz9JGIHcaT06UgcjpQymKRCxV07nc1odUumtdysb6IFfwmrlptvVeUh5UM6zNohh+xYuu0j6R4BJnMCUt8lwZlgOOOiFwu0zHlsVpaoQiEXN0AmRdiznLqrM5LMY5BI9SQN8hgq8+m86IzOdv+WhjArrKPupDh4H9Z1+q1sgfAJiHRgspYbEGOEM3eQUxbyccHVw4LL8O08IPJ8iX7yjOAdkuNPbzSR/NhzRFT02x//3nNh737x9vc79U9A6af92CcKluQgbXmZivtBqEernOYCVRaVfLnMi/nVpDJmIrwuBNLUx4BzIW+bSToDqu9D6BfdLnvUJ5n39mN8OZ8KhUAcEsE2pVhe8LQYA5NPi744JutL3y1HKUXfOKz5OZsfixeIRPzpIwV7WPoJ86P4W6VZ8DauM7EO8og6xXuCExrJlbxHNh+QAqciLBHCl2aHwc8FOJf82Lhv8h4LF2x6zjl8/EWRitZUEcZpTnm/oxaGQ5UtcPLNHLw3p3dhCiV/vZrX7MOr+cfgfiz0LkHq3pf8t7NGCrpgUOULoMDSVNfipSmS0+hA1V8Bngp7xzLcmlW3DKfeOxR2q+a/HeajSlrvzO8tBz09PQ+tPw==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950239D6D8A1715E0401F0A05990981</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950239D6D8A1715E0401F0A05990981</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083354</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950239D6D8B1715E0401F0A05990981</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>00f70853-115f-431a-b2d9-2f9def959681</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00022_FUNC_UVTC_UserName_RequestorUser_any_with_active_status_RequesteeUser_any_and_blocked_ValidateEmail_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0TpIwq5EC6JAIlCadn0CpTT7pct15mA28ShsROgX3/sQChQ6GEfCQl5Mp5Zc/GaqTMUBpbbYgxiTiKq9DoN9Y9t+siyqp4GVc/SbIxr2qvhgYZrZsmzqlVk2o6q9BhLoEcZR5Q3VMswbc0oa6Y9Mgy3VHLLTtEpGb9VZQwxE6aFStFQlUUYUOZmbhtqElM3Qowwl6IQmMuxO2zd3rhC00U5JrVZX6HMHMbNKeczV9dx0QMMQYCLOAr1ur6jU/eYOyQTingSw9qnxxrq+u58Pi/OS8UonuiWYRi64ehCx2Nkcq42z/LL4PWoH63ObUQjSjAKyCeSoG6BTyNPaQWTKCZ8Gh4xbeqmIU1rsMAaNm16rupfDjJ0J1raARkzpLEpMnNjA/AhBopBeRr0Gur5aRVc3R3FiDI/ikO2d/47SEBTCKIZeBrLI8vRnW7xQLqadcBuj+IgYSSFO9kmM4SBKQ8x+GRxQ5hoPo8pWfmVBRM/kncZ4L8pS13fxiqg6wey0yETYPz/1Gy7XisrYxQk0Ow/X81Gjsd+Oa8v7Udcbdkta3D9EI76L40MwrbyCtSm3OvzfrNuemt9yXsjVunx+u7lotRi09HiyuxfzcnsJvws3H0+dMZv6fDmLex3MJ/CmPnJxKv1P8a9Ar0zlgP/6QLIpPpYmI5+V0bdM7NTHlauq2k6CZ9eClH3vTS1ZwVnXK1cPKZXn6MBHlul90ohYU5hWenbrcun4N2qXd8XloPn+6ASmH14eTG6fR69nrGHwfi6hjm/fgr/6fXTYfep8RXTdgy7wpwShsnrG2CeH2V79DpKV9QL8Z/pRUqIp/mZqjuTHMU4UK425S1JLW4iCIh4rijm6tx1ykbHMipWzWm3yx3j0rANs2u0jKrjlCuVi5yDVij2ILYj6hPpS7Lsqn9+BohDlwH1INbSKMFTYOoPFjuII6VHB+JxRJTBKBIsbvpg+8E8TjHmkV+1GbMny3lsWapyF/F7eh+3fA7xLnWXdqh7AJjMCEh+lw3ORIczLnLxgdKEB2YxRUUKiZgAsSRh17JrZZ2RcBaARKqHkZcEUJxNZ1lmdLb6tzSEWSYdXI6yh3c0rv1veQqEjkekApOxXIAoIxyYQXYeyPGAK9sB5+ZbiUfk+xL55DHBKyS7n77aRPbHpkdERH/awz9mjnujfvL17zf1H0Dp+/nYOPJSsuU2H6ZiPgj2aObV/EDFj2KSpklWv6pkxliY1wVBmvoQcCLobTmK3oHqGxP6SdNlg3rP80a+iy/hUzrkiEMouk3JjiesFkNgcrXoiWeyOHVv2XEp8sZhwQ/J2oHYQCTiH5cU7GKpJ8QP4m8exd5XuQ7Y2vIj4hT7BCd0Ik9yjiyPNAWOhFkiiC+Kt40fMnDI+a5wk+QNFi666TXhcPyLIhmtoSKMo4TyXkfNBNssm+Hkyxm4X0rfzGRMvh7NC3Z0ND/f3gwF34VI3eiS/1bWSNYuGFS5AWRYGupCbJrCOZ1ssfoa4D6xW6bVuuxetruOUd4mdnHqbhK4E0nzm/i7ZCun+++h+S8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950212AEFECF905E0401F0A079905EF</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950212AEFECF905E0401F0A079905EF</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950D206289CC5D0E0401F0A0799566B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950D206289CC5D0E0401F0A0799566B</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083358</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950D206289DC5D0E0401F0A0799566B</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_08341</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_08341</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_08341</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0TpIwq5EC6JAIlCadn0CpTT7pct15mA28ShsROgX3/sQChQ6GEfCQl5Mp5Zc/GaqTMUBpbbYgxiTiKq9DoN9Y9t+siyqp4GVc/SbIxr2qvhgYZrZsmzqlVk2o6q9BhLoEcZR5Q3VMswbc0oa6Y9Mgy3VHLLTtEpGb9VZQwxE6aFStFQlUUYUOZmbhtqElM3Qowwl6IQmMuxO2zd3rhC00U5JrVZX6HMHMbNKeczV9dx0QMMQYCLOAr1ur6jU/eYOyQTingSw9qnxxrq+u58Pi/OS8UonuiWYRi64ehCx2Nkcq42z/LL4PWoH63ObUQjSjAKyCeSoG6BTyNPaQWTKCZ8Gh4xbeqmIU1rsMAaNm16rupfDjJ0J1raARkzpLEpMnNjA/AhBopBeRr0Gur5aRVc3R3FiDI/ikO2d/47SEBTCKIZeBrLI8vRnW7xQLqadcBuj+IgYSSFO9kmM4SBKQ8x+GRxQ5hoPo8pWfmVBRM/kncZ4L8pS13fxiqg6wey0yETYPz/1Gy7XisrYxQk0Ow/X81Gjsd+Oa8v7Udcbdkta3D9EI76L40MwrbyCtSm3OvzfrNuemt9yXsjVunx+u7lotRi09HiyuxfzcnsJvws3H0+dMZv6fDmLex3MJ/CmPnJxKv1P8a9Ar0zlgP/6QLIpPpYmI5+V0bdM7NTHlauq2k6CZ9eClH3vTS1ZwVnXK1cPKZXn6MBHlul90ohYU5hWenbrcun4N2qXd8XloPn+6ASmH14eTG6fR69nrGHwfi6hjm/fgr/6fXTYfep8RXTdgy7wpwShsnrG2CeH2V79DpKV9QL8Z/pRUqIp/mZqjuTHMU4UK425S1JLW4iCIh4rijm6tx1ykbHMipWzWm3yx3j0rANs2u0jKrjlCuVi5yDVij2ILYj6hPpS7Lsqn9+BohDlwH1INbSKMFTYOoPFjuII6VHB+JxRJTBKBIsbvpg+8E8TjHmkV+1GbMny3lsWapyF/F7eh+3fA7xLnWXdqh7AJjMCEh+lw3ORIczLnLxgdKEB2YxRUUKiZgAsSRh17JrZZ2RcBaARKqHkZcEUJxNZ1lmdLb6tzSEWSYdXI6yh3c0rv1veQqEjkekApOxXIAoIxyYQXYeyPGAK9sB5+ZbiUfk+xL55DHBKyS7n77aRPbHpkdERH/awz9mjnujfvL17zf1H0Dp+/nYOPJSsuU2H6ZiPgj2aObV/EDFj2KSpklWv6pkxliY1wVBmvoQcCLobTmK3oHqGxP6SdNlg3rP80a+iy/hUzrkiEMouk3JjiesFkNgcrXoiWeyOHVv2XEp8sZhwQ/J2oHYQCTiH5cU7GKpJ8QP4m8exd5XuQ7Y2vIj4hT7BCd0Ik9yjiyPNAWOhFkiiC+Kt40fMnDI+a5wk+QNFi666TXhcPyLIhmtoSKMo4TyXkfNBNssm+Hkyxm4X0rfzGRMvh7NC3Z0ND/f3gwF34VI3eiS/1bWSNYuGFS5AWRYGupCbJrCOZ1ssfoa4D6xW6bVuuxetruOUd4mdnHqbhK4E0nzm/i7ZCun+++h+S8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950212AEFECF905E0401F0A079905EF</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj0chzoUCUUFiS9HhLPQC7B7oS2UcB0wTO7WdQPvr1w5NCvRy2CMhIU/GM9/MfP7sCwGT2A26QmAuCaPGoNc2HxohigDyGla93qxbvr9A1sJtNa0Q1iO/7oVh022YxkCIDA+okJDKtukCx7dA3XL8KQCB5wfAq3kA3JvGL8yFCq1casA0tklMRVCkbZsZpwGDgoiAwgSLQKJg0h0NA+UZwBKT2bnYoSwS8s5KyjSwbVQLMcJxjGqIJfaFfeBzEYpgQpYUyozj15yhaJuvezebTW3j1Rhf2i4AwAYtW/mEgizPzM63cjMOBzRiu/UlpIwSBGPyAjWoEZYrFhrdeMk4kavkk9CO7QAd2sJbZCHHp2em/ZagQHdipAOQXEBLrKBTBhvjCHNMETZ+jgdt8+y0Ce72TjmkImI8EUfrP4OEaY5jluLQEmVlJbrTI37Qrs4FRsGAojgTJMfXmiYpRFgYtxxHZDskQpEvFEYxfmMr1I+ULMPoT8ZyYe9jVdDtD7rTI0ss5P+Z2f68dlF+wTjDnbsunA9lQ95kg+FwfHezQNG9/zL8B01Zu4Cw77wDVY37dX1M1opbr5vmM9pNX5zeS5OxWe96c/9rNV3k03uZOCQb5VvoARmBZ7DuRffxuseHPxa36fTv5aw7eBxP54/X561hX/ae7H9l9q0P+c28e8uW4OV2LOre9JFf5w5K8vQ5GfLZDyrjO9pvinM0ynIcebO5j+Zo3UiT6/nS765+rvsNV5LZmsySb+fw/nbwV3PCFpE7Wt3lN3jUfqtpv4ZDYykJk2yxxkiWS02PQc/oq3lB+bW8aAsJrahwDVKtUUJiKs2O3qWlJciUAJEwUMPcrfutOnBdp+813O99F/hXwAdOH3RBo9UCbs8pNWiH4gjiJaMR0bm0yu748zVAlAQC0xBzK2cZWmFhfhGxByU0BnSsDgejAivqmA/hmiq0mxZbiCfMWyvK47iZepFpXDN5Q294N5KYHyq3d6DcY4xISrCWd81voQgupGrFE8wzGTu1HNYoztQFwLUGB67frNuCJGmMNVA7YWEW41q6SovG2GL371oQicI6vpoW5+7Tso6/lR1QPiHRDkLX8h2rKeJ3V5AX1MtCPi/4fL/gMnw3C4k+XqqdkhO0Q3L46Y0lmh4VRVRFD5eTh4oKlfvJ29/vtL8AZR/3o0oU5mQvbXmXqutBiUennOYTrD3VsjzPivk1tDByFd5W+ujYE4wypW7PU/aIqV2FsE+6XCrUR5kr+yG+TK7oREKJE8U2o1ie8LKYYKFfFgN1SranPlsOUqq+SbyVH9kuY/UA0Yi/fKOgAGk/Zb5VfxvGw7dxfRBrL4+qUz0nJKFLvdLXyPMnpEBMhSVK9xjfD/5RgI+SHxqrJldYpGLTIpP48y+GFrS2CRFiGZWDnlkY9kW2wCmfUxy8Ob0LUwj56828FZ/ezLPRcKLkLoFm5Uv+29kiBV0QNvUDoMDSNrfqoamS0+WeqL8CfKfrjtu96l9d9lugfqDr9at+1cCDSjrvzO8tez09Pg+d3w==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950221F372BF204E0401F0A079902D1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950221F372BF204E0401F0A079902D1</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_08341</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950221F372CF204E0401F0A079902D1</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>00f70853-115f-431a-b2d9-2f9def959681</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00023_FUNC_UVTC_UserName_RequestorUser_any_with_active_status_RequesteeUser_any_and_deleted_ValidateEmail_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","deleted");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","USER_STATUS_NOT_VALID");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4jxkjG2MInsAMgdDjFJIUaNL0pSPkNYjakrFkIP31RzIxAXI59Mwww2i92v32om/3QuAkrvodISCTlDMj6LXMX1OIptNz27HcZkisWuR51nmTNKw6eNMQR1HkgmcagRA5BExIzGTLrNpOzbI9y6lNbNt3a77dqNjVxk/TuIdMKNNKpWKbxiaJmfALty0zz5jPsaDCZzgB4UvijzvDga80fVxiMtsXW5SFw6w9lzL1ESKVEAjEMakQnqALdKBzEQp/TGcMyzyDZ5+haJnPd9frdWXtVng2Q1XbtpHdREonFHT22Wx/Ki9DGLCIb89dzDijBMf0D9aghiDnPDQ68YxnVM6Td0w7yLG1aQs2xCJOjX020YuDAt2Jlg5AZgJbYo6d0tgIIsiAETC+j4KW+fm0Cm7vTjLMRMSzRByd/w4SsBXEPIXQEmVkJbrTLb6RrvYFED9gJM4FXcGNbpMUExDGXQYR3QyoUM0XCqMov7ER6kfLLgPyN2W5QPtYFXT0RnZ6dAZC/p+a7ddra+Uexzm00azP6ZrV//l+9hM9yIH8zet1e/pnkJJWAWFfeQtqV+7n83Gz7nrr+dLiUVzPZmnntvejuxjha/x14jy5I84e77zsz2X42NtcDbr3/ZuHdfUp+E2r1L2OyPTL/aL+ML6ly7OIoXCBEb++H34aLibxZXgGzcXaaQSD2dV8cz1dfqstSXp7Pv52Hozdx3y5cMarL/P6cnFpe3n3Lq5dnzV+hlcd5ti1L0MsN98eppf0Uzz5PkD37o1Xe+pNFsncdYatl5j2YzgUlpQwzqcLILI86vYIekZf1QvLj+lFS2hoRYWqn2qOEhKYNNv6lqYWP1cERENfFXN77jc9u+pUO33bdvtN27uya7bTtzt2o6lP/ZKDtiiOIHY5i6j2pVl22z8fAySJL4CFkFkrnpM5CPMDiz0ssRGwkXocnAmYcMXiLCURaYikmcehUwtdR9HpUiT11DRuuLxlt1knkpAdUrd7QN0jIDSloPldN7hQHS6kysUSr3IZO5UVrjDI1QTINAn71dq5hwRN0hg0UpTwMI+hks7TIjNIbP+rFiaikI6uJsXDezeu429lCpROSLWC0LFcgiojvJpBru+VgbwfcH0/4NJ8Jw+pfl8qnzKjZIvk8NNLm+j+2PWIiuhXd/zLKXHv1E++/vom+gAUOs7HzlG4ontuy2Gq5oNij3ZZzSWuLCv5apUX9WtoZsyUeaQI0kFjILmit6cJ/w0M7Uygk6bLDvWR5538EF8u52wssYREdZtRHE9YLcYg9GoRqGeyOXVvOXCp8iZhI9+SdWO1gWjEHy4pxCdaT4nv1N+aZ+FLud6wtedHxan2CUnZTJ/0HHl6pykIV2apIj6e7Rt/y8Bbzg+FuyTvsEjVTdNcwvtfDM1oLRMTwnMmg55ZCPZZtsApn1LwX5RemSmY/Hk0b8S7o/nHcDBWfJdgc6dL/1vZokW7EDD1BlBgaZkbtWkq52y2x+rPAF8Re/XKdd1Gw/WcQ2J33e4ugQeRtF+JX0v2cnr8Htr/Ag==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95022E333773515E0401F0A0799033C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95022E333773515E0401F0A0799033C</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950212AF003F905E0401F0A079905EF</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950212AF003F905E0401F0A079905EF</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_08345</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950212AF004F905E0401F0A079905EF</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_08348</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_08348</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_08348</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4jxkjG2MInsAMgdDjFJIUaNL0pSPkNYjakrFkIP31RzIxAXI59Mwww2i92v32om/3QuAkrvodISCTlDMj6LXMX1OIptNz27HcZkisWuR51nmTNKw6eNMQR1HkgmcagRA5BExIzGTLrNpOzbI9y6lNbNt3a77dqNjVxk/TuIdMKNNKpWKbxiaJmfALty0zz5jPsaDCZzgB4UvijzvDga80fVxiMtsXW5SFw6w9lzL1ESKVEAjEMakQnqALdKBzEQp/TGcMyzyDZ5+haJnPd9frdWXtVng2Q1XbtpHdREonFHT22Wx/Ki9DGLCIb89dzDijBMf0D9aghiDnPDQ68YxnVM6Td0w7yLG1aQs2xCJOjX020YuDAt2Jlg5AZgJbYo6d0tgIIsiAETC+j4KW+fm0Cm7vTjLMRMSzRByd/w4SsBXEPIXQEmVkJbrTLb6RrvYFED9gJM4FXcGNbpMUExDGXQYR3QyoUM0XCqMov7ER6kfLLgPyN2W5QPtYFXT0RnZ6dAZC/p+a7ddra+Uexzm00azP6ZrV//l+9hM9yIH8zet1e/pnkJJWAWFfeQtqV+7n83Gz7nrr+dLiUVzPZmnntvejuxjha/x14jy5I84e77zsz2X42NtcDbr3/ZuHdfUp+E2r1L2OyPTL/aL+ML6ly7OIoXCBEb++H34aLibxZXgGzcXaaQSD2dV8cz1dfqstSXp7Pv52Hozdx3y5cMarL/P6cnFpe3n3Lq5dnzV+hlcd5ti1L0MsN98eppf0Uzz5PkD37o1Xe+pNFsncdYatl5j2YzgUlpQwzqcLILI86vYIekZf1QvLj+lFS2hoRYWqn2qOEhKYNNv6lqYWP1cERENfFXN77jc9u+pUO33bdvtN27uya7bTtzt2o6lP/ZKDtiiOIHY5i6j2pVl22z8fAySJL4CFkFkrnpM5CPMDiz0ssRGwkXocnAmYcMXiLCURaYikmcehUwtdR9HpUiT11DRuuLxlt1knkpAdUrd7QN0jIDSloPldN7hQHS6kysUSr3IZO5UVrjDI1QTINAn71dq5hwRN0hg0UpTwMI+hks7TIjNIbP+rFiaikI6uJsXDezeu429lCpROSLWC0LFcgiojvJpBru+VgbwfcH0/4NJ8Jw+pfl8qnzKjZIvk8NNLm+j+2PWIiuhXd/zLKXHv1E++/vom+gAUOs7HzlG4ontuy2Gq5oNij3ZZzSWuLCv5apUX9WtoZsyUeaQI0kFjILmit6cJ/w0M7Uygk6bLDvWR5538EF8u52wssYREdZtRHE9YLcYg9GoRqGeyOXVvOXCp8iZhI9+SdWO1gWjEHy4pxCdaT4nv1N+aZ+FLud6wtedHxan2CUnZTJ/0HHl6pykIV2apIj6e7Rt/y8Bbzg+FuyTvsEjVTdNcwvtfDM1oLRMTwnMmg55ZCPZZtsApn1LwX5RemSmY/Hk0b8S7o/nHcDBWfJdgc6dL/1vZokW7EDD1BlBgaZkbtWkq52y2x+rPAF8Re/XKdd1Gw/WcQ2J33e4ugQeRtF+JX0v2cnr8Htr/Ag==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F95022E333773515E0401F0A0799033C</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj6uQKwWigkS5nexStgW22uVlZZwJuE3s1HaA9tcfJzQUKO1hj4SEPBnPfHPxN3MlUBI7flsI4JIwqgXdpv6nDggaYYiMesOZGx44DaPuuXXDAduqVmvh3LtEuhYIkUFAhURUNnXHsj3Dqhq2N7Us3/V826o4rjvTtXvgQplWKhVL1zZJTIVfuG3qGac+Q4IIn6IEhC+xP2nfDH2l6aMSk9662qIsHPLWUsrUN01cCQFDHOMKZol5ZR7oXIXCn5AFRTLj8OozFE399e56va6s3QrjC9OxLMu0GqbSCQVZXOitL+VlCAMase25gyijBKOYvKAc1A3IJQu1drxgnMhl8oFp27St3LQBG2xg26MXuvnmoEB3pqUDkFwgQyyRXRobQwQcKAbt5zho6hfnVXB7d8oRFRHjiTg6/x0koCuIWQqhIcrISnTnWzyRrtYVYD+gOM4EWcEob5MUYRDaLYeIbIZEqOYLhVaUX9sI9SNllwH+m7JcmftYFXTzRHa6ZAFC/p+a7ddra+UexRm0yKzDv4v+82w2flgPO3eUkM4M1t/q88dmAWFfeQtqV+7X83Gz7nrr9dLvQerVeDRdv5iz6lz2fqXVxmBEiPi5sAaRw2dfw1vnLnZr8uYpMM1vqPMS9XpRvYtnDljDYJ667iPvzYeM3n8ZmfavF9K3IEjvr+0XVnvZDKb92nC5Wv5AU36Jx9W+9/ht4nVWN4vG7+HDoM1+jkd318lg0B4NahaI39OHweUUo86Xh9HX7P6f6HqSNca30drDpN18i2k/hkNhSQmTbP4AWJbHvD2CrtZX9ULyc3rJJSQ0okLVT3OOEhKo1Fv5rZxa/EwREAl9Vcztud+oWl3HqvYb7Xa/1vd6lmfZfatt1RqN6uVlo+SgLYojiB1GI5L7yll22z+fA8SJL4CGwI0Vy/AShP6JxS6SSAvoWD0ORgVMmWJxm4dpzU3YOnl49my2WLIYA19HS6ZrIyZ/0B+8HUngh9ztHnD3GDBJCeQEn3e4UC0upErGE1plMrYrK1ShkKkRwHMW9h2vXjUFSdIYcqhmwsIshkq6TIvUmGL77xgIi0I67k2Ll/dhYMffyhwonZDkCiKP5RpUHeHEELLKQD4O+HI/4NJ8OwtJ/sBUQiUneIvk8NNbn+QNsmsSFdGfzuSPXeLeqZ99/f1N8xNQ5nE+do7CFdlzW05TNSAUfbTKaj6hylMlW62yon61nBq5Mm8qhrTNCeBM8dvzlD0CNXcmzLPGyw71keed/BBfJpd0IpGERHWbVhzP2C0mIPLdIlDvZHPu4nLgUuVNwkaeknVitYLkiD/dUrCPcz0lvlV/a8bDt3KdsLXnR8WpFgpJ6CI/5YPk+YOmwEyZJYr5GN83fsrAKeeHwl2Sd1ik6qZ5JuHjL1pOaU0dYcwyKoOuXgj2abbAKZ9T8N+U3pkpqPx1Nm/Eh7P5181woggvQfpOl/y3skGKdsGg5ytAgaWpb9SqqZzTxR6tvwI8ZnbH6bmuW6u5Vbu6z+yW63Z2CTyIpPVO/F6yl9Pj99D6Fw==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950D205F9AAF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950D205F9AAF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_08348</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950D205F9ABF7F4E0401F0A07995669</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>00f70853-115f-431a-b2d9-2f9def959681</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00024_FUNC_UVTC_UserName_RequestorUser_any_with_active_status_RequesteeUser_any_and_active_UnlockMe_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+I6FP6+v6LT/eiUpi1toSPMoKB2L4gL6OJ+2QlpCtE2gSYF9NffpFgERC97R2eYnJ485zkveZJzDtPEDlqc40wQRrWw3dD/VOtRXLcAMGzbdoyqM5kYE9dxjToAfly3HQ/ZWNdCznMcUi4gFQ3dBlbVAK5hVUcABE41sJyK69V/69oDzriEli4VoGvrNKE8KMI29DyjAYOc8IDCFPNAoGDY6nUD6RnAkpPePN+wLAJmzZkQ88A0USXCCCcJqiCWmufmns95xIMhmVIo8gy/xYx4Q3/bu1qtKiunwrKpaQMATFA3pU/EyfS73vxWbsZRSGO2WV9CyihBMCGvUJHqYTFjkdZKpiwjYpZ+Am2ZFlDQBl4jA1lV+l033wMU7E5E2iOZcWjwGbRKsAGOcYYpwtr9IGzo30/r4GbvKIOUxyxL+cH67yhhusQJm+PI4GVmJbvTEY+Uq3mOURBSlOScLPGtGpM5RJhrdxmOybpLuBy+iGtF+7U1l/+knDKM/qYt5+YuV0ndPFKdNpliLv5Pz3b7tUF5gEmOmz+m8MERVXHz5LdGeWdcY7W213H7HkONgsKu84bUtt1v68Nh3c7W26YWOetdXy/GF0+PeejZ3i/w7Pcefou7G5zl7c547rfJMn98fKE07b7O/Kf2XSThV493DvST9dLznuHE9+JkcjH+xq5vJtni1236++aBh5NR//4nXSb+Zcrg6/3Z/d1t77HX69drZ2Gnc8PHEw7/eeaDWV+Mfw4X8NH70c2G7CpdVbsd5xt2BnQ1mFydVYee2/W5MwWN95x2c9g3lpIwzCdPGIlyqcYjbGtXsl9QfC0vykIiIy5cg7nSKC4wFXpT7VLSEuRSgEgUyGZu1ld11wK+36q1650W6Mi/KrCuQAv49brruqDUoA2LA4qXjMZExVIqu5mfrwmiNOCYRjgzlixHM8z1LxDbUEAtpAN5OBjleMSUii/ceBXX5tMajy3qsrjm0vmUxRNdu2WiT/tZKxY425duZ0+6BxiROcFK39WAcznhXMhaLOAyF4lVWcIKxbm8ATIlwoFdrbkmJ+k8wYqpmbIoT3BlPpsXlTH55tc2IOKFddAZFQfv07wOv5UlkD4RUQ5c5XKBZRvxkTsIlIl8nrC3m3AJ38ojos6XrKfICNow2f/0PiZqPrYzIjP6czn8Y5W8t+4nb/+40/yClHlYj22gaEl2wpaXqbwfpHo0y24uYGVRyZfLvOifr5Qxk/CmFEjLHGKUS3l7GbFnTM0thHnS7bJlfRB5a9/nl4sZHQoocCqnTSuWJzwthpirp0Uoj8n61HfLXkhZN4HX4pjtMpEvEMX4y0cKCpDyk+Y7+bNiWfTeriNYO3FknvI9IQidqpW6R14+GQrEJCyRwseyXfBjAMeC7xu3Rd5yEXKaJrnAn3/RlKI1dIgQy6kI23ph2FXZgqd4mePg3ekDTKHkb1fzmn96NY973aHUuxTqW1/y384GKcYFyYep9C+4NPS1fGnK4HS6o+pvBA+EHdiOY/mW2/acantX2IHd8bcF3Muk+cH80bJT08Pz0PwX</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F9502331715D634DE0401F0A079902E7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F9502331715D634DE0401F0A079902E7</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F951077A8D9EA0E0E0401F0A07995550</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F951077A8D9EA0E0E0401F0A07995550</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083412</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951077A8D9FA0E0E0401F0A07995550</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083415</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083415</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083415</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+I6FP6+v6LT/eiUpi1toSPMoKB2L4gL6OJ+2QlpCtE2gSYF9NffpFgERC97R2eYnJ485zkveZJzDtPEDlqc40wQRrWw3dD/VOtRXLcAMGzbdoyqM5kYE9dxjToAfly3HQ/ZWNdCznMcUi4gFQ3dBlbVAK5hVUcABE41sJyK69V/69oDzriEli4VoGvrNKE8KMI29DyjAYOc8IDCFPNAoGDY6nUD6RnAkpPePN+wLAJmzZkQ88A0USXCCCcJqiCWmufmns95xIMhmVIo8gy/xYx4Q3/bu1qtKiunwrKpaQMATFA3pU/EyfS73vxWbsZRSGO2WV9CyihBMCGvUJHqYTFjkdZKpiwjYpZ+Am2ZFlDQBl4jA1lV+l033wMU7E5E2iOZcWjwGbRKsAGOcYYpwtr9IGzo30/r4GbvKIOUxyxL+cH67yhhusQJm+PI4GVmJbvTEY+Uq3mOURBSlOScLPGtGpM5RJhrdxmOybpLuBy+iGtF+7U1l/+knDKM/qYt5+YuV0ndPFKdNpliLv5Pz3b7tUF5gEmOmz+m8MERVXHz5LdGeWdcY7W213H7HkONgsKu84bUtt1v68Nh3c7W26YWOetdXy/GF0+PeejZ3i/w7Pcefou7G5zl7c547rfJMn98fKE07b7O/Kf2XSThV493DvST9dLznuHE9+JkcjH+xq5vJtni1236++aBh5NR//4nXSb+Zcrg6/3Z/d1t77HX69drZ2Gnc8PHEw7/eeaDWV+Mfw4X8NH70c2G7CpdVbsd5xt2BnQ1mFydVYee2/W5MwWN95x2c9g3lpIwzCdPGIlyqcYjbGtXsl9QfC0vykIiIy5cg7nSKC4wFXpT7VLSEuRSgEgUyGZu1ld11wK+36q1650W6Mi/KrCuQAv49brruqDUoA2LA4qXjMZExVIqu5mfrwmiNOCYRjgzlixHM8z1LxDbUEAtpAN5OBjleMSUii/ceBXX5tMajy3qsrjm0vmUxRNdu2WiT/tZKxY425duZ0+6BxiROcFK39WAcznhXMhaLOAyF4lVWcIKxbm8ATIlwoFdrbkmJ+k8wYqpmbIoT3BlPpsXlTH55tc2IOKFddAZFQfv07wOv5UlkD4RUQ5c5XKBZRvxkTsIlIl8nrC3m3AJ38ojos6XrKfICNow2f/0PiZqPrYzIjP6czn8Y5W8t+4nb/+40/yClHlYj22gaEl2wpaXqbwfpHo0y24uYGVRyZfLvOifr5Qxk/CmFEjLHGKUS3l7GbFnTM0thHnS7bJlfRB5a9/nl4sZHQoocCqnTSuWJzwthpirp0Uoj8n61HfLXkhZN4HX4pjtMpEvEMX4y0cKCpDyk+Y7+bNiWfTeriNYO3FknvI9IQidqpW6R14+GQrEJCyRwseyXfBjAMeC7xu3Rd5yEXKaJrnAn3/RlKI1dIgQy6kI23ph2FXZgqd4mePg3ekDTKHkb1fzmn96NY973aHUuxTqW1/y384GKcYFyYep9C+4NPS1fGnK4HS6o+pvBA+EHdiOY/mW2/acantX2IHd8bcF3Muk+cH80bJT08Pz0PwX</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F9502331715D634DE0401F0A079902E7</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSRxRy41KigsRy2U23lLbQLacvlXEcMCR2iB0C/fXHDk0KlPawR0JCnoxnvrn4m7lmIAwsp80YijmmRHG7TfUVNlADmaaveYYx1SqgZmrAM2zNbNSnvl21qlW/piouYwlyCeOA8KZqGWZFM6qaWRkbhmNXHLNWvrLtF1X5g2ImTAuVsqEqmzAgzMncNtUkJg4FDDOHgBAxh0Nn1B7cOkLTATkmtXW9Q5k5jFtzziNH12HZQxAFASxDGurX+oHOtcecEZ4RwJMYvfv0WFN9v5umaTm1yzSe6ZZhGLrR0IWOx/DsUm1d5JeR5xKf7s4dQCjBEAT4DUhQA8Tn1FPawYzGmM/DL0ybumlI0xraQA2aFXKp6h8OMnRnWjoAGTOgsTkwc2OPyEcxIhApT49uU708r4K7u+MYEObTOGRH57+DhMgaBTRCnsbyyHJ051s8ka7WNYKOS2CQMLxGd7JNIgARU+5j5OPNLWai+TymZOVXNkz8cN5lCP5NWa71fawCun4iO108Q4z/n5rt12tn5Q8IEtR6DlbL6Ytdh+YkItOhh1azK/y2fBpP3GYGYV95B6oo9/v5uFmL3nq/tFhY9/7dDZ5WJpNa6ddtfzT+mU7dsU/cp9nLeNzjvXRyP5yUUrgwGs/b5+HNqt4opXU6wssHq3Q1bEfYmkclu2RdeDWrgrvjh9/Gtv9w+3OA9fhm9rYY2zfDaMG2Se33r4UfW43bLezN+8NBaTXnz5Xuyw9j4A3c9Pmfm0WjuviZuPFiekHJY2+SvnQGHb6kV/V+mC6bHzHtx3AozClhlEwXCPL8KNvD7Sp9US/Av6cXKcGe5meqTiQ5inFEuNqStyS1OIkgIOw5opi7c79RNSzxgjrtypVVrds9o2KYfaNtVBsNo9H+kXPQDsURxA4lPpa+JMvu+ud7gDB0GCIeirU1TeAcMfUbi13AgeKSR/E4KGFoTAWLm95bFfrzIPXCEJgmnS5Z7M/eYBSqyh3lQzKM2z5H8SF32wfc/YggjjCSBC87nIkWZ1wkYwXWCQ/M8hqUCUrECIglCztW5aqqMxxGAZJQ9ZB6SYDK0TzKUqOz3b+lAcgy6WNvnL28LwM7/pbnQOh4WCowGcsPJOqITgwhIw/k64Br+wHn5tuJh+UDEwnlMYY7JIefPvpENkjRJCKi187o1cxxF+pnX/98U/8GlH6cj8KRt8Z7bvNpKgaEoI9WXs0VKK/KyXqdZPWrS2qMhXldMKSpjxBMBL9tx3SJiF6Y0M8aLwXqI8+F/BBfwudkxAFHoeg2JTuesVuMEJO7hSveyebcxeXApcgbRxt+StYJxAoiEX+7pUAHSj0hvhd/KY29j3KdsLXnR8QpFgqOyUye5CDZftEUkAqzWDAfjfeNnzJwyvmhsEhygYWLbpomHH39RZGU1lQBhDQh3O2qmWCfZjOcfBsh50Ppk5mMyt9n84Z9OZsng9uRILwQqIUu/m9lDWftApEqV4AMS1PdiFVTOCezPVp/B/iJ2W3brJvVbs2udAtmrwtmt3r1IoEHkbQ+iT9L9nJ6/B5a/wI=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F9502197CA482573E0401F0A059909AB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F9502197CA482573E0401F0A059909AB</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083415</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F9502197CA492573E0401F0A059909AB</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>00f70853-115f-431a-b2d9-2f9def959681</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00025_FUNC_UVTC_UserName_RequestorUser_any_with_active_status_RequesteeUser_any_and_pending_UnlockMe_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","pending");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdU+I8FL73V3S6l05JWnBLO8JMBdTu+kl1db3ZCUko0TbFJoXqr9+kWAREX/ad0WFyenLOcz7ynHMoUJo4fiAEzSXLuBH2O+afkXuAidOCVtuFyGp5xLXao6ZrYbd94H2nzTZpN00jFKKgIRcScdkxHWi3LHhg2a0bCP1my3fsBmy7D6bxi+ZCmVYqDWgaZZpw4VduO2aRcz9Dggmfo5QKX2I/Cs7PfKXpoxqT2T1coKwc5t2JlFMfANwgFNMkwQ2cpeAQrOkcEuFHLOZIFjl980lEx3y7O5/PG/NmI8tj4EAIAfSA0iGCxd/M7l59mZKQj7PFuYd4xhlGCXtFGtQ5lZOMGEESZzmTk/QT0zawoTZt0RJb2G7xbyZ4d1Ch29HSGshcIEtMkF0bG9IxzSnH1Lgdhh3z224VXNy9yREX4yxPxcb53yBRPqNJNqXEEnVkNbrdLW5JV/eQYj/kOCkEm9EL3SZThKkwrnI6ZuUZE6r5iDCq8hulUH+s7jKK/6Ush2AVq4IOtmSnz2Iq5P+p2Wq9FlZ+oaSg3fgHP02DYjZLYfBQth9Oweu+85Tz09PzTgVhVXkBalnut/Nmsy576+1SNH/s3ZHeAfh5TUaxGMVXKZbXbZnCGcLhczxyToZeFATT2dUzCO4u2fzk6ul1v5zc35KjJCq93y33LHHs+fX+/l7/jj6+uhCfX5+Ugx/fiQvFyc8hCH8mtzI4n0RlOO7dTOOXLH+axCA/GV3c/vL6xw/4pB9dO/P+w+N9Sz6N0x+ti7s9xnI42P99GbXDBxJcXjjtuPMe02oM68KaEqJi9EixrI+6PcK+cazqheTX9KIljFjjStWfao4SknJpdvUtTS1+oQiIEV8Vc3E+9g6g4wS2e+QFx+2eO4AtaB/DALqeB52+V3PQAsUGxF7Gx0z70iy76J+vAeLUF5QTmluzrMATKswvLPaRREbIh+pxZFzQm0yxOCbenCMHosyL8XgyJS9FKifJq2lcZPKSX+bBWNJ8nbmba8w9pJhNGdX0rvtbqAYXUqXiGc0KmdiNGWpwWqgBkGsO9p1W+wAIlk4TqoGCNCNFQhvTybRKDBCLX8dCWFTS4eCmenefhrX5rc6A0iFMKwgdyxFVVaRbRpBdB/J5wN9XA67NBwVh+nmpdMqc4QWS9U/vXaLbY9kiKqI/veiPXeNequ98/eNN8AUosJmPpSMyYytu61mqxoMij25dzWfUeG4o6imq+rmaGHNlHih+tEFEcaHY7eUme6IcLE2AnYbLEvWG56V8HV8hJzySSNJUdZtRHXfYLCIq9GYRqldS7rq2rLlUeZO0lNtkvUQtIBrxlzsK9rHWU+Ir9TPPcvJeri22VvyoONU6IRmP9UmPkZdPmgJnyixTvJflq8a3GdjmfF24TPISi1TdNCok/fyLoQmtYyKMs4LLsG9WglWSrXDKlyn135U+mKmI/G0yl+LTyXx/fhYpukuRudRl/61ssapdMDX1AlBh6ZilWjSVcx6vkPobwA+83uwfD44cZzBQ/6u83rKDZQLXIul+EH+UrOR08z10/wI=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95023DFEB22EE22E0401F0A0799041A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95023DFEB22EE22E0401F0A0799041A</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95022A17B9AF8C7E0401F0A079902D9</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95022A17B9AF8C7E0401F0A079902D9</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083419</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95022A17B9BF8C7E0401F0A079902D9</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083423</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083423</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083423</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdU+I8FL73V3S6l05JWnBLO8JMBdTu+kl1db3ZCUko0TbFJoXqr9+kWAREX/ad0WFyenLOcz7ynHMoUJo4fiAEzSXLuBH2O+afkXuAidOCVtuFyGp5xLXao6ZrYbd94H2nzTZpN00jFKKgIRcScdkxHWi3LHhg2a0bCP1my3fsBmy7D6bxi+ZCmVYqDWgaZZpw4VduO2aRcz9Dggmfo5QKX2I/Cs7PfKXpoxqT2T1coKwc5t2JlFMfANwgFNMkwQ2cpeAQrOkcEuFHLOZIFjl980lEx3y7O5/PG/NmI8tj4EAIAfSA0iGCxd/M7l59mZKQj7PFuYd4xhlGCXtFGtQ5lZOMGEESZzmTk/QT0zawoTZt0RJb2G7xbyZ4d1Ch29HSGshcIEtMkF0bG9IxzSnH1Lgdhh3z224VXNy9yREX4yxPxcb53yBRPqNJNqXEEnVkNbrdLW5JV/eQYj/kOCkEm9EL3SZThKkwrnI6ZuUZE6r5iDCq8hulUH+s7jKK/6Ush2AVq4IOtmSnz2Iq5P+p2Wq9FlZ+oaSg3fgHP02DYjZLYfBQth9Oweu+85Tz09PzTgVhVXkBalnut/Nmsy576+1SNH/s3ZHeAfh5TUaxGMVXKZbXbZnCGcLhczxyToZeFATT2dUzCO4u2fzk6ul1v5zc35KjJCq93y33LHHs+fX+/l7/jj6+uhCfX5+Ugx/fiQvFyc8hCH8mtzI4n0RlOO7dTOOXLH+axCA/GV3c/vL6xw/4pB9dO/P+w+N9Sz6N0x+ti7s9xnI42P99GbXDBxJcXjjtuPMe02oM68KaEqJi9EixrI+6PcK+cazqheTX9KIljFjjStWfao4SknJpdvUtTS1+oQiIEV8Vc3E+9g6g4wS2e+QFx+2eO4AtaB/DALqeB52+V3PQAsUGxF7Gx0z70iy76J+vAeLUF5QTmluzrMATKswvLPaRREbIh+pxZFzQm0yxOCbenCMHosyL8XgyJS9FKifJq2lcZPKSX+bBWNJ8nbmba8w9pJhNGdX0rvtbqAYXUqXiGc0KmdiNGWpwWqgBkGsO9p1W+wAIlk4TqoGCNCNFQhvTybRKDBCLX8dCWFTS4eCmenefhrX5rc6A0iFMKwgdyxFVVaRbRpBdB/J5wN9XA67NBwVh+nmpdMqc4QWS9U/vXaLbY9kiKqI/veiPXeNequ98/eNN8AUosJmPpSMyYytu61mqxoMij25dzWfUeG4o6imq+rmaGHNlHih+tEFEcaHY7eUme6IcLE2AnYbLEvWG56V8HV8hJzySSNJUdZtRHXfYLCIq9GYRqldS7rq2rLlUeZO0lNtkvUQtIBrxlzsK9rHWU+Ir9TPPcvJeri22VvyoONU6IRmP9UmPkZdPmgJnyixTvJflq8a3GdjmfF24TPISi1TdNCok/fyLoQmtYyKMs4LLsG9WglWSrXDKlyn135U+mKmI/G0yl+LTyXx/fhYpukuRudRl/61ssapdMDX1AlBh6ZilWjSVcx6vkPobwA+83uwfD44cZzBQ/6u83rKDZQLXIul+EH+UrOR08z10/wI=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F95023DFEB22EE22E0401F0A0799041A</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4jx3jC3dPYIYESJ3mQoHQtC8dIS+g1JaMJDuQX1/JxAQIyaFnBuPRerX77UXf6kygOPL8jhDAJWHUCLot83cToFIBVLbQFJBVgXrNaqBGzap4s+oM1+t46oSmEQiRQkCFRFS2TM9xK5ZTtdzK2HH8csX3KqWq1/xlGhPgQplWKiXHNFZxRIWfu22ZKac+Q4IIn6IYhC+xP+rcXPtK00cFJrN9tkGZO+TthZSJb9u4FAKGKMIlzGL7zN7TOQuFPyJzimTK4cVnKFrmy96np6fSU7nE+Nz2HMexnaatdEJB5p/N9qdiM4QBnbHN+gJRRglGEXlGGtQNyAULjU40Z5zIRfyOadd2HW3aghW2sFuhn0371UGO7kRLeyC5QJZYILcwNoQZcKAYjPth0DI/n1bBzd4xR1TMGI/FwfrfIAHNIGIJhJYoIivQnW7xSLraZ4D9gOIoFSSDW90mCcIgjAGHGVldE6GaLxRGXn5jJdSPFF0G+F/KcmbvYlXQ7SPZ6ZI5CPl/arZbr42VCYpSaAe1y9ny7uv3KQ29x1vxWGuueO9L9nNwd9/KIewqb0Bty/2yPmzWbW+9bMrKvN4fe/dfH9mP5YPduCHO8ucV/HEnPwJxde/xmyj4NRAolGMepRg1vjL3ujuvrTrxgE1+dp077F3/Sus8cbJPk2CeZV8e1reJe+7J80hMa+NnUa2xZIDw8/mkSXiHrqLq+vlbmT04tSBbL/n3y0nn8pxNB8NOYx5PL0l8Vb6fLj65zWF8tabDce8+TMZ/vs3Bab3GtBvDvrCghFE6fQQsi6Vuj6Br9FW9kPyYXrSEhNYsV/UTzVFCApVmW+/S1OKnioBI6Ktibtb9ZtXxvH6/1uw6FafW76l/t+90nHqz6ZQ75YKDNigOIF4wOiPal2bZTf98DBDHvgAaArcyluIFCPMDi10kkRHQoTocjAoYM8XiLm0sWBJGZNnIlm6j7DXWmCxdfTxumbyjd7wzk8D3qbu8R91DwCQhoPldN7hQHS6kysUSZamM3FKGShRSNQG4JmG1r1G1BYmTCDRSO2ZhGkEpWSR5ZmyxeXsWwiKXDnvj/OC9G9fhtyIFSickWkHoWM5BlRGOzCC3COT9gGu7ARfmO2lI9PlS+ZSc4A2S/U+vbaL7Y9sjKqLfF6PfboF7q37y9rc77Q9A2Yf52DoKM7Ljthimaj4o9mgX1Vyi0rKUZlma16+umZEr87YiSNceAU4Vva3H7A9Qe2vCPmm6bFEfeN7K9/GlckFHEkmIVbcZ+fKEq8UIhL5aBOqYrE69t+y5VHmTsJLHZBeRuoFoxB9eUrCPtZ4SD9TrifHXwI/Z2vGj4lT3CUnoXK/0HFm/0xSYKbNEER/ju8aPGTjmfF+4TfIWi1TdNE0lvP/F0IzWMhHGLKUy6Jq5YJdlc5xynYD/qvTGTM7kL6N5Jd4dzQ831yPFdzEyt7rkv5UtkrcLBlPfAHIsLXOlbprKOZ3vsPoLwDfEXu72e+ee1+upZ5fYK25nm8C9SNpvxG8lOzk9PA/tvw==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F95022FF69D0406FE0401F0A079903A3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F95022FF69D0406FE0401F0A079903A3</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083423</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F95022FF69D1406FE0401F0A079903A3</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>00f70853-115f-431a-b2d9-2f9def959681</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00026_FUNC_UVTC_UserName_RequestorUser_any_with_active_status_RequesteeUser_any_and_blocked_UnlockMe_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbdbuI8EL3vU0TpZRXihASaqCAFKLt0S//ott3eVMYZwLuJA7ETaJ9+7UAoUNqP/SQk5Ml45syPz8wZx3Fk+wHnkAqaMK3XaegvXr1uu65tG6hGHMOBOhheiIgBDlSHmNh1J8S61uM8gx7jAjPR0G1kOQZyDcu5R8ivOr59WkHIeta1B0i5NC1VKkjXFnHEuF+4behZyvwEc8p9hmPgviD+IOhf+lLTxyUmvXm2RFk4TJsTIaa+aZJKCASiiFRIEptn5pbOWcj9AR0zLLIUVj5D3tBXd+fzeWVerSTp2LQRQibyTKkTcjo+1ptH5WUIe2yULM9tzBJGCY7oG1ag+iAmSagF0ThJqZjEn5i2TAsp0wYsiEEshx3r5ruDAt2BlrZAphwbfIKt0tgdjCAFRkD7eddr6MeHVXB59z7FjI+SNOY753+DBCyHKJlCaPAyshLd4Rb3pKt5BsTvMRJlnOZwpdpkiglw7SaFEV1cUi6bL+RaUX5tweWPll0G5F/KcmZuYpXQzT3Z6dAxcPF/arZZr6WVBxxl0MxvFkPqtq7o1dvj+OoacXZhxiMUnLyRRgFhU3kJal3u1Xm3Wde9tbr0UHWDy+d+Pq2fWPGP819Pdj3qT4fWn1vcq81HVnBy3X27wFfVfIb63i+7FT4P0Wzc/v7mjdKFG8ZdmfDHy1ss0ODohEBefxp+S/nJE//tzRwOrZ6Xjl4Jyu38m5jftm67+CLjTxei9uPu9P6WJE+DOo2HgY2j78Pn30PScjuzWnJaO2rHj9XwZ3VOF45wnm+uR/3bxntMmzFsC0tKGGTD30BEeVTt0etoXVkvLL6mFyWhoTEqVP2p4igugAm9qW4pavEzSUA09GUxl+eu51qoVnVtp90NbDc4Rw6yuihAdc9zq06n5KAlih2I7YSNqPKlWHbZP18DJLHPgYWQGnmSkQlw/QuLHSyw1mN38nEkjMN9IlncsqPxqzV13tK6PfFmkbdw63ke01Ndu0rENbtOg5GAdJu6q1vUfQeETikoflcNzmWHcyFzMcN5JiKrkuMKg0xOgFSRsG87p67JaTyNQCE14yTMIqhMJ9MiMyZf/tsGJryQ3p3fFw/v07h2v5UpkDohVQpcxdICWUbYM4OsMpDPA65tBlyaD7KQqvcl8ylSSpZItj+9t4nqj3WPyIhe2oMXq8S9Vj/4+seb5hegzN18rB2FOd1wWw5TOR8kezTLas5wZVbJ8jwr6ldXzJhK86YkSMscAMkkvb3eJ3+AmWsT5kHTZY16x/Navo0vExM2EFhALLtNK44HrBYD4Gq16Mlnsjh0b9lyKfMmYCH2ydqR3EAU4i+XFOITpSfFN/JvnqThe7n22NrwI+OU+4SgbKxOao68ftIUJJFmqSS+JN00vs/APufbwnWS11iE7KZhJuDzL5pitIaOCUkyJnodvRBssmyBU7xOwX9X+mCmYPLVaF7wT0fzU/9yIPkuxvpal/63skGLdiGgqw2gwNLQF3LTlM7ZeIPVVwB3iB3ZtofaTjewWq3Omthdz0Oe9/6YtyJpfhB/lGzkdPc9NP8C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F9502290C4FA1BBDE0401F0A05990991</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F9502290C4FA1BBDE0401F0A05990991</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F951063524CFA25AE0401F0A0799534D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F951063524CFA25AE0401F0A0799534D</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083427</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951063524D0A25AE0401F0A0799534D</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083430</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083430</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083430</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbdbuI8EL3vU0TpZRXihASaqCAFKLt0S//ott3eVMYZwLuJA7ETaJ9+7UAoUNqP/SQk5Ml45syPz8wZx3Fk+wHnkAqaMK3XaegvXr1uu65tG6hGHMOBOhheiIgBDlSHmNh1J8S61uM8gx7jAjPR0G1kOQZyDcu5R8ivOr59WkHIeta1B0i5NC1VKkjXFnHEuF+4behZyvwEc8p9hmPgviD+IOhf+lLTxyUmvXm2RFk4TJsTIaa+aZJKCASiiFRIEptn5pbOWcj9AR0zLLIUVj5D3tBXd+fzeWVerSTp2LQRQibyTKkTcjo+1ptH5WUIe2yULM9tzBJGCY7oG1ag+iAmSagF0ThJqZjEn5i2TAsp0wYsiEEshx3r5ruDAt2BlrZAphwbfIKt0tgdjCAFRkD7eddr6MeHVXB59z7FjI+SNOY753+DBCyHKJlCaPAyshLd4Rb3pKt5BsTvMRJlnOZwpdpkiglw7SaFEV1cUi6bL+RaUX5tweWPll0G5F/KcmZuYpXQzT3Z6dAxcPF/arZZr6WVBxxl0MxvFkPqtq7o1dvj+OoacXZhxiMUnLyRRgFhU3kJal3u1Xm3Wde9tbr0UHWDy+d+Pq2fWPGP819Pdj3qT4fWn1vcq81HVnBy3X27wFfVfIb63i+7FT4P0Wzc/v7mjdKFG8ZdmfDHy1ss0ODohEBefxp+S/nJE//tzRwOrZ6Xjl4Jyu38m5jftm67+CLjTxei9uPu9P6WJE+DOo2HgY2j78Pn30PScjuzWnJaO2rHj9XwZ3VOF45wnm+uR/3bxntMmzFsC0tKGGTD30BEeVTt0etoXVkvLL6mFyWhoTEqVP2p4igugAm9qW4pavEzSUA09GUxl+eu51qoVnVtp90NbDc4Rw6yuihAdc9zq06n5KAlih2I7YSNqPKlWHbZP18DJLHPgYWQGnmSkQlw/QuLHSyw1mN38nEkjMN9IlncsqPxqzV13tK6PfFmkbdw63ke01Ndu0rENbtOg5GAdJu6q1vUfQeETikoflcNzmWHcyFzMcN5JiKrkuMKg0xOgFSRsG87p67JaTyNQCE14yTMIqhMJ9MiMyZf/tsGJryQ3p3fFw/v07h2v5UpkDohVQpcxdICWUbYM4OsMpDPA65tBlyaD7KQqvcl8ylSSpZItj+9t4nqj3WPyIhe2oMXq8S9Vj/4+seb5hegzN18rB2FOd1wWw5TOR8kezTLas5wZVbJ8jwr6ldXzJhK86YkSMscAMkkvb3eJ3+AmWsT5kHTZY16x/Navo0vExM2EFhALLtNK44HrBYD4Gq16Mlnsjh0b9lyKfMmYCH2ydqR3EAU4i+XFOITpSfFN/JvnqThe7n22NrwI+OU+4SgbKxOao68ftIUJJFmqSS+JN00vs/APufbwnWS11iE7KZhJuDzL5pitIaOCUkyJnodvRBssmyBU7xOwX9X+mCmYPLVaF7wT0fzU/9yIPkuxvpal/63skGLdiGgqw2gwNLQF3LTlM7ZeIPVVwB3iB3ZtofaTjewWq3Omthdz0Oe9/6YtyJpfhB/lGzkdPc9NP8C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F9502290C4FA1BBDE0401F0A05990991</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZtb+I4EP6+vyJKP65C3oFEBYlC6bJXCgtcy/ZLZRyHuJc4IXYS6K8/OzQUKPTYk5CQJ+OZZ178zFxTEIWG26EUpQzHRBr0WvKLAU3b92BdgWbdVyxfM5Vms9lQgGXZRt1ZNOvQkKUBpRkaEMoAYS3Z0HRL0WxFt2aa5pqWa+o1xzafZekRpZSb5io1TZbWUUioW7ptyVlK3BhQTF0CIkRdBt1pZ3jvck0XVJjk9vUWZekwbQeMJa6qwpqHIApDWINxpF6rBzrXHnWneEkAy1L07tOjLfn9blEUtcKsxelSNTRNUzVH5Toexcsruf2tuoy8AfHj7bkLSEwwBCF+AwLUELEg9qROuIxTzILojGld1TVhWkFrqEDdIley+uGgRHehpQOQKQUKDYBeGZsgH6WIQCT9PRm05KvLKri9O0sBoX6cRvTo/GeQEMlRGCfIU2gVWYXucosn0tW+RtAdEBhmFOfoQbRJAiCi0jhFPl7fY8qbz6NSWX5pTfkPV12G4J+U5Vrdx8qhqyey08NLRNn/qdl+vbZWHkGYofbDM3voev3vi3HBCrMRzayHBy2zYH5btEoI+8pbULtyv5+Pm3XXW++XKPUWDdK9K1I9rRuz/or8ns+plfjmNJ+QTT587f3sPt6NNnE/meFfwXr2ugrs28wG9Q2wJ8Ns6IxGU/su7jjjb3f2/C1vPv14evvVna1Q1Ameum/JG/DZAGyM9etTpK7+GgVWN8x/3neawESTZ5hG41GwmOC8uG92g2TRf2r+yMejb/amrvVW8ygfzx8zf/n7+2vR+ohpP4ZDYUUJ02zxiiCrjqI9Bj2pz+sF2Nf0IiTYU/xS1U0ER1GGCJPb4pagFjfjBIQ9lxdze+47ttYzNNNsdEy96ei3mqXpfa2j2Y5jNG76FQdtURxB7MbEx8KXYNlt/3wNEEYuRcRDqZLHGQwQlb+w2AMMSAMy4Y8jJhTNYs7iyatW5JBtFrET6U0fkqzwIi23Q1l6iNmIjNKOz1B6SN3mAXVPEMQJRoLfRYNT3uGU8VysQJ6xUK/loEZQxidAKkjYNaymrVIcJSESSNUo9rIQ1ZIgKTOj0u2/oQBIS+nkdlY+vLNxHX+rUsB1PCwUqIjlBvEyohMzyKgCOR9wfT/gynwn87B4XzyfLMVwi+Tw00ebiP7Y9QiP6KU7fdEr3Dv1i69/vql+AUo9zsfOkZfjPbfVMOXzgbNHu6rmCtRWtSzPs7J+DcGMKTevcoLU1SmCGae3zSz+BxF1Z0K9aLrsUB953skP8WUsIFMGGIp4t0nl8YLVYoqoWC0G/JmsL91bDlzyvDG0Zqdk3ZBvIALxl0sKdKHQ4+Ix/yvi1Pso1wlbe354nHyfYJgsxUnMkc2ZpoAxN4s58cXpvvFTBk45PxTukrzDwng3LTKGzn+RBKO1ZABhnBE26MmlYJ9lS5xskyD3Q+mTmZLJ30fzmp4dzfPh/ZTzXQTknS7+b2UFl+0CkSw2gBJLS17zTZM7J8s9Vn8HeEzshuFoXavf0W9uevvErjnOx2M+iKT9SfxZspfT4/fQ/hc=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950D20337A31891E0401F0A059927BF</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950D20337A31891E0401F0A059927BF</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083430</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950D20337A41891E0401F0A059927BF</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>00f70853-115f-431a-b2d9-2f9def959681</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00027_FUNC_UVTC_UserName_RequestorUser_any_with_active_status_RequesteeUser_any_and_deleted_UnlockMe_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","deleted");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","USER_STATUS_NOT_VALID");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3vr4jSx1XIBwkkUUGiULr0u0C7bV9WrjMBb4MTbAdof/3aoaFAaS97JSTkyXjmzMzxsY84miRO2OIcmCAp1Xqdhv4bQwBWtRobft3xDDdw6kZQc2uG5/lBzfNAfgRd63GeQ49ygaho6I5lu4blGbY7tKyw6obVesXz3CdduwfGZWjpUrF0bTFJKA+LtA09ZzRMESc8pGgCPBQ4HLQuL0LpGaISk948WqIsErLmWIgsNE1ciQBDkuAKTifmkbnhcxTxcEBGFImcwXvOiDf0973z+bwyr1ZSNjIdy7JMKzClT8TJ6FBvHpSbIerROF2u24imlGCUkDekQF2CGKeR1kpGKSNiPPkitG3algptwAIb2HbpoW5+JCjQ7RlpAyTjyOBjZJfB+hADA4pBu+v3GvrhfhNc7h0yRHmcsgnfWv8bJKAzSNIMIoOXlZXo9o+4o13NI8Bhj+Ik52QGV4omGcLAtRsGMVlcEC7JF3GtGL+24PJHSpYB/pexHJnrWCV0c0d3OmQEXPyfma3PaxnlHiU5NFtXsx9/5vft4OmEDE4fF60WOz+5c8bHMW8UENadl6BW435fb5N1xa33TSRy4nnv+qd3mpyj/Jnf4vOsP2q3F8S+7bz4tH9Wu+lEV1fn9jy6fnZ/2m/+GebZI2Jx+83psEDUJsOz0/rUfzs9IAIhT3iv8QzVujHuds+Psy67qw8eSPVqeOOJZPDjDJHpy+z+foqsm6fe62m88B5RTm4Hb3fn3ZNfL7dTk8ZunR/8yu7Mu9ZpHT05b0Pz0rl+8BsfNa3XsGksJWGQP/8BLMqlokevo3XlvJD4Xl6UhURGXLiGmdIoLoAKval2KWkJcylAJArlMJfrbuBZjlN3j7v1IKgd108s17K7VsvygsAK/ONSg5YotiC2UxoTlUup7JI/3wPEk5ADjYAZszTHY+D6NxE7SCCtR/vycKSUwzCVKm6PbD/xKbbTKc/s3PNdn71UXa/Gde0qFdf0mrViAWxTu6sb2t0HTDICSuAVw7mkOBeyGVM0y0ViV2aoQiGXVwBTKhw6ru+ZnEyyBBRUc5JGeQKVbJwVrTH58t8xEOaFtX8yLE7el4Vtfyt7IH0iohy4quUY5BxhxyXklIV8XXBtveAyfCuPiDpgsqGCEbxEsvnpgyeKICuSyIp+twe/7RL3yn3v7Z93mt+AMrf7sUoUzcha2vI2lReElI9mOc0pqkwr+WyWF/OrK2lkMrwpFdI2B4BzqW+vw/QFqLkKYe51vaxQb2Ve2Tfx5WJMBwIJmEi2acVyj7fFALh6W/TkOVns+3DZSCn7JmAhdtnaiXyCKMTfvlJwiJWfNN/Iv3nKoo9x7Yi1lkfWKR8UgtCRWqmL5PULUuBUhiVS+VK2HnxXgF3JN42rJq+wCMmm51zA1180JWkNHWGc5lT0OnphWJfZAqd4zSD8cPoUppDy97t5wb+8mx8uLwZS8CZIX/mS/3Y2SEEXLF+m0r/A0tAX8qkpk9PRmqy/A9xSdtuSbAnaXbcumbKu7NXAr64auFFJ85P5s2Wtp9vnofkX</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95109279CF47965E0401F0A05993983</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95109279CF47965E0401F0A05993983</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F9502274BF7996B7E0401F0A0599098B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F9502274BF7996B7E0401F0A0599098B</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083436</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F9502274BF7A96B7E0401F0A0599098B</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083439</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083439</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083439</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3vr4jSx1XIBwkkUUGiULr0u0C7bV9WrjMBb4MTbAdof/3aoaFAaS97JSTkyXjmzMzxsY84miRO2OIcmCAp1Xqdhv4bQwBWtRobft3xDDdw6kZQc2uG5/lBzfNAfgRd63GeQ49ygaho6I5lu4blGbY7tKyw6obVesXz3CdduwfGZWjpUrF0bTFJKA+LtA09ZzRMESc8pGgCPBQ4HLQuL0LpGaISk948WqIsErLmWIgsNE1ciQBDkuAKTifmkbnhcxTxcEBGFImcwXvOiDf0973z+bwyr1ZSNjIdy7JMKzClT8TJ6FBvHpSbIerROF2u24imlGCUkDekQF2CGKeR1kpGKSNiPPkitG3algptwAIb2HbpoW5+JCjQ7RlpAyTjyOBjZJfB+hADA4pBu+v3GvrhfhNc7h0yRHmcsgnfWv8bJKAzSNIMIoOXlZXo9o+4o13NI8Bhj+Ik52QGV4omGcLAtRsGMVlcEC7JF3GtGL+24PJHSpYB/pexHJnrWCV0c0d3OmQEXPyfma3PaxnlHiU5NFtXsx9/5vft4OmEDE4fF60WOz+5c8bHMW8UENadl6BW435fb5N1xa33TSRy4nnv+qd3mpyj/Jnf4vOsP2q3F8S+7bz4tH9Wu+lEV1fn9jy6fnZ/2m/+GebZI2Jx+83psEDUJsOz0/rUfzs9IAIhT3iv8QzVujHuds+Psy67qw8eSPVqeOOJZPDjDJHpy+z+foqsm6fe62m88B5RTm4Hb3fn3ZNfL7dTk8ZunR/8yu7Mu9ZpHT05b0Pz0rl+8BsfNa3XsGksJWGQP/8BLMqlokevo3XlvJD4Xl6UhURGXLiGmdIoLoAKval2KWkJcylAJArlMJfrbuBZjlN3j7v1IKgd108s17K7VsvygsAK/ONSg5YotiC2UxoTlUup7JI/3wPEk5ADjYAZszTHY+D6NxE7SCCtR/vycKSUwzCVKm6PbD/xKbbTKc/s3PNdn71UXa/Gde0qFdf0mrViAWxTu6sb2t0HTDICSuAVw7mkOBeyGVM0y0ViV2aoQiGXVwBTKhw6ru+ZnEyyBBRUc5JGeQKVbJwVrTH58t8xEOaFtX8yLE7el4Vtfyt7IH0iohy4quUY5BxhxyXklIV8XXBtveAyfCuPiDpgsqGCEbxEsvnpgyeKICuSyIp+twe/7RL3yn3v7Z93mt+AMrf7sUoUzcha2vI2lReElI9mOc0pqkwr+WyWF/OrK2lkMrwpFdI2B4BzqW+vw/QFqLkKYe51vaxQb2Ve2Tfx5WJMBwIJmEi2acVyj7fFALh6W/TkOVns+3DZSCn7JmAhdtnaiXyCKMTfvlJwiJWfNN/Iv3nKoo9x7Yi1lkfWKR8UgtCRWqmL5PULUuBUhiVS+VK2HnxXgF3JN42rJq+wCMmm51zA1180JWkNHWGc5lT0OnphWJfZAqd4zSD8cPoUppDy97t5wb+8mx8uLwZS8CZIX/mS/3Y2SEEXLF+m0r/A0tAX8qkpk9PRmqy/A9xSdtuSbAnaXbcumbKu7NXAr64auFFJ85P5s2Wtp9vnofkX</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F95109279CF47965E0401F0A05993983</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZrU/I6EP7ur+jUj07phQK2A8wgqKe+eOPi7YsT0i1E2xSalIu//iTFVkD08J4ZZzDbze6zu0+epM5QFFpuizFIOImp4nUa6qsxslFgV7EG2EKaXauAdoorSDPEf5aPg1NkB6riMZaCRxlHlDdUyzBtzahopj0wDLdsu7ZZqjqVF1V5gISJ0MKlZKjKMgopc7O0DTVNqBsjRphLUQTM5djtt667rvB0UY5JbdbXKLOESXPC+dTVdVzyAUMY4hKOI72ub/nUfeb2yZginibwmdNnDfVz72KxKC3KpTgZ65ZhGLrh6MLHZ2R8rDaP8s3gezSI1+s2ojElGIXkA0lQ18Ansa+0wnGcED6Jfght6qYhQ2uwxBo2bXqs6l8JMnQHRtoCmTCksQky82A9CCABikEZ9ryGenzYBNd7BwmiLIiTiO2s/w4S0DmE8RR8jeWV5egOj7inXc06YNejOEwZmcONpMkUYWDKXQIBWXYJE+TzmZKNX1ky8UdylgH+m7HU9U2sArq+pzsdMgbG/8/MNue1jvKAwhSa/Q+Iet5gYBmP7350dzvo9a7jpwDT4Wkjg7DpvAZVjPtzvUvWglufm+7PvMrVxUmXPj+XVzMSJG/Wy5/yDfnzgi79GhudpVet9kkwKZ/rN4Fzuezej5+cjn7yZtJ3KPt9f1ANauaFMZi83B/hl8rLIHl0Vg8L2hnqJ91aYEe4PZz0ozN0ZT3w4SUj3nJSS67GD2bEPoaPo86bbnsfq6vWbeI/n097d6zrlzu1p6P0gd/XbgyDPVuj2T8r6xovGl81bdawbcwloZ+O3gDzfCnp4XWUCzEvxH+XF2khvhZkru5UahTjQLnalLuktLipECDiu2KY6/WFUzGsstOpnrfaZs2snBu2IbrSMiqOYzinZq5BaxQ7ENsxDYjMJVV2zZ/fAeLIZUB9SLR5nOIJMPWXiB3EkeLRnjgcMWUwiIWKm8sPuqj6QMIVQeZ8VhEEjKkxGk1U5Sbmt/Q2aQUckm3tLm9pdw8wmRKQAi8ZzgTFGRfNmKF5ykOzNEclCqm4AhKpwq5ln1Z0RqJpCBKqHsV+GkJpOplmrdHZ+tfSEGaZtXc+yE7ej4Xtfst7IHx8Ih2YrOUMxBxhzyVUzgv5ueDqZsF5+FbqE3nAREN5QvAayfanL55IghQkERW9tvuvBRkK94O3f9+p/wJK3+1Hkcifk420+W0qLgghH818mjNUmpXS+TzN5leT0piI8LpQSFPvA06Fvq0G8TtQvQihH3S9FKh3Mhf2bXwpn9A+RxwiwTYlWx7wtugDk28LT5yT5aEPl62Uom8clnyfrR2KJ4hE/OsrBbtY+gnznfhZxIn/Na49sTbyiDrFg4ITOpYreZGsfiAFjkVYIpQvTjaD7wuwL/m2sWhygYULNo1SDj9/UaSkNVSEcZxS7nXUzLApsxlOvpqC++X0LUwm5Z9385L9eDc/XXf7QvAipBa+5L+dNZLRBYMqnwAZloa6FE9NkZyON2T9E+COspuGY9Wc9oVdc6pbyl52TstFA7cqaX4zf7ds9HT3PDT/BQ==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950239D6EAC1715E0401F0A05990981</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950239D6EAC1715E0401F0A05990981</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083439</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950239D6EAD1715E0401F0A05990981</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>00f70853-115f-431a-b2d9-2f9def959681</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00028_FUNC_UVTC_UserName_RequestorUserCLG_any_status_RequesteeChild_active_ResetPassword_Role_RET_CS_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj1XIhXBJVJBYLqdwWmgJ27Pbl5XrTMA0ccB2gPbXHzs0FCjtYY+EhDwZz3xz8TdzxVESO36Lc2CCpFTrdxr677oVIa+OLKNuuzXDfXLB8Kxy2ah6ZYy9ar3mOGVd63OeQZ9ygaho6I5lu4ZVMWx3Yll+2fVdt1R3yo+69gCMS9NSpWTp2iaJKfdztw09Y9RPESfcpygB7gvsB63bG19q+qjApDevtihzh6w5E2LhmyYuhYAhjnEJp4l5ZR7oXIXcD8iUIpExePMZ8ob+dne9XpfW5VLKpqZjWZZpeabUCTmZXujNb8VlCPs0SrfnNqIpJRjF5BUpULcgZmmoteJpyoiYJZ+Ytk3bUqYN2GAD2y690M13Bzm6My0dgGQcGXyG7MLYGCJgQDFoP8b9hn5xXgW3dycMUR6lLOFH5z+DBHQFcbqA0OBFZAW68y2eSFfzCrDfpzjOOFnBULXJAmHg2h2DiGxuCJfNF3ItL7+24fJHii4D/CdluTL3sUro5onsdMgUuPg/Nduv19bKA4ozaGa9Afyw2fhlRUUF4bvH6mI5eLgcW959I4ewr7wFtSv32/m4WXe99XbpvpoF3qM5qE8uh51N9zIJQUQvL915Usm8YWsQoR8BH1yPOvM0Gkxbzr1jiaH1C7uD4DkM5zdo/OthWKmu7GHgfZt/rz4mk/pyMnr959Kjr9kNXdfnaze8zV7b6M5ZtW4gnovJdTVyls9jZ2ktnll31O2Mfvbv7s0W/M3sv2qjMFg/eN/awXXCnjZD3O09vXrBz+u7+8Z7TPsxHAoLSgiypzlgURxVe/Q7Wk/WC4mv6UVJSGhEuaq/UBzFBVChN9UtRS1+JgmIhL4s5vbc8yqW47RrXq1TrthuvWu5lt2zWlbN8yyn873goC2KI4jtlEZE+VIsu+2frwHixOdAQ2DGKs3wDLj+hcUOEkjr07F8HCnlMEkli9vTuiuqSepFab1qs4rjkdmKrd1E14apGNERa0UC2CF1lw+oewyYLAgoflcNzmWHcyFzsUSrTMR2aYVKFDI5AZgiYd9x6xWTk2QRg0JqJmmYxVBazBZ5Zky+/XcMhHkuHXcn+cP7NK7jb0UKpE5IlAJXsXwHWUY4MYPKRSCfB1zdD7gw38pCot6XzKdgBG+RHH56bxPVH7sekRH9bge/7QL3Tv3s6x9vml+AMo/zsXMUrsie22KYyvkg2aNZVHOJSstStlplef1qihmZNG9KgrTNAHAm6e1lkj4DNXcmzLOmyw71keed/BBfJmY0EEhAIrtNy49nrBYBcLVa9OUz2Zy7txy4lHkTsBGnZO1YbiAK8ZdLCvax0pPiO/m3Tln4Xq4Ttvb8yDjlPiEInaqTmiMvnzQFTqVZIokvZfvGTxk45fxQuEvyDouQ3fSUCfj8i6YYraEjjNOMin5HzwX7LJvjFC8L8N+VPpjJmfxtNG/4p6P55+1NIPkuQfpOl/y3skHydsGgqw0gx9LQN3LTlM7pdI/V3wAeE3vHsSo9r9fp1XruPrFXqlVvl8CDSJofxB8lezk9fg/NfwE=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950D205F9FDF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950D205F9FDF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95022C797D35148E0401F0A079902DB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95022C797D35148E0401F0A079902DB</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083443</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95022C797D45148E0401F0A079902DB</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083446</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083446</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083446</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>F95022C797D35148E0401F0A079902DB</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj1XIhXBJVJBYLqdwWmgJ27Pbl5XrTMA0ccB2gPbXHzs0FCjtYY+EhDwZz3xz8TdzxVESO36Lc2CCpFTrdxr677oVIa+OLKNuuzXDfXLB8Kxy2ah6ZYy9ar3mOGVd63OeQZ9ygaho6I5lu4ZVMWx3Yll+2fVdt1R3yo+69gCMS9NSpWTp2iaJKfdztw09Y9RPESfcpygB7gvsB63bG19q+qjApDevtihzh6w5E2LhmyYuhYAhjnEJp4l5ZR7oXIXcD8iUIpExePMZ8ob+dne9XpfW5VLKpqZjWZZpeabUCTmZXujNb8VlCPs0SrfnNqIpJRjF5BUpULcgZmmoteJpyoiYJZ+Ytk3bUqYN2GAD2y690M13Bzm6My0dgGQcGXyG7MLYGCJgQDFoP8b9hn5xXgW3dycMUR6lLOFH5z+DBHQFcbqA0OBFZAW68y2eSFfzCrDfpzjOOFnBULXJAmHg2h2DiGxuCJfNF3ItL7+24fJHii4D/CdluTL3sUro5onsdMgUuPg/Nduv19bKA4ozaGa9Afyw2fhlRUUF4bvH6mI5eLgcW959I4ewr7wFtSv32/m4WXe99XbpvpoF3qM5qE8uh51N9zIJQUQvL915Usm8YWsQoR8BH1yPOvM0Gkxbzr1jiaH1C7uD4DkM5zdo/OthWKmu7GHgfZt/rz4mk/pyMnr959Kjr9kNXdfnaze8zV7b6M5ZtW4gnovJdTVyls9jZ2ktnll31O2Mfvbv7s0W/M3sv2qjMFg/eN/awXXCnjZD3O09vXrBz+u7+8Z7TPsxHAoLSgiypzlgURxVe/Q7Wk/WC4mv6UVJSGhEuaq/UBzFBVChN9UtRS1+JgmIhL4s5vbc8yqW47RrXq1TrthuvWu5lt2zWlbN8yyn873goC2KI4jtlEZE+VIsu+2frwHixOdAQ2DGKs3wDLj+hcUOEkjr07F8HCnlMEkli9vTuiuqSepFab1qs4rjkdmKrd1E14apGNERa0UC2CF1lw+oewyYLAgoflcNzmWHcyFzsUSrTMR2aYVKFDI5AZgiYd9x6xWTk2QRg0JqJmmYxVBazBZ5Zky+/XcMhHkuHXcn+cP7NK7jb0UKpE5IlAJXsXwHWUY4MYPKRSCfB1zdD7gw38pCot6XzKdgBG+RHH56bxPVH7sekRH9bge/7QL3Tv3s6x9vml+AMo/zsXMUrsie22KYyvkg2aNZVHOJSstStlplef1qihmZNG9KgrTNAHAm6e1lkj4DNXcmzLOmyw71keed/BBfJmY0EEhAIrtNy49nrBYBcLVa9OUz2Zy7txy4lHkTsBGnZO1YbiAK8ZdLCvax0pPiO/m3Tln4Xq4Ttvb8yDjlPiEInaqTmiMvnzQFTqVZIokvZfvGTxk45fxQuEvyDouQ3fSUCfj8i6YYraEjjNOMin5HzwX7LJvjFC8L8N+VPpjJmfxtNG/4p6P55+1NIPkuQfpOl/y3skHydsGgqw0gx9LQN3LTlM7pdI/V3wAeE3vHsSo9r9fp1XruPrFXqlVvl8CDSJofxB8lezk9fg/NfwE=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950D205F9FDF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZtU+I6FP6+v6LT/bhT2kIB2xFm0FqXFZAF8ep+cWJ6CsE2qU0K6K+/SbEIiF72zjB0cnJenvOSJznlKImrXodzyARhVOv6Lf2hadn1yI4aRoRrTcOpyT904rhGDTXqVTcK5Zala13Oc+hSLhAVLb1q2Y5h1Q3bubEsr+Z4jltpNuw/unYLGZeupUpFWq2SmHKvCNvS84x6DHHCPYoS4J7A3rjT73lS00MlJr19ukZZBMzaMyFSzzRxJQQMcYwrmCXmqbmjcxpyb0ymFIk8g7eYIW/pb7bL5bKyrFVYNjWrlmWZlmtKnZCT6Xe9/a00hrBLI7ZenyPKKMEoJq9IgeqDmLFQ68RTlhExSz5xbZu2pVwbsMIGth36XTffAxTojvS0AzLjyOAzZJfORhBBBhSDNhl1W/r34zq4tr3JEOURyxK+t/47SEAXELMUQoOXmZXojvd4oFztU8Bel+I452QBAzUmKcLAtWEGEVn1CJfDF3KtaL+24vJHyikD/DdtOTW3sUro5oHq+GQKXPyfnm33a+3lFsU5tE/ywej1kk/PruaLeZ07MP29GkzMnvvitAoI28prUJt2v633h3UzW29G6eVkQq4u+nieL3vD6m2UvDTtP38uGfHvnhuu3fOvq8vczl8XbNC4s0arRueepFZs/fxnMg/I2RCZ3flPi180L/G3Re1u2Ux/9NIq7s/wa+/C/REE2G8O8TyIkd9nd7WL+/lySFwroDBpTGfXN7fP6LL3a4zu7Umepyb5feaSoTn1vz1V8WXgDuiwyTJ85ePfg/vWe07bOewKS0oY549zwKJcqvHo+log+4XE1/SiJCQ0okLVSxVHcQFU6G1lpajFyyUBkdCTzVyvA7du+VWrUe00z8/rvnVhOZYdWB2r6br1RuOs5KA1ij2I54xGRMVSLLuen68B4sTjQEPIjAXL8Qy4/oVHHwmkdelIHg5GOdwwyeKQnzhO/AiJmEb2Y0pOnjh7fE2Tla4NmLim11knEpDtUndth7pHgElKQPG7GnAuJ5wLWYtntMhFbFcWqEIhlzdApkjYqzondZOTJI1BITUTFuYxVNJZWlTG5Otv1UCYF9LRxU1x8D7Na3+vLIHUCYlS4CqXM5BthAN3UK1M5POEG9sJl+47eUjU+ZL1FBnBayS7W+9jouZjMyMyo4fz8YNd4t6oH23+0dL8ApS5X49NoHBBtsKWl6m8HyR7tMtuPqPKcyVfLPKif03FjJl0b0qCtM0x4FzS28sNewJqblyYR90uG9R7kTfyXXy5mNGxQAISOW1asTziaTEGrp4WXXlMVse+W3ZCyroJWIlDsvNYvkAU4i8fKdjDSk+Kh/KzZFn43q4DvrbiyDzle0IQOlUrdY+8fDIUmEm3RBIfy7adH3JwKPiucFPkDRYhp+kxF/D5jqYYraUjjFlORdfXC8E2yxY4xUsK3rvSBzcFk79dzSv+6dV81++NJd8lSN/okv9WNkgxLhh09QIosLT0lXxpyuB0usXqbwAPEHs9cAM/aAbOHrG7mwLuZNL+IP4o2arp/nlo/ws=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950D2062A7CC5D0E0401F0A0799566B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950D2062A7CC5D0E0401F0A0799566B</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083446</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950D2062A7DC5D0E0401F0A0799566B</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>aa00fa92-35f4-4324-bf73-9adb2eee8bac</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00029_FUNC_UVTC_UserName_RequestorUserNonCLG_any_status_RequesteeChild_active_ResetPassword_Role_RET_CS_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for NonCLG"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - NonCLG"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU/I8EL73V3TqpVPalAq0I8yAHKxnxdPrjRPSFKJtCklaqr/+TYpFQPTj/WaYYbLd7D67++RJjjiMI9trc46ZIAnV/G5Tf3Fdu2Y5uGGEIbANZwQCY9SAyHAAhCN7BFAd1XTN5zzFPuUCUtHUbQs4hnVoAOfOsryq4x3aFbtae9a1B8y4DC1dKpau5XFEuVekbeopo14COeEehTHmnkDesH1x7klPD5aY9NbRAmWRkLUmQkw900SVACMcRaiCktg8Mtd8jgLuDcmYQpEy/Jkz4E39c+98Pq/Mq5WEjU3bsizTck3pE3Ay3tdbe+VmHPg0TBbrY0gTShCMyAdUoC6wmCSB1o7GCSNiEv8QGpjAUqENnCMDAYfu6+ZXggLdjpHWQDIODT6BoAx2i0PMMEVYu7/1m/r+bhNc7L1jkPIwYTHfWP8bJEwzHCVTHBi8rKxEt3vELe1qHWHk+RRFKScZvlQ0mUKEuXbNcEjyc8Il+QKuFePXci5/pGQZRv8yliNzFauEbm7pTpeMMRf/Z2ar81pEeYBRiludwIwH16f542yK2cPjc/syFme9A/LH7TULCKvOC1DLcX+uN8m65Nbnpu5F/859yvOTj6s/IBxjcntjZ9f23L6vvb1ZbHQT2Y+ds+zkLDpjvX7N6oDeQfjgXznx82BweZ8F9ZnLP9Jup335tveW+ZlbfRzdBKe1gdsJa7WL96lvA//jtNaJO5futZOEp2IsnoUzGMRicDx/PHafDsbsxjw7uTAnbj7rPs8ap7Y/2aPmw5vVt9NoFonB9TiYNMbNr5pWa1g3lpIwTEevGIlyqejhd7W+nBcUv8uLspDACAtXb6o0igtMhd5Su5S0eKkUIBJ4cpiLdd89BJYL+r2qBVzL7fYsxwJ9q20dum7VrTulBi1QbEA8TmhIVC6lsgv+/A4QxR7HNMDMyJIUTTDXf4nYhQJqPr2VhyOhHN8lSsWd+rQBnFerAd5BlOfha4qqgFWxrl0m4opesXYoMFuX7uqadN9iRKYEK31XBOeS4VzIXsxglooIVDJYoTiVNwBTIuzZTuPQ5CSeRlghNeMkSCNcmU6mRWdMvvi3DYh4Yb3t3RUH78e6Nr+VLZA+AVEOXNXSwXKMeMsd5JSF/FxwbbXgMnw7DYg6X7KfghG0QLL+6Ysmih9LjsiKXo6HL6DEvXTfefv3neYvoMzNfiwTBRlZSVtepvJ+kOrRKqc5g5VZJc2ytJhfXSkjk+FNKZDAHGKUSnl7v0veMDWXIcydbpcl6o3MS/s6vlRM6FBAgWPJNq1Y7vC0GGKunha+PCb5ru+WtZSybwLnYpvtOJIvEIX410cK8pDyk+Zr+TdPWPA1ri2xVvLIOuV7QhA6Vit1j7z/QAqUyLBECl/CVoNvC7At+bpx2eQlFiHZNEoF/vmLphStqUOEkpQKv6sXhlWVLXCK9yn2vpy+hSmU/PNqzvmPV/PTxflQ6l0M9aUv+W9ngxR0QVLdpH+Bpann8qUpk9Pxiqp/Atwi7L1Dx3brHRusC3vti8trlbS+mb9bVnq6eR5afwE=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F951091E54297B21E0401F0A05993966</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F951091E54297B21E0401F0A05993966</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F951091FE301909DE0401F0A05993974</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F951091FE301909DE0401F0A05993974</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083450</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951091FE302909DE0401F0A05993974</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083456</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083456</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083456</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbU/I8EL73V3TqpVPalAq0I8yAHKxnxdPrjRPSFKJtCklaqr/+TYpFQPTj/WaYYbLd7D67++RJjjiMI9trc46ZIAnV/G5Tf3Fdu2Y5uGGEIbANZwQCY9SAyHAAhCN7BFAd1XTN5zzFPuUCUtHUbQs4hnVoAOfOsryq4x3aFbtae9a1B8y4DC1dKpau5XFEuVekbeopo14COeEehTHmnkDesH1x7klPD5aY9NbRAmWRkLUmQkw900SVACMcRaiCktg8Mtd8jgLuDcmYQpEy/Jkz4E39c+98Pq/Mq5WEjU3bsizTck3pE3Ay3tdbe+VmHPg0TBbrY0gTShCMyAdUoC6wmCSB1o7GCSNiEv8QGpjAUqENnCMDAYfu6+ZXggLdjpHWQDIODT6BoAx2i0PMMEVYu7/1m/r+bhNc7L1jkPIwYTHfWP8bJEwzHCVTHBi8rKxEt3vELe1qHWHk+RRFKScZvlQ0mUKEuXbNcEjyc8Il+QKuFePXci5/pGQZRv8yliNzFauEbm7pTpeMMRf/Z2ar81pEeYBRiludwIwH16f542yK2cPjc/syFme9A/LH7TULCKvOC1DLcX+uN8m65Nbnpu5F/859yvOTj6s/IBxjcntjZ9f23L6vvb1ZbHQT2Y+ds+zkLDpjvX7N6oDeQfjgXznx82BweZ8F9ZnLP9Jup335tveW+ZlbfRzdBKe1gdsJa7WL96lvA//jtNaJO5futZOEp2IsnoUzGMRicDx/PHafDsbsxjw7uTAnbj7rPs8ap7Y/2aPmw5vVt9NoFonB9TiYNMbNr5pWa1g3lpIwTEevGIlyqejhd7W+nBcUv8uLspDACAtXb6o0igtMhd5Su5S0eKkUIBJ4cpiLdd89BJYL+r2qBVzL7fYsxwJ9q20dum7VrTulBi1QbEA8TmhIVC6lsgv+/A4QxR7HNMDMyJIUTTDXf4nYhQJqPr2VhyOhHN8lSsWd+rQBnFerAd5BlOfha4qqgFWxrl0m4opesXYoMFuX7uqadN9iRKYEK31XBOeS4VzIXsxglooIVDJYoTiVNwBTIuzZTuPQ5CSeRlghNeMkSCNcmU6mRWdMvvi3DYh4Yb3t3RUH78e6Nr+VLZA+AVEOXNXSwXKMeMsd5JSF/FxwbbXgMnw7DYg6X7KfghG0QLL+6Ysmih9LjsiKXo6HL6DEvXTfefv3neYvoMzNfiwTBRlZSVtepvJ+kOrRKqc5g5VZJc2ytJhfXSkjk+FNKZDAHGKUSnl7v0veMDWXIcydbpcl6o3MS/s6vlRM6FBAgWPJNq1Y7vC0GGKunha+PCb5ru+WtZSybwLnYpvtOJIvEIX410cK8pDyk+Zr+TdPWPA1ri2xVvLIOuV7QhA6Vit1j7z/QAqUyLBECl/CVoNvC7At+bpx2eQlFiHZNEoF/vmLphStqUOEkpQKv6sXhlWVLXCK9yn2vpy+hSmU/PNqzvmPV/PTxflQ6l0M9aUv+W9ngxR0QVLdpH+Bpann8qUpk9Pxiqp/Atwi7L1Dx3brHRusC3vti8trlbS+mb9bVnq6eR5afwE=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F951091E54297B21E0401F0A05993966</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZrT+pMEP7ur2jqR1N6oSBthAQteKri8QBe4hezbAdYbbfQ3ULl15/dYisg+nLehITsdHbmmcs+M2cMRaHlthmDhJOYKr7XVF+CUbVqV8HRzAbCmm2YSBuZpqlBvTE2kIUcbJyqis9YCj5lHFHeVC3DtDWjppn20DDcqu3WapVq3XlWlQdImDAtVCqGqmRRSJmbu22qaULdGDHCXIoiYC7H7qDdu3GFposKTGrrbI0yd5i0ppzPXF3HlQAwhCGu4DjSz/QtnbOAuQMyoYinCXz4DFhT/bi7XC4ry2olTia6ZRiGbji60AkYmRyrraPiMgQ+Hcfr8wWiMSUYhWSFJKge8GkcKO1wEieET6NvTJu6aUjTGmRYw6ZNj1X900GO7kBLWyAThjQ2RWZhrA9jSIBiUO77flM9PqyC67vDBFE2jpOI7Zz/DRLQBYTxDAKNFZEV6A63uCddrTPArk9xmDKygFvZJjOEgSl3CYxJdkOYaL6AKXn5lYyJHym6DPC/lOVM38QqoOt7suORCTD+f2q2Wa+1lQcUptAavq5WfnqV+afn885TdvnY7V3VGZ78Sv40cwibymtQZbk/zrvNWvbWx6Uoeex3vMb8+TUMpumkT22b6uwk9mbzaNQd0+X0fmz/4jeYz/2wi++7/dXy0cuWd2GDRne96tUrfnrS28aAn3SP9F8cx3fTzsCCBz8Nux6Ne16vc+1cBq/vGD//MVdWe9i5aDyH9/3V1aidXS+968B/6KV98J7aUzwPZ7Z3gqx5etTvTPDodpL17++TXvAO9uVb8zOmzRi2hQUlDNLRK2BeHGV7+J7SFfVC/Gd6kRISaONc1Z1JjmIcKFdb8pakFjcVBEQCVxRzfe46NcMyLafbbdQ6VdPuGOJhdY22ceo4Rq1RLzhojWIH4kVMx0T6kiy77p+fAeLIZUADSLRFnOIpMPUHix7iSPFpXzyOmDIYxoLFzRrNlsZ8YZwGWWK+mSNzhZkzw9O6qtzG/Df9nbTHHJJt7q5ucXcfMJkRkAQvO5yJFmdcJGOOFikPzcoCVSikYgQkkoVdy27UdEaiWQgSqh7FQRpCZTad5anR2frf0hBmubTfGeYv79vAdr8VORA6AZEKTMZyDqKOsGcI2UUg3wdc3wy4MN9OAyIfmEgoTwheI9n+9NknskHKJhERvVwMXswCd6l+8PWvN/UfQOm7+SgdBQuy4baYpmJACPpoFdWco8q8ki4WaV6/U0mNiTCvC4Y09QHgVPDb+zB+A6qXJvSDxkuJesdzKd/Gl/IpHXDEIRLdpuTHA3aLATC5W/jinWSHLi5bLkXeOGR8n+wiFCuIRPzjloJdLPWE+E78LeMk+CzXHlsbfkScYqHghE7kSQ6S92+aAsfCLBHMFyebxvcZ2Od8W1gmucTCRTeNUg7ff1EkpTVVhHGcUu57ai7YpNkcJ3+fgfup9MVMTuUfszlj387mp97NQBBehNRSl/y3skbydsGgyhUgx9JUM7FqCud0skHrHwB3mN00HLNTsy3n9NwyS2avOU7VqZfMvh1J64v4q2Qjp7vvofUX</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F9502129FF85E314E0401F0A07990586</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F9502129FF85E314E0401F0A07990586</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083454</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F9502129FF86E314E0401F0A07990586</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>F951091FE301909DE0401F0A05993974</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH1chFxKaRAWJW7U5vcCSlu3uy8o4A7gkDo0doPz6Y4cmBUp72CMhIU/GM99c/M1cMpTElt9mDDJOUqoEvab6x3Eju+G5kWY6DVezkYs0z7hwNMs1TWPimREgW1UCxnIIKOOI8qZqGaatGY5m2veG4ddt3/FqF47xW1XGkDFhWqjUDFXZJDFlfuG2qeYZ9VPECPMpSoD5HPth+/bGF5o+KjGprcsdysJh1ppzvvR1HdciwBDHuIbTRL/UD3QuI+aHZEYRzzN49Rmxpvp6d71e19b1WprNdMswDN3wdKETMTL7qra+lJchCug03Z27iKaUYBSTLZKgboHP00hpx7M0I3yefGDa1E1DmtZggzVs2vSrqr85KNCdaekAZMaQxubILI2NYAoZUAzKwyhoql/Pq+Du7n2GKJumWcKOzn8HCegK4nQJkcbKyEp051s8ka7WJWA/oDjOGVnBnWyTJcLAlGEGU7K5IUw0X8SUovzKhokfKbsM8N+U5VLfxyqg6yey0yMzYPz/1Gy/XjsrYxTn0BoueDgGYzqM6JPFBzcR3A2G341r9jtoFhD2lXegqnK/no+bteqt10vd8eRxtLpyHfq84Y+dILq42/5s3Doj3rXRZEUX32fY3naf095DZ/stwq573X3I07k9NEY/Ft3HgCE37Wzdp7tk+sXNfg3oo3P7azuvdwYTmjov3xbrQA/HvHOzbiP0lP0c3UfDtfXSa1iLsPPQMB7AXvYe0+3Avh4HHd4Pf4zGVuiRL9+cHC3dxNrmmfMPgOP2fzXfYtqP4VBYUkKYT54A8/Io2yPoKVeiXoh/Ti9SQiJtWqj6S8lRjAPlakvektTi54KASOSLYu7OV55jWPXeVb/Xtvp9y+obtmFeGW3jwvMM22yXHLRDcQSxm9Ipkb4ky+7653OAOPEZ0AgybZXmeA5M/cRiD3GkBHQkHkdKGdyngsXN5/rai1b5asH5ZPMUOd7mZQqCAFTlLuUDOsjaUw7ZIXXXD6h7BJgsCUh+lw3ORIczLnLxjFY5j83aCtUo5GICZJKEfct2HZ2RZBmDRKonaZTHUFvOl0VmdLb7tzSEWSEd9e+Lh/dhXMffyhQInYhIBSZj6YAoI5yYQXYZyMcBN/YDLs2384jI9yXyyTOCd0gOP721ieyPqkdERH+64R+zxF2pn339/U39E1D6cT4qR9GK7Lkth6mYD4I9WmU1n1HtuZavVnlRvwvJjJkwrwuCNPUQcC7o7eU+XQDVKxP6WdOlQn3kuZIf4sv5nIYccUhEtynF8YzVIgQmV4tAPJPNuXvLgUuRNw4bfkrWjcUGIhF/uqRgH0s9IR6Kv3WaRW/lOmFrz4+IU+wTnNCZPMk58vJBU+BUmCWC+NJs3/gpA6ecHwqrJFdYuOimSc7h4y+KZLSmijBOc8qDnloI9lm2wMlfluC/Kb0zUzD562jesA9H8+PtTSj4LkFqpUv+W1kjRbtgUOUGUGBpqhuxaQrndLbH6q8Aj4jdNDyz79iWd9GxzIrYHc+re41GlcCDSFrvxO8lezk9fg+tfwE=</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>F95023DFEDA2EE22E0401F0A0799041A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:F95023DFEDA2EE22E0401F0A0799041A</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20140513_083456</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>F95023DFEDA3EE22E0401F0A0799041A</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6511c570-3f9d-4e26-b630-d957df50e289</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00030_FUNC_UVTC_UserName_RequestorUserChild_any_status_RequesteeOtherUser_active_ResetPassword_Role_RET_CS_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH1chTggBooJEgW6520/gdktfVq4zCe5N7DR20nR//XVCkwL9uOyVkJAn45kzM8fHPhI4jmxvJASkknKmzSYD/Zfttx1s3ftGzw1cwwE3MHpOHxtuzwXwbRsFvq1rMyEymDEhMZMD3UaWY6COYTlLhLx2x0N2y3J6d7p2A6lQoZVLC+laEUdMeFXagZ6lzONYUOExHIPwJPEWo/MzT3l6uMakD482KKuE6XAtZeKZJmn5QCCKSIvw2Dwyd3yOfOEtaMiwzFJ4yemLgf6y9+npqfXUbvE0NG2EkIn6pvLxBQ2/6sMv9WbwZyzgm/UYM84owRH9jUtQ5yDX3NdGUchTKtfxB6Et00JlaAMKYhDLYV918zVBhe7ASDsgU4ENscZWHWwOAaTACGh/z2cD/ethE9zsXaaYiYCnsdhb/xkkYDlEPAHfEHVlNbrDI77TruEREG/GSJQJmsNFSZMEExDaVQoBLc6oUOTzhVaNXyuE+tGaZUD+ZCxH5jZWBd18pzsTGoKQ/2dm2/PaRLnBUQbDcP4cz47H3364IztHp1zy4m4RTJ2peT2oIGw7b0A1435Z75O14dbLppVV3AT8Glh3dPMN/Qzv3PZVbproMh/x5cNk/UCL7uyiWDpmPLr/Mb9OOn6crp3vF5bdw6sVO72a/hxNL/lf08XNl39k0Fux498TDivednvX5LG3WiU8t04vlrc0lOT7b8pug5+PWULC88deFMmzCeqF4873+zsz/RF2KEH+JaLh8ZeLU9R+6KwmZP18W/CIux00eK1pu4ZdYy0Ji+z+AYislyU9ZhPtRM0Ly8/lpbRQ3wgqVy8pNUpIYFIflrtKafEyJUDU99QwN+uTfgfZ7bbVdSzktp3JFDnIOkEj1O33kT3t1hq0QbEHccxZQMtcpcpu+PM5QBJ7ApgPqZHzjKxB6J9EnGCJtRmbq8PBmYAlVyqO3SCPFSHXWZ+H3XbSt9cMJH/QtQsuL9llOgokpLvK3d5R7jkQmlAo5b3kt1AEF1K14hHnmYysVo5bDDJ1AaSlBnu20+uYgsZJBCVQM+Z+FkErWSdVY0yx+bcNTERlnU+X1bn7sKz9b3UHlI9PSwdR1nIMaorw5gpyvE5dyMcFu9sF1+FHmU/L46XaKVNKNkh2P72ypKRHQxFV0a/x4pdV427cD97+dqf5CShzvx9NIj+nW2nru1RdD0o8hvU0H3HrsZXleVbNr1sKY6rCm0ofLXMBJFPq9rzk/wAzmxDmQZdLg3ovc2PfxZfJNVtILCFWbNOq5QEviwWI8mUxU6ekOPTZspNS9U1CId+zjSP1ACkRf/pGIR4p/ZT5Sv098dR/Hdc7sbbyqDrVc0JSFpar8hp5/oAUhKuwVOkeT7eDvxfgveS7xqbJDRap2HSfSfj4i1YK2kDHhPCMydlErwzbIlvhlM8JeK9Ob8JUQv5yMxfiw5v59vxsoeQuxnrjS//b2aAVXQjo5QOgwjLQC/XQVMlZuCXqLwDf6rrVP+mOTzrj6XGj6x2l6333pGngTiXDN+a3lq2e7p+H4b8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F9502319F7CF5CEBE0401F0A0599096F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F9502319F7CF5CEBE0401F0A0599096F</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95023317410634DE0401F0A079902E7</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95023317410634DE0401F0A079902E7</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_08350</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95023317411634DE0401F0A079902E7</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_08358</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_08358</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_08358</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>F95023317410634DE0401F0A079902E7</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH1chTggBooJEgW6520/gdktfVq4zCe5N7DR20nR//XVCkwL9uOyVkJAn45kzM8fHPhI4jmxvJASkknKmzSYD/Zfttx1s3ftGzw1cwwE3MHpOHxtuzwXwbRsFvq1rMyEymDEhMZMD3UaWY6COYTlLhLx2x0N2y3J6d7p2A6lQoZVLC+laEUdMeFXagZ6lzONYUOExHIPwJPEWo/MzT3l6uMakD482KKuE6XAtZeKZJmn5QCCKSIvw2Dwyd3yOfOEtaMiwzFJ4yemLgf6y9+npqfXUbvE0NG2EkIn6pvLxBQ2/6sMv9WbwZyzgm/UYM84owRH9jUtQ5yDX3NdGUchTKtfxB6Et00JlaAMKYhDLYV918zVBhe7ASDsgU4ENscZWHWwOAaTACGh/z2cD/ethE9zsXaaYiYCnsdhb/xkkYDlEPAHfEHVlNbrDI77TruEREG/GSJQJmsNFSZMEExDaVQoBLc6oUOTzhVaNXyuE+tGaZUD+ZCxH5jZWBd18pzsTGoKQ/2dm2/PaRLnBUQbDcP4cz47H3364IztHp1zy4m4RTJ2peT2oIGw7b0A1435Z75O14dbLppVV3AT8Glh3dPMN/Qzv3PZVbproMh/x5cNk/UCL7uyiWDpmPLr/Mb9OOn6crp3vF5bdw6sVO72a/hxNL/lf08XNl39k0Fux498TDivednvX5LG3WiU8t04vlrc0lOT7b8pug5+PWULC88deFMmzCeqF4873+zsz/RF2KEH+JaLh8ZeLU9R+6KwmZP18W/CIux00eK1pu4ZdYy0Ji+z+AYislyU9ZhPtRM0Ly8/lpbRQ3wgqVy8pNUpIYFIflrtKafEyJUDU99QwN+uTfgfZ7bbVdSzktp3JFDnIOkEj1O33kT3t1hq0QbEHccxZQMtcpcpu+PM5QBJ7ApgPqZHzjKxB6J9EnGCJtRmbq8PBmYAlVyqO3SCPFSHXWZ+H3XbSt9cMJH/QtQsuL9llOgokpLvK3d5R7jkQmlAo5b3kt1AEF1K14hHnmYysVo5bDDJ1AaSlBnu20+uYgsZJBCVQM+Z+FkErWSdVY0yx+bcNTERlnU+X1bn7sKz9b3UHlI9PSwdR1nIMaorw5gpyvE5dyMcFu9sF1+FHmU/L46XaKVNKNkh2P72ypKRHQxFV0a/x4pdV427cD97+dqf5CShzvx9NIj+nW2nru1RdD0o8hvU0H3HrsZXleVbNr1sKY6rCm0ofLXMBJFPq9rzk/wAzmxDmQZdLg3ovc2PfxZfJNVtILCFWbNOq5QEviwWI8mUxU6ekOPTZspNS9U1CId+zjSP1ACkRf/pGIR4p/ZT5Sv098dR/Hdc7sbbyqDrVc0JSFpar8hp5/oAUhKuwVOkeT7eDvxfgveS7xqbJDRap2HSfSfj4i1YK2kDHhPCMydlErwzbIlvhlM8JeK9Ob8JUQv5yMxfiw5v59vxsoeQuxnrjS//b2aAVXQjo5QOgwjLQC/XQVMlZuCXqLwDf6rrVP+mOTzrj6XGj6x2l6333pGngTiXDN+a3lq2e7p+H4b8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F9502319F7CF5CEBE0401F0A0599096F</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZtc6o6EP5+fgVDP3aQIOALU52xWq+cU2srtre9XzoxBE2FICSgPb/+Jlio2pfruTPOOFk2u8++5Nm9YDAK606PMZxyElPFHXTU5xbAwLBbbc2wMNKsoGlp0G62NbuFDNTAgdluzlXFZSzDLmUcUt5R68CwNGCLKzMAHNN2QLPWMBv/qMoDTpkwLVRqQFW2UUiZU7jtqFlKnRgywhwKI8wcjhyvN752hKYDS0xq92KHsnCYdpecrx1dRzUfIxyGqIbiSL/QD3QufOZ4ZEEhz1L85tNnHfXt7mazqW3MWpwu9DoAQAdtXej4jCzO1O6P8jL2XRrEu3Mf0pgSBEPyG0pQY8yXsa/0wkWcEr6MvjBt6AaQpjW8RRoyLHqm6u8OCnQnWjoAmTKosSU0SmNTHOAUU4SV+6nbUc9Oq+Du7iyFlAVxGrGj859BwjTHYbzGvsbKyEp0p1v8JF3dC4wcl6IwYyTHN7JN1hBhptymOCDba8JE8/lMKcqvbJn4kbLLMPqTslzo+1gFdP2T7AzIAjP+f2q2X6+dlQcYZribBNSPX0bX9tKdPOZPl9bdpH4b/fUY+G6ngLCvvANVlfvtfNysVW+9XXr0zunocpLlSRs9ZnNvgZaJvzgf14PhzHbN0fnI/Bnl86Q19sEKRdPNKn9JVi/TEeOzuTvczrzLRXa3fqq7N8EPr22txvwn6E0eVqNLK+k1+Mi6aT7dvIC/t81f94k1eLml+lUf5Oe/op+5+eCmjya7vzfuZk93k9fUm2zXi9d65JL0x3xsxO1e0PDvfukN1/ITc9V5j2k/hkNhSQleNn/BiJdH2R7uQBmKekH+Pb1ICfG1oFB11pKjGMeUq115S1KLkwkCIr4jirk7D9s2qNevTLMBBqZt2FfAAsYQ9ECz3Qam2S85aIfiCGI/pgGRviTL7vrne4AochimPk61PM7QEjP1G4sDyKHi0ql4HDFleBYLFjeWTZj42YYHwSo2os26lYEktXnSUpWbmE/oJO0FHKeH3G0ecPcUI7ImWBK87HAmWpxxkYwE5hkPjVoOaxRnYgSkkoWdutWydUaidYglVD2K/SzEtfVyXaRGZ7v/ugYRK6TTq1nx8r4M7PhbmQOh4xOpwGQsl1jUEX8YQpZjl4F8HXBjP+DSfC/ziXxgIqE8JWiH5PDTe5/IBqmaRET03PeejRJ3pX7y9Y839W9A6cf5qBz5OdlzW05TMSAEfXTLaiawltSyPM+K+jUlNabCvC4Y0tA9jDLBb6+zeIWpXpnQTxovFeojz5X8EF/Gl9TjkONIdJtSHE/YLTzM5G7hineyPXVxOXAp8sbxln8m64diBZGIv91SkIOknhDfir9NnPrv5frE1p4fEadYKDihC3mSg+T1i6ZAsTBLBPPF6b7xzwx85vxQWCW5wsJFN80zjr/+okhK66gQoTij3B2ohWCfZguc/HWNnXelD2YKKn+bzVv25Wx+HF97gvAiqFa65L+VNVK0C8KqXAEKLB11K1ZN4Zwu9mj9DeAHZjeN9rDZH9r9q8uK2W3B7O3GsErgQSTdD+KPkr2cHr+H7r8=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F95022E3360D3515E0401F0A0799033C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F95022E3360D3515E0401F0A0799033C</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_08354</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F95022E3360E3515E0401F0A0799033C</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbRbuI6EH3fr4iyj1WIEwIlUUFioexN1ZYW2Grbl5XrDGCa2GnsAO3XXzs0KVDay14JCXkynjkzc3zsM4GT2A26QkAmKWdG2G+bf7yWT5oQNa1pPXIsr9XAlg/ItRC4jSY0GiSqN0wjFCKHkAmJmWybLnI8CzUsx5sgFNQbgYNqqO4/mMYdZEKFVi41ZBrrJGYiKNK2zTxjAceCioDhBEQgSTDuXl0GyjPAJSazc7ZBWSTMOnMp08C2SS0CAnFMaoQn9pm943MWiWBMZwzLPIO3nJFom297V6tVbVWv8WxmuwghG/m28okEnX03O9/KzRCFbMo36x5mnFGCY/qKNagrkHMeGd14xjMq58knoR3bQTq0BWtiEcdj3037PUGB7shIOyAzgS0xx04ZbARTyIARMH6Nwrb5/bgJbvZOMszElGeJ2Fv/HSRgS4h5CpElyspKdMdHPNCuzhmQIGQkzgVdwrWmSYoJCOMmgyldX1KhyBcJoxi/sRbqR0uWAfmbsZzZ21gVdPtAd/p0BkL+n5ltz2sT5Q7HOXRkSN3Fqwf+pb2K1hfx2rlfpiF6vV+32gWEbecNqGrcb+t9slbcetuUvN6e9lZTl4a9+Yw/XLRa9VHrfjgY8mdv4aHLKbvN+A/aZLOT1Ys89ePB739u+WLlXODhiTeyH2+du3+6D97PjCXfJD/xvEHavVlMHhbncb9Pu2mL3EE8POk17FY6Hz6OndGwzrN1enkVzhe9xUUeho/h7y5qhhP+eJNcT35dLXO6/vntaXnLniK4f7qWvevVee9pSNrvNW3XsGssJWGcPy6AyHKp6RH2jYGaF5Zfy4u20MiaFq5BqjVKSGDS7OhdWlqCXAkQjQI1zM164DeQ6zqDut9EAxd558hDzgB10anvI7fvlBq0QbEHscfZlOpcWmU3/PkaIEkCASyCzFrynMxBmF9E7GOJjZCN1OHgTMCEaxVP57OkFefL5cp3UJp63H9e5PWVOh7XXA7ZMOtOJWS70l3fke4REJpS0PquCS4Uw4VUvXjGy1zGTm2JawxydQNkWoQDVwmNLWiSxqCR2gmP8hhq6TwtOmOLzb9rYSIK6+h8Uhy8T+va/1a2QPlEVDsIXcsPUGOEA3cQKgv5vODmdsFl+G4eUX2+VD9lRskGye6nd5poflQcURX96Y3/VFyo3I/e/nGn/QUoe78fVaJoSbfSlpepuh+UenTKaT7j2nNNMSQv5neqlTFT4W0lkI49BpIreXuZ8CdgdhXCPup2qVDvZa7su/hyOWdjiSUkim1GsTziaTEGoZ8WoTom62PfLTspVd8krOUhWy9WLxCN+MtHCgmI9lPmG/W34ln0Pq4DsbbyqDrVe0JSNtMrfY+8fEIKwlVYqoSPZ9vBDwU4lHzXWDW5wiIVmx5zCZ9/MbSitU1MCM+ZDPtmYdhW2QKnfEkheHf6EKZQ8rereS0+vZp/X12Old4l2Kx86X87W7SgCwFTvwAKLG1zrV6aKjmbban6G8APwl53/MFpb9Donf+ohL2hhN1vDqoG7lTS+WD+aNnq6f556PwL</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>F950221F3960F204E0401F0A079902D1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:F950221F3960F204E0401F0A079902D1</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20140513_08358</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>F950221F3961F204E0401F0A079902D1</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5964f10a-b509-40e9-862f-fa1b94ce9895</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7aaed2f-7952-4584-a739-c774cb776a89</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f18fd18e-7fe3-432f-9d31-a8f2e7d96e8b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21b39f30-d3ec-4ca5-beac-ad66dbe0596c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00031_FUNC_UVTC_UserName_RequestorUserChild_active_RequesteeSelf_ResetPassword_Role_RET_CS_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj1XIhYRAVJAolN1srwv0svtSGWcCbhMnxA4N/fVrh4YCpT3skaoiT8Yz31z8zZwwFEeW12UMMk4Sqvj9tvpot9x6iCdYs8EV/wLH0Vot29AaxqQZTppGCGGoKj5jOfiUcUR5W7UM09YMRzPtsWF4dccz67W62fyjKneQMWFaqNQMVSniiDKvdNtW84x6CWKEeRTFwDyOvVH38sITmh6qMKmdkxXK0mHWmXGeerqOawFgiCJcw0msn+hbOicB80ZkShHPM3jzGbC2+nb35eWl9lKvJdlUtwzD0I2WLnQCRqbf1M5RdRkCn4bJ6txDNKEEo4i8IgnqEvgsCZRuNE0ywmfxJ6ZN3TSkaQ0KrGHTpt9U/d1Bie5AS1sgM4Y0NkNmZWwIIWRAMSi3Q7+tfjusgqu74wxRFiZZzHbO/wYJ6AKiJIVAY1VkFbrDLe5JV+cEsOdTHOWMLOBKtkmKMDDlJoOQFBeEieYLmFKWXymY+CNVlwH+l7Kc6JtYBXR9T3b6ZAqM/5+abdZrZeUORTl0rszfN7jbck5fUa/JX+sN8ud4iEjv6tlvlxA2lVeg1uV+O+8267q33i5d/shaT+jc6plmNstu8fPcjCYPkW/fUmv53Z1ANFgskxQ3e07v/Gd+eR8vxsv8KRzo86tb/xdOf160ZjNyuQhvL47uHk5vQuhl1+44tR4aZzfWz/tj9DIcNYDenZ8X9rED9ym+Ph3+XhrhNb2NraLXtJ8efp1nPy6WrqnfZS55HZBlvX/kmseomFqTxtl97qZ48b0xbb/HtBnDtrCihFE+eQLMq6NsD7+vDES9EP+aXqSEBFpYqnqp5CjGgXK1I29JavFyQUAk8EQxV+dByzENt+FYrmXXB03jzLANc2B0DafVqhvdfsVBKxQ7EHsJDYn0JVl21T9fA8Sxx4AGkGmLJMczYOoXFvuII8WnQ/E4EspgnAgWN0OcxvVlsYxdA5vF0/N8Hkzs6WvYUpWrhF/T66wbcsi2ubu+xd1DwCQlIAledjgTLc64SMYcLXIembUFqlHIxQjIJAt7lt10dEbiNAIJVY+TII+gls7SMjU6W/1aGsKslA7PxuXL+zSw3W9VDoROQKQCk7Gcgqgj7BlCRhXI5wE3NgOuzHfzgMgHJhLKM4JXSLY/vfeJbJB1k4iIHnujR7PCvVY/+PrHm/oXoPTdfKwdBQuy4baapmJACProVNWco9q8li8WeVk/V1JjJszrgiFNfQQ4F/y2HCfPQPW1Cf2g8bJGveN5Ld/Gl/MZHXHEIRbdppTHA3aLETC5W/jinRSHLi5bLkXeOBR8n6wXiRVEIv5yS8EelnpCfCN+XpIseC/XHlsbfkScYqHghE7lSQ6S5SdNgRNhlgjmS7JN4/sM7HO+LVwneY2Fi26a5Bw+/6JISmurCOMkp9zvq6Vgk2ZLnHyZgveu9MFMSeVvs7lgn87mh8uLkSC8GKlrXfLfyhop2wWDKleAEktbLcSqKZzT6QatvwHcYXajbxkNd9B0zLo92GR2y+056wRuRdL5IP4o2cjp7nvo/AU=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950D2067F85134FE0401F0A059927C5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950D2067F85134FE0401F0A059927C5</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F951076527243F80E0401F0A059930AD</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F951076527243F80E0401F0A059930AD</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083512</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951076527253F80E0401F0A059930AD</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083515</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083515</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083515</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>F951076527243F80E0401F0A059930AD</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj1XIhYRAVJAolN1srwv0svtSGWcCbhMnxA4N/fVrh4YCpT3skaoiT8Yz31z8zZwwFEeW12UMMk4Sqvj9tvpot9x6iCdYs8EV/wLH0Vot29AaxqQZTppGCGGoKj5jOfiUcUR5W7UM09YMRzPtsWF4dccz67W62fyjKneQMWFaqNQMVSniiDKvdNtW84x6CWKEeRTFwDyOvVH38sITmh6qMKmdkxXK0mHWmXGeerqOawFgiCJcw0msn+hbOicB80ZkShHPM3jzGbC2+nb35eWl9lKvJdlUtwzD0I2WLnQCRqbf1M5RdRkCn4bJ6txDNKEEo4i8IgnqEvgsCZRuNE0ywmfxJ6ZN3TSkaQ0KrGHTpt9U/d1Bie5AS1sgM4Y0NkNmZWwIIWRAMSi3Q7+tfjusgqu74wxRFiZZzHbO/wYJ6AKiJIVAY1VkFbrDLe5JV+cEsOdTHOWMLOBKtkmKMDDlJoOQFBeEieYLmFKWXymY+CNVlwH+l7Kc6JtYBXR9T3b6ZAqM/5+abdZrZeUORTl0rszfN7jbck5fUa/JX+sN8ud4iEjv6tlvlxA2lVeg1uV+O+8267q33i5d/shaT+jc6plmNstu8fPcjCYPkW/fUmv53Z1ANFgskxQ3e07v/Gd+eR8vxsv8KRzo86tb/xdOf160ZjNyuQhvL47uHk5vQuhl1+44tR4aZzfWz/tj9DIcNYDenZ8X9rED9ym+Ph3+XhrhNb2NraLXtJ8efp1nPy6WrqnfZS55HZBlvX/kmseomFqTxtl97qZ48b0xbb/HtBnDtrCihFE+eQLMq6NsD7+vDES9EP+aXqSEBFpYqnqp5CjGgXK1I29JavFyQUAk8EQxV+dByzENt+FYrmXXB03jzLANc2B0DafVqhvdfsVBKxQ7EHsJDYn0JVl21T9fA8Sxx4AGkGmLJMczYOoXFvuII8WnQ/E4EspgnAgWN0OcxvVlsYxdA5vF0/N8Hkzs6WvYUpWrhF/T66wbcsi2ubu+xd1DwCQlIAledjgTLc64SMYcLXIembUFqlHIxQjIJAt7lt10dEbiNAIJVY+TII+gls7SMjU6W/1aGsKslA7PxuXL+zSw3W9VDoROQKQCk7Gcgqgj7BlCRhXI5wE3NgOuzHfzgMgHJhLKM4JXSLY/vfeJbJB1k4iIHnujR7PCvVY/+PrHm/oXoPTdfKwdBQuy4baapmJACProVNWco9q8li8WeVk/V1JjJszrgiFNfQQ4F/y2HCfPQPW1Cf2g8bJGveN5Ld/Gl/MZHXHEIRbdppTHA3aLETC5W/jinRSHLi5bLkXeOBR8n6wXiRVEIv5yS8EelnpCfCN+XpIseC/XHlsbfkScYqHghE7lSQ6S5SdNgRNhlgjmS7JN4/sM7HO+LVwneY2Fi26a5Bw+/6JISmurCOMkp9zvq6Vgk2ZLnHyZgveu9MFMSeVvs7lgn87mh8uLkSC8GKlrXfLfyhop2wWDKleAEktbLcSqKZzT6QatvwHcYXajbxkNd9B0zLo92GR2y+056wRuRdL5IP4o2cjp7nvo/AU=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950D2067F85134FE0401F0A059927C5</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdU+o8EL73V3R6Lp3SL8pHR5hBQE9V1APoqDdnQrqFaJvUJgU8v/4kxSIg+nLeGWaYbDe7z+4+eZITjpLY8TucQyYIo1rQa+m/HatWBbfhGjhykFG1Jk1j4oVNw7XCGrLqVj1CDV0LOM8hoFwgKlq6Y9lVw/IMuzq2LN/1fLtRsWvuk67dQ8ZlaOlSsXRtmcSU+0Xalp5n1GeIE+5TlAD3BfZHncGVLz19VGLS2ycrlEXCrD0TIvVNE1dCwBDHuIJZYp6YWz4nIfdHZEqRyDN4zxnylv6+d7FYVBZuhWVT07Esy7SapvQJOZn+0NtH5WYIAxqx1bqLKKMEo5j8QQrUAMSMhVonnrKMiFnyRWjbtC0V2oAlNrBdpT908yNBge7ASFsgM44MPkN2GWwIEWRAMWh3w6Cl/zhsgqu94wxRHrEs4Tvrf4MEdA4xSyE0eFlZie7wiHva1T4B7AcUxzknc7hWNEkRBq7dZhCR5RXhknwh14rxa0suf6RkGeB/GcuJuYlVQjf3dKdHpsDF/5nZ5rxWUe5RnEP76W5g96Po9CJdDm8vcu+Z1V8nY3IODd4qIGw6r0Ctx/2+3iXrmlvvm54DlgTHMfTq1d7i4nI6u7s+/oWbV43x5P6B3TtP1imeL1/7Ly+jzpP4eTo4r06eu/3+MhkFozB86TnxwyWEydJq8KPz8PExP3ec2QMOw8tLPBhEl89Xt4mbB4vedRb37NtftFajx/OkH72N627enYwe4dIe39z1uz/TX4/n1V59JJA3FUc3U77A4+zPYvg48Zr1Oy+8a33UtFnDtrGUhFE+eQYsyqWiR9DTzuS8kPheXpSFhEZUuPqp0igugAq9rXYpafFzKUAk9OUwV+uzpmc5rtd0bcezT6tO36pa9pnVsbxm02rWvVKDVih2IHYZjYjKpVR2xZ/vAeLE50BDyIw5y/EMuP5NxB4SSAvoUB4ORjmMmVTxWOSIpbVU2G7dnjQm80U6TylyE127ZuKG3mSdSEC2Ld3ulnQPAZOUgNJ3RXAuGc6F7MUrmucititzVKGQyxsgUyLsO9WGZ3KSpDEopGbCwjyGSjpLi86YfPXvGAjzwjrsj4uD92Vdu9/KFkifkCgHrmo5BTlG2HMHWWUhXxdc2yy4DN/JQ6LOl+ynyAheIdn+9EETxY81R2RFv7uj33aJe+1+8PbPO81vQJm7/VgnCudkI215mcr7QapHu5zmK6q8VvL5PC/mV1fKmMnwphRI2xwBzqW8vY3ZC1BzHcI86HZZo97JvLZv48vFjEpNEJBItmnF8oCnxQi4eloE8pgsD323bKWUfROwFPts3Vi+QBTibx8p2MfKT5pv5d+CZeHHuPbE2sgj65TvCUHoVK3UPfL2BSkwk2GJFD6WbQbfF2Bf8m3juslrLEKyaZIL+PqLphStpSOMWU5F0NMLw6bKFjjFWwr+h9OnMIWSv1/NS/7l1fwwuBpJvUuQvvYl/+1skIIuGHT1AiiwtPSlfGnK5HS6oervAHeFvSfJUz9reLZbPdsUdqfeXQv7diXtT+bPlo2e7p6H9l8=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950235931251B42E0401F0A05990975</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950235931251B42E0401F0A05990975</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083515</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950235931261B42E0401F0A05990975</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5964f10a-b509-40e9-862f-fa1b94ce9895</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7aaed2f-7952-4584-a739-c774cb776a89</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ee42b0c1-246b-484c-966a-a332f463828c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00032_FUNC_UVTC_UserName_RequestorUserCLG_any_status_RequesteeChild_pending_ResetPassword_Role_RET_CS_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","pending");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZZb+I6FH6fXxGlj6OQhbBFBYlCaTO3Cy2U6czLyDgnxG2wQ+xA2l9/7dBQoLSXuRIS8slZvrP4Oz7laB47XpdzSAVhVPP7bf1P0Jo2HLeGDLs6dQ23VmsazXoQGk69YVdbMA1rNUvXfM4z8CkXiIq27li2a1g1w3bHluVVa55jVerV5m9dm0DKpWupUpFW+Tym3CvCtvUspR5DnHCPojlwT2Bv1L2+8qSmh0pMeud0jbIImHYiIRLPNHElAAxxjCuYzc1Tc0fnNODeiMwoElkKbzED3tbfbFerVWVVrbB0ZjqWZZlWy5Q6ASezE73zrTSGwKchW597iDJKMIrJK1KgrkFELNC68YylRETzT1zbpm0p1wbk2MC2S0908z1Age5ITzsgU44MHiG7dHYPIaRAMWgP935bPzmug2vbcYooD1k653vnv4MEdAkxSyAweJlZie54jwfK1TkF7PkUxxknS7hRY5IgDFwbphCS/IpwOXwB14r2azmXP1JOGeC/acupuY1VQjcPVKdPZsDF/+nZdr/WXiYozqDTrObh96cGxTf912dzuqwjf4IfwqthnbcLCNvKa1Cbdr+d94d1M1tvRqG/yH+2Wj44s4uLoHl5W8VZche40c88J4iduZxbY2vS+25ZP1kcja9mP7jLVna9P5w+268N1BsOJrPHbj4bRt8eBoN+ljxR1B2fS5Po7tfl1cPTNHXTrt/67S6g8QtPXmMePq6e+370GqG7i/Pq7dT5dZk4wfw7uwhYIsLh7fVg+u0aJuPqJdxMz5768cr5hz3O2u85beewKywpYZRNnwCL8qjGw+9rA9kvJL6mFyUhgREWql6iOIoLoELvKCtFLV4mCYgEnmzm+jxo1SynarcGzbN+rXd+dm65lj2wulat1bJa9UHJQWsUexB7jIZExVIsu56frwHiuceBBpAaS5bhCLj+hcc+Ekjz6b28HIxyGDPJ4tVnuybqAaKEvjjTl9fWIntBkajr2g0Tt/Q27YYC0l3mru4w9z1gkhBQ9K7mm8sB50KWYoGWmYjtyhJVKGRyAaSKgz3HbdZMTuZJDAqoOWdBFkMliZKiMCZf/zsGwryQ3p+Pi3v3aVr738oKSJ2AKAWucjkD2UU4sILsMpHPE65vJ1y672YBUddLllOkBK+R7H56nxI1HpsRkRn96Y3+2CXujfrR5h8tzS9Amfv12AQKlmQrbLlL5XqQ5NEpu7lAlUUlWy6zon8NRYypdG9KfrTNEeBMstvLmD0DNTcuzKOWywb1XuSNfBdfJiI6EkjAXE6bVhyPeFmMgKuXhS9vSX7ss2UnpKybgFwckvVi+QBRiL98o2APKz0pHsq/FUuD93Yd8LUVR+YpnxOC0Jk6qTXy8slQYCbdEsl7LN12fsjBoeC7wk2RN1iEnKZpJuDzL5oitLaOMGYZFX5fLwTbJFvgFC8JeO9KH9wURP62mXP+6WZ+vL4aSbqbI32jS/5b2SDFuGDQ1QOgwNLWc/nQlMHpbIvU3wB+4HWnX28MmtZgcNbb8HpD8rpz/n6ZdzLpfBB/lGzVdP8+dP4F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95022D67F80FFBCE0401F0A079902E1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95022D67F80FFBCE0401F0A079902E1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F9502319F8BD5CEBE0401F0A0599096F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F9502319F8BD5CEBE0401F0A0599096F</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083519</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F9502319F8BE5CEBE0401F0A0599096F</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083522</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083522</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083522</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>F9502319F8BD5CEBE0401F0A0599096F</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZZb+I6FH6fXxGlj6OQhbBFBYlCaTO3Cy2U6czLyDgnxG2wQ+xA2l9/7dBQoLSXuRIS8slZvrP4Oz7laB47XpdzSAVhVPP7bf1P0Jo2HLeGDLs6dQ23VmsazXoQGk69YVdbMA1rNUvXfM4z8CkXiIq27li2a1g1w3bHluVVa55jVerV5m9dm0DKpWupUpFW+Tym3CvCtvUspR5DnHCPojlwT2Bv1L2+8qSmh0pMeud0jbIImHYiIRLPNHElAAxxjCuYzc1Tc0fnNODeiMwoElkKbzED3tbfbFerVWVVrbB0ZjqWZZlWy5Q6ASezE73zrTSGwKchW597iDJKMIrJK1KgrkFELNC68YylRETzT1zbpm0p1wbk2MC2S0908z1Age5ITzsgU44MHiG7dHYPIaRAMWgP935bPzmug2vbcYooD1k653vnv4MEdAkxSyAweJlZie54jwfK1TkF7PkUxxknS7hRY5IgDFwbphCS/IpwOXwB14r2azmXP1JOGeC/acupuY1VQjcPVKdPZsDF/+nZdr/WXiYozqDTrObh96cGxTf912dzuqwjf4IfwqthnbcLCNvKa1Cbdr+d94d1M1tvRqG/yH+2Wj44s4uLoHl5W8VZche40c88J4iduZxbY2vS+25ZP1kcja9mP7jLVna9P5w+268N1BsOJrPHbj4bRt8eBoN+ljxR1B2fS5Po7tfl1cPTNHXTrt/67S6g8QtPXmMePq6e+370GqG7i/Pq7dT5dZk4wfw7uwhYIsLh7fVg+u0aJuPqJdxMz5768cr5hz3O2u85beewKywpYZRNnwCL8qjGw+9rA9kvJL6mFyUhgREWql6iOIoLoELvKCtFLV4mCYgEnmzm+jxo1SynarcGzbN+rXd+dm65lj2wulat1bJa9UHJQWsUexB7jIZExVIsu56frwHiuceBBpAaS5bhCLj+hcc+Ekjz6b28HIxyGDPJ4tVnuybqAaKEvjjTl9fWIntBkajr2g0Tt/Q27YYC0l3mru4w9z1gkhBQ9K7mm8sB50KWYoGWmYjtyhJVKGRyAaSKgz3HbdZMTuZJDAqoOWdBFkMliZKiMCZf/zsGwryQ3p+Pi3v3aVr738oKSJ2AKAWucjkD2UU4sILsMpHPE65vJ1y672YBUddLllOkBK+R7H56nxI1HpsRkRn96Y3+2CXujfrR5h8tzS9Amfv12AQKlmQrbLlL5XqQ5NEpu7lAlUUlWy6zon8NRYypdG9KfrTNEeBMstvLmD0DNTcuzKOWywb1XuSNfBdfJiI6EkjAXE6bVhyPeFmMgKuXhS9vSX7ss2UnpKybgFwckvVi+QBRiL98o2APKz0pHsq/FUuD93Yd8LUVR+YpnxOC0Jk6qTXy8slQYCbdEsl7LN12fsjBoeC7wk2RN1iEnKZpJuDzL5oitLaOMGYZFX5fLwTbJFvgFC8JeO9KH9wURP62mXP+6WZ+vL4aSbqbI32jS/5b2SDFuGDQ1QOgwNLWc/nQlMHpbIvU3wB+4HWnX28MmtZgcNbb8HpD8rpz/n6ZdzLpfBB/lGzVdP8+dP4F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F95022D67F80FFBCE0401F0A079902E1</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZZb+o6EH7vr4jSxyrEDksgKkiUpaUtXQjd7kvl45jgNnFC7ATor792aChQ2su5EhLyZDzzzeJv5pSjMLCcNuckETRi2qDb1F+hZU1ABQLDho2qUcEYGvV6pWKUcQ03Jp5tW5alawPOUzJgXCAmmroFYMUAVQNWxgA45apjVUvVau0fXXskCZempUoJ6NoiDBh3crdNPU2YEyFOucNQSLgjsOO2h9eO1HRQgUlvna5Q5g6T1lSI2DFNXPIIJkGASzgKzVNzS+fU445LfYZEmpBPnx5v6p935/N5aV4uRYlvWgAAEzRMqeNx6h/rraPiMvEGbBKtzh3EIkYxCugHUqCGREwjT2sHfpRQMQ1/MA1NCJRpgyywgWGFHevml4Mc3YGWtkAmHBl8imBhbEQmJCEME+1hNGjqx4dVcHV3nCDGJ1ES8p3z30EiLCNBFBPP4EVkBbrDLe5JV+uUYGfAcJBympEb1SYxwoRrdwmZ0MU15bL5PK7l5dcWXP5o0WUE/01ZTs1NrBK6uSc7XeoTLv5PzTbrtbLyiIKUtN67T1kNBEmdJNmo3K3XmD94+ZiaFps3cwibyitQ63J/nnebdd1bn5fE6H5xdlsfumZvaXUf3dnw5aQWP9xYV0+zxwe/evE8KZ/zkzPcjkcXt8y/7qXn9iUc9xY3Yw5e2NP4I7rrnHwQ9AKPnuzz+5elaKP7Wueq4j5ko/vz4ZU/CxcDYL6dj7sXJ6Ydjkd09pFcPj6/w9h9puPA9qt3/azeWD54t/RyMYyvXDE6Sp779rt1Nr30wHwK69bzfNj8imkzhm1hQQlu+ueNYFEcVXsMulpf1guJ3+lFSahnTHJVJ1YcxQVhQm+pW4panFQSEPUcWczVud+oQtCAvWqlDuwzC/ZABcA+aINqo1Fu1GoFB61Q7EDsRGxClS/Fsqv++R0gDh1OmEcSI4tSPCVc/8ViFwmkDdhIPo6IcTKOFItDO4vnPn2flCHCS8ApFOU0/HjTtZtI3LLbpD0RJNmm7vIWdY8IpjElit9Vg3PZ4VzIXMxQlooAljJUYiSVEyBRJOxYlXrV5DSMA6KQmmHkpQEpxdM4z4zJV/+WgTDPpaPeOH94P8a1+61IgdTxqFLgKpYzIstI9swgWATyc8C1zYAL8+3Uo+p9yXyKhOIVku1PX22i+mPdIzKi1477Cgvca/WDr3+/af4CytzNx9qRl9ENt8UwlfNBskerqOYMlWalNMvSvH62YsZEmjclQULTJTiV9LYcR++EmWsT5kHTZY16x/Navo0vFVPmCiRIKLtNy48HrBYu4Wq1GMhnsjh0b9lyKfMmyELsk3UCuYEoxL8uKdjBSk+K7+TfPEq8r3LtsbXhR8Yp9wlBma9Oao4sf2gKHEmzVBJflGwa32dgn/Nt4TrJayxCdtOfVJCfv2iK0Zo6wjhKmRh09VywybI5TrGMifOl9M1MzuSfo3nBfxzNz8NrV/JdiPS1Lv1vZYPm7YKJrjaAHEtTX8hNUzpn/garfwLcIXZgWd2a3a+Dfv+ssyZ2u9EAVu/rMW9F0vom/i7ZyOnue2j9Cw==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F951091E54807B21E0401F0A05993966</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F951091E54807B21E0401F0A05993966</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083522</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F951091E54817B21E0401F0A05993966</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5964f10a-b509-40e9-862f-fa1b94ce9895</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7aaed2f-7952-4584-a739-c774cb776a89</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ee42b0c1-246b-484c-966a-a332f463828c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e651ce30-1ac9-4bed-8fd6-ac51ee8731b7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00033_FUNC_UVTC_UserName_RequestorUserNonCLG_any_status_RequesteeChild_pending_ResetPassword_Role_RET_CS_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for NonCLG"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - NonCLG"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","pending");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+o4EH7vr4jSx1XIhXCLChKF0tLT2xZ6tKcvR8YZgiGxQ+wE6K9fOzQpUNrlrISEPBnPfHPxN3PBURQ6XpdzSARhVBv22/rvieXWUcOpGbZt+4YLU8do+nVkQNNq1eoNF1q2o2tDzlMYUi4QFW3dsWzXsOQVd2xZXrXmOc2KXWu+6tpPSLg0LVUqlq6to5ByL3fb1tOEegxxwj2KIuCewN6oe3/nSU0PFZj0zsUWZe4w6cyEiD3TxBUfMIQhrmAWmRfmns6Fz70RCSgSaQLvPn3e1t/vrlaryqpaYUlgOpZlmVbLlDo+J8G53jkrLoM/pFO2PfcQZZRgFJI3pEDdg5gxX+uGAUuImEVfmLZN21KmDVhjA9suPdfNDwc5uhMt7YFMODL4DNmFsWeYQgIUg/byPGzr56dVcHt3nCDKpyyJ+MH5zyABzSBkMfgGLyIr0J1u8Ui6OheAvSHFYcpJBg+qTWKEgWtPCUzJ+o5w2Xw+1/Lya2suf6ToMsB/UpYLcxerhG4eyU6fBMDF/6nZbr22Vn6iMIVOnNqLt19Lv+fe301rm8VwHL3g6MfqedJt5xB2lbegynK/nw+bteyt90spQ/jteloL5jePQbgwXVp9+It1WRbG0yc/nj+u74f48VaGkjWXDgvT+X0X4dpr/Y7/GvmTVT+4vRkscUjfAvuM878nTTfosevqo9vcRNn15bDZeDAHPwLRD+bRYr7kmye6TK7pMo5vb8c4642uxq+XlxQ3Wjd2gEIcxdXoZT4Jzuru7W1r5P66WT+8Oaw3Hb122x8x7cawLywoYZRO5oBFcVTtMexrA1kvJL6nFyUhvjHNVb1YcRQXQIXeUbcUtXipJCDie7KY2/OgVbOterXWuHLrfevSurJcyx5YXavRatWkuOCgLYoDiD1Gp0T5Uiy77Z/vAeLI40B9SIyMpXgGXP/GYh8JpA3ps3wcjHIYM8niiLGMpIuJ2JBJlKBFUgUGy8lG1x6YeKSPSXcqINln7uoecz8DJjEBRe+qv7lscC5kKpYoS0VoVzJUoZDKAZAoDvYct1kzOYniEBRQM2J+GkIlnsV5Yky+/XcMhHkufb4a5+/uy7AOvxUZkDo+UQpcxXIJsopwZATZRSBfB1zfDbgw3019op6XTKdICN4i2f/00SWqPcoWkRH97o1+2wXuUv3k659vmt+AMg/zUTryM7LjtpilcjxI8ugU1VyiyrKSZlma16+hiDGR5k3Jj7Y5ApxKStiM2QKoWZowTxouJeoDz6V8H18qZnQkkIBIdpuWH0/YLEbA1WYxlK9kferasudS5k3AWhyT9UK5gCjE3+4o2MNKT4qf5N+KJf5HuY7Y2vEj45TrhCA0UCc1RjZfNAVm0iyRvMeSXePHDBxzvi8sk1xiEbKbJqmAr79oitDaOsKYpVQM+3ou2CXZHKfYxOB9KH0ykxP5+2Re8y8n8z/3dyNJdxHSS13y38oGydsFg64WgBxLW1/LRVM6p8EOqb8DPOB1q+9Y1WqzO7CbLbvk9Vqr5TQuB2UC9yLpfBJ/luzk9PA9dP4F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950D20338AF1891E0401F0A059927BF</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950D20338AF1891E0401F0A059927BF</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95106357E46D0B0E0401F0A07995357</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95106357E46D0B0E0401F0A07995357</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083526</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95106357E47D0B0E0401F0A07995357</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083532</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083532</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083532</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+o4EH7vr4jSx1XIhXCLChKF0tLT2xZ6tKcvR8YZgiGxQ+wE6K9fOzQpUNrlrISEPBnPfHPxN3PBURQ6XpdzSARhVBv22/rvieXWUcOpGbZt+4YLU8do+nVkQNNq1eoNF1q2o2tDzlMYUi4QFW3dsWzXsOQVd2xZXrXmOc2KXWu+6tpPSLg0LVUqlq6to5ByL3fb1tOEegxxwj2KIuCewN6oe3/nSU0PFZj0zsUWZe4w6cyEiD3TxBUfMIQhrmAWmRfmns6Fz70RCSgSaQLvPn3e1t/vrlaryqpaYUlgOpZlmVbLlDo+J8G53jkrLoM/pFO2PfcQZZRgFJI3pEDdg5gxX+uGAUuImEVfmLZN21KmDVhjA9suPdfNDwc5uhMt7YFMODL4DNmFsWeYQgIUg/byPGzr56dVcHt3nCDKpyyJ+MH5zyABzSBkMfgGLyIr0J1u8Ui6OheAvSHFYcpJBg+qTWKEgWtPCUzJ+o5w2Xw+1/Lya2suf6ToMsB/UpYLcxerhG4eyU6fBMDF/6nZbr22Vn6iMIVOnNqLt19Lv+fe301rm8VwHL3g6MfqedJt5xB2lbegynK/nw+bteyt90spQ/jteloL5jePQbgwXVp9+It1WRbG0yc/nj+u74f48VaGkjWXDgvT+X0X4dpr/Y7/GvmTVT+4vRkscUjfAvuM878nTTfosevqo9vcRNn15bDZeDAHPwLRD+bRYr7kmye6TK7pMo5vb8c4642uxq+XlxQ3Wjd2gEIcxdXoZT4Jzuru7W1r5P66WT+8Oaw3Hb122x8x7cawLywoYZRO5oBFcVTtMexrA1kvJL6nFyUhvjHNVb1YcRQXQIXeUbcUtXipJCDie7KY2/OgVbOterXWuHLrfevSurJcyx5YXavRatWkuOCgLYoDiD1Gp0T5Uiy77Z/vAeLI40B9SIyMpXgGXP/GYh8JpA3ps3wcjHIYM8niiLGMpIuJ2JBJlKBFUgUGy8lG1x6YeKSPSXcqINln7uoecz8DJjEBRe+qv7lscC5kKpYoS0VoVzJUoZDKAZAoDvYct1kzOYniEBRQM2J+GkIlnsV5Yky+/XcMhHkufb4a5+/uy7AOvxUZkDo+UQpcxXIJsopwZATZRSBfB1zfDbgw3019op6XTKdICN4i2f/00SWqPcoWkRH97o1+2wXuUv3k659vmt+AMg/zUTryM7LjtpilcjxI8ugU1VyiyrKSZlma16+hiDGR5k3Jj7Y5ApxKStiM2QKoWZowTxouJeoDz6V8H18qZnQkkIBIdpuWH0/YLEbA1WYxlK9kferasudS5k3AWhyT9UK5gCjE3+4o2MNKT4qf5N+KJf5HuY7Y2vEj45TrhCA0UCc1RjZfNAVm0iyRvMeSXePHDBxzvi8sk1xiEbKbJqmAr79oitDaOsKYpVQM+3ou2CXZHKfYxOB9KH0ykxP5+2Re8y8n8z/3dyNJdxHSS13y38oGydsFg64WgBxLW1/LRVM6p8EOqb8DPOB1q+9Y1WqzO7CbLbvk9Vqr5TQuB2UC9yLpfBJ/luzk9PA9dP4F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950D20338AF1891E0401F0A059927BF</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj1XIjXCJChKXsps9pa0Ivey+rIzjEJfETmMH0v76Y4cmBUp72CMhIU/GM99c/M1cMJDEljtgDGUcU6J44576x2mB0LYdU1s4gaU1wSLQFmEbaKHZNNtGc+G0mx1V8RjLkUcYB4T3VMswm5rhaGZzbhiu7bi22Whand+qco8yJkwLlYahKkUSE+aWbntqnhGXAoaZS0CCmMuh6w+mV67QdEGFSe1fbFGWDrN+xHnq6jpsBAiiOIYNSBP9Qt/TuQiY6+MlATzP0JvPgPXUt7ubzaaxsRs0W+qWYRi60dWFTsDw8kztf6suo8AjId2eR4BQgiGI8SuQoKaIRzRQBvGSZphHySemTd00pGkNFVCDZpOcqfq7gxLdiZb2QGYMaCwCZmVshkKUIQKRcjfzeurZaRXc3p1ngLCQZgk7OP8dJETWKKYpCjRWRVahO93ikXT1LxB0PQLjnOE1upZtkgKImHKboRAXV5iJ5guYUpZfKZj44arLEPybslzou1gFdP1IdsZ4iRj/PzXbrdfWyj2Ic9Q3w8Lij/7VT/88KG6fl+b84fLpPB0vu0avhLCrvAVVl/vtfNisdW+9XZoW038eFz8y+1cxX3X9gddhSz5deEGUfo/94Y/OzeR6M5nZl79/vV53VuetYAIf0GTZgldRkaS0PZ9HM+c1h/ez1rfv38007t7fPAWvk9UQjx5/30XRmq2b7SGCvzw0enp96YxHznz6PPWtl5sCF2S1og/Zo3MX/vA2+fAqmOh03gqg/Q2irgnXP29ndGoY5MEaBJe995h2Y9gXVpTg54snBHl1lO3hjZWJqBfgX9OLlOBAC0tVN5UcxTgiXO3LW5Ja3FwQEA5cUcztedJ1jLFldOz2eGiNh81Lo2mYE2NgtLtdp9V2Kg7aojiAOKIkxNKXZNlt/3wNECYuQyRAmbamOYwQU7+wOAYcKB6ZicdBCUNzKljcfM7JOnyJOsvCSczVyqImS/LIZktVuab8htxkg5CjbJ+77T3uniGIU4wkwcsOZ6LFGRfJeAbrnMdmYw0aBOViBGSShV2r2XF0hpM0RhKqntAgj1EjjdIyNTrb/lsagKyUzi7n5cv7NLDDb1UOhE6ApQKTsQyRqCM6MoSsKpDPA27tBlyZH+QBlg9MJJRnGG6R7H967xPZIHWTiIj+jPw/ZoW7Vj/5+seb+heg9MN81I6CNd5xW01TMSAEffSraj6DxnMjX6/zsn5tSY2ZMK8LhjR1H8Fc8NvLnK4Q0WsT+knjpUZ94LmW7+PLeUR8DjhKRLcp5fGE3cJHTO4WnngnxamLy55LkTeOCn5MNorFCiIRf7mlQBdKPSG+FX8bmgXv5Tpia8ePiFMsFByTpTzJQfLySVNAKsxiwXw02zV+zMAx5/vCOsk1Fi66aZFz9PkXRVJaTwUQ0pxwb6yWgl2aLXHylxS570ofzJRU/jabC/bpbH6cXvmC8BKg1rr4v5U1XLYLRKpcAUosPbUQq6ZwTpY7tP4G8Aiz23ZnMDE7XbNmdqfbtdrDSZ3AvUj6H8QfJTs5PXwP/X8B</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950D20837DB2DB4E0401F0A07995675</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950D20837DB2DB4E0401F0A07995675</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083530</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950D20837DC2DB4E0401F0A07995675</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>F95106357E46D0B0E0401F0A07995357</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4jx1jyzYBPIEZwqVxmzQJpCTtS0fICyjHlowlc8mvP5KJCRCSQ88MM4zWq91vL/p2zwVOYjdoCwGZpJwZYbdp/qlF3hjcs5rlTxxk+V6NWJjA2KpHyK81AKoOwqYRCpFDyITETDZN10G+5VQt5N87TuBVA69WcWrot2mMIBPKtFKpOKaxSmImgsJt08wzFnAsqAgYTkAEkgTD9vVVoDQDXGIyW+cblIXDrDWTMg1sm1QiIBDHpEJ4Yp/bezrnkQiGdMqwzDN48RmJpvlyd7lcVpZehWdT23Ucx3YattKJBJ1+NlufyssQhWzCN+cOZpxRgmP6jDWoa5AzHhnteMozKmfJO6aRjRxt2oIVsQjy2WfTfnVQoDvR0h7ITGBLzDAqjQ1gAhkwAsbPQdg0P59Wwc3d+wwzMeFZIg7OfwcJ2AJinkJkiTKyEt3pFo+kq3UOJAgZiXNBF/BDt0mqQhHGbQYTurqiQjVfJIyi/MZKqB8tuwzI35Tl3N7FqqDbR7LTpVMQ8v/UbLdeGysjHOfQQrnzLYnYVUiIuPmRPDxNoeferr7dXYbNAsKu8gbUttwv58Nm3fbWy6XeWFxePfYiXn9+nk6mw7vvt89RHU2/iIfaeL3Az6PRzf1F3ae+9/gVVmP0W/x6uFy23XmK72YN/gsvb9PVw7p71+984tfxU+oNun4C390R+jKDq2E/HYRrORhdoymtze2G94tm39btDq+2z8CrJXW3Pl8g5fGxU78d5NeQNX6iyBt96hF5GQ/8we9/6pLMHp+/VnvN15h2Y9gXlpQwzMdPQGR51O0Rdo2+qheWH9OLltDImhSqQao5Skhg0mzpW5paglwREI0CVczNud+oIqeB+p1erde58Jye4zuo77SdaqPhNc7aJQdtUBxA7HA2odqXZtlN/3wMkCSBABZBZi14TmYgzA8sdrHERsgG6nFwJuCeKxb3kmju50/gOLM5qmeOX/UacRrTxDR+cHnDbrL2REK2T93eHnUPgNCUguZ33eBCdbiQKhdzvMhljCoLXGGQqwmQaRIOXL9etQVN0hg0UjvhUR5DJZ2lRWZssfl3FReJQjro3RcP7924Dr+VKVA6EdUKQsdyAaqMcGQGuWUg7wd8thtwab6dR1S/L5VPmVGyQbL/6bVNdH9se0RF9Kcz/INK3Fv1k6+/vWl/AMo+zMfWUbSgO27LYarmg2KPVlnNOa7MK/likRf1q2lmzJR5WxEksodAckVv63v+DzB7a8I+abpsUR943sr38eVyxoYSS0hUtxnF8YTVYghCrxaheiarU/eWPZcqbxJW8pisE6sNRCP+cEkhAdF6Snyr/pY8i17LdcTWjh8Vp9onJGVTfdJzZP1OUxCuzFJFfDzbNX7MwDHn+8JtkrdYpOqmcS7h/S+GZrSmiQnhOZNh1ywEuyxb4JTrFIJXpTdmCiZ/Gc0r8e5ofry+Giq+S7C51aX/rWzRol0ImHoDKLA0zZXaNJVzNt1h9ReAB8TudF3H8+rtPqo30C6xu7WL/jaBe5G03ojfSnZyevgeWv8C</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>F951091FCE7ECB30E0401F0A0599396A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:F951091FCE7ECB30E0401F0A0599396A</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20140513_083532</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>F951091FCE7FCB30E0401F0A0599396A</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6511c570-3f9d-4e26-b630-d957df50e289</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d5e2a0c1-d1c2-4d9b-b3af-86cfccf25581</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00034_FUNC_UVTC_UserName_RequestorUserChild_any_status_RequesteeOtherUser_pending_ResetPassword_Role_RET_CS_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","pending");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4jxkj2dxsT2CGQEhpyKWYpC0vGSHLRsHIxpKB9NdXMrEDhOTQM8kMo/Vq99uLvt1zjhaR5XY4J6mgMdMGvZb+5Ff9OraChgEt2zFqU79qOLBGjGnTcqoQI8uqmro24DwjA8YFYqKlW9CsGbBumLUxhG617ladig2dia49kpRL01KlAnVts4gYd3O3LT1LmRsjTrnL0IJwV2DX69wMXanpogKT3j7foswdpu2ZEIkLAK74BJMowhUcL8A52NM597nr0ZAhkaXk1afPW/rr3fV6XVlXK3EaAgtCCKADpI7PafhVb38pLhN/wIJ4e+4iFjOKUUT/IAXqhohZ7GudKIxTKmaLD0ybwITKtEE22MBmjX3VwZuDHN2JlvZAphwZfIbMwtiIBCQlDBPtYTRo6V9Pq+D27jhFjAdxuuAH53+DRNiKRHFCfIMXkRXoTrd4JF3tc4LdAcNRxumK3Ko2SRAmXLtPSUA3Q8pl8/lcy8uvbbj8p0WXEfwvZTkHu1gldHAkOz0aEi7+T81267W18oiijLSzPs0eLACuhw2BFpOaPfpxGWwad8NL3soh7CpvQZXlfj0fNmvZW6+Xej5ZhxMLxlYvefgWXjbu599/Zks8z65781GERgn/FsO76RTdXozufOAEw7NxPRrbZ+nw4ffvuefdb7yom9m1n9UvZz8uvHVvebVMbVM8Lu20H4Cbb3BqPTY9MATX44fvneYQ/ZjFz9feJqpOEjpB9tlydTG5v1l74+fuc/9q1CVz+2XyJYyXV+H8fvDdt+GvsGvdTuatt5h2Y9gXFpTgZdNngkVxVO0x6Gl9WS8kPqcXJaG+EeSqbqI4igvChN5WtxS1uJkkIOq7spjbc9+pm7DZ7Nj9br8DL+VfDZp92IFNx6nX67DgoC2KA4jdmAVU+VIsu+2fzwHihcsJ80lqrOIMzwjXP7HYQwJpAzaSjyNmnIxjyeLVsLGYU98OEvuPSWeO9WyG3KTBXNduY3HH7tJOIEi6T93VPeoeEUwTShS/qwbnssO5kLlYolUmIrOyQhVGMjkBUkXCrlWz64DTRRIRhRQsYj+LSCWZJXlmAN/+WgbCPJeOLsf5w/swrsNvRQqkjk+VAlexXBBZRnJkBllFIB8H3NgNuDDfyXyq3pfMp0gp3iLZ//TWJqo/yh6RET11vSezwF2qn3z9/U3wCShwmI/Skb+iO26LYSrng2SPdlHNJaosK9lqleX1aypmTKV5IAnSBB7BmaS3l3E8JwyUJsBJ06VEfeC5lO/jy8SMeQIJspDdpuXHE1YLj3C1WgzkM9mcurfsuZR5E2Qjjsm6kdxAFOJPlxTsYqUnxffyZx2n/lu5jtja8SPjlPuEoCxUJzVHXj5oChxLs1QSX5zuGj9m4JjzfWGZ5BKLkN00zQT5+IumGK2lI4zjjIlBT88Fuyyb4xQvCXHflN6ZyZn8dTRv+Iej+dfN0JN8t0B6qUv/W9mgebtgoqsNIMfS0jdy05TOWbjD6q8AD4gd9izYaPY7PbNa65fEXnccq9mtlwnci6T9TvxespPTw/fQ/gs=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950D2067FAD134FE0401F0A059927C5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950D2067FAD134FE0401F0A059927C5</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F951077A8FCFA0E0E0401F0A07995550</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F951077A8FCFA0E0E0401F0A07995550</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083538</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951077A8FD0A0E0E0401F0A07995550</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083547</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083547</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083547</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>F951077A8FCFA0E0E0401F0A07995550</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4jxkj2dxsT2CGQEhpyKWYpC0vGSHLRsHIxpKB9NdXMrEDhOTQM8kMo/Vq99uLvt1zjhaR5XY4J6mgMdMGvZb+5Ff9OraChgEt2zFqU79qOLBGjGnTcqoQI8uqmro24DwjA8YFYqKlW9CsGbBumLUxhG617ladig2dia49kpRL01KlAnVts4gYd3O3LT1LmRsjTrnL0IJwV2DX69wMXanpogKT3j7foswdpu2ZEIkLAK74BJMowhUcL8A52NM597nr0ZAhkaXk1afPW/rr3fV6XVlXK3EaAgtCCKADpI7PafhVb38pLhN/wIJ4e+4iFjOKUUT/IAXqhohZ7GudKIxTKmaLD0ybwITKtEE22MBmjX3VwZuDHN2JlvZAphwZfIbMwtiIBCQlDBPtYTRo6V9Pq+D27jhFjAdxuuAH53+DRNiKRHFCfIMXkRXoTrd4JF3tc4LdAcNRxumK3Ko2SRAmXLtPSUA3Q8pl8/lcy8uvbbj8p0WXEfwvZTkHu1gldHAkOz0aEi7+T81267W18oiijLSzPs0eLACuhw2BFpOaPfpxGWwad8NL3soh7CpvQZXlfj0fNmvZW6+Xej5ZhxMLxlYvefgWXjbu599/Zks8z65781GERgn/FsO76RTdXozufOAEw7NxPRrbZ+nw4ffvuefdb7yom9m1n9UvZz8uvHVvebVMbVM8Lu20H4Cbb3BqPTY9MATX44fvneYQ/ZjFz9feJqpOEjpB9tlydTG5v1l74+fuc/9q1CVz+2XyJYyXV+H8fvDdt+GvsGvdTuatt5h2Y9gXFpTgZdNngkVxVO0x6Gl9WS8kPqcXJaG+EeSqbqI4igvChN5WtxS1uJkkIOq7spjbc9+pm7DZ7Nj9br8DL+VfDZp92IFNx6nX67DgoC2KA4jdmAVU+VIsu+2fzwHihcsJ80lqrOIMzwjXP7HYQwJpAzaSjyNmnIxjyeLVsLGYU98OEvuPSWeO9WyG3KTBXNduY3HH7tJOIEi6T93VPeoeEUwTShS/qwbnssO5kLlYolUmIrOyQhVGMjkBUkXCrlWz64DTRRIRhRQsYj+LSCWZJXlmAN/+WgbCPJeOLsf5w/swrsNvRQqkjk+VAlexXBBZRnJkBllFIB8H3NgNuDDfyXyq3pfMp0gp3iLZ//TWJqo/yh6RET11vSezwF2qn3z9/U3wCShwmI/Skb+iO26LYSrng2SPdlHNJaosK9lqleX1aypmTKV5IAnSBB7BmaS3l3E8JwyUJsBJ06VEfeC5lO/jy8SMeQIJspDdpuXHE1YLj3C1WgzkM9mcurfsuZR5E2Qjjsm6kdxAFOJPlxTsYqUnxffyZx2n/lu5jtja8SPjlPuEoCxUJzVHXj5oChxLs1QSX5zuGj9m4JjzfWGZ5BKLkN00zQT5+IumGK2lI4zjjIlBT88Fuyyb4xQvCXHflN6ZyZn8dTRv+Iej+dfN0JN8t0B6qUv/W9mgebtgoqsNIMfS0jdy05TOWbjD6q8AD4gd9izYaPY7PbNa65fEXnccq9mtlwnci6T9TvxespPTw/fQ/gs=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950D2067FAD134FE0401F0A059927C5</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3vr4iyj6sQh4SvqCBRUu6ypdsW+rkvlXEGcEkcsB2g++uvHZoUKO1lr4SEPBnPnJk5PvapwHFU9ttCAJc0YUYvaJrPo9Cpo3DkWTXieZbnEmyNEHItFI6RW6uVxyT0TKMnRAo9JiRmsmmWkeNZqGI53i1CvlvxvWqpUfF+m8Y9cKFCK5cSMo11HDHhZ2mbZsqZn2BBhc9wDMKXxB+2L/u+8vRxjslsnW5QZgl5ayrl3LdtUgqBQBSREkli+9Te8TkNhT+kE4ZlyuEtZyia5tve1WpVWrmlhE/sMkLIRg1b+YSCTr6ZrZN8M4Q9Nk426w5mCaMER/QP1qAuQU6T0GhHk4RTOY0/Ce3YDtKhLVgTizge+2ba7wkydEdG2gHJBbbEFDt5sAGMgQMjYNwNek3z23ET3Oy95ZiJccJjsbf+O0jAlhAlcwgtkVeWozs+4oF2tU6B+D1GolTQJfzSNJljAsK45jCm6z4VinyhMLLxG2uhfjRnGZC/GcupvY1VQbcPdCegExDy/8xse16bKPc4SqH1kwUQIlg8wtMvOQsJci9fu/3RS+yQZgZh23kDqhj323qfrAW33jbdP9p38ye65o83Vz+EtO+8mYw56y/v4IHb9SAl7neXtaH/FDv1tXe+Pn9wWCNp40bdC28uf9T6F/f2BZK09uSe1K7Z1Y9rsapP2nxcfgjKg4vpWePs8We1kj4uqlG9G0yi7+fxgg/+uTmXV9Hd79nL0/14uOq83HUvZ690cjGdMpaOpt2T3nixitPbh+Cm4dhJeBVP6833mrZr2DXmkjBMRy9AZL7U9OgFRlfNC8uv5UVbaGiNM1d/rjVKSGDSbOldWlr8VAkQDX01zM2626igcrmBOpVa4JydBefIQ04XtVGl0UCNhpNr0AbFHsROwsZU59Iqu+HP1wBJ7AtgIXBrmaRkCsL8ImKAJTZ6bKAOR8IE3CZKxZ2RS2ZuLBGtVmfOsrp+5aP5xKFkYhq/EnnFrnh7LIHvare7o90DIHROQQu8ZrhQFBdSNWOBl6mMnNISlxik6grgWoX9slev2ILG8wg0VDtOwjSC0nw6z1pji81/2cJEZNbB+W128j4tbP9b3gPlE1LtIHQtZ6DmCAcuITcv5POCq9sF5+HbaUj1AVMNlZySDZLdT+880QQpSKIqeu4MnwsyFO5Hb/+40/4ClL3fjyJRuKRbafPbVF0QSj5a+TQXuLQopctlms2vpqWRq/C2UkjHHgJJlb693iYzYHYRwj7qeilQ72Uu7Lv4UjllQ4klxIptRrY84m0xBKHfFj11TtbHPlx2Uqq+SVjLQ7ZOpJ4gGvGXrxTiE+2nzNfqb5Xw8H1cB2Jt5VF1qgeFpGyiV/oief2EFCRRYalSvoRvBz8U4FDyXWPR5AKLVGwapRI+/2JoSWuamJAkZbIXmJlhW2YznPJ1Dv6704cwmZS/3c1r8end/HjZHyrBi7FZ+NL/drZoRhcCpn4CZFia5lo9NVVyNtmS9TeA+8oelFG11m0Hjut1t5W9XOtUigbuVNL6YP5o2erp/nlo/Qs=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F9502290C57D1BBDE0401F0A05990991</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F9502290C57D1BBDE0401F0A05990991</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083541</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F9502290C57E1BBDE0401F0A05990991</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZtb7I8FP6+X0HYxzsIKOgg08TpXJh7e0Tdsi9LLUftBi2jBXW//ik4nDq3x/tJTEwPp9e5zkuv9pyjKKy6bc4hEYRRxes21ZdatV5FU2eiWXYj0KwadrQJGI6GGva0ZmID48BRFY/zFDzKBaKiqVYN09IMWzOtoWG4Ndu1nIpRazyryhgSLqGlS8VQlWUUUu4WYZtqmlCXIU64S1EE3BXY9du3N670dFHJSW2dr1kWAZPWXIjY1XVcCQBDGOIKZpF+ru/4nAfc9cmMIpEm8Bkz4E31c+9isagsahWWzPSqYRi64ejSJ+Bkdqq2TsrNEHh0ytbrDqKMEoxC8oFyUrcg5ixQ2uGMJUTMox+gTd00cmgNlljDpkVPVf0rQMHuSKQdkglHGp8jswQbwBQSoBiU0cBrqqfHdXC9d5ggyqcsifje+u8oAc0gZDEEGi8zK9kdj3igXK1zwK5HcZhyksFdPiYxwsCVhwSmZHlDuBy+gCtF+5Ullz9SThngv2nLub7NVVLXD1SnS2bAxf/p2Xa/1ihjFKbQullF3p+P16thFNWDx2H3KsWWPbr20fNbs6Cw7bwmtWn353p/WDez9bkprKd3vQWQUeOhZzuPtyy7oJ6TGV7/emouLTZLBp3F08dyvJrefuD4Tk/aaTjRu2fXNB1bHR2e+8PhcpTdvz0uT67O6h8DPLtAq8u7K/1PLB6y2659N34lDJzF6tVE4XxSf5qcjfzR87g/eZzdv6HricMGH3ZyJkNXRTSqXfpR5tOTfgdP+p2x31/9c91ARu9q4jW/ctrOYddYSoKfTl4Bi3KZj4fXVXqyX0j8Li+5hQTatHB141yjuAAq1Fa+K5cWN5UCRAJXNnO97jm2UTWdRufCqVftRu3SsAyzZ7QN23EMp31RatCaxR7FDqNTksfKVXY9P78TxJHLgQaQaBlL8Ry4+gtiFwmkeHQgDwejHIZMqrhpr4RoxLVXk6XItN5QRt6jGL/PQFXumLin90l7KiDZ1e7ajnYPAJOYQC7w+YRzOeJcyGK8oywVoVnJUIVCKq+AJFdht2qd2TonURxCTlWPWJCGUInncVEana//qxrCvLAOLofFyfsxsf1vZQ2kT0ByB57ncgGyj3DgEqqVifyccH074RK+nQYkP2CyoCIheM1k99PXnOQDshkSmdFLx38xS94b96O3f9+p/0JK36/HJlCQka2w5W0qLwgpH62ym++o8l5Jsywt+tfIpTGR8LpUSFP3AadS31ZD9gZU30DoR10vG9Z7kTf2XX6pmFNfIAGRnDalWB7xtvCB528LT56T5bEPl52Qsm4CluKQrRPKJ0jO+NdXCnZx7ifND/JvwZLgq10HsLbiyDzlg0IQOstX+UWy+mEoMJOwRCofS7bBDwEcCr5r3BR5w0XIaZqkAn7+ouSS1lQRxiylwuuqhWFbZgueYhWD++X0DaaQ8s+7ecl/vJufbm98KXgRUje+5L+dNVKMC5bqJv0LLk11KZ+aMjidbcn6J8F9Ze9WjXqj1+6aNau3rezVRsfeFHAnk9Y383fLVk33z0PrXw==</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>F9502197CB962573E0401F0A059909AB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:F9502197CB962573E0401F0A059909AB</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20140513_083547</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>F9502197CB972573E0401F0A059909AB</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5964f10a-b509-40e9-862f-fa1b94ce9895</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7aaed2f-7952-4584-a739-c774cb776a89</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f18fd18e-7fe3-432f-9d31-a8f2e7d96e8b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21b39f30-d3ec-4ca5-beac-ad66dbe0596c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00035_FUNC_UVTC_UserName_RequestorUserCLG_any_status_RequesteeChild_blocked_ResetPassword_Role_RET_CS_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc6JKEH7Pr6DYxy0EFLxQ0SojZstszBo1l5OXrXFoZBIYCDMg7q8/MxiMGpPjniqrrGl6ur++zNd9zlAU1p0+Y5ByElNl5HbV377frNuo0dbaPjI1y/YW2gKgreFFq42aZrMNvq0qI8YyGFHGEeVdtW6YlmbYmmnNDcNp2I7dqDVN+0lV7iFlwrRQqRmqUkQhZU7ptqtmKXVixAhzKIqAORw7s/742hGaDqowqb3zDcrSYdoLOE8cXcc1DzCEIa7hONLP9T2dc485M7KkiGcpvPn0WFd9u7tarWqrRi1Ol3rdMAzd6OhCx2Nk+U3tnVWXwRtRP96cB4jGlGAUkj9IghoDD2JP6YfLOCU8iD4xbeqmIU1rUGANmxb9purvDkp0J1raA5kypLEAmZWxKfiQAsWg3E1HXfXbaRXc3J2niDI/TiN2cP47SEBzCOMEPI1VkVXoTrd4JF29c8DOiOIwYySHG9kmCcLAlEkKPimuCRPN5zGlLL9SMPEjVZcB/puynOu7WAV0/Uh2XLIExv9PzXbrtbFyj8IMeo1B857oiyGEz7r1o/0a/MmSoeva8fCfbglhV3kDalvut/Nhs2576+0SdZf2o3m3sh5ow394bN8WT9+ndEAf2j9/5sbksa/nV1erwXqdIv+78fycDK8vp6lum2y4ep609Bd2F7p8MO4kfXzWeLkuHr3kJmjzK+N27d1c3b9Oxj67sq3b5Zqn8/ge+eOwzZ6C24e7KUb8gv4wyEN+PQ0mF3d6vh4XD7E9KQJ0dRYOZvOgBeOwk/eN1LiICqP7HtNuDPvCihJm2eIZMK+Osj1GrnIp6oX41/QiJcTT/FLVSSRHMQ6Uqz15S1KLkwkCIp4jirk5X3Zso95omC2r2Wg2LHdoWIZ5afSNVqdj1IetioM2KA4gDmLqE+lLsuymf74GiCOHAfUg1fI4wwEw9QuLLuJIGdGpeBwxZTCPBYub9T8vOGUvyCJGq/VsQn0dFcRoLlTlJua/6K+073NI96m7sUfdU8AkISD5XTY4Ex3OuMjFK8ozHpq1HNUoZGICpJKEnbrVtnVGoiQEiVSPYi8LoZYESZkZnW3+6xrCrJROh/Py4X0a1+G3KgVCxyNSgclYLkCUEY7MIKsK5POAm7sBV+b7mUfk+xL55CnBGyT7n97bRPbHtkdERL8Hs99mhXurfvL1jzf1L0Dph/nYOvJysuO2GqZiPgj26FXVfEW111qW51lZv5ZkxlSY1wVBmvoMcCbobT2PX4DqWxP6SdNli/rA81a+jy/jAZ1xxCES3aaUxxNWixkwuVqMxDMpTt1b9lyKvHEo+DHZIBQbiET85ZKCHSz1hHgi/lZx6r2X64itHT8iTrFPcEKX8iTnyPqTpsCxMEsE8cXprvFjBo453xduk7zFwkU3LTIOn39RJKN1VYRxnFE+ctVSsMuyJU6+TsB5V/pgpmTyt9FcsE9H8+P4eib4LkLqVpf8t7JGynbBoMoNoMTSVQuxaQrndLnD6m8APxB7vW+2XLd/2R609ond7WwTuBdJ74P4o2Qnp4fvofcv</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95022A17DDAF8C7E0401F0A079902D9</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95022A17DDAF8C7E0401F0A079902D9</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95023317463634DE0401F0A079902E7</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95023317463634DE0401F0A079902E7</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083552</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95023317464634DE0401F0A079902E7</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083555</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083555</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083555</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>F95023317463634DE0401F0A079902E7</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc6JKEH7Pr6DYxy0EFLxQ0SojZstszBo1l5OXrXFoZBIYCDMg7q8/MxiMGpPjniqrrGl6ur++zNd9zlAU1p0+Y5ByElNl5HbV377frNuo0dbaPjI1y/YW2gKgreFFq42aZrMNvq0qI8YyGFHGEeVdtW6YlmbYmmnNDcNp2I7dqDVN+0lV7iFlwrRQqRmqUkQhZU7ptqtmKXVixAhzKIqAORw7s/742hGaDqowqb3zDcrSYdoLOE8cXcc1DzCEIa7hONLP9T2dc485M7KkiGcpvPn0WFd9u7tarWqrRi1Ol3rdMAzd6OhCx2Nk+U3tnVWXwRtRP96cB4jGlGAUkj9IghoDD2JP6YfLOCU8iD4xbeqmIU1rUGANmxb9purvDkp0J1raA5kypLEAmZWxKfiQAsWg3E1HXfXbaRXc3J2niDI/TiN2cP47SEBzCOMEPI1VkVXoTrd4JF29c8DOiOIwYySHG9kmCcLAlEkKPimuCRPN5zGlLL9SMPEjVZcB/puynOu7WAV0/Uh2XLIExv9PzXbrtbFyj8IMeo1B857oiyGEz7r1o/0a/MmSoeva8fCfbglhV3kDalvut/Nhs2576+0SdZf2o3m3sh5ow394bN8WT9+ndEAf2j9/5sbksa/nV1erwXqdIv+78fycDK8vp6lum2y4ep609Bd2F7p8MO4kfXzWeLkuHr3kJmjzK+N27d1c3b9Oxj67sq3b5Zqn8/ge+eOwzZ6C24e7KUb8gv4wyEN+PQ0mF3d6vh4XD7E9KQJ0dRYOZvOgBeOwk/eN1LiICqP7HtNuDPvCihJm2eIZMK+Osj1GrnIp6oX41/QiJcTT/FLVSSRHMQ6Uqz15S1KLkwkCIp4jirk5X3Zso95omC2r2Wg2LHdoWIZ5afSNVqdj1IetioM2KA4gDmLqE+lLsuymf74GiCOHAfUg1fI4wwEw9QuLLuJIGdGpeBwxZTCPBYub9T8vOGUvyCJGq/VsQn0dFcRoLlTlJua/6K+073NI96m7sUfdU8AkISD5XTY4Ex3OuMjFK8ozHpq1HNUoZGICpJKEnbrVtnVGoiQEiVSPYi8LoZYESZkZnW3+6xrCrJROh/Py4X0a1+G3KgVCxyNSgclYLkCUEY7MIKsK5POAm7sBV+b7mUfk+xL55CnBGyT7n97bRPbHtkdERL8Hs99mhXurfvL1jzf1L0Dph/nYOvJysuO2GqZiPgj26FXVfEW111qW51lZv5ZkxlSY1wVBmvoMcCbobT2PX4DqWxP6SdNli/rA81a+jy/jAZ1xxCES3aaUxxNWixkwuVqMxDMpTt1b9lyKvHEo+DHZIBQbiET85ZKCHSz1hHgi/lZx6r2X64itHT8iTrFPcEKX8iTnyPqTpsCxMEsE8cXprvFjBo453xduk7zFwkU3LTIOn39RJKN1VYRxnFE+ctVSsMuyJU6+TsB5V/pgpmTyt9FcsE9H8+P4eib4LkLqVpf8t7JGynbBoMoNoMTSVQuxaQrndLnD6m8APxB7vW+2XLd/2R609ond7WwTuBdJ74P4o2Qnp4fvofcv</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F95022A17DDAF8C7E0401F0A079902D9</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZtU+o6EP5+fkWnfmRKUygv7QgzSOXcKuhRPHr0ixPSANE2KU0KxV9/k2IrIHo5d4YZJtvN7rO7T57klMMorLk9znEiCKOa73X0Z9CCgT1pNowpRtiwm+2JMWk5gdFqBbYN6hi3W5au+Zyn2KdcQCo6eg1YtgEahmXfAeDWG27DqYJa+0nX7nHCZWjpUgW6lkUh5W6etqOnCXUZ5IS7FEaYuwK5495o6EpPFxaY9O7pBmWeMOnOhYhd00TVQKILQ1RFLDJPzR2f04C7YzKjUKQJfs8Z8I7+vne1WlVX9SpLZmYNAGACx5Q+ASezE737o9iMA59O2Wbdh5RRgmBI3qACNcJizgKtF85YQsQ8+iK0ZVpAhTZwhgxk2fRENz8S5OiOjLQDMuHQ4HNoFcFu8RQnmCKs/b71O/rJcRPc7L1LIOVTlkR8b/13kDBd4pDFODB4UVmB7viIB9rVPcXI9SkKU06W+ErRJIYIc+1XgqckGxIuyRdwLR+/lnH5IwXLMPqbsZya21gldPNAdzwyw1z8n5ltz2sT5R6GKe5Wmrf9i2EW/lwncL7mmd2c8LuLVZg+gU4OYdt5A6oc9/t6n6wlt943Ta88z+J+/9zpt80mcbLKz+tLWbb/+rRorfn6bbayXsClzWAD+f3g1RxVIMZ84T00vP6f4eXoIrrhLxfDSu2l9+MiXiaPlSE7i9ctloDF6mr9e/p6P55f1kn29LB4uJ57N5Vaj77dRDd0GJw/nNFmun40ycvi4dHy2aQRD5zB4J4uzn80l0+V2T8DT/jjzB+1rxfxTeejpu0ado2FJIzTyQtGolgqevieNpDzguJ7eVEWEhjT3NWNlUZxganQu2qXkhY3lQJEAlcOc7MeOA0LNOt94Dh10Lecc2ADawB6oOU4jXrDKjRog2IPYp/RKVG5lMpu+PM9QBS5HNMAJ8aSpWiOuf5NRA8KqPn0Vh4ORjm+Y1LFW3z55hBnGdfpq0XrvGbZ/M1qRG+6dsXENb1OelOBk13pru9I9y1GJCZY6bsiOJcM50L2YgGXqQit6hJWKU7lDZAoEXZrdrthchLFIVZIzYgFaYir8TzOO2PyzX/NgIjn1tvzu/zgfVnX/reiBdInIMqBq1rOsBwjPnAH2UUhXxfc3C64CN9LA6LOl+ynSAjaINn99EETxY+SI7Ki5/74ueRC6X709s87zW9Amfv9KBMFS7KVtrhM5f0g1aNbTHMBq4tqulym+fxaShkTGd6UAmmZY4xSKW/rO/aKqVmGMI+6XUrUe5lL+y6+VMzpWECBI8k2LV8e8bQYY66eFr48Jtmx75adlLJvAmfikK0fyheIQvztIwW5SPlJ8y/5t2JJ8DGuA7G28sg65XtCEDpTK3WPrL8gBWIyLJHCx5Lt4IcCHEq+ayybXGIRkk2TVOCvv2hK0To6RIilVPienhu2VTbHKdYxdj+cPoXJlfz9as74l1fzn9FwLPUugnrpS/7b2SA5XRDW1Qsgx9LRM/nSlMnpbEvV3wHuCTuo1XpWy/N6g3a/tS3soOY5ZQN3Kul+Mn+2bPV0/zx0/wU=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F951063C09930C19E0401F0A07995351</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F951063C09930C19E0401F0A07995351</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083555</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F951063C09940C19E0401F0A07995351</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5964f10a-b509-40e9-862f-fa1b94ce9895</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7aaed2f-7952-4584-a739-c774cb776a89</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ee42b0c1-246b-484c-966a-a332f463828c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e651ce30-1ac9-4bed-8fd6-ac51ee8731b7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00036_FUNC_UVTC_UserName_RequestorUserNonCLG_any_status_RequesteeChild_blocked_ResetPassword_Role_RET_CS_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for NonCLG"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - NonCLG"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSx1WIAwmQqCCxpWzDgZbl1m5fKuMYcJvYEDuB9tcfOzQp0Mthj1SJejKe+ebib+aCwygsey3OcSwIo5rfbuiPMJg5LqjVDTdwq4YNsPxvNq8beOZYs8q8XHdtqGs+5wn2KReQioZeBpZtAMew7DEAXqXqAatUdd0HXZvimEvTUqUEdG0bhZR7mduGnsTUY5AT7lEYYe4J5I1a/Z4nNT2YY9KbFzuUmcO4uRRi5ZkmKgUY4TBEJcQi88I80LkIuDciCwpFEuM3nwFv6G93N5tNaVMpsXhhlgEAJnBNqRNwsjjXm2f5ZRz4dM5250tIGSUIhuQVKlB9LJYs0FrhgsVELKMvTFumBZRpA2+RgSybnuvmu4MM3YmWDkDGHBp8Ca3c2BDPcYwpwtpk6Df089MquLs7jiHlcxZH/Oj8d5AwTXHIVjgweB5Zju50i5+kq3mBkedTFCacpPhGtckKIsy1QYznZNsjXDZfwLWs/NqWyz+SdxlGf1OWC3Mfq4RufpKdNllgLv5PzfbrtbMyhWGCm0FAy7V09lQZ3EyJOYPcddj17QDcpLyRQdhX3oEqyv12Pm7WorfeLo1GAaJXPP7ttKI1ncb02Z+2LX/cnvXIJPrx2u63ffqyWPzzzNpXvaWZvkbE+pW83t/10R/zef3b9J87QzSpDjbwrPu6Tgb9h249nqDurwRXBncPYtq+m96PgOiN7c3Vtj7rhp2nUUIEa9/by1+9FeiQiZ0+Xb9UwHU0s1vD+uRpUL8+6/5YdhcUsZfL9M9zat8lk37jPab9GA6FOSWMktkTRiI/qvbw21pH1guK7+lFSUhgzDNVb6U4igtMhd5UtxS1eIkkIBJ4spi7c8d1LFBrgU7Lca1a1boCNrA6oAVqrus4divnoB2KI4iXjM6J8qVYdtc/3wNEkccxDXBspCxBS8z1byy2oYCaT4fycTDK8ZhJFt9EsVVzVtWntOZYVeJE6boi1oAkunbDxC29jVtzgeND6q4cUPcQI7IiWPG7anAuO5wLmYs1TBMRWqUUlihO5ASIFQl7ZbvumJxEqxArpGbEgiTEpdVylWXG5LvfsgERz6TDq3H28L6M6/hbngKpExClwFUsP7EsI/4wgxzPyQP5OuDqfsC5+VYSEPW+ZD5FTNAOyeGn9zZR/VH0iIzo8XL0aOW4C/WTr3+8aX4DyjzOR+EoSMme23yYyvkg2aOZV3MNS+tSkqZJVr+aYsZYmjclQVrmCKNE0tvLmD1jahYmzJOmS4H6yHMhP8SXiCUdCShwJLtNy44nrBYjzNVq4ctnsj11bzlwKfMm8FZ8JrsM5QaiEH+7pCAPKT0pHsifDYuD93J9YmvPj4xT7hOC0IU6qTny8kVTICbNEkl8LN43/pmBz5wfCoskF1iE7KZZIvDXXzTFaA0dIsQSKvy2ngn2WTbDKV5W2HtX+mAmY/K30bzlX47m+35vJPkugnqhS/5b2SBZuyCsqw0gw9LQt3LTlM7pYo/V3wAeETsoVxy3YrWurJ92uSB2x3WBW3OKBB5E0vwg/ijZy+nxe2j+Cw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950235931AE1B42E0401F0A05990975</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950235931AE1B42E0401F0A05990975</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95107A0FA591761E0401F0A0799554A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95107A0FA591761E0401F0A0799554A</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_08360</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95107A0FA5A1761E0401F0A0799554A</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_08366</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_08366</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_08366</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSx1WIAwmQqCCxpWzDgZbl1m5fKuMYcJvYEDuB9tcfOzQp0Mthj1SJejKe+ebib+aCwygsey3OcSwIo5rfbuiPMJg5LqjVDTdwq4YNsPxvNq8beOZYs8q8XHdtqGs+5wn2KReQioZeBpZtAMew7DEAXqXqAatUdd0HXZvimEvTUqUEdG0bhZR7mduGnsTUY5AT7lEYYe4J5I1a/Z4nNT2YY9KbFzuUmcO4uRRi5ZkmKgUY4TBEJcQi88I80LkIuDciCwpFEuM3nwFv6G93N5tNaVMpsXhhlgEAJnBNqRNwsjjXm2f5ZRz4dM5250tIGSUIhuQVKlB9LJYs0FrhgsVELKMvTFumBZRpA2+RgSybnuvmu4MM3YmWDkDGHBp8Ca3c2BDPcYwpwtpk6Df089MquLs7jiHlcxZH/Oj8d5AwTXHIVjgweB5Zju50i5+kq3mBkedTFCacpPhGtckKIsy1QYznZNsjXDZfwLWs/NqWyz+SdxlGf1OWC3Mfq4RufpKdNllgLv5PzfbrtbMyhWGCm0FAy7V09lQZ3EyJOYPcddj17QDcpLyRQdhX3oEqyv12Pm7WorfeLo1GAaJXPP7ttKI1ncb02Z+2LX/cnvXIJPrx2u63ffqyWPzzzNpXvaWZvkbE+pW83t/10R/zef3b9J87QzSpDjbwrPu6Tgb9h249nqDurwRXBncPYtq+m96PgOiN7c3Vtj7rhp2nUUIEa9/by1+9FeiQiZ0+Xb9UwHU0s1vD+uRpUL8+6/5YdhcUsZfL9M9zat8lk37jPab9GA6FOSWMktkTRiI/qvbw21pH1guK7+lFSUhgzDNVb6U4igtMhd5UtxS1eIkkIBJ4spi7c8d1LFBrgU7Lca1a1boCNrA6oAVqrus4divnoB2KI4iXjM6J8qVYdtc/3wNEkccxDXBspCxBS8z1byy2oYCaT4fycTDK8ZhJFt9EsVVzVtWntOZYVeJE6boi1oAkunbDxC29jVtzgeND6q4cUPcQI7IiWPG7anAuO5wLmYs1TBMRWqUUlihO5ASIFQl7ZbvumJxEqxArpGbEgiTEpdVylWXG5LvfsgERz6TDq3H28L6M6/hbngKpExClwFUsP7EsI/4wgxzPyQP5OuDqfsC5+VYSEPW+ZD5FTNAOyeGn9zZR/VH0iIzo8XL0aOW4C/WTr3+8aX4DyjzOR+EoSMme23yYyvkg2aOZV3MNS+tSkqZJVr+aYsZYmjclQVrmCKNE0tvLmD1jahYmzJOmS4H6yHMhP8SXiCUdCShwJLtNy44nrBYjzNVq4ctnsj11bzlwKfMm8FZ8JrsM5QaiEH+7pCAPKT0pHsifDYuD93J9YmvPj4xT7hOC0IU6qTny8kVTICbNEkl8LN43/pmBz5wfCoskF1iE7KZZIvDXXzTFaA0dIsQSKvy2ngn2WTbDKV5W2HtX+mAmY/K30bzlX47m+35vJPkugnqhS/5b2SBZuyCsqw0gw9LQt3LTlM7pYo/V3wAeETsoVxy3YrWurJ92uSB2x3WBW3OKBB5E0vwg/ijZy+nxe2j+Cw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950235931AE1B42E0401F0A05990975</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH1chTgi3qCBRaLdo6eVwabt9WRl7EtwmNsQO0P7644QmBXo57JGQkCfjmW9mPn/2icRx5PpdKSFRTHBj0G+bf5zazMMwcy3secjyvCq1ZgFuWrRWpS6pBzNaB9MYSJnCgEuFuWqbLnI8C9Usx5sg5FfrPqpVUKP5YBq3kEgdWrtUkGls4ohLP0/bNtOE+wJLJn2OY5C+Iv64ezn0taePC0xm52SLMk+YdOZKLXzbJhUKBKKIVIiI7RN7z+eESn/MQo5VmsBrTirb5uve9XpdWVcrIgltFyFko5atfahk4Xez863YDHTAA7Fd9zAXnBEcsRecgboENRfU6EahSJiax5+EdmwHZaEt2BCLOB7/btpvCXJ0R0baA5lIbMk5dopgIwggAU7AmI4GbfP7cRPc7p0kmMtAJLE8WP8dJOAriMQCqCWLygp0x0f8oF2dEyD+gJMolWwFVxlNFpiANG4SCNhmyKQmH5VGPn5jI/WPFSwD8jdjObF3sWro9gfd6bMQpPo/M9ud1zbKLY5S6Cz54Cf6Vb94XvZ/RL9n570b0b29/f18H4h2DmHXeQuqHPfr+pCsJbdeN4X3E/t+GjdpTBrpxcXvwA5XD87ZtF+9tfEwvNtM0MLr9p7qwaA3dP85RWkwHU6H3s8buGle3XkXdDqhd9dnp+Ly4psdOE/N5PYxdKcRxgI5V73nIH16qd1c//jZn/9quc6cjNa0l3Sv4zp7eKHrGZk41R5z63U3flELt/noJvHLksG3yxdoPFyg6vquVj2ly9HDbN1+q2m3hn1jIQnjdPYIRBXLjB6DvnGu54XV1/KSWRi1gtzVX2QaJRVwZXayXZm0+KkWIEZ9Pczt+rxVQ67brzdRA52fn/bOkIecc9RFjVYLuWdOoUFbFAcQe4IHLMuVqeyWP18DJLEvgVNIrJVIyRyk+UXEPlbYGPCRPhyCS5gIreJBQmePLgmaEVo5LRHytec+ufAUmsaVUNf8OukGCpJ96a7uSfcICFswyPQ9I7jUDJdK92KJV6mKnMoKVzik+gZIMhH2Xa9ZsyWLFxFkSO1Y0DSCymK+yDtjy+2/ViUic+vobJIfvE/rOvxWtED7UJY5yKyWU9BjhHd3UM2vFYV8XnB9t+AifDelLDtfup8qYWSLZP/TG00yfpQc0RX96Y3/lFwo3Y/e/n6n/QUo+7AfZSK6Yjtpi8tU3w9aPTrFNJe4sqykq1Waz6+RKWOiw9taIB17DCTV8vY8EU/A7TKEfdTtUqI+yFza9/Glas7HCiuINduMfHnE02IMMntaDPQx2Rz7btlLqfumYKM+svUi/QLJEH/5SCE+yfy0+Ub/rUVC38b1QaydPLpO/Z5QjIfZKrtHnj8hBRE6LNPCJ5Ld4B8F+Cj5vrFscolFaTbNUgWffzEyRWubmBCRcjXom7lhV2VznOp5Af6b07swuZK/Xs0b+enVfH85HGu9i7FZ+rL/drZYTheiH6baP8fSNjf6pamT83BH1V8BvhP2aq1VdbpnzqnnlsJe08LeatTKBu5V0nlnfm/Z6enheej8Cw==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F95022D68070FFBCE0401F0A079902E1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F95022D68070FFBCE0401F0A079902E1</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_08363</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F95022D68071FFBCE0401F0A079902E1</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>F95107A0FA591761E0401F0A0799554A</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4jxljG0wMnsAMl9DSkqQB2vTkpSPkBYvYkrFkcPj1RzKxA4Tk0DOTDKP1avfbi77dK46isOp1OIdEEEa1Yb+l/6n5zblft2wDYYQNZzarGg2YNQwMUKvN5X9jBro25DyFIeUCUdHSq5btGFbdsJ2pZXm1S8+2Ko7lPuraL0i4NC1VKpauZVFIuZe7belpQj2GOOEeRRFwT2Bv0rkZeVLTQwUmvX21Q5k7TNqBELFnmrjiA4YwxBXMIvPKPNC58rk3IQuKRJrAi0+ft/SXu5vNprKpVViyMKuWZZlW05Q6PieLz3r7U3EZ/CGds925hyijBKOQbJECdQMiYL7WCRcsISKI3jFtm7alTBuQYQPbDv2sm68OcnRnWjoAmXBk8ADZhbExzCEBikH7OR629M/nVXB3d5ogyucsifjR+e8gAV1DyGLwDV5EVqA73+KJdLWvAHtDisOUkzXcqjaJEQau/UhgTrIR4bL5fK7l5dcyLv9I0WWA/6YsV+Y+VgndPJGdPlkAF/+nZvv12ln5hcIU2njgDhbfl8swTPqr5HkFg9W28d1cLbeslUPYV96BKsv9cj5u1rK3Xi5NWX0G5pdt7DxlPoyC+XD2eH997fi/F7fOzO1euk8UfyHZXb/59XnQm/Uu7oJO4N5HU7atoQSCBtr+Q/sX49B5+PQwytyLh6eAdf3p49LF30dsfvMwuBhtqz2rPgpx9nX7MLmPR+M5mqX8ttugFw+Trxddd9Xd1L+w9PFX83d/8UMMe6tP33ro51hc3j+FqLf8icYzWbLXmPZjOBQWlDBJZ0vAojiq9hj2tYGsFxIf04uSEN+Y56perDiKC6BCb6tbilq8VBIQ8T1ZzN150Kxb1VrNdp2mfVlz+teWY9kDq2O5zaZVvXYLDtqhOILYY3ROlC/Fsrv++RggjjwO1IfEWLMUB8D1Dyz2kUDakI7l42CUw5RJFreDtBkt4hiWKKvaT43V0m9swo3lrHXtlok7epd05gKSQ+6uHXD3GDCJCSiCVx3OZYtzIZOxQutUhHZljSoUUjkCEsXCXtVp1E1OojgEBdWMmJ+GUImDOE+NyXe/VUlLPJeOr6f5y3s3sONvRQ6kjk+UAlexdEHWEU4MIasI5P2AL/cDLsx3Up+oByYTKhKCd0gOP732iWqQsklkRH96kz92gbtUP/v625vmB6DM43yUjvw12XNbTFM5ICR9tItqrlBlVUnX6zSvn6uoMZHmTcmQtjkBnEp+e56yJ6BmacI8a7yUqI88l/JDfKkI6EQgAZHsNi0/nrFbTICr3WIo30l27uJy4FLmTUAmTsl6oVxBFOIPtxTsYaUnxT/kz4Yl/mu5Ttja8yPjlAuFIHShTmqQPL/TFJhJs0QyH0v2jZ8ycMr5obBMcolFyG6apQLe/6IpSmvpCGOWUjHs67lgn2ZznOI5Bu9V6Y2ZnMpfZnPG353Nv29GE0l4EdJLXfLfygbJ2wXLzVTq51haeiZXTemcLvZo/QXgW2avN2t259ruOtWS2euS2ZtuvUzgQSTtN+K3kr2cHr+H9r8=</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>F95023317491634DE0401F0A079902E7</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:F95023317491634DE0401F0A079902E7</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20140513_08366</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>F95023317492634DE0401F0A079902E7</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6511c570-3f9d-4e26-b630-d957df50e289</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d5e2a0c1-d1c2-4d9b-b3af-86cfccf25581</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00037_FUNC_UVTC_UserName_RequestorUserChild_any_status_RequesteeOtherUser_blocked_ResetPassword_Role_RET_CS_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for CHILD BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","CHILD");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","false");


tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - CHILD BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("Child_User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("Child_User_Create_API").getTestCaseByName("Child_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid3"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+o6EP5+fkWnfjxTmpYWaEeYqSBHPIheQUW/ODFdaLxtik0K6K8/SbEIiF7OnWGGyXaz++xLnt1jjpPY9gPOIRM0ZVqv09QfPSesktDxDIImyHAaQAyvSiaGB1D1AIVYSnStx3kOPcYFZqKp28hyDOQaljNCyK/WfKtaQdX6g67dQsalaalSQbq2TGLG/cJtU88z5qeYU+4znAD3BfGHwUXfl5o+LjHpreMVysJh1oqEmPmmSSohEIhjUiFpYh6bWzrHIfeHdMqwyDN49xnypv5+d7FYVBbVSppNTRshZCLPlDohp9MjvfWjvAxhj03S1bmNWcoowTF9wwrUBYgoDbUgnqYZFVHyhWnLtJAybcCSGMRy2JFufjgo0B1oaQtkxrHBI2yVxq5hAhkwAtrNda+pHx1WwdXdUYYZn6RZwnfOfwcJ2BzidAahwcvISnSHW9yTrtYxEL/HSJxzOoeBapMZJsC1qwwmdNmnXDZfyLWi/NqSyx8tuwzI35Tl2NzEKqGbe7LToVPg4v/UbLNeKyu3OM6h9TB2H+b2sFYb3wzcc3JSJVdB7QmufmOnWUDYVF6BWpf7/bzbrOveer9091QdvV3cd+vp+fkZe44vPXYf3DhAG7/7hDhz+4F3guj19heNcuYtBiekvxg3Hvqn1KpN7uNfbl5rBI154/mUjH/EN28kJt6d27kl2KU/bwIv6V/OBhk6TV4GXfttaiOH/WwvrPuzYNC/TG87sOTdt/PEvnLEGLsDd8EGs9HZwz/mDzpGdX55R00SLe9mcdy7nzY/YtqMYVtYUsIwf3oGIsqjao9eR+vKemHxPb0oCQ2NSaHqzxRHcQFM6C11S1GLn0sCoqEvi7k6dz3XQp7dqXXaJ0HNaZwiB1ldFCDX86peHZUctEKxA7GdsglVvhTLrvrne4Ak8TmwEDJjnuYkAq5/Y7GDBdZ67Fo+jpRxGKWSxa0oD58ikgsn9lKrilH9NWngNGrUdG2Qikt2mQUTAdk2d1e3uPsaCJ1RUASvOpzLFudCJuMFz3MRW5U5rjDI5QjIFAv7ttNwTU6TWQwKqpmkYR5DZRbNitSYfPVvG5jwQnp9Oipe3peB7X4rcyB1QqoUuIrlBGQdYc8QQmUgXwdc2wy4NB/kIVUPTCZUZJSskGx/+ugT1SDrJpERPbaHj1aJe61+8PXPN81vQJm7+Vg7Cud0w205TeWAkPTRKqv5gisvlXw+z4v61RU1ZtK8KRnSModAcslvr6P0X2Dm2oR50HhZo97xvJZv48tFxIYCC0hkt2nF8YDdYghc7RY9+U6Why4uWy5l3gQsxT5ZO5YriEL87ZZCfKL0pPhK/i3SLPwo1x5bG35knHKhEJRN1UkNktcvmoKk0iyVzJdmm8b3GdjnfFu4TvIai5Dd9JQL+PqLpiitqWNC0pyJXkcvBJs0W+AUrzPwP5Q+mSmo/H02L/mXs3l80R9Kwkuwvtal/61s0KJdCOhqBSiwNPWlXDWlczbdoPV3gDvMjmzLDhzX6bqntfYmsyPPO1kncCuS1ifxZ8lGTnffQ+sP</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950212A454F5E6CE0401F0A0599099B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950212A454F5E6CE0401F0A0599099B</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F951092D6DCBA648E0401F0A05993970</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F951092D6DCBA648E0401F0A05993970</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083611</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951092D6DCCA648E0401F0A05993970</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083618</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083618</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083618</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>F951092D6DCBA648E0401F0A05993970</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+o6EP5+fkWnfjxTmpYWaEeYqSBHPIheQUW/ODFdaLxtik0K6K8/SbEIiF7OnWGGyXaz++xLnt1jjpPY9gPOIRM0ZVqv09QfPSesktDxDIImyHAaQAyvSiaGB1D1AIVYSnStx3kOPcYFZqKp28hyDOQaljNCyK/WfKtaQdX6g67dQsalaalSQbq2TGLG/cJtU88z5qeYU+4znAD3BfGHwUXfl5o+LjHpreMVysJh1oqEmPmmSSohEIhjUiFpYh6bWzrHIfeHdMqwyDN49xnypv5+d7FYVBbVSppNTRshZCLPlDohp9MjvfWjvAxhj03S1bmNWcoowTF9wwrUBYgoDbUgnqYZFVHyhWnLtJAybcCSGMRy2JFufjgo0B1oaQtkxrHBI2yVxq5hAhkwAtrNda+pHx1WwdXdUYYZn6RZwnfOfwcJ2BzidAahwcvISnSHW9yTrtYxEL/HSJxzOoeBapMZJsC1qwwmdNmnXDZfyLWi/NqSyx8tuwzI35Tl2NzEKqGbe7LToVPg4v/UbLNeKyu3OM6h9TB2H+b2sFYb3wzcc3JSJVdB7QmufmOnWUDYVF6BWpf7/bzbrOveer9091QdvV3cd+vp+fkZe44vPXYf3DhAG7/7hDhz+4F3guj19heNcuYtBiekvxg3Hvqn1KpN7uNfbl5rBI154/mUjH/EN28kJt6d27kl2KU/bwIv6V/OBhk6TV4GXfttaiOH/WwvrPuzYNC/TG87sOTdt/PEvnLEGLsDd8EGs9HZwz/mDzpGdX55R00SLe9mcdy7nzY/YtqMYVtYUsIwf3oGIsqjao9eR+vKemHxPb0oCQ2NSaHqzxRHcQFM6C11S1GLn0sCoqEvi7k6dz3XQp7dqXXaJ0HNaZwiB1ldFCDX86peHZUctEKxA7GdsglVvhTLrvrne4Ak8TmwEDJjnuYkAq5/Y7GDBdZ67Fo+jpRxGKWSxa0oD58ikgsn9lKrilH9NWngNGrUdG2Qikt2mQUTAdk2d1e3uPsaCJ1RUASvOpzLFudCJuMFz3MRW5U5rjDI5QjIFAv7ttNwTU6TWQwKqpmkYR5DZRbNitSYfPVvG5jwQnp9Oipe3peB7X4rcyB1QqoUuIrlBGQdYc8QQmUgXwdc2wy4NB/kIVUPTCZUZJSskGx/+ugT1SDrJpERPbaHj1aJe61+8PXPN81vQJm7+Vg7Cud0w205TeWAkPTRKqv5gisvlXw+z4v61RU1ZtK8KRnSModAcslvr6P0X2Dm2oR50HhZo97xvJZv48tFxIYCC0hkt2nF8YDdYghc7RY9+U6Why4uWy5l3gQsxT5ZO5YriEL87ZZCfKL0pPhK/i3SLPwo1x5bG35knHKhEJRN1UkNktcvmoKk0iyVzJdmm8b3GdjnfFu4TvIai5Dd9JQL+PqLpiitqWNC0pyJXkcvBJs0W+AUrzPwP5Q+mSmo/H02L/mXs3l80R9Kwkuwvtal/61s0KJdCOhqBSiwNPWlXDWlczbdoPV3gDvMjmzLDhzX6bqntfYmsyPPO1kncCuS1ifxZ8lGTnffQ+sP</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950212A454F5E6CE0401F0A0599099B</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdT+pMEL73VzT1uvQToY2QIKiHE1AEJeqNWbZTWCzb0t3Scn792S0WAdGX8yYkZKezM8987DNzydAitLwWY5BwElGl22mobxPT9OsOcjTHqYLm+EFNq9fqE61ed9wqMl2ETVtVuoyl0KWMI8obqmWYjmZUNdN5NAzPvvDMWsW1jFdVGUPChGmhUjFUJV+ElHmF24aaJtSLECPMo2gBzOPYG7X6PU9oeqjEpDYvNygLh0lzxnns6Tqu+IAhDHEFRwv9Ut/TufSZNyJTiniawIdPnzXUj7tZllUyuxIlU90yDEM3XF3o+IxMz9XmWXkZ/C4Nos25jWhECUYh+YMkqD7wWeQrrXAaJYTPFt+YNnXTkKY1yLGGTYeeq/qngwLdiZb2QCYMaWyGzNLYEAJIgGJQnobdhnp+WgU3dx8TRFkQJQt2cP43SEBXEEYx+BorIyvRnW7xSLqal4C9LsVhysgK7mSbxAgDUwYJBCTvESaaz2dKUX4lZ+JHyi4D/C9ludR3sQro+pHsdMgUGP8/Ndut18bKGIUpNJf3z3fcsFt3dmx3h3P7MRsPiDkfrPrdRgFhV3kDalvuj/Nhs2576+MShPrAfLifzg27TetR7fVGr7bbcce6S+zhLO6vesw0yBXj8xzGt8HzNB7+sgf5y9qiuL0MJ9koQK/D4ctqbhlnN50nO5sl2R3MX1rrMLgPrOdbv1V/yK+DyXoWXf+5Cm6fXvG4/Q6Dq/f1b5+4bl2f9XH2++GlfmHhXi8fOuxhbP86q1svThv0Yd43F8vxL2u0zhqfMe3GsC8sKWGUTuaAeXmU7dHtKDeiXoj/TC9SQnwtKFS9WHIU40C52pS3JLV4qSAg4nuimJvzjVs1DdfqXHSuzdaFU782HMO8MVpG1XVtt2aUHLRBcQCxHdGASF+SZTf98zNAvPAYUB8SbRWleAZM/cFiB3GkdOlQPI6IMniMBIubS8t10BSt1zhZR2wyxRnY2boWqspdxO/pfdIKOCT71G3vUfcQMIkJSH6XDc5EhzMucrFEq5SHZmWFKhRSMQESScKe5dSrOiOLOASJVF9EfhpCJZ7FRWZ0tvm3NIRZIR1ePxYP79u4Dr+VKRA6PpEKTMZyBaKMcGQGGWUg3wd8sRtwab6V+kS+L5FPnhC8QbL/6bNNZH9se0RE9NYevZkl7q36yde/3tR/AKUf5mPryF+RHbflMBXzQbBHs6zmElWWlXS1Sov61SQzJsK8LgjS1EeAU0Fv68foHai+NaGfNF22qA88b+X7+FI+oyOOOCxEtynF8YTVYgRMrhZd8UzyU/eWPZcibxxyfkzWDsUGIhH/uKRgD0s9IR6IvyxK/M9yHbG140fEKfYJTuhUnuQcWX/TFDgSZokgvijZNX7MwDHn+8JtkrdYuOimScrh+y+KZLSGijCOUsq7HbUQ7LJsgZOvY/A+lb6YKZj8YzTn7NvR/NzvjQTfLZC61SX/rayRol0wqHIDKLA01FxsmsI5ne6w+gfAA2I3LNNqOVXnpnp90d4ldsN1r7YJ3Iuk+UX8VbKT08P30PwL</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F951092D6DE1A648E0401F0A05993970</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F951092D6DE1A648E0401F0A05993970</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083614</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F951092D6DE2A648E0401F0A05993970</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH69CEkgKRAUpBdpNl5ZePtpeXlauMxBvEzvEDoX++muHhgKlveyVkJAn45kzM8fHPucoiauezzlkgjCqBd2W/stxkWM7LhiAkWM4GNlG86zeMFzbqblOo46c0NK1gPMcAsoFoqKlVy3bMSzXsJ2xZXm1M69qVao1a6pr95BxGVq6VOSuVRJT7hVpW3qeUY8hTrhHUQLcE9gb+Td9T3p6qMSkt883KIuEWTsSIvVME1dCwBDHuIJZYp6bez7nIfdGZE6RyDN4yxnylv629+XlpfJSq7BsblYtyzKtpil9Qk7m3/X2t3IzhAGdsc26gyijBKOYvCIF6gZExELNj+csIyJKPgltm7alQhuwwga2HfpdN98TFOhOjLQHMuPI4BGyy2BDmEEGFIM2GQYt/ftpE9zsHWeI8hnLEn6w/jNIQJcQsxRCg5eVlehOj3ikXe1zwF5AcZxzsoRbRZMUYeDaXQYzsuoTLskXcq0Yv7bi8kdKlgH+k7Gcm7tYJXTzSHe6ZA5c/J+Z7c5rE+UexTm0p/bzaB68cv9q4i/SuztM/efGw3xa+zFvFRB2nTegtuN+Wx+Sdcutt02oa2ajKLl3ZqtBz/35uEBuZ3hhzYJJ0rmYrm7MbOHb/uR1El6hxmA5njYnUbcPF9EaI+7k9R9XVj+3SS+6ull+Gz1O2cMkWo7BmfY4u766HsDwd3w9zGoNHP8jaq+jp+nF48tZ8mBfPZO/b3uX66dHh/01hHrdXsHgQQTsrtno3rvpt8EDzh7WIPpd9Mq70eBn6rTea9qtYd9YSsIof/oNWJRLRY+gq13KeSHxtbwoCwmNWeHqpUqjuAAq9LbapaTFy6UAkdCTw9ysL5uubdXr1WbPtS5rtW7Pciz70vItt9msWf5FqUEbFAcQO4zOiMqlVHbDn68B4sTjQEPIjCXLcQRc/yJiFwmkBXQoDwejHMZMqni6bM7q6zpl7Ddb5Lg+S+Ka5Lqja7dMDOgg82cCsn3lru0p9xAwSQkoeVf85pLgXMhWLNAyF7FdWaIKhVxeAJnSYK/qNFyTkySNQQE1ExbmMVTSKC0aY/LNf9VAmBfWYW9cnLtPyzr8VnZA+oREOXBVywXIKcKRK8guC/m84LPdgsvwfh4SdbxkO0VG8AbJ/qd3lih6bCkiK/rVGf2yS9xb95O3f9xpfgHKPOzHNlG4JDtpy7tUXg9SPNrlNBeosqjky2VezK+uhDGT4U2pj7Y5ApxLdVuP2TNQcxvCPOly2aI+yLy17+PLRURHAglIJNu0YnnCy2IEXL0sAnlKVqc+W/ZSyr4JWIljtk4sHyAK8ZdvFOxh5SfNd/LvhWXh+7iOxNrJI+uUzwlB6Fyt1DWy/oQUmMmwROoey3aDHwtwLPm+cdvkLRYh2fSUC/j8i6YEraUjjFlORdDVC8OuyBY4xToF793pQ5hCyN9u5hX/9GZ+vOmPpNwlSN/6kv92NkhBFwy6egAUWFr6Sj40ZXI63xH1N4AHum5V7arvuM6l2zvr7Oq61WxudX2/kvYH80fLTk8Pz0P7Xw==</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>F95107729E50F33DE0401F0A059930AB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:F95107729E50F33DE0401F0A059930AB</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20140513_083618</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>F95107729E51F33DE0401F0A059930AB</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5964f10a-b509-40e9-862f-fa1b94ce9895</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7aaed2f-7952-4584-a739-c774cb776a89</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f18fd18e-7fe3-432f-9d31-a8f2e7d96e8b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21b39f30-d3ec-4ca5-beac-ad66dbe0596c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00038_FUNC_UVTC_UserName_RequestorUser_any_status_RequesteeUser_any_and_active_ResetPassword_Role_RET_CS_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0TpYxXiJNwSFaS0QMs+BbqBdtO+VMYx4JLYEDtA+/XHDg23Qg/7SEjIk/HMmpnlZV9zGIW253OOY0EY1Zq1iv4GXAwgQo5hITQ08u6oYJSLzsgAsGjZIF92y46la03OE9ykXEAqKroNrLwBCoaV7wPgOUXPdnJuwX7VtWcccxlauuSArq2ikHIvTVvRk5h6DHLCPQojzD2BvJ7fevCkpwczTHr1eo0yTRhXJ0LMPNNEuQAjHIYoh1hkXpt7PtcB93pkTKFIYvyVM+AV/WvvcrnMLZ0ci8emDQAwgWtKn4CT8aVevcg246BJR2y9voWUUYJgSD6hAtXCYsICzQ/HLCZiEp0IbZkWUKENvEIGsvL0Uje3CVJ0Z0baAxlzaPAJtLJgXTzCMaYIa0/dZkW/PG+C6739GFI+YnHED9Z/BwnTBQ7ZDAcGzyrL0J0f8Ui7qtcYeU2KwoSTBW4rmswgwlx7jPGIrB4Il+QLuJaOX1tx+SMZyzD6m7Fcm7tYJXTzSHdqZIy5+D8z253XOsozDBNcdbpxvtkzrcfRkNSb6O5eFK/adyJyp/lKCmHXeQ1qM+6v9SFZN9z62nTnX1nxsjF0ye+o25jc373XanDil17y/fu718+Q96cBg/T5FRZ/+f3Ca+O21B2xRe+1O/h0X4IWc+7by+QFF5jbuZgXX+otaI/bk9B9qjXeV1eDqw/yT8nqdTofA1jvBHCZ77dXhZvC1J75j6uA9pfI9jtt8HvQFtN35/lmOCLTx9LV8OJPZzYQgz/w8xFOSqXiy8NTq7KtabeGfWMmCb1k+I6RyJaKHs2a1pDzguJneVEWEhij1NWbKY3iAlOhV9UuJS1eIgWIBJ4c5nrdcAvAtq2G49fqDXmK6iAPrAbwQcl1gV2zMg1aoziAeMvoiKhcSmXX/PkZIIo8jmmAY2PBEjTBXP8hYg0KqDVpVx4ORjnuM6nillguIjsultj7tGzBIoTz8RziAHzqWpuJDu3E/kjgeF+7nT3t7mJEZgQrgVcM55LiXMhmzOEiEaGVW8AcxYm8AmKlwp6dLxdMTqJZiBVUM2JBEuLcbDJLW2Py9b9tQMRTa7feT0/eycIOv2U9kD4BUQ5c1XKD5RzxkUvIygo5XXBxt+AsvJ8ERB0w2VARE7RGsv9pyxNFkA1JZEVvt723DRk27mdv/77T/AGUediPTaJgQXbSZrepvCCkfFSzac5hbp5LFosknV9JSWMsw5tSIS2zh1Ei9e2jz6aYmpsQ5lnXywb1QeaNfR9fIia0J6DAkWSbli7PeFv0MFdvi6Y8J6tzHy57KWXfBF6JY7bbUD5BFOIfXynIQ8pPmh/l35LFwXZcR2Lt5JF1ygeFIHSsVuoi+ThBCsRkWCKVj8W7wY8FOJZ837hp8gaLkGwaJgKf/qIpSavosrUsoaJZ01PDrsymOMXHDHtbp29hUin/uptX/OTdPGg99KTgRVDf+JL/djZISheEdfUESLFU9JV8asrkdLwj618AD5TdAqWyU771i8Byt8pecF0H+Fsu71VS/Wb+btnp6eF5qP4L</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95107838CA60194E0401F0A059930A1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95107838CA60194E0401F0A059930A1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950221F3ADEF204E0401F0A079902D1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950221F3ADEF204E0401F0A079902D1</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083622</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950221F3ADFF204E0401F0A079902D1</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083626</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083626</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083626</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0TpYxXiJNwSFaS0QMs+BbqBdtO+VMYx4JLYEDtA+/XHDg23Qg/7SEjIk/HMmpnlZV9zGIW253OOY0EY1Zq1iv4GXAwgQo5hITQ08u6oYJSLzsgAsGjZIF92y46la03OE9ykXEAqKroNrLwBCoaV7wPgOUXPdnJuwX7VtWcccxlauuSArq2ikHIvTVvRk5h6DHLCPQojzD2BvJ7fevCkpwczTHr1eo0yTRhXJ0LMPNNEuQAjHIYoh1hkXpt7PtcB93pkTKFIYvyVM+AV/WvvcrnMLZ0ci8emDQAwgWtKn4CT8aVevcg246BJR2y9voWUUYJgSD6hAtXCYsICzQ/HLCZiEp0IbZkWUKENvEIGsvL0Uje3CVJ0Z0baAxlzaPAJtLJgXTzCMaYIa0/dZkW/PG+C6739GFI+YnHED9Z/BwnTBQ7ZDAcGzyrL0J0f8Ui7qtcYeU2KwoSTBW4rmswgwlx7jPGIrB4Il+QLuJaOX1tx+SMZyzD6m7Fcm7tYJXTzSHdqZIy5+D8z253XOsozDBNcdbpxvtkzrcfRkNSb6O5eFK/adyJyp/lKCmHXeQ1qM+6v9SFZN9z62nTnX1nxsjF0ye+o25jc373XanDil17y/fu718+Q96cBg/T5FRZ/+f3Ca+O21B2xRe+1O/h0X4IWc+7by+QFF5jbuZgXX+otaI/bk9B9qjXeV1eDqw/yT8nqdTofA1jvBHCZ77dXhZvC1J75j6uA9pfI9jtt8HvQFtN35/lmOCLTx9LV8OJPZzYQgz/w8xFOSqXiy8NTq7KtabeGfWMmCb1k+I6RyJaKHs2a1pDzguJneVEWEhij1NWbKY3iAlOhV9UuJS1eIgWIBJ4c5nrdcAvAtq2G49fqDXmK6iAPrAbwQcl1gV2zMg1aoziAeMvoiKhcSmXX/PkZIIo8jmmAY2PBEjTBXP8hYg0KqDVpVx4ORjnuM6nillguIjsultj7tGzBIoTz8RziAHzqWpuJDu3E/kjgeF+7nT3t7mJEZgQrgVcM55LiXMhmzOEiEaGVW8AcxYm8AmKlwp6dLxdMTqJZiBVUM2JBEuLcbDJLW2Py9b9tQMRTa7feT0/eycIOv2U9kD4BUQ5c1XKD5RzxkUvIygo5XXBxt+AsvJ8ERB0w2VARE7RGsv9pyxNFkA1JZEVvt723DRk27mdv/77T/AGUediPTaJgQXbSZrepvCCkfFSzac5hbp5LFosknV9JSWMsw5tSIS2zh1Ei9e2jz6aYmpsQ5lnXywb1QeaNfR9fIia0J6DAkWSbli7PeFv0MFdvi6Y8J6tzHy57KWXfBF6JY7bbUD5BFOIfXynIQ8pPmh/l35LFwXZcR2Lt5JF1ygeFIHSsVuoi+ThBCsRkWCKVj8W7wY8FOJZ837hp8gaLkGwaJgKf/qIpSavosrUsoaJZ01PDrsymOMXHDHtbp29hUin/uptX/OTdPGg99KTgRVDf+JL/djZISheEdfUESLFU9JV8asrkdLwj618AD5TdAqWyU771i8Byt8pecF0H+Fsu71VS/Wb+btnp6eF5qP4L</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F95107838CA60194E0401F0A059930A1</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4j3eMZGMC9gRmKJCpKfkCt0n70lHkNejGlo0lg7m//somJkBILr2TzDBar3bP7h4d6VKQOLLcvhCQSZZwzRt29d+OFZCwiW2j/USxYXcgNDqtsG1Y0ApsAqSJHVPXPCFy8LiQhMuubmHTNnDLMG0fY7d54VrthoWtX7r2AzKhQiuXBta1Io64cKu0XT3PuJsQwYTLSQzCldSd9a8nrvJ0SY1J711uUVYJs95CytRFiDYCoBBFtEGTGF2iA5/LQLgzNudE5hm85AxEV3/Zu16vG+tmI8nmyMIYI+wg5RMINv+s9z7VmyHweJhs1wPCE84oidg/pAR1DXKRBFo/micZk4v4ndAmMnEZ2oCCGtS0+WcdvSao0J0Z6QBkJoghFsSsg00hhAw4Be371Ovqn8+b4HavnxEuwiSLxdH6zyABX0GUpBAYoq6sRnd+xBPt6l0CdT1Oo1ywFdyUNEkJBaHdZRCyYsKEIl8gtGr8WiHUP6tZBvRPxnKJ9rEq6OhEd4ZsDkL+n5ntz2sb5QeJcuit8BQNntPbsPjLTzaJM9xEm8fR5H7pfe9WEPadt6B2435ZH5N1x62XTRuyxvfRbPxr+nX+NX/w86/hBugSolhk8+jHco1SeZPPridWOLkt0umXCD0OWd7ko/nGI3eLjX337I9vOn5q+5+KbDxdDp1v4/CCP3YWvDmW9x5J0ebnPXpYotnauwns/HaZpoPOTxpfDEae9UAHI5z48cNzbI4frm7n48HkG4yLT0Xo9Ec/Qz8J/Wk8uZODHHdfa9qv4dBYS8Isf/obqKyXJT28oXal5kXkx/JSWlhghJWrm5YaJSRwqffKXaW0uLkSIBa4apjb9ZXTMnG73XdM86qPR+rPxuYV7uO247RaLVxr0BbFEcRBwkNW5ipVdsufjwHS2BXAA8iMVZLTBQj9g4hDIonm8ak6HAkX4CdKxf+mGNtx1OkEjmXarVA2qSNgc/GkazeJvOW3WT+UkB1Kd/NAuqdAWcqg1PeS4EIxXEjViyVZ5TIyGyvS4JCrGyArRdi17E4LCRanEZRIUZwEeQSNdJFWnUFi+2sZhIrKOh351cF7t67jb3ULlE/ASgdR1vIF1BjhxB1k1oW8X/DFfsF1+H4esPJ8qX7KjNEtksNPrzQp+bHjiKro92D226xx79zP3v52J/oAFDruxy5RsGJ7aevLVN0PSj169TSXpLFs5KtVXs2vXSpjpsIjJZAmmgHNlbxt/OQZONqFQGfdLjvUR5l39kN8uVzwmSQSYsU2rVqe8bSYgSifFp46JsW575aDlKpvEgp5yjaI1AukRPzhI4W6tPRT5jv1s06y4HVcJ2Lt5VF1qveEZHxersp7ZPMOKWiiwjIlfEm2H/xUgFPJD427Ju+wSMWmp1zC+1+0UtG6OqE0ybn0hnpl2FfZCqfcpOC+Or0JUyn5y9VciHev5sfryUzpXUz0nS/7b2eDVXShoJcvgApLVy/US1Ml5/M9VX8B+FbYO83OoH+BTcfeCXvLcZq4/8rlg0p6b8xvLXs9PT4PvX8B</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F951077A911FA0E0E0401F0A07995550</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F951077A911FA0E0E0401F0A07995550</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083626</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F951077A9120A0E0E0401F0A07995550</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f5f8feae-2fe1-43ec-98ca-c798916c5e2a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00039_FUNC_UVTC_UserName_RequestorUser_any_status_RequesteeUser_any_and_pending_ResetPassword_Role_RET_CS_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","pending");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuo4EH3PV7icx5TxxuoKVBEIc53JdjFZhpeUkNsgYstgyWxfP5KJHSAkw52qVCi1W92nu4+OdMlQFFpOmzFIOImp4nab6pttNGrByMQaVAKklSuANYQrvobsmlUR/ypWDamKy1gKLmUcUd5ULcMsa0ZFM8sDw3DsqmMbJbNeHarKMyRMhBYuJUNVVlFImZOlbappQp0YMcIciiJgDseO1767dYSng3JMautyizJLmLQmnM8cXcclHzCEIS7hONIv9T2fS585HhlTxNMEPnL6rKl+7F0ul6WlXYqTsW4ZhqEbDV34+IyMz9XWWb4ZfJcG8XbdQTSmBKOQbJAEdQd8EvtKOxzHCeGT6JvQpm4aMrQGK6xhs0zPVf0zQYbuxEh7IBOGNDZBZh6sDwEkQDEoT323qZ6fNsHt3kGCKAviJGIH6z+DBHQBYTwDX2N5ZTm60yMeaVfrErDjUhymjCzgXtJkhjAw5TGBgKxuCRPk85mSjV9ZMfFHcpYB/pOxXOq7WAV0/Uh3umQMjP+fme3OaxvlGYUptKzb+0bvNWm7nUV4UW94k/ffpB38TTbBsplB2HXegirG/bE+JGvBrY9NPWOwacxXE5S8R9FDffTPr85Vz8bWdMHrkWUCe6xeeNOat6p643uzB9ed+V/r+eh1CIheXD2y6c1DSHw6rEbv7TPyRJ6n8Q3edB/XTyt4d6+HdQNNHzu113Tob6xNfTG6JT0Su3dPtUFnGi38YDi2eXneH/bcTrt/MTXM55df+itZntkvK/cmHNAXT8egG+b7+nfzs6bdGvaNuSR46WgKmOdLSQ+3q/TEvBD/WV6khfhakLk6M6lRjAPlakvuktLipEKAiO+IYW7XvUbFsOxGt2ZXy2bNrFwbZcPsGW2j0mgYjbqZa9AWxQHETkwDInNJld3y52eAOHIYUB8SbRGneAJM/SFiF3GkuLQvDkdMGQxioeLm2pib2K4by3V9bNbsaG0BkFE9KKvKfcwf6EPSDjgk+9pt72l3HzCZEZACLxnOBMUZF82Yo0XKQ7O0QCUKqbgCEqnCjlWuV3RGolkIEqoexX4aQmk2mWWt0dn21xJixDJr/3qQnbxvCzv8lvdA+PhEOjBZyxWIOcKRS8jKC/m+4OpuwXn4duoTecBEQ3lC8BbJ/qdPnkiCFCQRFb11vLeCDIX7ydu/7tR/AKUf9qNI5C/ITtr8NhUXhJCPVj7NOSrNS+likWbzq0lpTER4XSikqXuAU6Fv60H8DlQvQugnXS8F6oPMhX0fX8on1OOIQyTYpmTLE94WHjD5tnDFOVmd+nDZSyn6xmHFj9k6oXiCSMQ/vlKwg6WfMD+Kn2Wc+J/jOhJrJ4+oUzwoOKFjuZIXyfobUuBYhCVC+eJkN/ixAMeS7xuLJhdYuGDTKOXw/RdFSlpTRRjHKeVuV80MuzKb4eTrGTifTl/CZFL+cTev2Ld38+vdrScEL0Jq4Uv+21kjGV0wqPIJkGFpqivx1BTJ6XhH1j8AflF2q3Pd7RpXZqNT3Vf2aqNo4F4lrS/mr5adnh6eh9a/</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95022CEDD0B19C6E0401F0A05990969</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95022CEDD0B19C6E0401F0A05990969</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950239D73641715E0401F0A05990981</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950239D73641715E0401F0A05990981</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083628</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950239D73651715E0401F0A05990981</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083632</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083632</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083632</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbZcuo4EH3PV7icx5TxxuoKVBEIc53JdjFZhpeUkNsgYstgyWxfP5KJHSAkw52qVCi1W92nu4+OdMlQFFpOmzFIOImp4nab6pttNGrByMQaVAKklSuANYQrvobsmlUR/ypWDamKy1gKLmUcUd5ULcMsa0ZFM8sDw3DsqmMbJbNeHarKMyRMhBYuJUNVVlFImZOlbappQp0YMcIciiJgDseO1767dYSng3JMautyizJLmLQmnM8cXcclHzCEIS7hONIv9T2fS585HhlTxNMEPnL6rKl+7F0ul6WlXYqTsW4ZhqEbDV34+IyMz9XWWb4ZfJcG8XbdQTSmBKOQbJAEdQd8EvtKOxzHCeGT6JvQpm4aMrQGK6xhs0zPVf0zQYbuxEh7IBOGNDZBZh6sDwEkQDEoT323qZ6fNsHt3kGCKAviJGIH6z+DBHQBYTwDX2N5ZTm60yMeaVfrErDjUhymjCzgXtJkhjAw5TGBgKxuCRPk85mSjV9ZMfFHcpYB/pOxXOq7WAV0/Uh3umQMjP+fme3OaxvlGYUptKzb+0bvNWm7nUV4UW94k/ffpB38TTbBsplB2HXegirG/bE+JGvBrY9NPWOwacxXE5S8R9FDffTPr85Vz8bWdMHrkWUCe6xeeNOat6p643uzB9ed+V/r+eh1CIheXD2y6c1DSHw6rEbv7TPyRJ6n8Q3edB/XTyt4d6+HdQNNHzu113Tob6xNfTG6JT0Su3dPtUFnGi38YDi2eXneH/bcTrt/MTXM55df+itZntkvK/cmHNAXT8egG+b7+nfzs6bdGvaNuSR46WgKmOdLSQ+3q/TEvBD/WV6khfhakLk6M6lRjAPlakvuktLipEKAiO+IYW7XvUbFsOxGt2ZXy2bNrFwbZcPsGW2j0mgYjbqZa9AWxQHETkwDInNJld3y52eAOHIYUB8SbRGneAJM/SFiF3GkuLQvDkdMGQxioeLm2pib2K4by3V9bNbsaG0BkFE9KKvKfcwf6EPSDjgk+9pt72l3HzCZEZACLxnOBMUZF82Yo0XKQ7O0QCUKqbgCEqnCjlWuV3RGolkIEqoexX4aQmk2mWWt0dn21xJixDJr/3qQnbxvCzv8lvdA+PhEOjBZyxWIOcKRS8jKC/m+4OpuwXn4duoTecBEQ3lC8BbJ/qdPnkiCFCQRFb11vLeCDIX7ydu/7tR/AKUf9qNI5C/ITtr8NhUXhJCPVj7NOSrNS+likWbzq0lpTER4XSikqXuAU6Fv60H8DlQvQugnXS8F6oPMhX0fX8on1OOIQyTYpmTLE94WHjD5tnDFOVmd+nDZSyn6xmHFj9k6oXiCSMQ/vlKwg6WfMD+Kn2Wc+J/jOhJrJ4+oUzwoOKFjuZIXyfobUuBYhCVC+eJkN/ixAMeS7xuLJhdYuGDTKOXw/RdFSlpTRRjHKeVuV80MuzKb4eTrGTifTl/CZFL+cTev2Ld38+vdrScEL0Jq4Uv+21kjGV0wqPIJkGFpqivx1BTJ6XhH1j8AflF2q3Pd7RpXZqNT3Vf2aqNo4F4lrS/mr5adnh6eh9a/</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F95022CEDD0B19C6E0401F0A05990969</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH6tgJ0BKooLErT0529sC27Pty8p1hsRt4kDsUNhff+zQUKC0hz0SEvJkPPPNxd/MmSBp4vhdISCXLONGMGibv5qPrSk0qWe1Wi61Go163Wo1sWdhG09trx66LXg0jUCIAgIuJOGybTrYbli4admNCcZ+3fXrjZrn4QfTuINcKNNKpYZNY5kmXPil27ZZ5NzPiGDC5yQF4Uvqj7tXl77S9EmFyeycrVGWDvNOLOXMR4jWQqCQJLRGsxSdoR2ds1D4YxZxIoscXn2Gom2+3n15eam91GtZHiEHY4ywh5ROKFj01ex8qS5DGPBptj73Cc84oyRhv4kGdQUyzkKjm0RZzmScfmDaRjbWpi1YUovaDf7VRG8OSnRHWtoBmQtiiZjYlbERTCEHTsH4MQra5tfjKri+O8kJF9MsT8Xe+c8gAV9Aks0gtEQVWYXueIsH0tU5A+oHnCaFYAu41m0yIxSEcZvDlC0vmVDNFwqjLL+xFOrHqi4D+idlOUPbWBV0dCA7AxaBkP+nZtv1Wlu5I0kBnct/JH0eUzZ6WkX9uvzBVt/qD/Qhbz522yWEbeU1qE25X8/7zbrprddLQwlx3ps+fT93f1ze3scTlzzfoNHwij0tnVs7poPexc9I0NFFIjHt3ydTmjnpX9fDb63Iccjo+fvo/i45hxl7Zl+cIpwN5td9chNf2CjtnZ7UV92LOcH1IOEnd3niokZmz10S35w0rq9a6TxtTX5f3MB9EcQ99nCC2HjlLHvRHP39ZUKFlOP66YuN4jFLnxbDoP0W03YMu8KKEsbF4xNQWR11ewQD41zVi8jP6UVLWGhNS1V/pjlKSODS7Ohbmlr8QhEQC31VzPX53Gva2HUG3vnQafSGp0PcwPY57uKm5zmtoVtx0BrFHsR+xqdM+9Isu+6fzwHS1BfAQ8itRVbQGIT5icUBkcQI+Eg9jowLmGSKxe1ELiOJRWPlJW5Esnz+LBfuYhaaxnUmb/hN3p1KyHepu75D3SOgbMZA87tucKE6XEiVizlZFDKxawtS41CoCZBrEvadRquJBEtnCWikKM3CIoHaLJ6VmUFi/e9YhIpSOhpOyof3YVz736oUKJ2QaQWhY+mBKiMcmEFOFcjHAbvbAVfmu0XI9PtS+ZQ5o2sku5/e2kT3x6ZHVES/+uNfdoV7o3709fc30Seg0H4+No7CBdtyWw1TNR8Ue3Sqas5JbV4rFouirN+pZsZcmUeKIG00BlooeltNsmfgaGMCHTVdNqj3PG/ku/gKGfOxJBJS1W1GeTxitRiD0KtFoJ7J8ti9ZcelypuEpTwk6ydqA9GIP11SqE+1nhLfqr+XLA/fynXA1pYfFafaJyTjkT7pObL6oClopswyRXxZvm38kIFDzneFmyRvsEjVTY+FhI+/GJrR2iahNCu4DAZmKdhm2RKnXM3Af1N6Z6Zk8tfRvBQfjuafV5djxXcpMTe67L+VLVa2CwVTbwAllra5VJumcs6jLVZ/BbhH7Nhx+sPBAPdsr+9uEzv2XG+TwJ1IOu/E7yVbOd1/D51/AQ==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F951062D9FE24BE7E0401F0A059928E6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F951062D9FE24BE7E0401F0A059928E6</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083632</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F951062D9FE34BE7E0401F0A059928E6</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f5f8feae-2fe1-43ec-98ca-c798916c5e2a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662c9604-f226-44e7-a34a-1af55613ee92</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00040_FUNC_UVTC_UserName_RequestorUser_any_status_RequesteeUser_any_and_blocked_ResetPassword_Role_RET_CS_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+o4EH7vr4jSxyrkAoEkKkg00DanXMplz9nlpXJtB3xIHBo7QPvr1w5NCpR2OSshIU/GM9/MfP7sawbiyPLajOGUk4QqQaepPhmOY0DLCbUQNGytZrmG5iAHazVouLZtAwCen1UlYCzDAWUcUN5ULcOsaYatmbWpYXjVuld1KlatOlOVnzhlIrRwqRiqso0jyrw8bVPNUuolgBHmURBj5nHoTdr9nic8PVBgUlvXO5R5wrS14Hzl6TqsIAxxFMEKTGL9Wj/wuUbMm5A5BTxL8XtOxJrq+97NZlPZVCtJOtctwzB0w9WFD2Jkfqm2LorNGAU0THZrH9CEEggi8gYkqD7miwQp7WiepIQv4i9Cm7ppyNAa3kINmjV6qeofCXJ0Z0Y6AJkyoLEFMItgYxziFFOIlb/GQVO9PG+Cu73TFFAWJmnMjtZ/BgnTNY6SFUYaKyor0J0f8US7WtcYegGFUcbIGg8kTVYAYqY8pjgk2x5hgnyIKfn4lS0TP1KwDMM/Gcu1vo9VQNdPdKdD5pjx/zOz/XntovwEUYZbEyu+vxs0hq+Nm5r7MhzRUXsW3Cz1wcRo5hD2nXegynG/r4/JWnLrfdPw1SaR/gstZ8Nw+HDju6Hfvctuort1f9S1H6zJMJ0NB2QwNvy78dIHmxfnn02Pt2N91LfRQ/z42rgbhvPbZ7t/d1Eb+A9o+XA1b1wZwSwjyBoF9frvjlXdOP2r+67TWN5s5hTVR1fdejpK0MKMnGmyAI+N3mwc8O59b7yNnHBZfXAuZn642synvZj9oj/03n2wdZofNe3XcGgsJGGSPf/GkBdLSY+go9yKeQH+vbxIC0FamLt6K6lRjGPK1ZbcJaXFy4QAEeSJYe7Wt65tWJbf7XS6HdP1612jZpi3RtuwXddw626hQTsURxD9hIZE5pIqu+PP9wBh7DFMEU61dZLBBWbqNxE7gAMloGNxOBLK8DQRKm4iZL81ltGbBequ+XtVq6E1WYVWkqrKIOFDOkzbIcfpoXZXD7R7jCFZESwFXjKcCYozLprxAtYZj8zKGlQozsQVkEoV9qyaY+uMxKsIS6h6nKAswpXVYpW3Rme7f0sDkOXWcXean7wvCzv+VvRA+CAiHZis5QaLOeITl5BVFPJ1wfX9govw7QwRecBEQ3lK4A7J4acPnkiClCQRFT35kyezwF26n7398079G1D6cT/KRGLae2mL21RcEEI+WsU0X0DlpZKt11k+v4aUxlSE14VCmvoEw0zo2+s0WWKqlyH0s66XEvVR5tJ+iC/jCzrhgONYsE3Jl2e8LSaYybdFIM7J9tyHy0FK0TeOt/yUzY/EE0Qi/vaVAj0o/YT5UfxtkhR9jOtErL08ok7xoOCEzuVKXiSvX5ACJiIsEcqXpPvBTwU4lfzQWDa5xMIFm54zjr/+okhJa6oAwiSjPOiouWFfZnOc/HWFvQ+nT2FyKX+/m7fsy7v5735vIgQvBmrpS/7bWSM5XSBW5RMgx9JUt+KpKZLT+Z6svwP8pOym1bbdaluwxi6VvSGU3fadsoEHlbQ+mT9b9np6fB5a/wI=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950212A593A4295E0401F0A079905C8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950212A593A4295E0401F0A079905C8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95022CEDDED19C6E0401F0A05990969</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95022CEDDED19C6E0401F0A05990969</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083637</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95022CEDDEE19C6E0401F0A05990969</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083639</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083639</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083639</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+o4EH7vr4jSxyrkAoEkKkg00DanXMplz9nlpXJtB3xIHBo7QPvr1w5NCpR2OSshIU/GM9/MfP7sawbiyPLajOGUk4QqQaepPhmOY0DLCbUQNGytZrmG5iAHazVouLZtAwCen1UlYCzDAWUcUN5ULcOsaYatmbWpYXjVuld1KlatOlOVnzhlIrRwqRiqso0jyrw8bVPNUuolgBHmURBj5nHoTdr9nic8PVBgUlvXO5R5wrS14Hzl6TqsIAxxFMEKTGL9Wj/wuUbMm5A5BTxL8XtOxJrq+97NZlPZVCtJOtctwzB0w9WFD2Jkfqm2LorNGAU0THZrH9CEEggi8gYkqD7miwQp7WiepIQv4i9Cm7ppyNAa3kINmjV6qeofCXJ0Z0Y6AJkyoLEFMItgYxziFFOIlb/GQVO9PG+Cu73TFFAWJmnMjtZ/BgnTNY6SFUYaKyor0J0f8US7WtcYegGFUcbIGg8kTVYAYqY8pjgk2x5hgnyIKfn4lS0TP1KwDMM/Gcu1vo9VQNdPdKdD5pjx/zOz/XntovwEUYZbEyu+vxs0hq+Nm5r7MhzRUXsW3Cz1wcRo5hD2nXegynG/r4/JWnLrfdPw1SaR/gstZ8Nw+HDju6Hfvctuort1f9S1H6zJMJ0NB2QwNvy78dIHmxfnn02Pt2N91LfRQ/z42rgbhvPbZ7t/d1Eb+A9o+XA1b1wZwSwjyBoF9frvjlXdOP2r+67TWN5s5hTVR1fdejpK0MKMnGmyAI+N3mwc8O59b7yNnHBZfXAuZn642synvZj9oj/03n2wdZofNe3XcGgsJGGSPf/GkBdLSY+go9yKeQH+vbxIC0FamLt6K6lRjGPK1ZbcJaXFy4QAEeSJYe7Wt65tWJbf7XS6HdP1612jZpi3RtuwXddw626hQTsURxD9hIZE5pIqu+PP9wBh7DFMEU61dZLBBWbqNxE7gAMloGNxOBLK8DQRKm4iZL81ltGbBequ+XtVq6E1WYVWkqrKIOFDOkzbIcfpoXZXD7R7jCFZESwFXjKcCYozLprxAtYZj8zKGlQozsQVkEoV9qyaY+uMxKsIS6h6nKAswpXVYpW3Rme7f0sDkOXWcXean7wvCzv+VvRA+CAiHZis5QaLOeITl5BVFPJ1wfX9govw7QwRecBEQ3lK4A7J4acPnkiClCQRFT35kyezwF26n7398079G1D6cT/KRGLae2mL21RcEEI+WsU0X0DlpZKt11k+v4aUxlSE14VCmvoEw0zo2+s0WWKqlyH0s66XEvVR5tJ+iC/jCzrhgONYsE3Jl2e8LSaYybdFIM7J9tyHy0FK0TeOt/yUzY/EE0Qi/vaVAj0o/YT5UfxtkhR9jOtErL08ok7xoOCEzuVKXiSvX5ACJiIsEcqXpPvBTwU4lfzQWDa5xMIFm54zjr/+okhJa6oAwiSjPOiouWFfZnOc/HWFvQ+nT2FyKX+/m7fsy7v5735vIgQvBmrpS/7bWSM5XSBW5RMgx9JUt+KpKZLT+Z6svwP8pOym1bbdaluwxi6VvSGU3fadsoEHlbQ+mT9b9np6fB5a/wI=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950212A593A4295E0401F0A079905C8</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj1VwkiZAooJEoezmLLTl1m33ZeU6DjGbOCF2uOyvP3ZoUqC0hz0SEvJkPPPNxd/MNYNxZLodxnDGSUIVr9dSfzUDQ2/YJtSghR3NwrapOQ2zoVnNoA4D33xxEFIVj7Ece5RxSHlLNXXD0nRbM6yprrtXddfSa03H+akqjzhjwrRQqemqsokjytzCbUvNM+omkBHmUhhj5nLkTjrDgSs0XVhiUtvXO5SFw6wdcp66AKCajxGOIlRDSQyuwYHOtc/cCZlTyPMMv/r0WUt9vbter2vrq1qSzYGp6zrQHSB0fEbmX9T2RXkZ+x4Nkt25C2lCCYIR+QMlqCHmYeIrnWieZISH8QemDWDo0rSGN0hDhkW/qODNQYHuTEsHIDMGNRZCozQ2xgHOMEVYmY29lvrlvAru7k4zSFmQZDE7Ov8dJExXOEpS7GusjKxEd77FE+lqX2PkehRFOSMrfCfbJIUIM+UhwwHZDAgTzeczpSi/smHiR8ouw+hvynIN9rEK6OBEdnpkjhn/PzXbr9fOyiOMctye0WH427EMvgCpgzlePPycDsc/UvrdaxUQ9pV3oKpyv56Pm7XqrddLT/24//3G+k1Xk+CmC+h005uCH6Pn+uZycNN5TGdO+m1pz37k4T/1r1/7t7o9i/vRHbydJA+XsBcnl8PBAI6iDtguLhx4ubBHT2EjnIy/hs5wO31eGi+D1XK5JYFuZGZj8G27SMFLeInSno7vHP5nNF7dD1P2AB9HXnfkE7hMTP95fn8ReLO7Tr5+1uPZshcjxtNR6y2m/RgOhSUlTPKXBUa8PMr28HpKX9QL8s/pRUqIrwWFqptKjmIcU6625S1JLW4uCIj4rijm7tx3bEOvmz2n33esm9vGrW7pRl/v6LbjmM3beslBOxRHELsJDYj0JVl21z+fA0SxyzD1caatkhyFmKmfWOxBDhWPjsXjSCjD00Sw+BrV1y8mQ2ZO5/7Schb+XDeatmDuu4Tf0/usE3CcHTL31QFzjzEiKcGS3mV/M9HgjItULOEq55FRW8EaxbkYAJnkYNe0mjZgJE4jLIGCOPHzCNfSMC0SA9ju39QgYoV0fDst3t2HYR1/KzMgdHwiFZiM5QaLKuITI+iqDOTjgOv7AZfmO7lP5PMS6eQZQTskh5/eukS2R9UiIqJf3ckvo8RdqZ99/f1N8AkocJyPypG/Intuy1kqxoMgj3ZZzSWsLWv5apUX9WtIYsyEeSD40QATjHLBbttp8htTUJkAZw2XCvWR50p+iC/nIZ1wyHEsuk0pjmdsFhPM5GbhiVeyOXdtOXAp8sbxhp+SdSOxgEjEn+4oyEVST4gfxN86yfy3cp2wtedHxCnWCU7oXJ7kGNl+0BQoEWaJ4L0k2zd+ysAp54fCKskVFi666SXn+OMviiS0lgoRSnLKvZ5aCPZJtsDJtyl235TemSmI/HUyb9iHk/lpOJgIuouhWumS/1bWSNEuCKtyASiwtNSNWDSFczrfI/VXgEe8rpuG2bGdq45lOnbF6w3H0e1us0rgQSTtd+L3kr2cHr+H9r8=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F951062D9FF94BE7E0401F0A059928E6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F951062D9FF94BE7E0401F0A059928E6</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083639</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F951062D9FFA4BE7E0401F0A059928E6</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f5f8feae-2fe1-43ec-98ca-c798916c5e2a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662c9604-f226-44e7-a34a-1af55613ee92</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00041_UVTC_UserName_RequestorUser_any_status_RequesteeUser_any_and_other_than_active_pending_or_blocked_ResetPassword_Role_RET_CS (Negative)_400_BADREQUEST_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","deleted");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","USER_STATUS_NOT_VALID");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0Tp41GIA+EWARKXzT5paWkL9PZSGccBt4kdYodLv37boUmB0h72kZCQJ+OZNTPLy25wGAZFp805jgVhVHN7Tf2lUqyiKix7RhWUy4ZdKU6NKYC2US97laqParCCqrrmcp5gl3IBqWjqRWDZBigblj0GwClVHLtcACX7WdfuccxlaOlSALq2DgPKnTRtU09i6jDICXcoDDF3BHJG7auBIz0dmGHSW40tyjRh3JoLETmmiQoeRjgIUAGx0GyYez4NjzsjMqNQJDH+yOnxpv6xd7VaFValAotnZhEAYIK6KX08Tmbneuss24w9l/psu+5CyihBMCDvUIG6wmLOPK0dzFhMxDz8JrRlWkCFNvAaGciy6blufiZI0Z0YaQ9kzKHB59DKgt1hH8eYIqxN7tymfn7aBLd7xzGk3GdxyA/WfwcJ0yUOWIQ9g2eVZehOj3ikXa0GRo5LUZBwssTXiiYRRJhrNzH2yXpAuCSfx7V0/Nqayx/JWIbR34ylYe5ildDNI93pkRnm4v/MbHde2yj3MEhw6/eybT2FtQdWegvZI+iw7v1sXfIrg85tM4Ww67wFlY/7Y31I1pxbH5um/isA9Vv/nT49I9N+6q0eu6vZP+HlwHY314tn347i8UVSCf4dB5XwHZrBZX3Kboe9i87zanHt1iLG7cu3q/F0ODzblGTFHXAzofFgZF+NwpuHmX+9mIyiwK9sJqBmL/zLIR1PEjCZVCz80DUvLkvj/mr5yK9/36zf+qCyKY57z4vhxZmA697vLp6HfPOwuvDdIW03P2varWHfmEnCKJm+YiSypaKH29P6cl5Q/CwvykI8w09dnUhpFBeYCr2ldilpcRIpQMRz5DC36369DIpWsd3t251ivdf/BWxg9UEblOt1UG9bmQZtURxA7DLqE5VLqeyWPz8DRKHDMfVwbCxZguaY6z9E7EEBNZfeycPBKMdjJlWc+ouVqEUIJuVXvAGiNqsuS151rmvXTAzpMG77Asf7yl3aU+47jEhEsJJ3xW8uCc6FbMUCLhMRWIUlLFCcyAsgVhrsFO1a2eQkjAKsgJoh85IAF6J5lDbG5Nv/ogERT613v8bpufu2rMNvWQekj0eUA1e1dLCcIj5yBZWyQr4vuLJbcBa+nXhEHS/ZThETtEWy/+mTJYoeOUVkRS/d0UtOhdz95O1fd5o/gDIP+5En8pZkJ212l8rrQYpHK5vmAhYWhWS5TNL5VZUwxjK8KfXRMkcYJVLdNmP2hqmZhzBPulxy1AeZc/s+vkTM6UhAgUPJNi1dnvCyGGGuXhauPCXrU58teyll3wRei2O2biAfIArxj28U5CDlJ8038m/FYu9zXEdi7eSRdcrnhCB0plbqGtl8QwrEZFgidY/Fu8GPBTiWfN+YNznHIiSbponA33/RlKA1dYgQS6hwe3pq2BXZFKfYRNj5dPoSJhXyj5t5zb+9mR+vBiMpdyHUc1/y384GSemCsK4eACmWpr6WD02ZnM52RP0D4DFd7xftXr8OyrmuV+tq1c8buFdJ64v5q2Wnp4fnofUH</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950212AF24DF905E0401F0A079905EF</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950212AF24DF905E0401F0A079905EF</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950212ACF4B29DFE0401F0A059909A1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950212ACF4B29DFE0401F0A059909A1</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083643</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950212ACF4C29DFE0401F0A059909A1</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083647</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083647</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083647</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0Tp41GIA+EWARKXzT5paWkL9PZSGccBt4kdYodLv37boUmB0h72kZCQJ+OZNTPLy25wGAZFp805jgVhVHN7Tf2lUqyiKix7RhWUy4ZdKU6NKYC2US97laqParCCqrrmcp5gl3IBqWjqRWDZBigblj0GwClVHLtcACX7WdfuccxlaOlSALq2DgPKnTRtU09i6jDICXcoDDF3BHJG7auBIz0dmGHSW40tyjRh3JoLETmmiQoeRjgIUAGx0GyYez4NjzsjMqNQJDH+yOnxpv6xd7VaFValAotnZhEAYIK6KX08Tmbneuss24w9l/psu+5CyihBMCDvUIG6wmLOPK0dzFhMxDz8JrRlWkCFNvAaGciy6blufiZI0Z0YaQ9kzKHB59DKgt1hH8eYIqxN7tymfn7aBLd7xzGk3GdxyA/WfwcJ0yUOWIQ9g2eVZehOj3ikXa0GRo5LUZBwssTXiiYRRJhrNzH2yXpAuCSfx7V0/Nqayx/JWIbR34ylYe5ildDNI93pkRnm4v/MbHde2yj3MEhw6/eybT2FtQdWegvZI+iw7v1sXfIrg85tM4Ww67wFlY/7Y31I1pxbH5um/isA9Vv/nT49I9N+6q0eu6vZP+HlwHY314tn347i8UVSCf4dB5XwHZrBZX3Kboe9i87zanHt1iLG7cu3q/F0ODzblGTFHXAzofFgZF+NwpuHmX+9mIyiwK9sJqBmL/zLIR1PEjCZVCz80DUvLkvj/mr5yK9/36zf+qCyKY57z4vhxZmA697vLp6HfPOwuvDdIW03P2varWHfmEnCKJm+YiSypaKH29P6cl5Q/CwvykI8w09dnUhpFBeYCr2ldilpcRIpQMRz5DC36369DIpWsd3t251ivdf/BWxg9UEblOt1UG9bmQZtURxA7DLqE5VLqeyWPz8DRKHDMfVwbCxZguaY6z9E7EEBNZfeycPBKMdjJlWc+ouVqEUIJuVXvAGiNqsuS151rmvXTAzpMG77Asf7yl3aU+47jEhEsJJ3xW8uCc6FbMUCLhMRWIUlLFCcyAsgVhrsFO1a2eQkjAKsgJoh85IAF6J5lDbG5Nv/ogERT613v8bpufu2rMNvWQekj0eUA1e1dLCcIj5yBZWyQr4vuLJbcBa+nXhEHS/ZThETtEWy/+mTJYoeOUVkRS/d0UtOhdz95O1fd5o/gDIP+5En8pZkJ212l8rrQYpHK5vmAhYWhWS5TNL5VZUwxjK8KfXRMkcYJVLdNmP2hqmZhzBPulxy1AeZc/s+vkTM6UhAgUPJNi1dnvCyGGGuXhauPCXrU58teyll3wRei2O2biAfIArxj28U5CDlJ8038m/FYu9zXEdi7eSRdcrnhCB0plbqGtl8QwrEZFgidY/Fu8GPBTiWfN+YNznHIiSbponA33/RlKA1dYgQS6hwe3pq2BXZFKfYRNj5dPoSJhXyj5t5zb+9mR+vBiMpdyHUc1/y384GSemCsK4eACmWpr6WD02ZnM52RP0D4DFd7xftXr8OyrmuV+tq1c8buFdJ64v5q2Wnp4fnofUH</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950212AF24DF905E0401F0A079905EF</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I8EH3vr4iyj1XIhXCLChKFRc2qF0oo292XlXEm4DaxQ+wA7a9fOzQUKO3HfhIS8mQ8c2bm+NgXHCWx43U5h0wQRjW/39b/hOBGdhXXDKdmNQ23hUNjGtmRUbWb9frUtRswDXXN5zwHn3KBqGjrjmW7hlUzbHdsWV617rnNSq3p/Na1CWRchpYuFUvX1klMuVekbet5Rj2GOOEeRQlwT2Av6N5ce9LTQyUmvXOxQVkkzDpzIVLPNHElBAxxjCuYJeaFuedzEXIvIDOKRJ7BW86Qt/W3vavVqrKqVlg2Mx3LskyrZUqfkJPZN71zVm6G0KcR26x7iDJKMIrJK1KgbkDMWah14xnLiJgnn4S2TdtSoQ1YYwPbLv2mm+8JCnQnRtoDmXFk8Dmyy2AjiCADikF7GPlt/dtpE9zsHWeI8ohlCT9Y/xskoEuIWQqhwcvKSnSnRzzSrs4FYM+nOM45WcKtokmKMHBtmEFE1teES/KFXCvGr625/JGSZYD/ZSwX5i5WCd080p0+mQEX/2dmu/PaRJmgOIfOcyPsvUx5WFuQpuPO7zJHTHh3cisWq3YBYdd5A2o77rf1IVm33HrbROIufQmD9euwMYuC599uOGs+2cNLlt3NgsXPh+DxdbUaLe/z6U+Oq/UH53x410WtyZPLX26j3E3HfvLrYTW+wfGPs8blFV3Zy4fL+nl/eOl30XM3pldXi8dFvXcridbzf66f6PjaSq148ti7/o2G2f0ovWI30eB6dskef+QPd6NfzVc2rp4Fi3Onx1JTvF5Nvq/c+6cffvu9pt0a9o2lJAT59AmwKJeKHn5fG8h5IfG1vCgLCY2ocPVSpVFcABV6R+1S0uLlUoBI6MlhbtaDVs3qO1Zt0HfsQWPgfrdcyx5YXavRatXq9VapQRsUBxB7jEZE5VIqu+HP1wBx4nGgIWTGkuV4Dlz/ImIfCaT5dCQPB6Mcxkyq+DQR7lNrEVfndtVe4wRqrXkWtZxU126ZuKN3WTcSkO1Ld3VPukeASUpA6bsiOJcM50L2YoGWuYjtyhJVKOTyBsiUCHuO26yZnCRpDAqpmbAwj6GSztOiMybf/DsGwrywjr6Pi4P3aV2H38oWSJ+QKAeuarkEOUY4cgdVy0I+L7i+W3AZvpuHRJ0v2U+REbxBsv/pnSaKH1uOyIr+9II/dol7637y9o87zS9AmYf92CYKl2QnbXmZyvtBqkennOYCVRaVfLnMi/k1lDJmMrwpBdI2A8C5lLeXMXsGam5DmCfdLlvUB5m39n18uZjTQCABiWSbVixPeFoEwNXTwpfHZH3qu2UvpeybgLU4ZuvF8gWiEH/5SMEeVn7SPJR/K5a9F34s1k4eWad8TwhCZ2ql7pGXT0iBmQxLpPCxbDf4sQDHku8bt03eYhGSTdNcwOdfNKVobR1hzHIq/L5eGHZVtsApXlLw3p0+hCmU/O1qXvNPr+bHm+tA6l2C9K0v+W9ngxR0waCrF0CBpa2v5UtTJqezHVV/A3go7I7tdAeO2x+0rNqusMvVYNvAvUo6H8wfLTs9PTwPnb8=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950D205FD21F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950D205FD21F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083647</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950D205FD22F7F4E0401F0A07995669</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f5f8feae-2fe1-43ec-98ca-c798916c5e2a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662c9604-f226-44e7-a34a-1af55613ee92</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00042_UVTC_UserName_RequestorUser_any_status_RequesteeUser_any_and_active_ValidateEmail_Role_RET_CS_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3vr4iyj1chH4SPRAWJAt2b25buQrfb9qUyzgAuiU1tB9L++muHhgKlveyVkJAn45kzM8fHPhUoTbywIwRwSRg1ol7LfHRjr9nELlhBszqxfBcm1rhe9axaIw7wuA41H/umEQmRQUSFRFS2TM9xfcupWa5/4zhhtR7WvEqjWX0wjVvgQoVWLhXHNPI0oSIs0rbMjNOQIUFESFEKIpQ4HHWuLkPlGaISk9k+XaMsEvL2TMpFaNu4EgOGJMEVzFL71N7xOY1FOCJTimTG4S1nLFrm297ValVZVSuMT23PcRzbCWzlEwsy/Wa2T8rNEEd0wtbrLqKMEowS8oo0qCuQMxYbnWTKOJGz9JPQru06OrQFObaw69Nvpv2eoEB3ZKQdkFwgS8yQWwYbwgQ4UAzGr2HUMr8dN8H13huOqJgwnoq99Z9BArqEhC0gtkRZWYnu+IgH2tU+BRxGFCeZIEsYaJosEAZh/OAwIfklEYp8sTCK8Ru5UD9Ssgzwn4zl1N7GqqDbB7rTI1MQ8v/MbHte6yi3KMmgfX354OX0doKGwbz6t/268tK/6F0+Enm/VUDYdl6D2oz7bb1P1g233jZdocFgNjhPVnfdLh+knpydR7/Z5bw/vOiJ17nbaHSmL2edm1ozcF9mTj6/+NnEjYeHIGX+72g2f+KrKk7s5PWu450QBNGgxsAb+/djHsd0lXV8tvS92+S2Ppo8/DPNvs+d+5/DZOh85/fqxDQT6TV/STThz8AussnLLZ16K7HKspPr5jxworNlFd//7N/V5n2IWu81bdewaywlYZSNnwDLcqnpEfWMczUvJL+WF20hsTUpXMOF1ighgUqzrXdpaQkzJUAkDtUw1+vzoOZ4XuB060HfPTvr9R3fcc+djlMLAicI3FKD1ij2IHYZnRCdS6vsmj9fA8RpKIDGwK0ly/AMhPlFxB6SyIjoUB0ORgXcMK3i2bj+xBuuO/XAd8ds9ZwHT/WcSaXCAyav6TXvTCTwXe2u7mj3EDBZENACrxkuFMWFVM14RstMJm5liSoUMnUFcK3Coec3a7Yg6SIBDdVOWZwlUFnMFkVrbLH+9yyERWEd9m+Kk/dpYfvfyh4on5hoB6FrOQM1RzhwCfllIZ8XXN8uuAzfyWKiD5hqqOQEr5HsfnrniSbIhiSqosfu6HFDho370ds/7rS/AGXv92OTKF6SrbTlbaouCCUf7XKaz6jyXMmWy6yYX0NLI1fhbaWQrj0CnCl9e7lhc6D2JoR91PWyQb2XeWPfxZfJGR1JJCFVbDOK5RFvixEI/baI1DnJj3247KRUfZOQy0O2bqKeIBrxl68UHGLtp8w/1N+K8fh9XAdibeVRdaoHhSR0qlf6Inn5hBSYqbBEKR/j28EPBTiUfNe4afIGi1RsGmcSPv9iaElrmQhjllEZ9czCsC2zBU75soDw3elDmELK3+7mXHx6N99dXY6U4KXI3PiS/3a2SEEXDKZ+AhRYWmaunpoqOZ1uyfobwA/KXg16jWqv5jbc2q6yN98P804l7Q/mj5atnu6fh/a/</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950239D73D51715E0401F0A05990981</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950239D73D51715E0401F0A05990981</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F9502290C69E1BBDE0401F0A05990991</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F9502290C69E1BBDE0401F0A05990991</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083651</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F9502290C69F1BBDE0401F0A05990991</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083654</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083654</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083654</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3vr4iyj1chH4SPRAWJAt2b25buQrfb9qUyzgAuiU1tB9L++muHhgKlveyVkJAn45kzM8fHPhUoTbywIwRwSRg1ol7LfHRjr9nELlhBszqxfBcm1rhe9axaIw7wuA41H/umEQmRQUSFRFS2TM9xfcupWa5/4zhhtR7WvEqjWX0wjVvgQoVWLhXHNPI0oSIs0rbMjNOQIUFESFEKIpQ4HHWuLkPlGaISk9k+XaMsEvL2TMpFaNu4EgOGJMEVzFL71N7xOY1FOCJTimTG4S1nLFrm297ValVZVSuMT23PcRzbCWzlEwsy/Wa2T8rNEEd0wtbrLqKMEowS8oo0qCuQMxYbnWTKOJGz9JPQru06OrQFObaw69Nvpv2eoEB3ZKQdkFwgS8yQWwYbwgQ4UAzGr2HUMr8dN8H13huOqJgwnoq99Z9BArqEhC0gtkRZWYnu+IgH2tU+BRxGFCeZIEsYaJosEAZh/OAwIfklEYp8sTCK8Ru5UD9Ssgzwn4zl1N7GqqDbB7rTI1MQ8v/MbHte6yi3KMmgfX354OX0doKGwbz6t/268tK/6F0+Enm/VUDYdl6D2oz7bb1P1g233jZdocFgNjhPVnfdLh+knpydR7/Z5bw/vOiJ17nbaHSmL2edm1ozcF9mTj6/+NnEjYeHIGX+72g2f+KrKk7s5PWu450QBNGgxsAb+/djHsd0lXV8tvS92+S2Ppo8/DPNvs+d+5/DZOh85/fqxDQT6TV/STThz8AussnLLZ16K7HKspPr5jxworNlFd//7N/V5n2IWu81bdewaywlYZSNnwDLcqnpEfWMczUvJL+WF20hsTUpXMOF1ighgUqzrXdpaQkzJUAkDtUw1+vzoOZ4XuB060HfPTvr9R3fcc+djlMLAicI3FKD1ij2IHYZnRCdS6vsmj9fA8RpKIDGwK0ly/AMhPlFxB6SyIjoUB0ORgXcMK3i2bj+xBuuO/XAd8ds9ZwHT/WcSaXCAyav6TXvTCTwXe2u7mj3EDBZENACrxkuFMWFVM14RstMJm5liSoUMnUFcK3Coec3a7Yg6SIBDdVOWZwlUFnMFkVrbLH+9yyERWEd9m+Kk/dpYfvfyh4on5hoB6FrOQM1RzhwCfllIZ8XXN8uuAzfyWKiD5hqqOQEr5HsfnrniSbIhiSqosfu6HFDho370ds/7rS/AGXv92OTKF6SrbTlbaouCCUf7XKaz6jyXMmWy6yYX0NLI1fhbaWQrj0CnCl9e7lhc6D2JoR91PWyQb2XeWPfxZfJGR1JJCFVbDOK5RFvixEI/baI1DnJj3247KRUfZOQy0O2bqKeIBrxl68UHGLtp8w/1N+K8fh9XAdibeVRdaoHhSR0qlf6Inn5hBSYqbBEKR/j28EPBTiUfNe4afIGi1RsGmcSPv9iaElrmQhjllEZ9czCsC2zBU75soDw3elDmELK3+7mXHx6N99dXY6U4KXI3PiS/3a2SEEXDKZ+AhRYWmaunpoqOZ1uyfobwA/KXg16jWqv5jbc2q6yN98P804l7Q/mj5atnu6fh/a/</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950239D73D51715E0401F0A05990981</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+o4EH7vr4hyHo9CLiRAooJEgbac0htQdrcvlXGG4J7EAdvh0l+/dmgoUNrlrISEPBnPfHPxN3POURI7QZNzYIKkVOu26/pLiMH1xmHV8Mq+Y7hl1zXGtjw6XrXi+WNcc6uOrnU5z6BLuUBU1HXHsl3D8gzbHVpWUK4EnleqWrVnXRsB49K0VClZurZKYsqD3G1dzxgNUsQJDyhKgAcCB4PmbS+QmgEqMOmN8w3K3CFrTIWYBaaJSyFgiGNcwmlinpt7OuchDwYkokhkDN59hryuv99dLpelZbmUssh0LMsyLd+UOiEn0Q+9cVZchrBLJ+nm3EI0pQSjmLwhBeoWxDQNtWYcpYyIafKFadu0LWXagBU2sO3SH7r54SBHd6KlPZCMI4NPkV0Y68MEGFAM2lO/W9d/nFbBzd0hQ5RPUpbwg/OfQQK6gDidQWjwIrIC3ekWj6SrcQ446FIcZ5ws4E61yQxh4NoDgwlZ9QiXzRdyLS+/tuLyR4ouA/wnZTk3d7FK6OaR7LRJBFz8n5rt1mtjZYTiDBr/jOc/oUrsqdWD11bvofd8+9CHEWlfLes5hF3lDahtud/Ph8267a33S1d+lTVbb7d+/JCWk1bzuvmrn5qxe/E2BLq+GjRJzaer5J4TP8bd4V+2hZ6sx0rc6Vk9Ppp0WOvpir12fq4f3x7PxPr6OboL28+RqJghiS7anYv+HHmv43sbbh7sUZbdOL2bu3WlYnE35bORf8Oc63vo9kbXfGhWouRn/DRCv+du5axTG0/KvWYvpgPH/eWz5WWt/hHTbgz7woISBtn4FbAojqo9um3tUtYLie/pRUlIaExy1WCmOIoLoEJvqFuKWoJMEhAJA1nMzfnS92zLtzue16pVLxy7Y7mWfWk1Lc/3y36lUnDQBsUBxFZKJ0T5Uiy76Z/vAeIk4EBDYMYizfAUuP6NxTYSSOvSvnwcKeUwTCWLR2scr8WSTNwomi9WBC9mrxV/yXTtLhX39J41JwLYPnOX95i7D5jMCCh6V/3NZYNzIVMxR4tMxHZpgUoUMjkAmOLgwHFrnslJMotBATWTNMxiKM2mszwxJt/8OwbCPJf2O8P83X0Z1uG3IgNSJyRKgatYLkBWEY6MILcI5OuAK7sBF+abWUjU85LpFIzgDZL9Tx9dotpj2yIyopfW4MUucG/VT77++ab5DSjzMB9bR+GC7LgtZqkcD5I8GkU156g0L2WLRZbXr6qIkUnzpuRH2xwAziS7rYfpb6Dm1oR50nDZoj7wvJXv48vElA4EEpDIbtPy4wmbxQC42iy68pWsTl1b9lzKvAlYiWOyViwXEIX42x0FB1jpSfGD/FumLPwo1xFbO35knHKdEIRG6qTGyPqLpsCpNEsk76Vs1/gxA8ec7wu3Sd5iEbKbxpmAr79oitDqOsI4zajotvVcsEuyOU6xnkHwofTJTE7k75N5xb+czH/f9gaS7hKkb3XJfysbJG8XDLpaAHIsdX0lF03pnEY7pP4O8IDXLafst6vltmdXbW+X1y2/9vGY9yJpfBJ/luzk9PA9NP4F</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F951091E55C87B21E0401F0A05993966</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F951091E55C87B21E0401F0A05993966</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083654</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F951091E55C97B21E0401F0A05993966</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f5f8feae-2fe1-43ec-98ca-c798916c5e2a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00043_UVTC_UserName_RequestorUser_any_status_RequesteeUser_any_and_pending_ValidateEmail_Role_RET_CS_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","pending");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSxyokgYRLVJAolG12Sy/A0stLZZwhuJs4EDsB+uvXDk0KlPawR0JCnoxnvrn4mzlnKAzKTpsxiDmJqOJ2m+oLNipQmVQrmm1ipFkmTLUJRlPNnlhGo2pD1Sp7quIyloBLGUeUN9WyYVqaYWumNTIMp1J17EapUraeVWUMMROmhUrJUJVVGFDmZG6bahJTJ0KMMIeiEJjDsTNs968doemgHJPaOt+gzBzGrRnnc0fXcckDDEGASzgK9XN9R+fcY86Q+BTxJIZ3nx5rqu93l8tlaVkpRbGvlw3D0I2GLnQ8RvxTtXWSXwbPpdNoc+4gGlGCUUDekATVBz6LPKUd+FFM+Cz8wrSpm4Y0rcEKa9i06KmqfzjI0B1paQdkzJDGZsjMjQ1gCjFQDMrvgdtUT4+r4ObuKEaUTaM4ZHvnf4MENIUgmoOnsTyyHN3xFg+kq3UO2HEpDhJGUriRbTJHGJhyF8OUrK4JE83nMSUrv7Ji4kfyLgP8L2U517exCuj6gex0iQ+M/5+abddrY2WMggRaveAK2aNl+4re/7i+WNSsjpsSdJa6tXozg7CtvAFVlPv9vN+sRW+9X1rXns5+LSj2p+WroObhq9nip/fcH4+sUdAZ366SyzWdtbvjW9MfPCZ+f1pLXmfuW917GFu0+stcP/9Znk0v7R88eDvx2zcEvaGf6XC0uEvpa6cCEa70osen2e/K8GG+fIhuwL4Pn1aP3RAm98mopvfbHX0M5YFr3Q2Q3vHvq7419+L1yVP/or4yzZ5vmSt+3YtmF7j5EdN2DLvCnBKGyeQVMM+Psj3crtIT9UL8e3qREuJp00zVmUuOYhwoV1vylqQWJxEERDxHFHNz7jVso1s26pWOXSt3L6xLwzLMntE2ao2GXa3ZOQdtUOxB7ER0SqQvybKb/vkeIA4dBtSDWEujBM+Aqd9Y7CKOFJcOxOOIKINRJFjcr/OEYf42CdkrwwHyU7s+ictvqnIT8Vt6G7enHOJd5q7sMPcAMJkTkPQu+5uJBmdcpGKB0oQHZilFJQqJGACx5GCnbNVtnZFwHoAEqoeRlwRQms/mWWJ0tvkvawizTDq4HGXv7suw9r/lGRA6HpEKTMZyAaKKcGAEWXkgXwdc3Q44N99OPCKfl0gnjwneINn99NElsj2KFhERvXSGL2aOu1A/+vrnm/o3oPT9fBSOvJRsuc1nqRgPgjxaeTUXqLQoJWmaZPWrSWKMhXld8KOpDwEngt3Wo+gPUL0woR81XArUe54L+S6+hM/okCMOoeg2JTsesVkMgcnNwhWvZHXs2rLjUuSNw4ofknUCsYBIxN/uKNjBUk+I78TfMoo/Aj9ka8uPiFOsE5xQX57kGFl/0RQ4EmaJ4L0o3jZ+yMAh57vCIskFFi66aZJw+PqLIgmtqSKMo4Ryt6tmgm2SzXDy9RycD6VPZjIif5/MK/blZH7sXw8F3YVILXTJfytrJGsXDKpcADIsTXUlFk3hnPpbpP4OcI/XTaNh9i7rVathNLoFr9uNRqVRs4oE7kTS+iT+LNnK6f57aP0F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F951091FE864909DE0401F0A05993974</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F951091FE864909DE0401F0A05993974</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950D2083C572DB4E0401F0A07995675</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950D2083C572DB4E0401F0A07995675</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083657</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950D2083C582DB4E0401F0A07995675</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_08371</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_08371</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_08371</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSxyokgYRLVJAolG12Sy/A0stLZZwhuJs4EDsB+uvXDk0KlPawR0JCnoxnvrn4mzlnKAzKTpsxiDmJqOJ2m+oLNipQmVQrmm1ipFkmTLUJRlPNnlhGo2pD1Sp7quIyloBLGUeUN9WyYVqaYWumNTIMp1J17EapUraeVWUMMROmhUrJUJVVGFDmZG6bahJTJ0KMMIeiEJjDsTNs968doemgHJPaOt+gzBzGrRnnc0fXcckDDEGASzgK9XN9R+fcY86Q+BTxJIZ3nx5rqu93l8tlaVkpRbGvlw3D0I2GLnQ8RvxTtXWSXwbPpdNoc+4gGlGCUUDekATVBz6LPKUd+FFM+Cz8wrSpm4Y0rcEKa9i06KmqfzjI0B1paQdkzJDGZsjMjQ1gCjFQDMrvgdtUT4+r4ObuKEaUTaM4ZHvnf4MENIUgmoOnsTyyHN3xFg+kq3UO2HEpDhJGUriRbTJHGJhyF8OUrK4JE83nMSUrv7Ji4kfyLgP8L2U517exCuj6gex0iQ+M/5+abddrY2WMggRaveAK2aNl+4re/7i+WNSsjpsSdJa6tXozg7CtvAFVlPv9vN+sRW+9X1rXns5+LSj2p+WroObhq9nip/fcH4+sUdAZ366SyzWdtbvjW9MfPCZ+f1pLXmfuW917GFu0+stcP/9Znk0v7R88eDvx2zcEvaGf6XC0uEvpa6cCEa70osen2e/K8GG+fIhuwL4Pn1aP3RAm98mopvfbHX0M5YFr3Q2Q3vHvq7419+L1yVP/or4yzZ5vmSt+3YtmF7j5EdN2DLvCnBKGyeQVMM+Psj3crtIT9UL8e3qREuJp00zVmUuOYhwoV1vylqQWJxEERDxHFHNz7jVso1s26pWOXSt3L6xLwzLMntE2ao2GXa3ZOQdtUOxB7ER0SqQvybKb/vkeIA4dBtSDWEujBM+Aqd9Y7CKOFJcOxOOIKINRJFjcr/OEYf42CdkrwwHyU7s+ictvqnIT8Vt6G7enHOJd5q7sMPcAMJkTkPQu+5uJBmdcpGKB0oQHZilFJQqJGACx5GCnbNVtnZFwHoAEqoeRlwRQms/mWWJ0tvkvawizTDq4HGXv7suw9r/lGRA6HpEKTMZyAaKKcGAEWXkgXwdc3Q44N99OPCKfl0gnjwneINn99NElsj2KFhERvXSGL2aOu1A/+vrnm/o3oPT9fBSOvJRsuc1nqRgPgjxaeTUXqLQoJWmaZPWrSWKMhXld8KOpDwEngt3Wo+gPUL0woR81XArUe54L+S6+hM/okCMOoeg2JTsesVkMgcnNwhWvZHXs2rLjUuSNw4ofknUCsYBIxN/uKNjBUk+I78TfMoo/Aj9ka8uPiFOsE5xQX57kGFl/0RQ4EmaJ4L0o3jZ+yMAh57vCIskFFi66aZJw+PqLIgmtqSKMo4Ryt6tmgm2SzXDy9RycD6VPZjIif5/MK/blZH7sXw8F3YVILXTJfytrJGsXDKpcADIsTXUlFk3hnPpbpP4OcI/XTaNh9i7rVathNLoFr9uNRqVRs4oE7kTS+iT+LNnK6f57aP0F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F951091FE864909DE0401F0A05993974</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZZb+o6EH7vr4jSxypkYU1UkNJCjlJBF+BWbV8q40zAbWLT2GHpr792aCjQ5XKuhIQ8Gc98s/ibOecoTRzP5xwyQRjVwm5bf45RbE9QyzEgbjaNmmM3DAS2ZdhR1a1Nmna9OZnoWsh5DiHlAlHR1h3LrhlW3bBrY8vyqk3PcirVevNJ1+4h49K0VKlYurZKE8q9wm1bzzPqMcQJ9yhKgXsCeyN/0PekpodKTHrnfIOycJh1ZkLMPdPElQgwJAmuYJaa5+aeznnEvRGZUiTyDD58Rrytf9xdLpeVZbXCsqnpWJZlWq4pdSJOpqd656S8DFFIY7Y5XyLKKMEoIe9IgRqAmLFI85Mpy4iYpT+Ytk3bUqYNWGED2zV6qpufDgp0R1raA5lxZPAZsktjQ4ghA4pB+2cYtvXT4yq4uTvOEOUxy1J+cP47SEAXkLA5RAYvIyvRHW/xm3R1zgF7IcVJzskCrlWbzBEGrt1mEJNVn3DZfBHXivJrKy5/pOwywH9TlnNzF6uEbn6TnS6ZAhf/p2a79dpYuUdJDp0oenVbKLi2H64E/tP3me3Wxy/VavDQaxcQdpU3oLbl/jgfNuu2tz4usS5+6i9dPhuaK8piMQ9WdmDCnzQbD/27oB7azm1gpaL13huPry7qr/ld7iZzq5aSsPkwGSTD7rQZrM5afv/+5ObRWU8b0eVy8GK93d7f5aP8KnzMavHd4DXAjSG9714Pg6z1ejUh9/nj7VnrmvzhradR5vcTpzF6un18eZneVLtrFp20Uj97SxfB+rG/PPPxdIJw+zOm3Rj2hSUljPLJC2BRHlV7hF0tkPVC4nd6URISGXGh6s0VR3EBVOgddUtRi5dLAiKRJ4u5OQdu3bYaTte3G73aRa/Zs2qWHVi+VXddp9VrlBy0QXEA8ZLRmChfimU3/fM7QJx6HGgEmbFgOZ4B13+x2EUCaSEdysfBKIcxkyxuwyJK0JrxlzRP3t33hhW/00nDsnXtmokbepP5sYBsn7qre9Q9BEzmBBS/qwbnssO5kLl4Q4tcJHZlgSoUcjkBMkXCnlNr1U1O0nkCCqmZsihPoDKfzYvMmHzz7xgI80I67I2Lh/djXIffyhRInYgoBa5iuQBZRvgygxpevQzk54AbuwGX5v08Iup9yXyKjOANkv1Pn22i+mPbIzKi58vRs13i3qofff3rTfMXUOZhPraOogXZcVsOUzkfJHt0ymq+ocpbJV8s8qJ+TcWMmTRvSoK0zRHgXNLbesxegZpbE+ZR02WL+sDzVr6PLxczOhJIQCq7TSuOR6wWI+BqtQjlM1kdu7fsuZR5E7AS38kuE7mBKMS/LinYw0pPim/l35Jl0We5vrG140fGKfcJQehUndQcWf/QFJhJs0QSH8t2jX9n4Dvn+8JtkrdYhOymSS7g5y+aYrS2jjBmORVhVy8Euyxb4BTrOXifSl/MFEz+MZpX/MfR/DDojyTfpUjf6pL/VjZI0S4YdLUBFFja+kpumtI5ne6w+gfAL8Tu2kGv1ai5ltvdJfaq26xtE7gXSeeL+KtkJ6eH76HzLw==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F951062DA16E4BE7E0401F0A059928E6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F951062DA16E4BE7E0401F0A059928E6</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_08371</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F951062DA16F4BE7E0401F0A059928E6</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f5f8feae-2fe1-43ec-98ca-c798916c5e2a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9425e0d2-3955-45c0-bfbd-0ab1072867c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00044_FUNC_UVTC_UserName_RequestorUser_any_status_RequesteeUser_any_and_blocked_ValidateEmail_Role_RET_CS_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+o6EP7ur+jUj2dK0tIW6AgzKKIoIgLX4/GLE9MAwTYpTQror79JsQj4cjl3xpHJdrP77Eue3ROB4sgJmkKQVFLOjE6rbj65pFImGIaW67kVy31W/56ffdcKa77j+y6BVdc3jY4QGekwIRGTddOBtmtBz7LdEYRBuRJAvwRt+9E07kkqlGmlUoKmsYojJoLcbd3MUhZwJKgIGIqJCCQOhs2bbqA0A1RgMhsna5S5w7QxlTIJAMClkGASRbiEeQxOwI7OSSiCIZ0wJLOUvPsMRd18v7tcLkvLcomnE+BACAGsAaUTCjo5NhtHxWUSdtiYr89niHFGMYroG9Kgboic8tBoRhOeUjmNvzFtAxtq0xZZYQvbLjs2wYeDHN2BlnZApgJZYorswtiAjElKGCbGP4NO3Tw+rILru6MUMTHmaSz2zn8HibAFiXhCQksUkRXoDrf4RboaJwQHHYajTNAF6ek2SRAmwuinZExXXSpU84XCyMtvrIT6o0WXEfw3ZTkB21gVdPBFdlp0QoT8PzXbrtfayj2KMtLo/erPXm/fnKXP7sO2qIbVK/cZVE/73Wo9h7CtvAa1Kff7eb9ZN731fqnFJ2GSjGVZzP10cfV21+fXL7/LWatS7mZ8zB49BlpI1Ny3x7mPZlWPXvWXaDQanV5e9Mh4Oho0e6/Dh1+z5gU4GlLI6cxDD+mt64E/8CK5yzy3E4b3sz8tURMRc397Tg+/XLenFfT48Bgl/aj7Qi+zCLVrQ8+/A9OLN/ts3OxeH83iy/bdNLmm5ev4anmDB/Kl/hHTdgy7woIShtnzjGBZHHV7dFpGW9ULyZ/pRUtoaI1z1SDRHCUkYdJs6FuaWoJMERANA1XM9bld86BTbrXb9mnl/NxxzqEL7TZswkqtBl27WXDQGsUexDPOxlT70iy77p+fAeI4EISFJLUWPMNTIswfLLaQREaHDdTj4EyQEdcs7s1xDUZsxuZZOHNWFRhlK+ph0+hxectu0+ZYknSXucs7zD0gmCaUaHrX/S1UgwupUjFHi0xGdmmBSoxkagCkmoMDx616QNA4iYgGCmIeZhEpJdMkTwwQ61/HQljk0sH5KH9334a1/63IgNIJqVYQOpZToqpIPo0gP/CKQL4P2N8OuDDfzEKqn5dKp0wpXiPZ/fTRJbo9Ni2iIno6Gz7ZBe6N+sHXP98EP4AC+/nYOAoXdMttMUvVeFDk0SiqOUeleSlbLLK8fhVNjKkyDxQ/2mBIcKbY7XXEXwgDGxPgoOGyQb3neSPfxZfJKRtKJEmsus3IjwdsFkMi9GbRUa9kdejasuNS5U2SlfxKdhapBUQj/nFHwQHWekrcVz9LnoYf5frC1pYfFadaJyRlE33SY+T1m6bAXJmlivd4um38KwNfOd8VbpK8wSJVNz1nknz/xdCEVjcRxjxjstMyc8E2yeY45WtCgg+lT2ZyIn+fzCvx7WR+uOkOFd3FyNzo0v9WtmjeLpiYegHIsdTNlVo0lXM22SL1d4D7vN5yYLV8Vq06rVN3m9c9v+JtErgTSeOT+LNkK6f776HxLw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950D2083C882DB4E0401F0A07995675</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950D2083C882DB4E0401F0A07995675</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95023DFF1B7EE22E0401F0A0799041A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95023DFF1B7EE22E0401F0A0799041A</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_08374</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95023DFF1B8EE22E0401F0A0799041A</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_08377</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_08377</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_08377</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+o6EP7ur+jUj2dK0tIW6AgzKKIoIgLX4/GLE9MAwTYpTQror79JsQj4cjl3xpHJdrP77Eue3ROB4sgJmkKQVFLOjE6rbj65pFImGIaW67kVy31W/56ffdcKa77j+y6BVdc3jY4QGekwIRGTddOBtmtBz7LdEYRBuRJAvwRt+9E07kkqlGmlUoKmsYojJoLcbd3MUhZwJKgIGIqJCCQOhs2bbqA0A1RgMhsna5S5w7QxlTIJAMClkGASRbiEeQxOwI7OSSiCIZ0wJLOUvPsMRd18v7tcLkvLcomnE+BACAGsAaUTCjo5NhtHxWUSdtiYr89niHFGMYroG9Kgboic8tBoRhOeUjmNvzFtAxtq0xZZYQvbLjs2wYeDHN2BlnZApgJZYorswtiAjElKGCbGP4NO3Tw+rILru6MUMTHmaSz2zn8HibAFiXhCQksUkRXoDrf4RboaJwQHHYajTNAF6ek2SRAmwuinZExXXSpU84XCyMtvrIT6o0WXEfw3ZTkB21gVdPBFdlp0QoT8PzXbrtfayj2KMtLo/erPXm/fnKXP7sO2qIbVK/cZVE/73Wo9h7CtvAa1Kff7eb9ZN731fqnFJ2GSjGVZzP10cfV21+fXL7/LWatS7mZ8zB49BlpI1Ny3x7mPZlWPXvWXaDQanV5e9Mh4Oho0e6/Dh1+z5gU4GlLI6cxDD+mt64E/8CK5yzy3E4b3sz8tURMRc397Tg+/XLenFfT48Bgl/aj7Qi+zCLVrQ8+/A9OLN/ts3OxeH83iy/bdNLmm5ev4anmDB/Kl/hHTdgy7woIShtnzjGBZHHV7dFpGW9ULyZ/pRUtoaI1z1SDRHCUkYdJs6FuaWoJMERANA1XM9bld86BTbrXb9mnl/NxxzqEL7TZswkqtBl27WXDQGsUexDPOxlT70iy77p+fAeI4EISFJLUWPMNTIswfLLaQREaHDdTj4EyQEdcs7s1xDUZsxuZZOHNWFRhlK+ph0+hxectu0+ZYknSXucs7zD0gmCaUaHrX/S1UgwupUjFHi0xGdmmBSoxkagCkmoMDx616QNA4iYgGCmIeZhEpJdMkTwwQ61/HQljk0sH5KH9334a1/63IgNIJqVYQOpZToqpIPo0gP/CKQL4P2N8OuDDfzEKqn5dKp0wpXiPZ/fTRJbo9Ni2iIno6Gz7ZBe6N+sHXP98EP4AC+/nYOAoXdMttMUvVeFDk0SiqOUeleSlbLLK8fhVNjKkyDxQ/2mBIcKbY7XXEXwgDGxPgoOGyQb3neSPfxZfJKRtKJEmsus3IjwdsFkMi9GbRUa9kdejasuNS5U2SlfxKdhapBUQj/nFHwQHWekrcVz9LnoYf5frC1pYfFadaJyRlE33SY+T1m6bAXJmlivd4um38KwNfOd8VbpK8wSJVNz1nknz/xdCEVjcRxjxjstMyc8E2yeY45WtCgg+lT2ZyIn+fzCvx7WR+uOkOFd3FyNzo0v9WtmjeLpiYegHIsdTNlVo0lXM22SL1d4D7vN5yYLV8Vq06rVN3m9c9v+JtErgTSeOT+LNkK6f776HxLw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950D2083C882DB4E0401F0A07995675</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0Tp41FIAoRLVJAolBY2vWygVduXynWGxN2JA7YToF9/7NCkQGkP+0hIyJPxzJqL18wZR1FYdjucAxMkptqg19JfUBk79QbYBlRsy6hWsGM0a5ZtIA/beIabr7N6Q9cGnCcwoFwgKlp62bKrhuUYdnVqWW6l7lrNkl2tP+vaAzAuTUuVkqVrqyik3M3ctvSEUTdGnHCXogi4K7A76VyPXKnpohyT3j7boMwcsnYgxNw1TVzyAEMY4hKOI/PM3NE587g7IT5FImHw4dPjLf3j7nK5LC0rpZj5ZtmyLNNqmlLH48Q/1dsn+WXwBnQWb85dRGNKMArJO1KgrkEEsad1Qj9mRATRN6Zt07aUaQNW2MB2lZ7q5qeDDN2RlnZAMo4MHiA7NzaGGTCgGLT78aClnx5Xwc3dKUOUz2IW8b3z30ECmkIYz8EzeB5Zju54iwfS1T4D7A4oDhNOUrhRbTJHGLh2x2BGViPCZfN5XMvKr624/JG8ywD/TVnOzG2sErp5IDs94gMX/6dm2/XaWHlAYQLtq/PpsD4YTgT5PaqDOY/epjEbLzpvXdzKIGwrb0AV5f447zdr0Vsflx78S9QI0v69eL+/8HBam15AFKR3/N1PH33K7R5zzldWVBH/rH3/KRhfO2FniNFr83qBR/fOG5iWKPfrabTkJ/ZdbR2x51tv7QfDp+gBj2qT9+lk6ZH3DgqDJ+dZLPvVProcWt1F7dcjmFe3aDRxgnIwe2w+jqJ1uJ5ersbiJr456VLH+b0ejq6GNd5LLuPl45/WZ0zbMewKc0qYJK9vgEV+VO0x6Gl9WS8kfqYXJSGeMctU3bniKC6ACr2tbilqcRNJQMRzZTE3537TsXplq9awak27Uu1fWFXL7lsdy2k2y/Wuk3PQBsUexG5MZ0T5Uiy76Z+fAeLI5UA9YEYaJzgArv9gsYcE0gZ0LB9HTDlMY8ni9mLdwPZiGcwWK2aH7HVO56+rOq5hXbuJxS29ZZ2ZALbL3ZUd7h4DJnMCiuBVh3PZ4lzIZCxQmojQLqWoRCGRI4ApFnbL1YZjchLNQ1BQzSj2khBK82Cepcbkm/+ygTDPpOOLafbyvg1s/1ueA6njEaXAVSznIOsIX4ZQzXXyQL4PuLYdcG6+k3hEPTCZUMEI3iDZ/fTZJ6pBiiaREb10Jy92jrtQP/r615vmD6DM/XwUjryUbLnNp6kcEJI+2nk1F6i0KCVpmmT1qytqZNK8KRnSNieAE8lv62n8B6hZmDCPGi8F6j3PhXwXXyICOhFIQCS7TcuOR+wWE+BqtxjId7I6dnHZcSnzJmAlDsm6oVxBFOIftxTsYqUnxXfybxkz77NcB2xt+ZFxyoVCEOqrkxok62+aAsfSLJHMF7Nt44cMHHK+KyySXGARspteEwHff9EUpbV0hHGcUDHo6Zlgm2YznGI9B/dT6YuZjMo/ZvOKfzubH69HE0l4EdILXfLfygbJ2gWDrlaADEtLX8lVUzqn/hatfwA8wOyNSrfRKPfOqwWz15tNp1YvmH03kvYX8VfJVk7330P7Xw==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950D2068069134FE0401F0A059927C5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950D2068069134FE0401F0A059927C5</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_08377</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950D206806A134FE0401F0A059927C5</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f5f8feae-2fe1-43ec-98ca-c798916c5e2a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9425e0d2-3955-45c0-bfbd-0ab1072867c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00045_FUNC_UVTC_UserName_RequestorUser_any_status_RequesteeUser_any_and_other_than_active_pending_or_blocked_ValidateEmail_Role_RET_CS (Negative)_400_BADREQUEST_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","deleted");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","USER_STATUS_NOT_VALID");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZrU+o8EP7ur+jUj05peqHYjjCDoB68oAJejl+ckAaIp01qk3Lx15+k2AoIvpx3hhkm283us5c8uyccxpEdNDnHqSCMap12XX+FMBzVkGsZ/nAIDdd1Q8P3gGdAywuBN7TlZ6hrHc4z3KFcQCrqug0s1wBVw3IHAAROLbDsil31X3TtEadcmpYqFaBr8ziiPMjd1vUspQGDnPCAwhjzQKCg37y5DqRmAAtMeuNkiTJ3mDYmQiSBaaJKiBGOIlRBLDZPzDWdk5AHfTKmUGQp/vQZ8rr+eXc2m1VmToWlY9MGAJjAN6VOyMn4UG8cFJdx2KEjtjy3IGWUIBiRD6hA3WAxYaHWjMYsJWIS7zBtmRZQpg08RwayXHqom18OcnR7WloDmXJo8Am0CmM9PMIppghrD71OXT/cr4LLu4MUUj5iacw3zv8GCdMpjliCQ4MXkRXo9re4JV2NE4yCDkVRxskUd1WbJBBhrt2leETm14TL5gu5lpdfm3P5I0WXYfQvZTkxV7FK6OaW7LTJGHPxf2q2Wq+llUcYZbgR3f7mZCg+jsL2/QeL3cHDOLn1nGNYbdZzCKvKS1BluT/Pm81a9tbnpauX0U12+3gtxIMH3e4ljP1Bz+9a2UeCB6iHk8UxfkzZnL8ddZ67YGg/W88gvnm/al24/KMbx0ejKHviULQvTg8Wi+w2+pX1Lq4e71/8sPmLeWTgXl96/uRocfU2fpuhm+E7W/SefmVg2L17xLXW5BT1p923J/OiN+WzJAY0/v3ycOccXKJz/96ZUtqbnF3dT8kzZ/WvmFZjWBcWlNDPhm8YieKo2qPT1s5lvaD4mV6UhITGKFcNEsVRXGAq9Ia6paglyCQBkTCQxVyez/0qsO0zx6m1HKdqVc+AC6xz0AQ13weO0yo4aIliA2KL0RFRvhTLLvvnZ4AoDjimIU6NKcvQBHP9B4ttKKDWoT35OBjleMAki0/+jNKZPatVLeAl88U8gjMvci3JwV0mbult2hwJnK4zt7PG3D2MSEKwonfV31w2OBcyFe9wmonIqkxhheJMDoBUcXBgu8dVk5M4ibACasYszCJcSSZJnhiTL/9tAyKeS3tng/zd7Qxr81uRAakTEqXAVSynWFYRbxlBoAhkd8DeasCF+WYWEvW8ZDpFStASyfqnry5R7VG2iIzotdV/tQrcpfre17/fNH8AZW7mo3QUTsmK22KWyvEgyaNRVPMdVt4r2XSa5fWrKWJMpXlT8qNl9jHKJLstBuwPpmZpwtxruJSoNzyX8nV8mZjQvoACx7LbtPy4x2bRx1xtFh35Sub7ri1rLmXeBJ6LbbJWJBcQhfjHHQUFSOlJ8Z38m7E0/CrXFlsrfmSccp0QhI7VSY2RxY6mQEyaJZL3WLpqfJuBbc7XhWWSSyxCdtMwE3j3F00RWl2HCLGMik5bzwWrJJvjFIsEB19K38zkRP45med852R+vrnuS7qLoV7qkv9WNkjeLgjragHIsdT1uVw0pXM6XiH1T4AbvG4B32575+Cs6bnHJa9Xfd/xa6BM4FokjW/i75KVnG6+h8Zf</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F951092D6F0EA648E0401F0A05993970</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F951092D6F0EA648E0401F0A05993970</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95022E337C33515E0401F0A0799033C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95022E337C33515E0401F0A0799033C</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083711</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95022E337C43515E0401F0A0799033C</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083714</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083714</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083714</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZrU+o8EP7ur+jUj05peqHYjjCDoB68oAJejl+ckAaIp01qk3Lx15+k2AoIvpx3hhkm283us5c8uyccxpEdNDnHqSCMap12XX+FMBzVkGsZ/nAIDdd1Q8P3gGdAywuBN7TlZ6hrHc4z3KFcQCrqug0s1wBVw3IHAAROLbDsil31X3TtEadcmpYqFaBr8ziiPMjd1vUspQGDnPCAwhjzQKCg37y5DqRmAAtMeuNkiTJ3mDYmQiSBaaJKiBGOIlRBLDZPzDWdk5AHfTKmUGQp/vQZ8rr+eXc2m1VmToWlY9MGAJjAN6VOyMn4UG8cFJdx2KEjtjy3IGWUIBiRD6hA3WAxYaHWjMYsJWIS7zBtmRZQpg08RwayXHqom18OcnR7WloDmXJo8Am0CmM9PMIppghrD71OXT/cr4LLu4MUUj5iacw3zv8GCdMpjliCQ4MXkRXo9re4JV2NE4yCDkVRxskUd1WbJBBhrt2leETm14TL5gu5lpdfm3P5I0WXYfQvZTkxV7FK6OaW7LTJGHPxf2q2Wq+llUcYZbgR3f7mZCg+jsL2/QeL3cHDOLn1nGNYbdZzCKvKS1BluT/Pm81a9tbnpauX0U12+3gtxIMH3e4ljP1Bz+9a2UeCB6iHk8UxfkzZnL8ddZ67YGg/W88gvnm/al24/KMbx0ejKHviULQvTg8Wi+w2+pX1Lq4e71/8sPmLeWTgXl96/uRocfU2fpuhm+E7W/SefmVg2L17xLXW5BT1p923J/OiN+WzJAY0/v3ycOccXKJz/96ZUtqbnF3dT8kzZ/WvmFZjWBcWlNDPhm8YieKo2qPT1s5lvaD4mV6UhITGKFcNEsVRXGAq9Ia6paglyCQBkTCQxVyez/0qsO0zx6m1HKdqVc+AC6xz0AQ13weO0yo4aIliA2KL0RFRvhTLLvvnZ4AoDjimIU6NKcvQBHP9B4ttKKDWoT35OBjleMAki0/+jNKZPatVLeAl88U8gjMvci3JwV0mbult2hwJnK4zt7PG3D2MSEKwonfV31w2OBcyFe9wmonIqkxhheJMDoBUcXBgu8dVk5M4ibACasYszCJcSSZJnhiTL/9tAyKeS3tng/zd7Qxr81uRAakTEqXAVSynWFYRbxlBoAhkd8DeasCF+WYWEvW8ZDpFStASyfqnry5R7VG2iIzotdV/tQrcpfre17/fNH8AZW7mo3QUTsmK22KWyvEgyaNRVPMdVt4r2XSa5fWrKWJMpXlT8qNl9jHKJLstBuwPpmZpwtxruJSoNzyX8nV8mZjQvoACx7LbtPy4x2bRx1xtFh35Sub7ri1rLmXeBJ6LbbJWJBcQhfjHHQUFSOlJ8Z38m7E0/CrXFlsrfmSccp0QhI7VSY2RxY6mQEyaJZL3WLpqfJuBbc7XhWWSSyxCdtMwE3j3F00RWl2HCLGMik5bzwWrJJvjFIsEB19K38zkRP45med852R+vrnuS7qLoV7qkv9WNkjeLgjragHIsdT1uVw0pXM6XiH1T4AbvG4B32575+Cs6bnHJa9Xfd/xa6BM4FokjW/i75KVnG6+h8Zf</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F951092D6F0EA648E0401F0A05993970</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZtU+o6EP7ur+jUj05pSwvYjjCD4ktHUa+AL/fLmZAuEGmT0qS8nF9/kmIrIHo5d8YZzHaz++xLnt0zjuKo6rc5h1QQRrWg09R/DYcjp3Za8wzLshqG6w6rhgd23ajaI2w7oYWqjqtrAecZBJQLREVTr1q2a1g1w3b7luU7Dd+uVVzb+1fXniHl0rRUqVi6towjyv3cbVPPUuozxAn3KYqB+wL7vXb3zpeaPiow6a2zNcrcYdqaCJH4pokrIWCIIlzBLDbPzC2ds5D7PTKmSGQpfPgMeVP/uLtYLCoLp8LSsVmVMZqWZ0qdkJPxsd46Ki5DGNARW58vEGWUYBSR30iB6oKYsFBrR2OWEjGJvzFtm7alTBuwxAa2XXqsm58OcnQHWtoCmXJk8AmyC2NPMIIUKAZt8BQ09ePDKri+208R5SOWxnzn/HeQgM4hYgmEBi8iK9AdbnFPulpngP2A4ijjZA73qk0ShIFrjymMyPKOcNl8Idfy8mtLLv9I0WWA/6YsZ+YmVgnd3JOdDhkDF/+nZpv1Wlt5RlEGLVRfxfOg/5Deme8DuODxid0P773bOe02cwibymtQZbk/zrvNWvbWx6VuJOzBTfLyiFfXj+hycX5Dl42XyXD22kZhkk5enNdHmozq80bsXr85NnqvNR7ptNPvZjw4v6bnbke8X69e2y/L4dH5vfuc8inczLJ4BahHb5btmvt29XKzuJ/dBc6FhyfZ8DS6Dpx+lp23B/WVM0iZWb9ZjV+G/9x2vJU9fb71xtElO3qLb3tsNrBPhidPQrB7/jZofsa0GcO2sKCEXjZ8ByyKo2qPoKNdyXoh8TO9KAkJjVGu6ieKo7gAKvSWuqWoxc8kAZHQl8Vcn6+8mlW1q23LvnIuHdu9tFz5r9W2Gp5n1U7rBQetUexAvGB0RJQvxbLr/vkZII59DjSE1JizDE+A6z9Y7CCBtIA+ycfBKIc+kyxuD8PpHJEq2Ctv2qCN3yFQGE8TXbtn4oE+pO2RgHSbuZ0t5n4CTBICit5Vf3PZ4FzIVMzQPBORXZmjCoVMDoBUcbBfdU9rJidxEoECasYszCKoJJMkT4zJ179VA2GeS58u+/m7+zas3W9FBqROSJQCV7Gcg6wi7BlBVhHI9wHXNwMuzLezkKjnJdMpUoLXSLY/fXaJao+yRWREvy56v+wCd6l+8PWvN80fQJm7+SgdhXOy4baYpXI8SPJoFdWcocqsks3nWV6/hiLGVJo3JT/aZg9wJtlt1WdToGZpwjxouJSodzyX8m18mZjQnkACYtltWn48YLPoAVebRSBfyfLQtWXLpcybgKXYJ7uI5AKiEP+4o2AfKz0pfpQ/C5aGn+XaY2vDj4xTrhOC0LE6qTGy+qYpMJNmieQ9lm4a32dgn/NtYZnkEouQ3TTMBHz/RVOE1tQRxiyjIujouWCTZHOcYpWA/6n0xUxO5B+Tecm/ncyv3buepLsY6aUu+W9lg+TtgkFXC0COpakv5aIpndPxBql/ANzhddvyqp36lXXZrrunJa/XPM/xGlaZwK1IWl/EXyUbOd19D60/</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950212A01F3E314E0401F0A07990586</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950212A01F3E314E0401F0A07990586</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083714</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950212A01F4E314E0401F0A07990586</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f5f8feae-2fe1-43ec-98ca-c798916c5e2a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9425e0d2-3955-45c0-bfbd-0ab1072867c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00046_FUNC_UVTC_UserName_RequestorUser_any_status_RequesteeUser_any_and_active_UnlockMe_Role_RET_CS_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4jxljGTAXT2CGEGhpCeQATS8vHSGvQcWWHEsGk19/JBMTICSHnhlmGK1Xu99e9O1eCxyFZa8jBCSScmYMblvmbwcqlVpj7ltVv1Gxqk7VteZBrWL5pEKCGsZQBd80BkKkMGBCYiZbZhk5VQu5llOdIeRV6p7TKDVR/ZdpPEAilGmlUkKmkUUhE17utmWmCfM4FlR4DEcgPEm8aedu6ClNDxeYzPb1DmXuMGkvpYw92yYlHwiEISkRHtnX9pHOtS+8KV0wLNMEnn36omU+391sNqVNpcSThV1GCNmoaSsdX9DFR7P9obgM/oAFfHfuYsYZJTikT1iDugO55L7RCRc8oXIZvWHasR2kTVuQEYs4VfbRtF8c5OgutHQEMhHYEkvsFMYmEEACjIDxbTJomR8vq+Du7izBTAQ8icTJ+e8gAVtDyGPwLVFEVqC73OKZdLWvgXgDRsJU0DWMdJvEmIAw7hMIaDakQjWfL4y8/EYm1I8WXQbkb8pybR9iVdDtM9m5pQsQ8v/U7LBeOysPOEyhzUPY9kaDevaAhjcDlEFExJ19P+ZxtZVDOFTegdqX+/l82qz73nq+1B1HXRuP2ajb+PVluFmDeCjXO81kIe1Pj8gd81+rVfDDbsBj936WxnXWd5qLT/1//O/kO5uIuxTEj0D++dJ0n6ofbl03rl7x8t3n4R+6uoKbn0+Y21mtse2Qcf3zjC4nKzft39Ovj3zaoNO542yfpg8/kfN9xSrf6sN0ns1ro8ZPelX/YF/FiAvXFT2U9EbRAx41Wi8xHcZwLCwoYZrO/wCRxVG3x+DW6Kt6Yfk+vWgJ9a0gV/VizVFCApNmW9/S1OKlioCo76li7s79povKZVTrN7v13k231kNV5PRRB9WbTVTu3hQctENxArHLWUC1L82yu/55HyCJPAHMh8Ra85QsQZjvWLzFEhsDNlGPgzMBM65YnLks2frBZrMiqyCThKAUr1LN3CMux2ycdAIJyTFzV46YewKExhQ0vev+FqrBhVSpeMTrVIZOaY1LDFI1ABLNwV652nBtQaM4BA3UjrifhlCKl3GeGFvs/ssWJiKXTnqz/N29GdbptyIDSsenWkHoWG5AVRHOjCBUBPJ2wLXDgAvzndSn+nmpdMqEkh2S408vXaLbY98iKqLf3elvp8C9V7/4+uub9jug7NN87B35a3rgtpilajwo8mgX1XzEpcdSul6nef3qmhgTZd5W/OjYUyCpYrftjK+A2XsT9kXDZY/6xPNefowvlUs2lVhCpLrNyI8XbBZTEHqzGKhXkl26thy5VHmTkMlzsm6oFhCN+N0dhXhE6ynxvfrb8OQl8HO2DvyoONU6ISlb6JMeI9s3moJwZZYq3uPJofFzBs45Pxbuk7zHIlU3zVMJb38xNKG1TEwIT5kc3Jq54JBkc5xyG4P3ovTKTE7kz5M5E29O5h93w6miuwibe13638oWzduFgKkXgBxLy8zUoqmcs8UBqT8DPOF1B9XVQHRueh3UQ4e87rou2ifwKJL2K/FryUFOT99D+18=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F951077A91BEA0E0E0401F0A07995550</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F951077A91BEA0E0E0401F0A07995550</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F9502206F9C7EBC6E0401F0A079902CB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F9502206F9C7EBC6E0401F0A079902CB</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083717</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F9502206F9C8EBC6E0401F0A079902CB</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083720</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083720</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083720</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4jxljGTAXT2CGEGhpCeQATS8vHSGvQcWWHEsGk19/JBMTICSHnhlmGK1Xu99e9O1eCxyFZa8jBCSScmYMblvmbwcqlVpj7ltVv1Gxqk7VteZBrWL5pEKCGsZQBd80BkKkMGBCYiZbZhk5VQu5llOdIeRV6p7TKDVR/ZdpPEAilGmlUkKmkUUhE17utmWmCfM4FlR4DEcgPEm8aedu6ClNDxeYzPb1DmXuMGkvpYw92yYlHwiEISkRHtnX9pHOtS+8KV0wLNMEnn36omU+391sNqVNpcSThV1GCNmoaSsdX9DFR7P9obgM/oAFfHfuYsYZJTikT1iDugO55L7RCRc8oXIZvWHasR2kTVuQEYs4VfbRtF8c5OgutHQEMhHYEkvsFMYmEEACjIDxbTJomR8vq+Du7izBTAQ8icTJ+e8gAVtDyGPwLVFEVqC73OKZdLWvgXgDRsJU0DWMdJvEmIAw7hMIaDakQjWfL4y8/EYm1I8WXQbkb8pybR9iVdDtM9m5pQsQ8v/U7LBeOysPOEyhzUPY9kaDevaAhjcDlEFExJ19P+ZxtZVDOFTegdqX+/l82qz73nq+1B1HXRuP2ajb+PVluFmDeCjXO81kIe1Pj8gd81+rVfDDbsBj936WxnXWd5qLT/1//O/kO5uIuxTEj0D++dJ0n6ofbl03rl7x8t3n4R+6uoKbn0+Y21mtse2Qcf3zjC4nKzft39Ovj3zaoNO542yfpg8/kfN9xSrf6sN0ns1ro8ZPelX/YF/FiAvXFT2U9EbRAx41Wi8xHcZwLCwoYZrO/wCRxVG3x+DW6Kt6Yfk+vWgJ9a0gV/VizVFCApNmW9/S1OKlioCo76li7s79povKZVTrN7v13k231kNV5PRRB9WbTVTu3hQctENxArHLWUC1L82yu/55HyCJPAHMh8Ra85QsQZjvWLzFEhsDNlGPgzMBM65YnLks2frBZrMiqyCThKAUr1LN3CMux2ycdAIJyTFzV46YewKExhQ0vev+FqrBhVSpeMTrVIZOaY1LDFI1ABLNwV652nBtQaM4BA3UjrifhlCKl3GeGFvs/ssWJiKXTnqz/N29GdbptyIDSsenWkHoWG5AVRHOjCBUBPJ2wLXDgAvzndSn+nmpdMqEkh2S408vXaLbY98iKqLf3elvp8C9V7/4+uub9jug7NN87B35a3rgtpilajwo8mgX1XzEpcdSul6nef3qmhgTZd5W/OjYUyCpYrftjK+A2XsT9kXDZY/6xPNefowvlUs2lVhCpLrNyI8XbBZTEHqzGKhXkl26thy5VHmTkMlzsm6oFhCN+N0dhXhE6ynxvfrb8OQl8HO2DvyoONU6ISlb6JMeI9s3moJwZZYq3uPJofFzBs45Pxbuk7zHIlU3zVMJb38xNKG1TEwIT5kc3Jq54JBkc5xyG4P3ovTKTE7kz5M5E29O5h93w6miuwibe13638oWzduFgKkXgBxLy8zUoqmcs8UBqT8DPOF1B9XVQHRueh3UQ4e87rou2ifwKJL2K/FryUFOT99D+18=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F951077A91BEA0E0E0401F0A07995550</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZtU+o6EP7ur+jUj05pUyjajjBTQT31/QB6Hb84MU0hnjaBJC3VX3+TYhEQvZw7wwyT7Wb32Zc8u8cCZqkbhEJgLgmjRtTvmM+HECQQoaYF3RdktXwELB950DpKfADazXbcdlumEQmR44gKCansmK4DWpbjWaA1cpygeRi4bgO0jp5M4wFzoUwrlYZjGmWWUhFUbjtmzmnAoCAioDDDIpAoGIbXV4HSDGCNyeweL1BWDnl3IuU0sG3UiDHCaYoaiGX2sb2mcxyLYEjGFMqc4w+fseiYH3fn83lj3mwwPrZdx3Fsx7eVTizIeN/s7tWXcRzRhC3OPUgZJQim5B1qUNdYTlhshOmYcSIn2TemgQ0cbdrCJbIQaNF90/50UKHb0dIaSC6gJSYQ1MYGOMEcU4SN+0HUMfd3q+Di7ohDKhLGM7Fx/jtImBY4ZVMcW6KOrEa3u8Ut6eoeYxREFKW5IAW+0W0yhQgL447jhJRXRKjmi4VRld8ohfqRussw+puyHNurWBV0e0t2+mSMhfw/NVut18LKA0xz3H0A7/3h3ePEKQ7ABfBvPcgYYu+P9C3qVBBWlRegluX+OG8267K3Pi49oHwczm8u/vxzeQVvonlmx7c4nru/5k5+2SztI5HNQTiVs7PR+Dc5RfML/+Ep82jCn0b8Ut4PhujFHv6eeB7J9gC88AeDaHbP0eO766flCLRmvZOXu/T8Ts5+Tc9z0htEiTxoFWF8fjF4daUcXCYHcZOMjgpAni7D/BaF3H08ut5L2WV5/TK58L0yK2fghmKn8xnTagzrwpoShvnLK0ayPur2iPrGmaoXlD/Ti5aQ2Eoq1WCqOUpITKXZ1bc0tQS5IiASB6qYi/OZ7zl912k3Qej0vL5z6rQccOaEzqHve+32Sc1BCxQbEHuMJkT70iy76J+fAaIsEJjGmFsFy9EEC/MHi30ooRHRgXocjAo8YorFAeSx2x6zyWuZzxPUKmLf94s34pnGDZO39JaHicR8nbqba9Q9wIhMCdb8rhtcqA4XUuViBotcpqBRwAbFuZoAXJNw4LaOPFuQbJpijdTOWJynuDGdTKvM2GLx71oQiUo6OB1VD+/buDa/1SlQOjHRCkLHcoJVGfGWGQTqQL4PuL0acG0+zGOi35fKp+QELZCsf/psE90fyx5RET33hs+gxr1U3/n615v2D6DszXwsHcUFWXFbD1M1HxR7dOtqzmBj1siLIq/qd6iZkSvztiJIYA8xyhW9vY3YH0ztpQl7p+myRL3heSlfx5fLCR1KKHGmus2ojjusFkMs9GoRqWdS7rq3rLlUeZO4lNtkvVRtIBrxj0sKCpDWU+I79TdnPP4s1xZbK35UnGqfkISO9UnPkbdvmgIxZZYo4mN81fg2A9ucrwuXSV5ikaqbXnKJv/9iaEbrmCq1LKcy6puVYJVlK5zybYqDT6UvZiom/xjNpfh2ND9eXw0V32XQXOqS/1a2SNUuCJt6A6iwdMxSbZrKOR2vsPoHwA1iB87hYeiDk9NQ0foasXues0zgWiTdL+KvkpWcbr6H7r8=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950D20631A0C5D0E0401F0A0799566B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950D20631A0C5D0E0401F0A0799566B</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083720</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950D20631A1C5D0E0401F0A0799566B</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f5f8feae-2fe1-43ec-98ca-c798916c5e2a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00047_FUNC_UVTC_UserName_RequestorUser_any_status_RequesteeUser_any_and_pending_UnlockMe_Role_RET_CS_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","pending");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4jx3jC8ZgT2CGAGlokoZb05O8dIS8GKW2DJLMpb/+SCZ2gJAcemaYYbRe7X570bd7wVESO0Gbc2CCpFTrd5v6rxCQP6sjzwDUcA13GtYNBPWZgXDVtrzQAlxFutbnPIM+5QJR0dQdy3YNq2bY7sSygmo9cNyK73tPuvYAjEvTUqVi6domiSkPcrdNPWM0SBEnPKAoAR4IHIzbd7eB1AxQgUlvXexQ5g5Zay7EIjBNXAkBQxzjCk4T88I80LkIeTAmEUUiY/DiM+RN/eXuer2urKuVlEWmY1mWafmm1Ak5iT7rrU/FZQj7dJbuzh1EU0owiskfpEDdgZinodaOo5QRMU/eMW2btqVMG7DBBrZd+lk3Xx3k6M60dACScWTwObILYyOYAQOKQfsx6jf1z+dVcHd3whDls5Ql/Oj8d5CAriBOFxAavIisQHe+xRPpal0ADvoUxxknK/iu2mSBMHBtwGBGNreEy+YLuZaXX9tw+SNFlwH+m7JcmPtYJXTzRHa6JAIu/k/N9uu1s/KA4gxal2h7zQgWl95q5A6/XFNSHTyvx6tq0mjmEPaVd6DKcr+cj5u17K2XS2OzPVze3Vw7TwP7mS7dLLpml+JxOPLmNTuMyHrjVbehc0v9++ipN35cTlhn9fU23D63s/rwDg3NNf72eP2dJt/IJ9qr/3Qnje1a1Cw6uvrxcANe3KCP1ZuH+s9w8jQYOjfMSiyHPbbvvdvqly/ZcPOMEmvZfjZ/TNfTr2F89dSNetnN5tOT6YE/wLX7WfSHbN10sHGbrzHtx3AoLChhnE2fAYviqNqj39WuZL2Q+JhelISExixXDRaKo7gAKvSWuqWoJcgkAZEwkMXcna/8muU4nV631/Zsv+P1LNeyr6y2VfN9y/f8goN2KI4gdlI6I8qXYtld/3wMECcBBxoCM1ZphufA9Q8sdpFAWp+O5ONIKYdJKlk8WTNuTf3f9ZT9sRFx43kjWjXq01TXvqfint6z9kwAO6Tu6gF1jwCTBQHF76rBuexwLmQulmiVidiurFCFQiYnAFMkLO81aiYnySIGhdRM0jCLobKYL/LMmHz370ga4rl01JvkD+/duI6/FSmQOiFRClzFcgmyjHBiBtlFIO8H7O0HXJhvZyFR70vmU6i3mSM5/PTaJqo/yh6REf3qjH/ZBe5S/ezrb2+aH4Ayj/NROgpXZM9tMUzlfJDs0SqquUSVZSVbrbK8fnXFjEyaNyVB2uYYcCbpbTtJfwM1SxPmWdOlRH3kuZQf4svEnI4FEpDIbtPy4xmrxRi4Wi368plszt1bDlzKvAnYiFOyTiw3EIX4wyUFB1jpSfFA/q1TFr6W64StPT8yTrlPCEIjdVJzZPtOU+BUmiWS+FK2b/yUgVPOD4VlkkssQnbTNBPw/hdNMVpTRxinGRX9rp4L9lk2xym2Cwheld6YyZn8ZTRv+Luj+Z+727HkuwTppS75b2WD5O2CQVcbQI6lqW/kpimd02iP1V8AHhN717G8qt1xOrWuVRJ73fdrnndZJvAgktYb8VvJXk6P30PrXw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950D20631C2C5D0E0401F0A0799566B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950D20631C2C5D0E0401F0A0799566B</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95022CEDEA619C6E0401F0A05990969</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95022CEDEA619C6E0401F0A05990969</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083724</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95022CEDEA719C6E0401F0A05990969</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083726</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083726</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083726</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4jx3jC8ZgT2CGAGlokoZb05O8dIS8GKW2DJLMpb/+SCZ2gJAcemaYYbRe7X570bd7wVESO0Gbc2CCpFTrd5v6rxCQP6sjzwDUcA13GtYNBPWZgXDVtrzQAlxFutbnPIM+5QJR0dQdy3YNq2bY7sSygmo9cNyK73tPuvYAjEvTUqVi6domiSkPcrdNPWM0SBEnPKAoAR4IHIzbd7eB1AxQgUlvXexQ5g5Zay7EIjBNXAkBQxzjCk4T88I80LkIeTAmEUUiY/DiM+RN/eXuer2urKuVlEWmY1mWafmm1Ak5iT7rrU/FZQj7dJbuzh1EU0owiskfpEDdgZinodaOo5QRMU/eMW2btqVMG7DBBrZd+lk3Xx3k6M60dACScWTwObILYyOYAQOKQfsx6jf1z+dVcHd3whDls5Ql/Oj8d5CAriBOFxAavIisQHe+xRPpal0ADvoUxxknK/iu2mSBMHBtwGBGNreEy+YLuZaXX9tw+SNFlwH+m7JcmPtYJXTzRHa6JAIu/k/N9uu1s/KA4gxal2h7zQgWl95q5A6/XFNSHTyvx6tq0mjmEPaVd6DKcr+cj5u17K2XS2OzPVze3Vw7TwP7mS7dLLpml+JxOPLmNTuMyHrjVbehc0v9++ipN35cTlhn9fU23D63s/rwDg3NNf72eP2dJt/IJ9qr/3Qnje1a1Cw6uvrxcANe3KCP1ZuH+s9w8jQYOjfMSiyHPbbvvdvqly/ZcPOMEmvZfjZ/TNfTr2F89dSNetnN5tOT6YE/wLX7WfSHbN10sHGbrzHtx3AoLChhnE2fAYviqNqj39WuZL2Q+JhelISExixXDRaKo7gAKvSWuqWoJcgkAZEwkMXcna/8muU4nV631/Zsv+P1LNeyr6y2VfN9y/f8goN2KI4gdlI6I8qXYtld/3wMECcBBxoCM1ZphufA9Q8sdpFAWp+O5ONIKYdJKlk8WTNuTf3f9ZT9sRFx43kjWjXq01TXvqfint6z9kwAO6Tu6gF1jwCTBQHF76rBuexwLmQulmiVidiurFCFQiYnAFMkLO81aiYnySIGhdRM0jCLobKYL/LMmHz370ga4rl01JvkD+/duI6/FSmQOiFRClzFcgmyjHBiBtlFIO8H7O0HXJhvZyFR70vmU6i3mSM5/PTaJqo/yh6REf3qjH/ZBe5S/ezrb2+aH4Ayj/NROgpXZM9tMUzlfJDs0SqquUSVZSVbrbK8fnXFjEyaNyVB2uYYcCbpbTtJfwM1SxPmWdOlRH3kuZQf4svEnI4FEpDIbtPy4xmrxRi4Wi368plszt1bDlzKvAnYiFOyTiw3EIX4wyUFB1jpSfFA/q1TFr6W64StPT8yTrlPCEIjdVJzZPtOU+BUmiWS+FK2b/yUgVPOD4VlkkssQnbTNBPw/hdNMVpTRxinGRX9rp4L9lk2xym2Cwheld6YyZn8ZTRv+Luj+Z+727HkuwTppS75b2WD5O2CQVcbQI6lqW/kpimd02iP1V8AHhN717G8qt1xOrWuVRJ73fdrnndZJvAgktYb8VvJXk6P30PrXw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950D20631C2C5D0E0401F0A0799566B</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH1chF+5RQQJStpwtvZDSbvuycpwJuE0csB2g/Ppjh4YCpT3skZCQJ+OZby7+Zs44SmLH7XAOTJCUagOvpf9xwiCoWQ3HCEKoGhUHIqMZOcioIMcO7FqtEgWhrg04z2BAuUBUtHTHsiuGVTXsyp1lueW66zRKUvSka/fAuDQtVUqWrq2SmHI3d9vSM0bdFHHCXYoS4K7Art8ZXrpS00UFJr19tkGZO2TtqRAz1zRxKQQMcYxLOE3MM3NP5yzkrk8mFImMwZvPkLf0t7vL5bK0LJdSNjEdy7JMq2lKnZCTyXe9/a24DOGARunm3EM0pQSjmKyRAjUEMU1DrRNPUkbENPnEtG3aljJtwAob2K7Q77r57iBHd6KlPZCMI4NPkV0YG0EEDCgGbTwatPTvp1Vwc/eOIcqjlCX84Px3kIAuIE5nEBq8iKxAd7rFI+lqnwF2BxTHGScLuFJtMkMYuHbDICKrS8Jl84Vcy8uvrbj8kaLLAP9NWc7MXawSunkkOx6ZABf/p2a79dpYuUdxBu1l7/FXV/TC55en8i9iN/td85o9nWfzq9tWDmFXeQNqW+6382Gzbnvr7dJ4NDcJ492LZnDfH0697kXDW987v0P8tIDz2nhmkiqBMenbfPVQ9sOLn3R8xXu17vph1rmejIeiOycOY37Qefx2Ww0S1u8ub6H+GAQVC8d+dPNwnYynP9PbB0gf2Wjt9/ov9YeuT/pobTcG62p87+H0R/XHfSVpNrzfP6coqoPX/zbsBKPB1T/T0Hu9EGNiz+qPrfeYdmPYFxaU4GfBM2BRHFV7DDytL+uFxNf0oiQkNKJc1Z0pjuICqNDb6paiFjeTBERCVxZzc+43q7ZV71j9rlO16zX73KpYdt/qWPVms1qtdAoO2qA4gNhLaUSUL8Wym/75GiBOXA40BGYs0gxPgetfWPSQQNqAjuTjSCmHu1SyOIbXhArxsn6ev9hosl4+ByQqN4K5rl2l4ppes04kgO1Td3mPukeAyYyA4nfV4Fx2OBcyF3O0yERslxaoRCGTE4ApEnadSqNqcpLMYlBIzSQNsxhKs+ksz4zJN/+OgTDPpaPzu/zhfRrX4bciBVInJEqBq1i6IMsIR2aQXQTyecC13YAL850sJOp9yXwKRvAGyf6n9zZR/bHtERnRn57/xy5wb9VPvv7xpvkFKPMwH1tH4YLsuC2GqZwPkj3aRTXnqDQvZYtFltevrpiRSfOmJEjb9AFnkt5e79IXoObWhHnSdNmiPvC8le/jy8SU+gIJSGS3afnxhNXCB65Wi4F8JqtT95Y9lzJvAlbimKwXyw1EIf5yScEuVnpSfCP/lil7D/yYrR0/Mk65TwhCJ+qk5sjrJ02BU2mWSOJL2a7xYwaOOd8XbpO8xSJkNwWZgM+/aIrRWjrCOM2oGHh6Lthl2RyneJ2B+670wUzO5G+jecU/Hc2/h5e+5LsE6Vtd8t/KBsnbBYOuNoAcS0tfyU1TOqeTHVZ/A3hA7JbnWLWy3XN6Vc/aI/ZarbtN4F4k7Q/ij5KdnB6+h/a/</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F95107A0FB251761E0401F0A0799554A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F95107A0FB251761E0401F0A0799554A</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083726</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F95107A0FB261761E0401F0A0799554A</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f5f8feae-2fe1-43ec-98ca-c798916c5e2a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9425e0d2-3955-45c0-bfbd-0ab1072867c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00048_FUNC_UVTC_UserName_RequestorUser_any_status_RequesteeUser_any_and_blocked_UnlockMe_Role_RET_CS_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4jx0j2+A49gRmHEh6aUNIgbQ3eekIeQ1KjASWbEh+fSUTEyAkl95JZhitV7tnP3R2zwSepW4YCQGZpJwZ3U7T/J348dhJvMCqk8C3GnXiWbgRexYJwAe7nhDwA9PoCpFDlwmJmWyaru00LNuznMbItsO6H9admnN6cm8aPyETyrRSqdmmsZqlTISl26aZZyzkWFARMjwDEUoSDqPeVag0Q1xhMltna5Slw6w1lXIeIkRqMRBIU1IjfIbO0I7OWSzCIZ0wLPMMXnzGomm+3F0ul7VlvcazCXJt20Z2gJROLOjks9n6VF2GuMsSvj63MeOMEpzSZ6xB9UBOeWxE6YRnVE5n75h2kGNr0xasiEWcBvtsolcHJbojLe2AzAS2xBQ7lbEBJJABI2DcDrpN8/NxFVzfHWWYiYRnM7F3/jtIwApI+RxiS1SRVeiOt3ggXa0zIGGXkTQXtIBr3SZzTEAYNxkkdHVFhWq+WBhl+Y2VUP+06jIgf1OWM7SNVUFHB7LToRMQ8v/UbLteays/cZpDi3+Lft1JsP8ZX5w+kK/nQdEb9Pq3g6+00SwhbCuvQW3K/XLeb9ZNb71cWub3Nz6756Mfd3fRIn+cPN81VgnygoF8vLvhX8fRl/Skgem4U+89Nx6c3ujq/JI535+fr39FA7eff+mP/fv44mJKp5+g+IKeVrfDsVws0pMpe5yhifOtveiwcxCoPaLJdWzHN0F8c//9mi2H/RWgW2f4w50zQZzv50HfH4sBcx+C6/anCEvpjWW/fvur6AsnaRd3zdeYtmPYFVaUMMzHD0BkddTt0e0Yl6peWH5ML1pCYyspVcO55ighgUmzpW9paglzRUA0DlUx1+fLwHNs348C13Uj+0L9NWzn0o5sPwg8z7MrDlqj2IPY5iyh2pdm2XX/fAyQzEIBLIbMKnhOpiDMDyx2sMRGlw3U4+BMwIgrFnd8JtxgKbD7WKySZ3v5FPD5dKlexzWXfdbPokRCtsvc9R3mHgChcwqa3nV/C9XgQqpULHCRy9SpFbjGIFcDINMcHLqNUw8JOpunoIGiGY/zFGrz6bxMDBLrX9fCRJTSwcWofHfvhrX/rcqA0ompVhA6lnNQVYQDI8itAnk/4JPtgCvzUR5T/bxUOmVGyRrJ7qfXLtHtsWkRFdHv9vC3U+HeqB99/e1N9AEotJ+PjaO4oFtuq1mqxoMij1ZVzQWuLWp5UeRl/XxNjJkyjxQ/OmgIJFfs9jTij8DQxgQ6arhsUO953sh38eVyyoYSS5ipbjPK4xGbxRCE3iy66pWsjl1bdlyqvElYyUOydqoWEI34wx2FhETrKfGN+lnyLH4t1wFbW35UnGqdkJRN9EmPkad3moJwZZYq3uPZtvFDBg453xVukrzBIlU3jXMJ738xNKE1TUwIz5nsdsxSsE2yJU75NIfwVemNmZLIXybzSrw7mf/tXQ0V3c2wudGl/61s0bJdCJh6ASixNM2VWjSVczbZIvUXgG95/cRzo7ZTvzx95XUvCOp21NkkcCeS1hvxW8lWTvffQ+sP</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95107652AC13F80E0401F0A059930AD</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95107652AC13F80E0401F0A059930AD</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F951077A9222A0E0E0401F0A07995550</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F951077A9222A0E0E0401F0A07995550</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083729</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951077A9223A0E0E0401F0A07995550</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083733</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083733</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083733</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4jx0j2+A49gRmHEh6aUNIgbQ3eekIeQ1KjASWbEh+fSUTEyAkl95JZhitV7tnP3R2zwSepW4YCQGZpJwZ3U7T/J348dhJvMCqk8C3GnXiWbgRexYJwAe7nhDwA9PoCpFDlwmJmWyaru00LNuznMbItsO6H9admnN6cm8aPyETyrRSqdmmsZqlTISl26aZZyzkWFARMjwDEUoSDqPeVag0Q1xhMltna5Slw6w1lXIeIkRqMRBIU1IjfIbO0I7OWSzCIZ0wLPMMXnzGomm+3F0ul7VlvcazCXJt20Z2gJROLOjks9n6VF2GuMsSvj63MeOMEpzSZ6xB9UBOeWxE6YRnVE5n75h2kGNr0xasiEWcBvtsolcHJbojLe2AzAS2xBQ7lbEBJJABI2DcDrpN8/NxFVzfHWWYiYRnM7F3/jtIwApI+RxiS1SRVeiOt3ggXa0zIGGXkTQXtIBr3SZzTEAYNxkkdHVFhWq+WBhl+Y2VUP+06jIgf1OWM7SNVUFHB7LToRMQ8v/UbLteays/cZpDi3+Lft1JsP8ZX5w+kK/nQdEb9Pq3g6+00SwhbCuvQW3K/XLeb9ZNb71cWub3Nz6756Mfd3fRIn+cPN81VgnygoF8vLvhX8fRl/Skgem4U+89Nx6c3ujq/JI535+fr39FA7eff+mP/fv44mJKp5+g+IKeVrfDsVws0pMpe5yhifOtveiwcxCoPaLJdWzHN0F8c//9mi2H/RWgW2f4w50zQZzv50HfH4sBcx+C6/anCEvpjWW/fvur6AsnaRd3zdeYtmPYFVaUMMzHD0BkddTt0e0Yl6peWH5ML1pCYyspVcO55ighgUmzpW9paglzRUA0DlUx1+fLwHNs348C13Uj+0L9NWzn0o5sPwg8z7MrDlqj2IPY5iyh2pdm2XX/fAyQzEIBLIbMKnhOpiDMDyx2sMRGlw3U4+BMwIgrFnd8JtxgKbD7WKySZ3v5FPD5dKlexzWXfdbPokRCtsvc9R3mHgChcwqa3nV/C9XgQqpULHCRy9SpFbjGIFcDINMcHLqNUw8JOpunoIGiGY/zFGrz6bxMDBLrX9fCRJTSwcWofHfvhrX/rcqA0ompVhA6lnNQVYQDI8itAnk/4JPtgCvzUR5T/bxUOmVGyRrJ7qfXLtHtsWkRFdHv9vC3U+HeqB99/e1N9AEotJ+PjaO4oFtuq1mqxoMij1ZVzQWuLWp5UeRl/XxNjJkyjxQ/OmgIJFfs9jTij8DQxgQ6arhsUO953sh38eVyyoYSS5ipbjPK4xGbxRCE3iy66pWsjl1bdlyqvElYyUOydqoWEI34wx2FhETrKfGN+lnyLH4t1wFbW35UnGqdkJRN9EmPkad3moJwZZYq3uPZtvFDBg453xVukrzBIlU3jXMJ738xNKE1TUwIz5nsdsxSsE2yJU75NIfwVemNmZLIXybzSrw7mf/tXQ0V3c2wudGl/61s0bJdCJh6ASixNM2VWjSVczbZIvUXgG95/cRzo7ZTvzx95XUvCOp21NkkcCeS1hvxW8lWTvffQ+sP</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F95107652AC13F80E0401F0A059930AD</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4z8YyYIw9gRmHj1u3IU2A9CMvHVVejBJbJpZsoL/+SiZ2gJBcemeYYbRe7Z7dPTrSBcdJ3PR8ziETNGVaMOzpv8B2OxY4YOAWsow27iDDdQAbOAwtJ4QmAhvpWsB5DgHjAjPR05vIahvINqz2HCGv5XitdsO1u/e69g0yLkNLl4bctUlixr0ybU/PM+almFPuMZwA9wTxZv7kypOeHq4w6f2LHcoyYdZfCrHyTJM0QiAQx6RB0sS8MA98LkLuzWjEsMgzeM4Z8p7+vHe9XjfWrUaaRWYTIWQi15Q+IafRR73/odoMYcAW6W49wCxllOCY/sEK1ATEMg01P47SjIpl8kZoy7SQCm3AhhjEarOPuvmSoER3ZqQDkBnHBl9iqwo2hQVkwAhod9Ogp388b4K7vfMMM75Is4Qfrf8OErAC4nQFocGryip050c80a7+BRAvYCTOOS3gWtFkhQlw7SaDBd1cUS7JF3KtHL+24fJHK5YB+ZuxXJj7WCV080R3hjQCLv7PzPbntYvyDcc59C+n7u/xNwp33eE/rcvcibefxmw541Yx6ZUQ9p13oOpxP6+PyVpz63mTb5nx0A5HIhy1vzjt247/yQw+R2vGw9VgflkwP4cnv7PYXt464nP+WNx3bropHU8fIvxjYeeufe1M5lFKHtzph/Dm1sXJn+b9YjtaTSc313et+feAbBbbq5/fzXzZiWM7ehBXgy9f5z8upwn84WN8M/r5BU2IRYrH0WQ4HPvpYHXfGXwIRo8FQrc+H7kJi2hE8V3vpab9Gg6NlSTM8t8PQES1VPQIhtpYzguL9+VFWWhoLEpXb6U0igtgQu+rXUpavFwKEA09OczdeuzaqNlyh07bcS3Hskeojawx8pHtusjtWpUG7VAcQRykbEFVLqWyO/68D5AkHgcWQmYUaU6WwPV3Ig6xwFrApvJwpIzDPJUq7pCMrzHvbmj7MROLBxezTt6MQNeuU/GVfc38hYDsULlbB8o9BUJXFJS8K35zSXAuZCuecJGL2GoUuMEglxdApjTYa7a7tslpsopBATWTNMxjaKyWq7IxJt/9Nw1MeGmdjubluXuzrONvVQekT0iVA1e1XIKcIpy4gppVIW8X3NkvuArv5yFVx0u2U2SU7JAcfnphiaJHTRFZ0a/B7FdNhdr97O2vd5rvgDKP+1EnCgu6l7a6S+X1IMWjX03zCTeeGnlR5OX8HCWMmQxvSn20zBmQXKrbdp4+AjPrEOZZl0uN+ihzbT/El4slmwksIJFs08rlGS+LGXD1sgjkKdmc+2w5SCn7JmAjTtkGsXyAKMTvvlGIR5SfNN/Iv3WahS/jOhFrL4+sUz4nBGWRWqlrZPsGKUgqw1Kpe2m2H/xUgFPJD411k2ssQrLpdy7g7S+aErSejglJcyaCoV4a9kW2xCm2K/BenF6FKYX8+Wbe8Ddv5h+Tq5mUuwTrtS/9b2eDlnQhUt2kf4mlp2/kQ1MmZ9GeqD8DPNJ1Czkdu+kPrNa4i/Z1vYX8Yd3Ag0r6r8yvLXs9PT4P/X8B</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950239D74791715E0401F0A05990981</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950239D74791715E0401F0A05990981</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083733</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950239D747A1715E0401F0A05990981</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f5f8feae-2fe1-43ec-98ca-c798916c5e2a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9425e0d2-3955-45c0-bfbd-0ab1072867c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00049_FUNC_UVTC_UserName_RequestorUser_any_status_RequesteeUser_any_and_other_than_active_pending_or_blocked_UnlockMe_Role_RET_CS (Negative)_400_BADREQUEST_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Update_UserStatus"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","deleted");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","USER_STATUS_NOT_VALID");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj1WIE25NVJAolyW7QLsE2G5fKuMYcJvYNHa49NevHZoUKO1hj4SEPBnPfHPxN3PNYRTaboNzHAvCqOa1avqjDWzLwuWSUQ6mwCiVZ1VjGsCigQJgQ1AsOqBc1jWP8wR7lAtIRU23gVUyQNmwSiMA3GLVLV4VilXnQdcmOObStFQpAF3bRCHlbuq2picxdRnkhLsURpi7Arl+o99zpaYLM0x6/XqHMnUY1xdCLF3TRIUAIxyGqIBYZF6bBzrXAXd9MqdQJDF+8xnwmv52d71eF9bFAovnpg0AMIFjSp2Ak/k3vX6RXcaBR2dsd25CyihBMCSvUIHqY7FggdYI5ywmYhF9YtoyLaBMG3iDDGSV6DfdfHeQojvT0gHImEODL6CVGRviGY4xRVgbD72a/u28Cu7ujmJI+YzFET86/xskTFc4ZEscGDyLLEN3vsUT6apfY+R6FIUJJys8UG2yhAhz7S7GM7LpES6bL+BaWn5tw+WPZF2G0b+U5drcxyqhmyey0yJzzMX/qdl+vXZWJjBMcJ3ZnhVV1vFvf/zaflmHxEv6NzBo/7yb11II+8o7UHm5387HzZr31tul58iOH+hg4ndhBbWYNw6GnT/hmD05I+TNIBuMvV43KXdGV3f8efvS8X91n0n3uw2DymB4+3sctdb27yIcDEKzezG6hPfj1iWKrAUu09HtpG8Nq879atn+8xq3fjTtyc/m/a+W37vplze97ut4O5rGv7pXrQf6gH4040nyzOPJ5Tzo/ZxefO/ftUu9+ZSgy9Jdc+uDW1Z7j2k/hkNhRgl+Mn3CSGRH1R5eS+vIekHxNb0oCQmMWarqLhVHcYGp0OvqlqIWN5EERAJXFnN37jhlYNug0mlYV+2bZqUNSsDqgAaoOg6wmzcZB+1QHEFsMjojypdi2V3/fA0QRS7HNMCxsWIJWmCuf2GxBQXUPDqUj4NRjkdMsriFn16frOIqXCyjwFpuXxPw9PySkMpc1wZM3NLbuDETOD7k7uIBdw8xIkuCFcGrDueyxbmQyXiBq0SEVmEFCxQncgTEioVdu3RVNjmJliFWUM2IBUmIC8vFMk2NyXf/tgERT6XD9ih9eZ8Gdvwty4HUCYhS4CqWGyzriE8MITsL5POAK/sBZ+YbSUDUA5MJFTFBOySHn977RDVI3iQyosem/2hluHP1s69/vGl+Aco8zkfuKFiRPbfZNJUDQtJHPavmCyy8FJLVKknrV1XUGEvzpmRIy/QxSiS/bUfsGVMzN2GeNV5y1Eeec/khvkQsqC+gwJHsNi09nrFb+Jir3cKT72Rz7uJy4FLmTeCNOCVrhnIFUYi/3FKQi5SeFN/JvzWLg/dynbC150fGKRcKQehcndQg2X7SFIhJs0QyH4v3jZ8ycMr5oTBPco5FyG6aJgJ//kVTlFbTIUIsocJr6algn2ZTnGK7xO670gczKZW/zeYN/3Q23/d7viS8COq5LvlvZYOk7YKwrlaAFEtN38hVUzqn8z1afwN4xOwWcKxO++qm5QCnlTN72XGKTrWUJ/AgkvoH8UfJXk6P30P9Lw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F951091FE8BD909DE0401F0A05993974</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F951091FE8BD909DE0401F0A05993974</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F9502206FA18EBC6E0401F0A079902CB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F9502206FA18EBC6E0401F0A079902CB</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083736</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F9502206FA19EBC6E0401F0A079902CB</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083740</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083740</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083740</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj1WIE25NVJAolyW7QLsE2G5fKuMYcJvYNHa49NevHZoUKO1hj4SEPBnPfHPxN3PNYRTaboNzHAvCqOa1avqjDWzLwuWSUQ6mwCiVZ1VjGsCigQJgQ1AsOqBc1jWP8wR7lAtIRU23gVUyQNmwSiMA3GLVLV4VilXnQdcmOObStFQpAF3bRCHlbuq2picxdRnkhLsURpi7Arl+o99zpaYLM0x6/XqHMnUY1xdCLF3TRIUAIxyGqIBYZF6bBzrXAXd9MqdQJDF+8xnwmv52d71eF9bFAovnpg0AMIFjSp2Ak/k3vX6RXcaBR2dsd25CyihBMCSvUIHqY7FggdYI5ywmYhF9YtoyLaBMG3iDDGSV6DfdfHeQojvT0gHImEODL6CVGRviGY4xRVgbD72a/u28Cu7ujmJI+YzFET86/xskTFc4ZEscGDyLLEN3vsUT6apfY+R6FIUJJys8UG2yhAhz7S7GM7LpES6bL+BaWn5tw+WPZF2G0b+U5drcxyqhmyey0yJzzMX/qdl+vXZWJjBMcJ3ZnhVV1vFvf/zaflmHxEv6NzBo/7yb11II+8o7UHm5387HzZr31tul58iOH+hg4ndhBbWYNw6GnT/hmD05I+TNIBuMvV43KXdGV3f8efvS8X91n0n3uw2DymB4+3sctdb27yIcDEKzezG6hPfj1iWKrAUu09HtpG8Nq879atn+8xq3fjTtyc/m/a+W37vplze97ut4O5rGv7pXrQf6gH4040nyzOPJ5Tzo/ZxefO/ftUu9+ZSgy9Jdc+uDW1Z7j2k/hkNhRgl+Mn3CSGRH1R5eS+vIekHxNb0oCQmMWarqLhVHcYGp0OvqlqIWN5EERAJXFnN37jhlYNug0mlYV+2bZqUNSsDqgAaoOg6wmzcZB+1QHEFsMjojypdi2V3/fA0QRS7HNMCxsWIJWmCuf2GxBQXUPDqUj4NRjkdMsriFn16frOIqXCyjwFpuXxPw9PySkMpc1wZM3NLbuDETOD7k7uIBdw8xIkuCFcGrDueyxbmQyXiBq0SEVmEFCxQncgTEioVdu3RVNjmJliFWUM2IBUmIC8vFMk2NyXf/tgERT6XD9ih9eZ8Gdvwty4HUCYhS4CqWGyzriE8MITsL5POAK/sBZ+YbSUDUA5MJFTFBOySHn977RDVI3iQyosem/2hluHP1s69/vGl+Aco8zkfuKFiRPbfZNJUDQtJHPavmCyy8FJLVKknrV1XUGEvzpmRIy/QxSiS/bUfsGVMzN2GeNV5y1Eeec/khvkQsqC+gwJHsNi09nrFb+Jir3cKT72Rz7uJy4FLmTeCNOCVrhnIFUYi/3FKQi5SeFN/JvzWLg/dynbC150fGKRcKQehcndQg2X7SFIhJs0QyH4v3jZ8ycMr5oTBPco5FyG6aJgJ//kVTlFbTIUIsocJr6algn2ZTnGK7xO670gczKZW/zeYN/3Q23/d7viS8COq5LvlvZYOk7YKwrlaAFEtN38hVUzqn8z1afwN4xOwWcKxO++qm5QCnlTN72XGKTrWUJ/AgkvoH8UfJXk6P30P9Lw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F951091FE8BD909DE0401F0A05993974</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0Tp41ZIAuGSqCBxPaBS2gP0+lIZewLuDg7ETqD9+m0HQoHSHvaRkJAn45k1M8vLvuJoHuS9OucQCRoyrdeq6q+OXXJdy80bpQopGQ4qTAy3YGHDt2FSJo6bt8HWtR7nMfQYF4iJqp63bMewiobtjC3LK5Q9x845xfyLrj1AxGVo6ZKzdG09Dxj30rRVPY6YFyJOucfQHLgnsDeq3/Q96emhDJNeu9qgTBNGtZkQC880cY4AhiDAORzOzSvzwOeKcG9EpwyJOIJtTsKr+nbvarXKrQq5MJqaecuyTMs1pQ/hdHqp1y6yzUB6zA836yZiIaMYBfQDKVA3IGYh0erBNIyomM2/CW2btqVCG7DGBrYddqmbnwlSdGdGOgAZcWTwGbKzYEPwIQKGQbsf9qr65XkT3OwdR4hxP4zm/Gj9d5CAJRCECyAGzyrL0J0f8US7aleAvR7DQcxpAgNFkwXCwLW7CHy67lMuyUe4lo5fW3P5oxnLAP/NWK7MfawSunmiOy06BS7+z8z257WJ8oCCGGqzfMJY03fJL/KPOez4/3YdPn5rFp1hu5pC2HfegNqNe7s+JuuOW9tNbyN4yaPu9ZTaT6vC8/gpGvbrv+6sO067L8WudV1c3l4Hk0rf536pgu4nrTJ/fmyFZBANe654H9h3E3tqF2PmVC46/VGj8WR1uqK8GPZmv/O0nxQbz8Qmt7wdDzuzxu0gvi8X2s0ZLOfkkS+7ncHk4QWL+66VvPnJaNBpQNPtNzvPF+11iG0ga1j55iB8HDdMXv2sab+GQ2MmCaN48gZYZEtFj15L68h5IfGzvCgLJYafunoLpVFcABN6Te1S0uLFUoAo8eQwN+uOW7StcqmYr7fqhU7FaluOZXesulV05eGqtzIN2qA4gtgMmU9VLqWyG/78DBDPPQ6MQGQkYYxnwPUfIraQQFqPDeXhCBmHcShV3I6X0/JHkKzeVuAv1xH+mC5wMin5ujYIxS27jeq+gOhQugsH0j0ETBcUlL4rgnPJcC5kL5YoiUVg5xKUYxDLGyBSIuzlnUrR5HS+CEAhNechiQPILWaLtDMm3/znDYR5ah22x+nB+7au429ZC6QPocqBq1oaIMcIJ+6gQlbI9wWX9gvOwtdjQtX5kv0UEcUbJIefPmmi+LHjiKzotTl6tTPcO/ezt3/daf4Ayjzuxy4RSehe2uwylfeDVI9aNs0lyi1zcZLE6fzKShkjGd6UAmmbI8CxlLf3cfgbmLkLYZ51u+xQH2Xe2Q/xxWLGRgIJmEu2aenyjKfFCLh6WvTkMVmf+245SCn7JmAtTtmagXyBKMQ/PlKwh5WfNN/Jv1UYkc9xnYi1l0fWKd8TgrKpWql75P0bUuBQhqVS+MJoP/ipAKeSHxp3Td5hEZJNk1jA9180pWhVHWEcxkz0Wnpq2FfZFKd4X4D36fQlTKrk26t5zb+9mp9u+iOpd3Ok73zpfzsbNKULBl29AFIsVX0tX5oyOZvuqfoW4Bdhd+1Ou9JoSf60DoTdLTu7Bh5UUvti/mrZ6+nxeaj9AQ==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F95107652ADA3F80E0401F0A059930AD</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F95107652ADA3F80E0401F0A059930AD</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083740</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F95107652ADB3F80E0401F0A059930AD</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f5f8feae-2fe1-43ec-98ca-c798916c5e2a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9425e0d2-3955-45c0-bfbd-0ab1072867c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00050_FUNC_UVTC_UserName_RequestorUser_active_RequesteeUser_active_with_userlinkconsent_exists_ResetPassword_Role_Portal_200_OK_P2" searchProperties="true" id="c3efc87f-f459-4569-b40b-66f7fee6105d"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportal"));

tS.setPropertyValue("audience","");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call PolicyCreateULC_API"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateULC_API");

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdc6JKEH3fX0Gxj1vIgKKBilaxMdkiHxuj5mPzcmscGp0NDMgMaPLr7wwGoq7Jzd7SKmqanu7T3Yczc8xxEtuezznkgqZMC4Z9/R/sdntHESIGwk7X6IRoZhxFuGfgGSZgd49mbbB1LeC8gIBxgZno6zayOgZyDKszRchr97yO02rb7Uddu4Ocy9DSpYV0bZ3EjHtV2r5e5MxLMafcYzgB7gniTfyrS096erjGpA+ONyirhPlgIUTmmSZphUAgjkmLpIl5bO74HIfcm9A5w6LI4TVnyPv6697VatVatVtpPjdthJCJXFP6hJzOv+qDL/VmCAMWpZv1CWYpowTH9AUrUFcgFmmo+fE8zalYJO+EtkwLqdAGrIlBrA77qptvCSp0n4y0AzLn2OALbNXBxhBBDoyAdjsO+vrXz01ws3eaY8ajNE/43vrvIAErIU4zCA1eV1aj+3zEA+0aHAPxAkbigtMSfiqaZLIGro1yiOj6knJJvpBr1fi1NZd/WrMMyN+M5djcxiqhmwe6M6Rz4OL/zGx7XpsodzguYEDv2HO+WOHydmiFNMNXwf1P62E67BZH/QrCtvMGVDPu1/U+WRtuvW7K7Jt7v7sS11kyQfdR+2b1IoaPt4ssy9yzq0nyNJr538fZ0+K3WJyZGf0VDjmZPp5Ghd0+vyEPSRo586fT0cVLMPoCSOSc/Urdxx8vy29RWfrmt/H6ZeSa2D9/grvvY+sxPJ8eIfPyMrqe2hcPd0vo3E/mP/jDAgsnOgvichaf3Jr36MvF8vRh2Xs+nbjd8xvn5P5ldNV/q2m7hl1jLQmTYvYbiKiXih7BUDuT88LiY3lRFhoaUeXqZUqjuAAm9IHapaTFK6QA0dCTw9ysz1zHQr2e79odx0en8tdB1hnyUc91HcdBtQZtUOxBPElZRFUupbIb/nwMkCQeBxZCbpRpQRbA9Q8iDrHAWsDG8uNIGYdpKlWckXTdnefrFEgnzNrdnrMuu4CXuvYzFdfsOvcjAfmucrd3lHsMhGYUlLwrfnNJcC5kK5a4LERstUrcYlDIAyBXGuzZnSPH5DTJYlBAzSQNixha2SKrGmPyzdM2MOGVlXKSpbnAsVV9fu9Wt/+uboT0Caly4Kqk7yCHCQdOonZdz/t1d7frrsP7RUjVVya7KnJKNkh2X72RRbGkYcpbYTXyZsO+YSe4uV9Xky8sKWlY3xzXUu2lFgzq4Sxxa9kqyrKoxtFTOpfL8KaUO8ucACmkWD1P0ydgZhPC/NRZ0aDey9zYd/EVYsEmAgtIJHm0avmJi8IEuLooBJL068/eQnZSyr4JWItDtpNY3icU4g+vHMQjyk+aR/KxSvPwbVwHYm3lkXXK24GgbK5W6lR4focbJJVhqZSxNN8OfijAoeS7xqbJDRYh2TQrBLz/RlP61NcxIWnBRDDUK8O2ZlY4xXMG3pvTH2EqXX49aNf83YP24epyItUrwXrjS//b2aAVXQjo6jyvsPT1tbw3yuRsvqXRrwD3ZBrZln1i93w09Ldk2nFd5PpO08CdSgZ/mP+0bPV0/3sY/As=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950212C27A0DAE0E0401F0A059909A5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950212C27A0DAE0E0401F0A059909A5</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F951077A9245A0E0E0401F0A07995550</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F951077A9245A0E0E0401F0A07995550</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083744</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951077A9246A0E0E0401F0A07995550</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083746</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083746</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083746</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdc6JKEH3fX0Gxj1vIgKKBilaxMdkiHxuj5mPzcmscGp0NDMgMaPLr7wwGoq7Jzd7SKmqanu7T3Yczc8xxEtuezznkgqZMC4Z9/R/sdntHESIGwk7X6IRoZhxFuGfgGSZgd49mbbB1LeC8gIBxgZno6zayOgZyDKszRchr97yO02rb7Uddu4Ocy9DSpYV0bZ3EjHtV2r5e5MxLMafcYzgB7gniTfyrS096erjGpA+ONyirhPlgIUTmmSZphUAgjkmLpIl5bO74HIfcm9A5w6LI4TVnyPv6697VatVatVtpPjdthJCJXFP6hJzOv+qDL/VmCAMWpZv1CWYpowTH9AUrUFcgFmmo+fE8zalYJO+EtkwLqdAGrIlBrA77qptvCSp0n4y0AzLn2OALbNXBxhBBDoyAdjsO+vrXz01ws3eaY8ajNE/43vrvIAErIU4zCA1eV1aj+3zEA+0aHAPxAkbigtMSfiqaZLIGro1yiOj6knJJvpBr1fi1NZd/WrMMyN+M5djcxiqhmwe6M6Rz4OL/zGx7XpsodzguYEDv2HO+WOHydmiFNMNXwf1P62E67BZH/QrCtvMGVDPu1/U+WRtuvW7K7Jt7v7sS11kyQfdR+2b1IoaPt4ssy9yzq0nyNJr538fZ0+K3WJyZGf0VDjmZPp5Ghd0+vyEPSRo586fT0cVLMPoCSOSc/Urdxx8vy29RWfrmt/H6ZeSa2D9/grvvY+sxPJ8eIfPyMrqe2hcPd0vo3E/mP/jDAgsnOgvichaf3Jr36MvF8vRh2Xs+nbjd8xvn5P5ldNV/q2m7hl1jLQmTYvYbiKiXih7BUDuT88LiY3lRFhoaUeXqZUqjuAAm9IHapaTFK6QA0dCTw9ysz1zHQr2e79odx0en8tdB1hnyUc91HcdBtQZtUOxBPElZRFUupbIb/nwMkCQeBxZCbpRpQRbA9Q8iDrHAWsDG8uNIGYdpKlWckXTdnefrFEgnzNrdnrMuu4CXuvYzFdfsOvcjAfmucrd3lHsMhGYUlLwrfnNJcC5kK5a4LERstUrcYlDIAyBXGuzZnSPH5DTJYlBAzSQNixha2SKrGmPyzdM2MOGVlXKSpbnAsVV9fu9Wt/+uboT0Caly4Kqk7yCHCQdOonZdz/t1d7frrsP7RUjVVya7KnJKNkh2X72RRbGkYcpbYTXyZsO+YSe4uV9Xky8sKWlY3xzXUu2lFgzq4Sxxa9kqyrKoxtFTOpfL8KaUO8ucACmkWD1P0ydgZhPC/NRZ0aDey9zYd/EVYsEmAgtIJHm0avmJi8IEuLooBJL068/eQnZSyr4JWItDtpNY3icU4g+vHMQjyk+aR/KxSvPwbVwHYm3lkXXK24GgbK5W6lR4focbJJVhqZSxNN8OfijAoeS7xqbJDRYh2TQrBLz/RlP61NcxIWnBRDDUK8O2ZlY4xXMG3pvTH2EqXX49aNf83YP24epyItUrwXrjS//b2aAVXQjo6jyvsPT1tbw3yuRsvqXRrwD3ZBrZln1i93w09Ldk2nFd5PpO08CdSgZ/mP+0bPV0/3sY/As=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950212C27A0DAE0E0401F0A059909A5</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+o4EH7vr4jSx1WwEy4hUUEKl7bo9HIKPaXbl5VxDLgncYLtAOXXrx2acCnt9qyEhDwZz3wz8/mzLwSKI8cPhCBc0oQZg17L/MeFntNsQNtqumFo1SCZWF6t2bCcKqw2J24NYeKZxkCIjAyYkIjJlulAu2bBumXXHiH0q65fcytN130xjSfChQqtXCrQNNZxxISfp22ZGWd+ggQVPkMxEb7E/ii4vfGVp48KTGb7YosyT8jbcylTHwBcCQkmUYQrOInBBTjwuQiFP6IzhmTGyXvOULTM972r1aqyqlYSPgMOhBBADyifUNDZudk+KzaTcMCmyXbdRSxhFKOIbpAGdUvkPAmNIJolnMp5/EloG9hQh7bIGlvYrrFzE+wS5Oi+GekAJBfIEnNkF8GGZEo4YZgYv4aDlnn+vQlu9z5yxMQ04bE4Wv8ZJMKWJEpSElqiqKxA9/2IJ9rVviDYHzAcZYIuyZ2mSarQC+MnJ1O6vqFCkS8URj5+Yy3UjxYsI/hPxnIB9rEq6OBEd3p0RoT8PzPbn9c2yhOKMtKGKN4MZd1Fszh62iSXbB7dclsMG+OHVg5h33kLqhz3+/qYrCW33jf1h+j18fU1DWX8+6YxnLjPPQzZ/UbgtGc3e9edp7u7qyybp87NsuOFnaA6uLLvXzvuNe/GDXv8KGZ3V40x7Uxc96w72gDZDaL6slrfPI+Dq2qfAQQeXkDdfgLhMPwr6/cdPgbpYHwPHsi0EXSv6rz3NLvF3t9jLqKhd12t9TqiS8/6Tdh9cX9V+/0fi1db9OALbu1q2q/h0FhIwiibvBIsi6Wmx6BnXKp5Ifm1vGgLDa1p7uqnWqOEJEyabb1LS4ufKQGioa+GuV1fenXoOFWvcdmsO47X6MMatC9hAOueB72mW2jQFsURxG7CplTn0iq75c/XAHHsC8JCwq1lkuE5EeYXEXtIImPAhupwJEyQx0SpuB2tNw1IZptssXbf5CLdrFZ2ytcz07hL5D2758FUEn4o3dUD6R4STFNKtL5rggvFcCFVLxZomcnIrixRhZFM3QBci7Dv1Jp1IGicRkQjBXESZhGppPM07wwQ23/HQljkVqoYmHCJIjs/f5+Wd/yt6ITyCal2ELqkDlHTJCeuompRz+d1N/brLsIHWUj1MVNtlZziLZLDTzu2aJqUVNkVViAvNxwbDoKD47rKfOGS4pL25X2t5F6JQbsYzgJVFpVsuczycbha6LgKD5Te2WBEcKbU6u0x+U0YKEOAb10WJeqjzKX9EF8m52wkkSSxIo+RL7/xUhgRoV8KA8X69XefIQcpVd8kWctTtm6kHhQa8ZdvDuxj7afMP9XfKuHhblwnYu3lUXWq54GkbKZX+lp4+4QbOFFhqdKxhO8HPxXgVPJDY9nkEotUbJpkknz+xdAC1TIRxknG5KBn5oZ90cxxyreU+DunD2FyYX6/adfi05v2+fZmpOQrRmbpS//b2aI5XTAx9YWeY2mZa/VwVMnZbE+k3wF+0Gnb6TpuAHtBHx7qdFAvG3hQSfuD+aNlr6fH56H9Lw==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F95022396F852296E0401F0A05990987</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F95022396F852296E0401F0A05990987</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083746</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F95022396F862296E0401F0A05990987</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00051_FUNC_UVTC_UserName_RequestorUser_active_RequesteeUser_active_with_userlinkconsent_does_not_exists_ResetPassword_Role_Portal_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportal"));

tS.setPropertyValue("audience","");


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+o4EH7vr4jSxyrkwjVRQaJQdqEttEB72vOyMo4T3CZ2sB1uv37t0KRAabdnJSTkyXjmm5nPn33JQRw5XptzxASmROt3m/o/0LVsx6kDA5UdaFSgCwx35laMWsO3G1bNrblBWdf6nKeoT7gARDR1x7IrhlU17MrUsrxy3as6Jcd2fuvaE2JchpYuJUvX1nFEuJelbeopIx4FHHOPgBhxT0Bv0r679aSnB3JMeutyhzJLyFpzIRLPNGHJRxBFESxBGpuX5oHPpc+9CQ4JEClD7zl93tTf965Wq9KqXKIsNB3LskzLNaWPz3F4rrfO8s3I75OA7tYdQCjBEER4CxSoOyTm1NfaUUgZFvP4i9C2aVsqtIHW0IB2hZzr5keCDN0PIx2AZBwYfA7sPNgYBYghApH2OO439fOfTXC3d8oA4QFlMT9a/xkkRJYoognyDZ5XlqP7ecQT7WpdIuj1CYxSjpdoqGiSAIi4ds9QgNe3mEvy+VzLxq+tufzhnGUI/slYLs19rBK6eaI7XRwiLv7PzPbntYvyBKIUta67YNhbiM72KkhY7fb3arp9ndxEfL59aGYQ9p13oIpxv6+PyVpw633Tr5fl+sFNB2vy11ONOMBfvFaHtc3FbD6YmEMSXNesXxXr9aLyErZftgtqvzUaaDaKLp5BXJ/eVBwTPt610/EoDGpnF/hh6I/eGE/DZ/7yOL6uN+ZxZ3yz2oYLlrj3i+3fm95Nb7oJwsbExOUZTPvl9MK/33ZSuLlJVldBMOhW4HiebM+iQf+tOxpMwimHdFDtTexV86Om/RoOjbkkTNLZK4IiXyp69LtaT84LiO/lRVmwbwSZq5cojeICEaG31C4lLV4qBQj7nhzmbt1zq7ZVK3esq2rV6tjutVWx7J7VtuquWy1X7VyDdiiOIHYoCbDKpVR2x5/vAcLY44j4iBlLmsI54vo3EbtAAK1PxvJwUMLRlEoVt7cLnuAtbdSjsm3T+gzXXcHoXB6PIRUjMmLtQCB2KN3lA+keI4gTjJS+K4JzyXAuZC8WYJmKyC4tQYmgVN4ATImw51QaVZPjOImQQmrG1E8jVErmSdYZk+/+HQNAnlkxhwllAkR2dv6+LO/4W94J6eNj5cBVSVdIThOduIoqeT1f113brzsP3059rI6ZbKtgGO6QHH76YIuiSUGVj8Jy5MWGY8NBcPO4riKfv8SwoH1xX0u5l2LQyoezAKVFKV0u02wcdSV0TIY3pd7Z5gTBVKrVZkrfEDGLEOaPLosC9VHmwn6ILxVzMhFAoFiSR8uWP3gpTBBXL4W+ZP36p8+Qg5SybwKtxSlbJ5IPCoX42zcH9KDyk+Z7+beizP8Y14lYe3lknfJ5IDAJ1UpdC5svuAGpDIuljlG2H/xUgFPJD41FkwssQrJplgr09RdNCVRTBxDSlIh+V88M+6KZ4RSbBHkfTp/CZML8ftOu+Zc37fPd7UTKVwz0whf/t7OBM7pApKsLPcPS1Nfy4SiTk3BPpN8BHum05dhuvXPdaTjVernQ6arrWm77qmjgQSWtT+bPlr2eHp+H1r8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F9502197CEC82573E0401F0A059909AB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F9502197CEC82573E0401F0A059909AB</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F951063C0B550C19E0401F0A07995351</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F951063C0B550C19E0401F0A07995351</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083750</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951063C0B560C19E0401F0A07995351</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083754</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083754</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083754</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+o4EH7vr4jSxyrkwjVRQaJQdqEttEB72vOyMo4T3CZ2sB1uv37t0KRAabdnJSTkyXjmm5nPn33JQRw5XptzxASmROt3m/o/0LVsx6kDA5UdaFSgCwx35laMWsO3G1bNrblBWdf6nKeoT7gARDR1x7IrhlU17MrUsrxy3as6Jcd2fuvaE2JchpYuJUvX1nFEuJelbeopIx4FHHOPgBhxT0Bv0r679aSnB3JMeutyhzJLyFpzIRLPNGHJRxBFESxBGpuX5oHPpc+9CQ4JEClD7zl93tTf965Wq9KqXKIsNB3LskzLNaWPz3F4rrfO8s3I75OA7tYdQCjBEER4CxSoOyTm1NfaUUgZFvP4i9C2aVsqtIHW0IB2hZzr5keCDN0PIx2AZBwYfA7sPNgYBYghApH2OO439fOfTXC3d8oA4QFlMT9a/xkkRJYoognyDZ5XlqP7ecQT7WpdIuj1CYxSjpdoqGiSAIi4ds9QgNe3mEvy+VzLxq+tufzhnGUI/slYLs19rBK6eaI7XRwiLv7PzPbntYvyBKIUta67YNhbiM72KkhY7fb3arp9ndxEfL59aGYQ9p13oIpxv6+PyVpw633Tr5fl+sFNB2vy11ONOMBfvFaHtc3FbD6YmEMSXNesXxXr9aLyErZftgtqvzUaaDaKLp5BXJ/eVBwTPt610/EoDGpnF/hh6I/eGE/DZ/7yOL6uN+ZxZ3yz2oYLlrj3i+3fm95Nb7oJwsbExOUZTPvl9MK/33ZSuLlJVldBMOhW4HiebM+iQf+tOxpMwimHdFDtTexV86Om/RoOjbkkTNLZK4IiXyp69LtaT84LiO/lRVmwbwSZq5cojeICEaG31C4lLV4qBQj7nhzmbt1zq7ZVK3esq2rV6tjutVWx7J7VtuquWy1X7VyDdiiOIHYoCbDKpVR2x5/vAcLY44j4iBlLmsI54vo3EbtAAK1PxvJwUMLRlEoVt7cLnuAtbdSjsm3T+gzXXcHoXB6PIRUjMmLtQCB2KN3lA+keI4gTjJS+K4JzyXAuZC8WYJmKyC4tQYmgVN4ATImw51QaVZPjOImQQmrG1E8jVErmSdYZk+/+HQNAnlkxhwllAkR2dv6+LO/4W94J6eNj5cBVSVdIThOduIoqeT1f113brzsP3059rI6ZbKtgGO6QHH76YIuiSUGVj8Jy5MWGY8NBcPO4riKfv8SwoH1xX0u5l2LQyoezAKVFKV0u02wcdSV0TIY3pd7Z5gTBVKrVZkrfEDGLEOaPLosC9VHmwn6ILxVzMhFAoFiSR8uWP3gpTBBXL4W+ZP36p8+Qg5SybwKtxSlbJ5IPCoX42zcH9KDyk+Z7+beizP8Y14lYe3lknfJ5IDAJ1UpdC5svuAGpDIuljlG2H/xUgFPJD41FkwssQrJplgr09RdNCVRTBxDSlIh+V88M+6KZ4RSbBHkfTp/CZML8ftOu+Zc37fPd7UTKVwz0whf/t7OBM7pApKsLPcPS1Nfy4SiTk3BPpN8BHum05dhuvXPdaTjVernQ6arrWm77qmjgQSWtT+bPlr2eHp+H1r8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F9502197CEC82573E0401F0A059909AB</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH1HIB6SQqCCxULq0tFug3y9XxhnAbWKnsQ10f/21Q5MCS3u7V0JCnoxnzswcH/uYoyT2wg7nkAnCqDHotcx/pk23gY6mUwvX/MiqR17dCty6ZzlH0ZGHwYemOzWNAecSBpQLREXL9By3bjm+5davHSesNULfr/qN4NE0biHjKrRyqTqmsU5iysM8bcuUGQ0Z4oSHFCXAQ4HDSediGCrPEBWYzPbxBmWeMGsvhEhD28bVCDDEMa5iltjH9o7PccTDCZlTJGQGbzkj3jLf9q5Wq+qqVmXZ3PYcx7GdwFY+ESfz72b7W7EZogGdsc26iyijBKOY/EYa1AWIBYuMTjxnGRGL5IPQru06OrQFa2xht06/m/Z7ghzdFyPtgMw4svgCuUWwMcwgA4rBuBkPWub3r01ws/c6Q5TPWJbwvfXfQQK6hJilEFm8qKxA9/WIB9rVPgYcDiiOJSdLuNQ0SREGblxlMCPrIeGKfBE38vEba65+pGAZ4L8Zy7G9jVVBtw90p0fmwMX/mdn2vDZRblEsod28Z06/Im/PJldy+Ryw7CwVNHL6ZxeDVg5h23kDqhz323qfrCW33jahxvPiYbQiZ6tz6J+ur8lrNOkvbsmo++Q+3t11n2qV/h2WXnqLLm/699HjOfuZwN1o3hm67u9UyCQ4v5dxZR7cjL9dnA0rlemk99i87K7Hj6Ox9Pj4Zsge/KGsnMXnPTTMXq5O00sxeTk/rS3YqD/6efvc+OEjcB+eLps/rx/qycNr8/705NuKZGzlH91UOlfwC9XF7GTUeq9pu4ZdYyEJEzl9AiyKpabHoGf01byQ+FxetIVE1ix3DVOtUVwAFWZb79LSEkolQCQK1TA3637gOz3P8Rsdt+fUm/0Tp+64fafj+EHgNbpuoUEbFHsQu4zOiM6lVXbDn88B4iTkQCPIrCWTeAHc/CRiDwlkDOhYHQ5GOVwzpeLJ1PV9RtLnp9qLu4pmMz8NglcPU9O4ZOIX/ZV1ZgKyXemu7Uj3GDBJCWh91wTniuFcqF68oKUUsVtdoioFqW6ATItw6NWbvs1JksagkdoJi2QM1XSR5p2x+ebfsxDmuZVwnLJMoNjNz9+H5e1/KzqhfCKiHbgu6QeoacKBq6he1PNx3UfbdRfhOzIi+piptoqM4A2S3U/vbNE0KanyXliBvNywb9gJbu/XVeaLlgSXtC/vayX3SgzaxXBeUPWlKpdLmY+joYUuU+FtpXeuPQEslVq9XrNnoHYZwv7SZVGi3stc2nfxSbGgE4EEJIo8Rr78wkthAly/FAaK9euvPkN2Uqq+CViLQ7ZurB4UGvGnbw4cYu2nzFfqb8Wy6H1cB2Jt5VF1queBIHSuV/paeP2AG5ipsETpGMu2gx8KcCj5rrFscolFKDZNpYCPvxhaoFomwphJKgY9Mzdsi2aOU7ymEL47/REmF+a3m3bNP7xp7y+GEyVfCTJLX/LfzhbJ6YLB1Bd6jqVlrtXDUSWn8y2RfgO4r9OeGzS6J92m5zdq2zrtBJ0fZQN3Kmn/Yf7TstXT/fPQ/hc=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950D2057A1D048FE0401F0A059927C1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950D2057A1D048FE0401F0A059927C1</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083754</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950D2057A1E048FE0401F0A059927C1</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00052_FUNC_UVTC_UserName_RequestorUser_active_RequesteeUser_active_with_userlinkconsent_exists_ResetPassword_Role_DECE_CS_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call PolicyCreateULC_API"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateULC_API");

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DECE_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDECECS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full DECE_CS">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call STS for Adult SAU DECE_CS">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER2",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_USER_ID2",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL2",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj6uQCwmXqCBxa5vdsr1Aq7YvR8aZgEviQOwE6K8/diApUNrTPRIS8mQ8883M588+ZygKLbfDGCScxFTx+i31H8fHzXp1YmiTmm9pdmMCWtPBttYwoF4zgnrTsBqq4jGWgkcZR5S3VMswbc1wNNMeG4ZbbbiGXbHqtRdVeYSEidDCpWKoyjoKKXPztC01TagbI0aYS1EEzOXYHXWG167wdFGBSW2fb1HmCZP2jPOFq+u44gOGMMQVHEf6uX7gc+4zd0SmFPE0gV1On7XU3d7ValVZVStxMtUtwzB0o6kLH5+R6Zna/lFsBt+jQbxd9xCNKcEoJG9IghoCn8W+0gmncUL4LPoktKmbhgytwRpr2LTpmaq/J8jRfTPSAciEIY3NkFkEu4cAEqAYlId7r6WefW+C273jBFEWxEnEjtZ/BwloBmG8AF9jRWUFuu9HPNGu9jlg16M4TBnJ4I+kyQJhYMptAgFZXxMmyOczJR+/smbiRwqWAf6bsZzr+1gFdP1Ed/pkCoz/n5ntz2sb5RGFKbSfn4LxdMgd31gO2NN9I7EflpcPzvj3BLdyCPvOW1DluHfrY7KW3NptepzDMOjWEiOa95eD57eRVb/y7mqdev82sleQ3f1szlepuegbJBi/ULvLs/XN7wjNn+5i+vOxeXnZXc5femH82n34sQrMXuDdmCvsvaEVf5zZ16/BJlo9rQavMXowYcbR7eDZxn+umheb50FnmQ0jqA0ZGSR3403y9sB/dzezX9R8HP94ri+zrHNXa4Q3w9FkmL5dDVvvNe3XcGgsJGGUTl4B82Ip6eH1lQsxL8S/lhdpIb4W5K7uQmoU40C52pa7pLS4qRAg4rtimNv1RdMx+pZRq1qm3XP6xsCwDfPC6Bj1ZtOp1bqFBm1RHEHsxTQgMpdU2S1/vgaII5cB9SHRsjjFM2DqFxH7iCPFo/ficMSUwTgWKm7WrFkUThbwFqTNKppas/kGNZKGryp/Yn5Db5JOwCE5lO7qgXTfAyYLAlLfJcGZYDjjohdLlKU8NCsZqlBIxQ2QSBF2Lbvh6IxEixAkUj2K/TSEymK2yDujs+2/pSHMcmveVszyw/dpbcffijYIH59IBybr6YIYJXy4h+quUxTzSdHO0X1VhO+kPpFnTPSUJwRvkRx+eqeK5EjJk11VBezS+9hwEFk/LqpM5mcEl4Qvb2oh9EIG2sVYlqiyrKRZluaDqEuJS0R4XSidqY8Ap0KnNuN4DlQvQ+jfuiZK1EeZS/shvpTP6IgjDpGgjZIvv/FGGAGTbwRP8H393QfIQUrRNw5rfsrWC8VTQiL+8rWBXSz9hPlW/K3ixH8f14lYe3lEneJhwAmdypW8EDafEAPHIiwRChYn+8FPBTiV/NBYNrnEwgWbJimHz78oUppaKsI4Tin3+mpu2JfLHCffLMB9d/oQJpfk3R27Zp/esU/D65EQrgippS/5b2eN5HTBoMqrPMfSUtfiySiS0+mePO8AnlDoRrU3cKx+1z5U6LpTNvCgkvYH80fLXk+Pz0P7Xw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950D2083CE82DB4E0401F0A07995675</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950D2083CE52DB4E0401F0A07995675</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950D2063214C5D0E0401F0A0799566B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950D2063214C5D0E0401F0A0799566B</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083757</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950212A5A054295E0401F0A079905C8</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_08381</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_08381</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_08381</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH69CPkiARAWJEtpm+7Ft07tb+nJlnCF4N9hp7EDKr79OIClQ2tu9EhLyZDxzZub42CccLRLLG3IOmSCMKoHfV/8B1wHH7XU1y3VBs00n0pBt9zSj12t3zE4HtSNDVQLOcwgoF4iKvmoZpq0ZjmbaD4bhtXue4bRMy31SlR+QcRlaurTkrmKRUO5VaftqnlGPIU64R9ECuCewFw6vrzzp6aEakzo42aCsEmaDuRCpp+u4FQGGJMEtzBb6ib7ncxJxLyQxRSLPYJsz4n11u3e1WrVW7RbLYt0yDEM3XF36RJzEX9XBl3ozRAGdsc16hCijBKOErFEJ6hrEnEXKMIlZRsR88U5oUzeNMrQGBdawadOvqv6aoEL3yUh7IDOOND5HZh3sHmaQAcWg/H0f9NWvn5vgZu9DhiifsWzBD9Z/BgnoEhKWQqTxurIa3ecjHmnX4ASwF1Cc5Jws4aakSYowcOU2gxkprgiX5Iu4Uo1fKbj8kZplgP9kLCf6LlYJXT/SHZ/EwMX/mdnuvDZRfqAkh8GseAosyK+NkR5c3ryMybe76c/2re0XrF9B2HXegGrGvV0fkrXh1nZT+Oj7+tm1y+66IbefYvYTnV/+FvPoYvVzcvPtOr0vfhE+u/Htye3EXK/HcHdx/mN+HsZ/te/G8aNt/O5OZi7rEH/95TF/GAe6H19Mu4thOJmuTl1qJtYlfprMx9OQmOajG0/pU8r1Yn07GoWj3AzDmdMxlunFI3PR9I4m6TLB+fr7F7mbRi/+5NftuXk5eV6PL4P+a027Newba0kI8+kvwKJelvQIfOVMzguJj+WltJBIm1WuXlpqFBdAhTood5XS4uVSgEjkyWFu1meuY/iW0Wlbpj1yfGNs2IZ5ZgyNrus6nc5prUEbFAcQR4zOSJmrVNkNfz4GiBceBxpBpi1ZjufA1Q8i+kggJaD38nAwyuGBSRWf0fy5G/GpAwtiZobFlyszzi27UJUbJr7T79lwJiDbl+72nnTfAyYpgVLfS4JzyXAuZC+e0TIXidlaohaFXN4AWSnCnmX3HJ2TRZpAiVRfsChPoJXO06ozOt/8WxrCvLJWbcW8Onzv1nb4rW6D9IlI6cDLek5BjhLe3ENdz6mLeado5+C+qsMP84iUZ0z2VGQEb5Dsf3qlSsmRhifbqmrYjfehYS+yflhUkyxaEtwQvrmppdBLGRjUY3lGredWvlzm1SC6pcRlMrwulc7UQ8C51KmXB/YbqN6E0D91TTSoDzI39n18uZjTUCABC0kbpVp+4o0QAi/fCIHke/HZB8heStk3AYU4Zhsl8ilRIv7wtYE9XPpJ8638W7Eseh3XkVg7eWSd8mEgCI3LVXkhvLxDDMxkWCIVjGW7wY8FOJZ839g0ucEiJJumuYD3vyilNPVVhDHLqQh8tTLsymWFU7yk4L06vQlTSfL2ji34u3fs4/VVKIVrgdTGl/y3s0YqumBQy6u8wtJXC/lklMlpvCPPW4BHFLrXHo0dyz+19xW66zQN3Ktk8Mb81rLT08PzMPgX</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950D2083CE52DB4E0401F0A07995675</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH69CPkiARAWJEtpm+7Ft07tb+nJlnCF4N9hp7EDKr79OIClQ2tu9EhLyZDxzZub42CccLRLLG3IOmSCMKoHfV/8B1wHH7XU1y3VBs00n0pBt9zSj12t3zE4HtSNDVQLOcwgoF4iKvmoZpq0ZjmbaD4bhtXue4bRMy31SlR+QcRlaurTkrmKRUO5VaftqnlGPIU64R9ECuCewFw6vrzzp6aEakzo42aCsEmaDuRCpp+u4FQGGJMEtzBb6ib7ncxJxLyQxRSLPYJsz4n11u3e1WrVW7RbLYt0yDEM3XF36RJzEX9XBl3ozRAGdsc16hCijBKOErFEJ6hrEnEXKMIlZRsR88U5oUzeNMrQGBdawadOvqv6aoEL3yUh7IDOOND5HZh3sHmaQAcWg/H0f9NWvn5vgZu9DhiifsWzBD9Z/BgnoEhKWQqTxurIa3ecjHmnX4ASwF1Cc5Jws4aakSYowcOU2gxkprgiX5Iu4Uo1fKbj8kZplgP9kLCf6LlYJXT/SHZ/EwMX/mdnuvDZRfqAkh8GseAosyK+NkR5c3ryMybe76c/2re0XrF9B2HXegGrGvV0fkrXh1nZT+Oj7+tm1y+66IbefYvYTnV/+FvPoYvVzcvPtOr0vfhE+u/Htye3EXK/HcHdx/mN+HsZ/te/G8aNt/O5OZi7rEH/95TF/GAe6H19Mu4thOJmuTl1qJtYlfprMx9OQmOajG0/pU8r1Yn07GoWj3AzDmdMxlunFI3PR9I4m6TLB+fr7F7mbRi/+5NftuXk5eV6PL4P+a027Newba0kI8+kvwKJelvQIfOVMzguJj+WltJBIm1WuXlpqFBdAhTood5XS4uVSgEjkyWFu1meuY/iW0Wlbpj1yfGNs2IZ5ZgyNrus6nc5prUEbFAcQR4zOSJmrVNkNfz4GiBceBxpBpi1ZjufA1Q8i+kggJaD38nAwyuGBSRWf0fy5G/GpAwtiZobFlyszzi27UJUbJr7T79lwJiDbl+72nnTfAyYpgVLfS4JzyXAuZC+e0TIXidlaohaFXN4AWSnCnmX3HJ2TRZpAiVRfsChPoJXO06ozOt/8WxrCvLJWbcW8Onzv1nb4rW6D9IlI6cDLek5BjhLe3ENdz6mLeado5+C+qsMP84iUZ0z2VGQEb5Dsf3qlSsmRhifbqmrYjfehYS+yflhUkyxaEtwQvrmppdBLGRjUY3lGredWvlzm1SC6pcRlMrwulc7UQ8C51KmXB/YbqN6E0D91TTSoDzI39n18uZjTUCABC0kbpVp+4o0QAi/fCIHke/HZB8heStk3AYU4Zhsl8ilRIv7wtYE9XPpJ8638W7Eseh3XkVg7eWSd8mEgCI3LVXkhvLxDDMxkWCIVjGW7wY8FOJZ839g0ucEiJJumuYD3vyilNPVVhDHLqQh8tTLsymWFU7yk4L06vQlTSfL2ji34u3fs4/VVKIVrgdTGl/y3s0YqumBQy6u8wtJXC/lklMlpvCPPW4BHFLrXHo0dyz+19xW66zQN3Ktk8Mb81rLT08PzMPgX</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950D2063214C5D0E0401F0A0799566B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950D2063214C5D0E0401F0A0799566B</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_08381</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950D2063218C5D0E0401F0A0799566B</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_e95e5987-299e-415d-a448-08836166a3d0</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_e95e5987-299e-415d-a448-08836166a3d0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>F950D2083CE52DB4E0401F0A07995675</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>F950D2063214C5D0E0401F0A0799566B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:F950D2063214C5D0E0401F0A0799566B</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70cd5392-3df9-42d0-8e71-f9829da65bed</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>92b8758a-441f-49f2-94a8-40796e4ad166</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a5e0dd34-a05a-448f-94b5-6843d1581ef9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c36a0ce5-45d3-4a4b-9caa-727aebcdb7ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00053_FUNC_UVTC_UserName_RequestorUser_active_RequesteeUser_active_with_userlinkconsent_does_not_exists_ResetPassword_Role_DECE_CS_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DECE_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDECECS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full DECE_CS">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call STS for Adult SAU DECE_CS">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER2",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_USER_ID2",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL2",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0TpIwpxQrgkKkiU0t3sXqDQTau+HBlnALeJQ2OHQr/+2IGkQKGn+0hIyJPxzJqZ5WWfcRyFttfmHBJBY6b5F039H2sSuNgC1whqY8dwKoAMbOHACDByxzayxmhc0zWf8xR8xgVmoqlLs2OgqmE5Dwh5lYZnVcqOZT/r2ggSLkNLlzLStWUUMu5laZt6mjAvxpxyj+EIuCeIN2zf3njS08M5Jr11tkaZJUxaMyHmnmmScgAEwpCUSRyZZ+aOz1nAvSGdMizSBDY5A97UN3vf39/L75VynExNGyFkIteUPgGn01O9dZJvhsBnk3i97mAWM0pwSD+wAnULYhYHWjucxgkVs+hIaMu0kAptwJIYxHLYqW5+JsjQ/TDSDsiEY4PPsJUHG8AEEmAEtD8Dv6mf/myC670PCWZ8EicR31v/HSRgCwjjOQQGzyvL0f084oF2tc6AeD4jYcrpAu4UTeaYANf6CUzo8oZySb6Aa9n4tSWXP5qzDMjfjOXM3MYqoZsHunNBp8DF/5nZ9rzWUUY4TKFVegqcp85zhaL5ZeVuMXmcDEqz+s18ej1tZhC2ndeginFv1vtkLbi12URQpzet9kqr8bX9657UL4fMKd2lbr396H/g8/NR2kijrvlCum8vtNqpYRTX8Yt/zfFzfTFmdrv/Gy9F48ktOdcnOO7aYpy8vp5X7FAMTRE99fjihV9dUdT4eOg/TszedW9FB6Ogg2v2gMFo1ndWbHnfE8N+v3Y/LPV/9Ro1q3TTOWGD7urV6t36r6NeN12E4upP87Om7Rp2jbkkDNPxCxCRLxU9/AvtUs4Li+/lRVloYEwyV2+uNIoLYEJvqV1KWrxUChANPDnM9frSrSLbstvVtuM4tlvtIgdZl6iN6q6Lqp1GrkFrFHsQOzGbUJVLqeyaP98DJJHHgQWQGIs4JTPg+jcRL7DAms8G8nDEjMNDLFVcuO+V9A1CFkdTx658NOis8hIKXbuLRY/1kvZEQLIr3JUd4R4AoXMKSt0VvbnkNxeyE294kYrQKi9wmUEq9T9REuzZTqNqchrNQ1A4zSgO0hDK89k864vJ1/+2gQnPrFlTCc+O3tHK9r/lTZA+AVUOXNVzDnKQcOAWQnkxR4qu7t1Wefh2GlB1wmRHRULJGsnup0+iKIYULNlUlcMuvPcNO5HN/aKKZMGCkoLuxT0tZV6KQCsfyxsuv5XTxSLNBlFXApfI8KbUOcscAkmlSq0e4ldgZhHC/NElUaDey1zYd/GlYsaGAguIJG20bPmDF8IQuHoh+JLty58+P3ZSyr4JWIpDtk4oHxIK8bdvDeIR5SfNffn3HifB57gOxNrKI+uUzwJB2VSt1HWwOkIMEsuwVOpXnGwHPxTgUPJdY9HkAouQbBqnAo5/0ZQwNXVMSJwy4V/omWFbLDOcYjUH79PpS5hMkDc37JIfvWGfbm+GUrYirBe+9L+dDZrRhYCuLvIMS1NfygejTM6mW+K8AbivzxeSH/W2Ve2gbq3Q56rr2vXzatHAnUpaX8xfLVs93T8PrX8B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950D2017A18C0E6E0401F0A059927B5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950D2017A15C0E6E0401F0A059927B5</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950212A5A444295E0401F0A079905C8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950212A5A444295E0401F0A079905C8</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_08386</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F9502274C43996B7E0401F0A0599098B</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083810</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083810</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083810</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdb+o4EH2/vyJKH6uQD5KmRAWJUtrNqvT2Evpx+7JKnSGYJg7YDoT++rUDSYFCt3elqsiT8cyZmeNjX7AwTSyvyxhQjjOi+Fdt9R+7FUWW6ZpaE1yk2U3L1kIUOpprnyHXcQ3bMCJV8RnLwSeMh4S3Vcswbc1wNNMeGYbXPPdMu2EZ9ouqPAJlIrRwaRiqUqQJYV6Ztq3mlHhZyDDzSJgC8zjygu7g1hOeXlhhUjsXa5RlQtqZcD7zdB01IkCQJKiBslS/0Hd8LiLmBTgmIc8pbHJGrK1u9i6Xy8ay2chorFuGYehGSxc+EcPxidr5UW2GyCfjbL3uhSQjGIUJfg8lqAHwSRYp3STOKOaT9EhoUzcNGVqDAmnItMmJqn8kKNF9M9IOSMpCjU1Cswo2hDFQIAiUh6HfVk++N8H13hENCRtnNGV76z+DBGQBSTaDSGNVZRW670c80K7OBSDPJyjJGV7AnaTJLETAlHsKY1zcYibIFzGlHL9SMPGHK5YB+pOxXOjbWAV0/UB3rnAMjP+fmW3Pax3lMUxy6Czie2vxng5bg7j5qK+cEcZjN/hdPAy77RLCtvMaVD3uzXqfrDW3Npsehs5sfrP6ux89TO1e1u9Pbq5b+r27uL+zjPmgl77Fk3lrxP6KpsNfcY+O01NOp4Xp3pgxZga9Bqc3eu4T83T29oPcpY/2+ftTcHrjrM5eX+yzDPmD5wCPLXNqvfjBDcW3ZNrst5LBk9G0wF0+vj+9BSZxB256ef46D+76Z3YwuInGP54Gy+RX/Dx90Qe//eESBonf/qhpu4ZdYyUJQf46BcSrpaSHf6Vci3mF/Gt5kRYcaePS1ZtJjWIcCFc7cpeUFi8XAoQjTwxzvb5uOYZlWl2na9u21XL64hiZ10bXcFstw+mdVxq0RrEHsZeRMZa5pMqu+fM1QJR6DEgEVFtkOZoAU7+IeBXyUPHJUByOjDAYZULFzQLbpKCAWEQLZ5JaNJ6vZuK/qtxl/Cf5SbtjDnRXups70j0EhGcYpL5LgjPBcMZFL+bhIueJ2ViEDQK5uAGoFGHPss8dneF0loBEqqdZlCfQmE1mZWd0tv61hBax0lq2FbHy8B2tbf9b1QbhE2HpwGQ9lyBGCQfuIaMq5kjRzt59VYXv5hGWZ0z0lFOM1kh2P31QRXKk5smmqgp27b1v2Ims7xdVJ4sWGNWEr29qIfRCBjrVWOZhY97IF4u8HIQrJY6K8LpQOlMPAOVCp1aj7A2IXofQv3VN1Kj3Mtf2XXw5n5CAhxxSQRulXH7jjRAAk28EX/C9+O4DZCel6BuHgh+y9RLxlJCIv3xtIA9JP2G+Fz/LjH4UfijWVh5Rp3gYcExiuZIXwuoIMVAmwmKhYBndDn4owKHku8a6yTUWLtj0mnM4/kWR0tRWQ4SynHD/Si0N23JZ4uSrGXgfTp/ClJK8uWMLdvSOfR7cBkK40lCtffF/O2u4pAsCVV7lJZa2Wogno0hO4i153gDcV+grwTK3azo9o39WK7TTalnupVM3cKeSzifzZ8tWT/fPQ+df</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950D2017A15C0E6E0401F0A059927B5</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdb+o4EH2/vyJKH6uQD5KmRAWJUtrNqvT2Evpx+7JKnSGYJg7YDoT++rUDSYFCt3elqsiT8cyZmeNjX7AwTSyvyxhQjjOi+Fdt9R+7FUWW6ZpaE1yk2U3L1kIUOpprnyHXcQ3bMCJV8RnLwSeMh4S3Vcswbc1wNNMeGYbXPPdMu2EZ9ouqPAJlIrRwaRiqUqQJYV6Ztq3mlHhZyDDzSJgC8zjygu7g1hOeXlhhUjsXa5RlQtqZcD7zdB01IkCQJKiBslS/0Hd8LiLmBTgmIc8pbHJGrK1u9i6Xy8ay2chorFuGYehGSxc+EcPxidr5UW2GyCfjbL3uhSQjGIUJfg8lqAHwSRYp3STOKOaT9EhoUzcNGVqDAmnItMmJqn8kKNF9M9IOSMpCjU1Cswo2hDFQIAiUh6HfVk++N8H13hENCRtnNGV76z+DBGQBSTaDSGNVZRW670c80K7OBSDPJyjJGV7AnaTJLETAlHsKY1zcYibIFzGlHL9SMPGHK5YB+pOxXOjbWAV0/UB3rnAMjP+fmW3Pax3lMUxy6Czie2vxng5bg7j5qK+cEcZjN/hdPAy77RLCtvMaVD3uzXqfrDW3Npsehs5sfrP6ux89TO1e1u9Pbq5b+r27uL+zjPmgl77Fk3lrxP6KpsNfcY+O01NOp4Xp3pgxZga9Bqc3eu4T83T29oPcpY/2+ftTcHrjrM5eX+yzDPmD5wCPLXNqvfjBDcW3ZNrst5LBk9G0wF0+vj+9BSZxB256ef46D+76Z3YwuInGP54Gy+RX/Dx90Qe//eESBonf/qhpu4ZdYyUJQf46BcSrpaSHf6Vci3mF/Gt5kRYcaePS1ZtJjWIcCFc7cpeUFi8XAoQjTwxzvb5uOYZlWl2na9u21XL64hiZ10bXcFstw+mdVxq0RrEHsZeRMZa5pMqu+fM1QJR6DEgEVFtkOZoAU7+IeBXyUPHJUByOjDAYZULFzQLbpKCAWEQLZ5JaNJ6vZuK/qtxl/Cf5SbtjDnRXups70j0EhGcYpL5LgjPBcMZFL+bhIueJ2ViEDQK5uAGoFGHPss8dneF0loBEqqdZlCfQmE1mZWd0tv61hBax0lq2FbHy8B2tbf9b1QbhE2HpwGQ9lyBGCQfuIaMq5kjRzt59VYXv5hGWZ0z0lFOM1kh2P31QRXKk5smmqgp27b1v2Ims7xdVJ4sWGNWEr29qIfRCBjrVWOZhY97IF4u8HIQrJY6K8LpQOlMPAOVCp1aj7A2IXofQv3VN1Kj3Mtf2XXw5n5CAhxxSQRulXH7jjRAAk28EX/C9+O4DZCel6BuHgh+y9RLxlJCIv3xtIA9JP2G+Fz/LjH4UfijWVh5Rp3gYcExiuZIXwuoIMVAmwmKhYBndDn4owKHku8a6yTUWLtj0mnM4/kWR0tRWQ4SynHD/Si0N23JZ4uSrGXgfTp/ClJK8uWMLdvSOfR7cBkK40lCtffF/O2u4pAsCVV7lJZa2Wogno0hO4i153gDcV+grwTK3azo9o39WK7TTalnupVM3cKeSzifzZ8tWT/fPQ+df</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950212A5A444295E0401F0A079905C8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950212A5A444295E0401F0A079905C8</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083810</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950212A5A484295E0401F0A079905C8</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_49dd2171-3e7c-4324-aca5-746c7570400d</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_49dd2171-3e7c-4324-aca5-746c7570400d</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>F950D2017A15C0E6E0401F0A059927B5</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>F950212A5A444295E0401F0A079905C8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:F950212A5A444295E0401F0A079905C8</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70cd5392-3df9-42d0-8e71-f9829da65bed</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>92b8758a-441f-49f2-94a8-40796e4ad166</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a5e0dd34-a05a-448f-94b5-6843d1581ef9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00054_FUNC_UVTC_UserName_RequestorUser_active_RequesteeUser_active_with_userlinkconsent_exists_ResetPassword_Role_Coord_CS_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call PolicyCreateULC_API"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateULC_API");

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node SPL CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCoordCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full COORD_CS">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call STS for Adult SAU COORD_CS">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER2",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_USER_ID2",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL2",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>coord:cs</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+o6EP5+fkWnfnRKX2gLdIQZXkRRQA+oo+fLnZhuIdqm0KQF/PU3KbYCotdzZ5hhst3sPrv75EnOGIpCy2szBgknMVUGvab6j4Wq4AYm1uqBVdXsOkYaCp4tzaxbPjYCx3RrpqoMGEthQBlHlDdVyzBtzXA0074zDK9a96xqxXWdP6ryAAkToYVLxVCVdRRS5uVpm2qaUC9GjDCPogiYx7E3bY+GnvD0UIFJbZ1tUeYJk9ac84Wn67jiA4YwxBUcR/qZvudz5jNvSmYU8TSB95w+a6rve1erVWVVrcTJTLcMw9CNhi58fEZmJ2rrV7EZ/AEN4u26i2hMCUYheUMS1Aj4PPaVdjiLE8Ln0RehTd00ZGgN1ljDpk1PVP0jQY7uh5H2QCYMaWyOzCLYBAJIgGJQ7ieDpnryswlu994liLIgTiJ2sP47SEAzCOMF+BorKivQ/TzikXa1zgB7A4rDlJEMxpImC4SBKbcJBGQ9JEyQz2dKPn5lzcSPFCwD/DdjOdN3sQro+pHu9MgMGP8/M9ud1zbKAwpTaFHudPhboi8v7eyFXDp9qBLLfb06tdvNHMKu8xZUOe739SFZS269b2pfnFbnr43uY/18hu0sMIbmJvVXl5ejaA7TQeNq0zvlo0tY3fuPHR1S/fb3dXbln94ExuTCdm+z56drvUZ7G5dMfj2YL/rmquZubgYZWi+qF+kMnb6ZT3/Yg/GACYuDl3Fn3DXi8XUnXcLvxUt6cf7mNJZO/+IpeQrix2FEDHzqdseTX52LJaz7Qd9av3XGveHInd43P2rarWHfWEjCNH1+AcyLpaTHoKf0xbwQ/15epIX4WpC7egupUYwD5WpL7pLS4qVCgIjviWFu1/2GY/Qsw3Id07Z7HevcsA2zb7SNWqPhCK0rNGiL4gBiN6YBkbmkym758z1AHHkMqA+JlsUpngNTv4nYQxwpAzoRhyOmDO5ioeJmZNWWCNci28wC85U/O2hJ3DmxmKqMY35Db5J2wCHZ1+7qnnZPAJMFASnwkuFMUJxx0YwlylIempUMVSik4gpIpAp7ll13dEaiRQgSqh7FfhpCZTFf5K3R2fbf0hBmuRXHceJ7mOXH78vqDr8VjRA+PpEOTBbUATFMOHITmUU1n6p2jt5YRfh26hN5ykRXeULwFsn+pw+ySJaUTCnKKnCX7oeGvdD6YVVlNj8juOR8eVkLrRdK0CoGs0SVZSXNsjQfRU2qXCLC60LsTH0KOBVStbmLX4HqZQj9RzdFifogc2nfx5fyOZ1yxCESxFHy5Q+eCVNg8pkwEJRf//QNspdS9I3Dmh+zdUPxmpCIv31wYA9LP2G+FX8rMcKPcR2JtZNH1CneBpzQmVzJO2HzHTOIELE42Q1+LMCx5PvGssklFi7Y9Jxy+PqLItWpqSKM45TyQU/NDbuKmePkmwV4H06fwuSq/H7NrtmX1+zjaDgV2hUhtfQl/+2skZwuGFR5m+dYmupavBpFcjrbUeh3gIcibZlW22nXLNtqOLsibTjdetnAvUpan8yfLTs9PTwPrX8B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950212A5A744295E0401F0A079905C8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950212A5A724295E0401F0A079905C8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950D20265144DB2E0401F0A07995665</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950D20265144DB2E0401F0A07995665</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083815</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951092D7005A648E0401F0A05993970</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083819</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083819</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083819</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj6uQSxMuUUFK4XQ33V52gd54OTLOBNxN7DR2uPTXrx2aFCjt6R4JCXkynvlm5vNnn3CUJo4fcA65IIxq4aCr/4txe2rjDjLiqOMaLnaPDRQ72Gjbjt1pN63ONHZ1LeS8gJBygajo6o5lu4blGbY7tiz/uO07buPY7kx07RZyLkNLl4ala6s0odwv03b1Iqc+Q5xwn6IUuC+wPwouL3zp6aMKk9472aAsE+a9uRCZb5q4EQGGJMENzFLzxNzxOYm4PyIzikSRw0vOiHf1l73L5bKxPG6wfGY6lmWZVseUPhEnsy9676jaDFFIY7ZZ9xFllGCUkGekQF2CmLNIC5IZy4mYp++Etk3bUqENWGED2y79opuvCUp0n4y0AzLnyOBzZFfBhhBDDhSDdjMMu/qXz01ws3ecI8pjlqd8b/13kIAuIGEZRAavKqvQfT7igXb1TgD7IcVJwckCrhRNMoSBaz9ziMnqgnBJvohr5fi1FZc/UrEM8N+M5cTcxiqhmwe6MyAz4OL/zGx7XpsotygpoHd+z85+3Rb3I4zGDhred+xHsbDmGPKwW0LYdt6Aqsf9st4na82tl03wuBo9r9wc89kku+EP+WLyMFy2zsUCzKvJw5WgBVpOVsuLadw5PZ6Mz06L27twZl1cDtLH628ZTVvD1Oq3w/B8eDQZzucFQm5rMF9Ob8Lm7+EgCGjQPneH38aOOT79cXPdtL4n8/XXr7cJ985/nD/R3y0nbgX9O2d9QcPr6Z2dtX4tYnRkPY7vzk6DhPWffn6H+7s8bndfa9quYddYScKomD4CFtVS0SMcaGdyXkh8LC/KQiIjLl39TGkUF0CF3lO7lLT4hRQgEvlymJv1WcezBo7lND3bdQenzj+Wa9lnVmC1Oh2v2fQqDdqg2IPYZzQmKpdS2Q1/PgaIU58DjSA3FqzAc+D6BxEHSCAtpEN5OBjlMGZSxe3Wmkc4a2PkPQu7uXY8ytoRasZM166YuKbXeRALyHe1+3hHu4eASUZACbxiOJcU50I24wktCpHYjQVqUCjkFZArFZb72p7JSZoloKCaKYuKBBrZPCtbY/LNv2MgzEsrZiyPfMzL4/dudfvfqkZIn4goB64KOgU5TDhwE9lVNW+q9g7eWFX4oIiIOmWyqyIneINk99MrWRRLaqZUZVW4a/d9w05oc7+qOlu0ILjmfH1ZS62XStCrBvOEGk+NYrEoylG0lMrlMrwpxc42R4ALKVXrMfsN1KxDmJ+6KWrUe5lr+y6+QszpSCABqSSOVi4/8UwYAVfPhFBSfvXZN8hOStk3AStxyNZP5GtCIf7wwYF9rPyk+af8W8oRvo7rQKytPLJO+TYQhM7USt0J64+YQaSIsXw7+KEAh5LvGusm11iEZNO0EPD+F02pU1dHGLOCinCgl4ZtxSxxinUG/qvTmzClKr9csyv+7jV7f3kxktqVIr32Jf/tbJCSLhh0dZuXWLr6Sr4aZXI621LoF4D7Iu3YTuAFLcd1Ot62SFtev103cKeS3hvzW8tWT/fPQ+8P</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950212A5A724295E0401F0A079905C8</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj6uQSxMuUUFK4XQ33V52gd54OTLOBNxN7DR2uPTXrx2aFCjt6R4JCXkynvlm5vNnn3CUJo4fcA65IIxq4aCr/4txe2rjDjLiqOMaLnaPDRQ72Gjbjt1pN63ONHZ1LeS8gJBygajo6o5lu4blGbY7tiz/uO07buPY7kx07RZyLkNLl4ala6s0odwv03b1Iqc+Q5xwn6IUuC+wPwouL3zp6aMKk9472aAsE+a9uRCZb5q4EQGGJMENzFLzxNzxOYm4PyIzikSRw0vOiHf1l73L5bKxPG6wfGY6lmWZVseUPhEnsy9676jaDFFIY7ZZ9xFllGCUkGekQF2CmLNIC5IZy4mYp++Etk3bUqENWGED2y79opuvCUp0n4y0AzLnyOBzZFfBhhBDDhSDdjMMu/qXz01ws3ecI8pjlqd8b/13kIAuIGEZRAavKqvQfT7igXb1TgD7IcVJwckCrhRNMoSBaz9ziMnqgnBJvohr5fi1FZc/UrEM8N+M5cTcxiqhmwe6MyAz4OL/zGx7XpsotygpoHd+z85+3Rb3I4zGDhred+xHsbDmGPKwW0LYdt6Aqsf9st4na82tl03wuBo9r9wc89kku+EP+WLyMFy2zsUCzKvJw5WgBVpOVsuLadw5PZ6Mz06L27twZl1cDtLH628ZTVvD1Oq3w/B8eDQZzucFQm5rMF9Ob8Lm7+EgCGjQPneH38aOOT79cXPdtL4n8/XXr7cJ985/nD/R3y0nbgX9O2d9QcPr6Z2dtX4tYnRkPY7vzk6DhPWffn6H+7s8bndfa9quYddYScKomD4CFtVS0SMcaGdyXkh8LC/KQiIjLl39TGkUF0CF3lO7lLT4hRQgEvlymJv1WcezBo7lND3bdQenzj+Wa9lnVmC1Oh2v2fQqDdqg2IPYZzQmKpdS2Q1/PgaIU58DjSA3FqzAc+D6BxEHSCAtpEN5OBjlMGZSxe3Wmkc4a2PkPQu7uXY8ytoRasZM166YuKbXeRALyHe1+3hHu4eASUZACbxiOJcU50I24wktCpHYjQVqUCjkFZArFZb72p7JSZoloKCaKYuKBBrZPCtbY/LNv2MgzEsrZiyPfMzL4/dudfvfqkZIn4goB64KOgU5TDhwE9lVNW+q9g7eWFX4oIiIOmWyqyIneINk99MrWRRLaqZUZVW4a/d9w05oc7+qOlu0ILjmfH1ZS62XStCrBvOEGk+NYrEoylG0lMrlMrwpxc42R4ALKVXrMfsN1KxDmJ+6KWrUe5lr+y6+QszpSCABqSSOVi4/8UwYAVfPhFBSfvXZN8hOStk3AStxyNZP5GtCIf7wwYF9rPyk+af8W8oRvo7rQKytPLJO+TYQhM7USt0J64+YQaSIsXw7+KEAh5LvGusm11iEZNO0EPD+F02pU1dHGLOCinCgl4ZtxSxxinUG/qvTmzClKr9csyv+7jV7f3kxktqVIr32Jf/tbJCSLhh0dZuXWLr6Sr4aZXI621LoF4D7Iu3YTuAFLcd1Ot62SFtev103cKeS3hvzW8tWT/fPQ+8P</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950D20265144DB2E0401F0A07995665</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950D20265144DB2E0401F0A07995665</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083819</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950D20265174DB2E0401F0A07995665</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_cc8b1c9a-fd94-4c43-af2c-812198609bf4</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_cc8b1c9a-fd94-4c43-af2c-812198609bf4</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>F950212A5A724295E0401F0A079905C8</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>F950D20265144DB2E0401F0A07995665</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:F950D20265144DB2E0401F0A07995665</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70cd5392-3df9-42d0-8e71-f9829da65bed</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>92b8758a-441f-49f2-94a8-40796e4ad166</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a5e0dd34-a05a-448f-94b5-6843d1581ef9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c36a0ce5-45d3-4a4b-9caa-727aebcdb7ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>29067bd3-a7a7-45da-a337-6695ae57ea51</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00055_FUNC_UVTC_UserName_RequestorUser_active_RequesteeUser_active_with_userlinkconsent_does_not_exists_ResetPassword_Role_CoordCS_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node SPL CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCoordCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS for Adult Full COORD_CS">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call STS for Adult SAU COORD_CS">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER2",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_USER_ID2",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL2",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>coord:cs</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0TpIwq5cUtUkGiBnuyWQoFeX45cZwLuThwaO9y+ftuhSYHSnu4jISFPxjNrZpaXfcZQFFpumzFIOImp4nWa6r9Oxa41LNvU6rjuaJU6bmioUa1pZhA4YIHpGzWkKh5jKXiUcUR5U7UMs6IZVc2sTAzDtRuubZUN03xWlXtImAgtXMqGqqyikDI3S9tU04S6MWKEuRRFwFyO3XG7f+0KTxflmNTW2RZlljBpzTifu7qOyz5gCENcxnGkn+l7Pmc+c8dkShFPE3jP6bOm+r53uVyWl3Y5Tqa6ZRiGbji68PEZmZ6qrZN8M/geDeLt+gLRmBKMQrJBElQf+Cz2lXY4jRPCZ9EXoU3dNGRoDVZYw2aFnqr6R4IM3Q8j7YFMGNLYDJl5sBEEkADFoNyNvKZ6+rMJbvdOEkRZECcRO1j/HSSgCwjjOfgayyvL0f084pF2tc4Aux7FYcrIAm4kTeYIA1OGCQRkdU2YIJ/PlGz8yoqJH8lZBvhvxnKm72IV0PUj3emQKTD+f2a2O69tlHsUptC6m4+nlrcZxKWSV62+PTtPAN3R5eXQfmpmEHadt6CKcb+vD8lacOt9U/hwO3sYkbvNy5XpBZv2srOss9nkahpAkI5Lg2Bo1Xq/6WXNfiV3F048nw7N680rfgrrm7BzLlr+iwQldBUED/TEWrA3uG0kG3sdTKiHRtNLbhrXteFN6aZ3U+mZj4+/o9Jjw+I3v0bdyBni82d9EFWWdr1kG5uZM7lnt+3nwTPrL086kddd/dNvdwxy3hn1+zWr2/yoabeGfWMuCeP05RUwz5eSHl5H6Yl5If69vEgL8bUgc3XnUqMYB8rVltwlpcVNhQAR3xXD3K57TtUQZ8rp9czz6kX3vGtUDLNntI2q4xhOrZdr0BbFAcSLmAZE5pIqu+XP9wBx5DKgPiTaIk7xDJj6TcQO4kjx6EgcjpgymMRCxVcxWjuwsBNClmbDZmvzLQIL10xVuYn5gA6SdsAh2Zdue0+6R4DJnIDUd0lwJhjOuOjFG1qkPDTLC1SmkIobIJEi7FqVRlVnJJqHIJHqUeynIZTns3nWGZ1t/y0NYZZZcRwnvotZdvq+LO7wW94H4eMT6cBkQecgZglHLiIrr+ZT1dWjF1Yevp36RB4y0VSeELxFsv/pgyuSJAVR8rJy3IX7oWEvtH5YVZHNXxBcUL64q4XUCyFo5YN5Q+W3crpYpNko6lLkEhFeF1pn6mPAqVCq9ST+DVQvQug/uigK1AeZC/s+vpTP6JgjDpEgjpItf/BKGAOTrwRPMH710yfIXkrRNw4rfsx2EYrHhET87XsDu1j6CfNQ/C3FCD/GdSTWTh5Rp3gacEKnciWvhPV3zCBCw+JkN/ixAMeS7xuLJhdYuGDTS8rh6y+KFKemijCOU8q9jpoZdgUzw8nXc3A/nD6FyUT5/ZZdsS9v2cf+9VhIV4TUwpf8t7NGMrpgUOVlnmFpqivxaBTJ6XRHoN8BftJo02pX2+1uxXKqhUbXhUZXLxpFA/cqaX0yf7bs9PTwPLT+AA==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950212A5AB04295E0401F0A079905C8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950212A5AAE4295E0401F0A079905C8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F9502319FF1B5CEBE0401F0A0599096F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F9502319FF1B5CEBE0401F0A0599096F</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083825</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950233177DB634DE0401F0A079902E7</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083828</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083828</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083828</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3vr4jSx1WIAwklUUFKKWyjhX4Bpe3LlXEMmCZOsB2g/fXXDk0KlPZ2r4SEPBnPnPEcn/E5h3FU9XzOMRMkoVpw2dT/saeu7bqwYcAJqBk2qFtGw264hlM/q2P3DMIGaOhawHmGA8oFpKKpV4FlG8AxLHsIgFdreLVqpeFaz7r2gBmXoaVLBejaJo4o9/K0TT1j1EsgJ9yjMMbcE8gb+P2eJz09WGDSW+dblHlC1poLkXqmiSohRjiKUAUlsXlu7vmch9wbkBmFImP4PWfIm/r73vV6XVnXKgmbmVUAgAlcU/qEnMxO9dZJsRmHAZ0m23Ub0oQSBCPyBhWoPhbzJNT8aJYwIubxF6Et0wIqtIE3yECWTU918yNBju6HkfZAMg4NPodWEeweTzHDFGFtdB809dOfdXC7d8gg5dOExfxg/XeQMF3hKElxaPCisgLdzyMeOa7WOUZeQFGUcbLC14omKUSYa7cMT8mmR7gkX8i1vP3ahssfKViG0d+05dzcxSqhm0dO55LMMBf/p2e7/dpGeYBRhlsBmMDHpNur8dEwHQcxyTqz7PcFHNz5zRzCrvMWVNnu9/UhWUtuvW/qdbP+76S+8ckdTznqn40XDWv8wjYMgvDxYR3eEE7mDV5P2K+xP/QvGqvefVx7fW6j6Nq3Q+fqeXTbp73nrBqdDJa36+XN4soapTXM2KZ+NXybjB6Y5fj1Rbh+I8HNn+BX/Q6wcbpMnzrXz8huh+OX8Xq4wG/2SzpaLt6C0dP4z5M4mdzTwSgI4pXlkH6dgm6n0/yoabeGfWMhCYNsssBIFEtFj+BS68p+QfG9vCgLCY1p7uqlSqO4wFToLbVLSYuXSQEioSebuV13XQdUa5bb7VoXTrtz0QE2sLrAB47rArfeLTRoi+IAYjuhU6JyKZXd8ud7gCj2OKYhZsYqydAcc/2biJdQQC2g9/JyJJTjYSJV3FqecbSUFx1E2BVggsEkfastENW160Tc0BvmTwVm+9Jd25Pue4xISrDSd0VwLhnOhTyLJVxlIrIqK1ihOJMTgCkR9qp2wzE5idMIK6RmnIRZhCvpPM1PxuTb/6oBEc+tKElY6CGe374vizv8VpyD9AmJcuCqoAsse4mPDKJqUc2nqp2jA6sI72chUZdMHqpgBG2R7H/64IoiSUmUoqwCd+l+aNgLbR5WVWYLVwSVlC9ntZR6KQStojFLWFlWstUqy1txpkSOyfCm1DrLHGCUSaV6HSYvmJplCPNHg6JEfZC5tO/jy8ScDgQUOJbE0fLlD14JA8zVKyGQjN/89Amyl1Kem8AbcczWjuRjQiH+9r2BPKT8pPlW/q1lCz/adSTWTh5Zp3waCEJnaqVGwut3zCBSwxK2G/xYgGPJ943lIZdYhGTTJBP46y+aEqemDhFKMiqCSz037ApmjlO8ptj7cPoUJhfl9ym74V9O2cd+byClK4Z66Uv+29kgOV0Q1tUwz7E09Y18NMrkdLYj0O8AP2m0VfUd3+/YVdcpNfpMarTT/uDyXiWtT+bPlp0zPbwPrX8B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950212A5AAE4295E0401F0A079905C8</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3vr4jSx1WIAwklUUFKKWyjhX4Bpe3LlXEMmCZOsB2g/fXXDk0KlPZ2r4SEPBnPnPEcn/E5h3FU9XzOMRMkoVpw2dT/saeu7bqwYcAJqBk2qFtGw264hlM/q2P3DMIGaOhawHmGA8oFpKKpV4FlG8AxLHsIgFdreLVqpeFaz7r2gBmXoaVLBejaJo4o9/K0TT1j1EsgJ9yjMMbcE8gb+P2eJz09WGDSW+dblHlC1poLkXqmiSohRjiKUAUlsXlu7vmch9wbkBmFImP4PWfIm/r73vV6XVnXKgmbmVUAgAlcU/qEnMxO9dZJsRmHAZ0m23Ub0oQSBCPyBhWoPhbzJNT8aJYwIubxF6Et0wIqtIE3yECWTU918yNBju6HkfZAMg4NPodWEeweTzHDFGFtdB809dOfdXC7d8gg5dOExfxg/XeQMF3hKElxaPCisgLdzyMeOa7WOUZeQFGUcbLC14omKUSYa7cMT8mmR7gkX8i1vP3ahssfKViG0d+05dzcxSqhm0dO55LMMBf/p2e7/dpGeYBRhlsBmMDHpNur8dEwHQcxyTqz7PcFHNz5zRzCrvMWVNnu9/UhWUtuvW/qdbP+76S+8ckdTznqn40XDWv8wjYMgvDxYR3eEE7mDV5P2K+xP/QvGqvefVx7fW6j6Nq3Q+fqeXTbp73nrBqdDJa36+XN4soapTXM2KZ+NXybjB6Y5fj1Rbh+I8HNn+BX/Q6wcbpMnzrXz8huh+OX8Xq4wG/2SzpaLt6C0dP4z5M4mdzTwSgI4pXlkH6dgm6n0/yoabeGfWMhCYNsssBIFEtFj+BS68p+QfG9vCgLCY1p7uqlSqO4wFToLbVLSYuXSQEioSebuV13XQdUa5bb7VoXTrtz0QE2sLrAB47rArfeLTRoi+IAYjuhU6JyKZXd8ud7gCj2OKYhZsYqydAcc/2biJdQQC2g9/JyJJTjYSJV3FqecbSUFx1E2BVggsEkfastENW160Tc0BvmTwVm+9Jd25Pue4xISrDSd0VwLhnOhTyLJVxlIrIqK1ihOJMTgCkR9qp2wzE5idMIK6RmnIRZhCvpPM1PxuTb/6oBEc+tKElY6CGe374vizv8VpyD9AmJcuCqoAsse4mPDKJqUc2nqp2jA6sI72chUZdMHqpgBG2R7H/64IoiSUmUoqwCd+l+aNgLbR5WVWYLVwSVlC9ntZR6KQStojFLWFlWstUqy1txpkSOyfCm1DrLHGCUSaV6HSYvmJplCPNHg6JEfZC5tO/jy8ScDgQUOJbE0fLlD14JA8zVKyGQjN/89Amyl1Kem8AbcczWjuRjQiH+9r2BPKT8pPlW/q1lCz/adSTWTh5Zp3waCEJnaqVGwut3zCBSwxK2G/xYgGPJ943lIZdYhGTTJBP46y+aEqemDhFKMiqCSz037ApmjlO8ptj7cPoUJhfl9ym74V9O2cd+byClK4Z66Uv+29kgOV0Q1tUwz7E09Y18NMrkdLYj0O8AP2m0VfUd3+/YVdcpNfpMarTT/uDyXiWtT+bPlp0zPbwPrX8B</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F9502319FF1B5CEBE0401F0A0599096F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F9502319FF1B5CEBE0401F0A0599096F</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083828</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F9502319FF1E5CEBE0401F0A0599096F</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_4f9499a8-ab03-4061-8489-5676e97aa808</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_4f9499a8-ab03-4061-8489-5676e97aa808</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>F950212A5AAE4295E0401F0A079905C8</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>F9502319FF1B5CEBE0401F0A0599096F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:F9502319FF1B5CEBE0401F0A0599096F</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>70cd5392-3df9-42d0-8e71-f9829da65bed</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>92b8758a-441f-49f2-94a8-40796e4ad166</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a5e0dd34-a05a-448f-94b5-6843d1581ef9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c36a0ce5-45d3-4a4b-9caa-727aebcdb7ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>29067bd3-a7a7-45da-a337-6695ae57ea51</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00056_FUNC_UVTC_UserName_RequestorUser_active_RequesteeUser_active_with_userlinkconsent_exists_ResetPassword_Role_Portal_CS_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportal"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdportalCS"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call PolicyCreateULC_API"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateULC_API");

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Portal_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportalCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj6OQG0wgKkgMlDa9D+mFmZcj4+yAO4mdxk6Afv2xQ0OB0p7OkZCQd7bXXvviZR9xlCaO3+ccckEY1YJhV/8Htbw2ijww7NjCRtPzsIFQHBu4HTtRK4q8GMe6FnBeQEC5QFR0dceym4bVMuzmrWX5btt3vYZrO7917R5yLqGlS8PStWWaUO5XYbt6kVOfIU64T1EK3BfYD/uXF7709FHNSe8drVlWAfPeXIjMN03ciABDkuAGZql5ZO74HEXcD8mMIlHk8BIz4l39Ze9isWgs3AbLZ6ZjWZZpdUzpE3Ey+6r3vtSbIQpozNbrAaKMEowS8owUqUsQcxZp/WTGciLm6TvQtmlbCtqAJTaw3aRfdfM1QMXuk0g7JHOODD5Hdg02hhhyoBi0u3HQ1b9+roPrvbc5ojxmecr31n9HCWgJCcsgMnidWc3u84gHytU7AuwHFCcFJyVcqTHJEAau3eQQk+UF4XL4Iq5V7deWXP5IPWWA/6YtR+Y2V0ndPFCdIZkBF/+nZ9v9WqPco6SA3hRWdzf2IBAj5/bq6sQxf/y+PvttZeNVs1tR2HZek9q0+2W9P6yb2XrZFDtx3LrK7qaPg9Nf7CG5YeNwFjbj8Ma5xH/OZMCfQf5wsmofd76dF8HqNJmcscmy+fPkeNIW7dH18v7emx4v0Dm6+3IyKFbnz7ftyV10QgbT8/BXxzz/Btx0ntyZPTHLRZN+J17pZs9nzF6VpwunHxbX18W8+PW9nE7GZYc8Z6du5zG8+3JsJeWw/wD2Vev4p92M2h7uvua0ncOusZaEsJg+Ahb1Uo1HMNRGsl9IfCwvykIiI65c/UxpFBdAhd5Tu5S0+IUUIBL5spnr9ajTshy74w1GHc9pee6x1bTskdW3Wp2O1en/qDVozWKP4oDRmKhYSmXX8/MxQZz6HGgEuVGyAs+B6x8gDpFAWkDH8nAwyuGWSRW3l033EfM4z1Jq2eksc+dPxWKazuX5uGLiml7n/VhAvqvd7o52jwGTjIASeDXhXI44F7IYT6gsRGI3StSgUMgrIFcq7DvNdsvkJM0SUFTNlEVFAo1snlWlMfn63zEQ5pWVcJyxXKDErg7gu/ntf6tLIX0iohy4SukHyHbCgbvIqfN5P+/v23nX8P0iIuqcybqKnOA1k91Pr+Oi5mQzK5vEMLdr7pstfwlxAMD8gJ+5X5pNvKgkW9Hr+1VeGVJQenV/n1DjqVGUZVF11FNimUt4U2qmbYaAC6l4q1v2B6i5gTA/deFsWO9F3th3+RViTkOBBKRy/rRq+YnXRghcvTYCeXKWn33K7ISUdROwFIdsg0Q+ShTjD98t2MfKT5pv5N+C5dFruw5gbcWReconhiB0plbqalm9MxuYSVgitZDl2+CHAA4F3zVuirzhIuQ0TQsB73/RlMh1dYQxK6gIhnpl2BbeiqdYZeC/Or2BqcT95bZe8ndv68nlRSglMEX6xpf8t7NBqnHBoKtHQcWlqy/l41MGp7MtoX8huKf1tuV5Tt/qd0auO9zWetd61frdTHpvzG8tWzXdPw+9fwE=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F9510772A0A9F33DE0401F0A059930AB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F9510772A0A9F33DE0401F0A059930AB</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F9502197CF972573E0401F0A059909AB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F9502197CF972573E0401F0A059909AB</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083835</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F9502197CF982573E0401F0A059909AB</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083838</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083838</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083838</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj6OQG0wgKkgMlDa9D+mFmZcj4+yAO4mdxk6Afv2xQ0OB0p7OkZCQd7bXXvviZR9xlCaO3+ccckEY1YJhV/8Htbw2ijww7NjCRtPzsIFQHBu4HTtRK4q8GMe6FnBeQEC5QFR0dceym4bVMuzmrWX5btt3vYZrO7917R5yLqGlS8PStWWaUO5XYbt6kVOfIU64T1EK3BfYD/uXF7709FHNSe8drVlWAfPeXIjMN03ciABDkuAGZql5ZO74HEXcD8mMIlHk8BIz4l39Ze9isWgs3AbLZ6ZjWZZpdUzpE3Ey+6r3vtSbIQpozNbrAaKMEowS8owUqUsQcxZp/WTGciLm6TvQtmlbCtqAJTaw3aRfdfM1QMXuk0g7JHOODD5Hdg02hhhyoBi0u3HQ1b9+roPrvbc5ojxmecr31n9HCWgJCcsgMnidWc3u84gHytU7AuwHFCcFJyVcqTHJEAau3eQQk+UF4XL4Iq5V7deWXP5IPWWA/6YtR+Y2V0ndPFCdIZkBF/+nZ9v9WqPco6SA3hRWdzf2IBAj5/bq6sQxf/y+PvttZeNVs1tR2HZek9q0+2W9P6yb2XrZFDtx3LrK7qaPg9Nf7CG5YeNwFjbj8Ma5xH/OZMCfQf5wsmofd76dF8HqNJmcscmy+fPkeNIW7dH18v7emx4v0Dm6+3IyKFbnz7ftyV10QgbT8/BXxzz/Btx0ntyZPTHLRZN+J17pZs9nzF6VpwunHxbX18W8+PW9nE7GZYc8Z6du5zG8+3JsJeWw/wD2Vev4p92M2h7uvua0ncOusZaEsJg+Ahb1Uo1HMNRGsl9IfCwvykIiI65c/UxpFBdAhd5Tu5S0+IUUIBL5spnr9ajTshy74w1GHc9pee6x1bTskdW3Wp2O1en/qDVozWKP4oDRmKhYSmXX8/MxQZz6HGgEuVGyAs+B6x8gDpFAWkDH8nAwyuGWSRW3l033EfM4z1Jq2eksc+dPxWKazuX5uGLiml7n/VhAvqvd7o52jwGTjIASeDXhXI44F7IYT6gsRGI3StSgUMgrIFcq7DvNdsvkJM0SUFTNlEVFAo1snlWlMfn63zEQ5pWVcJyxXKDErg7gu/ntf6tLIX0iohy4SukHyHbCgbvIqfN5P+/v23nX8P0iIuqcybqKnOA1k91Pr+Oi5mQzK5vEMLdr7pstfwlxAMD8gJ+5X5pNvKgkW9Hr+1VeGVJQenV/n1DjqVGUZVF11FNimUt4U2qmbYaAC6l4q1v2B6i5gTA/deFsWO9F3th3+RViTkOBBKRy/rRq+YnXRghcvTYCeXKWn33K7ISUdROwFIdsg0Q+ShTjD98t2MfKT5pv5N+C5dFruw5gbcWReconhiB0plbqalm9MxuYSVgitZDl2+CHAA4F3zVuirzhIuQ0TQsB73/RlMh1dYQxK6gIhnpl2BbeiqdYZeC/Or2BqcT95bZe8ndv68nlRSglMEX6xpf8t7NBqnHBoKtHQcWlqy/l41MGp7MtoX8huKf1tuV5Tt/qd0auO9zWetd61frdTHpvzG8tWzXdPw+9fwE=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F9510772A0A9F33DE0401F0A059930AB</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdb+I4FH2fXxFlHquQBAIhUUEKbdlm+znQdqZ9WRn7BtwmNo0dYPrr1w5NCpR2OyshId9cn3vuh499KFCWNsNICMgl5cyIj3vmP2iSTNwuECvwJ9jyiO9bQYKIRbrEJyRpd33HNY1YiAJiJiRismc2HdeznLblejeOE7a6YStodFvtB9O4g1woaOXScExjlaVMhGXYnlnkLORIUBEylIEIJQ7H0cV5qDxDVHEy+4drlmXAvD+Tch7aNm4QwJCmuIF5Zh/aWz6HRIRjOmVIFjm8xiSiZ77uXS6XjWWrwfOp3XQcx3YCW/kQQaffzf63ajOQmCV8vT5CjDOKUUpfkCZ1AXLGiRGlU55TOcs+gHZt19HQFqywhV2PfTfttwAluy8ibZHMBbLEDLkV2AgSyIFhMG5Hcc/8/rUOrvfe5IiJhOeZ2Fn/GSVgC0j5XIUUVWYVu68j7ilX/xBwGDOcFoIu4FKPyRxhEMZ1DgldnVOhho8Io2y/sRLqR6spA/wnbTm0N7kq6vae6hzTKQj5f3q22a81yh1KC+jfje6f5DB6GM4GL38/rR5sfHZVZAN5TnCvpLDpvCZVt/t1vTus9Wy9brqlIDru9cHVozeM/F84Ouss0+FyjIJREyWuL5+m2ekqE97J4+XVmbMonJOf0Y/b+yeRNa+voTXM52P+023x7gi+Zd4gwEFM0pPbxHM69tniR77M5M/L4Md9Wz7GD3Zy3nLTu4ejv0hxKg/ci1XB23Ryzt3J7GV6NyB/+Z3buMhP5eBb5+Dg5N72bm+eO0dRdH06eRG9t5w2c9g2VpIwLiaPgGW11OMRHxtD1S8kP5cXbaHESkrXcK41Skhg0uzrXVpawkIJECWhauZ6PQzaruN3W93hiVK7wDtxPMcdOpHTDoKWE7mVBq1Z7FA84iyhOpZW2fX8fE4QZ6EARiC3FrzAMxDmJ4jHSCIjZiN1ODgTcMOVimckwI6Dm3532fV8lzvLp9XMZ8w0Lrm8Yld5lEjIt5W7taXcI8B0TkHLu55voQZcSFWKZ7QoZOo2FqjBoFAXQK41OGx63bYtaDZPQRO1M06KFBrz2bwsjC3W/00LYVFaqcBznkuUuuXx+zC73W9VIZQPodpB6JQGoJoJe26iZpXPx3l3NvOu4KOCUH3KVFVlTvGayfant2HRU1JPSp0YFvVU1Fv+EGIPgP0JP3u3NHU8sqAb0avbVV0YSk76VX+fUeO5USwWRdlRX0tlruBtpZiuPQZcKL37fcOfgNk1hP2l66ZmvRO5tm/zK+SMjSWSkKn5M8rlF94aYxD6rRGrc7P66kNmK6Sqm4SV3Gc7StWTRDP+9NWCQ6z9lPla/S15Tt7atQdrI47KUz0wJGVTvdIXy+8PZgNzBUuVEvJ8E3wfwL7g28a6yDUXqaZpUkj4+IuhJa5nIox5wWR8bJaGTdktecrfcwjfnN7BlNL+elevxId39a+L87ESwAyZtS/9b2eLluOCwdRPgpJLz1ypp6cKzqYbMv9K8L3S+83IiYJhq3W8o/SDuoBbmfTfmd9bNmq6ex76/wI=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F95107838FE20194E0401F0A059930A1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F95107838FE20194E0401F0A059930A1</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083838</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F95107838FE30194E0401F0A059930A1</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bd8c7daa-37c3-4b16-b19f-2fe6d50d25bd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00057_FUNC_UVTC_UserName_RequestorUser_active_RequesteeUser_active_with_userlinkconsent_does_not_exists_ResetPassword_Role_Portal_CS_200_OK_P2" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportal"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdportalCS"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Portal_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportalCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

tS.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4jSx6OQhEsCUUGiTZnJqKXl0tu8HBlnA24TJ7WdQPv1Y4cmBUp72iMhIe9sr732xcs+5iiO6l6fc2CCJFQL/K7+b8epNzszu2Eg3ACj2Qkto+24odG28axlz8KZbc90LeA8g4Bygajo6nXLbhpWy7CbU8vyGm2v2ag59dYfXbsBxiW0dKlZuraOI8q9ImxXzxj1EsQJ9yiKgXsCe5P+xbknPT1UctJ7xxuWRUDWWwqReqaJayFgiCJcw0lsHps7Psch9yZkQZHIGLzGDHlXf927Wq1qq0YtYQuzblmWaXVM6RNysjjSez/KzRAGdJ5s1qeIJpRgFJEXpEhdgFgmodaPFgkjYhl/AG2btqWgDVhjA9tNeqSbbwEKdl9E2iHJODL4Etkl2BjmwIBi0K7HQVc/+loHN3unDFE+T1jM99bfowQ0hyhJITR4mVnJ7uuIB8rVOwbsBRRHGSc5DNWYpAgD164YzMn6nHA5fCHXivZray5/pJwywN9py7G5zVVSNw9UxycL4OL/9Gy7XxuUGxRl0GuP3EfUN6/D86HrDl7Q7TB6iIKrlZlb3YLCtvOGVNXu1/X+sFaz9bppNJqGaJAJ5AbL8WjybKKx76Mb/7H1kDguYbd31L1e3TlD6zL2nftR2Lb/NK9v7gOXPk6sVTC9c5D98Lv5cnG+/MH+8Rtiwknszy874vrMck7a7rB9Dw/MWWT4bDz1G9PnhjNB3JcnP6s76c3qcXYWh87Pxl2/M/81+v0Et/XFr/zhx8xd2PmIhtD/+eQGV3mzgbtvOW3nsGssJWGSzR4Ai3KpxiPwtYHsFxKfy4uykNCYF65eqjSKC6BC76ldSlq8TAoQCT3ZzM160GlZ9fqp2zn1z1p2s31mNS17YPUtt9Ox6v5JqUEbFnsUTxM6JyqWUtnN/HxOEMceB1kZZuRJhpfA9U8QfSSQFtCxPBwJ5TBNpIpDiGdWnCc8nT2SpZXO123mzpwXXRsm4pJesv5cANtV7saOco8Bk5SAknc131wOOBeyFE8oz0Rk13JUo5DJC4ApDfbqzXbLlIORRqCImnESZhHU0mVaFMbkm/+6FCVeWAnHacIEiuzi+H2Y3f63shDSJyTKgauUTkA2Ew7cRI0yn4/zdrbzLuH7WUjUKZNVFYzgDZPdT2/DoqakmpQqMcztknu15ZsQBwDMT/iZ+6Wp4oU52Ype3q7ywpBy0iv7+4RqT7Usz7Oio66SSibhTamYtjkBnEm9e54mj0DNCsL80nVTsd6LXNl3+WViSScCCYjl/GnF8gtvjQlw9dYI5LlZf/UhsxNS1k3AWhyynUbySaIYf/pqwR5WftJ8Jf9WCQvf2nUAayuOzFM+MAShC7VSF8vzB7OBEwlLpBImbBv8EMCh4LvGqsgVFyGnaZYJ+PiLpiSuqyOMk4yKwNcLw7bsFjzFcwrem9M7mELaX+/qNf/wrr67OJ9IAYyRXvmS/3Y2SDEuGHT1JCi4dPW1fHrK4HSxJfOvBN8rfd92B/2TQfvU3VP6TlXAnUx678zvLVs13T8Pvb8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95022A17FABF8C7E0401F0A079902D9</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95022A17FABF8C7E0401F0A079902D9</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95022C79CDE5148E0401F0A079902DB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95022C79CDE5148E0401F0A079902DB</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083842</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95022C79CDF5148E0401F0A079902DB</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083845</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083845</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083845</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4jSx6OQhEsCUUGiTZnJqKXl0tu8HBlnA24TJ7WdQPv1Y4cmBUp72iMhIe9sr732xcs+5iiO6l6fc2CCJFQL/K7+b8epNzszu2Eg3ACj2Qkto+24odG28axlz8KZbc90LeA8g4Bygajo6nXLbhpWy7CbU8vyGm2v2ag59dYfXbsBxiW0dKlZuraOI8q9ImxXzxj1EsQJ9yiKgXsCe5P+xbknPT1UctJ7xxuWRUDWWwqReqaJayFgiCJcw0lsHps7Psch9yZkQZHIGLzGDHlXf927Wq1qq0YtYQuzblmWaXVM6RNysjjSez/KzRAGdJ5s1qeIJpRgFJEXpEhdgFgmodaPFgkjYhl/AG2btqWgDVhjA9tNeqSbbwEKdl9E2iHJODL4Etkl2BjmwIBi0K7HQVc/+loHN3unDFE+T1jM99bfowQ0hyhJITR4mVnJ7uuIB8rVOwbsBRRHGSc5DNWYpAgD164YzMn6nHA5fCHXivZray5/pJwywN9py7G5zVVSNw9UxycL4OL/9Gy7XxuUGxRl0GuP3EfUN6/D86HrDl7Q7TB6iIKrlZlb3YLCtvOGVNXu1/X+sFaz9bppNJqGaJAJ5AbL8WjybKKx76Mb/7H1kDguYbd31L1e3TlD6zL2nftR2Lb/NK9v7gOXPk6sVTC9c5D98Lv5cnG+/MH+8Rtiwknszy874vrMck7a7rB9Dw/MWWT4bDz1G9PnhjNB3JcnP6s76c3qcXYWh87Pxl2/M/81+v0Et/XFr/zhx8xd2PmIhtD/+eQGV3mzgbtvOW3nsGssJWGSzR4Ai3KpxiPwtYHsFxKfy4uykNCYF65eqjSKC6BC76ldSlq8TAoQCT3ZzM160GlZ9fqp2zn1z1p2s31mNS17YPUtt9Ox6v5JqUEbFnsUTxM6JyqWUtnN/HxOEMceB1kZZuRJhpfA9U8QfSSQFtCxPBwJ5TBNpIpDiGdWnCc8nT2SpZXO123mzpwXXRsm4pJesv5cANtV7saOco8Bk5SAknc131wOOBeyFE8oz0Rk13JUo5DJC4ApDfbqzXbLlIORRqCImnESZhHU0mVaFMbkm/+6FCVeWAnHacIEiuzi+H2Y3f63shDSJyTKgauUTkA2Ew7cRI0yn4/zdrbzLuH7WUjUKZNVFYzgDZPdT2/DoqakmpQqMcztknu15ZsQBwDMT/iZ+6Wp4oU52Ype3q7ywpBy0iv7+4RqT7Usz7Oio66SSibhTamYtjkBnEm9e54mj0DNCsL80nVTsd6LXNl3+WViSScCCYjl/GnF8gtvjQlw9dYI5LlZf/UhsxNS1k3AWhyynUbySaIYf/pqwR5WftJ8Jf9WCQvf2nUAayuOzFM+MAShC7VSF8vzB7OBEwlLpBImbBv8EMCh4LvGqsgVFyGnaZYJ+PiLpiSuqyOMk4yKwNcLw7bsFjzFcwrem9M7mELaX+/qNf/wrr67OJ9IAYyRXvmS/3Y2SDEuGHT1JCi4dPW1fHrK4HSxJfOvBN8rfd92B/2TQfvU3VP6TlXAnUx678zvLVs13T8Pvb8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F95022A17FABF8C7E0401F0A079902D9</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I4FH6fXxFlHkchF0gDUUGisMxmCpRbq3ZeVsY5gGlip7EDtL9+7dCkQGm3sxIS8snxd75z8WdfchRHjt/mHFJBGNWCblP/B7nzhoccz/BCr2rU0MI2kL2wDNdDLkZ1jC3P0bWA8wwCygWioqk7ll0zLNewazPL8qt1v3ZR8Rz3t67dQcoltHSpWLq2iyPK/TxsU89S6jPECfcpioH7AvvT9qDvS08fFZz01uWeZR4wba2ESHzTxJUQMEQRrmAWm5fmkc9lyP0pWVIkshReY4a8qb/u3W63lW21wtKl6ViWZVoNU/qEnCy/661vxWYIA7pg+3UHUUYJRhF5QYrUAMSKhVo7WrKUiFX8AbRt2paCNmCHDWzX6HfdfAuQs/si0hHJlCODr5BdgE1gASlQDNrtJGjq37/Wwf3eWYooX7A05ifrP6MEdAMRSyA0eJFZwe7riGfK1boE7AcURxknGxiqMUkQBq6NUliQXZ9wOXwh1/L2azsuf6SYMsB/0pZL85CrpG6eqU6XLIGL/9Ozw37tUe5QlEHrdtP58XAbrKmw3dE9qdrB/K9o8rcbk1ozp3DovCdVtvt1fTqs5Wy9btr+8Ma3WTXp9KvXj9PdZODwzsvkMahn7fFoHmR315vnmbMeLrFA427jZvLCsrEYxz/R3c9f9uJ6PN9NX5w0eRyM199+U7F94cth/6YxS39Wfz9fP7RXI7eXwNAa3feTzt1sdxVMkJmGT+v1w6M8kC/wax1t4+XQG1zdh2zVfnDwdFwfDb8lF13cHUCfD8V2SHvWssObbzkd5nBsLCRhms3XgEWxVOMRdLWe7BcSn8uLspDQWOSufqI0igugQm+pXUpa/EwKEAl92cz9utdwLafqNqqe7dpXNecvq2bZPattuY2G1fDcQoP2LE4odhhdEBVLqex+fj4niGOfAw0hNTYswyvg+ieIXSSQFtCJPByMcpgxqeL2puY97epLK/XsOX3aMAshWF1cYF0bMnFDb9L2QkB6LN3VI+meACYJAaXvasC5nHAuZC2e0CYTkV3ZoAqFTN4AqRJh36nVXZOTOIlAMTVjFmYRVJJVklfG5Pt/x0CY51bCccJSgSI7P38fpnf6raiE9AmJcuAqpSuQ3YQzV1G1yOfjvC8O8y7g21lI1DGTZRUpwXsmx5/epkWNSTkqZWKY2wX3cssfQpwBMD/hZ56WpowXbshB9OJ6lTeG1JNW0d8nVHmqZJtNlnfUU1qZSnhTSqZtTgFnUvCeZ+wRqFlCmF+6b0rWJ5FL+zG/TKzoVCABsZw/LV9+4bExBa4eG4E8OLuvvmSOQsq6CdiJc7ZOJN8kivGnzxbsY+UnzSP5t2Vp+NauM1gHcWSe8oUhCF2qlbpZnj+YDcwkLJFSyNJD8HMA54IfG8sil1yEnKZ5JuDjL5rSuKaOMGYZFUFXzw2HupvzFM8J+G9O72BybX+9rHf8w8v6ftCfSgWMkV76kv92Nkg+Lhh09SbIuTT1nXx7yuB0eaDzrwTfSb3Ttr1e+6pX73il1HtS6p1uoyzgUSatd+b3loOanp6H1r8=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950235937151B42E0401F0A05990975</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950235937151B42E0401F0A05990975</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083845</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950235937161B42E0401F0A05990975</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a4e513e3-90b8-432f-bd35-c1166cd449c9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00058_FUNC_UVTC_UserName_RequestorUser_active_RequesteeUser_active_with_userlinkconsent_exists_ResetPassword_Role_Retailer_CS_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call PolicyCreateULC_API"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateULC_API");

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID2"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID2"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4j4zxjasnMEMg9LglhQBJk750FGkNamzZsWQu/fVHMrEDhOTQM8MMo/Vq99uLvt0LjqLQ8XqcQypozDR/0NF/NdxH1GjXG0ajGbSNWqMeGK260zYINOARWkHLCZCu+Zxn4DMuEBMd3bHsmmHVDbs2tyzPbXl1q+rUmj917Q5SLk1Llaqla5soZNzL3Xb0LGVejDjlHkMRcE9gb9a7HnlS00MFJr17sUOZO0y7SyESzzRxlQCGMMRVHEfmhXmgc0G4N6MLhkSWwotPwjv6y931el1du9U4XZiOZVmm1TalDuF08VnvfiouA/FZEO/OfcRiRjEK6R+kQF2DWMZE64WLOKViGb1j2jZtS5k2YIMNbNfYZ918dZCjO9PSAciUI4MvkV0Ym0IAKTAM2u3U7+ifz6vg7u48RYwHcRrxo/PfQQK2gjBOgBi8iKxAd77FE+nqXgD2fIbDjNMVfFdtkiAMXJukENDNiHLZfIRrefm1DZc/WnQZ4L8py4W5j1VCN09kZ0AXwMX/qdl+vXZW7lCYQfd+MiTU/bn40Xr+GTSH7qBXGUbO1Wa2bHVyCPvKO1BluV/Ox81a9tbLpZhc3tezbw9P4Z35EM0vH5P7xo+4nj3cmOK2R5bfp1/CaI6Hd1FS4be8fVXrtSbi5mpqb78QnrZGi+3dP9+aa3s8rnyKH+hl5cd0tEz6FeQ+J5srSlacmONFiFrhKLpLfROPn0f3zQpv265wB9v7CfmKJzeBfV3DmWvREJ6215Oncf/TbOS0tvMbu2KubmnT8dtf/c5rTPsxHAoLSphlj78Bi+Ko2sMfaENZLyQ+phclocQIclUvURzFBTChd9UtRS1eJgmIEk8Wc3cetuu21WzUnf6w5w5b1pVVs+yh1bPq7bZr9QYFB+1QHEHsxyygypdi2V3/fAwQRx4HRiA1VnGGl8D1DywOkECaz6byccSMwzyWLM6C5PdarNJEOGQTBY2lC85iAUzXvsdizMZpLxCQHjK3e8DcU8A0oaDoXfU3lw3OhUzFM1plIrSrK1RlkMkBkCoO9pxaq25yGiUhKKBmFJMshGqyTPLEmHz37xgI81w6vZrn7+7dsI6/FRmQOoQqBa5iuQRZRTgxgmpFIO8H3NgPuDDfywhVz0umU6QU75AcfnrtEtUeZYvIiH71Z7/sAnepfvb1tzfND0CZx/koHZEV3XNbzFI5HiR5dItqPqPqczVbrbK8fk1FjKk0b0p+tM0Z4Eyy23YePwEzSxPmWcOlRH3kuZQf4svEks0EEhDJbtPy4xmbxQy42ix8+Uo2564tBy5l3gRsxClZP5QLiEL84Y6CPaz0pHgi/9ZxSl7LdcLWnh8Zp1wnBGULdVJjZPtOU+BYmqWS9+J03/gpA6ecHwrLJJdYhOymx0zA+180RWgdHWEcZ0z4Az0X7JNsjlNsE/Beld6YyYn8ZTJv+LuT+f56NJN0FyG91KX/rWzQvF0w6GoByLF09I1cNKVzttgj9ReAR7xuOc5w2LSb/ZrVGJa83my3Lbfnlgk8iKT7RvxWspfT4/fQ/Rc=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95022FF717C406FE0401F0A079903A3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95022FF717C406FE0401F0A079903A3</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95107652CFA3F80E0401F0A059930AD</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95107652CFA3F80E0401F0A059930AD</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083848</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95107652CFB3F80E0401F0A059930AD</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083852</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083852</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083852</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4j4zxjasnMEMg9LglhQBJk750FGkNamzZsWQu/fVHMrEDhOTQM8MMo/Vq99uLvt0LjqLQ8XqcQypozDR/0NF/NdxH1GjXG0ajGbSNWqMeGK260zYINOARWkHLCZCu+Zxn4DMuEBMd3bHsmmHVDbs2tyzPbXl1q+rUmj917Q5SLk1Llaqla5soZNzL3Xb0LGVejDjlHkMRcE9gb9a7HnlS00MFJr17sUOZO0y7SyESzzRxlQCGMMRVHEfmhXmgc0G4N6MLhkSWwotPwjv6y931el1du9U4XZiOZVmm1TalDuF08VnvfiouA/FZEO/OfcRiRjEK6R+kQF2DWMZE64WLOKViGb1j2jZtS5k2YIMNbNfYZ918dZCjO9PSAciUI4MvkV0Ym0IAKTAM2u3U7+ifz6vg7u48RYwHcRrxo/PfQQK2gjBOgBi8iKxAd77FE+nqXgD2fIbDjNMVfFdtkiAMXJukENDNiHLZfIRrefm1DZc/WnQZ4L8py4W5j1VCN09kZ0AXwMX/qdl+vXZW7lCYQfd+MiTU/bn40Xr+GTSH7qBXGUbO1Wa2bHVyCPvKO1BluV/Ox81a9tbLpZhc3tezbw9P4Z35EM0vH5P7xo+4nj3cmOK2R5bfp1/CaI6Hd1FS4be8fVXrtSbi5mpqb78QnrZGi+3dP9+aa3s8rnyKH+hl5cd0tEz6FeQ+J5srSlacmONFiFrhKLpLfROPn0f3zQpv265wB9v7CfmKJzeBfV3DmWvREJ6215Oncf/TbOS0tvMbu2KubmnT8dtf/c5rTPsxHAoLSphlj78Bi+Ko2sMfaENZLyQ+phclocQIclUvURzFBTChd9UtRS1eJgmIEk8Wc3cetuu21WzUnf6w5w5b1pVVs+yh1bPq7bZr9QYFB+1QHEHsxyygypdi2V3/fAwQRx4HRiA1VnGGl8D1DywOkECaz6byccSMwzyWLM6C5PdarNJEOGQTBY2lC85iAUzXvsdizMZpLxCQHjK3e8DcU8A0oaDoXfU3lw3OhUzFM1plIrSrK1RlkMkBkCoO9pxaq25yGiUhKKBmFJMshGqyTPLEmHz37xgI81w6vZrn7+7dsI6/FRmQOoQqBa5iuQRZRTgxgmpFIO8H3NgPuDDfywhVz0umU6QU75AcfnrtEtUeZYvIiH71Z7/sAnepfvb1tzfND0CZx/koHZEV3XNbzFI5HiR5dItqPqPqczVbrbK8fk1FjKk0b0p+tM0Z4Eyy23YePwEzSxPmWcOlRH3kuZQf4svEks0EEhDJbtPy4xmbxQy42ix8+Uo2564tBy5l3gRsxClZP5QLiEL84Y6CPaz0pHgi/9ZxSl7LdcLWnh8Zp1wnBGULdVJjZPtOU+BYmqWS9+J03/gpA6ecHwrLJJdYhOymx0zA+180RWgdHWEcZ0z4Az0X7JNsjlNsE/Beld6YyYn8ZTJv+LuT+f56NJN0FyG91KX/rWzQvF0w6GoByLF09I1cNKVzttgj9ReAR7xuOc5w2LSb/ZrVGJa83my3Lbfnlgk8iKT7RvxWspfT4/fQ/Rc=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F95022FF717C406FE0401F0A079903A3</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4jxnjC+ZiT2CGQEjJCbkApU1eOoq8gFJbAkk20F9/JBMTICSHnplMGK1Xu99e9O2eC5TEXtgSArgkjBq9TsP85YMX+DBxrKr6b/nloGo9o3rdcjGq+V45QEGATKMnRAo9KiSismF6jutbTsVy/ZHjhOV6WCmXPNd7Mo0xcKFMK5WSYxqrJKYizN02zJTTkCFBREhRAiKUOBy2+jeh0gxRgclsnm9Q5g55cyblPLRtXIoAQxzjEmaJfW7v6ZxHIhySKUUy5fDqMxIN8/XucrksLcslxqe25ziO7QS20okEmX41m1+KyxD16IRtzm1EGSUYxeQP0qD6IGcsMlrxlHEiZ8kHpl3bdbRpC1bYwq5Pv5r2m4Mc3YmW9kBygSwxQ25hbAAT4EAxGN8HvYb59bQKbu6OOKJiwngiDs5/BwloBjGbQ2SJIrIC3ekWj6SreQ447FEcp4JkcKvbZI4wCOOew4SsbohQzRcJIy+/sRLqjxRdBvhvynJu72JV0O0j2emQKQj5f2q2W6+NlTGKU2g+XMtkGg0fM55dOjfUrQ3x6mn6BHf2tJFD2FXegNqW+/V82Kzb3nq99NOmoywb1a9n38bfvSwaXaQ8/n3HguvIScqVlx9nl6kQ41aVOYL2z1yOnF7n1llcoNGNcxW0HuL4YTxrPfh+5enLbPDyexEl8+u7dupxsb4advv1rD9LBut/6inyPHlfvb+8ale7t/zK8+6fqL26Ka8Xj/C4bskltK/txbP07+ndGL78OINv3+VV3778Nl4kZ/J68Nh4i2k3hn1hQQnD9PkFsCyOuj16HaOr6oXk5/SiJSSyJrlqONccJSRQaTb1LU0tYaoIiEShKubm3A0qjue1a0Gn3aq4fv3S8R2367ScWhA4Xuei4KANigOIbUYnRPvSLLvpn88B4iQUQCPgVsZSPANhfmKxgyQyenSgHgejAkZMsfh6OX2pvhBIVn8Cl9WhjtiKpguvbhq3TN7RO96aSOD71F3eo+4BYDInoPldN7hQHS6kysUCZamM3VKGShRSNQG4JuHQ8+sVW5BkHoNGaicsSmMozWfzPDO22Px6FsIilw4uR/nD+zCuw29FCpRORLSC0LFcgCojHJlBfhHIxwFXdwMuzLfSiOj3pfIpOcEbJPuf3tpE98e2R1REv9rDX26Be6t+8vX3N+1PQNmH+dg6ijKy47YYpmo+KPZoFtVcoNKilGZZmtevppmRK/O2IkjXHgJOFb2tR+w3UHtrwj5pumxRH3jeyvfxpXJGhxJJSFS3GfnxhNViCEKvFj31TFan7i17LlXeJKzkMVk7VhuIRvzpkoJDrPWU+F79LBmP3sp1xNaOHxWn2ickoVN90nNk/UFTYKbMEkV8jO8aP2bgmPN94TbJWyxSddNzKuHjL4ZmtIaJMGYplb2OmQt2WTbHKddzCN+U3pnJmfx1NK/Eh6P5Z/9mqPguQeZWl/y3skXydsFg6g0gx9IwV2rTVM7pdIfVXwG+J/Zut+bW2r5T7e4Re7lV3iZwL5LmO/F7yU5OD99D818=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F95022C79DCA5148E0401F0A079902DB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F95022C79DCA5148E0401F0A079902DB</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083852</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F95022C79DCB5148E0401F0A079902DB</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>28a7f95d-3e6f-4995-ab24-ff1b623a128f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00059_FUNC_UVTC_UserName_RequestorUser_active_RequesteeUser_active_with_userlinkconsent_does_not_exists_ResetPassword_Role_Retailer_CS_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RET_CS"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0TpYxXsJFwjQKJQ2PQU2gJlt7xUxjHg3cSB2Am0X3/sQLgVethHQkKejGfWXLxmyhz5nuXUOCehoAHT2o2K/p4rFbJWHkHDyhagkR3jiVEslnKGDcdmIYfcCcq7utbmPCJtxgVioqJb0MwaMGeY2QGEjl10coWMBfMjXRuSkEvTUiUDdW3le4w7iduKHoXMCRCn3GHIJ9wR2OnXOg+O1HRQikmvltcoE4dhdSbE3AEAZ1yCiefhDA58UAYHOmWXO306ZUhEIdn4dHlF39xdLpeZpZ0JwimwIIQAloDUcTmdXuvVq/QycdtsEqzPdcQCRjHy6BdSoDpEzAJXq3nTIKRi5p8xbQITKtMGWWEDm1l2rYOdgwTdhZYOQIYcGXyGzNRYj0xISBgm2kuvXdGvL6vg+u4gRIxPgtDnR+e/g0RYTLxgTlyDp5Gl6C63eCJd1TLBTpthL+I0Jl3VJnOECdeeQjKhqwfKZfO5XEvKr624/NG0ywj+m7KUwT5WCR2cyE6DTgkX/6dm+/VaWxkiLyJVr/smur6VX7zEL1h8DehMwD/dsNcAxUoCYV95DWpb7s35uFm3vbW5NOr0m0Pbu3m7uylOXq366028WD7CKDtmt75X6j9//X6rN1kRP3f94hDU3VGrBM0Gi1pFc84/sW+PBy3zGUT3K3bVQi/+2+P46d5azj781uvveVP8M+rwAPTJvTl4ja066JAsj4fPv/Itexz07WFh2St5Dx/AG416YpGLnoa/xjelZ37VvG/MJk/cRD27A1Yfd/FtsbKLaT+GQ2FKCf1o/IdgkR5Ve7QbWlPWC4mf6UVJqGtMElVnrjiKC8KEXlW3FLU4kSQg6jqymOtzs5QzYaFg1WDDbNp24w5modmENZgrlWxYu005aI3iCGI9YBOqfCmWXffPzwCx73DCXBIacRDhGeH6DxYbSCCtzXrycQSMk0EgWdzy/fnEmxYJgjkTj0srf0E/vnJjpGvdQDyyx7A2ESQ8pG77gLp7BNM5JYrfVYNz2eFcyFwsUBwJz8zEKMNIJCdAqEjYsbLFHODUn3tEIQV+4EYeycxn8yQzgK//LQNhnkh7d4Pk4Z2N6/hbmgKp41KlwFUst0SWkZyYQdk0kPMB5/cDTs3XIpeq9yXzKUKK10gOP+3aRPXHtkdkRO/1/ruZ4t6qX3z9+03wAyhwnI+tIzeme27TYSrng2SPalrNBcosMlEcR0n9CooZQ2keSII05XvGkaS3z0HwQRjYmgAXTZct6iPPW/khvkjMWF8gQXzZbVpyvGC16BOuVou2fCarS/eWA5cyb4KsxClZ3ZMbiEL845KCHaz0pPhJ/i2DcBf4KVt7fmSccp8QlE3VSc2RzzNNgQNplkriC8J946cMnHJ+KNwmeYtFyG4aR4Kc/6IpRqvoCOMgYqLd0BPBPssmOMXnnDg7pW9mEibfjOYVPzuaXzsPfcl3PtK3uvS/lQ2atAsmutoAEiwVfSU3TemcTfdYfQPwO7EXbTn0pM1S9ojYd4/5IJLqN/F3yV5Oj99D9V8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F951078390100194E0401F0A059930A1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F951078390100194E0401F0A059930A1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F9510772A0D1F33DE0401F0A059930AB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F9510772A0D1F33DE0401F0A059930AB</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083855</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F9510772A0D2F33DE0401F0A059930AB</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083859</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083859</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083859</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0TpYxXsJFwjQKJQ2PQU2gJlt7xUxjHg3cSB2Am0X3/sQLgVethHQkKejGfWXLxmyhz5nuXUOCehoAHT2o2K/p4rFbJWHkHDyhagkR3jiVEslnKGDcdmIYfcCcq7utbmPCJtxgVioqJb0MwaMGeY2QGEjl10coWMBfMjXRuSkEvTUiUDdW3le4w7iduKHoXMCRCn3GHIJ9wR2OnXOg+O1HRQikmvltcoE4dhdSbE3AEAZ1yCiefhDA58UAYHOmWXO306ZUhEIdn4dHlF39xdLpeZpZ0JwimwIIQAloDUcTmdXuvVq/QycdtsEqzPdcQCRjHy6BdSoDpEzAJXq3nTIKRi5p8xbQITKtMGWWEDm1l2rYOdgwTdhZYOQIYcGXyGzNRYj0xISBgm2kuvXdGvL6vg+u4gRIxPgtDnR+e/g0RYTLxgTlyDp5Gl6C63eCJd1TLBTpthL+I0Jl3VJnOECdeeQjKhqwfKZfO5XEvKr624/NG0ywj+m7KUwT5WCR2cyE6DTgkX/6dm+/VaWxkiLyJVr/smur6VX7zEL1h8DehMwD/dsNcAxUoCYV95DWpb7s35uFm3vbW5NOr0m0Pbu3m7uylOXq366028WD7CKDtmt75X6j9//X6rN1kRP3f94hDU3VGrBM0Gi1pFc84/sW+PBy3zGUT3K3bVQi/+2+P46d5azj781uvveVP8M+rwAPTJvTl4ja066JAsj4fPv/Itexz07WFh2St5Dx/AG416YpGLnoa/xjelZ37VvG/MJk/cRD27A1Yfd/FtsbKLaT+GQ2FKCf1o/IdgkR5Ve7QbWlPWC4mf6UVJqGtMElVnrjiKC8KEXlW3FLU4kSQg6jqymOtzs5QzYaFg1WDDbNp24w5modmENZgrlWxYu005aI3iCGI9YBOqfCmWXffPzwCx73DCXBIacRDhGeH6DxYbSCCtzXrycQSMk0EgWdzy/fnEmxYJgjkTj0srf0E/vnJjpGvdQDyyx7A2ESQ8pG77gLp7BNM5JYrfVYNz2eFcyFwsUBwJz8zEKMNIJCdAqEjYsbLFHODUn3tEIQV+4EYeycxn8yQzgK//LQNhnkh7d4Pk4Z2N6/hbmgKp41KlwFUst0SWkZyYQdk0kPMB5/cDTs3XIpeq9yXzKUKK10gOP+3aRPXHtkdkRO/1/ruZ4t6qX3z9+03wAyhwnI+tIzeme27TYSrng2SPalrNBcosMlEcR0n9CooZQ2keSII05XvGkaS3z0HwQRjYmgAXTZct6iPPW/khvkjMWF8gQXzZbVpyvGC16BOuVou2fCarS/eWA5cyb4KsxClZ3ZMbiEL845KCHaz0pPhJ/i2DcBf4KVt7fmSccp8QlE3VSc2RzzNNgQNplkriC8J946cMnHJ+KNwmeYtFyG4aR4Kc/6IpRqvoCOMgYqLd0BPBPssmOMXnnDg7pW9mEibfjOYVPzuaXzsPfcl3PtK3uvS/lQ2atAsmutoAEiwVfSU3TemcTfdYfQPwO7EXbTn0pM1S9ojYd4/5IJLqN/F3yV5Oj99D9V8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F951078390100194E0401F0A059930A1</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj1WIExIgUUGC0nYyBdpDen8ZGccBt4mdxg6Xfv2xQ0OBXg5zJCTkne2117542cccpontdznHuSCMakG/rf/xGk23ASfYsCZN13AcJzZangeMpi3tDcdu4VasawHnBQ4oF5CKtm4DyzGAa1jONQB+3fMBqNkt8KhrtzjnElq61ICuLdOEcr8M29aLnPoMcsJ9ClPMfYH8sDsc+NLThxUnvXO8ZlkGzDszITLfNFEtwggnCaohlprH5o7PccT9kEwpFEWO32JGvK2/7V0sFrVFvcbyqWkDAEzgmdIn4mT6U+/8qDbjKKAxW69PIGWUIJiQV6hIDbGYsUjrJlOWEzFLv4C2TAsoaAMvkYEsh/7UzfcAJbsDkXZI5hwafAatCmyMY5xjirB2Mw7a+s/DOrjee51DymOWp3xv/XeUMJ3jhGU4MniVWcXucMRPytU5xsgPKEoKTuZ4pMYkgwhz7SrHMVkOCJfDF3GtbL+25PJHqinD6G/acmxuc5XUzU+q0ydTzMX/6dl2v9YotzApcKdxE1y8PtI0omNx3613B/Ow3nBPm2f3TruksO28JrVp99t6f1g3s/W26RyerI5GQe8yZ4Pwn9HFr9S5Yw/0fNGLsxy3fgdPw4dVbj8+jUcPccbntjW4vXvp9e/57fB5Ctxx6+zql9cfxede8gNM6g83N/RxmFxGvevssje3GPNcEayK8TS8mi7Y0cSJh8sRAffhxeDGa4z74Oho8buXLZ6e3V62Sqyw+XL+endy9aPhXfRIE8bThzs3vLLPfg+f2+85beewa6wkISwmTxiJaqnGI+hrZ7JfUHwvL8pCIiMuXf1MaRQXmAq9o3YpafELKUAk8mUz1+szz7VAw+536x5weqfNU+AA6wx0get5duu0UWnQmsUexRNGY6JiKZVdz8/3BFHqc0wjnBtzVqAZ5vo3iH0ooBbQsTwcjHJ8zaSKLycTx6GEuVMUW/WCztBrHD2nEynCIyYu6WXejQXOd6W7viPdY4xIRrDSdzXgXE44F7IWL3BeiMSqzWGN4kLeALkSYd92Wq7JSZolWDE1UxYVCa5ls6ysjMnX/7YBES+t49Pr8uB9mdf+t6oE0iciyoGrXHpYthF/uINavlsl8nXCje2EK/huERF1vmQ9RU7Qmsnup/cxUfOxmRGZ0Z+T8I9V8d64H7z9407zG1Lmfj02gaI52QpbXabyfpDq0am6+QJrL7ViPi/K/jWVMuYS3pQCaZkhRoWUt9U1e8bU3ECYB90uG9Z7kTf2XX6FmNFQQIFTOW1auTzgaRFirp4WgTwmy0PfLTshZd0EXorPbCeJfIEoxt8+UpCPlJ80X8m/Bcuj93Z9grUVR+Yp3xOC0KlaqXtk9cVQICZhiRQ+lm+DfwbwWfBd46bIGy5CTtOkEPjrL5pStLYOEWIFFUFfLw3bKlvyFKsM++9OH2BKJX+7mpf8y6v5fjgIpd6lUN/4kv92Nkg5Lgjr6gVQcmnrS/nSlMHpdEvV3wh+EPZmS8q6JTE9Z1vY66D7fph3Mul8MH+0bNV0/zx0/gU=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F951062DA3904BE7E0401F0A059928E6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F951062DA3904BE7E0401F0A059928E6</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083859</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F951062DA3914BE7E0401F0A059928E6</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76b183b5-b438-4fc7-8e98-c002ea349dcd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aad339da-ecbc-4627-80b7-9e78cc0b4bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>28a7f95d-3e6f-4995-ab24-ff1b623a128f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>role</con:name><con:value>nodeIdRTL</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:RET_CS_1</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="04.UserValidationTokenCreate_Access_P1"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00001_ACCESS_UVTC_UserName_RequestorUserFAU_Active_RequesteeSelf_ResetPassword_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4jx0j+ULAnsCMG5oeWtK0QGiTl46QF1BrS2DJhvTXH8nEBMjl0DPDDKP1avfbi77dc0my1ItiKSFXTHCr3+vYP2m7NaWBlzghdakTTN3QCd2EOjMvbIZu2ITWFGyrL2UBfS4V4apje9gNHNx03GCMceSHEfYbvt+8s60J5FKb1ioNbFubLOUyqtx27CLnkSCSyYiTDGSkaDSKrwaR1oxIjcnunm9RVg7z7kKpZYQQbSRAIU1pg4oMnaMDnfNERiM250QVOTz4TGTHfri7Xq8ba78h8jnyMMYIh0jrJJLN39rdN/VlSPp8JrbnC8IFZ5Sk7A8xoK5ALURixelc5EwtshdMu8jFxrQDG+pQN+BvbfTooEJ3oqUDkLkkjlwQtzY2hBnkwClYN8N+x357WgW3d8c54XIm8kwenf8OEvASUrGExJF1ZDW60y0+k67uOdCoz2laSFbCF9MmS0JBWl9zmLHNgEndfIm0qvJbG6l/rO4yoH9TlnO0j1VDR89kp8fmINX/qdl+vbZWJiQtoDuZ4ulyEPf4CK+vEkmb1/HdP3x2U36XnQrCvvIW1K7cD+fjZt311sMluGuxm6+XazIc5+38Kl9J9LuYfPqF+Hsf4ctvyWycjYPiyxCPvdX3UlB/cX37kcdlKt6p8XBNp6UIWhS35E3rjT++hbuPRRGseFgu302KP0J9jtXEL2fozBX3bk4HeO7R+2k5+LAefLqbDejH2ENSbXo/Pvvz4BZtxt+8cnK7+P4GLsS1u/7s3ya95o9v79ekJTuPMe3HcCisKWFUTH8BVfXRtEe/Z13qehH1Or0YCUucWaUaLQ1HSQVc2V1zy1BLVGgCYkmki7k9X4ZNF4der+X2wvgsaH/AAXYvcYybYeiHLVxz0BbFEcQLwWfM+DIsu+2f1wHSLJLAE8idUhR0AdJ+xWKPKGL1+VA/DsEljIVm8blb+H9CAvT3PHBXLJVlUuCzZjuzrS9CXfPrPJ4pyA+p2z+g7iFQtmRg+N00uNQdLpXOxYqUhUrdRkkaHAo9AXJDwpEXtJtIsmyZgkGKMpEUKTSWi2WVGSS3/55DqKykww/j6uG9GNfxtzoFWidhRkGaWN6DLiM8mUHtqFkH8nLAZ/sB1+bjImHmfel8qpzRLZLDT49tYvpj1yM6op8Xo59ujXunfvL1pzfRK6DQcT52jpKS7bmth6meD5o9unU1V6SxahRlWVT1axlmzLV5pAnSRSOghaa3+7H4DRztTKCTpssO9ZHnnfwQX6EWfKSIgkx3m1UdT1gtRiDNatHXz2Rz6t5y4FLnTcFGPSe7SPUGYhC/uqTQiBo9Lf6q/9YiTx7L9YytPT86Tr1PKMbn5mTmyP0LTUGFNss08Yl83/hzBp5zfijcJXmHRelumhYKXv5iGUbr2IRSUXDV79mVYJ9lK5zqfgnRo9ITMxWTP4zmjXxxNP+4Gow032XE3umy/1Z2WNUuVC+mWr/C0rE3etPUzvl8j9UfAD4h9lbbD7HnYjcMDogdx4+P+SCS7hPxU8leTo/fQ/df</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F951078390210194E0401F0A059930A1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F951078390210194E0401F0A059930A1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F951092D71D9A648E0401F0A05993970</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F951092D71D9A648E0401F0A05993970</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_08392</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951092D71DAA648E0401F0A05993970</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130925_075247</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130925_075247</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20130925_075247</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E736ED6B4703B84FE0401F0A05996EB3</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4jx0jG0yMPYEZPhMSAgnQlstLR8hro9TIYMlA+uuvZGIChOTS++TRerV7dvfoSNccL6KiV+ccEkFjpnVbVf2XBeWZO7PKRmVmY8Ou2I5RcR0wzFLFrLhBEDi4pGtdzlPoMi4wE1W9aFolw3SNYnls2Z7leuVKoWLbU137AQmXoaVLwdS17SJi3MvSVvU0YV6MOeUewwvgniDeqP7Q86Snh3NMeu16hzJLmNTmQiw9hEjBBwJRRAokXqBrdORz7XNvREOGRZrAa06fV/XXvZvNprApFeIkREXTNJHpIunjcxp+1Wtf8s3gd1kQ79ZNzGJGCY7oH6xAPYCYx75Wj8I4oWK++CC0hSxThTZgSwxi2eyrjt4SZOgujHQEMuHY4HNs5cGGEEACjID2fdit6l8vm+Bu7zjBjAdxsuAn67+DBGwNUbwE3+B5ZTm6yyOeaVftGojXZSRKOV1DX9FkiQlw7TGBgG57lEvy+VzLxq9tec4wIH8zkmt0iFPCRmc606IhcPF/5nU4q12UHzhKoTYejLm/eZ6IuePP+c1s9DB17tjNsPkcVzMIh847UPtRv65Pibrn1esmgQbuvdn7abbvVv/MyvVe3bltPt8sxsX5009n0LmfLR/uR7zR7W8Gyepu/r2xdqbBE2736/zHP+1V6QmJyvomHNsp+0Kjkh+uaN+y+2a/3Ww92zF8G3bCaP2Ix+PVHzSd9JaD6PZ36JhB7/kW7idPbhg635qjRtzpXVk/+aQ1XTlF9A1/uWWVoDxwV+yp93iHG6j9O6y+1XRYw7Exl4NROnsGIvKloka3pXXkvLD4XFqUhfpGkLl6S6VPXAATek3tUrLipVJ8qO/JYe7Wbad01W5dNWzHLDUqdqdt2qbVMetm2XWv2o1Srj87FCcQmzELqMqlFHbHn88BkoXHgfmQGOs4JXPg+icRW1hgrcuG8mDEjMM4lgreXiXpJCC3vc20yEtwY00nSaP9ggupjBpQyRhd68diwAZJPRCQHOu3c6TfQyB0SUGJvGI6l1TnQjZlhdepiKzCGhcYpPIaSJQSe0W7UkacLpYRKMhoEftpBIXlfJm1CPHdt2hgwjPrsD3+1R01s1P4YZGn//J+SB+fKgeu6mmAnCmcuYzsvJgPiy6ah0Xn4eupT9Vhk80VCSU7JMe/3jijyLInjKqqOfpl5bj37hdvf78TfQIKnfZjn8hf04O0+a0qLwopJbV8oitcWBXS9TrNZugomUxkeGQh00EjIKnUupdx/BsY2odAF10ze9Qnmff2Y3ypmLORwAIWknFatrzgjTECrt4YXcnu7aUPmKOUsm8CtuKcrRnJp4hC/OlrhXhE+Unzo/xs4sR/G9eZWAd5ZJ3yYSEoC9VKXSovH5CCxDIslSoYJ4fBzwU4l/zYuG/yHouQbJqlAj7+oyl5q+qYkDhlotvSM8Oh5GY4xcsSvDend2EyWX+9p7f8w3t68tAbSfFbYH3vS//b2aAZXQjIXZxmWKr6Vj45ZXIWHkj8K8BTle9IknQkT+yW6e5V3nFds+y4+wYeVVJ7Z35vOejp6Xmo/Qs=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E736F038F3804D09E0401F0A07990579</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbZcuI6EH3PV7g8j1NGXnAMrkAVa8YzQBbI+pISsgAFWzaW7JB8/UgmdoCQXOY+udRudZ/uPjrSGYNhYLotxnDCSUQVr9tQnyxkmPq07muOXa9qVdOua3A69TUf2fpMN3XTqGFV8RhLsUcZh5Q3VFM3LE2va6Y9MaquqbumVbGs2qOq3OKEidDCpaKryjoMKHPztA01TagbQUaYS2GImcuRO24NB67wdGGBSW2ebVDmCZPmgvPYBQBVfIxwEKAKikJwBnZ8znzmjsmcQp4m+D2nzxrq+96Xl5fKi1WJkjkwdV0Heh0IH5+R+Q+1eVJsxr5HZ9Fm3YE0ogTBgLxBCWqI+SLylVYwjxLCF+EXoQ1g6DK0htdIQ0aV/lDBR4Ic3ZGRdkAmDGpsAY0i2DWe4QRThJWba6+h/jhugpu9kwRSNouSkO2t/w0SphkOohj7GisqK9AdH/FAu5pnGLkeRUHKSIZHkiYxRJgplwmekfWAMEE+nyn5+JU1KxiG0b+M5Axs4xSwwYHOdMkcM/5/5rU9q02UWxikuDnsmlXQiZyrHhwY69n81/PgOcw4GJFhI4ew7bwBVY76fb1P1JJX75uW2WhC279voyuwCAw2snvT1c81n5p3q/OgQ89fydXp66N108erPz28bj+81cbgt29zK5u82XfIGy1Rvesw8/JleNK+YWliPfyM3tqTP4+ngKIaDdtJdczsmwvjFXTjyzh7fu5ZVB/eL3+tHumt/TAfPdrA4W0LsmUH1uLb4SBKreWJE8xSPAjH91cXPf+i35rF88ZHTds17BoLORin02eMeLGU1PC6Sl/MC/LvpUVaiK/Nclc3lvrEOKZcbcpdUlbcVIgP8V0xzM2651inve5pu+o4drtW7ff0qm709ZZu1+unvbZV6M8GxR7ETkRnROaSCrvhz/cAUegyTH2caFmUogVm6jcRu5BDxaPX4mBElOFJJBQ8u3v+M2BDr/PY+XV+28HLuW+1u5etSiqizohgjKqMIn5BL5LWjONkV7+dHf2+xojEBEuRl0xnguqMi6asYJbywKhksEJxKq6BRCqxa1ZrNmAkjAMsIYMw8tMAV+JFnLcIsM3X1CBiufW6N3nyxp38FH5Z5P6/oh/CxyfSgcl62ljMFB+4jIyimC+LlhV/FF2Eb6U+kYdNNJcnBG2Q7P764IwkS0kYWVVn/GQUuEv3o7d/3gm+AQX2+1Em8jOylba4VcVFIaSkWUx0BSurSpplaT5DR8pkIsIDA+gOGGOUCq17nURLTEEZAhx1zZSo9zKX9l18KV/QMYcch4JxSr484o0xxky+MTzB7vWxD5idlKJvHK/5IVsnEE8Rifjb1wpykfQT5kvxeYkS/2NcB2Jt5RF1iocFJ3QuV/JSef2CFCgSYYlQwSjZDn4owKHku8ayySUWLtg0TTn++o8i5a2hQoSilHKvq+aGbcnNcfLXGLsfTp/C5LL+fk+v2Zf39P1wMBbiF0K19CX/7ayRnC5IvFCFf46loa7Fk1Mkp/MtiX8HuK/yfd2q9a2aXu3q9VLlnXpdt5162cCdSpqfzJ8tWz3dPw/Nvw==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E736ED6B4775B84FE0401F0A05996EB3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E736ED6B4775B84FE0401F0A05996EB3</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130925_075247</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E736ED6B4776B84FE0401F0A05996EB3</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00002_ACCESS_UVTC_UserName_RequestorUserFAU_Active_RequesteeBAU_ResetPassword_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU+o6FH73V3Tqo1N6oQXaEWa4qLuKiqByzn5xQppCsE1qkyDy63dSLAJeDvvMMMNkdWWtb13yrXXKQJo4QZsxlHNMiRb2mvqT61jVid+IDduLbMN1J1XDd+q+MXHrwAIIOV7d1rWQMYFCwjggvKk7lu0almfY7r1lBVU/sOoVr+r/1rVHlDNpWqpULF1bpglhQeG2qYucBBQwzAICUsQCDoNR+7ofSM0AlJj01ukaZeEwb804zwLThJUIQZQksAJpap6aOzqnEQtGeEoAFzl69xmxpv5+9/X1tfJardB8ajqWZZmWb0qdiOHpsd46Ki+jKCQxXZ+7gFCCIUjwCihQ14jPaKS1kynNMZ+l35i2TdtSpg20hAa0XXKsmx8OCnQHWtoBmTNgsBmwS2NDFKMcEYi0h2HY1I8Pq+D67n0OCItpnrK9899BQmSBEpqhyGBlZCW6wy1+ka7WKYJBSGAiGF6gG9UmGYCIaYMcxXjZx0w2X8S0ovzakskfLrsMwb8py6m5jVVCN7/ITg9PEeP/p2bb9VpbeQSJQK3L+z50J3d346tpp52Pb8i03RV0IFbPz80CwrbyGtSm3O/n/Wbd9Nb7peF8cebdsjvRoH4cn4RxeoKu4tGLtRSd+dXNBb8cpP1x94Hix9XJHfDmk3l6PU/9/nL4sMAnadq7eO6Fzys69vDR+NdVzfbu8AO4G9xU/fTxd9LxxrXVkGW1qNpb1dGg1l8MIht0+7301pn7r9x5O3lM+8St/Vvvd8FiPL1wpPNf10dklYmrlQjrcPTr0qNX15N28yOm7Rh2hSUljMRkjiAvj6o9wp52LusF+M/0oiQ4MuJCNcgURzGOCNdb6pailkBIAsJRIIu5Pp/7nm359pnX8Bv1jmOfWa5ln1tty/P9ql+rlRy0RrEHsUtJjJUvxbLr/vkZIEwDhkiEcmNBBZwhpv9gsQc40EIylI+DEobuqWRx211mtZWo1laUuDx+9uLGUsSJk+naDeW35DZvxxzlu9Rd3aHuIYI4w0jxu2pwJjuccZmLF7AQPLErC1AhSMgJkCsSDhy34ZkMp1mCFFIzpZFIUCWbZUVmTLb+dwwAWSEdnt0XD+/buPa/lSmQOhFWCkzF0kGyjOjTDGoEXhnI9wHXtgMuzbdFhNX7kvnkOYZrJLufPtpE9cemR2RET93Rk13i3qgffP3zTfMHUOZ+PjaOogXeclsOUzkfJHu0ymq+gMpLRSwWoqhfXTFjLs2bkiBtc4SgkPT2dk+fETE3JsyDpssG9Z7njXwXn+AzMuKAo1R2m1YcD1gtRoip1SKUz2R56N6y41LmjaMl/0rWTeQGohD/uKTAACo9KR7Iv1eaRx/l+sLWlh8Zp9wnOJZ8L09qjrx90xSQSrNYEh/Nt41/ZeAr57vCTZI3WLjspong6PsvmmK0pg4gpILwsKcXgm2WLXDytwwFH0qfzBRM/j6al+zb0fzPdX8k+S4F+kYX/7eygYt2gUhXG0CBpakv5aYpnZPpFqu/A9wjdstx6m63dt71a536NrFbfqOzSeBOJK1P4s+SrZzuv4fWHw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F9502274C6FC96B7E0401F0A0599098B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F9502274C6FC96B7E0401F0A0599098B</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F951091E58987B21E0401F0A05993966</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F951091E58987B21E0401F0A05993966</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_08396</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951091E58997B21E0401F0A05993966</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_08399</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_08399</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_08399</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbU+o6FH73V3Tqo1N6oQXaEWa4qLuKiqByzn5xQppCsE1qkyDy63dSLAJeDvvMMMNkdWWtb13yrXXKQJo4QZsxlHNMiRb2mvqT61jVid+IDduLbMN1J1XDd+q+MXHrwAIIOV7d1rWQMYFCwjggvKk7lu0almfY7r1lBVU/sOoVr+r/1rVHlDNpWqpULF1bpglhQeG2qYucBBQwzAICUsQCDoNR+7ofSM0AlJj01ukaZeEwb804zwLThJUIQZQksAJpap6aOzqnEQtGeEoAFzl69xmxpv5+9/X1tfJardB8ajqWZZmWb0qdiOHpsd46Ki+jKCQxXZ+7gFCCIUjwCihQ14jPaKS1kynNMZ+l35i2TdtSpg20hAa0XXKsmx8OCnQHWtoBmTNgsBmwS2NDFKMcEYi0h2HY1I8Pq+D67n0OCItpnrK9899BQmSBEpqhyGBlZCW6wy1+ka7WKYJBSGAiGF6gG9UmGYCIaYMcxXjZx0w2X8S0ovzakskfLrsMwb8py6m5jVVCN7/ITg9PEeP/p2bb9VpbeQSJQK3L+z50J3d346tpp52Pb8i03RV0IFbPz80CwrbyGtSm3O/n/Wbd9Nb7peF8cebdsjvRoH4cn4RxeoKu4tGLtRSd+dXNBb8cpP1x94Hix9XJHfDmk3l6PU/9/nL4sMAnadq7eO6Fzys69vDR+NdVzfbu8AO4G9xU/fTxd9LxxrXVkGW1qNpb1dGg1l8MIht0+7301pn7r9x5O3lM+8St/Vvvd8FiPL1wpPNf10dklYmrlQjrcPTr0qNX15N28yOm7Rh2hSUljMRkjiAvj6o9wp52LusF+M/0oiQ4MuJCNcgURzGOCNdb6pailkBIAsJRIIu5Pp/7nm359pnX8Bv1jmOfWa5ln1tty/P9ql+rlRy0RrEHsUtJjJUvxbLr/vkZIEwDhkiEcmNBBZwhpv9gsQc40EIylI+DEobuqWRx211mtZWo1laUuDx+9uLGUsSJk+naDeW35DZvxxzlu9Rd3aHuIYI4w0jxu2pwJjuccZmLF7AQPLErC1AhSMgJkCsSDhy34ZkMp1mCFFIzpZFIUCWbZUVmTLb+dwwAWSEdnt0XD+/buPa/lSmQOhFWCkzF0kGyjOjTDGoEXhnI9wHXtgMuzbdFhNX7kvnkOYZrJLufPtpE9cemR2RET93Rk13i3qgffP3zTfMHUOZ+PjaOogXeclsOUzkfJHu0ymq+gMpLRSwWoqhfXTFjLs2bkiBtc4SgkPT2dk+fETE3JsyDpssG9Z7njXwXn+AzMuKAo1R2m1YcD1gtRoip1SKUz2R56N6y41LmjaMl/0rWTeQGohD/uKTAACo9KR7Iv1eaRx/l+sLWlh8Zp9wnOJZ8L09qjrx90xSQSrNYEh/Nt41/ZeAr57vCTZI3WLjspong6PsvmmK0pg4gpILwsKcXgm2WLXDytwwFH0qfzBRM/j6al+zb0fzPdX8k+S4F+kYX/7eygYt2gUhXG0CBpakv5aYpnZPpFqu/A9wjdstx6m63dt71a536NrFbfqOzSeBOJK1P4s+SrZzuv4fWHw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F9502274C6FC96B7E0401F0A0599098B</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxGlj6vgJIRAooJEaenNFtousN1tX6rgOGCa2GA7Afrrrx0aCpT2sldCQp6MZ858+Myc8zBNbL/NOWICU6IFl0392TLHNbfuxUYcRVXDcSzLGMeOaTRM13Iabs3xzIauBZxnKCBchEQ0ddu0HMOsGZYzMk2/6vmWWWlUrSdde0CMS9NSpWLq2ipNCPcLt009Y8SnIcfcJ2GKuC+gP2z3e77U9MMSk94636AsHLLWVIi5DwCsRAiiJIEVSFNwDvZ0ziPuD/GEhCJj6M1nxJv6293lcllZViuUTYBtmiYwPSB1Io4nZ3rrW3kZRQGJ6ebcCQklGIYJfg0VqD4SUxpp7WRCGRbT9BPTFrBMZdpAK2hAyyFnOnh3UKA70dIeSMZDg09DqzQ2QDFiiECk/RoETf3stApu7o5YSHhMWcoPzn8HCZEcJXSOIoOXkZXoTrd4JF2tcwT9gMAk4zhHt6pN5iFEXLtnKMarHuay+SKuFeXXVlz+cNllCP5NWc7BLlYJHRzJziWeIC7+T81267Wx8hAmGWpNs4b3ncbd2SCf8RXsz8GC1hfrWXLNmwWEXeUNqG25386HzbrtrbdLtNtPvuN7txOk5PsLvXEfnMb0V/v3bfR0HTnrsZ0/jdkPt//zj4X7zAtn173JyxN4vbPcSbzs9yak/4tl7SgP3B/feg/88tWFXpLHKIXrqvP4Out5Hu+wm98jGD+MFpObl99/Fo27EQGPDVZb3D71oserl+H1zb09erx/HfSugD1e/JP8/NaLJnfVIIjpa22e53G3AWDzPabdGPaFJSUMs/EMQVEeVXsEl1pX1isUX9OLkuDIiAtVf644igtEhN5StxS1+JkkIBz5spibc9erWaZn19u22a57bu3KdEyra7bNmudVvUa15KANigOIHUpirHwplt30z9cAYepzRCLEjJxmcIq4/oXFy1CEWkAG8nFQwtGIKhZnYoqXM+JEztK18njhUEF4ltRtXbul4o7csXYsENvn7uoedw8QxHOMFMGrDueyxbmQyViEeSYSq5KHFYIyOQKYYmHfdho1wHE6T5CCClIaZQmqzKfzIjWAb/5tI4S8kA6uRsXL+zSww29lDqROhJUCV7FcIFlHdGQImWUgnwfs7gZcmm9nEVYPTCZUMAw3SPY/vfeJapBtk8iInjvDZ6vEvVU/+frHm+ALUOAwH1tHUY533JbTVA4ISR+tspqLsLKoZHmeFfWrK2pk0jyQDGmBIYKZ5Lf1iL4gArYmwEnjZYv6wPNWvo8vE1MyFKFAqew2rTiesFsMEVe7RSDfyerUxWXPpcybQCtxTNZJ5AqiEH+5pUAfKj0pvpd/S8qi93IdsbXjR8YpFwqByUSd1CBZf9IUkEqzWDIfZbvGjxk45nxfuE3yFouQ3TTOBPr8i6YoramHENKMiOBSLwS7NFvgFOs58t+VPpgpqPxtNq/4p7P5T783lISXhvpWF/+3soGLdoFIVytAgaWpr+SqKZ2TyQ6tvwE8YHbTtutOx+12PPeivsvspte42CZwL5LWB/FHyU5OD99D618=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F9510927A20A7965E0401F0A05993983</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F9510927A20A7965E0401F0A05993983</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_08399</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F9510927A20B7965E0401F0A05993983</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00003_ACCESS_UVTC_UserName_RequestorUserFAU_Active_RequesteeSAU_ResetPassword_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtb+I4EP6+vyLKfjyFOAkhJSpIvN6yW9oe0C7tl8o4A7gkTogdoP31Z4eGAqU99iQk5Ml45pkXPzOXHEeh7Tc4h1TQmGm9dk1/sgA7F5OpbbiWXTXKZbdiTFDVNTBU3At3glwErq71OM+gx7jATNR0G1llA7mGVR4h5DtV33JKru0+6to9pFyaliolpGubKGTcz93W9Cxlfow55T7DEXBfEH/Y6F/5UtPHBSa9frlFmTtM63MhEt80SSkAAmFISiSOzEvzQOcy4P6QzhgWWQpvPgNe09/urtfr0topxenMtBFCJqqaUifgdPZdr38rLkPQY9N4e25hFjNKcEhfsQLVBzGPA60RzuKUinn0iWnLtJAybcCGGMQqs++6+e4gR3empQOQKccGn2OrMDaAKaTACGh3g15N/35eBbd3RylmfBqnET86/xkkYCsI4wQCgxeRFejOt3giXfVLIH6PkTDjdAXXqk0STIBrtylM6eaKctl8Adfy8msbLn+06DIgf1KWS3Mfq4RunshOm86Ai/9Ts/16ba3c4zCD+l+D5yRbju82y/Tnz27lnw449PqxaT4O72o5hH3lLahdud/Ox8266623S7dl26yMW71GC7+MHpPOrHm36P6NBstJ82djNTWXnX6z99ocJ0MmVuOr/qix9gZXdg8cGHZGc+4R/MMd/+4vEGt+wz9GDa8SrQBubpsP41+/2FQsHW/AXjvo5qJc7pf5tHI/YusL7/UhaUXTxXW/7TzfjYbV7vVvazZPuy+OU32w6ObxG9rgxuRh8fBjMrbS4NqspnHtPab9GA6FBSUMs8kzEFEcVXv02lpX1guLr+lFSWhgTHNVP1EcxQUwodfVLUUtfiYJiAa+LOb23K26yLYryGp2PMvxqh1URlYXNZBXrSK77RUctEVxBLEVsylVvhTLbvvna4Ak8jmwAFJjFWdkDlz/wmIbC6z12EA+jphxGMWKxT1AC5vExIsXljWdRDxbeKH9HNi6dh2LG3aTNqYC0kPudg64ewCEJhQUwasO57LFuZDJWOJVJkKrtMIlBpkcAaliYd8uX7gmp1ESgoJqRnGQhVBK5kmeGpNv/20DE55LB51R/vI+Dez4W5EDqRNQpcBVLE2QdYQTQwgVgXwecGU/4MJ8IwuoemAyoSKlZIvk8NN7n6gG2TWJjOipNXyyCtw79bOvf7xpfgHKPM7HzlGwontui2kqB4Skj3pRzSUuLUvZapXl9fMUNabSvCkZ0jKHQDLJby+jeAHM3JkwzxovO9RHnnfyQ3yZmLOhwAIi2W1afjxjtxgCV7tFT76TzbmLy4FLmTcBG3FK1grlCqIQf7mlEJ8oPSm+lX/rOA3ey3XC1p4fGadcKARlM3VSg+Tlk6YgsTRLJfPF6b7xUwZOOT8U7pK8wyJkN00yAZ9/0RSl1XRMSJwx0WvruWCfZnOc4iUB/13pg5mcyt9m84Z/OpvH/auhJLwI6ztd+t/KBs3bhYCuVoAcS03fyFVTOmezPVp/A/iB2a2q10YXXdv1nB2zu5LZq43mLoEHkdQ/iD9K9nJ6/B7q/wI=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F9502197D08F2573E0401F0A059909AB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F9502197D08F2573E0401F0A059909AB</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95022601BE71379E0401F0A079902D7</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95022601BE71379E0401F0A079902D7</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083912</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95022601BE81379E0401F0A079902D7</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083915</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083915</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083915</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtb+I4EP6+vyLKfjyFOAkhJSpIvN6yW9oe0C7tl8o4A7gkTogdoP31Z4eGAqU99iQk5Ml45pkXPzOXHEeh7Tc4h1TQmGm9dk1/sgA7F5OpbbiWXTXKZbdiTFDVNTBU3At3glwErq71OM+gx7jATNR0G1llA7mGVR4h5DtV33JKru0+6to9pFyaliolpGubKGTcz93W9Cxlfow55T7DEXBfEH/Y6F/5UtPHBSa9frlFmTtM63MhEt80SSkAAmFISiSOzEvzQOcy4P6QzhgWWQpvPgNe09/urtfr0topxenMtBFCJqqaUifgdPZdr38rLkPQY9N4e25hFjNKcEhfsQLVBzGPA60RzuKUinn0iWnLtJAybcCGGMQqs++6+e4gR3empQOQKccGn2OrMDaAKaTACGh3g15N/35eBbd3RylmfBqnET86/xkkYCsI4wQCgxeRFejOt3giXfVLIH6PkTDjdAXXqk0STIBrtylM6eaKctl8Adfy8msbLn+06DIgf1KWS3Mfq4RunshOm86Ai/9Ts/16ba3c4zCD+l+D5yRbju82y/Tnz27lnw449PqxaT4O72o5hH3lLahdud/Ox8266623S7dl26yMW71GC7+MHpPOrHm36P6NBstJ82djNTWXnX6z99ocJ0MmVuOr/qix9gZXdg8cGHZGc+4R/MMd/+4vEGt+wz9GDa8SrQBubpsP41+/2FQsHW/AXjvo5qJc7pf5tHI/YusL7/UhaUXTxXW/7TzfjYbV7vVvazZPuy+OU32w6ObxG9rgxuRh8fBjMrbS4NqspnHtPab9GA6FBSUMs8kzEFEcVXv02lpX1guLr+lFSWhgTHNVP1EcxQUwodfVLUUtfiYJiAa+LOb23K26yLYryGp2PMvxqh1URlYXNZBXrSK77RUctEVxBLEVsylVvhTLbvvna4Ak8jmwAFJjFWdkDlz/wmIbC6z12EA+jphxGMWKxT1AC5vExIsXljWdRDxbeKH9HNi6dh2LG3aTNqYC0kPudg64ewCEJhQUwasO57LFuZDJWOJVJkKrtMIlBpkcAaliYd8uX7gmp1ESgoJqRnGQhVBK5kmeGpNv/20DE55LB51R/vI+Dez4W5EDqRNQpcBVLE2QdYQTQwgVgXwecGU/4MJ8IwuoemAyoSKlZIvk8NN7n6gG2TWJjOipNXyyCtw79bOvf7xpfgHKPM7HzlGwontui2kqB4Skj3pRzSUuLUvZapXl9fMUNabSvCkZ0jKHQDLJby+jeAHM3JkwzxovO9RHnnfyQ3yZmLOhwAIi2W1afjxjtxgCV7tFT76TzbmLy4FLmTcBG3FK1grlCqIQf7mlEJ8oPSm+lX/rOA3ey3XC1p4fGadcKARlM3VSg+Tlk6YgsTRLJfPF6b7xUwZOOT8U7pK8wyJkN00yAZ9/0RSl1XRMSJwx0WvruWCfZnOc4iUB/13pg5mcyt9m84Z/OpvH/auhJLwI6ztd+t/KBs3bhYCuVoAcS03fyFVTOmezPVp/A/iB2a2q10YXXdv1nB2zu5LZq43mLoEHkdQ/iD9K9nJ6/B7q/wI=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F9502197D08F2573E0401F0A059909AB</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4jxlj2ZiLPYEZEkKPm1sbIL28dFRJxkpsybVkA/n1RzKxA4Tk0DPDDKP1avfb3U+fdCpgmrjBSAiSS8qZEY4H5i+Mum0H9bDlwt/I8kAXWbDjAKuN/bbb9mAXdpBphEIUJGRCQiYHpgsczwIdy/FmAARtP3C6Lb/d+Wka9yQXKrRyaQHTWKUJE0GVdmAWOQs4FFQEDKZEBBIF09H1VaA8A1hjMoenG5RVwnwYS5kFto1amCCSJKiFeGqf2js+p1gEU7pgUBY5ec6JxcB83rtcLlvLdovnC9sFANjAt5UPFnTx0Rx+qDcTHLKIb9bnkHFGEUzoE9SgromMOTZGyYLnVMbpG6Ed2wE6tEVWyEKOxz6a9kuCCt2RkXZA5gJaIoZOHeyORCQnDBFjfhcOzI/HTXCzd5ZDJiKep2Jv/XeQCCtJwjOCLVFXVqM7PuKBdg1PCQpChpJC0JLcaJpkEBFhfMlJRFdXVCjyYWFU4zdWQv1ozTKC/mYsp/Y2VgXdPtCdMV0QIf/PzLbntYlyD5OCDD8X8f2l7fbXvbOuOIk87+QkassZzr6HgwrCtvMGVDPu5/U+WRtuPW/6rLYnSX/V734NF9PeAk/55WNnHs0nT/2TG16UTz0+tn98ms1HIZymE3Dx2BMJJhdht5/8yBD6lj/N8Pif63jZ+cAeIuDdlN3b+Om+9+AX2eV6gvilh/os/Zl87TN865J41nfth0/Y4Q/3t5cX/8Th7bdxGt9PM//EKedJefX18ubb/ANcXsxvPrllnvcc9gWDH6Pl4KWm7Rp2jbUkTIvfDwTJeqnpEY6NiZoXlO/Li7ZQbEWVa5BpjRKSMGkO9S4tLUGhBIjiQA1zs574HeC6PjjvjT3n7Gx8ATzgTMAIdHwf+L5Ta9AGxR7Ec84iqnNpld3w532AKA0EYZjkVskLFBNhvhNxDCU0QnanDgdngsy4UnEni9Y+7UfZGvYFbj96TjcBedZem8YNl7fsNh9FkuS70t3eke47gmhGidZ3TXChGC6k6sUfWBYycVolbDFSqBsg1yIcuF6/YwuaZgnRSO2U4yIhrSzOqs7YYvPvWhCJynp3MasO3pt17X+rW6B8MNUOQtdyRtQYyYE7CNSFvF1wd7vgOvyowFSfL9VPmVO0QbL76YUmmh8NR1RFv86nvxouNO5Hb3+9034HlL3fjyYRLulW2voyVfeDUo9hPc0/sPWnVZRlUc2vp5UxV+FtJZCOPSWoUPK2nvFHwuwmhH3U7dKg3svc2HfxFTJmUwklSRXbjGp5xNNiSoR+WoTqmKyOfbfspFR9k2QlD9nOE/UC0YjffaSgAGk/Zf6i/pY8xy/jOhBrK4+qU70nJGULvdL3yPoNUiCuwlIlfDzfDn4owKHku8amyQ0Wqdj0u5Dk7S+GVrSBCRHiBZPh2KwM2ypb4ZTrjAQvTq/CVEr+fDWvxJtX8/frq6nSuxSajS/9b2eLVnRBxNQvgArLwFypl6ZKzhZbqv4M8JWwO35vDPoTt9Nr7wr76Kxp4E4lw1fm15atnu6fh+G/</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F9502290C7D41BBDE0401F0A05990991</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F9502290C7D41BBDE0401F0A05990991</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083915</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F9502290C7D51BBDE0401F0A05990991</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00004_ACCESS_UVTC_UserName_RequestorUserFAU_Active_RequesteeOtherFAUResetPassword_Role_DECE_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult FAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult FAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj6sQJySFRAUpBVZLt6UXaE/bl8o4JrgkNtgOpf31xw5NCpT2sEdCQp6MZ765+Js5ETBL3TASAnNJGDX63Zb5NMHQ8xF2LBggz/LGHrbGExxbvtN03Ibj1P3YM42+EDnuUyEhlS3TBY5nAd9yvBEAYT0IXVBrgPqjadxhLpRppVIDprHKUirCwm3LzDkNGRREhBRmWIQShcPo4jxUmiEsMZntkzXKwiFvT6Wch7aNajFGOE1RDbHMPrG3dE5iEQ5JQqHMOX73GYuW+X735eWl9lKvMZ7YLgDABoGtdGJBkh9m+6i8jOM+nbD1uQMpowTBlLxBDeoCyymLjShNGCdymn1h2rEdoE1beIUs5Hj0h2l/OCjQHWhpCyQX0BJT6JTGbvAEc0wRNm5v+i3zx2EVXN8dcUjFhPFM7Jz/DhKmS5yyufIhyshKdIdb3JOu9glGYZ+iNBdkiQe6TeYQYWFccTwhq3MiVPPFwijKb6yE+pGyyzD6m7Kc2JtYFXR7T3a6JMFC/p+abdZrbeUOpjluLyKv1x/Rc3b92P3p3591vFM8mM6OF9GsVUDYVF6Dqsr9ft5t1qq33i9d39vjy8UdjIKEP/4e/zy+5iTI8qQb+YOoP3x87iYDPBxkgCSXzSjoPDRHZ3UHDH82YPO3nd9fv/XOHoWTJoHfP5rnEEVXEYjP3Mt0JpNoPE3GXM4elr0HNuuOMnDayQbXrxfZgF+K2Wh61xzfuuzqHzF8eEnc88HU7v2GZ8wHsHH0ENf/vD0fnz77V7f57Z+ABEnrI6bNGLaFJSUM8/EzRrI86vbod41fql5Qfk8vWkJia1KohnPNUUJiKs22vqWpJcwVAZE4VMVcn38FPnCdoNEFQcf1G/Ue8IDzC0TADwIQRKclB61R7EDsMDoh2pdm2XX/fA8QZaHANMbcWrIcTbEwv7HYhRIafXqjHgejAo+YYvElX/qJ44Ng3ATOInV8RuZvrxhw0xgweUkveTSRmG9Td32Lum8wInOCNb/rBheqw4VUuVjAZS5Tp7aENYpzNQG4JuHQ9Zq+LUg2T7FGamcszlNcm0/nRWZssf53LYhEIb3pjYqH92Vcu9/KFCidmGgFoWM5xaqMeM8McspAvg74eDPg0nyUx0S/L5VPyQlaI9n+9NEmuj+qHlERPXWGT06Ju1I/+Prnm/Y3oOzdfFSO4iXZcFsOUzUfFHu0y2ouYG1Ry5fLvKhfQzMjV+ZtRZCOPcQoV/T2OmIzTO3KhH3QdKlQ73iu5Nv4cjmlQwklzlS3GcXxgNViiIVeLfrqmawO3Vu2XKq8SbyS+2SdVG0gGvG3SwoKkdZT4iv198J4/FGuPbY2/Kg41T4hCU30Sc+R1y+aAjFllijiY3zT+D4D+5xvC6skV1ik6qZxLvHXXwzNaC0TIsRyKvtdsxBssmyBU77Ocfih9MlMweTvo3klvhzN9xfnQ8V3GTQrXfLfyhYp2gVhU28ABZaWuVKbpnJOkw1Wfwf4mdjdCNTrfq/ueBWxNxSx+83jKoFbkbQ/iT9LNnK6+x7a/wI=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950212A0335E314E0401F0A07990586</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950212A0335E314E0401F0A07990586</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F9502197D09C2573E0401F0A059909AB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F9502197D09C2573E0401F0A059909AB</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083919</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F9502197D09D2573E0401F0A059909AB</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083922</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083922</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083922</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj6sQJySFRAUpBVZLt6UXaE/bl8o4JrgkNtgOpf31xw5NCpT2sEdCQp6MZ765+Js5ETBL3TASAnNJGDX63Zb5NMHQ8xF2LBggz/LGHrbGExxbvtN03Ibj1P3YM42+EDnuUyEhlS3TBY5nAd9yvBEAYT0IXVBrgPqjadxhLpRppVIDprHKUirCwm3LzDkNGRREhBRmWIQShcPo4jxUmiEsMZntkzXKwiFvT6Wch7aNajFGOE1RDbHMPrG3dE5iEQ5JQqHMOX73GYuW+X735eWl9lKvMZ7YLgDABoGtdGJBkh9m+6i8jOM+nbD1uQMpowTBlLxBDeoCyymLjShNGCdymn1h2rEdoE1beIUs5Hj0h2l/OCjQHWhpCyQX0BJT6JTGbvAEc0wRNm5v+i3zx2EVXN8dcUjFhPFM7Jz/DhKmS5yyufIhyshKdIdb3JOu9glGYZ+iNBdkiQe6TeYQYWFccTwhq3MiVPPFwijKb6yE+pGyyzD6m7Kc2JtYFXR7T3a6JMFC/p+abdZrbeUOpjluLyKv1x/Rc3b92P3p3591vFM8mM6OF9GsVUDYVF6Dqsr9ft5t1qq33i9d39vjy8UdjIKEP/4e/zy+5iTI8qQb+YOoP3x87iYDPBxkgCSXzSjoPDRHZ3UHDH82YPO3nd9fv/XOHoWTJoHfP5rnEEVXEYjP3Mt0JpNoPE3GXM4elr0HNuuOMnDayQbXrxfZgF+K2Wh61xzfuuzqHzF8eEnc88HU7v2GZ8wHsHH0ENf/vD0fnz77V7f57Z+ABEnrI6bNGLaFJSUM8/EzRrI86vbod41fql5Qfk8vWkJia1KohnPNUUJiKs22vqWpJcwVAZE4VMVcn38FPnCdoNEFQcf1G/Ue8IDzC0TADwIQRKclB61R7EDsMDoh2pdm2XX/fA8QZaHANMbcWrIcTbEwv7HYhRIafXqjHgejAo+YYvElX/qJ44Ng3ATOInV8RuZvrxhw0xgweUkveTSRmG9Td32Lum8wInOCNb/rBheqw4VUuVjAZS5Tp7aENYpzNQG4JuHQ9Zq+LUg2T7FGamcszlNcm0/nRWZssf53LYhEIb3pjYqH92Vcu9/KFCidmGgFoWM5xaqMeM8McspAvg74eDPg0nyUx0S/L5VPyQlaI9n+9NEmuj+qHlERPXWGT06Ju1I/+Prnm/Y3oOzdfFSO4iXZcFsOUzUfFHu0y2ouYG1Ry5fLvKhfQzMjV+ZtRZCOPcQoV/T2OmIzTO3KhH3QdKlQ73iu5Nv4cjmlQwklzlS3GcXxgNViiIVeLfrqmawO3Vu2XKq8SbyS+2SdVG0gGvG3SwoKkdZT4iv198J4/FGuPbY2/Kg41T4hCU30Sc+R1y+aAjFllijiY3zT+D4D+5xvC6skV1ik6qZxLvHXXwzNaC0TIsRyKvtdsxBssmyBU77Ocfih9MlMweTvo3klvhzN9xfnQ8V3GTQrXfLfyhYp2gVhU28ABZaWuVKbpnJOkw1Wfwf4mdjdCNTrfq/ueBWxNxSx+83jKoFbkbQ/iT9LNnK6+x7a/wI=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950212A0335E314E0401F0A07990586</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZtT+o8GP7ur1jmRzLajiFuEZIdkCMBxMOLUb+Y2hWobh2u3UB//WmHQ0D04TwJCem9++W6X3rdvRA4Cm3PF4ImksXc6LTq5mOAbEJwFVk2gtByHEKtc4dC6wxCx7ZrqOa60DQ6QqS0w4XEXNZNGyLHglULOWMIvYrr2U7ZrlYfTOOWJkK5ViplZbWKQi68PGzdTBPuxVgw4XEcUeFJ4o38fs9Tmh4uMJmNizXKPGDSmEu58AAg5YASGoakTOIIXIAdnYtAeCM241imCf2IGYi6+WG7XC7Ly0o5TmbAhhAC6AKlEwg2OzUbJ4UxDTp8Gq/PTcxjzggO2TvWoPpUzuPA8MNZnDA5j75xjQCC2rVFV8QiyOGnJvgMkKM70tMOyERgS8wxKpwN6ZQmlBNqTIadunl6XAfXtuMEczGNk0jsnf8NEuUZDeMFDSxRZFagO97jgXI1LijxOpyEqWAZvdZjssCECuMmoVO26jGhhi8QRt5+YyXUjxVTRsm/tOUCbGNV0MGB6rTYjAr5f3q23a+1l1scprThA5Ce117anQeA35Cw3/z+796gPYhunHoOYVt5DWrT7o/z/rBuZuvD6HdpeG7P5igCk1JpMsJJNmmVLtF90Gln8wf43Bwn6NXFWeriGQ+uh5fd26nzfv+n1O2Kcf+ulk2le/f8i0/GA//kIXIXAvTk6uque71oQeepdwVK49qkeTeqzZv9PhwLRK/cq3eXNgf3wSh1lk8i7f1h3flogN7CSRuW5t3eTZOTk6vMn8UgTl7EzbK2fEY3ol//zGk7h11hQQmj9OmZElkc9Xh0WkZb9QvLn+lFS1hgTXNVb6E5SkjKpdnQVppavFQREAs81cz1ue1WETyrVO3zS9e3q/4ldCBqQx+q21StOK2Cg9Yo9iA2Yz5lOpZm2fX8/AyQRJ6gPKCJlcUpmVNh/uCxhSU2OnyoLkfMBR3HisVRFq9SZypRWqtW0BQmRFbk1BUVbhrXsRzwQeJPJU12ubuyw91DStiCUU3wesKFGnEhVTFe1bDIEJUzXOY0VSsg0Sys7M6rQLBoEVINFURxkIa0vJgv8tIAsf63LUxELh1ejvOb921i+9+KGiidgGkFoXP5RVUf6YElhIpEvk/4bDvhwr2fBkxfMFVQmTCyRrL76XNO9IBshkRl9NgcPaIC90b9aPOvluAHUGC/HptAQca2whbbVC0IRR+NopuvuPxaTrMszftX09SYKPdAMSQCI0pSxW9v4/iFcrBxAY5aLxvUe5E38l18qZzzkcSSRmrajPx4xNtiRIV+W3TUPVkd+3DZCanqJulKHpI1Q/UE0Yh/fKUQj2g9Jb5Rf8s4CT7bdcDXVhyVp3pQSMZn+qQXyds3Q0Fi5ZYp5ouTbeeHHBwKvivcFHmDRappekol/f6LoSmtbmJC4pTLTsvMBds0m+OUbwvqfSp9cZNT+cduXolvd/NdvzdShBdhc6PL/lvZYvm4EGrqJ0COpW6u1FNTBeezLVr/ALjH7NBGtg8rleplBTnbzA6r52ebAu5k0vgi/irZqun+fWj8BQ==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F951063528E9A25AE0401F0A0799534D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F951063528E9A25AE0401F0A0799534D</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083922</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F951063528EAA25AE0401F0A0799534D</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00005_ACCESS_UVTC_UserName_RequestorUserBAU_Active_RequesteeSelf_ResetPassword_Role_DECE_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZrU+I8FP7ur+jUjzslbS1CO8IMcllQ190FVNYvTkhSiLYpJmm5/PpNikVA9GXfGWaYc3ouz7nkSS4EjCM3aAhBuKQJM3qtmvk09s7Oy7jqWZXxeGx5vo+sagWNrbKLvRBXoX8ObdPoCZGSHhMSMlkzXdvxLLtsOd7QtoMzP3CrJbtcfjSNe8KFCq1MSsprEUdMBHnamplyFiRQUBEwGBMRSBQMGj9uAmUZwAKTWb9Yo8wT8vpUylkAACphgkgUoRJKYnABdmwusAgGdMKgTDl5y4lFzXzznc/npflZKeET4Nq2DWwfKBss6OTUrJ8UzgT3WJis5SZkCaMIRnQFNagfRE4TbDSiScKpnMafhHaAY+vQFlkgCzkeOzXBe4Ic3ZGRdkByAS0xhU4RrE9CwglDxLjr92rm6XETXPsOOWQiTHgs9uR/g0RYRqJkRrAlisoKdMdHPNCu+gVBQY+hKBU0I7d6TWYQEWH84iSkixsq1PJhYeTjNxZC/WixZQT9y1guwDZWBR0c6E6LToiQ/2dm2/NaR7mHUUrqvId7CZjeXQ27zo2ED3aMvs0IQd9/vdRyCNvGa1Cbcb/J+8u62a03p/mIP3S/3w+hu+IPleUKt878xXS+Op9Un+9X3XZ2nYERWMnK9Z/LTttfyMY8YXACFt9Sp2vHl+MySPxu+Lzqn9GTKzrJKgN56wy/0dD5TWV7flXB/kM8SMHrY/zYHI3aXtQWkPD+6L7qPo9+X8/L3p8uFvff/THyZ6+3IW+8vPzpsBMcZt7d62UXL0cS24+VRnNSe69pu4ZdZUEJg3T8TJAsRL0evZbRUfOC8mt60RqKrTA3DWaao4QkTJp17aWpJUgVAVEcqGGu5Y5ftl3HbXQ82+v4drlte7bTsRt2xddSp+CgNYo9iM2EhVTn0iy73p+vAaI4EIRhwq0sSdGUCPOLiC0oodFjfXU4EibIMFEs7oWrpc2E41KZoXgcTvHyebISFdO4TeRP9pM3Qkn4LnOf7TB3nyA6o0TTu95voRZcSNWKV5ilMnJKGSwxkqoLgGsODlyvWgaCxrOIaKAgTnAakdJsOssbA8T637UgErm23x7m5+7Tsva/FR1QNphqA6FruSRqiuTAFeQUhXxe8Pl2wUX4RoqpPl6qnZJTtEay++l9S/R6bFZEVfTUHDw5Be6N+dHuHz3BF6DAfj82iXBGt9IWd6m6HhR51ItpvsLSaynNsjSfX0UTI1fhgeJHBwwIShW7LYfJC2FgEwIcdblsUO9l3uh38aVyygYSShKrbTNy8YiXxYAI/bLoqVOyOPbZspNS9U2ShTyka0bqAaIRf/lGQQHSdkr9S/3NE47fx3Ug1lYeVad6TkjKJlrS18jyk6VAiQpLFe8lfDv4oQCHku8qN03eYJFqm8apJJ9/MTSh1UyIUJIy2WuZuWKbZHOccjkjwbvRhzA5kb/dzAvx6c08+nEzUHQXQ3NjS//b2KL5uiBi6gdAjqVmLtRDUyVnky1SfwP4gddd+7zT9Fvty+b5Dq+7zctNA3cqqX9Qf9Rs9XT/PNT/Ag==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F9502206FC9DEBC6E0401F0A079902CB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F9502206FC9DEBC6E0401F0A079902CB</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950212AF404F905E0401F0A079905EF</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950212AF404F905E0401F0A079905EF</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083926</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950212AF405F905E0401F0A079905EF</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083930</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083930</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083930</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZrU+I8FP7ur+jUjzslbS1CO8IMcllQ190FVNYvTkhSiLYpJmm5/PpNikVA9GXfGWaYc3ouz7nkSS4EjCM3aAhBuKQJM3qtmvk09s7Oy7jqWZXxeGx5vo+sagWNrbKLvRBXoX8ObdPoCZGSHhMSMlkzXdvxLLtsOd7QtoMzP3CrJbtcfjSNe8KFCq1MSsprEUdMBHnamplyFiRQUBEwGBMRSBQMGj9uAmUZwAKTWb9Yo8wT8vpUylkAACphgkgUoRJKYnABdmwusAgGdMKgTDl5y4lFzXzznc/npflZKeET4Nq2DWwfKBss6OTUrJ8UzgT3WJis5SZkCaMIRnQFNagfRE4TbDSiScKpnMafhHaAY+vQFlkgCzkeOzXBe4Ic3ZGRdkByAS0xhU4RrE9CwglDxLjr92rm6XETXPsOOWQiTHgs9uR/g0RYRqJkRrAlisoKdMdHPNCu+gVBQY+hKBU0I7d6TWYQEWH84iSkixsq1PJhYeTjNxZC/WixZQT9y1guwDZWBR0c6E6LToiQ/2dm2/NaR7mHUUrqvId7CZjeXQ27zo2ED3aMvs0IQd9/vdRyCNvGa1Cbcb/J+8u62a03p/mIP3S/3w+hu+IPleUKt878xXS+Op9Un+9X3XZ2nYERWMnK9Z/LTttfyMY8YXACFt9Sp2vHl+MySPxu+Lzqn9GTKzrJKgN56wy/0dD5TWV7flXB/kM8SMHrY/zYHI3aXtQWkPD+6L7qPo9+X8/L3p8uFvff/THyZ6+3IW+8vPzpsBMcZt7d62UXL0cS24+VRnNSe69pu4ZdZUEJg3T8TJAsRL0evZbRUfOC8mt60RqKrTA3DWaao4QkTJp17aWpJUgVAVEcqGGu5Y5ftl3HbXQ82+v4drlte7bTsRt2xddSp+CgNYo9iM2EhVTn0iy73p+vAaI4EIRhwq0sSdGUCPOLiC0oodFjfXU4EibIMFEs7oWrpc2E41KZoXgcTvHyebISFdO4TeRP9pM3Qkn4LnOf7TB3nyA6o0TTu95voRZcSNWKV5ilMnJKGSwxkqoLgGsODlyvWgaCxrOIaKAgTnAakdJsOssbA8T637UgErm23x7m5+7Tsva/FR1QNphqA6FruSRqiuTAFeQUhXxe8Pl2wUX4RoqpPl6qnZJTtEay++l9S/R6bFZEVfTUHDw5Be6N+dHuHz3BF6DAfj82iXBGt9IWd6m6HhR51ItpvsLSaynNsjSfX0UTI1fhgeJHBwwIShW7LYfJC2FgEwIcdblsUO9l3uh38aVyygYSShKrbTNy8YiXxYAI/bLoqVOyOPbZspNS9U2ShTyka0bqAaIRf/lGQQHSdkr9S/3NE47fx3Ug1lYeVad6TkjKJlrS18jyk6VAiQpLFe8lfDv4oQCHku8qN03eYJFqm8apJJ9/MTSh1UyIUJIy2WuZuWKbZHOccjkjwbvRhzA5kb/dzAvx6c08+nEzUHQXQ3NjS//b2KL5uiBi6gdAjqVmLtRDUyVnky1SfwP4gddd+7zT9Fvty+b5Dq+7zctNA3cqqX9Qf9Rs9XT/PNT/Ag==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F9502206FC9DEBC6E0401F0A079902CB</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH6uQC5A2UUGiQM+mhW4PtD1n+1IZZ5IYghNih0t//dqhSYHSHvZISMiT8cw3F38zlwzNY8vtMAYZJwlVvF5LfTGQM2kEyNcMexJoDfvc1xwHGRoyMZ4Y5/ak3rRUxWMsB48yjihvqZZhNjSjqZmNB8Nw645bN2t1p/6sKk+QMWFaqNQMVVnPY8rcwm1LzTPqJogR5lI0B+Zy7I47w4ErNF1UYlLbl1uUhcOsHXGeurqOaz5giGNcw8lcv9T3dC595o5JSBHPM3jz6bOW+nZ3tVrVVvVakoW6ZRiGbji60PEZCb+r7W/lZfA9GiTbcxfRhBKMYvKKJKgh8CjxlU4cJhnh0fwT06ZuGtK0BmusYbNBv6v6u4MC3YmW9kBmDGksQmZpbAQBZEAxKI8jr6V+P62C27sPGaIsSLI5Ozj/GSSgS4iTFHyNlZGV6E63eCRd7UvArkdxnDOyhDvZJinCwJT7DAKyHhAmms9nSlF+Zc3Ej5RdBvhPynKp72IV0PUj2emREBj/PzXbrdfWyhOKc2jfL/tslNLUii84+nszCh9mt9Nmcu1Nh60Cwq7yFlRV7rfzYbNWvfV2CQfIPNe9R3s6q8Pt4Pb5pjl9Du9Ip0+m/dcf+GIAlnDs2TN0tniMmuTOJ1Fj1gn5o0466w1NHgfPHOOLyJt+C4PchMZmVb9ZLTpddJfmvHM2Ti6e7FnshGnDrDtoM1g8x7e/Fq/zf9Z5EHuTodGMAtQ7u0uj4eav12H/R3PQsJ6/RcGvn/R+NnP6cX5jO+HTeth6j2k3hn1hSQnjfDIFzMujbA+vp1yLeiH+Nb1ICfG1oFB1U8lRjAPlalvektTi5oKAiO+KYm7P107TNByz37y4ap5fWWbfaBjmtdExmo5Td2y75KAtigOI3YQGRPqSLLvtn68B4rnLgPqQacskxxEw9QuLPcSR4tGReBwJZfCQCBaPA/Dt6SvhAY7MWcT9CVrkmw3LVOUu4T/pz6wTcMj2qbu+R90jwCQlIPldNjgTHc64yMUCLXMem7UlqlHIxQTIJAm7VuOiqTMyT2OQSPV54ucx1NIoLTKjs+2/pSHMCumo/1A8vE/jOvxWpkDo+EQqMBnLFYgywpEZZJWBfB6wvRtwab6T+0S+L5FPnhG8RbL/6b1NZH9UPSIieumOX8wSd6V+8vWPN/UvQOmH+agc+Uuy47YcpmI+CPZol9VcoNqili+XeVG/c8mMmTCvC4I09THgXNDb5iGZAdUrE/pJ06VCfeC5ku/jy3lExxxxmItuU4rjCavFGJhcLTzxTNan7i17LkXeOKz5MVk3FhuIRPzlkoJdLPWE+F78rZLMfy/XEVs7fkScYp/ghIbyJOfI5pOmwIkwSwTxJdmu8WMGjjnfF1ZJrrBw0U2TnMPnXxTJaC0VYZzklHs9tRDssmyBk29ScN+VPpgpmPxtNK/Zp6P53+FgLPhujtRKl/y3skaKdsGgyg2gwNJS12LTFM5puMPqbwAPiN2wLMO+7jq9/lXXroj93HEMq3tVJXAvkvYH8UfJTk4P30P7Nw==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F951091E58B57B21E0401F0A05993966</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F951091E58B57B21E0401F0A05993966</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083930</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F951091E58B67B21E0401F0A05993966</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00006_ACCESS_UVTC_UserName_RequestorUserBAU_Active_RequesteeFAU_ResetPassword_Role_DECE_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+o6EP5+fkWnfnRK33jtCDMIeq0H1AOi4hcnpGkbbNPSJID++psUWwHRy7kzzDDZbnaffcmze0ZBHFlOl1KUMZwQxe231Re/2TR9y29q0ECmVvVNoM3MOtQaFrRaTc9v2oatKi6lHLmEMkBYW7UMs6oZNc2s3huGY7ccu1ZpNWrPqvKAMipMC5WKoSrrOCLUyd22VZ4RJwEUU4eAGFGHQWfcHQ4coemAApPaOdugzB1mnZCx1NF1WPEQRFEEKzCJ9TN9R+fMo84YBwQwnqEPnx5tqx93V6tVZWVXkizQLcMwdKOlCx2P4uBE7fwqLiPPJX6yOfcASQiGIMLvQIIaIhYmntKNgiTDLIy/MW3qpiFNa2gNNWhWyYmqfzrI0R1paQdkRoFGQ2AWxkbIRxkiECmTkdtWT46r4ObufQYI9ZMspnvnv4OEyBJFSYo8jRaRFeiOt3ggXZ0zBB2XwIhTvEQ3sk1SABFV7jLk4/UAU9F8HlXy8itrKn646DIE/6YsZ/o2VgFdP5CdPg4QZf+nZtv12lh5ABFHnWm3ewquhlcPRu2Z/2M90fNwOZiCee9h0s4hbCtvQJXl/jjvN2vZWx+XZu7NuEFRqzpkPLxuBk/BIuzerO+W9+68PnWXXj94DYbdMM7uuolxzeeob06N6zR4Ys/R74H+GPqLyy5vpG794hfo3U5Gj5OgP3qnz1VzWF2Mbh+n9mQy/XOF++9sUZ9PX+3B8x/r7nwIBt7pdVi/vbldZ+nAmtUXgxoer9DzAIxfH3u/Qv+0dhrfLSLw1rvinmXNJ+3PmLZj2BUWlDDmszmCrDjK9nD7yqWoF2A/04uUYE/zc1UnlRxFGSJM7chbklocLggIe44o5uZ82aoZfcuw7b5tms2WeWFUDfPS6Bq1VstqnF8WHLRBsQexlxAfS1+SZTf98zNAGDsUEQ9l2jLhMERU/cFiHzCguGQkHkdCKLpPBItb/H1lL2arZZO/zf0FrcIUz2ZhqCo3Cbslt1nXZyjbZW57h7lHCOIUI0nvsr+paHDKRCoWYMlZZFaWoEIQFwMgkxzsWNVmTac4TiMkgepx4vEIVdIwzROj082/pQFIc+no4j5/d9+Gtf+tyIDQ8bBUoDKWcySqiA6MIKsI5PuA69sBF+a73MPyeYl0sgzDDZLdT59dItujbBER0Utv/GIWuEv1o69/van/AErfz0fpyFviLbfFLBXjQZBHp6jmAlQWFb5c8rx+DUmMmTCvC3409TGCXLDb233yiohemtCPGi4l6j3PpXwXH2chGTPAUCy6TcmPR2wWY0TlZuGKV7I+dm3ZcSnyxtCaHZL1IrGASMQ/7ijQgVJPiO/E3yrJvM9yHbC15UfEKdYJhkkgT3KMvH3TFDARZrHgvSTbNn7IwCHnu8IyySUWJrppxhn6/osiCa2tAggTTpjbV3PBNsnmONlbipxPpS9mciL/mMxr+u1kfhoOxoLuYqCWuvi/lTWctwtEqlwAcixtdS0WTeGcBFuk/gFwn9ctq26YPcM27Uar5PVGq2VY/UaZwJ1IOl/EXyVbOd1/D51/AQ==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95022601C031379E0401F0A079902D7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95022601C031379E0401F0A079902D7</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950D2033D311891E0401F0A059927BF</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950D2033D311891E0401F0A059927BF</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083934</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950D2033D321891E0401F0A059927BF</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083937</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083937</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083937</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+o6EP5+fkWnfnRK33jtCDMIeq0H1AOi4hcnpGkbbNPSJID++psUWwHRy7kzzDDZbnaffcmze0ZBHFlOl1KUMZwQxe231Re/2TR9y29q0ECmVvVNoM3MOtQaFrRaTc9v2oatKi6lHLmEMkBYW7UMs6oZNc2s3huGY7ccu1ZpNWrPqvKAMipMC5WKoSrrOCLUyd22VZ4RJwEUU4eAGFGHQWfcHQ4coemAApPaOdugzB1mnZCx1NF1WPEQRFEEKzCJ9TN9R+fMo84YBwQwnqEPnx5tqx93V6tVZWVXkizQLcMwdKOlCx2P4uBE7fwqLiPPJX6yOfcASQiGIMLvQIIaIhYmntKNgiTDLIy/MW3qpiFNa2gNNWhWyYmqfzrI0R1paQdkRoFGQ2AWxkbIRxkiECmTkdtWT46r4ObufQYI9ZMspnvnv4OEyBJFSYo8jRaRFeiOt3ggXZ0zBB2XwIhTvEQ3sk1SABFV7jLk4/UAU9F8HlXy8itrKn646DIE/6YsZ/o2VgFdP5CdPg4QZf+nZtv12lh5ABFHnWm3ewquhlcPRu2Z/2M90fNwOZiCee9h0s4hbCtvQJXl/jjvN2vZWx+XZu7NuEFRqzpkPLxuBk/BIuzerO+W9+68PnWXXj94DYbdMM7uuolxzeeob06N6zR4Ys/R74H+GPqLyy5vpG794hfo3U5Gj5OgP3qnz1VzWF2Mbh+n9mQy/XOF++9sUZ9PX+3B8x/r7nwIBt7pdVi/vbldZ+nAmtUXgxoer9DzAIxfH3u/Qv+0dhrfLSLw1rvinmXNJ+3PmLZj2BUWlDDmszmCrDjK9nD7yqWoF2A/04uUYE/zc1UnlRxFGSJM7chbklocLggIe44o5uZ82aoZfcuw7b5tms2WeWFUDfPS6Bq1VstqnF8WHLRBsQexlxAfS1+SZTf98zNAGDsUEQ9l2jLhMERU/cFiHzCguGQkHkdCKLpPBItb/H1lL2arZZO/zf0FrcIUz2ZhqCo3Cbslt1nXZyjbZW57h7lHCOIUI0nvsr+paHDKRCoWYMlZZFaWoEIQFwMgkxzsWNVmTac4TiMkgepx4vEIVdIwzROj082/pQFIc+no4j5/d9+Gtf+tyIDQ8bBUoDKWcySqiA6MIKsI5PuA69sBF+a73MPyeYl0sgzDDZLdT59dItujbBER0Utv/GIWuEv1o69/van/AErfz0fpyFviLbfFLBXjQZBHp6jmAlQWFb5c8rx+DUmMmTCvC3409TGCXLDb233yiohemtCPGi4l6j3PpXwXH2chGTPAUCy6TcmPR2wWY0TlZuGKV7I+dm3ZcSnyxtCaHZL1IrGASMQ/7ijQgVJPiO/E3yrJvM9yHbC15UfEKdYJhkkgT3KMvH3TFDARZrHgvSTbNn7IwCHnu8IyySUWJrppxhn6/osiCa2tAggTTpjbV3PBNsnmONlbipxPpS9mciL/mMxr+u1kfhoOxoLuYqCWuvi/lTWctwtEqlwAcixtdS0WTeGcBFuk/gFwn9ctq26YPcM27Uar5PVGq2VY/UaZwJ1IOl/EXyVbOd1/D51/AQ==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F95022601C031379E0401F0A079902D7</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZtU+o6EP7ur+jUj07pCwWkA8wAVU4FxQPoVb+ciWkK0TYtTQrFX3+TQmtB9HLuDDNMtpvdZ1/y7LYoCHzD6lKKYoZDIjl2W/5jAlRrQLOp1KrIVUzXvVSABj3FhR5w9Zpe1XRXlhxKE+QQygBhbdnQdFPRaopuzjTNqjb5r6Kb+ossPaKYctNcpaLJUhr4hFqZ27acxMQKAcXUIiBA1GLQmnZvRxbXtECOSe60tigzh3FnwVhkqSqsuAgi34cVGAZqS93TabnUmuI5ASyJ0c6nS9vy7u56va6sq5UwnquGpmmq1lS5jkvx/FzunOWXkesQL9ye+4CEBEPg4w8gQN0itghdqevPwxizRfCNaV3VNWFaQSlUoG6Sc1n9dJChO9HSHsiYAoUugJ4bmyAPxYhAJD1MnLZ8floFt3dnMSDUC+OAHpz/DhIiK+SHEfdG88hydKdbPJKuTgtByyHQTyheoTvRJhGAiEr3MfJwOsKUN59Lpaz8Ukr5D+ddhuDflKWllrFy6OqR7Nh4jij7PzUr12tr5RH4CerYT1N7dDPuGT31V7yuzUf+5oIufw/q+kM7g1BW3oIqyr07HzZr0Vu7S6O7yftoel8djNbdB9o1n58BQN5v9njdfBoMR06vH9yM8NVmqqcQfwzT9b1jbsZOuBxE8T+rZd+zo3djePExTkbrs7vJ03owfR3edkfzhKkQ0Kd5c9hwDbYZLOHF49D8dTMgPTiLHdhzF1cxrT6uwpee3QU2XM/Gmws3NWtwYaizl7O1D2779stzkqbLd9WE3uq9/RlTOYZ9YU4J0+T1DUGWH0V7OLZ0zesF2M/0IiTYVbxM1YoER1GGCJM74pagFivhBIRdixdze75u1jTb0OrV6mW9X7O1K83U9GutqzWazVq93ss5aIviAGI/JB4WvgTLbvvnZ4AwsCgiLoqVVZjABaLyDxZtwIDkkAl/HCGhaBZyFtfNhtl8094Mk1VfFyGnrqUX4bc0kaW7kI3JOO56DMX71F3do+4JgjjCSPC7aHDKO5wynoslWCXM1ysrUCEo4RMgFiRsGeZlTaU4iHwkkKpB6CY+qkSLKMuMSrf/hgIgzaSTq1n28L6N6/BbngKu42KhQEUsPcTLiI7MICMP5PuA6+WAc/PdxMXiffF8shjDLZL9T59tIvqj6BEe0Z/+9I+e4y7UT77+9ab6Ayj1MB+FI3eFS27zYcrnA2ePTl7NJagsK8lqlWT1awhmjLl5lROkrk4RTDi9bWbhOyJqYUI9aboUqA88F/J9fAlbkCkDDAW826TseMJqMUVUrBYOfybpqXvLnkueN4ZSdkzW9/kGIhD/uKRACwo9Lr7nf+sw/gz8mK2SHx4n3ycYJnNxEnNk801TwJCbxZz4wrhs/JiBY873hUWSCyyMd9NrwtD3XyTBaG0ZQBgmhDm2nAnKLJvhZJsIWZ9KX8xkTL4bzSn9djQ/3Y6mnO8CIBe6+L+VFZy1C0Sy2AAyLG055Zsmd07mJVbfATwkdsOoa3pfq+rVRrNM7JphN4oE7kXS+SL+Kinl9PA9dP4F</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950D2063386C5D0E0401F0A0799566B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950D2063386C5D0E0401F0A0799566B</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083937</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950D2063387C5D0E0401F0A0799566B</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00007_ACCESS_UVTC_UserName_RequestorUserBAU_Active_RequesteeSAU_ResetPassword_Role_DECE_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3vr4iyj6uQBMJXVJAoKYVbumWBtmxfKuMM4DaxQ+xA2l9/7dBQoLSXvRIS8mQ8c2bm+NjnHIVB0W1xDrEgjGo9r6E/1UvOtFSrg4EqFjac8rRkTGsVx/CRU685ftWulBxd63GeQI9ygaho6EXLdgyrbNjO2LLcUt11igXHsR917R5iLkNLl4Kla2kYUO5maRt6ElOXIU64S1EI3BXYHbVu+q70dFGOSW+eb1BmCePmQojINU1c8AFDEOACZqF5bu75nPvcHZE5RSKJ4T2nzxv6+971el1YlwosnptFy7JMq25KH5+T+Q+9eZZvBr9HZ2yzbiPKKMEoIG9IgboBsWC+1grmLCZiEX4R2jZtS4U2IMUGth36Qzc/EmToToy0BzLmyOALZOfBhjCDGCgG7W7Ya+g/TpvgZu84RpTPWBzyg/XfQQK6goBF4Bs8ryxHd3rEI+1qngN2exQHCScr+KVoEiEMXBvEMCNpn3BJPp9r2fi1lMsfyVkG+G/Gcm7uYpXQzSPd8cgcuPg/M9ud1ybKPQoSaE5+Vx5Gfjf9sxz87DgXz+ktuRkEi+dFf93IIOw6b0Btx/2+PiTrllvvm0i3OmEPF/1KebR8vp881GJ2t4q8y/Licnr/OLRW//je9aIdVqKrwcuoW3146BH2wK5/j98Yuup6LZvbdGaj1XORnvW70Q2rzK86ERnhWj8ZOD8n6eR6NpfEWi5bv+I7a/A8frlYlS/foPLYuUsJ7/YdPo4uSrcW0PEsfRkOxvdXVjA5e43bXmp2o2r0OC29/XFCzhofNe3WsG/MJWGUTJ8Bi3yp6NHztI6cFxLfy4uyEN+YZa5upDSKC6BCb6pdSlrcRAoQ8V05zM26Uy9bxWLFstt22S5V65eWY9kdq2VV63Wr6FVzDdqgOIDYZnRGVC6lshv+fA8Qhy4H6kNsrFiCF8D1byJ6SCCtR4fycDDKYcykitdKsVW3p8GClGvOyzpar4ltzyvydPxi4pbexq2ZgHhfuUt7yj0ETCICSt4Vv7kkOBeyFUu0SkRgF1aoQCGRF0CsNNgtOrWyyUkYBaCAmiHzkwAK0SLKGmPyzX/RQJhn1uHlODt3X5Z1+C3vgPTxiXLgqpYLkFOEI1dQKS/k64IruwXn4VuJT9Txku0UMcEbJPufPlii6LGliKzoqT16snPcW/eTt3/eaX4DyjzsxzaRvyI7afO7VF4PUjya+TSXqLAsJKtVks2vqoQxluFNqY+2OQKcSHV7HbMXoOY2hHnS5bJFfZB5a9/Hl4gFHQkkIJRs07LlCS+LEXD1sujJU5Ke+mzZSyn7JiAVx2ztQD5AFOJv3yjYxcpPmgfyb81i/2NcR2Lt5JF1yueEIHSuVuoaef2CFJjJsETqHot3gx8LcCz5vnHb5C0WIdk0TQR8/UVTgtbQEcYsoaLn6ZlhV2QznOI1AvfD6VOYTMjfb+aUf3kzT276Iyl3IdK3vuS/nQ2S0QWDrh4AGZaGnsqHpkxO5zui/g7wk67bxZZnd7xi3etsdb0sdb3e+jjMe5U0P5k/W3Z6engemv8C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950212AD1FD29DFE0401F0A059909A1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950212AD1FD29DFE0401F0A059909A1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95022601C151379E0401F0A079902D7</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95022601C151379E0401F0A079902D7</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083941</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95022601C161379E0401F0A079902D7</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083947</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083947</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083947</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3vr4iyj6uQBMJXVJAoKYVbumWBtmxfKuMM4DaxQ+xA2l9/7dBQoLSXvRIS8mQ8c2bm+NjnHIVB0W1xDrEgjGo9r6E/1UvOtFSrg4EqFjac8rRkTGsVx/CRU685ftWulBxd63GeQI9ygaho6EXLdgyrbNjO2LLcUt11igXHsR917R5iLkNLl4Kla2kYUO5maRt6ElOXIU64S1EI3BXYHbVu+q70dFGOSW+eb1BmCePmQojINU1c8AFDEOACZqF5bu75nPvcHZE5RSKJ4T2nzxv6+971el1YlwosnptFy7JMq25KH5+T+Q+9eZZvBr9HZ2yzbiPKKMEoIG9IgboBsWC+1grmLCZiEX4R2jZtS4U2IMUGth36Qzc/EmToToy0BzLmyOALZOfBhjCDGCgG7W7Ya+g/TpvgZu84RpTPWBzyg/XfQQK6goBF4Bs8ryxHd3rEI+1qngN2exQHCScr+KVoEiEMXBvEMCNpn3BJPp9r2fi1lMsfyVkG+G/Gcm7uYpXQzSPd8cgcuPg/M9ud1ybKPQoSaE5+Vx5Gfjf9sxz87DgXz+ktuRkEi+dFf93IIOw6b0Btx/2+PiTrllvvm0i3OmEPF/1KebR8vp881GJ2t4q8y/Licnr/OLRW//je9aIdVqKrwcuoW3146BH2wK5/j98Yuup6LZvbdGaj1XORnvW70Q2rzK86ERnhWj8ZOD8n6eR6NpfEWi5bv+I7a/A8frlYlS/foPLYuUsJ7/YdPo4uSrcW0PEsfRkOxvdXVjA5e43bXmp2o2r0OC29/XFCzhofNe3WsG/MJWGUTJ8Bi3yp6NHztI6cFxLfy4uyEN+YZa5upDSKC6BCb6pdSlrcRAoQ8V05zM26Uy9bxWLFstt22S5V65eWY9kdq2VV63Wr6FVzDdqgOIDYZnRGVC6lshv+fA8Qhy4H6kNsrFiCF8D1byJ6SCCtR4fycDDKYcykitdKsVW3p8GClGvOyzpar4ltzyvydPxi4pbexq2ZgHhfuUt7yj0ETCICSt4Vv7kkOBeyFUu0SkRgF1aoQCGRF0CsNNgtOrWyyUkYBaCAmiHzkwAK0SLKGmPyzX/RQJhn1uHlODt3X5Z1+C3vgPTxiXLgqpYLkFOEI1dQKS/k64IruwXn4VuJT9Txku0UMcEbJPufPlii6LGliKzoqT16snPcW/eTt3/eaX4DyjzsxzaRvyI7afO7VF4PUjya+TSXqLAsJKtVks2vqoQxluFNqY+2OQKcSHV7HbMXoOY2hHnS5bJFfZB5a9/Hl4gFHQkkIJRs07LlCS+LEXD1sujJU5Ke+mzZSyn7JiAVx2ztQD5AFOJv3yjYxcpPmgfyb81i/2NcR2Lt5JF1yueEIHSuVuoaef2CFJjJsETqHot3gx8LcCz5vnHb5C0WIdk0TQR8/UVTgtbQEcYsoaLn6ZlhV2QznOI1AvfD6VOYTMjfb+aUf3kzT276Iyl3IdK3vuS/nQ2S0QWDrh4AGZaGnsqHpkxO5zui/g7wk67bxZZnd7xi3etsdb0sdb3e+jjMe5U0P5k/W3Z6engemv8C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950212AD1FD29DFE0401F0A059909A1</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdU+JKEH3fX5HKPlohCSRqUkJVroBmBXdXhF152RpnOjCaTCAzCeCvvzPBICB62VtlFU6np/v0x5zuC46SuO4HnEMmaMq0sN3U/zQcp163nVMDgXtuOPY5Mc5JQ/53FiEXE+y550TXQs5zCBkXiImmXrdsx7Bcw3buLctveL5zWrMcd6xrI8i4NC1VapauLZOYcb9029TzjPkp4pT7DCXAfYH9QdDv+VLTRxUmvXWxRlk6zFpTIWa+aeIaAQxxjGs4TcwLc0fngnB/QCcMiTyDV5+EN/XXu4vForZo1NJsYtYtyzItz5Q6hNPJV731pboMJGRRuj5fIpYyilFMX5AC1QcxTYkWxJM0o2KafGDaNm1LmTZgiQ1sO+yrbr45KNEdaWkHZMaRwafIrozdQQQZMAza8C5s6l+Pq+D67n2GGI/SLOF757+DBKyAOJ0BMXgVWYXueIsH0tW6AOyHDMc5pwXcqjaZIQxc+5FBRJc9ymXzEa6V5deWXP7RqssA/01ZLsxtrBK6eSA7bToBLv5PzbbrtbYyQnEOrfYitOITcZXejuaJC5ez1flJ9Hz9m4q0WULYVl6D2pT79bzfrJveer10NbyZmr0xiwbX42/B2VNnMXaLgF9dtwm+vsrJrBd0Jw/hy5A8FyeDhhM4P2ZxOxarYUcMgsXoFl4ICoj3YJKfXx4j9y7oz8djGz2N6Wg4p05xeyNGuFfvvXzvkNu4E3krmD9PJ420Q5N++tP7FcHwKeAPpD+vZw/F9XJs/TR/8dWX0/CXc5P3sdWzTx7t0eOwN2y+xbQdw66wooRB/vgEWFRH1R5hW+vKeiHxOb0oCSVGVKr6M8VRXAATekvdUtTi55KAKPFlMdfnrufa1llgdS87rn12ancsx7K7VmCdeZ7rOkHFQWsUexAvUxZR5Uux7Lp/PgeIE58DI5AZRZrjKXD9E4ttJJAWsjv5OFLG4T6VLG43pphaRfbogfMURYuIT/k8WXi5rt2m4jv7ngWRgGyXuhs71H0HmM4oKH5XDc5lh3MhczFHRS5iu1agGoNcToBMkbBfd85dk9NkFoNCaiYpyWOozaazMjMmX//WDYR5Kb3r3JcP78O49r9VKZA6hCoFrmL5B2QZ4cAMalSBfBzw6XbAlfkgJ1S9L5lPkVG8RrL76a1NVH9sekRG9Ody8MeucG/Uj77+/qb5CShzPx8bR6SgW26rYSrng2SPVlXNOarNa3lR5GX9zhQzZtK8KQnSNgeAc0lvq/v0GZi5MWEeNV02qPc8b+S7+HIxZQOBBCSy27TyeMRqMQCuVotQPpPlsXvLjkuZNwFLcUh2GcsNRCH+dEnBPlZ6UvxD/izS7C3wQ7a2/Mg45T4hKJuok5ojqw+aAqfSLJXEl2bbxg8ZOOR8V7hJ8gaLkN30mAv4+IumGK2pI4zTnImwrZeCbZYtcYrVDPw3pXdmSiZ/Hc1L/uFo/t3vDSTfJUjf6NL/VjZo2S4YdLUBlFia+lJumtI5m2yx+ivAPWK36nY9aNvddt1rdzfE7nqe5QVvj3knktY78XvJVk7330PrXw==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F95107A0FCE51761E0401F0A0799554A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F95107A0FCE51761E0401F0A0799554A</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083944</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F95107A0FCE61761E0401F0A0799554A</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj6uQCwmQqCDRUk7TLm0XAj3bl5VxBnCbOBA7gfLr1w4NBUp72CMhIU/GM99c/M2cMxRHltdmDFJOEqr4nab6u2ph10a1iWaYdUezkWVpLiCsYTw27ZrTsBC2VcVnLAOfMo4ob6qWYdqa4WimHRiGV3U9u1GpN6pPqjKClAnTQqViqMoqjijzCrdNNUuplyBGmEdRDMzj2Bu0ez88oemhEpPaOt+gLBymrRnnc0/XcSUEDFGEKziJ9XN9T+c8ZN6ATCniWQpvPkPWVN/uLpfLyrJaSdKpbhmGoRuuLnRCRqbf1NZZeRlCn06SzfkS0YQSjCKyRhJUD/gsCZV2NE1SwmfxJ6ZN3TSkaQ1WIn2mTb+p+ruDAt2JlvZApgxpbIbM0lgfJpACxaAM+35T/XZaBTd3gxRRNknSmB2c/w4S0ByiZA6hxsrISnSnWzySrtY5YM+nOMoYyeFOtskcYWDKQwoTsvpBmGi+kClF+ZUVEz9SdhngvynLub6LVUDXj2SnQ6bA+P+p2W69NlZGKMqgxdPIQA1m6AgCd/1q9WF9zZYd/6fzs1lA2FXegNqW++182Kzb3nq7dDv8x6kOb6Ne8HM25I3bcaA762H4YOVV51cQ1G+XTwEZmDfmY89om4v0wa9F7cU8M75fPeSXCR5m6183o+s73wwWZxQPwnwNZHHtPr5cdB5H6OZpkFwnefTsTm7rL4936ClG3c4Egu7Ij03KrTy7uOe2fZ8+LcY1vzN6Xo4mYW/ca5y1VxftQcxy9yWeN/TF93U0bL7HtBvDvrCkhEE2fgbMy6NsD7+jdEW9EP+aXqSEhNqkUPXmkqMYB8rVlrwlqcXLBAGR0BPF3Jy7rmNYVcet1ms188K2rgzbMLtG23Bc13DrTslBGxQHEC8TOiHSl2TZTf98DRDHHgMaQqrlSYZnwNQvLHYQR4pP++JxJJRBkAgWN+fmM3fqxgot142qvaIpPMNkzFTlLuH39D5tTzik+8xd3WPuPmAyJyDpXfY3Ew3OuEjFAuUZj8xKjioUMjEAUsnBnmU3HJ2ReB6BBKrHSZhFUJnP5kVidLb5tzSEWSHtXwXFu/s0rMNvZQaETkikApOxXICoIhwZQdUykM8Dru0GXJpvZyGRz0ukk6cEb5Dsf3rvEtke2xYREf2+HPw2S9xb9ZOvf7ypfwFKP8zH1lGYkx235SwV40GQR6us5gJVFpUsz7OifnVJjKkwrwt+NPUB4Eyw22uQvADVtyb0k4bLFvWB5618H1/GZ3TAEYdYdJtSHE/YLAbA5Gbhi1eyOnVt2XMp8sZhxY/JLiOxgEjEX+4o2MNST4gfxN8yScP3ch2xteNHxCnWCU7oVJ7kGHn9pClwIswSwXtJumv8mIFjzveF2yRvsXDRTeOMw+dfFEloTRVhnGSU+x21EOySbIGTv87Be1f6YKYg8rfJvGKfTuZ/ez8Ggu5ipG51yX8ra6RoFwyqXAAKLE11JRZN4ZxOd0j9DeAHXjetdsfsdiy3093n9fb7Y96LpPVB/FGyk9PD99D6Aw==</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>F950235937661B42E0401F0A05990975</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:F950235937661B42E0401F0A05990975</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20140513_083947</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>F950235937671B42E0401F0A05990975</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e34c814a-8ac5-424b-a19a-7d3453e3b9c7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1de1e00d-487c-492d-b21b-5e895e1ee18e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00008_ACCESS_UVTC_UserName_RequestorUserBAU_Active_RequesteeOtherBAU_ResetPassword_Role_DECE_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Second Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Second Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7Pr/C4jx1jG2yMPYEZLknrJuQCNE3PS0bIslGxJWJJ4OTXH8lgAoTk0DOTCaP1avfbi77dcwaytB50GUM5x5Ro4aCtP9nTqRNFfmS0XN8xHM+HxtTz5L/6tGG7qOG0gK1rIWMChYRxQHhbr1u2Y1iuYTsTywoafuDWa47v/aNrDyhn0rRUqVm6VmQpYUHptq2LnAQUMMwCAjLEAg6DcXd4HUjNAFSY9M75GmXpMO/MOF8EpglrEYIoTWEN0sw8N/d0ziMWjHFCABc52viMWFvf3F2tVrVVo0bzxKxblmVavil1IoaTL3rnrLqMopDEdH3uA0IJhiDFr0CBGiI+o5HWTROaYz7LPjBtm7alTBuogAa0HfJFN98clOhOtLQHMmfAYDNZhI2xEYpRjghE2s9R2Na/nFbB9d1JDgiLaZ6xg/PfQUJkiVK6QJHBqsgqdKdbPJKuzjmCQUhgKhheohvVJgsAEdPuchTj4hoz2XwR08ryawWTf7jqMgT/pizn5i5WCd08kp0BThDj/6dmu/VaW3kAqUAdfLMMJ65HhtOFuPpz+3t5N7j+QSa/Wq/DdglhV3kNalvuzfmwWbe9tblEXkG+su3hVT+c9+8S67GBvok5nsXzH+NUpN/4+C75Pn6g5iPpWa/0F1/NHrKLn6OGI8Jk4d6/TobOdCX4XCS9M1L8zsH8sd/z7L6XpLQ7jXsXj5a/IObg+9fZ8LI+vxO/J/Z1Foe0IHG9eV9YaPQw/p4lYWbN0uw5vpoW973Js332tT9Le3bX9pvmz6+uE+ObYfstpt0Y9oUVJYzF9A+CvDqq9ggH2qWsF+Cf04uS4MiIS9VgoTiKcUS43lG3FLUEQhIQjgJZzPX50ndtq9lwW/bAG1g968JyLPvS6lqe77sN16s4aI3iAGKfkhgrX4pl1/3zOUCYBQyRCOXGkgo4Q0z/xOIAcKCFZCQfByUMTahkcR+68xZf+fHL63OciFbCRFp4qa9rN5Tfktu8G3OU7zN3Y4+5RwjiBUaK3lV/M9ngjMtUPIOl4KldW4IaQUIOgFxxcFB3Wq7JcLZIkQJqZjQSKaotZosyMSZb/9YNAFkpHV1Mynf3YViH36oMSJ0IKwWmYukhWUV0ZAQ5VSAfB9zcDbgy3xURVs9LppPnGK6R7H966xLVHtsWkRE99cdPdoV7q37y9fc3zU9AmYf52DqKlnjHbTVL5XiQ5NGpqvkMas81sVyKsn6eIsZcmjclP9rmGEEh2e1lQueImFsT5knDZYv6wPNWvo9P8BkZc8BRJrtNK48nbBZjxNRmEcpXUpy6tuy5lHnjqODHZP1ULiAK8ac7Cgyg0pPiO/mzonn0Vq4jtnb8yDjlOsExSdRJjZGXD5oCUmkWS96j+a7xYwaOOd8XbpO8xcJlN00FRx9/0RShtXUAIRWEhwO9FOySbImTvyxQ8Kb0zkxJ5JvJXLAPJ/Pj8Hos6S4D+lYX/7eygct2gUhXC0CJpa0XctGUzkmyQ+obgAe8bg3qVr3pek1n0Kvv8Xqz6W4TuBdJ5534vWQnp4fvofMv</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950D20265764DB2E0401F0A07995665</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950D20265764DB2E0401F0A07995665</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F951063581D7D0B0E0401F0A07995357</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F951063581D7D0B0E0401F0A07995357</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_083950</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951063581D8D0B0E0401F0A07995357</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_083956</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_083956</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_083956</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7Pr/C4jx1jG2yMPYEZLknrJuQCNE3PS0bIslGxJWJJ4OTXH8lgAoTk0DOTCaP1avfbi77dcwaytB50GUM5x5Ro4aCtP9nTqRNFfmS0XN8xHM+HxtTz5L/6tGG7qOG0gK1rIWMChYRxQHhbr1u2Y1iuYTsTywoafuDWa47v/aNrDyhn0rRUqVm6VmQpYUHptq2LnAQUMMwCAjLEAg6DcXd4HUjNAFSY9M75GmXpMO/MOF8EpglrEYIoTWEN0sw8N/d0ziMWjHFCABc52viMWFvf3F2tVrVVo0bzxKxblmVavil1IoaTL3rnrLqMopDEdH3uA0IJhiDFr0CBGiI+o5HWTROaYz7LPjBtm7alTBuogAa0HfJFN98clOhOtLQHMmfAYDNZhI2xEYpRjghE2s9R2Na/nFbB9d1JDgiLaZ6xg/PfQUJkiVK6QJHBqsgqdKdbPJKuzjmCQUhgKhheohvVJgsAEdPuchTj4hoz2XwR08ryawWTf7jqMgT/pizn5i5WCd08kp0BThDj/6dmu/VaW3kAqUAdfLMMJ65HhtOFuPpz+3t5N7j+QSa/Wq/DdglhV3kNalvuzfmwWbe9tblEXkG+su3hVT+c9+8S67GBvok5nsXzH+NUpN/4+C75Pn6g5iPpWa/0F1/NHrKLn6OGI8Jk4d6/TobOdCX4XCS9M1L8zsH8sd/z7L6XpLQ7jXsXj5a/IObg+9fZ8LI+vxO/J/Z1Foe0IHG9eV9YaPQw/p4lYWbN0uw5vpoW973Js332tT9Le3bX9pvmz6+uE+ObYfstpt0Y9oUVJYzF9A+CvDqq9ggH2qWsF+Cf04uS4MiIS9VgoTiKcUS43lG3FLUEQhIQjgJZzPX50ndtq9lwW/bAG1g968JyLPvS6lqe77sN16s4aI3iAGKfkhgrX4pl1/3zOUCYBQyRCOXGkgo4Q0z/xOIAcKCFZCQfByUMTahkcR+68xZf+fHL63OciFbCRFp4qa9rN5Tfktu8G3OU7zN3Y4+5RwjiBUaK3lV/M9ngjMtUPIOl4KldW4IaQUIOgFxxcFB3Wq7JcLZIkQJqZjQSKaotZosyMSZb/9YNAFkpHV1Mynf3YViH36oMSJ0IKwWmYukhWUV0ZAQ5VSAfB9zcDbgy3xURVs9LppPnGK6R7H966xLVHtsWkRE99cdPdoV7q37y9fc3zU9AmYf52DqKlnjHbTVL5XiQ5NGpqvkMas81sVyKsn6eIsZcmjclP9rmGEEh2e1lQueImFsT5knDZYv6wPNWvo9P8BkZc8BRJrtNK48nbBZjxNRmEcpXUpy6tuy5lHnjqODHZP1ULiAK8ac7Cgyg0pPiO/mzonn0Vq4jtnb8yDjlOsExSdRJjZGXD5oCUmkWS96j+a7xYwaOOd8XbpO8xcJlN00FRx9/0RShtXUAIRWEhwO9FOySbImTvyxQ8Kb0zkxJ5JvJXLAPJ/Pj8Hos6S4D+lYX/7eygct2gUhXC0CJpa0XctGUzkmyQ+obgAe8bg3qVr3pek1n0Kvv8Xqz6W4TuBdJ5534vWQnp4fvofMv</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950D20265764DB2E0401F0A07995665</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I8EH3fXxFlH6uQG9eoIFEuLVp6A7bL9mXlOENwmzg0trn0168dmhQo7cd+EhLyZDxzZub42OcMxZHjtRmDlJOEaoNuU/9TL1uBU545RuAGllGGim/UqwCG7zh+o4pcv4ZcXRswJmBAGUeUN3XHssuGVTHs8sSyPLfhVSqlat191LUHSJkMLV1Klq6t44gyL0vb1EVKvQQxwjyKYmAex964fT30pKeHckx663yLMkuYtuacLzzTxKUAMEQRLuEkNs/NPZ/zgHljElLERQpvOQPW1N/2rlar0sotJWloOpZlmVbDlD4BI+F3vfUt3wzBgM6S7bqDaEIJRhF5RQrUNfB5EmjtKExSwufxJ6Ft07ZUaAPW2MB2mX7XzfcEGboTI+2BTBky2BzZebARzCAFikH7ORo09e+nTXC7d5IiymZJGrOD9b9BArqEKFlAYLC8shzd6RGPtKt1DtgbUBwJRpZwo2iyQBiYdpfCjKyHhEnyBUzLxq+tmfyRnGWA/2Us5+YuVgndPNKdLgmB8f8zs915baM8oEhAqzZ5DS9/P0c3d1GjfTbkvn2/3Mzp/XQVNjMIu85bUMW439aHZC249bbpivWvojPS21ynZ/dE1DYvNrucQufu/tJ9dmMxtMVPf3hxteg5t/6PSTDt+liYPIkbS3MUJH69ShY/poOfw9mvu28RsaMry53SVfBiw6OYPr4+OpseF8PLKxpO+QAv+0E4vqqjx06vtzi7cZJ5fXTGfj3Yv5x+px4ihJ2Xh2DC3OtvF+Y07FdH69vlXXzzu4xH18/N95p2a9g35pIwFv4TYJ4vFT0GXa0v54X41/KiLCQwZpmrt1AaxThQrrfULiUtnpACRAJPDnO77jcqtlV1O1avZlkdu9Gzypbdt9pWrdGouBU716AtigOInYTOiMqlVHbLn68B4thjQANIjWUi8ByY/kXELuJIG9CRPBwJZTBJpIrbob9qiJX/FFNKn1ZPDl09kTnyY127SfgtvU3bMw7pvnS7e9I9AkwWBJS+K4IzyXDGZS9e0FLwyC4tUYmCkDdAqkTYc8r1islIvIhAITXjJBARlBbzRdYZk23/HQNhlllHvUl28D6t6/Bb3gLpExDlwFQtFyDHCEfuoHJeyOcFV3cLzsO3RUDU+ZL95CnBWyT7n95povhRcERW9Kcz/lNwoXA/efvHneYXoMzDfhSJgiXZSZtfpvJ+kOrRyqf5gkovJbFcimx+NaWMqQxvSoG0zTFgIeVtM0megZpFCPOk26VAfZC5sO/jE3xOxxxxiCXbtGx5wtNiDEw9LQbymKxPfbfspZR947Dmx2ydSL5AFOIvHynYw8pPmu/k3ypJg/dxHYm1k0fWKd8TnNBQrdQ9svmEFDiRYYkUviTdDX4swLHk+8aiyQUWLtnkCw6ff9GUojV1hHEiKB909cywq7IZTr5ZgPfu9CFMpuRvV/OafXo1T6+HY6l3MdILX/LfzgbJ6IJBVy+ADEtTX8uXpkxOwx1VfwN4IOxW17GcaqVWLXcvnD1hr1YrRQP3Kml9MH+07PT08Dy0/gI=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F951063C0E700C19E0401F0A07995351</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F951063C0E700C19E0401F0A07995351</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_083954</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F951063C0E710C19E0401F0A07995351</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4jx3jCzYXT2CGWxK3DWkwyYG8dIS8gIotgyVzya8/kokdICSHnklmGK1Xu9/ufvqkK4ai0HJbjEHCSUwVr9tQf5cdo+rYjqOVLWei2VNsaQjX6pphVRAyrbL4C1TFYywFjzKOKG+olmHamuFopj00DLdcd51aybCdZ1V5goSJ0MKlZKjKNgopc7O0DTVNqBsjRphLUQTM5dj1W3c/XeHpohyT2rzao8wSJs0550tX13EpAAxhiEs4jvQr/cjnKmCuT2YU8TSB15wBa6ivezebTWlTLsXJTLcMw9CNui58AkZmX9Xml3wzBB6dxvt1B9GYEoxC8oIkqDvg8zhQWuEsTgifRx+ENnXTkKE12GINmzb9qupvCTJ0F0Y6ApkwpLE5MvNgA5hCAhSD8jjwGurXyya43ztMEGXTOInYyfrvIAFdQxgvIdBYXlmO7vKIZ9rVvALsehSHKSNr6EuaLBEGpvxKYEq2PwkT5AuYko1f2TLxT3KWAf6bsVzph1gFdP1Md7pkBoz/n5kdzmsf5QmFKTSv78Onu5fVbrSyy77eebC+TaJv/cVoYuNGBuHQeQ+qGPfr+pSsBbdeN22GL/74pje7qQz6L35lt6oHweBmsfNa2Bx9D/wOqozDX+3Fw3h9D5Y3Ht5YvRV6mD2b9u1d+xHG/WfLH+l6+/bH+Ev/1tnMf5i1+PrW4I/17U1/YSXzTX0RT2ASsbnxzxhGu9VTazh+CYeJ4X3/Pit7D49m2Vh1ngdDH+nVR/tHOr59mX1pkW2Nj76tlnq3kvTGNdx+bLzVdFjDsTGXBD+d/AHM86Wkh9dVrsW8EP9cXqSFBNo0c3WXUqMYB8rVptwlpcVNhQCRwBXD3K+v645pVKxuq9zr2e1etWfYhnlttAynXrdqvUquQXsUJxA7MZ0SmUuq7J4/nwPEkcuABpBo6zjFc2DqJxG7iCPFowNxOGLKYBgLFTeRlW7+xNv5KpqYJqbBoupM1mkZTVSlH/N7ep+0phySY+0uH2n3ADBZEpACLxnOBMUZF81YoXXKQ7O0RiUKqbgCEqnCrmXXHJ2RaBmChKpHcZCGUFrOl1lrdLb/lWLEMuugN8xO3oeFnX7LeyB8AiIdmKylDWKOcOYSsvNCPi64clhwHr6VBkQeMNFQnhC8R3L86Y0nkiAFSURFvzv+bzPHXbhfvP39Tv0TUPppP4pEwZocpM1vU3FBCPlo5tNcodKqlK7XaTa/qpTGRITXhUKaug84Ffq2G8YLoHoRQr/oeilQn2Qu7Mf4Uj6nPkccIsE2JVte8Lbwgcm3hSfOyfbSh8tRStE3Dlt+ztYJxRNEIv70lYJdLP2E+Zf42cTJW+HnYh3kEXWKBwUndCZX8iLZfUAKHIuwRChfnBwGPxfgXPJjY9HkAgsXbJqkHD7+okhJa6gI4zil3OuqmeFQZjOcfLcE983pXZhMyl/v5i378G4e3f30heBFSC18yX87aySjCwZVPgEyLA11K56aIjmdHcj6K8ATZTe6lmCJU63Y3bZVKHu1XncqFado4FElzXfm95aDnp6eh+a/</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>F951062DA3EE4BE7E0401F0A059928E6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:F951062DA3EE4BE7E0401F0A059928E6</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20140513_083956</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>F951062DA3EF4BE7E0401F0A059928E6</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e34c814a-8ac5-424b-a19a-7d3453e3b9c7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1de1e00d-487c-492d-b21b-5e895e1ee18e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00009_ACCESS_UVTC_UserName_RequestorUserSAU_Active_RequesteeSelf_ResetPassword_Role_DECE_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0TpYxXihEBJVJAol1O6e4fddvelcp0JuE1sGjuQ8vXHDg0FejnsIyEhT8Yzay5eM0cCJ7EbtIWAVFLOjEG3aT5C3XGqTu3QqqOwYXnVKraefN+1sIfcRs2PlLhmGgMhMhgwITGTTdNFjmehmuV4I4QCDwXIrbh198E0biEVyrRSqSDTyJOYiaBw2zSzlAUcCyoChhMQgSTBsH1+FijNAJeYzNbREmXhMG1NpJwGtk0qIRCIY1IhPLGP7A2do1AEQzpmWGYpvPsMRdN8vzufzyvzaoWnY9tFCNnIt5VOKOh432ztlZchHLCIL88dzDijBMd0gTWoc5ATHhrteMxTKifJN6Yd20HatAU5sYjjsX3T/nBQoNvR0gbIVGBLTLBTGruBCFJgBIzfN4Omub9bBZd3RylmIuJpIrbOfwcJ2AxiPoXQEmVkJbrdLX6RrtYRkGDASJwJOoML3SZTTEAYVylEND+jQjVfKIyi/EYu1I+WXQbkb8pyZK9jVdDtL7LTpWMQ8v/UbL1eSyu3OM6gdXV66vROMTpd8K5o11ns/Rn96p/4YvLSLCCsKy9Brcr9ft5u1lVvvV96vTvoOL2naXjn+sh+TZ6rhwd/Gh7k4vUaP6SjzrPdqHXweZafo2wxmZD5071/fxbl15fR7J+nHr29qP8anySLFyfZQ+5B9ZZfvqHjy+PzW3KH3bbt3V/czJ1qDeX32ezqRJykg3vHbvvV5Fo8+4vndHHguTS6XbTh8piL3/n0uNudJ4s9xx31e54YnST1g7Or8PThwmt+xLQew6awpIRh9vQMRJZH3R6DrtFX9cLyZ3rREhpaUaEaTDVHCQlMmi19S1NLkCkComGgirk89/0a6rqo1u/X2/3DvtdDHnL6qI0Ofb9Wr/slBy1RbEHscBZR7Uuz7LJ/fgZIkkAACyG1ZjwjExDmDxa7WGJjwG7U4+BMwIgrFndk5HA8nfjEbdBoMUaHUlLssKppXHB5yS7TdiQh3aTu6gZ13wChUwqa33WDC9XhQqpcvOJZJmOnMsMVBpmaAKkm4cD1GjVb0GQag0ZqJzzMYqhMJ9MiM7ZY/isaIqKQ3vRGxcP7Nq7tb2UKlE5ItYLQsRyDKiNsz6CqH9TKQL4PuL4ecGm+nYVUvy+VT5lSskSy+emjTXR/rHpERfTYGT46Je6V+s7XP9+0fwBlb+dj5Sic0TW35TBV80GxR6us5iuuvFay2Swr6neomTFV5m1FkI49BJIpensb8Rdg9sqEvdN0WaHe8rySb+LL5IQNJZaQqG4ziuMOq8UQhF4tBuqZ5LvuLRsuVd4k5PIrWSdWG4hG/OOSQgKi9ZT4Sv3NeRp+lOsLW2t+VJxqn5CUjfVJz5G3b5qCcGWWKuLj6brxrwx85XxTuEryCotU3fSUSfj+i6EZrWliQnjG5KBrFoJ1li1wyrcpBB9Kn8wUTP4+mnPx7Wi+Pz8bKr5LsLnSpf+tbNGiXQiYegMosDTNXG2ayjkbr7H6O8BtYnfdbr3huajfP+6sEztyex+PeSOS1ifxZ8laTrffQ+tf</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95022D68420FFBCE0401F0A079902E1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95022D68420FFBCE0401F0A079902E1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950D205FF6AF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950D205FF6AF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_08400</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950D205FF6BF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_08404</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_08404</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_08404</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0TpYxXihEBJVJAol1O6e4fddvelcp0JuE1sGjuQ8vXHDg0FejnsIyEhT8Yzay5eM0cCJ7EbtIWAVFLOjEG3aT5C3XGqTu3QqqOwYXnVKraefN+1sIfcRs2PlLhmGgMhMhgwITGTTdNFjmehmuV4I4QCDwXIrbh198E0biEVyrRSqSDTyJOYiaBw2zSzlAUcCyoChhMQgSTBsH1+FijNAJeYzNbREmXhMG1NpJwGtk0qIRCIY1IhPLGP7A2do1AEQzpmWGYpvPsMRdN8vzufzyvzaoWnY9tFCNnIt5VOKOh432ztlZchHLCIL88dzDijBMd0gTWoc5ATHhrteMxTKifJN6Yd20HatAU5sYjjsX3T/nBQoNvR0gbIVGBLTLBTGruBCFJgBIzfN4Omub9bBZd3RylmIuJpIrbOfwcJ2AxiPoXQEmVkJbrdLX6RrtYRkGDASJwJOoML3SZTTEAYVylEND+jQjVfKIyi/EYu1I+WXQbkb8pyZK9jVdDtL7LTpWMQ8v/UbL1eSyu3OM6gdXV66vROMTpd8K5o11ns/Rn96p/4YvLSLCCsKy9Brcr9ft5u1lVvvV96vTvoOL2naXjn+sh+TZ6rhwd/Gh7k4vUaP6SjzrPdqHXweZafo2wxmZD5071/fxbl15fR7J+nHr29qP8anySLFyfZQ+5B9ZZfvqHjy+PzW3KH3bbt3V/czJ1qDeX32ezqRJykg3vHbvvV5Fo8+4vndHHguTS6XbTh8piL3/n0uNudJ4s9xx31e54YnST1g7Or8PThwmt+xLQew6awpIRh9vQMRJZH3R6DrtFX9cLyZ3rREhpaUaEaTDVHCQlMmi19S1NLkCkComGgirk89/0a6rqo1u/X2/3DvtdDHnL6qI0Ofb9Wr/slBy1RbEHscBZR7Uuz7LJ/fgZIkkAACyG1ZjwjExDmDxa7WGJjwG7U4+BMwIgrFndk5HA8nfjEbdBoMUaHUlLssKppXHB5yS7TdiQh3aTu6gZ13wChUwqa33WDC9XhQqpcvOJZJmOnMsMVBpmaAKkm4cD1GjVb0GQag0ZqJzzMYqhMJ9MiM7ZY/isaIqKQ3vRGxcP7Nq7tb2UKlE5ItYLQsRyDKiNsz6CqH9TKQL4PuL4ecGm+nYVUvy+VT5lSskSy+emjTXR/rHpERfTYGT46Je6V+s7XP9+0fwBlb+dj5Sic0TW35TBV80GxR6us5iuuvFay2Swr6neomTFV5m1FkI49BJIpensb8Rdg9sqEvdN0WaHe8rySb+LL5IQNJZaQqG4ziuMOq8UQhF4tBuqZ5LvuLRsuVd4k5PIrWSdWG4hG/OOSQgKi9ZT4Sv3NeRp+lOsLW2t+VJxqn5CUjfVJz5G3b5qCcGWWKuLj6brxrwx85XxTuEryCotU3fSUSfj+i6EZrWliQnjG5KBrFoJ1li1wyrcpBB9Kn8wUTP4+mnPx7Wi+Pz8bKr5LsLnSpf+tbNGiXQiYegMosDTNXG2ayjkbr7H6O8BtYnfdbr3huajfP+6sEztyex+PeSOS1ifxZ8laTrffQ+tf</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F95022D68420FFBCE0401F0A079902E1</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4jx3jewKewAyF0DpNGgo0l750hLwGpbZsLAlMfn0lExMgl0PPDDOM1qvdby/6ds8YShMn6DIGBScZ1cJ+W/9t+5534sWnRrPpOoYHCBkItzwDTVsIYSfypq6layFjAkLKOKK8rTuW7RmWb9jexLICzwqsk4bdbP3StRsomDQtVRryVpkmlAWV27YuChpkiBEWUJQCCzgOxt2ry0BqBqjGpHfONigrh0VnznkemCZuRIAhSXADZ6l5Zu7pnEUsGJMZRVwU8OQzYm396e5qtWqs3EZWzEzHsizTaplSJ2Jk9lHvfKgvQxTSONuce4hmlGCUkEekQF0Bn2eR1k1mWUH4PH3DtG3aljJtQIkNbHv0o24+O6jQHWlpD2TBkMHmyK6NjSCGAigG7ecobOsfj6vg5u6kQJTFWZGyg/O/QQK6hCTLITJYHVmN7niLr6SrcwY4CClOBCNL+K7aJEcYmDYsICblJWGy+SKmVeXXSiZ/pO4ywP9SljNzF6uEbr6SnT6ZAeP/p2a79dpYuUGJgI73wHu3o6x/exLnF6df2PIimT+s1s468doVhF3lDahtuZ/Oh8267a2nS90rcj9tLv7ch355Opw+DG7taHg/7F9MrsNrnMBV6+5W5KtlSE18h5yZ2//x7eZhPrr+E939omP/UZx8XQ0Xy7hXog/QTVe9iXcr7J9dEs780c2nLPVaPsm/mpc/Hlff7s8dd/3pYrCMBRqOWrE3oD1/PCqawy+X3TBpuj9tt3t3O12syw9z8SkZuea6uPEuhWmt6Zy1n2PajWFfWFPCWEwfAPP6qNoj7GsDWS/E36cXJSGREVeqQa44inGgXO+oW4paAiEJiESBLObmPGj5lmO3nKbftd2eb51bnmUPrK512mpZvtuvOWiD4gBiL6MxUb4Uy276532AOA0Y0AgKY5kJPAemv2OxjzjSQjqSjyOjDCaZYvGoFPnUi+2FVTZxMl/B1F67bBbp2veMX9ProhtzKPap292j7hFgkhNQ/K4anMkOZ1zmYoGWgid2Y4kaFIScAIUi4cDxmr7JSJonoJCaaRaJBBr5PK8yY7LNvyO5iFXS0fmkenhvxnX4rU6B1ImIUmAqls8gywiHM8htBX4dyNsBn+wGXJvvioio9yXzyQuCN0j2Pz23ieqPbY/IiH73xr/tGvdW/ejrL2+a74AyD/OxdRQtyY7bepjK+SDZo1NXc4Eai4ZYLkVVv1PFjIU0b0qCtM0xYCHpbT3J/gA1tybMo6bLFvWB5618H5/gczrmiEMqu02rjkesFmNgarUI5TMpj91b9lzKvHEo+WuyXiI3EIX43SUFB1jpSfFQ/q2yInou1yu2dvzIOOU+wQmdqZOaI+s3mgJn0iyRxJcVu8ZfM/Ca833hNslbLFx201RwePuLphitrSOMM0F52NcrwS7LVjj5OofgWemFmYrJn0Zzyd4czXdXl2PJdynSt7rkv5UNUrULBl1tABWWtl7KTVM6p7MdVn8C+ILYnf5J03OsweBzb4/YnfPnx7wXSeeF+KVkJ6eH76HzFw==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950219285A13C50E0401F0A0799053D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950219285A13C50E0401F0A0799053D</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_08404</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950219285A23C50E0401F0A0799053D</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00010_ACCESS_UVTC_UserName_RequestorUserSAU_Active_RequesteeFAU_ResetPassword_Role_DECE_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSx1WIc4MSFSTatN30yuHS7falMo4DXhIn2A6X/vpjh4YCvRz2SEjIk/HMNxd/M6ccpontdzjHTJCMamHQ0l/qHoRO7J4YMfDqhtsA0GhawDIaMKp7DSf2XBjrWsh5gUPKBaSipdvAcg3gGZY7AMB3gQ+atQZwnnXtETMuTUuVGtC1ZZpQ7pduW3rBqJ9BTrhPYYq5L5Df79zd+lLThxUmvX26Rlk6ZO2JELlvmqgWYYSTBNVQlpqn5o7OacT9PhlTKAqG33xGvKW/3V0sFrWFU8vY2LQBACZomlIn4mR8rLePqss4Cmmcrc/nkGaUIJiQV6hA3WExySKtk4wzRsQk/cK0ZVpAmTbwEhnIcumxbr47KNEdaGkHJOPQ4BNoVcZ6OMYMU4S1YS9s6ceHVXB9d8Ag5XHGUr53/jtImM5xkuU4MngVWYXucIufpKt9ipEfUpQUnMzxvWqTHCLMtS7DMVneEi6bL+JaWX5tyeWPVF2G0d+U5dTcxiqhm59kJyBjzMX/qdl2vdZWHmFS4Hb3oXfRHfRfA8ciF0/Dwrp8TE9O8Gra/d0qIWwrr0Ftyv123m/WTW+9XYodOLS8H/05EmdncPUcpKt/uq41/JngLnAeQ/EYjkaLMSV2fTCF7GcXg+FieHszyX81e9Pn6+hq6M4FnkF2fXt0NcQrltz08rtXki9msNOcX00Wz70kmQ1vphcieABPJ/F01B10n1bnZHoZwDi8sEfeddB3Re/P77w+SgbZOb03naMgsu+b0/BHfvVrVs8zdpcvWu8xbcewK6wooV+M/mAkqqNqjzDQLmW9oPieXpSEREZcqvq54iguMBV6W91S1OIXkoBI5Mtirs+XTQ/Ydh1YAWhYTqN5AVxgXYIOaDSbwA4aFQetUexBPM9oTJQvxbLr/vkeIEp9jmmEmTHPCjTBXP/GYgAF1ELak48joxwPMsnilsvqiFqz8cqaNS33hGVzmgCQx0zX7jPxQB9YJxaY7XK3s8PdPYxITrAieNXhXLY4FzIZMzgvRGLV5rBGcSFHAFMs7NvuiWdykuYJVlDNNIuKBNfySV6mxuTrf9uAiJfS3sWgfHlfBrb/rcqB1ImIUuAqljMs64j3h5DT9L0qkK8Drm8HXJnvFBFRD0wmVDCC1kh2P733iWqQTZPIiF7O+y9WhXujfvD1jzfNb0CZ+/nYOIrmZMttNU3lgJD00a6qOYO1Wa2Yz4uyfg1FjUyaNyVDWmYfo0Ly22qQTTE1NybMg8bLBvWe5418F18hJrQvoMCp7DatPB6wW/QxV7tFKN/J8tDFZcelzJvAS/GZ7DyRK4hC/O2Wgnyk9KS4K/8WGYvey/WJrS0/Mk65UAhCx+qkBsnqi6ZAmTRLJPNlbNv4ZwY+c74r3CR5g0XIbhoVAn/9RVOU1tIhQllBRRjopWCbZkucYpVj/13pg5mSyt9m85J/OZuf7m77kvBSqG90yX8rG6RsF4R1tQKUWFr6Uq6a0jkdb9H6G8A9ZrdA3fHsjtPp2F5nm9k9xw02CdyJpP1B/FGyldP999D+Fw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95106352A3AA25AE0401F0A0799534D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95106352A3AA25AE0401F0A0799534D</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95022601D071379E0401F0A079902D7</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95022601D071379E0401F0A079902D7</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_08408</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95022601D081379E0401F0A079902D7</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_084011</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_084011</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_084011</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSx1WIc4MSFSTatN30yuHS7falMo4DXhIn2A6X/vpjh4YCvRz2SEjIk/HMNxd/M6ccpontdzjHTJCMamHQ0l/qHoRO7J4YMfDqhtsA0GhawDIaMKp7DSf2XBjrWsh5gUPKBaSipdvAcg3gGZY7AMB3gQ+atQZwnnXtETMuTUuVGtC1ZZpQ7pduW3rBqJ9BTrhPYYq5L5Df79zd+lLThxUmvX26Rlk6ZO2JELlvmqgWYYSTBNVQlpqn5o7OacT9PhlTKAqG33xGvKW/3V0sFrWFU8vY2LQBACZomlIn4mR8rLePqss4Cmmcrc/nkGaUIJiQV6hA3WExySKtk4wzRsQk/cK0ZVpAmTbwEhnIcumxbr47KNEdaGkHJOPQ4BNoVcZ6OMYMU4S1YS9s6ceHVXB9d8Ag5XHGUr53/jtImM5xkuU4MngVWYXucIufpKt9ipEfUpQUnMzxvWqTHCLMtS7DMVneEi6bL+JaWX5tyeWPVF2G0d+U5dTcxiqhm59kJyBjzMX/qdl2vdZWHmFS4Hb3oXfRHfRfA8ciF0/Dwrp8TE9O8Gra/d0qIWwrr0Ftyv123m/WTW+9XYodOLS8H/05EmdncPUcpKt/uq41/JngLnAeQ/EYjkaLMSV2fTCF7GcXg+FieHszyX81e9Pn6+hq6M4FnkF2fXt0NcQrltz08rtXki9msNOcX00Wz70kmQ1vphcieABPJ/F01B10n1bnZHoZwDi8sEfeddB3Re/P77w+SgbZOb03naMgsu+b0/BHfvVrVs8zdpcvWu8xbcewK6wooV+M/mAkqqNqjzDQLmW9oPieXpSEREZcqvq54iguMBV6W91S1OIXkoBI5Mtirs+XTQ/Ydh1YAWhYTqN5AVxgXYIOaDSbwA4aFQetUexBPM9oTJQvxbLr/vkeIEp9jmmEmTHPCjTBXP/GYgAF1ELak48joxwPMsnilsvqiFqz8cqaNS33hGVzmgCQx0zX7jPxQB9YJxaY7XK3s8PdPYxITrAieNXhXLY4FzIZMzgvRGLV5rBGcSFHAFMs7NvuiWdykuYJVlDNNIuKBNfySV6mxuTrf9uAiJfS3sWgfHlfBrb/rcqB1ImIUuAqljMs64j3h5DT9L0qkK8Drm8HXJnvFBFRD0wmVDCC1kh2P733iWqQTZPIiF7O+y9WhXujfvD1jzfNb0CZ+/nYOIrmZMttNU3lgJD00a6qOYO1Wa2Yz4uyfg1FjUyaNyVDWmYfo0Ly22qQTTE1NybMg8bLBvWe5418F18hJrQvoMCp7DatPB6wW/QxV7tFKN/J8tDFZcelzJvAS/GZ7DyRK4hC/O2Wgnyk9KS4K/8WGYvey/WJrS0/Mk65UAhCx+qkBsnqi6ZAmTRLJPNlbNv4ZwY+c74r3CR5g0XIbhoVAn/9RVOU1tIhQllBRRjopWCbZkucYpVj/13pg5mSyt9m85J/OZuf7m77kvBSqG90yX8rG6RsF4R1tQKUWFr6Uq6a0jkdb9H6G8A9ZrdA3fHsjtPp2F5nm9k9xw02CdyJpP1B/FGyldP999D+Fw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F95106352A3AA25AE0401F0A0799534D</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSxyrkQgIlKkgU2l22hVJCry+V4wzgbuKE2AG6v37t0KRAaQ97JCTkyXjmm4u/mTOGotBy24xByklMlV63qb5YAA1kn/pa3fGRZtfwqXaKrIlm2ae2Xav5Zr1aVZUeYxn0KOOI8qZqGaatGY5m2mPDcG3DNa1KvW49q8o9pEyYFioVQ1VWUUiZm7ttqllK3RgxwlyKImAux67X7l+7QtNFBSa1dbZGmTtMWzPOE1fXcSUADGGIKziO9DN9S+csYK5HphTxLIV3nwFrqu93l8tlZVmtxOlUtwzD0I2GLnQCRqbHauuouAxBj07i9bmDaEwJRiH5gySoPvBZHCjtcBqnhM+iL0ybumlI0xqssIZNmx6r+oeDHN2BlrZApgxpbIbMwtgIJpACxaDcjXpN9fiwCq7vjlNE2SROI7Zz/jdIQBcQxgkEGisiK9AdbnFPulpngN0exWHGyAIGsk0ShIEpwxQmZHVNmGi+gCl5+ZUVEz9SdBngfynLmb6JVUDX92SnS6bA+P+p2Wa91lbuUZhB6zYd/RgPB1cLA151K5m3H3r9Toqux9bvZg5hU3kNqiz3+3m3Wcveer+0SpPHu+VteMKXfHhC2CIJq/7D083z+QpO4aT29LB87ib6jcFR9+fvp9uJNxz4/nnyq4bN1/4w8hdXjTt2McX6yeqow30dX9SM86nTv8PLK9+fzuaz5W3SuT/pmpd9b95w+lfgNQajbn1+1eEks85vut6r/rNxxZ8GQ886QZb1nKHl49EsHMUPT7+gf02M+uMgGPzoNz9i2oxhW1hQgpf5r4B5cZTt0esql6JeiH9PL1JCAm2Sq7qJ5CjGgXK1JW9JanEzQUAkcEUx1+fLhmN0LaNavbAd87RhXhi2YV4abcNpNKz6+WXBQWsUOxA7MZ0Q6Uuy7Lp/vgeII5cBDSDVFnGGZ8DUbyx2EUdKj47E44gpg3EsWBzNqs6Ezq2s7ttOBJM/Pvc5MSaqMoj5Db1J2xMO6TZzV7eYewSYJAQkvcv+ZqLBGRepmKNFxkOzskAVCpkYAKnkYFeQi6MzEiUhSKB6FAdZCJVkluSJ0dn639IQZrl0dDHO392XYe1+KzIgdAIiFZiM5RxEFWHPCDKKQL4OuLYZcGG+nQVEPi+RTp4SvEay/emjS2R7lC0iInrpeC9mgbtUP/j655v6N6D03XyUjoIF2XBbzFIxHgR5tIpqzlFlXskWiyyvX10SYyrM64IfTd0DnAl2exvHv4HqpQn9oOFSot7xXMq38WV8Rj2OOESi25T8eMBm4QGTm0VPvJLVoWvLlkuRNw4rvk/WCcUCIhF/u6NgF0s9IR6Kv2WcBh/l2mNrw4+IU6wTnNCpPMkx8vZFU+BYmCWC9+J00/g+A/ucbwvLJJdYuOgmP+Pw9RdFElpTRRjHGeW9rpoLNkk2x8nfEnA/lD6ZyYn8fTKv2JeT+bF/7Qm6i5Ba6pL/VtZI3i4YVLkA5Fia6kosmsI5nW6Q+jvAHV43jVrVsdrVdtty2iWv1xsNp2p3ywRuRdL6JP4s2cjp7nto/QU=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950D2033E451891E0401F0A059927BF</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950D2033E451891E0401F0A059927BF</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_084011</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950D2033E461891E0401F0A059927BF</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00011_ACCESS_UVTC_UserName_RequestorUserSAU_Active_RequesteeBAU_ResetPassword_Role_DECE_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtc6o6EP5+fgVDP3YQUHyBqc5Yredw+qIttqe9XzppCJIKAZMg2l9/EyxUre313BlnnCyb3Wd3nzzJGQNxVHf6jCHKcUIUd9hVn9uwHrxYbaC1GxBplt9qah0zCLQOaAfIaNd9GzRVxWUsQy5hHBDeVeuGaWlGUzOtqWE4luGYrZptWv+oygOiTIQWLjVDVVZxRJhTpO2qGSVOAhhmDgExYg6Hjte/vnKEpwNKTGrvbIOySEh7Ieepo+uw5iOIogjWYBLrZ/qOz5nPHA/PCOAZRe85fdZV3/fmeV7LG7WEzvS6YRi6YevCx2d4dqL2fpSbke+SINmsB4AkBEMQ4TcgQV0jHia+0o9mCcU8jL8IbeqmIUNraAU1aFrkRNU/EhTojoy0A5IyoLEQmGWwOxQgighEyv2d21VPjpvgZu+UAsKChMZsb/13kBBZoihJka+xsrIS3fERD7Srd4ag4xIYZQwv0Y2kSQogYsqEogCvrjAT5POZUoxfWTHxwyXLEPybsZzp21gFdP1Ad4Z4hhj/PzPbntcmygOIMtSLAjx8tCen0S8v/nnpTtphstZbr2bYmXcLCNvOG1DVuN/X+2StuPW+KbxisHU/z/2cX4wHbWusszTX5yvgee7b9G54Ojof9i/nj78mMV+s2SC/npPI1ae5+dR37ZG9HhP6YPo/Hx/79R8L0gx/R3PA0xucejdwOH5JBje3N9SNXRy0Z33w522Y355f6/TJNR/ak/Mof7qMl9n1KJmscCdCdWy9WdHLaPjnx9NtdOqN70P4lDVyMx+9vN53P2rarmHXWEqCl728IsjLpaSHO1RGYl6Afy8v0oJ9LShcnVRqFOOIcLUnd0lpcTIhQNh3xDA365HdNA3bvGh2Rv32ed28MCzDHBl9o2nbDbvVKjVog2IP4iAhAZa5pMpu+PM9QBg7DBEfUW2ZZDBETP0m4hBwoLjkThyOhDA0TYSKZ7CxnjOaUrBoxfOV32osgQGMUFVuEj4mY9oPOKK7yt3YUe47BHGKkZR3yW8mCM64aMUCLDMembUlqBGUiQuASg126lanqTMcpxGSQPU48bMI1dIwLRojSLdpkAYgK6x3F9Pi3H1Z1v63sgPCx8fSgclazpGYIjpwBRllIV8X3NouuAzfz3wsj5doJ6cYbpDsfvpgiaRHRRFR0fPAezZL3JX70ds/79S/AaXv96NK5C/xVtryLhXXgxCPXjnNBagtatlymRXza0thpCK8LvTR1D0EM6Fu62kyR0SvQuhHXS4V6r3MlX0XX8ZD4nHAUSzYphTLI14WHmLyZeGKU7I69tmyk1L0jaMVP2QbROIBIhF/+0aBDpR+wjwRf3lC/Y9xHYi1lUfUKZ4THJOZXMlrZP0FKWAiwmKhewndDn4owKHku8aqyRUWLtj0knH09RdFClpXBRAmGeHuUC0M2yJb4OTrFDkfTp/CFEL+fjOv2Jc38+P1lSfkLgZq5Yv/21nDBV0gUuUDoMDSVVfioSmSk9mWqL8D3NN1o27W+0ajM7pomFal623bNpqdStd3K+l9Mn+2bPV0/zz0/gU=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950212A038FE314E0401F0A07990586</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950212A038FE314E0401F0A07990586</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F951091E58FA7B21E0401F0A05993966</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F951091E58FA7B21E0401F0A05993966</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_084015</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951091E58FB7B21E0401F0A05993966</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_084021</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_084021</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_084021</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtc6o6EP5+fgVDP3YQUHyBqc5Yredw+qIttqe9XzppCJIKAZMg2l9/EyxUre313BlnnCyb3Wd3nzzJGQNxVHf6jCHKcUIUd9hVn9uwHrxYbaC1GxBplt9qah0zCLQOaAfIaNd9GzRVxWUsQy5hHBDeVeuGaWlGUzOtqWE4luGYrZptWv+oygOiTIQWLjVDVVZxRJhTpO2qGSVOAhhmDgExYg6Hjte/vnKEpwNKTGrvbIOySEh7Ieepo+uw5iOIogjWYBLrZ/qOz5nPHA/PCOAZRe85fdZV3/fmeV7LG7WEzvS6YRi6YevCx2d4dqL2fpSbke+SINmsB4AkBEMQ4TcgQV0jHia+0o9mCcU8jL8IbeqmIUNraAU1aFrkRNU/EhTojoy0A5IyoLEQmGWwOxQgighEyv2d21VPjpvgZu+UAsKChMZsb/13kBBZoihJka+xsrIS3fERD7Srd4ag4xIYZQwv0Y2kSQogYsqEogCvrjAT5POZUoxfWTHxwyXLEPybsZzp21gFdP1Ad4Z4hhj/PzPbntcmygOIMtSLAjx8tCen0S8v/nnpTtphstZbr2bYmXcLCNvOG1DVuN/X+2StuPW+KbxisHU/z/2cX4wHbWusszTX5yvgee7b9G54Ojof9i/nj78mMV+s2SC/npPI1ae5+dR37ZG9HhP6YPo/Hx/79R8L0gx/R3PA0xucejdwOH5JBje3N9SNXRy0Z33w522Y355f6/TJNR/ak/Mof7qMl9n1KJmscCdCdWy9WdHLaPjnx9NtdOqN70P4lDVyMx+9vN53P2rarmHXWEqCl728IsjLpaSHO1RGYl6Afy8v0oJ9LShcnVRqFOOIcLUnd0lpcTIhQNh3xDA365HdNA3bvGh2Rv32ed28MCzDHBl9o2nbDbvVKjVog2IP4iAhAZa5pMpu+PM9QBg7DBEfUW2ZZDBETP0m4hBwoLjkThyOhDA0TYSKZ7CxnjOaUrBoxfOV32osgQGMUFVuEj4mY9oPOKK7yt3YUe47BHGKkZR3yW8mCM64aMUCLDMembUlqBGUiQuASg126lanqTMcpxGSQPU48bMI1dIwLRojSLdpkAYgK6x3F9Pi3H1Z1v63sgPCx8fSgclazpGYIjpwBRllIV8X3NouuAzfz3wsj5doJ6cYbpDsfvpgiaRHRRFR0fPAezZL3JX70ds/79S/AaXv96NK5C/xVtryLhXXgxCPXjnNBagtatlymRXza0thpCK8LvTR1D0EM6Fu62kyR0SvQuhHXS4V6r3MlX0XX8ZD4nHAUSzYphTLI14WHmLyZeGKU7I69tmyk1L0jaMVP2QbROIBIhF/+0aBDpR+wjwRf3lC/Y9xHYi1lUfUKZ4THJOZXMlrZP0FKWAiwmKhewndDn4owKHku8aqyRUWLtj0knH09RdFClpXBRAmGeHuUC0M2yJb4OTrFDkfTp/CFEL+fjOv2Jc38+P1lSfkLgZq5Yv/21nDBV0gUuUDoMDSVVfioSmSk9mWqL8D3NN1o27W+0ajM7pomFal623bNpqdStd3K+l9Mn+2bPV0/zz0/gU=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950212A038FE314E0401F0A07990586</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZrU/I6EP7ur+jUj05pWsqtI8ygwDmIFxRE9IsT0gWibQpNWsBf/ybFIiB6eM8MM0y2m91nL3l2zzkOfNutcw6RoCHT2o2q/orRuIBKYBk4P3IMZ2wRo1weW4ZXRuMSqnj2qOTpWpvzGNqMC8xEVbeR5RioYFhOHyHXQa6NcpbjvOjaACIuTUuVHNK1ZeAz7qZuq3ocMTfEnHKX4QC4K4jbq99cu1LTxRkmvXa+Rpk6jGpTIWauaZKcBwR8n+RIGJjn5o7OucfdHp0wLOIIPn16vKp/3l0sFrlFPhdGE9NGCJmoYkodj9PJqV47yS6D12bjcH2+xCxklGCffmAF6gbENPS0uj8JIyqmwQ+mLdNCyrQBS2IQy2GnuvnlIEV3pKUdkBHHBp9iKzP2AGOIgBHQHh/aVf30uAqu7/YjzPg4jAK+d/47SMAS8MMZeAbPIsvQHW/xQLpq50DcNiN+zGkCt6pNZpgA17oRjOnymnLZfB7X0vJrSy5/NOsyIH9TlnNzG6uEbh7IToNOgIv/U7Pteq2tDLAfQ608vLuPxv6FU+gNR/Pm9H44RIPrZ6fplasphG3lNahNuT/P+8266a3PS7ie7z8/8VXyeBW+XZS84PrZHlSCq3yApqsXrzNPbp+7kZ0U7f7ZvB+aJWgumq2r4VVcvHpvPyMbwRMr3P5jxTA/6V/frwbL9z7r+P3Au72Z30ZPddZIBh1/9Nh9C8oPfiVBQYnF/953O2x6R575he28d/oX3W7xvrm8HzI2jF8enZfVSWcWJgMv6Nj4bOFcOjPvrF79imk7hl1hRgm9ePQGRGRH1R7thtaS9cLid3pREuoZ41TVnSmO4gKY0GvqlqIWN5YERD1XFnN9blUKqGGjQqtVbrRKLaeJHGS1UB2VKpVCsVjJOGiNYg/iZcjGVPlSLLvun98BksDlwDyIjCSMyRS4/ovFBhZYa7MH+ThCxqEfShanq2I+yBdHb4sPv7z8yE/5alosOXlduw3FHbuL6mMB0S5z53eY+wEInVFQ9K76m8sG50KmYo6TWPhWLsE5BrEcAJHiYNd2ygWT02DmgwJqBqEX+5CbTWdpYky+/rcNTHgqfWj203f3Y1j737IMSB2PKgWuYrkAWUU4MIKsLJCfAy5uB5yZr8ceVc9LplNElKyR7H766hLVHpsWkRG9XvZerQz3Rv3o699vmr+AMvfzsXHkJXTLbTZL5XiQ5FHLqjnHuXkuTpI4rV9JEWMkzZuSHy2zBySW7Lbqh+/AzI0J86jhskG953kj38UXiynrCSwgkN2mpccjNosecLVZtOUrWR67tuy4lHkTsBSHZJe+XEAU4l93FOISpSfFXfm3CKOvwA/Z2vIj45TrhKBsok5qjKx+aAoSSrNU8l4YbRs/ZOCQ813hJskbLEJ20ygW8PMXTRFaVceEhDET7YaeCrZJNsUpVjNwv5S+mUmJ/HMyL/mPk3l4c92TdBdgfaNL/1vZoGm7ENDVApBiqepLuWhK52yyReqfAPd53bbsOsqXW828tcPrqFAubhK4E0ntm/i7ZCun+++h9gc=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950D205FF8DF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950D205FF8DF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_084018</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950D205FF8EF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj1WIc2sgKkhcSg9baLsE2D3nZWWcgYQGh8YOt19/7NBQoLSHPRIS8mQ8883F38wtw/PY9OqMQcqjhCqdVlX9bSDALirbWmVsgWbbJmhlKCPNxubYHAeWZYGlKh3GMuhQxjHlVdVEhq0hRzPsAUKejTzTLN249j+qMoKUCdNCpYRUZT2PKfNyt1U1S6mXYBYxj+I5MI8Tz6/3up7Q9HCBSa3d7lDmDtNayPnC03VSCoBAHJMSSeb6rX6kcxswz4+mFPMshTefAauqb3dXq1VpZZWSdKqbCCEdVXShE7BoeqXWvhWXIejQSbI7NzFNaERwHG2xBNUDHiaBUo+nSRrxcP6JaUM3kDStwZpoxLDplaq/O8jRXWjpCGTKsMZCbBTG+jCBFCgBZdjvVNWryyq4uztIMWWTJJ2zk/OfQQK6hDhZQKCxIrIC3eUWz6SrdgvE61ASZyxawqNskwUmwJTnFCbRuhsx0XwBU/LyK2smflHRZUD+pCy3+iFWAV0/k51WNAXG/0/NDuu1szLCcQa1OYqbf4XbrvN3HU1of4yDH9N+w3d/kZdqDuFQeQdqX+6382mz7nvr7dIknHxPuTVrbvuQ4IZpu3D/unBXOOlZ5WG7/n18PzO7S38bdK4f/FH70b1fvlRG627DdDcwDUeD1kPvuRdvoQXfguvV0zV9nj7/bK/ipDNjm+3Q6W5njA0eytOg2byOy6PK/U97MHZc/84MKj+eknWawUMv+OW7/BUmdbsRGv7wsf5tNExv+jdPzsNmsdoMy42hOay+x3QYw7GwoAQ/G8+A8OIo26PTUtqiXph/TS9SEgXaJFf1FpKjGAfK1Zq8JanFywQBRYEnirk7tyuOgW4sp2xVyi3UQHfIRkYb1ZFbqTiW4xYctENxArGZ0EkkfUmW3fXP1wDJ3GNAA0i1ZZKREJj6hcUW5ljp0L54HAllMEgkixMHSDhzTDekk7FTgWVlnr68zoiqPCb8iT6l9QmH9Ji6rSPq7gOJFhFIfpcNzkSHMy5y8YqXGY+N0hKXKGRiAqSShD3TLjs6i+aLGCRSfZ4EWQylRbjIM6Oz3b+pYcJyaf9ukD+8T+M6/VakQOgEkVRgMpYGiDLCmRlkFIF8HvDNYcCF+XoWRPJ9iXzyNCI7JMef3ttE9se+R0REv5v+b6PAvVe/+PrHm/oXoPTTfOwdBcvowG0xTMV8EOxRK6r5ikuvpWy5zPL6uZIZU2FeFwRp6D6QTNDbZpC8ANX3JvSLpsse9YnnvfwYX8ZD6nPMYS66TcmPF6wWPjC5WnTEM1lfurccuRR547Dm52TNWGwgEvGXSwrxiNQT4mfxt0rS4L1cZ2wd+BFxin2CR3QqT3KObD5pCpIIs5EgviQ9NH7OwDnnx8J9kvdYuOimccbh8y+KZLSqiglJMso7LTUXHLJsjpNvFuC9K30wkzP522hes09H869e1xd8N8fqXjf6b2UtytuFgCo3gBxLVV2LTVM4p9MDVn8DeELsyDTMOrLK7TvLsA+JHTnlm30CjyKpfRB/lBzk9PQ91P4F</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>F95106358398D0B0E0401F0A07995357</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:F95106358398D0B0E0401F0A07995357</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20140513_084021</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>F95106358399D0B0E0401F0A07995357</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e34c814a-8ac5-424b-a19a-7d3453e3b9c7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1de1e00d-487c-492d-b21b-5e895e1ee18e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00012_ACCESS_UVTC_UserName_RequestorUserSAU_Active_RequesteeOtherSAU_ResetPassword_Role_DECE_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Second Adult SAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Second Adult SAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_RP"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH6vgBBKgUUGiEFp26W4LdNnty8o4E3BJnDR2IO2vv3ZoKFDay70SEvJkPHPmw2fmguMorLodziEVNGbaoNfS/xLcgLppOkbQrNcMmxBszAInMM4bNdvG9fMaOFjXBpxnMGBcYCZaetW0bENeseyJabq26VbrFctxHnTtF6RcmpYqFVPX8ihk3C3ctvQsZW6MOeUuwxFwVxB33LkZulLTxSUmvX2xQVk4TNsLIRIXIVLxgUAYkgqJI3SB9nQufO6O6ZxhkaXw6tPnLf317nq9rqxrlTido6ppmsg8R1LH53T+VW9/KS+DP2BBvDl3MYsZJTikL1iBugGxiH2tE87jlIpF9IFpC1mmMm1ATgxi2eyrjt4cFOhOtLQHMuXY4AtslcZGEEAKjIB2Pxq09K+nVXBzd5JixoM4jfjB+b9BAraCME7AN3gZWYnudItH0tW+AOIOGAkzTlfwQ7VJgglw7TaFgOZDymXz+Vwryq/lXP5o2WVA/ktZLtAuVgkdHclOj86Bi/9Ts916baz8wmEG7WcyfJycPdSu+/ny2/2f2fAhqn9DNwMyXbYKCLvKG1Dbcr+eD5t121uvl7zvTzdT7t1G3rKWr848u9HN76NVcubUa2ad9jvT9dR3hsPJdG1+v/N+naVBcndXHROP8/ur/sShK0aW0L2adatfZtc+W55F06u7h3Uy5XTkfR9er37PnIz/eWmYA9LsvKz/dLpm44ftwO03hHpLfHX/M4bp9cvT9O7yMklsDzXubK/2Jb4luVm/XIrHmwCjUXpFeestpt0Y9oUlJYyz2SMQUR5Vewx6Wl/WC4vP6UVJqG8EhaqbKI7iApjQ2+qWohY3kwREfVcWc3PunzuWWa/2Onavb196Dc+0Tatvdkzn/Lza9OolB21QHEDsxiygypdi2U3/fA6QRC4H5kNqrOKMLIDrn1jsYYG1ARvJxxEzDpNYsvhybdeajWeaOI9JHgbLKHt8XPrNQNd+xOIn+5l2AgHpPnPX9ph7BIQmFBS9q/7mssG5kKl4wqtMhFZlhSsMMjkAUsXBbtVuOojTKAlBAUVR7GchVJJFUiQG8c1/1cCEF9KRNyne3YdhHX4rMyB1fKoUuIrlEmQV4cgIsspAPg64vhtwab6T+VQ9L5lOkVKyQbL/6a1LVHtsW0RG9Lc7/muVuLfqJ19/fxN9Agod5mPryF/RHbflLJXjQZJHu6zmE648VbLVKivq11DEmErzSPKjhcZAMsluz5N4CQxtTaCThssW9YHnrXwfXyYWbCywgEh2m1YcT9gsxsDVZjGQryQ/dW3ZcynzJiAXx2TdUC4gCvGnOwpxidKT4lv5t45T/61cR2zt+JFxynVCUDZXJzVGnj9oChJLs1TyXpzuGj9m4JjzfeE2yVssQnbTLBPw8RdNEVpLx4TEGRODnl4Idkm2wCmeE3DflN6ZKYj8dTLn/MPJ/PtmOJZ0F2F9q0v/XdmgRbsQ0NUCUGBp6blcNKVzNt8h9VeAB7xu9qpmvVlzqlbN7u/xeqPrbBO4F0n7nfi9ZCenh++h/Q8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950D2068352134FE0401F0A059927C5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950D2068352134FE0401F0A059927C5</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F951062DA4DF4BE7E0401F0A059928E6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F951062DA4DF4BE7E0401F0A059928E6</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_084024</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951062DA4E04BE7E0401F0A059928E6</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_084030</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_084030</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_084030</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH6vgBBKgUUGiEFp26W4LdNnty8o4E3BJnDR2IO2vv3ZoKFDay70SEvJkPHPmw2fmguMorLodziEVNGbaoNfS/xLcgLppOkbQrNcMmxBszAInMM4bNdvG9fMaOFjXBpxnMGBcYCZaetW0bENeseyJabq26VbrFctxHnTtF6RcmpYqFVPX8ihk3C3ctvQsZW6MOeUuwxFwVxB33LkZulLTxSUmvX2xQVk4TNsLIRIXIVLxgUAYkgqJI3SB9nQufO6O6ZxhkaXw6tPnLf317nq9rqxrlTido6ppmsg8R1LH53T+VW9/KS+DP2BBvDl3MYsZJTikL1iBugGxiH2tE87jlIpF9IFpC1mmMm1ATgxi2eyrjt4cFOhOtLQHMuXY4AtslcZGEEAKjIB2Pxq09K+nVXBzd5JixoM4jfjB+b9BAraCME7AN3gZWYnudItH0tW+AOIOGAkzTlfwQ7VJgglw7TaFgOZDymXz+Vwryq/lXP5o2WVA/ktZLtAuVgkdHclOj86Bi/9Ts916baz8wmEG7WcyfJycPdSu+/ny2/2f2fAhqn9DNwMyXbYKCLvKG1Dbcr+eD5t121uvl7zvTzdT7t1G3rKWr848u9HN76NVcubUa2ad9jvT9dR3hsPJdG1+v/N+naVBcndXHROP8/ur/sShK0aW0L2adatfZtc+W55F06u7h3Uy5XTkfR9er37PnIz/eWmYA9LsvKz/dLpm44ftwO03hHpLfHX/M4bp9cvT9O7yMklsDzXubK/2Jb4luVm/XIrHmwCjUXpFeestpt0Y9oUlJYyz2SMQUR5Vewx6Wl/WC4vP6UVJqG8EhaqbKI7iApjQ2+qWohY3kwREfVcWc3PunzuWWa/2Onavb196Dc+0Tatvdkzn/Lza9OolB21QHEDsxiygypdi2U3/fA6QRC4H5kNqrOKMLIDrn1jsYYG1ARvJxxEzDpNYsvhybdeajWeaOI9JHgbLKHt8XPrNQNd+xOIn+5l2AgHpPnPX9ph7BIQmFBS9q/7mssG5kKl4wqtMhFZlhSsMMjkAUsXBbtVuOojTKAlBAUVR7GchVJJFUiQG8c1/1cCEF9KRNyne3YdhHX4rMyB1fKoUuIrlEmQV4cgIsspAPg64vhtwab6T+VQ9L5lOkVKyQbL/6a1LVHtsW0RG9Lc7/muVuLfqJ19/fxN9Agod5mPryF/RHbflLJXjQZJHu6zmE648VbLVKivq11DEmErzSPKjhcZAMsluz5N4CQxtTaCThssW9YHnrXwfXyYWbCywgEh2m1YcT9gsxsDVZjGQryQ/dW3ZcynzJiAXx2TdUC4gCvGnOwpxidKT4lv5t45T/61cR2zt+JFxynVCUDZXJzVGnj9oChJLs1TyXpzuGj9m4JjzfeE2yVssQnbTLBPw8RdNEVpLx4TEGRODnl4Idkm2wCmeE3DflN6ZKYj8dTLn/MPJ/PtmOJZ0F2F9q0v/XdmgRbsQ0NUCUGBp6blcNKVzNt8h9VeAB7xu9qpmvVlzqlbN7u/xeqPrbBO4F0n7nfi9ZCenh++h/Q8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950D2068352134FE0401F0A059927C5</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZZb+o6EH7vr4jSxyo4K0sESCylcG53oD3tS5U6BnxI7DR2SNpff+1A2Aq9nCshIU/GM98s/mbqzAsD020xhmKOKVEG3Yb6ZtkONAw40cQ/1Gyj7GjvZeRrtbJVrtYsVEUTS1UGjCVoQBj3CG+opm7Ymu5ohj3SddfWXbNWssqVV1V5QjETpoVKSVeVLAwIc3O3DTWJiUs9hplLvBAxl0N32Lq5doWm6xWY1GZ9iTJ3GDdnnEcuALDkI4iCAJYgDUEd7OjUfeYO8ZR4PInRyqfPGurqbpqmpdQq0XgKTF3XgV4DQsdneHquNs+Ky8gfkAldnjseoQRDL8BfngR1g/iM+kormNIY81l4xLQBDF2a1lAGNWjY5FwFGwc5uhMt7YCMmaexmWcUxh7RBMWIQKSMHwcN9fy0Ci7vjmKPsAmNQ7Z3/jtIiCxQQCPhgxWRFehOt3ggXc06gu6AwCBheIFuZZtEHkRMuY/RBGfXmInm85mSl1/JmPjhossQ/Juy1ME2VgEdHMhOF08R4/+nZtv1Wlp58oIENbsXCbnvXLWvOi/pCFDIAkAe+vOvq6dxI4ewrbwEtS736rzfrOveWl3yr42HcvbRfbi1Lp67ZvD1RLNK7yYkATajKUyxPX+51LkB/OeEpK27Ybv6zOe//H4WXlQe6HhMcWsST1/J2Bmd/WrzPnvN+uEN8HHWv/L/fPUYtPq31rNjJy8L2mrfv15W+88PE3IbgAtnnoyua0Pu+L8XcxjNytHjh35vX19Mv4Kzbjp24u4/s6u77mUNJ7Rt2Y1NTNsx7AoLShgm738Q5MVRtsegq/REvTz+M71ICfa1Sa7qRpKjGEeEq015S1KLmwgCwr4rirk892qObpq9XsUybFsv9y51Wzd6ekuv1Gq61bIKDlqi2IPYoWSCpS/Jssv++RkgDF2GiI9ibUETOENM/cFi1+OeMiCP4nFQwtCIChY3WMpqUZbq79RZGLNqGiaGxavpwlaVW8rvyF3cmnAU73K3tcPdjwjiCCNJ8LLDmWhxxkUyPrxFwgOjtPBKBCViBMSShV3TrjqA4TAKkIQKQuonASpFsyhPDWDLf1PzIMulj5ej/OUdDWz/W5EDoeNjqcBkLG0k6ogODCGjCOR4wOXtgAvzrcTH8oGJhPIYwyWS3U+bPpENsm4SEdFbZ/hmFLjX6idf/34T/AAK7Odj7chf4C23xTQVA0LQR7Oo5odX+igli0WS168iqTEW5oFgSAMMEUwEv32O6BwRsDYBThova9R7ntfyXXwJn5Eh9zgKRbcp+fGE3WKImNwtBuKdZKcuLjsuRd44yvghWScQK4hE/OOWAl0o9YT4XvylNPY35Tpga8uPiFMsFByTqTzJQfJ5pCkgFWaxYD4abxs/ZOCQ813hOslrLFx003vC0fEviqS0hupBSBPCB101F2zTbI6Tf0bI3Sh9M5NT+Wo2Z+zobP59cz0UhBd66loX/7eyhvN2gUiVK0COpaFmYtUUzsl0i9ZXAPeZvWvq5arlmIZlb5jdqdXMSsdZJ3AnkuY38XfJVk7330PzXw==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F95022FF7314406FE0401F0A079903A3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F95022FF7314406FE0401F0A079903A3</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_084028</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F95022FF7315406FE0401F0A079903A3</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZdc9o4FH3vr/C4jx3jT0jwBGYMhF22CWmBpkleOkK+YDW2RCwJHH79SiYmQEiW7gwzjK6vzj33Q0e64ChLvTDiHHJBGDUGvZb5a+r6ge8ETctpzgIrmLrYQk7Ds3xw/JnjIYA6Mo0B5xIGlAtERcv0HDewnLrl+hP3LPT80KvXGmfBg2ncQs4VtHKpOaZRZCnlYRm2ZcqchgxxwkOKMuChwOE4ur4KlWeIKk5m+2LDsgyYtxMhFqFt41oMGNIU1zDL7At7z+ci5uGYzCkSMoeXmDFvmS97V6tVbeXXWD63PcdxbKdpK5+Yk/lns/2p2gzxgM7YZt1FlFGCUUrWSJO6BpGw2IjSOcuJSLJ3oF3bdTS0BQW2sBvQz6b9GqBkdyLSHsmcI4snyK3ARjCDHCgG48do0DI/n9bBzd5JjiifsTzjB+s/owR0CSlbQGzxKrOK3emIR8rVvgAcDihOJSdLGOoxWSAM3PiWw4wUV4Sr4Yu5UbbfKLj6kWrKAP9JWy7sXa6Kun2kOj0yBy7+T892+7VBuUWphLacdn/20vj++R8/CRpD+wkFDkL9b87TfauksOu8IbVt98v6cFi3s/WyqXs2z26Xo9Hkr85tLIe/v988sAcUfV0/ZlnHrqPOILn60pTn0Py+/rm4u7Thmq4adxL9CP5+vPK+iNHvPI/WwbAzan666dAf06+J+MLu7obPUfH9msSwfhCZ6Hcfh42+u8CNjoPuiRiO82gyu0zk0LbXD0Vx/3V1M7l5nvtr+fdTkQ6R84kMHrskSUb+FW6wlE6Jz1qvOe3msG+sJGEsp78Bi2qpx2PQM/qqX0h8LC/aQmJrVrqGC61RXAAVZlvv0tISSiVAJA5VMzfrftPvuv65G537Z53+ZffSCRy370ROvdn0G2eNSoM2LA4odhmdER1Lq+xmfj4miLOQA40ht5ZM4gS4+QFiDwlkDOhIHQ5GOUyYUvEE1yUr5gvw1w3XR0nTk81UJplpDJm4oTd5NBOQ7ym35+wp9wgwWRDQ8q7nm6sB50KV4gktpUjd2hLVKEh1AeRag0MvOK/bnGSLFDRRO2OxTKG2SBZlYWy++fcshHlpHV1OynP3blqH36oKKJ+YaAeuc+mA6iIcuYLcKpH3E/Z3E67gIxkTfbxUOUVO8IbJ/qfXKdHjsR0RldGv7viXW/Heup+8/e1O+wNS9mE9toHiJdkJW92l6npQ4tGuuvmEak81uVzKsn9nWhhzBW8rfXTtMWCp1O15wh6B2lsI+6TLZcv6IPLWvs9PioSOBRKQqWkzyuUJL4sxcP2yGKhTUpz6bNkLqeomoBDHbN1UPUA04w/fKDjE2k+Zv6m/Fcvj13YdwdqJo/JUzwlB6Fyv9DXy/M5QYKZgidI9lu+CHwM4FnzfuC3ylotQ0zSVAt7/YmhBa5kIYyapGPTM0rArsiVP8byA8NXpDUwp5C83c8HfvZnvrq/GSu4yZG59yX87W6QcFwymfgCUXFpmoR6aKjid74j6C8F9XQ/Oo4bGi/pevdfb1XWvc3m+LeBeJu035reWnZoenof2vw==</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>F93C1381A837BFECE0401F0A05993676</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:F93C1381A837BFECE0401F0A05993676</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20140513_012324</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>F93C1381A838BFECE0401F0A05993676</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e34c814a-8ac5-424b-a19a-7d3453e3b9c7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1de1e00d-487c-492d-b21b-5e895e1ee18e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00013_ACCESS_UVTC_UserName_RequestorUserFAU_Active_RequesteeSelf_UnlockMe_Role_DECE_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSxyrkQkJKVJBSaLvZtpQW6OW8VMYx4D2JHWyHy/76tQOhQGkPeyQk5Ml45puZz599wUGaOEHIOWICU6JF7Yb+7tjQdkfu0EAeODfcUc0x6q7vG35ccwEAQ8v2Y12LOM9RRLgARDR0x7Jdw/IM2+1bVuDagV2rVG3rH117RozL0NKlYunaIk0ID4q0DT1nJKCAYx4QkCIeCBj0wvu7QHoGoMSkNy9WKIuErDkRIgtME1ZiBFGSwAqkqXlh7vhcxDzo4TEBImdonTPmDX29dz6fV+bVCmVj07Esy7TqpvSJOR6f6s2TcjOKIzKiq3ULEEowBAn+DRSoeyQmNNbCZEwZFpP0i9C2aVsqtIEW0JBNJae6+ZGgQHdkpB2QjAODT4BdBntCI8QQgUgbPEUN/fS4Ca729hkgfERZyvfWfwcJkRlKaIZig5eVleiOj3igXc0LBIOIwCTneIY6iiYZgIhrXYZGeHGHuSRfzLVi/NqCyx8uWYbg34zlwtzGKqGbB7rTxmPExf+Z2fa8VlGeQZKjZjL4IXP4Z6+0w8Jb03pNQ6/L/SsnhY0CwrbzCtRm3Ov1Plk33FpvEg9e/yx+AZI2N+CqM+y2zsMs/9k1z9yJ7wzcyaP9Rqs/bvLx9PYtulqy64g9m7gf+r9Q250/PN2ApLWIzvgQtE+S53QYLW8f+CBejLNQCOeG4fjOm1ntQceznse/3Tfv/uV+hGdYzMMUegPY6bduKX7J6KzzOH22l5fe61WHkZeT6tljK6Xk56x/M/gRdYf9a974qGm7hl1jKQm9fPgLQVEuFT2itnYt5wXE9/KiLDg2RoVrkCmN4gIRoTfVLiUtQS4FCMeBHOZqfV33bMv3ndD2qtfVavvKci372gotr16vWuFlqUErFHsQW5SMsMqlVHbFn+8BwjTgiMSIGTOawwni+jcR20AALSJP8nBQwlGfShW3WTzM0io/XyRLv1Zj50unnsZTv6ZrHSoeyAMLRwKxXemu7kj3E4I4w0jpuyI4lwznQvZiCma5SOzKDFQIyuUNwJQIB4577pkcp1mCFFIzpXGeoEo2yYrOmHz17xgA8sL6dNUvDt6Xde1/K1sgfWKsHLiq5RLJMaIDd5BVFvJ1wbXtgsvwYR5jdb5kPwXDcIVk99MHTRQ/NhyRFb23eu92iXvjfvT2zzvNb0CZ+/3YJIpneCtteZnK+0GqR7Oc5hRUppV8NsuL+flKGZkMb0qBtM0egrmUt2Wf/ouIuQlhHnW7bFDvZd7Yd/HlYkJ6AgiUSrZpxfKIp0UPcfW0iOQxWRz7btlJKfsm0EIcsrUS+QJRiL99pMAAKj9p7sq/OWUfhR+KtZVH1infEwKTsVqpe2T5BSkglWGxFD7KtoMfCnAo+a5x0+QNFiHZNMwF+vqLphStoQMIaU5E1NYLw7bKFjjFMkPBh9OnMIWSr6/mBf/yan69v+tJvUuBvvHF/+1s4IIuEOnqBVBgaegL+dKUycl4S9XXAPeE3XKqXr163m7Zl66zLexW3fc2DdyppPnJ/Nmy1dP989D8Aw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950235938DC1B42E0401F0A05990975</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950235938DC1B42E0401F0A05990975</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F9510772A153F33DE0401F0A059930AB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F9510772A153F33DE0401F0A059930AB</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_084115</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F9510772A154F33DE0401F0A059930AB</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130925_075247</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130925_075247</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20130925_075247</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E736ED6B4703B84FE0401F0A05996EB3</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4jx0jG0yMPYEZPhMSAgnQlstLR8hro9TIYMlA+uuvZGIChOTS++TRerV7dvfoSNccL6KiV+ccEkFjpnVbVf2XBeWZO7PKRmVmY8Ou2I5RcR0wzFLFrLhBEDi4pGtdzlPoMi4wE1W9aFolw3SNYnls2Z7leuVKoWLbU137AQmXoaVLwdS17SJi3MvSVvU0YV6MOeUewwvgniDeqP7Q86Snh3NMeu16hzJLmNTmQiw9hEjBBwJRRAokXqBrdORz7XNvREOGRZrAa06fV/XXvZvNprApFeIkREXTNJHpIunjcxp+1Wtf8s3gd1kQ79ZNzGJGCY7oH6xAPYCYx75Wj8I4oWK++CC0hSxThTZgSwxi2eyrjt4SZOgujHQEMuHY4HNs5cGGEEACjID2fdit6l8vm+Bu7zjBjAdxsuAn67+DBGwNUbwE3+B5ZTm6yyOeaVftGojXZSRKOV1DX9FkiQlw7TGBgG57lEvy+VzLxq9tec4wIH8zkmt0iFPCRmc606IhcPF/5nU4q12UHzhKoTYejLm/eZ6IuePP+c1s9DB17tjNsPkcVzMIh847UPtRv65Pibrn1esmgQbuvdn7abbvVv/MyvVe3bltPt8sxsX5009n0LmfLR/uR7zR7W8Gyepu/r2xdqbBE2736/zHP+1V6QmJyvomHNsp+0Kjkh+uaN+y+2a/3Ww92zF8G3bCaP2Ix+PVHzSd9JaD6PZ36JhB7/kW7idPbhg635qjRtzpXVk/+aQ1XTlF9A1/uWWVoDxwV+yp93iHG6j9O6y+1XRYw7Exl4NROnsGIvKloka3pXXkvLD4XFqUhfpGkLl6S6VPXAATek3tUrLipVJ8qO/JYe7Wbad01W5dNWzHLDUqdqdt2qbVMetm2XWv2o1Srj87FCcQmzELqMqlFHbHn88BkoXHgfmQGOs4JXPg+icRW1hgrcuG8mDEjMM4lgreXiXpJCC3vc20yEtwY00nSaP9ggupjBpQyRhd68diwAZJPRCQHOu3c6TfQyB0SUGJvGI6l1TnQjZlhdepiKzCGhcYpPIaSJQSe0W7UkacLpYRKMhoEftpBIXlfJm1CPHdt2hgwjPrsD3+1R01s1P4YZGn//J+SB+fKgeu6mmAnCmcuYzsvJgPiy6ah0Xn4eupT9Vhk80VCSU7JMe/3jijyLInjKqqOfpl5bj37hdvf78TfQIKnfZjn8hf04O0+a0qLwopJbV8oitcWBXS9TrNZugomUxkeGQh00EjIKnUupdx/BsY2odAF10ze9Qnmff2Y3ypmLORwAIWknFatrzgjTECrt4YXcnu7aUPmKOUsm8CtuKcrRnJp4hC/OlrhXhE+Unzo/xs4sR/G9eZWAd5ZJ3yYSEoC9VKXSovH5CCxDIslSoYJ4fBzwU4l/zYuG/yHouQbJqlAj7+oyl5q+qYkDhlotvSM8Oh5GY4xcsSvDend2EyWX+9p7f8w3t68tAbSfFbYH3vS//b2aAZXQjIXZxmWKr6Vj45ZXIWHkj8K8BTle9IknQkT+yW6e5V3nFds+y4+wYeVVJ7Z35vOejp6Xmo/Qs=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E736F038F3804D09E0401F0A07990579</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbZcuI6EH3PV7g8j1NGXnAMrkAVa8YzQBbI+pISsgAFWzaW7JB8/UgmdoCQXOY+udRudZ/uPjrSGYNhYLotxnDCSUQVr9tQnyxkmPq07muOXa9qVdOua3A69TUf2fpMN3XTqGFV8RhLsUcZh5Q3VFM3LE2va6Y9MaquqbumVbGs2qOq3OKEidDCpaKryjoMKHPztA01TagbQUaYS2GImcuRO24NB67wdGGBSW2ebVDmCZPmgvPYBQBVfIxwEKAKikJwBnZ8znzmjsmcQp4m+D2nzxrq+96Xl5fKi1WJkjkwdV0Heh0IH5+R+Q+1eVJsxr5HZ9Fm3YE0ogTBgLxBCWqI+SLylVYwjxLCF+EXoQ1g6DK0htdIQ0aV/lDBR4Ic3ZGRdkAmDGpsAY0i2DWe4QRThJWba6+h/jhugpu9kwRSNouSkO2t/w0SphkOohj7GisqK9AdH/FAu5pnGLkeRUHKSIZHkiYxRJgplwmekfWAMEE+nyn5+JU1KxiG0b+M5Axs4xSwwYHOdMkcM/5/5rU9q02UWxikuDnsmlXQiZyrHhwY69n81/PgOcw4GJFhI4ew7bwBVY76fb1P1JJX75uW2WhC279voyuwCAw2snvT1c81n5p3q/OgQ89fydXp66N108erPz28bj+81cbgt29zK5u82XfIGy1Rvesw8/JleNK+YWliPfyM3tqTP4+ngKIaDdtJdczsmwvjFXTjyzh7fu5ZVB/eL3+tHumt/TAfPdrA4W0LsmUH1uLb4SBKreWJE8xSPAjH91cXPf+i35rF88ZHTds17BoLORin02eMeLGU1PC6Sl/MC/LvpUVaiK/Nclc3lvrEOKZcbcpdUlbcVIgP8V0xzM2651inve5pu+o4drtW7ff0qm709ZZu1+unvbZV6M8GxR7ETkRnROaSCrvhz/cAUegyTH2caFmUogVm6jcRu5BDxaPX4mBElOFJJBQ8u3v+M2BDr/PY+XV+28HLuW+1u5etSiqizohgjKqMIn5BL5LWjONkV7+dHf2+xojEBEuRl0xnguqMi6asYJbywKhksEJxKq6BRCqxa1ZrNmAkjAMsIYMw8tMAV+JFnLcIsM3X1CBiufW6N3nyxp38FH5Z5P6/oh/CxyfSgcl62ljMFB+4jIyimC+LlhV/FF2Eb6U+kYdNNJcnBG2Q7P764IwkS0kYWVVn/GQUuEv3o7d/3gm+AQX2+1Em8jOylba4VcVFIaSkWUx0BSurSpplaT5DR8pkIsIDA+gOGGOUCq17nURLTEEZAhx1zZSo9zKX9l18KV/QMYcch4JxSr484o0xxky+MTzB7vWxD5idlKJvHK/5IVsnEE8Rifjb1wpykfQT5kvxeYkS/2NcB2Jt5RF1iocFJ3QuV/JSef2CFCgSYYlQwSjZDn4owKHku8ayySUWLtg0TTn++o8i5a2hQoSilHKvq+aGbcnNcfLXGLsfTp/C5LL+fk+v2Zf39P1wMBbiF0K19CX/7ayRnC5IvFCFf46loa7Fk1Mkp/MtiX8HuK/yfd2q9a2aXu3q9VLlnXpdt5162cCdSpqfzJ8tWz3dPw/Nvw==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E736ED6B4775B84FE0401F0A05996EB3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E736ED6B4775B84FE0401F0A05996EB3</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130925_075247</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E736ED6B4776B84FE0401F0A05996EB3</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00014_ACCESS_UVTC_UserName_RequestorUserFAU_Active_RequesteeBAU_UnlockMe_Role_DECE_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj6vgJEAhUUHKcunSLaUQ2p72ZWUcA14Sm9pOoP31xw4NBUp72CMhIU/GM99c/M1cCJjErh8IgbkkjBq9dsP8PXXtultDtlWv45pVmUxcC3qVyCp75+e185o3qXnINHpCpLhHhYRUNkzXdiqWXbWcyti2/Yrju06p7JSfTOMec6FMK5WSbRrrJKbCz902zJRTn0FBhE9hgoUvkR8G/WtfafqwwGQ2LzYoc4e8OZdy6QOAShFGOI5RCbEEXIA9nYtI+CGZUShTjt98RqJhvt1drValVbnE+Ay4tm0D2wNKJxJkdmY2vxWXcdSjU7Y5tyBllCAYk1eoQfWxnLPICOIZ40TOk09MO8CxtWkLr5GFnAo9M8G7gxzdiZb2QHIBLTGHTmFshKeYY4qwcTfqNcyz0yq4uTvmkIop44k4OP8dJEwzHLMljixRRFagO93ikXQ1LzDyexTFqSAZvtFtsoQIC+OW4ylZXxOhmi8SRl5+Yy3UjxRdhtHflOUC7GJV0MGR7LTJDAv5f2q2W6+NlXsYp7g5tNllq088EN5F4/rV40Nnvhisu23GUSOHsKu8AbUt99v5sFm3vfV2ad3JhpfTJ1Cj5Rltp8Bd9J2ZIFVSfu5E998fr77DZPQyYPHD9DHojF4fWjC9D/Hi7pcTcT68HT0Mnx/D8n3S7g6/eQx4ksgg+BkOLp9ur5HzuOpfLfGqn/yqcyfg6Xz89PPhFbbC25vv8wX6k1Uq4CrL+M3ysme//MDXs8ryejAc1uJvokwjzCZX3eGE3rQH8d3PoPEe024M+8KCEsJ08gcjWRx1e/TaRlfVC8qv6UVLSGRNc1V/qTlKSEyl2dS3NLX4qSIgEvmqmJtz16varlv2ao6r/r3zjl2xna4d2FXPs716reCgDYoDiC1Gp0T70iy76Z+vAaLEF1hlh1sZS9EcC/MLi20oodGjI/U4GBV4zBSLLxbCwTKD8XrGnp3XpBzVM8arE9O4YXJABzyYSsz3mbu8x9wjjMiSYE3vur+FanAhVSqeYZbK2CllsERxqgYA1xzsu5V6FQiSLGOsgYKERWmMS8v5Mk8MEJt/RUVI5NJRZ5y/u0/DOvxWZEDpREQrCB3LD6yqiI+MIKcI5POAz3cDLswHaUT081LplJygDZL9T+9dottj2yIqot+t8LdT4N6qn3z9403wBShwmI+toygjO26LWarGgyKPZlHNZ1h6LqVZlub1q2li5Mo8UPzogBCjVLHby5gtMAVbE+Ck4bJFfeB5K9/Hl8o5DSWUOFHdZuTHEzaLEAu9WfTUK1mfurbsuVR5k3gtj8lasVpANOIvdxTkI62nxLfqb8V49F6uI7Z2/Kg41TohCZ3pkx4jL580BWLKLFG8x/iu8WMGjjnfF26TvMUiVTdNUok//2JoQmuYECGWUtlrm7lgl2RznPJlif13pQ9mciJ/m8xr8elk/qd/HSq6S6C51SX/rWyRvF0QNvUCkGNpmGu1aCrndLZD6m8AP/C64waVoFuuds5b+7zu/dgmcC+S5gfxR8lOTg/fQ/Nf</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950212A4AF35E6CE0401F0A0599099B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950212A4AF35E6CE0401F0A0599099B</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950223971202296E0401F0A05990987</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950223971202296E0401F0A05990987</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_084119</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950223971212296E0401F0A05990987</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_084123</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_084123</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_084123</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj6vgJEAhUUHKcunSLaUQ2p72ZWUcA14Sm9pOoP31xw4NBUp72CMhIU/GM99c/M1cCJjErh8IgbkkjBq9dsP8PXXtultDtlWv45pVmUxcC3qVyCp75+e185o3qXnINHpCpLhHhYRUNkzXdiqWXbWcyti2/Yrju06p7JSfTOMec6FMK5WSbRrrJKbCz902zJRTn0FBhE9hgoUvkR8G/WtfafqwwGQ2LzYoc4e8OZdy6QOAShFGOI5RCbEEXIA9nYtI+CGZUShTjt98RqJhvt1drValVbnE+Ay4tm0D2wNKJxJkdmY2vxWXcdSjU7Y5tyBllCAYk1eoQfWxnLPICOIZ40TOk09MO8CxtWkLr5GFnAo9M8G7gxzdiZb2QHIBLTGHTmFshKeYY4qwcTfqNcyz0yq4uTvmkIop44k4OP8dJEwzHLMljixRRFagO93ikXQ1LzDyexTFqSAZvtFtsoQIC+OW4ylZXxOhmi8SRl5+Yy3UjxRdhtHflOUC7GJV0MGR7LTJDAv5f2q2W6+NlXsYp7g5tNllq088EN5F4/rV40Nnvhisu23GUSOHsKu8AbUt99v5sFm3vfV2ad3JhpfTJ1Cj5Rltp8Bd9J2ZIFVSfu5E998fr77DZPQyYPHD9DHojF4fWjC9D/Hi7pcTcT68HT0Mnx/D8n3S7g6/eQx4ksgg+BkOLp9ur5HzuOpfLfGqn/yqcyfg6Xz89PPhFbbC25vv8wX6k1Uq4CrL+M3ysme//MDXs8ryejAc1uJvokwjzCZX3eGE3rQH8d3PoPEe024M+8KCEsJ08gcjWRx1e/TaRlfVC8qv6UVLSGRNc1V/qTlKSEyl2dS3NLX4qSIgEvmqmJtz16varlv2ao6r/r3zjl2xna4d2FXPs716reCgDYoDiC1Gp0T70iy76Z+vAaLEF1hlh1sZS9EcC/MLi20oodGjI/U4GBV4zBSLLxbCwTKD8XrGnp3XpBzVM8arE9O4YXJABzyYSsz3mbu8x9wjjMiSYE3vur+FanAhVSqeYZbK2CllsERxqgYA1xzsu5V6FQiSLGOsgYKERWmMS8v5Mk8MEJt/RUVI5NJRZ5y/u0/DOvxWZEDpREQrCB3LD6yqiI+MIKcI5POAz3cDLswHaUT081LplJygDZL9T+9dottj2yIqot+t8LdT4N6qn3z9403wBShwmI+toygjO26LWarGgyKPZlHNZ1h6LqVZlub1q2li5Mo8UPzogBCjVLHby5gtMAVbE+Ck4bJFfeB5K9/Hl8o5DSWUOFHdZuTHEzaLEAu9WfTUK1mfurbsuVR5k3gtj8lasVpANOIvdxTkI62nxLfqb8V49F6uI7Z2/Kg41TohCZ3pkx4jL580BWLKLFG8x/iu8WMGjjnfF26TvMUiVTdNUok//2JoQmuYECGWUtlrm7lgl2RznPJlif13pQ9mciJ/m8xr8elk/qd/HSq6S6C51SX/rWyRvF0QNvUCkGNpmGu1aCrndLZD6m8AP/C64waVoFuuds5b+7zu/dgmcC+S5gfxR8lOTg/fQ/Nf</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950212A4AF35E6CE0401F0A0599099B</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbc9o8EH3Pr/C4jx1jGwzEnsCMwyV1Si5c2qZ56Qh5ASW2BJbMJb++kokdICQf/WaYYbRe7Z7dPTrSBUdxVPZ8ziERhFEtaDf0P5Z1Pq7iSt3AqIIN59wBw61OQqOCXNcp1xAe44quBZynEFAuEBUNvWzZjmFVDdsZWZbn2F7ZKbl2+VHXfkLCZWjpUrJ0bR1HlHtZ2oaeJtRjiBPuURQD9wT2hv5Nz5OeHsox6c2LLcosYdKcCTH3TBOXQsAQRbiEWWxemHs+FyH3hmRKkUgTeM0Z8ob+une1WpVWlRJLpmbZsizTck3pE3Iy/aI3z/LNEAZ0wrbrFqKMEowi8oIUqBsQMxZqfjRlCRGz+IPQtmlbKrQBa2xg26FfdPMtQYbuxEh7IBOODD5Ddh5sABNIgGLQfgyChv7ltAlu944SRPmEJTE/WP8bJKBLiNgcQoPnleXoTo94pF3NC8BeQHGUcrKEW0WTOcLAtfsEJmTdI1ySL+RaNn5tzeWP5CwD/C9juTB3sUro5pHutMkUuPg/M9ud1zbKTxSl0Ayhxqx+n/PvruN/cy6fIB0OHq4tO3QaGYRd5y2oYtyv60OyFtx63dSq977WrAT67HEaxuspKYtfj73ogXa/Bi9unF4BXuHv83HcQ0ml349w3XyZ3S6CAFd75+Pnatxv/753L512Z0DOutOr4fXXlitGP1j/KkLr2xqk7cnjz1FrUXf9+l3yCPfPog4oWv7ePF0v4und5H4FzrXbvuf1ym9383LZTm7WwbN5NuqIm6vH6rdO7Rfa3Pom988bbzXt1rBvzCVhmI6fAIt8qegRtLWunBcSn8uLspDQmGSu3lxpFBdAhd5Uu5S0eKkUIBJ6cpjbddetWmW77Lerbqfstrsdy7HsruVbVde1XN/ONWiL4gBii9EJUbmUym758zlAHHscaAiJsWQpngHXP4nYRgJpAR3Iw8EohxGTKv4cLkgZpqunxQrT5zEbzzbx+Ok80rVbJu7oXeJPBCT7yl3ZU+4BYDInoORd8ZtLgnMhW7FAy1REdmmJShRSeQEkSoPlvvOqyUk8j0ABNWMWphGU5rN51hiTb//LBsI8sw46o+zcfVjW4be8A9InJMqBq1ouQU4RjlxBdl7IxwXXdgvOw/tpSNTxku0UCcFbJPuf3lii6FFQRFb0pzX8U1ChcD95+/ud5iegzMN+FInCJdlJm9+l8nqQ4tHMp7lApUUpXS7TbH51JYyJDG9KfbTNIeBUqttmxJ6BmkUI86TLpUB9kLmw7+NLxYwOBRIQS7Zp2fKEl8UQuHpZBPKUrE99tuyllH0TsBbHbK1IPkAU4k/fKNjDyk+a7+XfiiXh27iOxNrJI+uUzwlB6FSt1DWy+YAUmMmwROoeS3aDHwtwLPm+sWhygUVINo1TAR9/0ZSgNXSEMUupCNp6ZtgV2Qyn2MzBe3N6FyYT8tebec0/vJkfbnpDKXcx0gtf8t/OBsnogkFXD4AMS0Nfy4emTE6nO6L+CvCYrjt+t1Lt1Fr7uu5eFg3cq6T5zvzestPTw/PQ/As=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950212AD59E29DFE0401F0A059909A1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950212AD59E29DFE0401F0A059909A1</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_084123</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950212AD59F29DFE0401F0A059909A1</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00015_ACCESS_UVTC_UserName_RequestorUserFAU_Active_RequesteeSAU_UnlockMe_Role_DECE_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+o6EP7ur+jUj05pClRsR5ipIlyO+Aa+3fPFKekC0TYpTVrAX3+SYisgejl3dIbJdrP77Eue3VPuR2HV9TiHRBBGtV67qb84AXKsRh0Zo+rYMupBMDKc0cnIOEZ45AC2YTw+1rUe5yn0KBc+FU29iqy6gWzDqt8j5NYtt3pSqaHGb117hIRL01KlgnRtEYWUu7nbpp4m1GU+J9ylfgTcFdgdeld9V2q6foFJb52uUOYOk9ZUiNg1TVwJAEMY4gpmkXlqbuicBtwdkgn1RZrAh8+AN/WPu/P5vDKvVVgyMasIIRM5ptQJOJkc6q2D4jIEPTpmq/O5Txkl2A/Ju69AXYGYskDzwglLiJhG35i2TAsp0wYssIGtOj3UzU8HObo9LW2ATLhv8KlvFcYGMIYEKAbtYdBr6of7VXB19z7xKR+zJOJb57+DBDSDkMUQGLyIrEC3v8Ud6WqdAnZ7FIcpJxlcqzaJfQxcu01gTBZ9wmXzBVzLy68tuPwnRZcB/puynJrrWCV0c0d22mQCXPyfmq3Xa2Xl0Q9TaHl18tRmg7dBctRI7KntkSo8XlvW78tJM4ewrrwCVZb747zdrGVvfVwa/gKWHp2cx+/O0pz3a7PlO3oOu10TR84/OO5yiM4vpyxl0WX29m7PXm/EQ1c4czbto+MxuehaWedidEI7Vjw7iG47nVHQt96Dt/R5uXx6sGlWje+i/lv45F3xJwRng9F1GnmPo6c7L6wNzvDi7PbhstHpPrNs0fGDofMgK5eg2uvBBB67z+kvYkXDo6s7moh/75qfMa3HsCksKGGYjl4Bi+Ko2qPX1jqyXr74mV6UhATGOFd1Y8VRXAAVekvdUtTippKASODKYq7OHce2UKPhObW256EL+VdHVgd5qOE4tm2jgoNWKLYgnjM6JsqXYtlV//wMEEcuBxpAYmQsxVPg+g8W277wtR4dyMfBKId7JlncqjvZ5O1VchadL/CswdPAwtWxPdO1ayZu6E3ijQUkm9Rd26DuAWASE1D8rhqcyw7nQuZi5mepCK1K5lcopHICJIqE3Wr9xDY5ieIQFFIzYkEaQiWexnlmTL76rRo+5rl0cHGfP7xv49r+VqRA6gREKXAVyxnIMsKOGWQVgXwf8PF6wIV5Lw2Iel8ynyIheIVk89Nnm6j+KHtERvRyPnyxCtyl+t7Xv940fwBlbuejdBRkZM1tMUzlfJDs0SqqOfMrs0qaZWlev4ZixkSaNyVBWuYQcCrpbXnP3oCapQlzr+lSot7yXMo38aViSofCFxDJbtPy4x6rxRC4Wi168pks9t1bNlzKvAlYiF2y81BuIArxj0sKdrHSk+Jb+TNnSfBZrh221vzIOOU+IQidqJOaI8tvmgIzaZZI4mPJuvFdBnY53xSWSS6xCNlNo1TA9180xWhN3ceYpVT02nouWGfZHKdYxuB+Kn0xkzP5x2he8G9H8/NVfyj5LvL1Upf8t7JB8nbBoKsNIMfS1Bdy05TO6WSN1T8AbhE7aldRrdbx6taJY5XEbjtOtXHWKRO4EUnri/irZC2n2++h9Qc=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950D2033FA41891E0401F0A059927BF</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950D2033FA41891E0401F0A059927BF</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F951077A93DAA0E0E0401F0A07995550</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F951077A93DAA0E0E0401F0A07995550</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_084126</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951077A93DBA0E0E0401F0A07995550</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_084130</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_084130</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_084130</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+o6EP7ur+jUj05pClRsR5ipIlyO+Aa+3fPFKekC0TYpTVrAX3+SYisgejl3dIbJdrP77Eue3VPuR2HV9TiHRBBGtV67qb84AXKsRh0Zo+rYMupBMDKc0cnIOEZ45AC2YTw+1rUe5yn0KBc+FU29iqy6gWzDqt8j5NYtt3pSqaHGb117hIRL01KlgnRtEYWUu7nbpp4m1GU+J9ylfgTcFdgdeld9V2q6foFJb52uUOYOk9ZUiNg1TVwJAEMY4gpmkXlqbuicBtwdkgn1RZrAh8+AN/WPu/P5vDKvVVgyMasIIRM5ptQJOJkc6q2D4jIEPTpmq/O5Txkl2A/Ju69AXYGYskDzwglLiJhG35i2TAsp0wYssIGtOj3UzU8HObo9LW2ATLhv8KlvFcYGMIYEKAbtYdBr6of7VXB19z7xKR+zJOJb57+DBDSDkMUQGLyIrEC3v8Ud6WqdAnZ7FIcpJxlcqzaJfQxcu01gTBZ9wmXzBVzLy68tuPwnRZcB/puynJrrWCV0c0d22mQCXPyfmq3Xa2Xl0Q9TaHl18tRmg7dBctRI7KntkSo8XlvW78tJM4ewrrwCVZb747zdrGVvfVwa/gKWHp2cx+/O0pz3a7PlO3oOu10TR84/OO5yiM4vpyxl0WX29m7PXm/EQ1c4czbto+MxuehaWedidEI7Vjw7iG47nVHQt96Dt/R5uXx6sGlWje+i/lv45F3xJwRng9F1GnmPo6c7L6wNzvDi7PbhstHpPrNs0fGDofMgK5eg2uvBBB67z+kvYkXDo6s7moh/75qfMa3HsCksKGGYjl4Bi+Ko2qPX1jqyXr74mV6UhATGOFd1Y8VRXAAVekvdUtTippKASODKYq7OHce2UKPhObW256EL+VdHVgd5qOE4tm2jgoNWKLYgnjM6JsqXYtlV//wMEEcuBxpAYmQsxVPg+g8W277wtR4dyMfBKId7JlncqjvZ5O1VchadL/CswdPAwtWxPdO1ayZu6E3ijQUkm9Rd26DuAWASE1D8rhqcyw7nQuZi5mepCK1K5lcopHICJIqE3Wr9xDY5ieIQFFIzYkEaQiWexnlmTL76rRo+5rl0cHGfP7xv49r+VqRA6gREKXAVyxnIMsKOGWQVgXwf8PF6wIV5Lw2Iel8ynyIheIVk89Nnm6j+KHtERvRyPnyxCtyl+t7Xv940fwBlbuejdBRkZM1tMUzlfJDs0SqqOfMrs0qaZWlev4ZixkSaNyVBWuYQcCrpbXnP3oCapQlzr+lSot7yXMo38aViSofCFxDJbtPy4x6rxRC4Wi168pks9t1bNlzKvAlYiF2y81BuIArxj0sKdrHSk+Jb+TNnSfBZrh221vzIOOU+IQidqJOaI8tvmgIzaZZI4mPJuvFdBnY53xSWSS6xCNlNo1TA9180xWhN3ceYpVT02nouWGfZHKdYxuB+Kn0xkzP5x2he8G9H8/NVfyj5LvL1Upf8t7JB8nbBoKsNIMfS1Bdy05TO6WSN1T8AbhE7aldRrdbx6taJY5XEbjtOtXHWKRO4EUnri/irZC2n2++h9Qc=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950D2033FA41891E0401F0A059927BF</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I8EH3vr4jSxyrk2gJRQWKhUHbpZQv0si8r4wxgNnGC7XDpr187NClQ2o/9JCTkyXjmzMzxsS85ikLHb3AOTJCYat1WTf9dRcH4olKpGueVsmt4yLYN5NiugbFnw9hzAte1dK3LeQpdygWioqY7lu0Z1rlhewPL8j3bd+3SRdn+pWuPwLgMLV1KctcqCin3s7Q1PWXUjxEn3KcoAu4L7PcbNz1fevoox6TXLzcos4SsPhUi8U0TlwLAEIa4hOPIvDR3fC4D7vfJhCKRMnjLGfCa/rZ3uVyWlm4pZhPTsSzLtKqm9Ak4mZzq9ZN8MwRdOo436yaiMSUYheQVKVA3IKZxoDXCScyImEafhLZN21KhDVhhA9sePdXN9wQZuiMj7YBkHBl8iuw82AOMgQHFoA0fujX99LgJbvYOGKJ8HLOI763/DRLQBYRxAoHB88pydMdHPNCu+iVgv0txmHKygFtFkwRh4No9gzFZ9QiX5Au4lo1fW3H5IznLAP/LWC7NbawSunmgOy0yAS7+z8y257WJ8ojCFOoXa+ScvbQpnV6Vo/ZNpY8WXm80FNe2V8sgbDtvQBXjflvvk7Xg1tum+2c2/v7SWbw2W0+3cY//GF53WuVHPGt55casw8v3VdFzmr31vD2df7tAZEhuvEa198rPwsfGY99jz2diEpmvUO2dJObij0OS9WA17V/9DK+vh6vly9DxkpHbbCZ0PRuvzHDkdsL46bYtkvuOGAQsGLBw8NQNrq8DBN8b9uxHZ06aVyd/0N2vrntm017wq/M4tH6OX2rvNW3XsGvMJaGfjmaARb5U9Oi2tLacFxJfy4uykMAYZ65+ojSKC6BCr6tdSlr8VAoQCXw5zM26XT23HMdue5ZrtR3Lu7I8y25bDatcrVpOy841aINiD2IzpmOicimV3fDna4A48jnQAJixiFM8Ba5/EbGFBNK69EEejphyGMRSxUfzGa1EZeQ6UeiO2Dxls2S1DF517TYWd/SONcYC2K5yuzvK/QCYJASUvCt+c0lwLmQr5miRitAuLVCJQiovAKY02He8yrnJSZSEoICaURykIZSSaZI1xuSbf8dAmGfWh6tBdu4+LWv/W94B6RMQ5cBVLd9AThEOXEFOXsjnBV9sF5yHb6QBUcdLtlMwgjdIdj+9s0TRo6CIrOh3s/+7oELhfvT2jzvNL0CZ+/0oEgULspU2v0vl9SDFo55Pc45K81K6WKTZ/MpKGJkMb0p9tM0+4FSq23oQ/wFqFiHMoy6XAvVe5sK+iy8VU9oXSEAk2aZlyyNeFn3g6mXRladkdeyzZSel7JuAlThka4byAaIQf/lGwT5WftJ8L/+WMQvex3Ug1lYeWad8TghCJ2qlrpH1J6TAsQxLpO7FbDv4oQCHku8aiyYXWIRk0ygV8PkXTQlaTUcYxykV3ZaeGbZFNsMp1gn4704fwmRC/nYzr/inN/PzTa8v5S5CeuFL/tvZIBldMOjqAZBhqekr+dCUyelkS9TfAO7resuxXLfd8OxK1S50/bxadcrf2kUDdyqpfzB/tGz1dP881P8C</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950221F4030F204E0401F0A079902D1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950221F4030F204E0401F0A079902D1</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_084130</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950221F4031F204E0401F0A079902D1</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00016_ACCESS_UVTC_UserName_RequestorUserFAU_Active_RequesteeOtherFAU_UnlockMe_Role_DECE_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult FAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult FAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdc6JKEH3fX0GxzziAEIWKVrEas+yajTcaN8lLajK0OlkYCDOgya+/MxiMGpPr3iqrrGl6uk9/zOk+5TiJbT/gHHJBU6aF/Y5+3yatGcEeGLbVNA2HWK7hzSLTcD3T9donuBW1HnQt5LyAkHGBmejotmk5hukaljMxTd+x/Kbb8JrNO12bQs6laanSMHVtlcSM+5Xbjl7kzE8xp9xnOAHuC+KPg4uhLzV9XGPSu6drlJXDvLsQIvMRIo0ICMQxaZA0QadoR+c04v6YzhkWRQ6vPiPe0V/vLpfLxrLZSPM5sk3TRKaHpE7E6fyr3v1SX4YoZLN0fe5hljJKcExfsAJ1AWKRRloQz9OcikXygWkLWaYybcCKGMRy2FcdvTmo0B1paQdkzrHBF9iqjV3BDHJgBLTrq7Cjfz2uguu7kxwzPkvzhO+d/w4SsBLiNIPI4HVkNbrjLR5IV/cUiB8yEheclvBLtUmGCXBtlMOMroaUy+aLuFaVX1tx+aN1lwH5m7Kcom2sEjo6kJ0+nQMX/6dm2/VaW5niuICuCM7j1ugBZSQU+WJ5WYyHN78n33lredGpIGwrr0Ftyv163m/WTW+9XpqE0/wxD9q3s7s/Tn856a0Gk8HEDheBVcaP11n7DKPbO/sBDZ/OrUv72i4nqetRejdvz/7czccv+OL7AIkz7rb/+XL1G6O587M5DKajS3xrp2N2UTwXN0vbbDrPyffzs+Kp9ML5YHGH3Olz4Y5up2Z4NkQPw162SkvIpj0XriG+idkX9tgezH/8GLljj71MR6GThJ23mLZj2BXWlDAuHh6BiPqo2iPsawNZLyw+pxcloZExq1T9THEUF8CE3lW3FLX4hSQgGvmymOvzwHMt07NbgeM4Le/EPTMd0xqYgXxSXtNrN2sOWqPYg9hL2YwqX4pl1/3zOUCS+BxYBLlRpgVZANc/sdjHAmshu5KPI2UcJqlkccxK6pVemcSL8iUj5czCOPeyTNd+peKSXebBTEC+y9zNHea+AkIzCoreVX9z2eBcyFQ84bIQsdUocYNBIQdArjjYt522izhNshgUUJSkURFDI1tkVWIQX//bBia8kl6dTap392FY+9/qDEidiCoFrmL5BrKKcGAE2XUgHwd8sh1wbT4oIqqel0ynyClZI9n99NYlqj02LSIjuu+N760a90b96Ovvb6JPQKH9fGwcRSXdclvPUjkeJHl062o+4cZToyjLoqpfSxFjLs0jyY8WGgMpJLs9T9I/wNDGBDpquGxQ73neyHfxFWLBxgILSGS3adXxiM1iDFxtFqF8Jatj15YdlzJvAlbikKwXywVEIf50RyE+UXpSPJJ/yzSP3sp1wNaWHxmnXCcEZXN1UmPk+YOmIKk0SyXvpfm28UMGDjnfFW6SvMEiZDc9FAI+/qIpQuvomJC0YCLs65Vgm2QrnOI5A/9N6Z2ZishfJ/OKfziZby6GY0l3CdY3uvS/lQ1atQsBXS0AFZaOvpKLpnTO5luk/grwPa9bg74VtHrfmuYur58EmwTuRNJ9J34v2crp/nvo/gs=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F951091FD1A7CB30E0401F0A0599396A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F951091FD1A7CB30E0401F0A0599396A</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F9510927A4447965E0401F0A05993983</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F9510927A4447965E0401F0A05993983</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_084134</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F9510927A4457965E0401F0A05993983</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_084138</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_084138</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_084138</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdc6JKEH3fX0GxzziAEIWKVrEas+yajTcaN8lLajK0OlkYCDOgya+/MxiMGpPr3iqrrGl6uk9/zOk+5TiJbT/gHHJBU6aF/Y5+3yatGcEeGLbVNA2HWK7hzSLTcD3T9donuBW1HnQt5LyAkHGBmejotmk5hukaljMxTd+x/Kbb8JrNO12bQs6laanSMHVtlcSM+5Xbjl7kzE8xp9xnOAHuC+KPg4uhLzV9XGPSu6drlJXDvLsQIvMRIo0ICMQxaZA0QadoR+c04v6YzhkWRQ6vPiPe0V/vLpfLxrLZSPM5sk3TRKaHpE7E6fyr3v1SX4YoZLN0fe5hljJKcExfsAJ1AWKRRloQz9OcikXygWkLWaYybcCKGMRy2FcdvTmo0B1paQdkzrHBF9iqjV3BDHJgBLTrq7Cjfz2uguu7kxwzPkvzhO+d/w4SsBLiNIPI4HVkNbrjLR5IV/cUiB8yEheclvBLtUmGCXBtlMOMroaUy+aLuFaVX1tx+aN1lwH5m7Kcom2sEjo6kJ0+nQMX/6dm2/VaW5niuICuCM7j1ugBZSQU+WJ5WYyHN78n33lredGpIGwrr0Ftyv163m/WTW+9XpqE0/wxD9q3s7s/Tn856a0Gk8HEDheBVcaP11n7DKPbO/sBDZ/OrUv72i4nqetRejdvz/7czccv+OL7AIkz7rb/+XL1G6O587M5DKajS3xrp2N2UTwXN0vbbDrPyffzs+Kp9ML5YHGH3Olz4Y5up2Z4NkQPw162SkvIpj0XriG+idkX9tgezH/8GLljj71MR6GThJ23mLZj2BXWlDAuHh6BiPqo2iPsawNZLyw+pxcloZExq1T9THEUF8CE3lW3FLX4hSQgGvmymOvzwHMt07NbgeM4Le/EPTMd0xqYgXxSXtNrN2sOWqPYg9hL2YwqX4pl1/3zOUCS+BxYBLlRpgVZANc/sdjHAmshu5KPI2UcJqlkccxK6pVemcSL8iUj5czCOPeyTNd+peKSXebBTEC+y9zNHea+AkIzCoreVX9z2eBcyFQ84bIQsdUocYNBIQdArjjYt522izhNshgUUJSkURFDI1tkVWIQX//bBia8kl6dTap392FY+9/qDEidiCoFrmL5BrKKcGAE2XUgHwd8sh1wbT4oIqqel0ynyClZI9n99NYlqj02LSIjuu+N760a90b96Ovvb6JPQKH9fGwcRSXdclvPUjkeJHl062o+4cZToyjLoqpfSxFjLs0jyY8WGgMpJLs9T9I/wNDGBDpquGxQ73neyHfxFWLBxgILSGS3adXxiM1iDFxtFqF8Jatj15YdlzJvAlbikKwXywVEIf50RyE+UXpSPJJ/yzSP3sp1wNaWHxmnXCcEZXN1UmPk+YOmIKk0SyXvpfm28UMGDjnfFW6SvMEiZDc9FAI+/qIpQuvomJC0YCLs65Vgm2QrnOI5A/9N6Z2ZishfJ/OKfziZby6GY0l3CdY3uvS/lQ1atQsBXS0AFZaOvpKLpnTO5luk/grwPa9bg74VtHrfmuYur58EmwTuRNJ9J34v2crp/nvo/gs=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F951091FD1A7CB30E0401F0A0599396A</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFln0MSwqVEBYmS0ubQ2wLdcvqyMs4A7iZ2ajuQ9tevHRoKlPawR0JCnoxnvrn4mzkVKImrflcI4JIwaoRB2/yFkDf1alCz3IY7s2rNetNqoVnTqjZaHjjQ9FrTyDRCITIIqZCIyrZZddya5dQttzZ2HL/m+l6r0jypP5rGT+BCmVYqFcc08iSmwi/cts2MU58hQYRPUQLCl9gfda+vfKXpoxKT2Tldoywc8s5CytS3bVyJAEMc4wpmiX1q7+icRsIfkTlFMuPw5jMSbfPt7mq1qqy8CuNzu+o4ju20bKUTCTL/bna+lZchCumMrc89RBklGMXkFWlQ1yAXLDK68ZxxIhfJJ6Zd23W0aQtybGG3Rr+b9ruDAt2RlnZAcoEssUBuaWwIM+BAMRj3w7Btfj+uguu7Y46omDGeiL3z30ECuoSYpRBZooysRHe8xQPp6pwC9kOK40yQJdzoNkkRBmHccZiR/IoI1XyRMIryG7lQP1J2GeC/KcupvY1VQbcPZCcgcxDy/9Rsu15rKz9RnEEn5WlVTqdxNJCTfjCoRndJuHga55St2gWEbeU1qE253877zbrprbdLub3qeyR4uciaeSONosvJP0N7wocQ3aX8hvUn4/gHaXRF0Ly+zfPxxdy5Qk+T1wf0eDlviuwu8R7u719vBj+uE/HtnlE2roUnv28u0Wh5XjsfPA6enatw1lg9J1eTFceP4cPMvg+cYRid33vL8MGRTj3mfdkLeuHdg+0Fo8vpeHiBH75BREUd/ZtkaXXgDX9OqxfX7feYtmPYFZaUMMqmT4BledTtEQZGX9ULya/pRUtIZM0KVT/VHCUkUGl29C1NLX6mCIhEvirm+txv1V2n2ax23d5Z3/OCc6fmuH2n69RbLc/pnpUctEaxB7HH6IxoX5pl1/3zNUCc+AJoBNxasgwvQJhfWAyQREZIh+pxMCpgzBSLe1mjLiiZPtVijNx4IZI6P2n8dk3jhslbesu7Mwl8l7m9HeYeAiYpAU3vur+FanAhVSqe0TKTsVtZogqFTA0ArjnYr9ZO6rYgSRqDBmonLMpiqKSLtEiMLdb/VQthUUiH5+Pi3X0a1v63MgNKJyJaQehYzkBVEQ6MoGoZyOcBN7YDLs13s4jo56XSKTnBayS7n967RLfHpkVURL96o19uiXujfvT1jzftL0DZ+/nYOIqWZMttOUvVeFDk0Smr+Ywqz5VsucyK+jU1MXJl3lb86NojwJlit5cx+w3U3piwjxouG9R7njfyXXyZXNCRRBIS1W1GcTxisxiB0JtFqF5JfuzasuNS5U1CLg/JerFaQDTiL3cU7GOtp8R36m/F+Hvgh2xt+VFxqnVCEjrXJz1GXj5pCsyUWaJ4j/Ft44cMHHK+K9wkeYNFqm6aZhI+/2JoQmubCGOWURkGZiHYJtkCp3xJwX9X+mCmIPK3yZyLTyfz5PpqpOguQeZGl/y3skWKdsFg6gWgwNI2c7VoKud0vkXqbwA/8HrL7Qdut9k785wdXm81upsE7kTS+SD+KNnK6f576PwB</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F9510772A1CBF33DE0401F0A059930AB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F9510772A1CBF33DE0401F0A059930AB</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_084138</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F9510772A1CCF33DE0401F0A059930AB</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00017_ACCESS_UVTC_UserName_RequestorUserBAU_Active_RequesteeSelf_UnlockMe_Role_DECE_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH6sQJyRcooJEoezSlran9AL7sjLOAO4mDtgOt19/7NBQoLSHPRIS8mQ8883F38y5wHHkBg0hgEuaMKPTqpm/SyMYVnw8tMqehyyvWMVWNfRK1rBSLiMyDN0hKplGR4gUOkxIzGTNdJHjWci3HO8RocBzAq9Y8IulX6bxDFwo00qlgExjGUdMBJnbmplyFiRYUBEwHIMIJAl6je5NoDQDnGMy6+cblJlDXp9IOQ1smxRCIBBFpECS2D6393TOQxH06JhhmXJ48xmKmvl2d7FYFBbFQsLHtosQslHVVjqhoOPvZv1bfhnCDhslm3MTs4RRgiO6xhpUF+QkCY1GNE44lZP4E9OO7SBt2oIlsYjjse+m/e4gQ3eipT2QXGBLTLCTG3uAEXBgBIynh07N/H5aBTd3HzlmYpTwWByc/w4SsDlEyRRCS+SR5ehOt3gkXfVzIEGHkSgVdA63uk2mmIAw7jmM6PKGCtV8oTCy8htLoX407zIgf1OWc3sXq4JuH8lOi45ByP9Ts916baw84yiFunRL142l0+j1i5fPrV9/AN/6ftFZ9xeilkHYVd6A2pb77XzYrNveervEhzSqvtorJn4srnx521jd++vJy0/6Mm7DhRP3CH+dXidnk7NFJ1yTUM5+wnDUR2edq9FsfvPreXntDpq88s+k2/9Wvll2Gz5vJ3ReXA5IX3TvG3ftQXn10n7h5OlucN2/568vT2dXyK2Wo1iGnUr6yn+8zsvJ1fymccVmre6gtH50W+jbwnWbg6ex+3Pm3/8Qzxe0Oqi9x7Qbw74wp4ReOnwFIvOjbo9Oy2iremH5Nb1oCQ2tUaYaTDVHCQlMmnV9S1NLkCoComGgirk5t6s+cl1Uardb3uVFs3SJPOS0UQOVq1XkNi9yDtqgOIDYTNiIal+aZTf98zVAEgcCWAjcmicpmYAwv7DYwhIbHfagHkfCBDwmmsW94bpSxGhS8oQzXss1hOskHa5WpnGbyDt2xxsjCXyfuot71P0AhE4paH7XDS5UhwupcjHD81RGTmGOCwxSNQG4JuHA9Sq+LWg8jUAjteMkTCMoTCfTLDO22Py7FiYikz5cPmYP79O4Dr/lKVA6IdUKQsdyAaqMcGQGFfNAPg+4tBtwbr6RhlS/L5VPySnZINn/9N4muj+2PaIi+t3s/XZy3Fv1k69/vGl/Aco+zMfWUTinO27zYarmg2KPel7NGS7MCul8nmb1K2tm5Mq8rQjSsXtAUkVvq8fkDzB7a8I+abpsUR943sr38aVywnoSS4hVtxnZ8YTVogdCrxYd9UyWp+4tey5V3iQs5TFZM1IbiEb85ZJCAqL1lPhe/S0SHr6X64itHT8qTrVPSMrG+qTnyOqTpiCJMksV8SV81/gxA8ec7wu3Sd5ikaqbhqmEz78YmtFqJiYkSZnstMxMsMuyGU65mkLwrvTBTMbkb6N5KT4dzf3uTU/xXYzNrS79b2WLZu1CwNQbQIalZi7Vpqmcs/EOq78BPCB2B5WKfsVrlVvoAu0Su1/0y9sE7kVS/yD+KNnJ6eF7qP8L</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F951063584D7D0B0E0401F0A07995357</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F951063584D7D0B0E0401F0A07995357</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F9502206FFD4EBC6E0401F0A079902CB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F9502206FFD4EBC6E0401F0A079902CB</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_084141</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F9502206FFD5EBC6E0401F0A079902CB</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_084145</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_084145</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_084145</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH6sQJyRcooJEoezSlran9AL7sjLOAO4mDtgOt19/7NBQoLSHPRIS8mQ8883F38y5wHHkBg0hgEuaMKPTqpm/SyMYVnw8tMqehyyvWMVWNfRK1rBSLiMyDN0hKplGR4gUOkxIzGTNdJHjWci3HO8RocBzAq9Y8IulX6bxDFwo00qlgExjGUdMBJnbmplyFiRYUBEwHIMIJAl6je5NoDQDnGMy6+cblJlDXp9IOQ1smxRCIBBFpECS2D6393TOQxH06JhhmXJ48xmKmvl2d7FYFBbFQsLHtosQslHVVjqhoOPvZv1bfhnCDhslm3MTs4RRgiO6xhpUF+QkCY1GNE44lZP4E9OO7SBt2oIlsYjjse+m/e4gQ3eipT2QXGBLTLCTG3uAEXBgBIynh07N/H5aBTd3HzlmYpTwWByc/w4SsDlEyRRCS+SR5ehOt3gkXfVzIEGHkSgVdA63uk2mmIAw7jmM6PKGCtV8oTCy8htLoX407zIgf1OWc3sXq4JuH8lOi45ByP9Ts916baw84yiFunRL142l0+j1i5fPrV9/AN/6ftFZ9xeilkHYVd6A2pb77XzYrNveervEhzSqvtorJn4srnx521jd++vJy0/6Mm7DhRP3CH+dXidnk7NFJ1yTUM5+wnDUR2edq9FsfvPreXntDpq88s+k2/9Wvll2Gz5vJ3ReXA5IX3TvG3ftQXn10n7h5OlucN2/568vT2dXyK2Wo1iGnUr6yn+8zsvJ1fymccVmre6gtH50W+jbwnWbg6ex+3Pm3/8Qzxe0Oqi9x7Qbw74wp4ReOnwFIvOjbo9Oy2iremH5Nb1oCQ2tUaYaTDVHCQlMmnV9S1NLkCoComGgirk5t6s+cl1Uardb3uVFs3SJPOS0UQOVq1XkNi9yDtqgOIDYTNiIal+aZTf98zVAEgcCWAjcmicpmYAwv7DYwhIbHfagHkfCBDwmmsW94bpSxGhS8oQzXss1hOskHa5WpnGbyDt2xxsjCXyfuot71P0AhE4paH7XDS5UhwupcjHD81RGTmGOCwxSNQG4JuHA9Sq+LWg8jUAjteMkTCMoTCfTLDO22Py7FiYikz5cPmYP79O4Dr/lKVA6IdUKQsdyAaqMcGQGFfNAPg+4tBtwbr6RhlS/L5VPySnZINn/9N4muj+2PaIi+t3s/XZy3Fv1k69/vGl/Aco+zMfWUTinO27zYarmg2KPel7NGS7MCul8nmb1K2tm5Mq8rQjSsXtAUkVvq8fkDzB7a8I+abpsUR943sr38aVywnoSS4hVtxnZ8YTVogdCrxYd9UyWp+4tey5V3iQs5TFZM1IbiEb85ZJCAqL1lPhe/S0SHr6X64itHT8qTrVPSMrG+qTnyOqTpiCJMksV8SV81/gxA8ec7wu3Sd5ikaqbhqmEz78YmtFqJiYkSZnstMxMsMuyGU65mkLwrvTBTMbkb6N5KT4dzf3uTU/xXYzNrS79b2WLZu1CwNQbQIalZi7Vpqmcs/EOq78BPCB2B5WKfsVrlVvoAu0Su1/0y9sE7kVS/yD+KNnJ6eF7qP8L</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F951063584D7D0B0E0401F0A07995357</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZtc6I6FP6+v4KhH3cQEBBhqjNUu5Xe1u6qfdsvOzEcNS0ESgK1/fU3wWLV2l73js5ADuflOS95kmOGkrjpB4xBzklKlbDfUf+4yHIMFzma15yCZltNR5uaU1tzbQt7M3AtMB1VCRkrIKSMI8o7atMwbc1wNNOeGIZvm77darSs5m9VuYGcCddCpWGoyjKJKfOrsB21yKmfIkaYT1ECzOfYHweXF77Q9FGNSe0er1BWAfPugvPM13XciABDHOMGThP9WN/SOY6YPyZziniRw1vMiHXUN9vn5+fGs9VI87neNAxDNzxd6ESMzI/U7rfaGKKQztLVuodoSglGMXlFEtQl8EUaKUE8T3PCF8knrk3dNKRrDZZYw6ZNj1T9PUCF7kBPWyBzhjS2QGbtbAQzyIFiUK5HYUc9OqyDK9tJjiibpXnCdtZ/BwloCXGaQaSxOrMa3eEe95SrewzYDymOC0ZKGMoxyRAGpvzMYUaWF4SJ4YuYUrVfWTLxJ/WUAf6bthzrm1gFdH1PdfpkDoz/n55t9mvl5QbFBXRv7gZu+745Kk/DReJdT84eXnnBgkH7/L5TQdhUXoFat/ttvTus69l6M7pJXAc/fI/dk+z3xfl5Oyqs2+SSDAb2P4/XfMp7w0kQuPfWL+fle9DGj855Fo3mYUyL1kXwG7U8e5hdDl9awaWz+Daa3BXo6iTgAxKNn+b39Hr4OBz9sm7HE3YWT4L0nNx63iRvjqnXR8DtXL8fPVwNBnqvPJ30+CC8GliOo58h+/zbw8zrn2Qju39mkcH4MV5cs857Tps5bAtrShgX0wfAvF7K8Qj7yg/RL8S/phcpIZE2q1T9THIU40C52pVWklr8QhAQiXzRzNX6h+eYhusGnt00AuNU/GzD/CFeXc9zHMeoOWiFYgdiL6UzImNJll3Nz9cAceIzoBHkWpkWeAFM/cJjH3GkhHQkNkdKGUxSweLO67QkZfzYJs58+hSXr4YjzOaWqgxTfkWv8mDGId9mbmuLuUeASUZA0rucbyYGnHFRiidUFjw2GyVqUCjEAZBLDvabdtvRGUmyGCRQPUmjIoZGtsiqwuhs9WxqCLNKOjqdVPvu07R2v9UVEDoRkQpM5nICoouw5wiy6kQ+T7i1mXDtPigiIreXKCfPCV4h2f70PiVyPNYjIjL60xv/MWvca/WDzT9a6l+A0nfrsQ4UlWQjbH2WiuNBkEe37uYTajw1irIsqv65khhz4V4X/GjqY8CFYLeXSfoIVF+70A86XNaodyKv5dv4Cr6gY444JGLalGp5wM1iDEzeLEKxS5aHXlu2Qoq6cVjyfbJeLC4gEvGXdxTsY6knxD/F4znNo/d27fG1EUfkKa4TnNC5XMlj5OWTocCpcEsE76X5pvN9DvYF3xaui7zGwsU0TQsOn39RJKF1VIRxWlAe9tVKsEmyFU7+koH/rvTBTUXkbyfzkn16Mt9dXowF3SVIXeuS/1bWSDUuGFR5AaiwdNSluGiK4HS+QepvAD/westy2nbf7Rsn27xuOe66gFuZdD+IP0o2arq7H7r/Ag==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F951077A9420A0E0E0401F0A07995550</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F951077A9420A0E0E0401F0A07995550</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_084145</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F951077A9421A0E0E0401F0A07995550</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00018_ACCESS_UVTC_UserName_RequestorUserBAU_Active_RequesteeFAU_UnlockMe_Role_DECE_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4jxljGQyOPYEZAqG4TQLlI0nz0hHyGpQYmUgyIf31lUxMgJBcemeYYbRe7Z7dPTrSmcDzpBw0hQAuacqMsF03f4MXV8tlFFkQnVYsdwKx5WMXWSiGqOLhyAGnYhqhEBmETEjMZN0sI8e1UNVy3BFCgesEVVRyvcq9adwAFyq0cikh01jNEyaCPG3dzDgLUiyoCBiegwgkCYbNq8tAeQa4wGQ2ztYo84S8MZNyEdg2KUVAIElIiaRz+8ze8TmLRDCkU4ZlxuE1ZyTq5uve5+fn0nOllPKpXUYI2ci3lU8k6PSr2fhSbIYoZHG6XrcwSxklOKF/sAZ1BXKWRkYzmaacytn8g9CO7SAd2oIVsYjjsq+m/ZYgR3dkpB2QXGBLzLBTBBtADBwYAWM8COvm1+MmuN474piJOOVzsbf+N0jAlpCkC4gsUVRWoDs+4oF2Nc6ABCEjSSboEq41TRaYgDD6HGK6uqRCkS8SRj5+YyXUjxYsA/IvYzmzt7Eq6PaB7rTpFIT8PzPbntc6yg1OMmiMZ99m/ZtK92WMe6xbTWYL7uLT0d0s+1XPIWw7r0Ftxv263ifrhluvm8Jmt9OP4vtht8MF+um/xJ3lxL0EP7uy++Pp4+KnGMT4l9u5epDxg18RbjgdD65b3e71/K42aX5LKj9w1l72a8PbL9/avqxNptFwNLwZj5Pz773v5MftT68Wnjz07fv4ko+W4oKHd6j6sCqzy4m86vbsaxJOWz9OrsX5reP9ebq7H104+PuX+4vzdpnxcjPt3/WePHnSS+tvNW3XsGssJGGYTR6AyGKp6RG2jY6aF5afy4u20MiKc9dgoTVKSGDSbOhdWlqCTAkQjQI1zPW641dRu4xqCNW8jtdxL5CLnA5qIs/3q7WaX2jQGsUexFbKYqpzaZVd8+dzgGQeCGARcGuZZmQGwvwkYhtLbIRsoA5HygSMUqXiDs+S6mTmPZ5Gj6vac8VnNXfqL6lvGtep7LEeb8YS+K50V3akewCELihofdcEF4rhQqpePOFlJhOntMQlBpm6AbgW4aDsnlZtQeeLBDRSe55GWQKlxWyRd8YW6/+yhYnIrYOLUX7wPqxr/1vRAuUTUe0gdC3noMYIB+4gtyjk44Jr2wUX4ZtZRPX5Uv2UnJI1kt1PbzTR/NhwRFX0uzX87RS4N+5Hb3+/0/4ElL3fj02iaEm30haXqboflHo0imk+4dJTKVsus3x+nlZGrsLbSiAdewgkU/L2MkofgdmbEPZRt8sG9V7mjX0XXyZnbCixhLlim5Evj3haDEHop0Wojsnq2HfLTkrVNwkrecjWStQLRCP+9JFCAqL9lLmv/p5THr2N60CsrTyqTvWekJRN9UrfIy8fkIKkKixVwpfy7eCHAhxKvmvcNHmDRSo2TTIJH38xtKLVTUxImjEZts3csK2yOU75soDgzeldmFzJX6/mlfjwar67uhwqvZtjc+NL/9vZojldCJj6BZBjqZsr9dJUydl0S9VfAe4Lu+KNh5yKd3Heqm0LOyq3zjcN3Kmk8c783rLV0/3z0PgL</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95022070137EBC6E0401F0A079902CB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95022070137EBC6E0401F0A079902CB</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950D2060067F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950D2060067F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_084148</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950D2060068F7F4E0401F0A07995669</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_084152</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_084152</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_084152</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4jxljGQyOPYEZAqG4TQLlI0nz0hHyGpQYmUgyIf31lUxMgJBcemeYYbRe7Z7dPTrSmcDzpBw0hQAuacqMsF03f4MXV8tlFFkQnVYsdwKx5WMXWSiGqOLhyAGnYhqhEBmETEjMZN0sI8e1UNVy3BFCgesEVVRyvcq9adwAFyq0cikh01jNEyaCPG3dzDgLUiyoCBiegwgkCYbNq8tAeQa4wGQ2ztYo84S8MZNyEdg2KUVAIElIiaRz+8ze8TmLRDCkU4ZlxuE1ZyTq5uve5+fn0nOllPKpXUYI2ci3lU8k6PSr2fhSbIYoZHG6XrcwSxklOKF/sAZ1BXKWRkYzmaacytn8g9CO7SAd2oIVsYjjsq+m/ZYgR3dkpB2QXGBLzLBTBBtADBwYAWM8COvm1+MmuN474piJOOVzsbf+N0jAlpCkC4gsUVRWoDs+4oF2Nc6ABCEjSSboEq41TRaYgDD6HGK6uqRCkS8SRj5+YyXUjxYsA/IvYzmzt7Eq6PaB7rTpFIT8PzPbntc6yg1OMmiMZ99m/ZtK92WMe6xbTWYL7uLT0d0s+1XPIWw7r0Ftxv263ifrhluvm8Jmt9OP4vtht8MF+um/xJ3lxL0EP7uy++Pp4+KnGMT4l9u5epDxg18RbjgdD65b3e71/K42aX5LKj9w1l72a8PbL9/avqxNptFwNLwZj5Pz773v5MftT68Wnjz07fv4ko+W4oKHd6j6sCqzy4m86vbsaxJOWz9OrsX5reP9ebq7H104+PuX+4vzdpnxcjPt3/WePHnSS+tvNW3XsGssJGGYTR6AyGKp6RG2jY6aF5afy4u20MiKc9dgoTVKSGDSbOhdWlqCTAkQjQI1zPW641dRu4xqCNW8jtdxL5CLnA5qIs/3q7WaX2jQGsUexFbKYqpzaZVd8+dzgGQeCGARcGuZZmQGwvwkYhtLbIRsoA5HygSMUqXiDs+S6mTmPZ5Gj6vac8VnNXfqL6lvGtep7LEeb8YS+K50V3akewCELihofdcEF4rhQqpePOFlJhOntMQlBpm6AbgW4aDsnlZtQeeLBDRSe55GWQKlxWyRd8YW6/+yhYnIrYOLUX7wPqxr/1vRAuUTUe0gdC3noMYIB+4gtyjk44Jr2wUX4ZtZRPX5Uv2UnJI1kt1PbzTR/NhwRFX0uzX87RS4N+5Hb3+/0/4ElL3fj02iaEm30haXqboflHo0imk+4dJTKVsus3x+nlZGrsLbSiAdewgkU/L2MkofgdmbEPZRt8sG9V7mjX0XXyZnbCixhLlim5Evj3haDEHop0Wojsnq2HfLTkrVNwkrecjWStQLRCP+9JFCAqL9lLmv/p5THr2N60CsrTyqTvWekJRN9UrfIy8fkIKkKixVwpfy7eCHAhxKvmvcNHmDRSo2TTIJH38xtKLVTUxImjEZts3csK2yOU75soDgzeldmFzJX6/mlfjwar67uhwqvZtjc+NL/9vZojldCJj6BZBjqZsr9dJUydl0S9VfAe4Lu+KNh5yKd3Heqm0LOyq3zjcN3Kmk8c783rLV0/3z0PgL</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F95022070137EBC6E0401F0A079902CB</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH1fBSQhNExUkSuGWbj8odHv39qUyzgDeJjbEDoT99dcOTQqU9rJXQkKejGfOzBwf+0zgJHbDthCQSsqZ0b9oms/4hJCG6zYsN2p4lhe5Ywu70LAgcCf+SRB5EYlMoy9EBn0mJGayabq241l2w3K8B9sOPSds1Gu+6z+ZxiOkQoVWLjXbNPIkZiIs0jbNLGUhx4KKkOEERChJOGrfXIfKM8QlJrN1tkFZJExbMynnIUKkFgGBOCY1whN0hnZ8ziIRjuiUYZml8JozEk3zde9qtaqt6jWeTpFr2zayA6R8IkGnX83Wl3IzRH024Zt1BzPOKMEx/Y01qBuQMx4Z7XjKUypnyQehHeTYOrQFObGI47GvJnpLUKA7MtIOyFRgS8ywUwYbwgRSYASMH8N+0/x63AQ3ex9SzMSEp4nYW/8ZJGBLiPkcIkuUlZXojo94oF2tMyBhn5E4E3QJt5omc0xAGIMUJjS/pkKRLxJGMX4jF+pHS5YB+ZOxnKFtrAo6OtCdCzoFIf/PzLbntYnyiOMMWvaq1zs/HTbi+LHnthd3NrvsTSbf3FO/2ywgbDtvQFXjfl3vk7Xi1uumfM3b6JvX/ZW3B7jt+Nm1f+9+h+Cnv0h4Mlw5T7//huuFN52e1K/bL/g7Wqz6ztOAek/3qB4LvEqTR5ve/0Qd78t6VEd2t7t8HAZo/ZLXexej5Ca47Uc0/t69fEnym+wfMUnTxjAbXHl/9e6ms87lAI1ns/v6cJRzin5cDV6iB7sd3H4Zvbjy/nTMxTyKl1eNq+X5qvlW03YNu8ZSEkbZ+BcQWS41PfoXRk/NC8vP5UVbaGRNCtdwrjVKSGDSbOldWlrCTAkQjUI1zM26FzRs1/W9TnBqByfnftf2bKdnt+1GENjB6XmpQRsUexA7nE2ozqVVdsOfzwGSJBTAIkitJc/IDIT5ScQLLLHRZ0N1ODgT8MCVijtzGysSjjlfJePfuXDldJmI9VpJ9y2Xd+wubU8kpLvSXd+R7iEQOqeg9V0TXCiGC6l6scDLTMZObYlrDDJ1A6RahEPXO20gQZN5DBopSniUxVCbz+ZFZ5DY/LsWJqKwDrsPxcH7sK79b2ULlE9EtYPQtZyDGiMcuIO8spCPCz7ZLrgM384iqs+X6qdMKdkg2f30RhPNj4ojqqLnzujZKXFX7kdvf78TfQIK7fejShQt6Vba8jJV94NSj1Y5zQWuLWrZcpkV8/O1MqYqPFIC6aARkEzJ2/qBvwBDVQh01O1Sod7LXNl38WVyxkYSS0gU24xiecTTYgRCPy366pjkx75bdlKqvknI5SFbJ1YvEI3400cKCYn2U+aB+lvx9K3wQ7G28qg61XtCUjbVK32PrD8gBeEqLFXCx9Pt4IcCHEq+a6yaXGGRik3jTMLHXwytaE0TE8IzJvsXZmHYVtkCp1zPIXxzehemUPLXqzkXH17NP2+uR0rvEmxWvvS/nS1a0IWAqV8ABZammauXpkrOpluq/grwvbDbvu3U/e5556QSdl8Ju9uphH23ktY783vLVk/3z0PrXw==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F9502274C98096B7E0401F0A0599098B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F9502274C98096B7E0401F0A0599098B</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_084152</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F9502274C98196B7E0401F0A0599098B</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00019_ACCESS_UVTC_UserName_RequestorUserBAU_Active_RequesteeSAU_UnlockMe_Role_DECE_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj6sQJxAuUUGC0p7NLu22DUvbfVkZZwIuiUNjBwK//tihoUBpD3skJOTJeOabi7+Zc47jyHa7nEMqaMI0r9/W/4wxwnYD1w0LbMeohRYymk4YGq26VQvBQlXbtnTN4zwDj3GBmWjrNrJqBnIMqzZEyK1ZrtOo2DX7t66NIOXStFSpIF3L44hxt3Db1rOUuQnmlLsMx8BdQVy/ez1wpaaLS0x653yDsnCYdqZCzF3TJJUACEQRqZAkNs/NPZ3zgLs+nTAsshRefQa8rb/eXS6XlWW1kqQT00YImahlSp2A08mZ3vlSXobAY2GyOV9gljBKcETXWIG6BjFNAq0bTZKUimn8gWnLtJAybUBODGLV2Jluvjko0J1oaQ9kyrHBp9gqjd1DCCkwAtqve6+tn51Wwc3dYYoZD5M05gfnv4MEbAFRMofA4GVkJbrTLR5JV+cciOsxEmWcLuBGtckcE+DabQohzQeUy+YLuFaUX8u5/NGyy4D8TVnOzV2sErp5JDt9OgEu/k/Nduu1sTLCUQad4NL75vzDslHWuuPrwcPqZ++HM2rVht8v2wWEXeUNqG25X8+HzbrtrddLt+jb8tFswhiTYWPUw8Nnn36NCevnd2SEvFnP6t7l7HL84q8ndeI5NFjPp/DoX909Tb37xmTc8ltxf3n9wga3X/q/RX1wW6X9dGVdWRcPsP4xWua8hri9sAdPA+s5yxrTLOt99Vr+91lzUb1++HERvMxvHDaZ/KIWQTP0QIbk2Vl/GTvjp8Fi1QybdHXTX8NTY9Z+i2k3hn1hSQl+Nn4GIsqjag+vr13JemHxOb0oCQ2MsFB154qjuAAm9I66pajFzSQB0cCVxdycr1qOhRp1x77sNapXTXSJasi6Ql3ktFpV1O2XHLRBcQDxImEhVb4Uy27653OAJHY5sABSY5FkZApc/8RiHwuseexePo6EcRgmisVbOZlwumLzetOasbCRB8li1lhOde0mET/Zz7QbCkj3qbu6R933QOicguJ31eBcdjgXMhcveJGJyKoscIVBJidAqkjYtWtNx+Q0nkegkJpxEmQRVObTeZEZk2/+bQMTXkjvL4fFw/swrsNvZQqkTkCVAlex9ECWEY7MoFoZyMcB13cDLs13s4Cq9yXzKVJKNkj2P721ieqPbY/IiP5c+H+sEvdW/eTr72+an4AyD/OxdRQs6I7bcpjK+SDZo1NW8wVXXirZYpEV9WsoZkyleVMSpGX6QDJJb6thMgNmbk2YJ02XLeoDz1v5Pr5MTJkvsIBYdptWHE9YLXzgarXw5DPJT91b9lzKvAnIxTHZRSQ3EIX40yWFuETpSfGt/FsmafBWriO2dvzIOOU+ISibqJOaI6sPmoIk0iyVxJeku8aPGTjmfF+4TfIWi5DdNM4EfPxFU4zW1jEhScaE19cLwS7LFjjFag7um9I7MwWTv47mnH84mh+vB77kuxjrW13638oGLdqFgK42gAJLW8/lpimds8kOq78CPE7s3d5nxL4fSeed+L1kJ6eH76HzLw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95107652EAB3F80E0401F0A059930AD</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95107652EAB3F80E0401F0A059930AD</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95107652EB73F80E0401F0A059930AD</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95107652EB73F80E0401F0A059930AD</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_084155</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95107652EB83F80E0401F0A059930AD</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_08421</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_08421</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_08421</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj6sQJxAuUUGC0p7NLu22DUvbfVkZZwIuiUNjBwK//tihoUBpD3skJOTJeOabi7+Zc47jyHa7nEMqaMI0r9/W/4wxwnYD1w0LbMeohRYymk4YGq26VQvBQlXbtnTN4zwDj3GBmWjrNrJqBnIMqzZEyK1ZrtOo2DX7t66NIOXStFSpIF3L44hxt3Db1rOUuQnmlLsMx8BdQVy/ez1wpaaLS0x653yDsnCYdqZCzF3TJJUACEQRqZAkNs/NPZ3zgLs+nTAsshRefQa8rb/eXS6XlWW1kqQT00YImahlSp2A08mZ3vlSXobAY2GyOV9gljBKcETXWIG6BjFNAq0bTZKUimn8gWnLtJAybUBODGLV2Jluvjko0J1oaQ9kyrHBp9gqjd1DCCkwAtqve6+tn51Wwc3dYYoZD5M05gfnv4MEbAFRMofA4GVkJbrTLR5JV+cciOsxEmWcLuBGtckcE+DabQohzQeUy+YLuFaUX8u5/NGyy4D8TVnOzV2sErp5JDt9OgEu/k/Nduu1sTLCUQad4NL75vzDslHWuuPrwcPqZ++HM2rVht8v2wWEXeUNqG25X8+HzbrtrddLt+jb8tFswhiTYWPUw8Nnn36NCevnd2SEvFnP6t7l7HL84q8ndeI5NFjPp/DoX909Tb37xmTc8ltxf3n9wga3X/q/RX1wW6X9dGVdWRcPsP4xWua8hri9sAdPA+s5yxrTLOt99Vr+91lzUb1++HERvMxvHDaZ/KIWQTP0QIbk2Vl/GTvjp8Fi1QybdHXTX8NTY9Z+i2k3hn1hSQl+Nn4GIsqjag+vr13JemHxOb0oCQ2MsFB154qjuAAm9I66pajFzSQB0cCVxdycr1qOhRp1x77sNapXTXSJasi6Ql3ktFpV1O2XHLRBcQDxImEhVb4Uy27653OAJHY5sABSY5FkZApc/8RiHwuseexePo6EcRgmisVbOZlwumLzetOasbCRB8li1lhOde0mET/Zz7QbCkj3qbu6R933QOicguJ31eBcdjgXMhcveJGJyKoscIVBJidAqkjYtWtNx+Q0nkegkJpxEmQRVObTeZEZk2/+bQMTXkjvL4fFw/swrsNvZQqkTkCVAlex9ECWEY7MoFoZyMcB13cDLs13s4Cq9yXzKVJKNkj2P721ieqPbY/IiP5c+H+sEvdW/eTr72+an4AyD/OxdRQs6I7bcpjK+SDZo1NW8wVXXirZYpEV9WsoZkyleVMSpGX6QDJJb6thMgNmbk2YJ02XLeoDz1v5Pr5MTJkvsIBYdptWHE9YLXzgarXw5DPJT91b9lzKvAnIxTHZRSQ3EIX40yWFuETpSfGt/FsmafBWriO2dvzIOOU+ISibqJOaI6sPmoIk0iyVxJeku8aPGTjmfF+4TfIWi5DdNM4EfPxFU4zW1jEhScaE19cLwS7LFjjFag7um9I7MwWTv47mnH84mh+vB77kuxjrW13638oGLdqFgK42gAJLW8/lpimds8kOq78CPE7s3d5nxL4fSeed+L1kJ6eH76HzLw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F95107652EAB3F80E0401F0A059930AD</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EH2fr3B5HreMZLABuwJVTLgMmdwGkmw2L1OK3GAxtuxYMhC+fiUTO0Auy2wVVZTare7T3UdHOhEkjup+TwjIJEu4Me53zF8zjGkDSGDRZmtmOa1Z02q74Fktu9Gg4NaxR9umMRYihzEXknDZMevYdizsWrZzg7Hv1H2Ma47XeDCNO8iECq1catg01nHEhV+k7Zh5xv2ECCZ8TmIQvqT+tHdx7itPn5SYzO7JFmWRMOuGUqY+QrQWAIUoojWaxOgE7fmcBMKfsjknMs/gJWcgOubL3tVqVVs1akk2R3WMMcIeUj6BYPOvZvdLuRmCMZ8l2/Up4QlnlERsQzSoC5BhEhi9aJ5kTIbxB6FtZGMd2oI1tajt8K8mek1QoDsy0h7ITBBLhMQug01gBhlwCsbtZNwxvx43we3em4xwMUuyWBys/wwS8CVESQqBJcrKSnTHR3ynXd0ToP6Y0ygXbAmXmiYpoSCM6wxmbH3OhCJfIIxi/MZaqB8rWQb0T8ZygnaxKujone702RyE/D8z253XNsodiXLo/qy3oxl9ZDhkrBH+Q7JmhqYLLySbVaeAsOu8BVWN+2V9SNaKWy+b5HN/GHB0N7o7a5NJ8Hj5fdLMV99X9pTfrILv+OzydPVD/i3wQpLepbMYIac1H2xG8SJIogvaf9qErdGwsXQfUv6F0oe7wVVj4eLLUetsmnsoareavdXttN/76Z5dgfs7vn04u7j/Nknl8Ed8/RMv0sH9D28pQ3fWcrH46z51RjbfDCZfzq8fHeLE0f0GTyajJke3tPNa024N+8ZSEqb54wKoLJeaHuO+MVTzIvJzedEWFlizwtVPtUYJCVyaXb1LS4ufKwFiga+GuV0PPRfXG16/5Z06dst2B9jB9hD3sOt52GvbpQZtURxAPE34jOlcWmW3/PkcII19ATyAzFomOQ1BmJ9E7BNJjDGfqMORcAE3iVJxu+lkeCOyZzeHMGTrTRJs2HP8uDSNy0Re8ausN5OQ7Ut3Y0+6J0BZykDruya4UAwXUvXiiSxzGdm1JalxyNUNkGkR9utO20WCxWkEGimKkyCPoJaGadEZJLb/dYtQUVgng5vi4H1Y1+G3sgXKJ2DaQehavoEaI7y5g2zfLQv5uODmbsFl+F4eMH2+VD9lxugWyf6nV5poflQcURX9Op3+qrhQuR+9/e1O9AkodNiPKlGwZDtpy8tU3Q9KPbrlNJ9I7amWL5d5Mb+WVsZMhUdKIG00BZoreXu+SX4DR1UIdNTtUqE+yFzZ9/HlMuRTSSTEim1GsTziaTEFoZ8WY3VM1se+W/ZSqr5JWMv3bKeReoFoxJ8+UqhPtZ8yX6u/VZIFr+N6J9ZOHlWnek9Ixud6pe+R5w9IQRMVlinhS7Ld4O8FeC/5vrFqcoVFKjY95hI+/mJoReuYhNIk53LcNwvDrsoWOOVzCv6r05swhZK/XM1r8eHVfH9xPlV6FxOz8mX/7Wyxgi4UTP0CKLB0zLV6aarkfL6j6i8AD4Tdxq2mWx/0vjWGbbwr7A3c61cN3Kuk+8b81rLT08Pz0P0X</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950239D79C41715E0401F0A05990981</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950239D79C41715E0401F0A05990981</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_084159</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950239D79C51715E0401F0A05990981</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj6sQhyQUooJEufRkS7stoS27LyvjDMHbxIHY4bK//tihoUAvhz0SEvJkPPPNxd/MBcdJXPXanEMmaMo0v9vUf1kYLAdVbaMu/w2H1EKj4ULDsKc1hDDg8JxYuuZznoPPuMBMNPUqkqrINSxnhJDnVD1kVyzX+alrj5BxaVqqVJCurZOYca9w29TzjHkp5pR7DCfAPUG8oH0z8KSmh0tMeutii7JwmLVmQsw90ySVEAjEMamQNDEvzAOdi5B7AY0YFnkGLz5D3tRf7q5Wq8rKrqRZZFYRQiZqmFIn5DT6orfOyssQ+myabs8dzFJGCY7pH6xA3YCYpaHWjqM0o2KWfGDaMi2kTBuwJgaxHPZFN18dFOhOtHQAMuPY4DNslcaGMIUMGAHtYeg39S+nVXB7d5RhxqdplvCj899BAraEOJ1DaPAyshLd6RbfSVfrAojnMxLnnC7hVrXJHBPg2l0GU7oeUC6bL+RaUX5tzeWPll0G5G/KcmHuY5XQzXey06URcPF/arZfr62VRxzn0BrMILx7sizH/83qN/ZoEQUBvllHm+Vzs4Cwr7wFtSv3y/m4WXe99XLp8XqDJgO3i3E7GDfWPac+GdFLZuPVJuFklfae1un1w7d0GLu3cDnuxUv7j6ADv3N9/bt2L64zFi4eOjy0s83k7OoPDq/r49Hl5ufqNkU/+oxZbvdnr3/X7UTVx7G/zIIfOJrV2mJ4c4shWT4m4x8LSPpPC36PnuffzJ7tDr7icfvr2eqfy/GDEyWPg6shXGWd4J43X2Paj+FQWFJCkE9+AxHlUbWH39X6sl5YfE4vSkJDY1qoenPFUVwAE3pL3VLU4uWSgGjoyWJuz/2Ga6FGtXvu1OrtmlPvIQdZfdRGbqNhN85RyUFbFEcQOymbUuVLsey2fz4HSBKPAwshM5ZpTmbA9U8sdrHAms+G8nGkjMMoVSz+/FwVz8mkhiQPr/JVlK2YZU9coWu3qfjOvmftqYDskLrtA+oeAqFzCorfVYNz2eFcyFws8DIXsVVZ4gqDXE6ATJGwV3XqrslpMo9BITWTNMxjqMxn8yIzJt/+Vw1MeCEd9kbFw/swruNvZQqkTkiVAlexXIIsI7yZQZbnloF8HHBtP+DSfDsPqXpfMp8io2SL5PDTa5uo/tj1iIzoVyf4ZZW4d+onX3970/wElHmcj52jcEn33JbDVM4HyR6tspoLXFlU8uUyL+p3rpgxk+ZNSZCWGQDJJb1tRukzMHNnwjxpuuxQH3neyQ/x5WLGAoEFJLLbtOJ4wmoRAFerhS+fyfrUveXApcybgLV4T9aJ5QaiEH+6pBCPKD0pvpN/qzQLX8v1jq09PzJOuU8IyiJ1UnNk80FTkFSapZL40mzf+HsG3nN+KNwleYdFyG6a5AI+/qIpRmvqmJA0Z8Lv6oVgn2ULnGIzB+9V6Y2ZgslfRvOafziaxzeDQPJdgvWdLv1vZYMW7UJAVxtAgaWpr+WmKZ2zaI/VXwC+IfbzmlvttS/tfh0dEDtqd3cJPIik9Ub8VrKX0+P30PoX</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>F951092D7468A648E0401F0A05993970</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:F951092D7468A648E0401F0A05993970</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20140513_08421</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>F951092D7469A648E0401F0A05993970</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e34c814a-8ac5-424b-a19a-7d3453e3b9c7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1de1e00d-487c-492d-b21b-5e895e1ee18e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00020_ACCESS_UVTC_UserName_RequestorUserBAU_Active_RequesteeOtherBAU_UnlockMe_Role_DECE_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Second Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Second Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj6vgXCmJChKFXtJCL0C77b5UxjHgbeKksUNCf/3aoUmBXg57JCTkyXjmm4u/mSMGo9D0uozhlJOYKn6/rT4FTaNlIgtpZqC3NNsyLK3VDEzNnNrQNG00bQWBqviMZdinjEPK26qpG7amO5phT3Tds01Pbzaclv1bVe5xyoRpodLQVaWIQsq80m1bzVLqxZAR5lEYYeZx5I27w4EnND1YYVI7R2uUpcO0s+A88QBAjQAjHIaogeIIHIEtnaOAeWMyp5BnKX7zGbC2+nY3z/NGbjXidA5MXdeB7gKhEzAyP1A7P6rLOPDpLF6fe5DGlCAYklcoQQ0xX8SB0g3ncUr4IvrCtAEMXZrWcIE0ZNj0QAXvDkp0e1raApkyqLEFNCpjIzzDKaYIK3cjv60e7FfB9d1JCimbxWnEds7/BgnTJQ7jBAcaqyKr0O1v8ZN0dY4w8nyKwoyRJb6SbZJAhJlyk+IZKQaEieYLmFKWXymY+JGqyzD6l7IcgU2sAjr4JDt9MseM/5+abdZrbeUehhnuZPxhQK3B9bJ3d3lxESVn+c8z0D25CRZ5u4SwqbwGVZf77bzbrHVvvV3K/ZP4bHjJpsfDU2NpXtxQK389G/0Z/ubmEjfv8gcA5q3H3jMYG9Y9OF/8urhd4en8uJf2UuDfQTr6/Xj8wBzwi/3o+cnxCIHbuelYq8fidVVc6WHzAVuX027CUN94dm/7q0lyS6LC/Xl+Hbhnz/HPYDK9bv1y7y7PzsfRPJ+EN054u/zxiF5Hrp5e5sMWe74eRIMT1H6PaTOGbWFFCeNs+gcjXh1le/h95VTUC/Lv6UVKSKDNSlUvkRzFOKZc7chbklq8TBAQCTxRzPX51HUM3TX7h3bL6Dbt1olu68ap3tUd17XcQ73ioDWKHYi9mM6I9CVZdt0/3wNEkccwDXCqLeMMLTBTv7HYhxwqPh2JxxFThiexYHHHhm6RBHmKQkpfWkXspElmu4K5r2J+Ta/T7ozjdJu5rS3mHmFEEoIlvcv+ZqLBGRepeIHLjIdGYwkbFGdiAKSSgz3TbjmAkSgJsQQKojjIQtxIFkmZGMDW/6YGESulo5NJ+e6+DGv3W5UBoRMQqcBkLMdYVBF/GEGG51SBfB1wczPgynw3C4h8XiKdPCVojWT703uXyPaoW0RE9NQbPxkV7lp97+sfb4JvQIHdfNSOgiXZcFvNUjEeBHl0qmq+wMZLI1sus7J+h5IYU2EeCH40wBijTLDbahI/YwpqE2Cv4VKj3vFcy7fxZXxBxxxyHIluU8rjHpvFGDO5WfjilRT7ri1bLkXeOC74Z7JeKBYQifjbHQV5SOoJ8Y34y+P0PfDPbG34EXGKdYITOpcnOUZWXzQFioVZIngvTjeNf2bgM+fbwjrJNRYuummacfz1F0USWluFCMUZ5X5fLQWbJFvi5KsEe+9KH8yURP42mQv25WR+GA7Ggu4iqNa65L+VNVK2C8KqXABKLG21EIumcE7nG6T+BvADrzctxzw+7XZNp1vz+qHrOpbdrxO4FUnng/ijZCOnu++h8xc=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95106352BFAA25AE0401F0A0799534D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95106352BFAA25AE0401F0A0799534D</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F951092D7481A648E0401F0A05993970</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F951092D7481A648E0401F0A05993970</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_08425</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951092D7482A648E0401F0A05993970</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_084210</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_084210</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_084210</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj6vgXCmJChKFXtJCL0C77b5UxjHgbeKksUNCf/3aoUmBXg57JCTkyXjmm4u/mSMGo9D0uozhlJOYKn6/rT4FTaNlIgtpZqC3NNsyLK3VDEzNnNrQNG00bQWBqviMZdinjEPK26qpG7amO5phT3Tds01Pbzaclv1bVe5xyoRpodLQVaWIQsq80m1bzVLqxZAR5lEYYeZx5I27w4EnND1YYVI7R2uUpcO0s+A88QBAjQAjHIaogeIIHIEtnaOAeWMyp5BnKX7zGbC2+nY3z/NGbjXidA5MXdeB7gKhEzAyP1A7P6rLOPDpLF6fe5DGlCAYklcoQQ0xX8SB0g3ncUr4IvrCtAEMXZrWcIE0ZNj0QAXvDkp0e1raApkyqLEFNCpjIzzDKaYIK3cjv60e7FfB9d1JCimbxWnEds7/BgnTJQ7jBAcaqyKr0O1v8ZN0dY4w8nyKwoyRJb6SbZJAhJlyk+IZKQaEieYLmFKWXymY+JGqyzD6l7IcgU2sAjr4JDt9MseM/5+abdZrbeUehhnuZPxhQK3B9bJ3d3lxESVn+c8z0D25CRZ5u4SwqbwGVZf77bzbrHVvvV3K/ZP4bHjJpsfDU2NpXtxQK389G/0Z/ubmEjfv8gcA5q3H3jMYG9Y9OF/8urhd4en8uJf2UuDfQTr6/Xj8wBzwi/3o+cnxCIHbuelYq8fidVVc6WHzAVuX027CUN94dm/7q0lyS6LC/Xl+Hbhnz/HPYDK9bv1y7y7PzsfRPJ+EN054u/zxiF5Hrp5e5sMWe74eRIMT1H6PaTOGbWFFCeNs+gcjXh1le/h95VTUC/Lv6UVKSKDNSlUvkRzFOKZc7chbklq8TBAQCTxRzPX51HUM3TX7h3bL6Dbt1olu68ap3tUd17XcQ73ioDWKHYi9mM6I9CVZdt0/3wNEkccwDXCqLeMMLTBTv7HYhxwqPh2JxxFThiexYHHHhm6RBHmKQkpfWkXspElmu4K5r2J+Ta/T7ozjdJu5rS3mHmFEEoIlvcv+ZqLBGRepeIHLjIdGYwkbFGdiAKSSgz3TbjmAkSgJsQQKojjIQtxIFkmZGMDW/6YGESulo5NJ+e6+DGv3W5UBoRMQqcBkLMdYVBF/GEGG51SBfB1wczPgynw3C4h8XiKdPCVojWT703uXyPaoW0RE9NQbPxkV7lp97+sfb4JvQIHdfNSOgiXZcFvNUjEeBHl0qmq+wMZLI1sus7J+h5IYU2EeCH40wBijTLDbahI/YwpqE2Cv4VKj3vFcy7fxZXxBxxxyHIluU8rjHpvFGDO5WfjilRT7ri1bLkXeOC74Z7JeKBYQifjbHQV5SOoJ8Y34y+P0PfDPbG34EXGKdYITOpcnOUZWXzQFioVZIngvTjeNf2bgM+fbwjrJNRYuummacfz1F0USWluFCMUZ5X5fLQWbJFvi5KsEe+9KH8yURP42mQv25WR+GA7Ggu4iqNa65L+VNVK2C8KqXABKLG21EIumcE7nG6T+BvADrzctxzw+7XZNp1vz+qHrOpbdrxO4FUnng/ijZCOnu++h8xc=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F95106352BFAA25AE0401F0A0799534D</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZtU+o6EP5+fkWnfnSgTUt56QgzVeCeIqCAit4vTkxTiLZpbdIC/vqTFIu86eXcGUcm283usy95di8YDAPDdhjDCScRVdx2U302KwC/eA1YMk3xrwLqXgkiwyrpPqr7qNoApldTFZexFLuUcUh5UzV0UCnpVglU7nTdrhi23ihbuvWvqjzghAnTQqWsq8oyDCizc7dNNU2oHUFGmE1hiJnNkT1xBn1baNqwwKS2LtYoc4dJa855bGsaKnsY4SBAZRSF2oW2o3PhMXtCZhTyNMGfPj3WVD/vLhaL8sIsR8lMM3Rd1/SGJnQ8RmZnautXcRl7LvWj9fkK0ogSBAPyASWoAebzyFOcYBYlhM/Db0wDDejSdAkvUQmBCj1TtS8HOboTLe2ATBgssTkEhbEx9nGCKcLK/dhtqmenVXB99y6BlPlRErK9899BwjTDQRRjr8SKyAp0p1s8kq7WBUa2S1GQMpLhoWyTGCLMlNsE+2TZJ0w0n8eUvPzKkok/UnQZRn9TlgttG6uArh3JTpvMMOP/p2bb9VpbeYBBilurx9H19KNi+L2Hx+vukmej9uvNZdzPanozh7CtvAa1Kffneb9ZN731eakz4b23MDLOk0a/3qvSt/PRqNOZ8u7bbXhH58m95/2+/YdWrevlHJw/eeHr1Pfx8PGy6nSh826ZA+YPABh1jNfXXwB7w3qvO5nOurOG27ufXd9Oos60G9bnWTx8+D0IZjU6uYoHhqt/9J7OzQbtVzqE1asfo/GqP37vdM3QaozAamj+cqcd53y6cqbkvv9Um6Hx/aL5FdN2DLvCghIm6csrRrw4yvZw20pX1Avyn+lFSohX8nNVO5YcxTimXG3JW5Ja7FQQEPFsUcz1uduwgF5z9G7HqINaFXT0ig66uqPXGg3LqjgFB61R7EG8iqhPpC/Jsuv++RkgCm2GqYeTUhalaI6Z+oPFNuRQcelYPI6IMnwXCRaPa6AGTZJ5jWUKXiwDglUY6cvMUpVhxG/oTeL4HCe71G3uUPcYIxITLPldNjgTHc64yMU7zFIegHIGyxSnYgIkkoRto1K3NEbCOMASqRZGXhrgcjyP88xobP1rCC5iuXTcucsf3rdx7X8rUiB0PCIVmIzlEosy4oMZBGyrCOT7gKvbARfmndQj8n2JfPKEoDWS3U9fbSL7Y9MjIqLnq8kzKHBv1E++fnhT+wGUtp+PjSMvI1tui2Eq5oNgj1ZRzXdYfi+nWZbm9atJZkyEeU0QJNAmGKWC3lZ30Rum2saEdtJ02aDe87yR7+JL+ZxOOOQ4FN2m5McTVosJZnK1cMUzWZ66t+y4FHnjeMmPya4CsYFIxD8uKchGUk+Ib8XPIkq8r3IdsbXlR8Qp9glO6Eye5BxZfdMUKBJmiSC+KNk2fszAMee7wk2SN1i46KaXlOPvvyiS0ZoqRChKKXfbai7YZtkcJ1/F2P5SOjCTM/nnaF6yb0fz46A/EXwXQnWjS/5buUTydkFYlRtAjqWpLsWmKZzT2RarfwI8IPaqaRmXXccxLGeH2M1Ke5PAnUhaB+JDyVZO999D6w8=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F95107A0FE281761E0401F0A0799554A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F95107A0FE281761E0401F0A0799554A</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_08428</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F95107A0FE291761E0401F0A0799554A</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZvU+I+EH7vp+j0Xt5A/0Cp7QgzBUQ5xXNAPc83NzHdQrRNS5MA+ukvKbYCoj/uN8MMk+1m99k/eXZPGEpi2w8Yg5yTlGrDflv/Y7omDkPTqdn2o1tretirIdMKa1Hj+Bhj5xF7bqhrQ8YEDCnjiPK2bptWsyavWM0b0/Sbtm/ZdbtlPejaHeRMmpYqdVPXVklMmV+4besip36KGGE+RQkwn2N/EowufanpoxKT3jlZoywc5p0Z55lvGLgeAoY4xnWcJsaJsaVzEjJ/QqYUcZHDm8+QtfW3u8vlsr5s1NN8atimaRqmZ0idkJHpN71zVF6GcEijdH3uIZpSglFMXpECNQI+S0MtiKdpTvgs+cS0ZVimMl2DFa5hq0m/6ca7gwLdgZa2QOYM1dgMWaWxMUSQA8Wg3Y6Hbf3bYRVc373JEWVRmids5/xvkIAuIE4zCGusjKxEd7jFPenqnAD2hxTHgpEFXKk2yRAGpl3nEJHVJWGy+UKmFeXXVkz+SNllgP+lLCfGJlYJ3diTnT6ZAuP/p2ab9VpbuUOxgE708uMOut7w9XsmRtbt4tf1ywh/F13XXbYLCJvKa1BVud/Ou81a9dbbpSxs0YeueL58GT31rqN8er/KLgaOfbX48XvUmJ49jpZR0BwNnrxuHEfHx+C67DQO6WNjII7ZKG79WoUJLFt8gujR2bnr0SsS9m4fktltzxknpxNyNqDnF4Z5Hf3iCR7LYp2Tp8xzhMk9z753b11GHp5A5M/erQsX5zf9YN67vmJHTXNuBigY3vGee0ZCSuB3+z2mzRi2hSUlTMTjE2BeHlV7DPvaQNYL8a/pRUmIfBCFqp8pjmIcKNc76paiFl9IAiKhL4u5Pg88x+xLnnP7TqtnnrZOzaZpDczAdGSQbtcpOWiNYgdiL6URUb4Uy67752uAOPEZ0BDy2iIVeAZM/8JiH3GkDelYPo6UMrhJJYvPps8iba7oq21bluU0uNt8jeZz8HTtKuU/6c88iDjk29Td2KLuMWCSEVD8rhqcyQ5nXOZijhaCx1Z9geoUhJwAuSJh324eOwYjSRaDQmokaShiqGezrMiMwdb/dg1hVkjHpzfFw/s0rt1vZQqkTkiUAlOxdEGWEfbMILMM5POAW5sBl+YDERL1vmQ+eU7wGsn2p/c2Uf1R9YiM6E9v8scqcVfqB1//eNP4ApSxm4/KUbggG27LYSrng2SPTlnNOarP62KxEEX9XMWMuTRvSIK0jAlgIent5SZ9BmpUJoyDpkuFesdzJd/GJ/iMTjjikMhu04rjAavFBJhaLYbymawO3Vu2XMq8cVjxfbJeLDcQhfjLJQX7WOlJ8bX8W6b5e+D7bG34kXHKfYITOlUnNUdePmkKnEqzRBJfmm8a32dgn/NtYZXkCguX3fQoOHz+RVOM1tYRxqmgfNjXC8EmyxY4+UsG/rvSBzMFk7+N5hX7dDTfjy4nku8SpFe65L+Va6RoFwy62gAKLG19JTdN6ZxON1j9DeAOsVtmq+HY3UEQ2E5QEbvreU6j2a8SuBVJ54P4o2Qjp7vvofMX</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>F950D2017D56C0E6E0401F0A059927B5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:F950D2017D56C0E6E0401F0A059927B5</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20140513_084210</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>F950D2017D57C0E6E0401F0A059927B5</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e34c814a-8ac5-424b-a19a-7d3453e3b9c7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1de1e00d-487c-492d-b21b-5e895e1ee18e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00021_ACCESS_UVTC_UserName_RequestorUserSAU_Active_RequesteeSelf_UnlockMe_Role_DECE_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj0chFwI0UUFKgbbp9sICZbv7UnmdgZgmDsROoP31xw5NCpT2sEdCQp6MZ765+Js5YyiOLNdjDFJOEqr4vbb6ZJtg/6k7hobqFtLsqR1oTqMZaA3HqNeDU7PehLqq+Ixl4FPGEeVt1TJMWzMammmPDcO1Ldds1BzT/K0qE0iZMC1UaoaqrOOIMrdw21azlLoJYoS5FMXAXI7dkXd74wpNF5WY1M7ZBmXhMO2EnC9cXce1ADBEEa7hJNbP9B2ds4C5IzKjiGcpvPkMWFt9u7tarWqrei1JZ7plGIZuOLrQCRiZfVM7J+VlCHw6TTbnLqIJJRhF5BVJULfAwyRQvGiWpISH8SemTd00pGkN1ljDpk2/qfq7gwLdkZZ2QKYMaSxEZmlsCFNIgWJQHoZ+W/12XAU3d8cpomyapDHbO/8dJKA5RMkCAo2VkZXojrd4IF2dM8CuT3GUMZLDnWyTBcLAlEEKU7K+IUw0X8CUovzKmokfKbsM8N+U5Uzfxiqg6wey0yMzYPz/1Gy7XhsrExRl0Jksuw0j6DeDZfj88643IONLMzW9V75etQsI28obUFW53877zVr11tul/iqcP/9+yMP5Y+o/XNSve45zNfHOu3E6Zs9XPybTH95qCP38sTc89y8tTjmbj71w3nppXg4u/QScX7fdUTaY/hqfDLqLCzSZ2j+8xxu6uHOuk3iihyud/Pr53YdX/DqcPF6Bswzz+fPgn+bofuTTOkof+HcDY+DX9034nubwMs5W3ZOriEHLvOoS77phjJaT1xuj/R7Tdgy7wpISRtmfOWBeHmV7+D3lQtQL8a/pRUpIoE0LVXchOYpxoFztyFuSWtxMEBAJXFHMzfnCaZhG0+p5jfOufd5v9Q3bMC8Mz2g4jnXab5YctEGxB7Gb0CmRviTLbvrna4A4dhnQAFItTzIcAlO/sNhDHCk+HYrHkVAG40SwuJnNbDuM4ySr13m+TJZz9hrMWlOkKncJv6f3qTflkO5Sd32HuoeAyYKA5HfZ4Ex0OOMiF0uUZzwyazmqUcjEBEglCbuWfdrQGYkXEUikepwEWQS1RbgoMqOzzb+lIcwK6bA/Lh7ep3HtfytTIHQCIhWYjOUcRBnhwAwyykA+D7i5HXBp3ssCIt+XyCdPCd4g2f303iayP6oeERE9dUdPZom7Uj/6+seb+heg9P18VI6CnGy5LYepmA+CPTplNZeotqxleZ4V9WtJZkyFeV0QpKmPAGeC3l7GyTNQvTKhHzVdKtR7niv5Lr6Mh3TEEYdYdJtSHI9YLUbA5Grhi2eyPnZv2XEp8sZhzQ/JupHYQCTiL5cU7GKpJ8QD8bdK0uC9XAdsbfkRcYp9ghM6kyc5R14+aQqcCLNEEF+Sbhs/ZOCQ811hleQKCxfd9Cfj8PkXRTJaW0UYJxnlfk8tBNssW+DkLwtw35U+mCmY/G00r9mno/nx9mYk+C5GaqVL/ltZI0W7YFDlBlBgaatrsWkK53S2xepvAPeI3bCsU89r9o1Wz/IqYm85jmH3+lUCdyLpfBB/lGzldP89dP4F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950228AA6E07D2AE0401F0A079904DE</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950228AA6E07D2AE0401F0A079904DE</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F951062DA5BC4BE7E0401F0A059928E6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F951062DA5BC4BE7E0401F0A059928E6</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_084214</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951062DA5BD4BE7E0401F0A059928E6</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_084217</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_084217</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_084217</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj0chFwI0UUFKgbbp9sICZbv7UnmdgZgmDsROoP31xw5NCpT2sEdCQp6MZ765+Js5YyiOLNdjDFJOEqr4vbb6ZJtg/6k7hobqFtLsqR1oTqMZaA3HqNeDU7PehLqq+Ixl4FPGEeVt1TJMWzMammmPDcO1Ldds1BzT/K0qE0iZMC1UaoaqrOOIMrdw21azlLoJYoS5FMXAXI7dkXd74wpNF5WY1M7ZBmXhMO2EnC9cXce1ADBEEa7hJNbP9B2ds4C5IzKjiGcpvPkMWFt9u7tarWqrei1JZ7plGIZuOLrQCRiZfVM7J+VlCHw6TTbnLqIJJRhF5BVJULfAwyRQvGiWpISH8SemTd00pGkN1ljDpk2/qfq7gwLdkZZ2QKYMaSxEZmlsCFNIgWJQHoZ+W/12XAU3d8cpomyapDHbO/8dJKA5RMkCAo2VkZXojrd4IF2dM8CuT3GUMZLDnWyTBcLAlEEKU7K+IUw0X8CUovzKmokfKbsM8N+U5Uzfxiqg6wey0yMzYPz/1Gy7XhsrExRl0Jksuw0j6DeDZfj88643IONLMzW9V75etQsI28obUFW53877zVr11tul/iqcP/9+yMP5Y+o/XNSve45zNfHOu3E6Zs9XPybTH95qCP38sTc89y8tTjmbj71w3nppXg4u/QScX7fdUTaY/hqfDLqLCzSZ2j+8xxu6uHOuk3iihyud/Pr53YdX/DqcPF6Bswzz+fPgn+bofuTTOkof+HcDY+DX9034nubwMs5W3ZOriEHLvOoS77phjJaT1xuj/R7Tdgy7wpISRtmfOWBeHmV7+D3lQtQL8a/pRUpIoE0LVXchOYpxoFztyFuSWtxMEBAJXFHMzfnCaZhG0+p5jfOufd5v9Q3bMC8Mz2g4jnXab5YctEGxB7Gb0CmRviTLbvrna4A4dhnQAFItTzIcAlO/sNhDHCk+HYrHkVAG40SwuJnNbDuM4ySr13m+TJZz9hrMWlOkKncJv6f3qTflkO5Sd32HuoeAyYKA5HfZ4Ex0OOMiF0uUZzwyazmqUcjEBEglCbuWfdrQGYkXEUikepwEWQS1RbgoMqOzzb+lIcwK6bA/Lh7ep3HtfytTIHQCIhWYjOUcRBnhwAwyykA+D7i5HXBp3ssCIt+XyCdPCd4g2f303iayP6oeERE9dUdPZom7Uj/6+seb+heg9P18VI6CnGy5LYepmA+CPTplNZeotqxleZ4V9WtJZkyFeV0QpKmPAGeC3l7GyTNQvTKhHzVdKtR7niv5Lr6Mh3TEEYdYdJtSHI9YLUbA5Grhi2eyPnZv2XEp8sZhzQ/JupHYQCTiL5cU7GKpJ8QD8bdK0uC9XAdsbfkRcYp9ghM6kyc5R14+aQqcCLNEEF+Sbhs/ZOCQ811hleQKCxfd9Cfj8PkXRTJaW0UYJxnlfk8tBNssW+DkLwtw35U+mCmY/G00r9mno/nx9mYk+C5GaqVL/ltZI0W7YFDlBlBgaatrsWkK53S2xepvAPeI3bCsU89r9o1Wz/IqYm85jmH3+lUCdyLpfBB/lGzldP89dP4F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950228AA6E07D2AE0401F0A079904DE</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdU+o6FH33V3Tqo1Oa1iLSEWYKlEM9ehTqVY8vZ0K6C9E2rU2K6K+/abEVEL2cO8MMk92dtdf+yErOOI4j03Y4h0zQhCneoKP+McAIrHBKNANbTc0KAqS1zdDULESaRssC6ySYqorHeQ4e4wIz0VFNZFgaamqGdYOQbZm20W4ct9GDqtxCxiW0dGkgVVnGEeN2Gbaj5hmzE8wptxmOgduC2L5zeWFLTxtXnNTu2YplGTDrzoVIbV0njQAIRBFpkCTWz/QNn7OA2z6dMSzyDN5jBryjvu99eXlpvBw3kmymmwghHbV16RNwOjtUuwfVZgg8FiardR+zhFGCI/qGC1KXIOZJoDjRLMmomMdfQBu6gQpoDZZEI4bFDlX9I0DJbk+kDZIZxxqfY6MCm0AIGTACyj8Tr6Me7tfB1d6bDDMeJlnMt9Z/RwnYAqIkhUDjVWYVu/0Rd5SrewbE9hiJck4X8KsYkxQT4Mp1BiFdXlAuhy/gStl+Zcnlj1ZTBuRv2nKmr3OV1PUd1RnQGXDxf3q23q8Vyi2Ocujq9/eT0Qi1XQ/6+XnqHl2P04QNrR+60ykprDuvSNXtfl9vD2s9W++bwsWjf3Q78Ofu0c/TC4Ssh+iSnR9NRtP80X+6er59G939zttsjB7uend3vyfx6Coe8wcnsIYjPE1d5r45z5cjt9eDA7/vTi7M8dF9OO4PxYhPp4/kZXw6Po6yS4969z+OyfhBnz5GrdYcRtHFEjutU5Zf34yf8t4vI3wymuYwbf3stZvswH3Iz3+e/o5MfO9HU8paAnU+clrPYdNYSYKfTx+BiGpZjIc3UIayX1h8Ly+FhQZaWLraaaFRXAATarfYVUiLnUsBooEtm7laD9tNZB4bDmqZRrPv9lxkIWOIHNRst1H7ZFhp0IrFFsV+wkJaxCpUdjU/3xMksc2BBZBpiyQnc+DqN4gDLLDisYk8HAnjcJNIFRdREDTnDD9aizZLkrcmjcyQvoKq/ErEFbvKnFBAtqncxxvKPQFCUwqFvBfzzeWAcyFL8YwXuYiMxgI3GOTyAsgKDbZN67SpcxqnERRE9TgJ8gga6TwtC6Pz1b+pYcJL68S9Kc/dl2ltf6sqIH0CWjjwIpceyC7CjisIVYl8nfDJesIVvJMHtDhespwio2TFZPPTx5QU41GPiMzoT9//Y1S8a/e9t3/eqX9DSt+uRx0oWNC1sNVdKq8HKR7dqpvPuPHcyBeLvOxfqxDGTMLrUh8N3QeSS3V7vUmegOk1hL7X5VKz3opc2zf55WLOfIEFxHLalHK5x8vCB168LDx5Spb7Pls2Qsq6CViKXbZ+JB8gBeNv3yjEJoWfNF/Lv5ckCz7atQNrLY7MUz4nBGWzYlVcI69fDAVJJCyVupdk6+C7AHYF3zTWRa65CDlN01zA11+UQtA6KiYkyZnwBmppWBfZkqd4TcH+cPoEUwr5+8285F/ezPeXF76UuxirtS/9b2eNluNCpLpJ/5JLR13Kh6YMzmZrov5O8JOum6eOc+Ki1sB0al1vSV23Bm5dwI1Mup/Mny1rNd0+D91/AQ==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950231A07215CEBE0401F0A0599096F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950231A07215CEBE0401F0A0599096F</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_084217</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950231A07225CEBE0401F0A0599096F</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00022_ACCESS_UVTC_UserName_RequestorUserSAU_Active_RequesteeFAU_UnlockMe_Role_DECE_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+o6EP7ur+jUj05JW96kI8wgiKdX9HgAPR6/OCHdQrRNoUkA/fU3KbYCopdzZ5hhst3sPrv75EnOOI4j12tzDqmgCTP8btN8IuO67bi10Go4DrYq5XpgnVbc0AoBu1Cxx3ZI6qbhcy7BZ1xgJpqmazsVy65aTmVk217F9Vy3VHfqj6ZxDylXoZVLyTaNVRwx7mVpm6ZMmZdgTrnHcAzcE8Qbtq/7nvL0cI7JbJ2tUWYJ09ZUiJmHECkFQCCKSIkkMTpDWz5nAfeGdMKwkCm85wx403zfu1wuS8tyKUknyLVtG9kNpHwCTifHZuso3wyBz8Jkve5gljBKcETfsAZ1DWKaBEY7miQpFdP4i9AOcmwd2oIVsYhTYccm+kiQoTsw0hbIlGOLT7GTBxtACCkwAsbdwG+ax4dNcL13lGLGwySN+c767yABW0CUzCCweF5Zju7wiHva1ToD4vmMRJLTBdxomswwAW7cphDSVZ9yRb6AG9n4jRVXP5qzDMjfjOUMbWJV0NGe7nTpBLj4PzPbnNc6yj2OJLT8S3z6T3D/5+XHaBQl4flN+W4cP9YnPcXXDMKm8xpUMe739S5ZC269bxK3nQFFnR/j5Ut9uqCyNpfLqxFdDM559+6xw96Gy0d5EqDfJ+OLiLhv1/TXxfCmev96mY5B8HsX93/fzp/t86ur9tGqV/UferNpOSzzH4Pq7cPbn/5zNHrw2xNZvr58WZygKSxZTTa6yKlX5zZGL/27t6vwuXonf/kXKLxMnqfXQ17rPhz5yza15/3p6n5ZGZ7Yz0KeNj9q2qxh25hLwlCOn4GIfKnp4XeNnpoXFt/Li7bQwAozV2+mNYoLYMJs6V1aWjypBIgGnhrmet1rVG3XcdvdWrvsNrq9C7tiOz27bVcbDbvRdnINWqPYgdhJWEh1Lq2ya/58D5DEHgcWQGotEkmmwM1vInaxwIbPBupwJIzDKFEq7iQsZa9hWlvNZOyQV3sxo+5pvMRKhW8S8ZP9TNuhgHRbu8tb2j0AQmcUtMBrhnNFcS5UM+Z4IUXklBa4xECqKyDVKuy5ldMq4jSeRaChojgJZASl2XSWtQbx9b9rYcIz6+BilJ28Lwvb/Zb3QPkEVDtwXcs5qDnCnkvIyQv5uuDaZsF5+LYMqD5gqqEipWSNZPvTB080QQqSqIqeOsOnggyF+8HbP+9E34BCu/0oEgULupE2v03VBaHko5VPc45L85JcLGQ2v7qWxlSFR0ohHTQEIpW+vY6SF2CoCIEOul4K1DuZC/s2PimmbCiwgFixzciWB7wthsD128JX52R16MNlK6Xqm4CV2GfrROoJohF/+0ohHtF+ynyr/pZJGnyMa0+sjTyqTvWgEJRN9EpfJK9fkIIkKixVypekm8H3BdiXfNtYNLnAIhSbxlLA118MLWlNExOSSCb8rpkZNmU2wyleZ+B9OH0Kk0n5+9284l/ezQ/X/aESvBibhS/9b2eLZnQhYOonQIalaa7UU1MlZ5MNWX8H+EnZXadXcerdnmtXCmWvK2V3ux+HeauS1ifzZ8tGT3fPQ+tf</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950221F417DF204E0401F0A079902D1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950221F417DF204E0401F0A079902D1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950212AD6A329DFE0401F0A059909A1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950212AD6A329DFE0401F0A059909A1</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_084221</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950212AD6A429DFE0401F0A059909A1</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_084224</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_084224</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_084224</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+o6EP7ur+jUj05JW96kI8wgiKdX9HgAPR6/OCHdQrRNoUkA/fU3KbYCopdzZ5hhst3sPrv75EnOOI4j12tzDqmgCTP8btN8IuO67bi10Go4DrYq5XpgnVbc0AoBu1Cxx3ZI6qbhcy7BZ1xgJpqmazsVy65aTmVk217F9Vy3VHfqj6ZxDylXoZVLyTaNVRwx7mVpm6ZMmZdgTrnHcAzcE8Qbtq/7nvL0cI7JbJ2tUWYJ09ZUiJmHECkFQCCKSIkkMTpDWz5nAfeGdMKwkCm85wx403zfu1wuS8tyKUknyLVtG9kNpHwCTifHZuso3wyBz8Jkve5gljBKcETfsAZ1DWKaBEY7miQpFdP4i9AOcmwd2oIVsYhTYccm+kiQoTsw0hbIlGOLT7GTBxtACCkwAsbdwG+ax4dNcL13lGLGwySN+c767yABW0CUzCCweF5Zju7wiHva1ToD4vmMRJLTBdxomswwAW7cphDSVZ9yRb6AG9n4jRVXP5qzDMjfjOUMbWJV0NGe7nTpBLj4PzPbnNc6yj2OJLT8S3z6T3D/5+XHaBQl4flN+W4cP9YnPcXXDMKm8xpUMe739S5ZC269bxK3nQFFnR/j5Ut9uqCyNpfLqxFdDM559+6xw96Gy0d5EqDfJ+OLiLhv1/TXxfCmev96mY5B8HsX93/fzp/t86ur9tGqV/UferNpOSzzH4Pq7cPbn/5zNHrw2xNZvr58WZygKSxZTTa6yKlX5zZGL/27t6vwuXonf/kXKLxMnqfXQ17rPhz5yza15/3p6n5ZGZ7Yz0KeNj9q2qxh25hLwlCOn4GIfKnp4XeNnpoXFt/Li7bQwAozV2+mNYoLYMJs6V1aWjypBIgGnhrmet1rVG3XcdvdWrvsNrq9C7tiOz27bVcbDbvRdnINWqPYgdhJWEh1Lq2ya/58D5DEHgcWQGotEkmmwM1vInaxwIbPBupwJIzDKFEq7iQsZa9hWlvNZOyQV3sxo+5pvMRKhW8S8ZP9TNuhgHRbu8tb2j0AQmcUtMBrhnNFcS5UM+Z4IUXklBa4xECqKyDVKuy5ldMq4jSeRaChojgJZASl2XSWtQbx9b9rYcIz6+BilJ28Lwvb/Zb3QPkEVDtwXcs5qDnCnkvIyQv5uuDaZsF5+LYMqD5gqqEipWSNZPvTB080QQqSqIqeOsOnggyF+8HbP+9E34BCu/0oEgULupE2v03VBaHko5VPc45L85JcLGQ2v7qWxlSFR0ohHTQEIpW+vY6SF2CoCIEOul4K1DuZC/s2PimmbCiwgFixzciWB7wthsD128JX52R16MNlK6Xqm4CV2GfrROoJohF/+0ohHtF+ynyr/pZJGnyMa0+sjTyqTvWgEJRN9EpfJK9fkIIkKixVypekm8H3BdiXfNtYNLnAIhSbxlLA118MLWlNExOSSCb8rpkZNmU2wyleZ+B9OH0Kk0n5+9284l/ezQ/X/aESvBibhS/9b2eLZnQhYOonQIalaa7UU1MlZ5MNWX8H+EnZXadXcerdnmtXCmWvK2V3ux+HeauS1ifzZ8tGT3fPQ+tf</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950221F417DF204E0401F0A079902D1</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0Tp41HIhXBpVJBoKW126QXCLj19qYwzBNNgQ+xw6ddvOzQUKO1hHwkJeTKeWTOzvOxzjiax4zU4h0QQRjW/WdNfi84Qg41tI7SGRcOF8tAYAALDHhSLyKpCZQADXfM5T8GnXCAqarpj2a5hlQzb7VmW5zqeUypUK6UXXXuChMvQ0qVg6dpyElPuZWlreppQjyFOuEfRBLgnsBc07tqe9PRQjkmvn69RZgmT+kiIqWeauBAChjjGBcwm5rm543Meci8gEUUiTeAjZ8hr+sfexWJRWBQLLIlMx7Is0zozpU/ISXSq10/yzRD6dMjW60tEGSUYxeQdKVB3IEYs1BpxxBIiRpNvQtumbanQBiyxgW2XnurmZ4IM3ZGRdkAmHBl8hOw8WBeGkADFoP3u+jX99LgJrvf2EkT5kCUTvrf+O0hA5xCzKYQGzyvL0R0f8UC76ueAPZ/iOOVkDveKJlOEgWuPCQzJsk24JF/ItWz82pLLH8lZBvhvxnJubmOV0M0D3WmSCLj4PzPbntc6yhOKU6i7L/0o6i9pOKSpf3GLnbj97PSv3etStZZB2HZeg9qM+2O9T9YNtz42vT9VedBP23ds0BOd4IFdIfE2XjzfxD24f/Qloa9G8DQfBMQajSvvb+X59Yo1uq1+0rlfjfudKC5PVw+sUWpGvZPHbhguL917iMKrf4L27cPDs9+5ueuPHYHn7VGCl2+L28fVr4sb0rpLaDN5b5d+t8bujFidYDavXgd8/PJvZfHLebo+6SSloH19RmfRKO693PPyTaf2WdN2DbvGXBKCdDAGLPKlooff1FpyXkj8LC/KQkJjmLl6U6VRXAAVel3tUtLipVKASOjJYa7XrbOSbZWLpWrZaTatC+vKci27ZTWsytlZqViq5Bq0RrEH8ZLRIVG5lMqu+fMzQDzxONAQEmPOUjwCrv8QsYkE0nzalYeDUQ49JlV8lhZni+nZe5FWbRG9z6bWaoUrcUXX7pl4oA9JYygg2VXu4o5ydwGTKQEl74rfXBKcC9mKGZqnIrYLc1SgkMoLIFEa7DlutWRyMpnGoICaExamMRSmo2nWGJOv/x0DYZ5Zu1e97Nx9W9b+t7wD0ickyoGrWi5AThEOXEF2Xsj3BZe3C87DN9KQqOMl2ykSgtdIdj99skTRY0MRWdHrZfBq57g37kdv/7rT/AGUud+PTaJwTrbS5nepvB6keNTzac5QYVZI5/M0m19FCWMiw5tSH20zAJxKdVv12BtQcxPCPOpy2aDey7yx7+JLxYgGAgmYSLZp2fKIl0UAXL0sfHlKlsc+W3ZSyr4JWIpDtstYPkAU4h/fKNjDyk+aH+XfgiXh57gOxNrKI+uUzwlBaKRW6hpZfUMKzGRYInWPJdvBDwU4lHzXuGnyBouQbBqkAr7/oilBq+kIY5ZS4Tf1zLAtshlOsZqC9+n0JUwm5B8385J/ezM/37UDKXcTpG98yX87GySjCwZdPQAyLDV9KR+aMjmNtkT9A+CerluOY7dcu9JsOZa7reuW0/w8zDuV1L+Yv1q2erp/Hup/AA==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F9510635862DD0B0E0401F0A07995357</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F9510635862DD0B0E0401F0A07995357</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_084224</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F9510635862ED0B0E0401F0A07995357</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00023_ACCESS_UVTC_UserName_RequestorUserSAU_Active_RequesteeBAU_UnlockMe_Role_DECE_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtb+I4EP6+vyJKP65C4hAKiQoShdLLbt8OaLXbL5VxBuJr4qSxA6G//uzQpEBpjz0JCXkynnnmxc/MGcdxZHt9ziETNGGaP+zqT3PSRA5CYLRJ+9RwArCNWbtFDGxbc2S1Z000s3XN5zwHn3GBmejqtoUcw2oZyJlalufYnu02mi561LUHyLg0LVUalq4VccS4V7rt6nnGvARzyj2GY+CeIN6kf33lSU0PV5j03tkGZekw64VCpJ5pkkYABKKINEgSm2fmjs5ZwL0JXTAs8gzefAa8q7/dXa1WjVWzkWQL07Ysy7RcU+oEnC5O9N636jIEPpsnm/MAs4RRgiP6ihWoaxBhEmj9aJFkVITxJ6aRiSxl2oCCGAQ57EQ33x2U6I60tAMy49jgIUaVsTHMIQNGQLsf+1395LgKbu5OM8z4PMlivnf+M0jAlhAlKQQGryKr0B1v8UC6emdAPJ+RKOd0CTeqTVJMgGt3GcxpcUW5bL6Aa2X5tYLLH626DMiflOXM3MYqoZsHsjOkC+Di/9Rsu14bKw84yqGXjq/z4txeD8mteZm+dlb+dUq+u1Y2veiWELaVN6Dqcr+d95u17q23SwItouIiu7z1H50iz+9n3wVMfkeC2M/51cQNp9Aaixdikv7SGbenQH/5D2ZM87u1a9N1uHg0g7u/g8c1ifPgm2Wi+4vF8sfjdDxYDn7H5w52Hff2fAjPp638ns9n48sbh/Gff5GpfY1+JFdXA6sN3Lp0h6MJd/z79A5m6Wn4kqbf7kK/2Rr1H9sz/vN13nQXcN99j2k7hl1hRQmTfPYPEFEdVXv4Q20k64XF1/SiJDQw5qWqlyqO4gKY0HvqlqIWL5cERANPFnNzHrktZLlodDFw267lDi8sx0Ijq2+1XLfptp2KgzYo9iAOEjanypdi2U3/fA2QxB4HFkBmLJOchMD1LywOscCaz8bycSSMwzSRLG6HYQetT3nhLjoIWy0HZsXqpUNfde0mEbfsNuvPBWS71N3coe4xEJpSUPyuGpzLDudC5uIFL3MRocYSNxjkcgJkioQ92+m0TE7jNAKF1IyTII+gkYZpmRmTb/5tAxNeSscX0/LhfRrX/rcqBVInoEqBq1jOQZYRDswgVAXyecCn2wFX5vt5QNX7kvkUGSUbJLuf3ttE9UfdIzKip8HkCVW4a/Wjr3+8aX4BytzPR+0oWNItt9UwlfNBskevquYLbrw08uUyL+vXVsyYSfOmJEhkToDkkt7W0+QZmFmbMI+aLjXqPc+1fBdfLkI2EVhALLtNK49HrBYT4Gq18OUzKY7dW3ZcyrwJKMQh2SCSG4hC/OWSQjyi9KT4Tv6tkix4L9cBW1t+ZJxynxCULdRJzZH1J01BEmmWSuJLsm3jhwwccr4rrJNcYxGym2a5nAifftEUo3V1TEiSM+EP9VKwzbIlTrFOwXtX+mCmZPK30VzwT0fzr+urieS7GOu1Lv1vZYOW7UJAVxtAiaWrF3LTlM7ZYovV3wDuEbtl233UcezBqDNo18Tedl3LHrp1Anci6X0Qf5Rs5XT/PfT+BQ==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95022A1842CF8C7E0401F0A079902D9</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95022A1842CF8C7E0401F0A079902D9</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F951091FEC97909DE0401F0A05993974</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F951091FEC97909DE0401F0A05993974</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_084228</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951091FEC98909DE0401F0A05993974</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_084236</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_084236</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_084236</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtb+I4EP6+vyJKP65C4hAKiQoShdLLbt8OaLXbL5VxBuJr4qSxA6G//uzQpEBpjz0JCXkynnnmxc/MGcdxZHt9ziETNGGaP+zqT3PSRA5CYLRJ+9RwArCNWbtFDGxbc2S1Z000s3XN5zwHn3GBmejqtoUcw2oZyJlalufYnu02mi561LUHyLg0LVUalq4VccS4V7rt6nnGvARzyj2GY+CeIN6kf33lSU0PV5j03tkGZekw64VCpJ5pkkYABKKINEgSm2fmjs5ZwL0JXTAs8gzefAa8q7/dXa1WjVWzkWQL07Ysy7RcU+oEnC5O9N636jIEPpsnm/MAs4RRgiP6ihWoaxBhEmj9aJFkVITxJ6aRiSxl2oCCGAQ57EQ33x2U6I60tAMy49jgIUaVsTHMIQNGQLsf+1395LgKbu5OM8z4PMlivnf+M0jAlhAlKQQGryKr0B1v8UC6emdAPJ+RKOd0CTeqTVJMgGt3GcxpcUW5bL6Aa2X5tYLLH626DMiflOXM3MYqoZsHsjOkC+Di/9Rsu14bKw84yqGXjq/z4txeD8mteZm+dlb+dUq+u1Y2veiWELaVN6Dqcr+d95u17q23SwItouIiu7z1H50iz+9n3wVMfkeC2M/51cQNp9Aaixdikv7SGbenQH/5D2ZM87u1a9N1uHg0g7u/g8c1ifPgm2Wi+4vF8sfjdDxYDn7H5w52Hff2fAjPp638ns9n48sbh/Gff5GpfY1+JFdXA6sN3Lp0h6MJd/z79A5m6Wn4kqbf7kK/2Rr1H9sz/vN13nQXcN99j2k7hl1hRQmTfPYPEFEdVXv4Q20k64XF1/SiJDQw5qWqlyqO4gKY0HvqlqIWL5cERANPFnNzHrktZLlodDFw267lDi8sx0Ijq2+1XLfptp2KgzYo9iAOEjanypdi2U3/fA2QxB4HFkBmLJOchMD1LywOscCaz8bycSSMwzSRLG6HYQetT3nhLjoIWy0HZsXqpUNfde0mEbfsNuvPBWS71N3coe4xEJpSUPyuGpzLDudC5uIFL3MRocYSNxjkcgJkioQ92+m0TE7jNAKF1IyTII+gkYZpmRmTb/5tAxNeSscX0/LhfRrX/rcqBVInoEqBq1jOQZYRDswgVAXyecCn2wFX5vt5QNX7kvkUGSUbJLuf3ttE9UfdIzKip8HkCVW4a/Wjr3+8aX4BytzPR+0oWNItt9UwlfNBskevquYLbrw08uUyL+vXVsyYSfOmJEhkToDkkt7W0+QZmFmbMI+aLjXqPc+1fBdfLkI2EVhALLtNK49HrBYT4Gq18OUzKY7dW3ZcyrwJKMQh2SCSG4hC/OWSQjyi9KT4Tv6tkix4L9cBW1t+ZJxynxCULdRJzZH1J01BEmmWSuJLsm3jhwwccr4rrJNcYxGym2a5nAifftEUo3V1TEiSM+EP9VKwzbIlTrFOwXtX+mCmZPK30VzwT0fzr+urieS7GOu1Lv1vZYOW7UJAVxtAiaWrF3LTlM7ZYovV3wDuEbtl233UcezBqDNo18Tedl3LHrp1Anci6X0Qf5Rs5XT/PfT+BQ==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F95022A1842CF8C7E0401F0A079902D9</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4j2eML5gYewIzXJKW5gLl1ua8dIS8BjW2bCQZSH59JRMTICSHnhlmGK1Xu9/ufvqkS46S2AlanAMTJKVar9vQf4Edeg5CtuFcXMwM1/UtY1a3aobnObPQ853ahevrWo/zHHqUC0RFQ3cs2zWkj+2OLStwnaBarVTr3r+6NgXGZWjpUrF0bZPElAdF2oaeMxqkiBMeUJQADwQORq2720B6BqjEpDcvtyiLhKy5ECILTBNXQsAQx7iC08S8NA98LkMejMicIpEzeMkZ8ob+sne9XlfW1UrK5qZjWZZp+ab0CTmZf9abn8rNEPZolG7XHURTSjCKyTNSoO5ALNJQa8XzlBGxSN4JbZu2pUIbsMEGtl36WTdfExTozox0AJJxZPAFsstgQ4iAAcWgTYa9hv75vAlu944ZojxKWcKP1n8HCegK4jSD0OBlZSW68yOeaFfzEnDQozjOOVnBvaJJhjBwbcAgIptbwiX5Qq4V49c2XP5IyTLAfzOWS3Mfq4RunuhOl8yBi/8zs/15baNMUZxD8+nbz3b76wz9+AKLwUPX5IP6/ePM7k/IpFFA2HfegtqN+2V9TNYdt142/b5lU59ecdKaPPnDMDTTzdWNlwwesi5vTTrfnQvnbvJg18Y3ydDuM/7FZJvJP/3M+3Ef3/3s89pmOSFeq9//vnr8xPzOF8av19+yBNdFp94d37fa9+7F87Q6nH7tzG/xKltGZnu6Hq8f8FxE7Gst77Wh06li5ylJp98HN/482giIbj5lgxUezMLelJMfS/92ivhj47Wm/RoOjaUkjPLZb8CiXCp69LratZwXEh/Li7KQ0IgK1yBTGsUFUKE31S4lLUEuBYiEgRzmdn3t1yyn6ne9dvva9uzaleVa9rXVsmq+b/l1u9SgLYojiJ2URkTlUiq75c/HAHEScKAhMGOV5ngBXP8gYhcJpPXoUB6OlHIYp1LFqZun1jJ6jrzYen5eu7OVtwDfy3TtPhV92metSAA7VO7qgXIPAZOMgJJ3xW8uCc6FbMUSrXIR25UVqlDI5QXAlAYHjluvmZwkWQwKqJmkYR5DJVtkRWNMvv13DIR5YR1ejYtz925Zx9/KDkifkCgHrmppg5winLiCnLKQ9wu+2C+4DN/KQ6KOl2ynYARvkRx+emWJoseOIrKiX53Rrx0Vdu5nb3+70/wAlHncj12icEX20pZ3qbwepHg0y2kuUWVZyVervJifp4SRyfCm1EfbHAHOpbo9jdNHoOYuhHnW5bJDfZR5Zz/El4sFHQkkIJFs04rlGS+LEXD1sujJU7I599lykFL2TcBGnLJ1YvkAUYg/fKPgACs/aR7Iv3XKwtdxnYi1l0fWKZ8TgtC5Wqlr5OkdUuBUhiVS91K2H/xUgFPJD427Ju+wCMmmWS7g/S+aErSGjjBOcyp6Xb0w7ItsgVM8ZRC8Or0JUwj5y8284e/ezD/vbkdS7hKk73zJfzsbpKALBl09AAosDX0jH5oyOZ3vifoLwDe67rTsuut0rusdb6frntR1p/vK5YNKmm/Mby17PT0+D80/</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950239D7BBF1715E0401F0A05990981</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950239D7BBF1715E0401F0A05990981</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_084232</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950239D7BC01715E0401F0A05990981</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZZb+o6EH7vr4jSxypkISyJAIlCe0+6F+j6UhlnIC6JQ2OHpb/+2oGkQGkv50pIyJPxzDeLv5kGQ1FouW3GIOEkporXbapvQ9+GimMbGgwrZc32kaUNkY8106nikW+iUaVmqIrHWAoeZRxR3lQtw7Q1o6KZ9sAwXNtyy7VSxSy/qsojJEyYFiolcWsRhZS5mdummibUjREjzKUoAuZy7Pbb11eu0HRRjkltNVYoM4dJK+B86uo6LvmAIQxxCceR3tC3dBo+c/tkTBFPE1j79FlTXd+dz+elebkUJ2PdMgxDNxxd6PiMjI/V1lF+GXyPjuLVuYNoTAlGIflEEtQ18CD2lXY4jhPCg+gH06ZuGtK0BgusYdOmx6r+5SBDd6ClLZAJQxoLkJkb68EIEqAYlIee11SPD6vg6u4gQZSN4iRiO+e/gwR0BmE8BV9jeWQ5usMt7klXqwHY9SgOU0ZmcCPbZIowMOUugRFZXBEmms9nSlZ+ZcHEj+RdBvhvytLQN7EK6Pqe7HTJGBj/PzXbrNfKyiMKU2hVjc5jtbOMJ8OI8+D+cjB8qv/57PWjJW5mEDaVV6CKcq/Pu81a9Nb60vkTmpBh7aw3My/7l357jl5qdDE/j8Jn3T4d2mfvy8jhg6WnL+P5Ozu5fe12Dee1Anwxmb3c9QKPeSPr4uYRmf5R2q+dnH6ePH48JdZzeP9P/eLh9vTGMhOv/GCf1Z6XY5tenka2efO+MKeQVMOO/admdZ5qN5HpfY5sJyaDrv+wvJqkRxf3L54A8vAyvIXy07V193zd/IppM4ZtYU4J/XT4DpjnR9keXlc5F/VC/Hd6kRLia6NM1Z1KjmIcKFdb8pakFjcVBER8VxRzdT53KqbhmGeVTqVTO7XMM8M2zHOjbVQcp+xUqzkHrVDsQOzEdESkL8myq/75HSCOXAbUh0SbxSkOgKm/WOwijhSP9sTjiCmDQSxYPPpYTCM2K5v1YO44k3QYBEFlMpuoyk3Mb+lt0h5xSLaZu7zF3D3AZEpA0rvsbyYanHGRig80S3lolmaoRCEVAyCRHOxadr2iMxJNQ5BA9Sj20xBK02CaJUZnq39LQ5hl0t7ZIHt3P4a1+y3PgNDxiVRgMpZTEFWEPSPIygP5OeDqZsC5+XbqE/m8RDp5QvAKyfanry6R7VG0iIjordN/M3PchfrB17/f1H8Bpe/mo3Dkz8iG23yWivEgyKOVV/MDlT5K6WyWZvWrSWJMhHld8KOp9wGngt2Wg3gCVC9M6AcNlwL1judCvo0v5QHtc8QhEt2mZMcDNos+MLlZeOKVLA5dW7ZcirxxWPB9sk4oFhCJ+NcdBbtY6gnxnfibx4n/Va49tjb8iDjFOsEJHcuTHCPLH5oCx8IsEbwXJ5vG9xnY53xbWCS5wMJFNw1TDj9/USShNVWEcZxS7nXVTLBJshlOvpyC+6X0zUxG5OvJvGA/Tubn66u+oLsIqYUu+W9ljWTtgkGVC0CGpakuxKIpnNPxBqmvAe7wumFZbbNuW53zeqdW8HrNcQyr6xQJ3Iqk9U38XbKR09330PoX</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>F951091E5C5C7B21E0401F0A05993966</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:F951091E5C5C7B21E0401F0A05993966</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20140513_084236</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>F951091E5C5D7B21E0401F0A05993966</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e34c814a-8ac5-424b-a19a-7d3453e3b9c7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1de1e00d-487c-492d-b21b-5e895e1ee18e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00024_ACCESS_UVTC_UserName_RequestorUserSAU_Active_RequesteeOtherSAU_UnlockMe_Role_DECE_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Second Adult SAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Second Adult SAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_UM"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj1VwEhJKooJEuXTTdmEXejnty8o4E3A3cWjsAOXXHzs0FCjtYY+EhDwZz3xz8TdzznES236Lc8gETZkWdBr6bydya67lWYZju67hmLWxgc9cMJyw7o6xG7qRNda1gPMcAsYFZqKh26blGKZrWM6tafqO7Ttmxal5T7p2DxmXpqVKxdS1ZRIz7hduG3qeMT/FnHKf4QS4L4g/av248aWmj0tMevN8jbJwmDWnQsx8hEglBAJxTCokTdA52tE5D7k/ohOGRZ7Bm8+QN/S3u4vForKoVtJsgmzTNJHpIakTcjo50ZvfyssQBixK1+c2ZimjBMd0hRWoHyCmaai14kmaUTFNPjFtIctUpg1YEoNYDjvR0buDAt2RlnZAZhwbfIqt0tgQIsiAEdDuhkFDPzmuguu7txlmPEqzhO+d/w4SsDnE6QxCg5eRleiOt3ggXc1zIH7ASJxzOoe+apMZJsC1nxlEdHlDuWy+kGtF+bUllz9adhmQvynLOdrGKqGjA9np0Alw8X9qtl2vtZV7HOfQDJ1VFA/HHfOSzFePNMmmziSeDwCB2SggbCuvQW3K/Xbeb9ZNb71dii5ov3oZwPMv17lq3z4OouTRGsaX08HdKeb3Z4vgOarVTp+eWv0QP1T7eJBdhy4XzysWsN7V5c3sMggX7VrC+9+/dfmfhwvUX42t6dB9eO0K0z313FbSvnq94RPyUh889R4HL4/kO7Nx79cYud3nro3+rOy79tU9as9eOneT6+sVsx6sb87i1WWrWjCss9plFX7mfbPxHtN2DLvCkhJG+fgZiCiPqj2CjtaT9cLia3pREhoaUaHqzxRHcQFM6E11S1GLn0sCoqEvi7k+9zzXMj37rOVa7TOv5nZNx7R6Zst0Pa/q1aslB61R7EFspyyiypdi2XX/fA2QJD4HFkJmzNOcTIHrX1jsYIG1gA3l40gZh9tUsrjF07ozjzGZLl13laRASbSa4RrWtX4qBmyQtSIB2S51V3eoewiEzigoflcNzmWHcyFz8YLnuYityhxXGORyAmSKhH3bqbuI02QWg0KKkjTMY6jMprMiM4iv/20DE15Ih93b4uF9Gtf+tzIFUiekSoGrWC5AlhEOzKBqGcjnAde2Ay7Nt/KQqvcl8ykyStZIdj+9t4nqj02PyIh+t0e/rRL3Rv3o6x9voi9Aof18bByFc7rlthymcj5I9miW1XzBlZdKPp/nRf3OFDNm0jySBGmhEZBc0tvrbfoHGNqYQEdNlw3qPc8b+S6+XEzZSGABiew2rTgesVqMgKvVIpDPZHns3rLjUuZNwFIckrVjuYEoxF8uKcQnSk+Kf8q/RZqF7+U6YGvLj4xT7hOCsok6qTny+klTkFSapZL40mzb+CEDh5zvCjdJ3mARspvGuYDPv2iK0Ro6JiTNmQg6eiHYZtkCp3idgf+u9MFMweRvo3nJPx3N//y4GUm+S7C+0aX/rWzQol0I6GoDKLA09KXcNKVzNtli9TeAe8Ru2nanVvfa9V7vor0h9jPPM+3u+2PeiaT5QfxRspXT/ffQ/Bc=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95022D689C8FFBCE0401F0A079902E1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95022D689C8FFBCE0401F0A079902E1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F9510927A51C7965E0401F0A05993983</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F9510927A51C7965E0401F0A05993983</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_084239</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F9510927A51D7965E0401F0A05993983</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_084246</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_084246</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_084246</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj1VwEhJKooJEuXTTdmEXejnty8o4E3A3cWjsAOXXHzs0FCjtYY+EhDwZz3xz8TdzznES236Lc8gETZkWdBr6bydya67lWYZju67hmLWxgc9cMJyw7o6xG7qRNda1gPMcAsYFZqKh26blGKZrWM6tafqO7Ttmxal5T7p2DxmXpqVKxdS1ZRIz7hduG3qeMT/FnHKf4QS4L4g/av248aWmj0tMevN8jbJwmDWnQsx8hEglBAJxTCokTdA52tE5D7k/ohOGRZ7Bm8+QN/S3u4vForKoVtJsgmzTNJHpIakTcjo50ZvfyssQBixK1+c2ZimjBMd0hRWoHyCmaai14kmaUTFNPjFtIctUpg1YEoNYDjvR0buDAt2RlnZAZhwbfIqt0tgQIsiAEdDuhkFDPzmuguu7txlmPEqzhO+d/w4SsDnE6QxCg5eRleiOt3ggXc1zIH7ASJxzOoe+apMZJsC1nxlEdHlDuWy+kGtF+bUllz9adhmQvynLOdrGKqGjA9np0Alw8X9qtl2vtZV7HOfQDJ1VFA/HHfOSzFePNMmmziSeDwCB2SggbCuvQW3K/Xbeb9ZNb71dii5ov3oZwPMv17lq3z4OouTRGsaX08HdKeb3Z4vgOarVTp+eWv0QP1T7eJBdhy4XzysWsN7V5c3sMggX7VrC+9+/dfmfhwvUX42t6dB9eO0K0z313FbSvnq94RPyUh889R4HL4/kO7Nx79cYud3nro3+rOy79tU9as9eOneT6+sVsx6sb87i1WWrWjCss9plFX7mfbPxHtN2DLvCkhJG+fgZiCiPqj2CjtaT9cLia3pREhoaUaHqzxRHcQFM6E11S1GLn0sCoqEvi7k+9zzXMj37rOVa7TOv5nZNx7R6Zst0Pa/q1aslB61R7EFspyyiypdi2XX/fA2QJD4HFkJmzNOcTIHrX1jsYIG1gA3l40gZh9tUsrjF07ozjzGZLl13laRASbSa4RrWtX4qBmyQtSIB2S51V3eoewiEzigoflcNzmWHcyFz8YLnuYityhxXGORyAmSKhH3bqbuI02QWg0KKkjTMY6jMprMiM4iv/20DE15Ih93b4uF9Gtf+tzIFUiekSoGrWC5AlhEOzKBqGcjnAde2Ay7Nt/KQqvcl8ykyStZIdj+9t4nqj02PyIh+t0e/rRL3Rv3o6x9voi9Aof18bByFc7rlthymcj5I9miW1XzBlZdKPp/nRf3OFDNm0jySBGmhEZBc0tvrbfoHGNqYQEdNlw3qPc8b+S6+XEzZSGABiew2rTgesVqMgKvVIpDPZHns3rLjUuZNwFIckrVjuYEoxF8uKcQnSk+Kf8q/RZqF7+U6YGvLj4xT7hOCsok6qTny+klTkFSapZL40mzb+CEDh5zvCjdJ3mARspvGuYDPv2iK0Ro6JiTNmQg6eiHYZtkCp3idgf+u9MFMweRvo3nJPx3N//y4GUm+S7C+0aX/rWzQol0I6GoDKLA09KXcNKVzNtli9TeAe8Ru2nanVvfa9V7vor0h9jPPM+3u+2PeiaT5QfxRspXT/ffQ/Bc=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F95022D689C8FFBCE0401F0A079902E1</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZrU/I6EP7+/opO/eiUXihIO8IMghzrXcDrFyemW4i2aU1SrP76kxSLgOjhPTPMMNludp+95Nnd5yiJHb/LOTBBUqoF/bb+2PAa0Z4TWYaNrIbhNiMwvIaFDXAbUcsN95DruboWcJ5DQLlAVLR1x7JdQ2rb7tiyfNfxXbfWsJsPunYDjEvTUqVm6VqRxJT7pdu2njPqp4gT7lOUAPcF9kfds1NfavqowqR39ucoS4esMxUi800T10LAEMe4htPE3DdXdPZD7o/IhCKRM/j0GfK2/nn37e2t9lavpWxiOpZlmZZnSp2Qk8mO3vlTXYYwoFE6P/cQTSnBKCYfSIE6AzFNQ60bT1JGxDT5wbRt2pYybUCBDWy7dEc3vxyU6La0tAKScWTwKbIrY0OIgAHFoF0Pg7a+s10F53fHDFEepSzha+e/gwR0BnGaQWjwKrIK3fYWN6Srsw/YDyiOc05mcK7aJEMYuHbJICLFKeGy+UKuleXXCi5/pOoywH9Tln1zGauEbm7ITp9MgIv/U7Ples2t3KA4h879bnOY1x10eOg0L18upscHxXt88JESx22XEJaV56AW5f48rzfrorc+Lz2PrnPLOz4fXg5mLff4fTo9y47vj4PGLbmbPJ8J67R1fn2QOM+3M/Ot3iPhQ3Rzbo/zIxFe1O/zq8RlWXR6tLtnTk7+YDo4ep1QwXY/RmQYNu9uhmfPJx+7uKjj1u7za++2d5IWnAf1FvRDr+D1p4NhYoq6XfwT15vAuvn9VcEuPH66++eh1y2Cq7E3O2LZk205t0dX7a+YlmNYFVaUMMqfngGL6qjaI+hrA1kvJH6nFyUhoRGVqn6mOIoLoELvqFuKWvxcEhAJfVnM+Xkgn5BjO93GYK/nOl7j0HIte2B1rT3Psxq9VsVBcxRrEHspjYjypVh23j+/A8SJz4GGwIxZmuMpcP0Xi30kkBbQoXwcKeUwTiWL225KplnYfJo18JNtY/Lykr6+ZJ71omvnqbigF6wbCWCr3F1f4e4hYJIRUASvOpzLFudCJuMVzXIR27UZqlHI5QhgioV9x201TE6SLAYF1UzSMI+hlk2zMjUmn/87BsK8lA4Px+XL+zGw9W9VDqROSJQCV7EcgKwjbBhC9SqQnwNuLgdcme/mIVEPTCZUMILnSFY/ffWJapBFk8iIHnujR7vCvVDf+vr3m+YvoMz1fCwchTOy5LaapnJASProVNV8RbXXWj6b5WX99hQ1MmnelAxpmyPAueS393H6AtRcmDC3Gi8L1GueF/JVfLmY0pFAAhLZbVp53GK3GAFXu0Ug30mx7eKy4lLmTUAhNsl6sVxBFOJftxTsY6UnxZfy7y1l4Ve5Ntha8iPjlAuFIHSiTmqQvP/QFDiVZolkvpQtG99kYJPzVeEiyQssQnbTUy7g5y+aorS2jjBOcyqCvl4Klmm2xCneM/C/lL6ZKan8czYX/MfZfHd2OpKElyB9oUv+W9kgZbtg0NUKUGJp64VcNaVzOlmi9U+A35jd6TdbXq81GBz0VpjdOfx6zCuRdL6Jv0uWcrr+Hjr/Ag==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950212A5F7C4295E0401F0A079905C8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950212A5F7C4295E0401F0A079905C8</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_084242</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950212A5F7D4295E0401F0A079905C8</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZtU+I6FP7ur+h0PzolbXkROsIMgl1Bcb1WZdcvTkgPJdc2LU0KZX/9JsUiIHrZO0Pp5PTknOe85Dk55zgKbafLOaSCxkwb9Nv6CzTM5nRi+cb0bFI1amCC0axjbFh2y4eaNbEnQHRtwHkGA8YFZqKt26ZVM8y6YdUeTNOp2U7trFK37Wdde4KUS9NSpWLqWh6FjDuF27aepcyJMafcYTgC7gjieN3RjSM1HVxi0jvna5SFw7QzEyJxECIVHwiEIamQOELnaEfn3OeORwOGRZbCm0+ft/W3vcvlsrKsVuI0QLZpmshsIanjcxp80zsn5WbwB2war9c9zGJGCQ7pb6xAjUDMYl/rhkGcUjGLPjFtIctUpg3IiUGsGvumo3cHBbojLe2ATDk2+AxbpbF7mEIKjID2eD9o69+Oq+B670OKGZ/GacT31n8HCdgCwjgB3+BlZCW64y0eSFfnHIgzYCTMOF3ArWqTBBPg2l0KU5rfUC6bz+daUX4t5/JHyy4D8jdlOUfbWCV0dCA7fRoAF/+nZtv1Wlt5wmEGnbvgt/3s9k+Hycy9vhr272DugTVZTqxRu4CwrbwGtSn323q/WTe99bYp4N9zOrs0b06/QzqZ/fSub65WPJ1ejIanq1/w8xZfJ81onNbvplY8esxHXff6+Xa5WgwvL+r17lM4fvpB0QJxdzw8WY3xqXwaryiirWC1RMnlaXXJplfJHa21mOfVutbv3j/JODz1RyP+Ou8uVgOvgW6BDRERy+j63m+cZYE1fnw4mbhPg+DRrvbpeBh6v+ZXzW77PabtGHaFJSV42eRfIKJcqvYY9DVX1guLr+lFSag8H4WqkyiO4gKY0Dtql6IWJ5MERH1HFnO9dlt107Zd96zmmjWz4V7Kf8s1u+ZZq2VWu9WSg9Yo9iD2Yjalypdi2XX/fA2QRA4H5kNqLOKMzIDrX1jsY4G1AbuXhyNmHB5iyeKWLbKWHUyDVsPGi2ZdNKJVwvI817XbWPxgP9LuVEC6S93VHeq+B0ITCorfVYNz2eFcyFzM8SIToVVZ4AqDTE6AVJGwY9eadcRplISgkKIo9rMQKsksKTKD+PptG5jwQnp/+VAcvE/j2v9WpkDq+FQpcBXLBcgywoEZVC0D+TzgxnbApflu5lN1vmQ+RUrJGsnup/c2Uf2x6REZ0UvPe7FK3Bv1o7d/3Im+AIX287Fx5C/olttymMr5INmjU1ZzjivzSrZYZEX9zhQzptI8kgRpIQ9IJult9RC/AkMbE+io6bJBved5I9/Fl4kZ8wQWEMlu04rlEVcLD7i6WgzkMcmPvbfsuJR5E5CLQ7JeKG8gCvGXlxTiEKUnxXfytYxT/71cB2xt+ZFxyvuEoCxQKzVHVp80BYmlWSqJL063jR8ycMj5rnCT5A0WIbtpkgn4/IumGK2tY0LijIlBXy8E2yxb4BSrBJx3pQ9mCiZ/G805/3Q0/xzdeJLvIqxvdOl/Kxu0aBcCuroBFFjaei5vmtI5C7ZY/Q3gR2LvN5qtXtN1L3o7xG5fvh/mnUg6H8QfJVs53T8PnT8=</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>F95022FF74F0406FE0401F0A079903A3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:F95022FF74F0406FE0401F0A079903A3</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20140513_084246</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>F95022FF74F1406FE0401F0A079903A3</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e34c814a-8ac5-424b-a19a-7d3453e3b9c7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1de1e00d-487c-492d-b21b-5e895e1ee18e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00025_ACCESS_UVTC_UserName_RequestorUserFAU_Active_RequesteeSelf_ValidateEmail_Role_DECE_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0Tp41HIlVtUkGihe0PpDSjd7UtlnAmYJk6IHS79+mMHQoHSHvaRkJAn45k1M8vLvmAoDCy3wRgknERUaTdr6ptnV3xrZIFmopGpOdWyoSHbtzWMShWn4oxM8Mqq0mYshTZlHFFeUy3DdDSjqJnOwDBcx3KLRqFoGa+qMoSEidDCpWCoyjIMKHOztDU1TagbIUaYS1EIzOXY7Tduu67wdFGOSa1frFFmCZP6hPPY1XVc8ABDEOACjkL9Qt/zufCY2ydjiniawCanx2rqZu9isSgs7EKUjHXLMAzdqOrCx2NkfK7Wz/LN4LWpH63XV4hGlGAUkA8kQd0Cn0Se0gjGUUL4JPwmtKmbhgytwRJr2HTouap/JsjQnRhpD2TCkMYmyMyD9cCHBCgG5anXrqnnp01wvXeQIMr8KAnZwfrvIAGdQxDF4GksryxHd3rEI+2qXwB22xQHKSNzuJM0iREGpjwk4JNllzBBPo8p2fiVJRM/krMM8N+M5ULfxSqg60e60yRjYPz/zGx3XusoQxSkUA9H0/LV4ua6czV4XL3EIfv1Ej6EpDoYGrUMwq7zGtR23Jv1IVm33NpsmlzH0+fnW785fO08w/iVXTb7rUHaY+l7xwk9WATmrFnp3kf28imZ/XoZPN8Mhh37Mpi2ri2/4yzJY+X1fVoRrQ3OWh/F4s2d9UF/9zD5Mx2OaKN02WuP7Lth0CLjEoPBYNTuFV8WLWRdWtVRNMchEMNcNYaJXvrnIejEd91gefO7S88GhmVNZjOz0X8aOo8rL4ic2mdNuzXsG3NJ6KejKWCeLyU92k3lWswL8Z/lRVqIp/mZqxtLjWIcKFfrcpeUFjcVAkQ8Vwxzvb6uFgXcSqNRsZvlptVoGY5hXhsNo1ytGk6zlWvQGsUBxKuI+kTmkiq75s/PAHHoMqAeJNo8SvEEmPpDxCbiSGnTnjgcERUTiISKm9M0mcVWTJ3Q8M1yyQfTnBrL0QdVlbuI39P7pOFzSPa1297T7h5gEhOQAi8ZzgTFGRfNmKF5ygOzMEcFCqm4AhKpwq7lVIo6I2EcgISqh5GXBlCIJ3HWGp2t/y0NYZZZe61BdvK+LezwW94D4eMR6cBkLZcg5ghHLiEnL+T7gku7BefhG6lH5AETDeUJwWsk+58+eSIJsiWJqOjtqv9m5ri37idv/7pT/wGUftiPbSJvTnbS5repuCCEfNTzac5QYVZI5/M0m19ZSmMiwutCIU29DzgV+rYaRO9A9W0I/aTrZYv6IPPWvo8v5RPa54hDKNimZMsT3hZ9YPJt0RbnZHnqw2UvpegbhyU/ZrsKxBNEIv7xlYJdLP2E+UH8LaLE+xzXkVg7eUSd4kHBCR3LlbxIVt+QAkciLBHKFyW7wY8FOJZ837ht8hYLF2wapRy+/6JISaupCOMopbzdVDPDrsxmOPkqBvfT6UuYTMo3d/OSfXs3/7nt9oXghUjd+pL/dtZIRhcMqnwCZFhq6lI8NUVyOt6R9Q3AL8pu22bFsO2SLaR8V9mt1ieX9yqpfzF/tez09PA81P8F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95023318033634DE0401F0A079902E7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95023318033634DE0401F0A079902E7</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950228AA83D7D2AE0401F0A079904DE</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950228AA83D7D2AE0401F0A079904DE</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_084249</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950228AA83E7D2AE0401F0A079904DE</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130925_075247</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130925_075247</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20130925_075247</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E736ED6B4703B84FE0401F0A05996EB3</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4jx0jG0yMPYEZPhMSAgnQlstLR8hro9TIYMlA+uuvZGIChOTS++TRerV7dvfoSNccL6KiV+ccEkFjpnVbVf2XBeWZO7PKRmVmY8Ou2I5RcR0wzFLFrLhBEDi4pGtdzlPoMi4wE1W9aFolw3SNYnls2Z7leuVKoWLbU137AQmXoaVLwdS17SJi3MvSVvU0YV6MOeUewwvgniDeqP7Q86Snh3NMeu16hzJLmNTmQiw9hEjBBwJRRAokXqBrdORz7XNvREOGRZrAa06fV/XXvZvNprApFeIkREXTNJHpIunjcxp+1Wtf8s3gd1kQ79ZNzGJGCY7oH6xAPYCYx75Wj8I4oWK++CC0hSxThTZgSwxi2eyrjt4SZOgujHQEMuHY4HNs5cGGEEACjID2fdit6l8vm+Bu7zjBjAdxsuAn67+DBGwNUbwE3+B5ZTm6yyOeaVftGojXZSRKOV1DX9FkiQlw7TGBgG57lEvy+VzLxq9tec4wIH8zkmt0iFPCRmc606IhcPF/5nU4q12UHzhKoTYejLm/eZ6IuePP+c1s9DB17tjNsPkcVzMIh847UPtRv65Pibrn1esmgQbuvdn7abbvVv/MyvVe3bltPt8sxsX5009n0LmfLR/uR7zR7W8Gyepu/r2xdqbBE2736/zHP+1V6QmJyvomHNsp+0Kjkh+uaN+y+2a/3Ww92zF8G3bCaP2Ix+PVHzSd9JaD6PZ36JhB7/kW7idPbhg635qjRtzpXVk/+aQ1XTlF9A1/uWWVoDxwV+yp93iHG6j9O6y+1XRYw7Exl4NROnsGIvKloka3pXXkvLD4XFqUhfpGkLl6S6VPXAATek3tUrLipVJ8qO/JYe7Wbad01W5dNWzHLDUqdqdt2qbVMetm2XWv2o1Srj87FCcQmzELqMqlFHbHn88BkoXHgfmQGOs4JXPg+icRW1hgrcuG8mDEjMM4lgreXiXpJCC3vc20yEtwY00nSaP9ggupjBpQyRhd68diwAZJPRCQHOu3c6TfQyB0SUGJvGI6l1TnQjZlhdepiKzCGhcYpPIaSJQSe0W7UkacLpYRKMhoEftpBIXlfJm1CPHdt2hgwjPrsD3+1R01s1P4YZGn//J+SB+fKgeu6mmAnCmcuYzsvJgPiy6ah0Xn4eupT9Vhk80VCSU7JMe/3jijyLInjKqqOfpl5bj37hdvf78TfQIKnfZjn8hf04O0+a0qLwopJbV8oitcWBXS9TrNZugomUxkeGQh00EjIKnUupdx/BsY2odAF10ze9Qnmff2Y3ypmLORwAIWknFatrzgjTECrt4YXcnu7aUPmKOUsm8CtuKcrRnJp4hC/OlrhXhE+Unzo/xs4sR/G9eZWAd5ZJ3yYSEoC9VKXSovH5CCxDIslSoYJ4fBzwU4l/zYuG/yHouQbJqlAj7+oyl5q+qYkDhlotvSM8Oh5GY4xcsSvDend2EyWX+9p7f8w3t68tAbSfFbYH3vS//b2aAZXQjIXZxmWKr6Vj45ZXIWHkj8K8BTle9IknQkT+yW6e5V3nFds+y4+wYeVVJ7Z35vOejp6Xmo/Qs=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E736F038F3804D09E0401F0A07990579</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing_+428@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbZcuI6EH3PV7g8j1NGXnAMrkAVa8YzQBbI+pISsgAFWzaW7JB8/UgmdoCQXOY+udRudZ/uPjrSGYNhYLotxnDCSUQVr9tQnyxkmPq07muOXa9qVdOua3A69TUf2fpMN3XTqGFV8RhLsUcZh5Q3VFM3LE2va6Y9MaquqbumVbGs2qOq3OKEidDCpaKryjoMKHPztA01TagbQUaYS2GImcuRO24NB67wdGGBSW2ebVDmCZPmgvPYBQBVfIxwEKAKikJwBnZ8znzmjsmcQp4m+D2nzxrq+96Xl5fKi1WJkjkwdV0Heh0IH5+R+Q+1eVJsxr5HZ9Fm3YE0ogTBgLxBCWqI+SLylVYwjxLCF+EXoQ1g6DK0htdIQ0aV/lDBR4Ic3ZGRdkAmDGpsAY0i2DWe4QRThJWba6+h/jhugpu9kwRSNouSkO2t/w0SphkOohj7GisqK9AdH/FAu5pnGLkeRUHKSIZHkiYxRJgplwmekfWAMEE+nyn5+JU1KxiG0b+M5Axs4xSwwYHOdMkcM/5/5rU9q02UWxikuDnsmlXQiZyrHhwY69n81/PgOcw4GJFhI4ew7bwBVY76fb1P1JJX75uW2WhC279voyuwCAw2snvT1c81n5p3q/OgQ89fydXp66N108erPz28bj+81cbgt29zK5u82XfIGy1Rvesw8/JleNK+YWliPfyM3tqTP4+ngKIaDdtJdczsmwvjFXTjyzh7fu5ZVB/eL3+tHumt/TAfPdrA4W0LsmUH1uLb4SBKreWJE8xSPAjH91cXPf+i35rF88ZHTds17BoLORin02eMeLGU1PC6Sl/MC/LvpUVaiK/Nclc3lvrEOKZcbcpdUlbcVIgP8V0xzM2651inve5pu+o4drtW7ff0qm709ZZu1+unvbZV6M8GxR7ETkRnROaSCrvhz/cAUegyTH2caFmUogVm6jcRu5BDxaPX4mBElOFJJBQ8u3v+M2BDr/PY+XV+28HLuW+1u5etSiqizohgjKqMIn5BL5LWjONkV7+dHf2+xojEBEuRl0xnguqMi6asYJbywKhksEJxKq6BRCqxa1ZrNmAkjAMsIYMw8tMAV+JFnLcIsM3X1CBiufW6N3nyxp38FH5Z5P6/oh/CxyfSgcl62ljMFB+4jIyimC+LlhV/FF2Eb6U+kYdNNJcnBG2Q7P764IwkS0kYWVVn/GQUuEv3o7d/3gm+AQX2+1Em8jOylba4VcVFIaSkWUx0BSurSpplaT5DR8pkIsIDA+gOGGOUCq17nURLTEEZAhx1zZSo9zKX9l18KV/QMYcch4JxSr484o0xxky+MTzB7vWxD5idlKJvHK/5IVsnEE8Rifjb1wpykfQT5kvxeYkS/2NcB2Jt5RF1iocFJ3QuV/JSef2CFCgSYYlQwSjZDn4owKHku8ayySUWLtg0TTn++o8i5a2hQoSilHKvq+aGbcnNcfLXGLsfTp/C5LL+fk+v2Zf39P1wMBbiF0K19CX/7ayRnC5IvFCFf46loa7Fk1Mkp/MtiX8HuK/yfd2q9a2aXu3q9VLlnXpdt5162cCdSpqfzJ8tWz3dPw/Nvw==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E736ED6B4775B84FE0401F0A05996EB3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E736ED6B4775B84FE0401F0A05996EB3</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130925_075247</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E736ED6B4776B84FE0401F0A05996EB3</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00026_ACCESS_UVTC_UserName_RequestorUserFAU_Active_RequesteeBAU_ValidateEmail_Role_DECE_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdU/I6EL73V3TqpVPSlqK0I8wgiNYR9QB+3jghDSXaJpCkFN9ff5JiERA9vGeGGSbbze6zH3l2TwVMEzdoCYG5JIwaYadhvkbjqF4/tl2riuqe5VUj2xpBt2ZVI9ce1equh+t10wiFyHBIhYRUNkzXdjzLrlmON7TtwHODmlc5qXovpvGAuVCmlUrFNo1FmlARFG4bZsZpwKAgIqAwxSKQKBi0eteB0gxgiclsni5RFg55cyLlNAAAVSKMcJKgCmIpOAUbOqeRCAYkplBmHH/6jETD/Lyb53klr1YYj4Fr2zawfaB0IkHiQ7N5UF7GUUjHbHluQ8ooQTAhf6AG1cNywiKjlcSMEzlJfzDtAMfWpi28QBZyPHpogi8HBbo9LW2A5AJaYgKd0lgfjzHHFGHjvh82zMP9Kri8O+SQijHjqdg6/x0kTOc4YVMcWaKMrES3v8Ud6WqeYhSEFCWZIHN8o9tkChEWxh3HY7K4JkI1XySMovzGQqgfKbsMo78pyylYx6qggx3Z6ZAYC/l/arZer6WVB5hkuElebq+mYd1un3dr5FFeHnvt2fVg9sTc50YBYV15CWpV7s/zdrOueuvz0kjGjv/wwi8+nh/yk5f4xfEfwT9Hz737nF2RN9AbDf1qTAgSeRW83Nm9o5Ev+5cX6J525sL37cHinaP7vpd1wwNe89q1apjXeYovBvf97O6CzuqXXlYdvNGn6/fHJzmBtfduH0yPWh/+1TG/4+zmHc2HBLyfx8OpF3Vofs3sk0dxQOYPdCJu7Oewnj+PnJ6Txo2vmNZj2BSWlDDIRm8YyfKo2yPsGF1VLyh/pxctIZE1LlSDqeYoITGVZlPf0tQSZIqASBSoYi7PXb9mu9VOt1v3Oufnrntue7bTtVv2iUqR57RKDlqi2ILYZnRMtC/Nssv++R0gSgOBaYS5NWcZmmBh/mKxAyU0QtpXj4NRgYdMsbjD8R/I8uMIJovcqX7EiOfp20iwhWncMHlLb3lrLDHf5O7qBnf3MSJTgjXB6w4XqsWFVMmYwXkmE6cyhxWKMzUCuGbhwPXqNSBIOk2whgpSFmUJrkwn0yI1QCz/XQsiUUj758Pi5f0Y2Pa3MgdKJyJaQehYzrCqI94xhLwykJ8DPl4PuDTfyiKiH5hKqOQELZFsfvrqE90gqyZREb22B69OiXulvvf17zfBL6DAdj5WjqI5WXNbTlM1IBR9NMtqzmBlVsnm86yo34mmRq7MA8WQDhhglCl++xiyd0zBygTYa7ysUG95Xsk38WVyQgcSSpyqbjOK4x67xQALvVuE6p0s9l1cNlyqvEm8kLtk7UStIBrxr1sKCpDWU+I79ZczHn2Va4etNT8qTrVQSEJjfdKD5OOHpkBMmSWK+RhfN77LwC7nm8JVkldYpOqmUSbxz18MTWkNEyLEMirDjlkI1mm2wCk/pjj4UvpmpqDyz9m8ED/O5qfe9UARXgrNlS75b2WLFO2CsKlXgAJLw1yoVVM5p/EarX8C/Mbsrm+3z7q+c3bWWTF7TTG773895o1Imt/E3yVrOd1+D81/AQ==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F9502290CBF91BBDE0401F0A05990991</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F9502290CBF91BBDE0401F0A05990991</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95023DFF84DEE22E0401F0A0799041A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95023DFF84DEE22E0401F0A0799041A</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_084253</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95023DFF84EEE22E0401F0A0799041A</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_084256</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_084256</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_084256</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdU/I6EL73V3TqpVPSlqK0I8wgiNYR9QB+3jghDSXaJpCkFN9ff5JiERA9vGeGGSbbze6zH3l2TwVMEzdoCYG5JIwaYadhvkbjqF4/tl2riuqe5VUj2xpBt2ZVI9ce1equh+t10wiFyHBIhYRUNkzXdjzLrlmON7TtwHODmlc5qXovpvGAuVCmlUrFNo1FmlARFG4bZsZpwKAgIqAwxSKQKBi0eteB0gxgiclsni5RFg55cyLlNAAAVSKMcJKgCmIpOAUbOqeRCAYkplBmHH/6jETD/Lyb53klr1YYj4Fr2zawfaB0IkHiQ7N5UF7GUUjHbHluQ8ooQTAhf6AG1cNywiKjlcSMEzlJfzDtAMfWpi28QBZyPHpogi8HBbo9LW2A5AJaYgKd0lgfjzHHFGHjvh82zMP9Kri8O+SQijHjqdg6/x0kTOc4YVMcWaKMrES3v8Ud6WqeYhSEFCWZIHN8o9tkChEWxh3HY7K4JkI1XySMovzGQqgfKbsMo78pyylYx6qggx3Z6ZAYC/l/arZer6WVB5hkuElebq+mYd1un3dr5FFeHnvt2fVg9sTc50YBYV15CWpV7s/zdrOueuvz0kjGjv/wwi8+nh/yk5f4xfEfwT9Hz737nF2RN9AbDf1qTAgSeRW83Nm9o5Ev+5cX6J525sL37cHinaP7vpd1wwNe89q1apjXeYovBvf97O6CzuqXXlYdvNGn6/fHJzmBtfduH0yPWh/+1TG/4+zmHc2HBLyfx8OpF3Vofs3sk0dxQOYPdCJu7Oewnj+PnJ6Txo2vmNZj2BSWlDDIRm8YyfKo2yPsGF1VLyh/pxctIZE1LlSDqeYoITGVZlPf0tQSZIqASBSoYi7PXb9mu9VOt1v3Oufnrntue7bTtVv2iUqR57RKDlqi2ILYZnRMtC/Nssv++R0gSgOBaYS5NWcZmmBh/mKxAyU0QtpXj4NRgYdMsbjD8R/I8uMIJovcqX7EiOfp20iwhWncMHlLb3lrLDHf5O7qBnf3MSJTgjXB6w4XqsWFVMmYwXkmE6cyhxWKMzUCuGbhwPXqNSBIOk2whgpSFmUJrkwn0yI1QCz/XQsiUUj758Pi5f0Y2Pa3MgdKJyJaQehYzrCqI94xhLwykJ8DPl4PuDTfyiKiH5hKqOQELZFsfvrqE90gqyZREb22B69OiXulvvf17zfBL6DAdj5WjqI5WXNbTlM1IBR9NMtqzmBlVsnm86yo34mmRq7MA8WQDhhglCl++xiyd0zBygTYa7ysUG95Xsk38WVyQgcSSpyqbjOK4x67xQALvVuE6p0s9l1cNlyqvEm8kLtk7UStIBrxr1sKCpDWU+I79ZczHn2Va4etNT8qTrVQSEJjfdKD5OOHpkBMmSWK+RhfN77LwC7nm8JVkldYpOqmUSbxz18MTWkNEyLEMirDjlkI1mm2wCk/pjj4UvpmpqDyz9m8ED/O5qfe9UARXgrNlS75b2WLFO2CsKlXgAJLw1yoVVM5p/EarX8C/Mbsrm+3z7q+c3bWWTF7TTG773895o1Imt/E3yVrOd1+D81/AQ==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F9502290CBF91BBDE0401F0A05990991</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0TpYxVyIaEkKkhcSpu9C70AbU9fKuMM4E3ipLFDga8/dmgoUNrDPhIS8mQ8s+biNXPBUBRaXoMxSDmJqeK3a+qrPbKqACZoduCONdsB0FzXcbWg7BrmCBzsBIGq+Ixl4FPGEeU11TJMWzMczbQHhuHZlueclxzXflGVR0iZMC1USoaqLKKQMi93W1OzlHoxYoR5FEXAPI69fqN74wlNDxWY1PrFGmXuMK1POU88XcelADCEIS7hONIv9B2di4B5fTKhiGcpfPgMWE39uPv+/l56L5fidKJbhmHohqsLnYCRyalaPykuQ+DTcbw+txCNKcEoJCskQXWBT+NAaYSTOCV8Gn1j2tRNQ5rWYIE1bNr0VNU/HeTojrS0AzJlSGNTZBbGHmAMKVAMyvDBr6mnx1VwfXeQIsrGcRqxvfPfQQI6hzBOINBYEVmB7niLB9JVvwDs+RSHGSNz6Mk2SRAGptylMCaLG8JE8wVMycuvLJj4kaLLAP9NWS70bawCun4gO20yAcb/T82267W28ojCDOqt4e3luQ+jgYmi9rPdeL4tv9324jlp2LUcwrbyGtSm3B/n/Wbd9NbHpcgqN+nZdXk4D43pwh2t0nZGer/oqnU/Sf40Wsbq/AZV+aPZv2pmWbC8ff4dDQLz8Z67N6OXwXVl+FS+mkHlV+/u8eTMTv4ZO0FkDa4H7LL5tETPfmTOwvOrpT0ZQfbcyu4c4/dVGrZegrHf+DOszslT1+m3rGvevYrss+Hs2kwS0x2uTt6W3V5/hnvX6eyuOoxQZ3Jf+4xpO4ZdYUEJ/Wz0BzAvjrI9/LbSEfVC/Gd6kRISaONc1UskRzEOlKt1eUtSi5cJAiKBJ4q5Pndcx2hbRqUqeM0s251LwzbMjtEwHNe1zltOwUFrFHsQWzEdE+lLsuy6f34GiCOPAQ0g1eZxhqfA1B8sthFHik8fxOOIKYNBLFh8CqtVMKXjSqWyMjOWLqeT1XRpvpVVpRfzW3qbNsYc0l3qLu9Q9wNgkhCQ/C4bnIkOZ1zk4g3NMx6apTkqUcjEBEglCXuWXXV0RqIkBIlUj+IgC6GUTJM8Mzpb/1sawiyXPlwO8of3bVz734oUCJ2ASAUmY2mCKCMcmEF2Ecj3AVe2Ay7MN7KAyPcl8slTgtdIdj99tonsj02PiIheW/1Xs8C9UT/6+teb+g+g9P18bBwFc7LlthimYj4I9qgX1XxDpbdSNp9nef3OJTOmwrwuCNLU+4AzQW/LQTwDqm9M6EdNlw3qPc8b+S6+jE9pnyMOkeg2JT8esVr0gcnVwhfPZHHs3rLjUuSNw4IfkrVCsYFIxD8uKdjDUk+I78Tfe5x+Bn7I1pYfEafYJzihE3mSc2T5TVPgWJglgvjidNv4IQOHnO8KN0neYOGim0YZh++/KJLRairCOM4o99tqLthm2RwnXybgfSp9MZMz+cdoXrBvR/Nz96Yv+C5C6kaX/LeyRvJ2waDKDSDHUlMXYtMUzulki9U/AO4Tu2W5RqvZcc1ms71N7Ibrfj7mnUjqX8RfJVs53X8P9X8B</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950D2068594134FE0401F0A059927C5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950D2068594134FE0401F0A059927C5</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_084256</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950D2068595134FE0401F0A059927C5</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00027_ACCESS_UVTC_UserName_RequestorUserFAU_Active_RequesteeSAU_ValidateEmail_Role_DECE_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSRxRyIRQSFSSuu9mFdtWw3Z6+rBxnIIbEobED6f76Y4eGAr0c9khIyJPxzDcznz/7mqEkttweY5BxklLFG3bU3y17DmYzDDQUmKZmB1ZLC8JGqBmO3Qittt0O8ZWqeIzl4FHGEeUd1TJMWzOammnPDMO1G65h1Fst51FV7iFjIrRwqRuqUiQxZW6ZtqPmGXVTxAhzKUqAuRy7fm86cYWniypMavd6h7JMmHUjzteuruN6CBjiGNdxmujX+pHPdchcnywo4nkGLzlD1lFf9m632/q2UU+zhW4ZhqEbji58QkYWl2r3otoMoUfn6W49QDSlBKOY/EES1BR4lIZKL16kGeFR8kFoUzcNGVqDAmvYtOmlqr8mKNGdGekIZMaQxiJkVsHuYA4ZUAzKzzuvo16eN8Hd3lmGKJunWcJO1n8HCegG4nQNocaqyip050d8p13da8CuR3GcM7KBG0mTNcLAlB8ZzEkxIUyQL2RKOX6lYOJHKpYB/puxXOuHWAV0/Z3uDMkCGP8/Mzuc1y7KPYpz6D4t/1nMpmktyJP2jK2m6yiZ6M7SadRGnRLCofMO1H7cL+tTsu659bJpmSTeZhswG//qj370fn55CPgKf4XGFo+m7MGer8ZjaH+5W/g1D20X2ffQuMXbZBR8deAL9mdj4n/LzEn+y7PpRTReFiwfRavH4TCs1W7Novg2iKPB4+M4akzua/1erxFvcqO/Wrb6DkLzWuN+moxWwRA98e9RMZgU6WyWfB3erP5c4MXKmfjGzVXeB/ST+l4Td15rOqzh2FhJgp8HS8C8Wkp6eENlLOaF+OfyIi0k1Oalq7uWGsU4UK525S4pLW4uBIiErhjmbj12moZlOq2hYw2sZqsxMmzDHBs9o+k4htPrVxq0Q3ECcZDSOZG5pMru+PM5QJy4DGgImbZJcxwBUz+JOEQcKR69E4cjpQxmqVBxc70pMswpCRJElkFsrYJVsA3yuarcpPyW3ma9OYfsWLobR9J9B5isCUh9lwRnguGMi148oU3OY7O+QXUKubgBMinCrmW3mzojyToGiVRP0jCPob6O1mVndLb7tzSEWWm9G83Kg/dhXaffqhYIn5BIByZr6YMYI7y5gyy3WRXyccFXhwVX4Xt5SOT5Ev3kGcE7JMefXmki+bHniKjo98D/bVa49+5nb3+7U/8ElH7aj32icEMO0laXqbgfhHp0q2k+ofpTPd9s8nJ+LamMmQivC4E0dR9wLuTteZaugOr7EPpZt8se9Unmvf0YX84j6nPEIRFsU8rlGU8LH5h8WnjimBTnvluOUoq+cSj4e7ZBLF4gEvGnjxTsYuknzD/E3zbNwtdxvRPrII+oU7wnOKELuZL3yPMHpMCpCEuE8KXZYfD3AryX/Ni4b/IeCxdsCnIOH39RpKJ1VIRxmlPuDdXScKiyJU7+vAb31elNmFLJX67mgn14NT9MJ77QuwSpe1/y384aKemCQZUvgBJLRy3ES1Mkp4sDVX8BeCLspnFlDXutXsvuj1qHwm61R69cPqqk+8b81nLQ09Pz0P0X</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F951062DA7A74BE7E0401F0A059928E6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F951062DA7A74BE7E0401F0A059928E6</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F9502197D92C2573E0401F0A059909AB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F9502197D92C2573E0401F0A059909AB</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_084259</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F9502197D92D2573E0401F0A059909AB</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_08432</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_08432</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_08432</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSRxRyIRQSFSSuu9mFdtWw3Z6+rBxnIIbEobED6f76Y4eGAr0c9khIyJPxzDcznz/7mqEkttweY5BxklLFG3bU3y17DmYzDDQUmKZmB1ZLC8JGqBmO3Qittt0O8ZWqeIzl4FHGEeUd1TJMWzOammnPDMO1G65h1Fst51FV7iFjIrRwqRuqUiQxZW6ZtqPmGXVTxAhzKUqAuRy7fm86cYWniypMavd6h7JMmHUjzteuruN6CBjiGNdxmujX+pHPdchcnywo4nkGLzlD1lFf9m632/q2UU+zhW4ZhqEbji58QkYWl2r3otoMoUfn6W49QDSlBKOY/EES1BR4lIZKL16kGeFR8kFoUzcNGVqDAmvYtOmlqr8mKNGdGekIZMaQxiJkVsHuYA4ZUAzKzzuvo16eN8Hd3lmGKJunWcJO1n8HCegG4nQNocaqyip050d8p13da8CuR3GcM7KBG0mTNcLAlB8ZzEkxIUyQL2RKOX6lYOJHKpYB/puxXOuHWAV0/Z3uDMkCGP8/Mzuc1y7KPYpz6D4t/1nMpmktyJP2jK2m6yiZ6M7SadRGnRLCofMO1H7cL+tTsu659bJpmSTeZhswG//qj370fn55CPgKf4XGFo+m7MGer8ZjaH+5W/g1D20X2ffQuMXbZBR8deAL9mdj4n/LzEn+y7PpRTReFiwfRavH4TCs1W7Novg2iKPB4+M4akzua/1erxFvcqO/Wrb6DkLzWuN+moxWwRA98e9RMZgU6WyWfB3erP5c4MXKmfjGzVXeB/ST+l4Td15rOqzh2FhJgp8HS8C8Wkp6eENlLOaF+OfyIi0k1Oalq7uWGsU4UK525S4pLW4uBIiErhjmbj12moZlOq2hYw2sZqsxMmzDHBs9o+k4htPrVxq0Q3ECcZDSOZG5pMru+PM5QJy4DGgImbZJcxwBUz+JOEQcKR69E4cjpQxmqVBxc70pMswpCRJElkFsrYJVsA3yuarcpPyW3ma9OYfsWLobR9J9B5isCUh9lwRnguGMi148oU3OY7O+QXUKubgBMinCrmW3mzojyToGiVRP0jCPob6O1mVndLb7tzSEWWm9G83Kg/dhXaffqhYIn5BIByZr6YMYI7y5gyy3WRXyccFXhwVX4Xt5SOT5Ev3kGcE7JMefXmki+bHniKjo98D/bVa49+5nb3+7U/8ElH7aj32icEMO0laXqbgfhHp0q2k+ofpTPd9s8nJ+LamMmQivC4E0dR9wLuTteZaugOr7EPpZt8se9Unmvf0YX84j6nPEIRFsU8rlGU8LH5h8WnjimBTnvluOUoq+cSj4e7ZBLF4gEvGnjxTsYuknzD/E3zbNwtdxvRPrII+oU7wnOKELuZL3yPMHpMCpCEuE8KXZYfD3AryX/Ni4b/IeCxdsCnIOH39RpKJ1VIRxmlPuDdXScKiyJU7+vAb31elNmFLJX67mgn14NT9MJ77QuwSpe1/y384aKemCQZUvgBJLRy3ES1Mkp4sDVX8BeCLspnFlDXutXsvuj1qHwm61R69cPqqk+8b81nLQ09Pz0P0X</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F951062DA7A74BE7E0401F0A059928E6</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj0chF8ItKkhpoW3OKS0Ftt3ty8o4E3A3cVLbAcqvP3ZoUqCXwx4JCXkynvnm4m/mlKMkdjyfc2CCpFQL+l39F0QNsOthw+hEzdBwOzMwZuEsMiBywLEjB7WQo2sB5zkElAtERVd3LNs1rIZhu1PL8ty6Z9VrrXbnUdfugXFpWqrULF1bJzHlXuG2q+eMeinihHsUJcA9gb2JP7z2pKaHSkx673SLsnDIegshMs80cS0EDHGMazhNzFNzT+c05N6EzCkSOYNXnyHv6q93V6tVbVWvpWxuOpZlmVbHlDohJ/Nveu+kvAxhQKN0ez5HNKUEo5hskAI1BLFIQ82P5ykjYpF8Yto2bUuZNmCNDWy79Jtuvjko0B1paQ8k48jgC2SXxsYQAQOKQfs+Drr6t+MquL07ZYjyKGUJPzj/GSSgS4jTDEKDl5GV6I63+EG6eqeAvYDiOOdkCTeqTTKEgWsjBhFZXxMumy/kWlF+bc3lj5RdBvhPynJq7mKV0M0PstMnc+Di/9Rst15bK/cozqEXOQ0H1/nYoSa/uGpMLutzl9+L5t3PoFtA2FXegqrK/Xo+bNaqt14vPbIfnP7djB6+B5vF08J+mjujgF0m5+H5Ldvci58P7OyykV1Mg/v4Ig/ZcIk6IQ7W2L/GKM83d+x52Fq5f7m/yerkDJ7ZndUe3Syv3HTY/J7QiM3MmPt8WA+y62Hnbpii1fhpNhBcBOKKPQ4mbOQMZw/pffByk79MVpfjZNS/vaWTE5RNNw8PydkZhn/Go/ZVMA+6bzHtxrAvLClhks+eAIvyqNoj6GsXsl5IfE0vSkJCIypUvUxxFBdAhd5TtxS1eLkkIBJ6spjb80WnYTlO2/fbzVar7/gDy7XsC8u3Wp2O5fYHJQdtURxAPE9pRJQvxbLb/vkaIE48DjQEZizTHC+A619Y7COBtICO5eNIKYdpKll84zYbduzOMxFubMot1HpySY7iZ127ScUtvWV+JIDtU3d9j7rHgElGQPG7anAuO5wLmYtntMxFbNeWqEYhlxOAKRL2HLfdMDlJshgUUjNJwzyGWrbIisyYfPvvGAjzQjoeTIuH92lch9/KFEidkCgFrmI5A1lGeDeDHK9RBvJ5wM3dgEvzfh4S9b5kPgUjeItk/9Nbm6j+qHpERvTrfPLLLnFX6kdff3/T/AKUeZiPylG4JDtuy2Eq54Nkj15ZzWdUe67ly2Ve1K+lmJFJ86YkSNucAM4lvb1M099AzcqEedR0qVAfeK7k+/hysaATgQQkstu04njEajEBrlaLQD6T9bF7y55LmTcBa/GR7DyWG4hC/OWSgj2s9KR4JP9WKQvfyvWBrR0/Mk65TwhC5+qk5sjLJ02BU2mWSOJL2a7xjwx85HxfWCW5wiJkN81yAZ9/0RSjdXWEcZpTEfT1QrDLsgVO8ZKB96b0zkzB5K+jec0/Hc0/htcTyXcJ0itd8t/KBinaBYOuNoACS1dfy01TOqfzHVZ/BXhA7LbVdPp+y2+5Z4NWReyNTsdpD5pVAvci6b0Tv5fs5PTwPfT+BQ==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950228AA8677D2AE0401F0A079904DE</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950228AA8677D2AE0401F0A079904DE</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_08432</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950228AA8687D2AE0401F0A079904DE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00028_ACCESS_UVTC_UserName_RequestorUserFAU_Active_RequesteeOtherFAU_ValidateEmail_Role_DECE_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult FAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult FAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZrU/I6EP7ur+jUj07phWs7wAyKeBAUpXj94oQ0hfC2CSQpVH/9SYpFQPTwnhlmmGw3u89e8uzWOYgjx2txjpjAlGjddkN/C6BrB2PLNsJxODZKgVU2xqBaMcrFaikENRsG0NG1LucJ6hIuABEN3bHskiEV7dLIsrxS0bMqhVrZetW1R8S4NC1VCpaupXFEuJe5begJIx4FHHOPgBhxT0DPb930PanpgRyT3qyvUWYOWXMqxNwzTVgIEERRBAuQxmbd3NGpB9zz8YQAkTD06TPgDf3z7mq1KqyKBcompmNZlmm5ptQJOJ6c6s2T/DIKuiSk6/MFIJRgCCL8ARSoGySmNNBa0YQyLKbxD6Zt07aUaQOl0IB2iZzq5peDDN2RlnZAMg4MPgV2bmyIQsQQgUh7GHYb+ulxFVzfHTFAeEhZzPfOfwcJkSWK6BwFBs8jy9Edb/FAupp1BL0ugVHC8RLdqjaZA4i4dsdQiNM+5rL5Aq5l5ddSLn847zIE/6YsdXMbq4RuHshOG08QF/+nZtv1Wlt5BFGCmhWzardW40VxZAd8OPKX/Zf2tHwnkmTSyCBsK69Bbcr9ed5v1k1vfV4azWoX5637fi8+6y2f/cvBA1zB2k3/RjyY14/sOv3TO+8t4seL2d2L26k+hAMUdX3XH9jFRa1n2rP5P7dj9zoQV4POyf1Z752Slf9UiZ7pnQu7CWvdnvWs96dZ+34pJuVX3xGP5viy836GKBj4Ia09vIh7PKzdjDtPrdoVG0VT1rmvnIcno/liXAPR+WQWoNdZlV0B3viKaTuGXWFOCX4yniEo8qNqj25b68h6AfE7vSgJDowwU/XmiqO4QEToTXVLUYuXSALCgSeLuT533LLlFMtu8bLTts9LzqVVsuyO1bLKrmu51XLOQWsUexAvKAmx8qVYdt0/vwOEsccRCRAzljSBU8T1Xyy2gQBalwzl46CEoxGVLF4sgZTOaqtK+oHTD6f6gavLckq5rt1SMSAD1goFYrvMXdxh7iGCeI6RonfV31w2OBcyFQuwTERkF5agQFAiBwBTHOw5pVrZ5DieR0gBNWMaJBEqzKfzLDEmX/87BoA8kw4vR9m7+zGs/W95BqROgJUCV7GcI1lF9G0EOV45D+TngCvbAefmW0mA1fOS6RQMwzWS3U9fXaLaY9MiMqK3C//NznFv1I++/v2m+Qsocz8fG0fBEm+5zWepHA+SPJp5NRegsCgky2WS1a+qiJFJ86bkR9v0EUwku72P6B9EzI0J86jhskG953kj38WXiCnxBRAolt2mZccjNgsfcbVZdOUrSY9dW3ZcyrwJlIpDsotILiAK8a87CvSg0pPiO/m3oiz4KtcBW1t+ZJxynRCYTNRJjZH3H5oCUmkWS96jbNv4IQOHnO8KN0neYBGym8aJQD9/0RShNXQAIU2I6Lb1TLBNshlO8T5H3pfSNzMZkX9O5pT/OJmfb/q+pLsY6Btd/N/KBs7aBSJdLQAZloaeykVTOieTLVL/BPiN152iWy3al47jVnZ5vVbdJHAnkuY38XfJVk7330PzXw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F9502239731E2296E0401F0A05990987</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F9502239731E2296E0401F0A05990987</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95023593EFD1B42E0401F0A05990975</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95023593EFD1B42E0401F0A05990975</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_08435</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95023593EFE1B42E0401F0A05990975</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_08438</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_08438</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_08438</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZrU/I6EP7ur+jUj07phWs7wAyKeBAUpXj94oQ0hfC2CSQpVH/9SYpFQPTwnhlmmGw3u89e8uzWOYgjx2txjpjAlGjddkN/C6BrB2PLNsJxODZKgVU2xqBaMcrFaikENRsG0NG1LucJ6hIuABEN3bHskiEV7dLIsrxS0bMqhVrZetW1R8S4NC1VCpaupXFEuJe5begJIx4FHHOPgBhxT0DPb930PanpgRyT3qyvUWYOWXMqxNwzTVgIEERRBAuQxmbd3NGpB9zz8YQAkTD06TPgDf3z7mq1KqyKBcompmNZlmm5ptQJOJ6c6s2T/DIKuiSk6/MFIJRgCCL8ARSoGySmNNBa0YQyLKbxD6Zt07aUaQOl0IB2iZzq5peDDN2RlnZAMg4MPgV2bmyIQsQQgUh7GHYb+ulxFVzfHTFAeEhZzPfOfwcJkSWK6BwFBs8jy9Edb/FAupp1BL0ugVHC8RLdqjaZA4i4dsdQiNM+5rL5Aq5l5ddSLn847zIE/6YsdXMbq4RuHshOG08QF/+nZtv1Wlt5BFGCmhWzardW40VxZAd8OPKX/Zf2tHwnkmTSyCBsK69Bbcr9ed5v1k1vfV4azWoX5637fi8+6y2f/cvBA1zB2k3/RjyY14/sOv3TO+8t4seL2d2L26k+hAMUdX3XH9jFRa1n2rP5P7dj9zoQV4POyf1Z752Slf9UiZ7pnQu7CWvdnvWs96dZ+34pJuVX3xGP5viy836GKBj4Ia09vIh7PKzdjDtPrdoVG0VT1rmvnIcno/liXAPR+WQWoNdZlV0B3viKaTuGXWFOCX4yniEo8qNqj25b68h6AfE7vSgJDowwU/XmiqO4QEToTXVLUYuXSALCgSeLuT533LLlFMtu8bLTts9LzqVVsuyO1bLKrmu51XLOQWsUexAvKAmx8qVYdt0/vwOEsccRCRAzljSBU8T1Xyy2gQBalwzl46CEoxGVLF4sgZTOaqtK+oHTD6f6gavLckq5rt1SMSAD1goFYrvMXdxh7iGCeI6RonfV31w2OBcyFQuwTERkF5agQFAiBwBTHOw5pVrZ5DieR0gBNWMaJBEqzKfzLDEmX/87BoA8kw4vR9m7+zGs/W95BqROgJUCV7GcI1lF9G0EOV45D+TngCvbAefmW0mA1fOS6RQMwzWS3U9fXaLaY9MiMqK3C//NznFv1I++/v2m+Qsocz8fG0fBEm+5zWepHA+SPJp5NRegsCgky2WS1a+qiJFJ86bkR9v0EUwku72P6B9EzI0J86jhskG953kj38WXiCnxBRAolt2mZccjNgsfcbVZdOUrSY9dW3ZcyrwJlIpDsotILiAK8a87CvSg0pPiO/m3oiz4KtcBW1t+ZJxynRCYTNRJjZH3H5oCUmkWS96jbNv4IQOHnO8KN0neYBGym8aJQD9/0RShNXQAIU2I6Lb1TLBNshlO8T5H3pfSNzMZkX9O5pT/OJmfb/q+pLsY6Btd/N/KBs7aBSJdLQAZloaeykVTOieTLVL/BPiN152iWy3al47jVnZ5vVbdJHAnkuY38XfJVk7330PzXw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F9502239731E2296E0401F0A05990987</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0TpYxVyIRQSFSQKvWTv0nYD7Sl9qYwzgNvEhtiBwNcfOzQU6OWwj4SEPBnPrLl4zZxxFEeO3+QcEkEY1YJ2XX9xEaBa6LiGNXTLhos826hZqGq4p9Wwgmo1b+jUdC3gPIWAcoGoqOuOZUv9imG7fcvy3bJveSXv1H3WtUdIuDQtVUqWrmVxRLmfu63raUJ9hjjhPkUxcF9gv9fs3PhS00cFJr1xtkaZO0waEyGmvmniUggYogiXMIvNM3NH5yzkfo+MKRJpAu8+Q17X3+8uFovSolxiydh0LMsyLc+UOiEn42O9cVRchjCgI7Y+txBllGAUkRVSoDogJizUmtGYJURM4m9M26ZtKdMGZNjAtkuPdfPDQY7uQEs7IBOODD5BdmGsCyNIgGLQHrpBXT8+rILru/0EUT5iScz3zn8HCegcIjaF0OBFZAW6wy1+ka7GGWA/oDhKOZnDrWqTKcLAtfsERiS7IVw2X8i1vPxaxuWPFF0G+G/KcmZuY5XQzS+y0yZj4OL/1Gy7XmsrjyhKoZH1Whdk7vSsye+T8fPr05VrL82ra3uKF/UcwrbyGtSm3O/n/Wbd9Nb7pdBrvj1XhzV3aY6f3qahMwn+tLqPg9OHwWs8Hv4zKL8ORgH7nWW3dBZEnefJsr18rD28la9GndZo1KoNex3ycCX42/kRnaDwCZ+0newaw92v0eIkux7Eq+sqq3n2fTtxvOb5qh8MaJSc9y9EZRpCet6Jmxfj4eskumwy9kew4WqYzZLOUWXWXa46PS92r+/tB0ucDqz6R0zbMewKC0ropcNXwKI4qvYI2tqlrBcSP9OLkpDQGOWq/lRxFBdAhd5QtxS1+KkkIBL6spjr86VXsdqOVXbtStWWwV5YrmVfWk2r4nlO9fyy4KA1ij2ILUZHRPlSLLvun58B4tjnQENIjDlL8QS4/oPFNhJIC2hXPg5GOfSZZHEbLcJZpZwO52hIVzyrWlRktitede2WiTt6lzRHApJd6i7vUHcXMJkSUPyuGpzLDudC5mKG5qmI7NIclSikcgIkioR9x61VTE7iaQQKqRmzMI2gNJ1M88yYfP3vGAjzXNq96OcP79u49r8VKZA6IVEKXMVyDrKM8GkGOX6lCOT7gE+3Ay7MN9OQqPcl8ykSgtdIdj99tInqj02PyIheWr0Xu8C9UT/4+ueb5g+gzP18bByFc7Llthimcj5I9mgU1Zyh0qyUzudpXr+qYsZEmjclQdpmD3Aq6W3ZZ29AzY0J86DpskG953kj38WXigntCSQglt2m5ccDVosecLVaBPKZZIfuLTsuZd4EZOIrWSuSG4hC/OOSgn2s9KT4Xv4tWBJ+lOsLW1t+ZJxynxCEjtVJzZHlN02BmTRLJPGxZNv4Vwa+cr4r3CR5g0XIbhqmAr7/oilGq+sIY5ZSEbT1XLDNsjlOsZyC/6H0yUzO5O+jOePfjuanzk1P8l2M9I0u+W9lg+TtgkFXG0COpa5nctOUzul4i9XfAe4Tu+OUvWrZvnAc73Sb2C2vVt0kcCeSxifxZ8lWTvffQ+Nf</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950D20341571891E0401F0A059927BF</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950D20341571891E0401F0A059927BF</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_08438</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950D20341581891E0401F0A059927BF</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00029_ACCESS_UVTC_UserName_RequestorUserBAU_Active_RequesteeSelf_ValidateEmail_Role_DECE_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc6JKEH7Pr6DYxy0cQFCholUmJueQTUw26ubysjUOjU4CAzKDkvz6HTAQNSbHPVVWWdP0dH99ma/7mOMoNN0+55AKGjPFG3TV3zZMrdbUsrROYE41q93WtWnTIBp0LICObzuGY6mKx3kGHuMCM9FVTd2wNN3WDGus667VdA2z0WmZj6ryC1IuTUuVhq4qeRQy7pZuu2qWMjfGnHKX4Qi4K4g76l9dulLTxRUmtXe8Rlk6THtzIRIXIdLwgUAYkgaJI3SMtnSOfe6O6IxhkaXw5tPnXfXt7mq1aqyajTidIVPXdaQ7SOr4nM6+qb2j6jL4Hgvi9fkUs5hRgkP6igtQVyDmsa/0w1mcUjGPPjFtIEMvTGuQE40YFvumoncHJboDLW2BTDnW+BwblbFbCCAFRkCZ3Hpd9dthFVzfHaeY8SBOI75z/jtIwJYQxgn4Gq8iq9AdbnFPunrHQFyPkTDjdAnDok0STIArNykENL+kXDafz5Wy/ErO5Y9WXQbkb8pyjDaxSuhoT3YGdAZc/J+abdZrbeUXDjPo3d/9Qy5+XiWz8MI8MfOfZ82zqzx5jM/hoVtC2FReg6rL/Xbebda6t94uMWSMF2RxGSSTICCIvKarYftC9PtZOLtfUv9OpvbfySx6HmWrU/PH6Wwipvcpnd9cGye/vj/gF8d6Sn7SvkN0dPQUBvbrQ+d1eH12I64nzklwMb10pt7EztqPE/0uGj0mD3fTnLRf5/hxiMjQm2bmoNPyfjSdu5NVa2g8JvCcjcdB/yhcoOdh9t3OXmjHH44vHl4fuu8xbcawLawoYZRNn4CI6li0hzdQzmW9sPiaXgoJ9bWgVHWTgqO4ACbUXnGroBY3kwREfVcWc30+d2xDd8x237ZP2k7LPtMt3TjX+7rtOE2n06w4aI1iB+JpzAJa+CpYdt0/XwMkkcuB+ZBqyzgjc+DqFxYHWGDFY7fyccSMwziWLB4xa2ZQy39e5dzguR0C77wkgWmoyjAW1+w67QcC0m3qbm5R9y0QmlAo+L1ocC47nAuZiwVeZiI0GkvcYJDJCZAWJOyaVsdGnEaJdCWRoij2sxAayTwpM4P4+t/UMOGl9PZsXD68T+Pa/ValQOr4tFDgRSwnIMsIe2aQXgXyecCtzYAr8/3Mp8X7kvkUKSVrJNuf3tuk6I+6R2REv09Hv40Kd61+8PWPN9EXoNBuPmpH/pJuuK2GqZwPkj16VTUXuLFoZMtlVtavXTBjKs0jSZAGGgHJJL29jONnYKg2gQ6aLjXqHc+1fBtfJuZsJLCASHabUh4PWC1GwIvVwpPPJD90b9lyKfMmIBf7ZKeh3EAKxF8uKcQlhZ4U38i/VZz67+XaY2vDj4xT7hOCsllxKubIyydNQWJplkrii9NN4/sM7HO+LayTXGMRspummYDPvygFo3VVTEicMeEN1FKwybIlTvGSgPuu9MFMyeRvoznnn47m+6vLkeS7CKu1Lv1vZY2W7UJALTaAEktXzeWmKZ2z2QarvwHcIXZ9YOotvWn2z9vnVk3sbcexWy2nTuBWJL0P4o+SjZzuvofeHw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950D206032AF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950D206032AF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F9510927A55B7965E0401F0A05993983</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F9510927A55B7965E0401F0A05993983</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_084311</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F9510927A55C7965E0401F0A05993983</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_084314</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_084314</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_084314</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbc6JKEH7Pr6DYxy0cQFCholUmJueQTUw26ubysjUOjU4CAzKDkvz6HTAQNSbHPVVWWdP0dH99ma/7mOMoNN0+55AKGjPFG3TV3zZMrdbUsrROYE41q93WtWnTIBp0LICObzuGY6mKx3kGHuMCM9FVTd2wNN3WDGus667VdA2z0WmZj6ryC1IuTUuVhq4qeRQy7pZuu2qWMjfGnHKX4Qi4K4g76l9dulLTxRUmtXe8Rlk6THtzIRIXIdLwgUAYkgaJI3SMtnSOfe6O6IxhkaXw5tPnXfXt7mq1aqyajTidIVPXdaQ7SOr4nM6+qb2j6jL4Hgvi9fkUs5hRgkP6igtQVyDmsa/0w1mcUjGPPjFtIEMvTGuQE40YFvumoncHJboDLW2BTDnW+BwblbFbCCAFRkCZ3Hpd9dthFVzfHaeY8SBOI75z/jtIwJYQxgn4Gq8iq9AdbnFPunrHQFyPkTDjdAnDok0STIArNykENL+kXDafz5Wy/ErO5Y9WXQbkb8pyjDaxSuhoT3YGdAZc/J+abdZrbeUXDjPo3d/9Qy5+XiWz8MI8MfOfZ82zqzx5jM/hoVtC2FReg6rL/Xbebda6t94uMWSMF2RxGSSTICCIvKarYftC9PtZOLtfUv9OpvbfySx6HmWrU/PH6Wwipvcpnd9cGye/vj/gF8d6Sn7SvkN0dPQUBvbrQ+d1eH12I64nzklwMb10pt7EztqPE/0uGj0mD3fTnLRf5/hxiMjQm2bmoNPyfjSdu5NVa2g8JvCcjcdB/yhcoOdh9t3OXmjHH44vHl4fuu8xbcawLawoYZRNn4CI6li0hzdQzmW9sPiaXgoJ9bWgVHWTgqO4ACbUXnGroBY3kwREfVcWc30+d2xDd8x237ZP2k7LPtMt3TjX+7rtOE2n06w4aI1iB+JpzAJa+CpYdt0/XwMkkcuB+ZBqyzgjc+DqFxYHWGDFY7fyccSMwziWLB4xa2ZQy39e5dzguR0C77wkgWmoyjAW1+w67QcC0m3qbm5R9y0QmlAo+L1ocC47nAuZiwVeZiI0GkvcYJDJCZAWJOyaVsdGnEaJdCWRoij2sxAayTwpM4P4+t/UMOGl9PZsXD68T+Pa/ValQOr4tFDgRSwnIMsIe2aQXgXyecCtzYAr8/3Mp8X7kvkUKSVrJNuf3tuk6I+6R2REv09Hv40Kd61+8PWPN9EXoNBuPmpH/pJuuK2GqZwPkj16VTUXuLFoZMtlVtavXTBjKs0jSZAGGgHJJL29jONnYKg2gQ6aLjXqHc+1fBtfJuZsJLCASHabUh4PWC1GwIvVwpPPJD90b9lyKfMmIBf7ZKeh3EAKxF8uKcQlhZ4U38i/VZz67+XaY2vDj4xT7hOCsllxKubIyydNQWJplkrii9NN4/sM7HO+LayTXGMRspummYDPvygFo3VVTEicMeEN1FKwybIlTvGSgPuu9MFMyeRvoznnn47m+6vLkeS7CKu1Lv1vZY2W7UJALTaAEktXzeWmKZ2z2QarvwHcIXZ9YOotvWn2z9vnVk3sbcexWy2nTuBWJL0P4o+SjZzuvofeHw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950D206032AF7F4E0401F0A07995669</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH1chDgTSRAWJQrmbqtAu0O52X1au4xDTxEltB1J+/bVDkwKlveyVkJAn45kzHz4z5xwmcdPrc46ZICnV/GFX/9NshWHQdizDOXPbhm25lgFbLdt4tENoWxCctRHUNZ/zHPuUC0hFV28CyzZA27DsOQCe3fKsdsO17d+6do8Zl6alSgPoWpHElHul266eM+qlkBPuUZhg7gnkzfrja09qerDCpPfOtyhLh6wXCZF5pokaAUY4jlEDpYl5bu7pnAfcm5EFhSJn+NVnwLv66931et1YtxopW5hNAIAJXFPqBJwsvuq9L9VlHPg0TLfnAaQpJQjGZAMVqDEWURpo/XiRMiKi5APTlmkBZdrABTKQZdOvuvnmoER3oqU9kIxDg0fQqoxNcYgZpghrd1O/q389rYLbu3MGKQ9TlvCD899BwnSF4zTDgcGryCp0p1s8kq7eOUaeT1Gcc7LCE9UmGUSYa7cMh6S4Jlw2X8C1svxaweWPVF2G0d+U5dzcxSqhm0eyMyQLzMX/qdluvbZW7mGc495DwMZn4WSauDdXk8nP3w8c+Il59/K0XHdLCLvKW1B1uV/Ph81a99brpfjeyogo5iP0dFb84/50FvmVfxGuL+f92wf4+Gt1d3sLsm9g7IyXP6aAZwWcuzGH5ix6QeKiY+ez4u7ywp0L0v7yg60fx9dP6zFl/MoFAG2S6DfPmv7DctGhv6I+iYh/drlw+87khnwfthNo3nY6aBx2NnzS4j+ijF11wlaw2Wy+DBx0fzX7XgyfB85kQH463+66bzHtxrAvrChhlj8uMRLVUbWHP9RGsl5QfE4vSkICIyxVvUxxFBeYCr2nbilq8XJJQCTwZDG355HbBk3LdYZuZ9RsO61LYANrBPqg7brA7V9UHLRFcQBxkNKQKF+KZbf98zlAlHgc0wAzY5XmKMJc/8TiEAqo+XQqH0dKOZ6nksWtfPPMlhnq5Mtl9Ehs+LRGm5Z44bo2ScUNvWH9UGC2T92tPeqeYkQyghW/qwbnssO5kLl4hqtcxFZjBRsU53ICMEXCXtM+a5ucJFmMFVIzSYM8xo0sysrMmHz73zQg4qV0ejkvH96HcR1+q1IgdQKiFLiK5QLLMuIjMwhUgXwccGc34Mp8Pw+Iel8yn4IRtEWy/+mtTVR/1D0iI/ozmP2xKty1+snX3980PwFlHuajdhSsyI7bapjK+SDZo1dV8xk2nhv5apWX9XMUMzJp3pQEaZkzjHJJby/z9AlTszZhnjRdatQHnmv5Pr5cRHQmoMCJ7DatPJ6wWswwV6uFL59JceresudS5k3gQhyTDWK5gSjEny4pyENKT4pv5d86ZcFbuY7Y2vEj45T7hCB0oU5qjrx80BQolWaJJL6U7Ro/ZuCY831hneQai5Dd9JgL/PEXTTFaV4cIpTkV/lAvBbssW+IULxn23pTemSmZ/HU0F/zD0fxrfD2TfJdAvdYl/61skLJdENbVBlBi6eqF3DSlc7rYYfVXgIfEPmyCDmg1+yNnZNfE7rhuu9Nx6wTuRdJ7J34v2cnp4Xvo/Qs=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F9502197D96F2573E0401F0A059909AB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F9502197D96F2573E0401F0A059909AB</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_084314</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F9502197D9702573E0401F0A059909AB</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00030_ACCESS_UVTC_UserName_RequestorUserBAU_Active_RequesteeFAU_ValidateEmail_Role_DECE_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj6sQ58IlUUGipWzpvYRtt31ZuckkeJs4NHZC6K9fOzQUKO1hj4SEPBnPfHPxN3PIcBKbbp8xyDhJqTIadNXfTju0IOyEGu4YtmaHDmgYUEvrILBMG9mdjhWoyoixHEaUcUx5VzWRUEVNzbAnCLm25RpOo9VxHlXlDjImTAuVBlKVMokpcyu3XTXPqJtiRphLcQLM5b7r9S8vXKHp4hqT2jtcoqwcZr0p5zNX1/1GAD7Esd/w00Q/1Dd0DgPmeiSimOcZvPkMWFd9uzufzxtzq5FmkW4ihHTk6EInYCQ6UHvf6ssQjGiYLs/HmKaU+Dgmr1iCugQ+TQOlH0dpRvg0+cS0oRtImtag9DXfsOmBqr87qNDtaWkDZMawxqbYqI2NIYQMqA/Kz/Goqx7sV8Hl3UmGKQvTLGFb53+DBLSAOJ1BoLE6shrd/hZ3pKt3CL47on6cM1LAlWyTGfaBKTcZhKS8IEw0X8CUqvxKycSP1F0G/r+U5VBfxyqg6zuyMyARMP5/arZer6WVOxzn0BsU3uJ2fhScPLApuvjRemxO7kf53aPdv+1WENaVl6BW5X47bzfrqrfeLpXDs/Oj05TExm1kUPRcRvTy6bo4Nh+ey+uFV5r343bWfwV6jkbNwb0e38yP8M/cC08jb/ZwP74z76bnxeAkxsb421m8mCTMOXs6XcQvp99fHA//vITm09WEjE5ZnP9qztndPXo9Nc8AILKTYUHb9PbRClnrvMUn9PGmnx2XP4avcfHNjB+mV99frXii/1mML6H8YXffY1qPYVNYU4KXP/0Bn9dH2R6jgTIU9cL8a3qREhJoYaXqziRHMQ6Uqz15S1KLmwsCIoErirk8D52mgdpts2830dCyBifIRsYQ9VHTcSzUP6o5aIliC+JxSkMifUmWXfbP1wD9xGVAA8i0Is39KTD1C4sDzLEyomPxOFLKYJIKFl9EhLWSfJ5QwzKeXgvTekHWczqPVOUq5df0OuuHHLJN6rY2qHsMPpkRkPwuG5yJDmdc5OIFFzmPjUaBGxRyMQEyScKuaXeaOiPJLAaJVE/SII+hMZvOqszobPlvathnlXR8Mqke3qdxbX+rUyB0AiIVmIzlCEQZYccMQnUgnwfcWg+4Nt/PAyLfl8gnz4i/RLL56b1NZH+sekRE9PvY+23UuFfqe1//eFP/ApS+nY+Vo6Aga27rYSrmg2CPXl3NF9x4aeRFkVf1a0tmzIR5XRCkoXvg54LeFpP0Gai+MqHvNV1WqLc8r+Sb+HI+pR7HHBLRbUp13GO18IDJ1WIknkm5796y4VLkjUPJd8mOY7GBSMRfLim+60s9Ib4Rf/M0ew98l601PyJOsU9wQiN5knNk8UlT+KkwSwTxpdm68V0GdjnfFK6SvMLCRTc95Rw+/6JIRuuq2PfTnPLRQK0E6yxb4eSLGbjvSh/MVEz+NppL9ulo/nV54Qm+S7C60iX/rayRql18UOUGUGHpqqXYNIVzGq2x+hvALWJHpmk5bUv+O611YkdOp71K4EYkvQ/ij5K1nG6/h95f</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950223973502296E0401F0A05990987</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950223973502296E0401F0A05990987</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F9510772A450F33DE0401F0A059930AB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F9510772A450F33DE0401F0A059930AB</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_084318</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F9510772A451F33DE0401F0A059930AB</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_084321</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_084321</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_084321</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj6sQ58IlUUGipWzpvYRtt31ZuckkeJs4NHZC6K9fOzQUKO1hj4SEPBnPfHPxN3PIcBKbbp8xyDhJqTIadNXfTju0IOyEGu4YtmaHDmgYUEvrILBMG9mdjhWoyoixHEaUcUx5VzWRUEVNzbAnCLm25RpOo9VxHlXlDjImTAuVBlKVMokpcyu3XTXPqJtiRphLcQLM5b7r9S8vXKHp4hqT2jtcoqwcZr0p5zNX1/1GAD7Esd/w00Q/1Dd0DgPmeiSimOcZvPkMWFd9uzufzxtzq5FmkW4ihHTk6EInYCQ6UHvf6ssQjGiYLs/HmKaU+Dgmr1iCugQ+TQOlH0dpRvg0+cS0oRtImtag9DXfsOmBqr87qNDtaWkDZMawxqbYqI2NIYQMqA/Kz/Goqx7sV8Hl3UmGKQvTLGFb53+DBLSAOJ1BoLE6shrd/hZ3pKt3CL47on6cM1LAlWyTGfaBKTcZhKS8IEw0X8CUqvxKycSP1F0G/r+U5VBfxyqg6zuyMyARMP5/arZer6WVOxzn0BsU3uJ2fhScPLApuvjRemxO7kf53aPdv+1WENaVl6BW5X47bzfrqrfeLpXDs/Oj05TExm1kUPRcRvTy6bo4Nh+ey+uFV5r343bWfwV6jkbNwb0e38yP8M/cC08jb/ZwP74z76bnxeAkxsb421m8mCTMOXs6XcQvp99fHA//vITm09WEjE5ZnP9qztndPXo9Nc8AILKTYUHb9PbRClnrvMUn9PGmnx2XP4avcfHNjB+mV99frXii/1mML6H8YXffY1qPYVNYU4KXP/0Bn9dH2R6jgTIU9cL8a3qREhJoYaXqziRHMQ6Uqz15S1KLmwsCIoErirk8D52mgdpts2830dCyBifIRsYQ9VHTcSzUP6o5aIliC+JxSkMifUmWXfbP1wD9xGVAA8i0Is39KTD1C4sDzLEyomPxOFLKYJIKFl9EhLWSfJ5QwzKeXgvTekHWczqPVOUq5df0OuuHHLJN6rY2qHsMPpkRkPwuG5yJDmdc5OIFFzmPjUaBGxRyMQEyScKuaXeaOiPJLAaJVE/SII+hMZvOqszobPlvathnlXR8Mqke3qdxbX+rUyB0AiIVmIzlCEQZYccMQnUgnwfcWg+4Nt/PAyLfl8gnz4i/RLL56b1NZH+sekRE9PvY+23UuFfqe1//eFP/ApS+nY+Vo6Aga27rYSrmg2CPXl3NF9x4aeRFkVf1a0tmzIR5XRCkoXvg54LeFpP0Gai+MqHvNV1WqLc8r+Sb+HI+pR7HHBLRbUp13GO18IDJ1WIknkm5796y4VLkjUPJd8mOY7GBSMRfLim+60s9Ib4Rf/M0ew98l601PyJOsU9wQiN5knNk8UlT+KkwSwTxpdm68V0GdjnfFK6SvMLCRTc95Rw+/6JIRuuq2PfTnPLRQK0E6yxb4eSLGbjvSh/MVEz+NppL9ulo/nV54Qm+S7C60iX/rayRql18UOUGUGHpqqXYNIVzGq2x+hvALWJHpmk5bUv+O611YkdOp71K4EYkvQ/ij5K1nG6/h95f</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950223973502296E0401F0A05990987</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbc5s6EH7vr2DoYwYj8C0wsWd87aGNL7GdtOlLRxbCqAVBJEFIfv2RcHBsx8lxz4xnPFpWu99e9O1ecRhHttvjHDNBEqp5w47+q752AgyChmFfNnyjUfd9AzaClmH7jtMELQfAta9rHucZ9igXkIqObgOrYYCmYTVWALiNumvbtXaj/lPX7jDj0rRUqQFdK+KIcrd029EzRt0EcsJdCmPMXYHcZW9y7UpNF1aY9O7VFmXpkHVDIVLXNFHNxwhHEaqhJDavzAOdK5+7S7KhUGQMv/j0eUd/ufv4+Fh7rNcStjFtAIAJHFPq+JxsPuvdT9Vl7Hs0SLbnAaQJJQhG5BkqUBMswsTXetEmYUSE8TumLdMCyrSBC2Qgq0E/6+argxLdmZYOQDIODR5CqzK2wAFmmCKs3S68jv75vApu764YpDxIWMyPzn8HCdMcR0mKfYNXkVXozrd4Il3dK4xcj6Io4yTHU9UmKUSYa3OGA1JcEy6bz+daWX6t4PJHqi7D6G/KcmXuY5XQzRPZGZIN5uL/1Gy/XlsrdzDKcDe//D1qz6CXY3rTuvh5H+ar60V8f9Ef33dKCPvKW1C7cr+cj5t111svlxbF8MErxmAZTsMcWtG0uHmis+8kr4+ToH/35fts1F9t8mywmV5Mhheo3xzdNXvMWSMatVH640Esiuymz+4ufrQ+fZ2krfnXb2jens5juBw1nNjDrXDRX4HniKX+bf5PPFmtb78V9jqep+GfWTi9IXd4OkRW+/qpHSzsG9Azr5HpgU/Bamx9GTi3S5bPJl8eJvPBfec1pv0YDoUVJSyz9W+MRHVU7eENtbGsFxQf04uSEN8ISlU3VRzFBaZC76pbilrcTBIQ8V1ZzO15LJ/OUPJcezgYDcCoNQINYI1BDzQdx273mxUHbVEcQRwkNCDKl2LZbf98DBDFLsfUx8zIkwyFmOsfWBxCATWPLuTjSCjHq0SyuAUozC83TsxgSqOms/7zmD23QIZ0bZqIGZ2xXiAwO6Tu+gF1LzAiKcGK31WDc9nhXMhcPMA8E5FVy2GN4kxOAKZI2LUbl02TkziNsEJqxomfRbiWhmmZGZNv/20DIl5KF6NV+fDejev4W5UCqeMTpcBVLH0sy4hPzCCrCuT9gFv7AVfme5lP1PuS+RSMoC2Sw0+vbaL6Y9cjMqJfg+Uvq8K9Uz/7+tub5gegzON87Bz5OdlzWw1TOR8ke3Sraj7A2kMty/OsrF9bMSOT5k1JkJa5xCiT9Pa0Sv5gau5MmGdNlx3qI887+SG+TIR0KaDAsew2rTyesVosMVerhSefSXHu3nLgUuZN4EKckg0iuYEoxB8uKchFSk+K5/LvMWGvgZ+ytedHxin3CUHoRp3UHHl6pylQIs0SSXwJ2zd+ysAp54fCXZJ3WITspnUm8PtfNMVoHR0ilGRUeEO9FOyzbIlTPKXYfVV6Y6Zk8pfRXPB3R/OPyfVS8l0M9Z0u+W9lg5TtgrCuNoASS0cv5KYpndPNHqu/ADwmdtuuO+26+ncOiB04l+1dAg8i6b4Rv5Xs5fT4PXT/BQ==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950D2017DCEC0E6E0401F0A059927B5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950D2017DCEC0E6E0401F0A059927B5</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_084321</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950D2017DCFC0E6E0401F0A059927B5</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00031_ACCESS_UVTC_UserName_RequestorUserBAU_Active_RequesteeSAU_ValidateEmail_Role_DECE_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSx1WIE8IlUUHi1jbddmlLL7v7sjLOAC7BobET0v76tUOTAqU97JGQkCfjmW8u/mZOOF6EttfhHGJBI6b5/Zb+B1tj1LCadcMiDcdwUBUZuFGvGs64DshCBKpjpGs+5wn4jAvMREu3keUYqGZYzh1CnlP17EalYdV+69oDxFyalioVeStbhIx7uduWnsTMizCn3GN4AdwTxBt1ri49qenhApPePlmjzB3G7ZkQS880SSUAAmFIKiRamCfmls5JwL0RnTIskhjefAa8pb/dXa1WlVW1EsVT00YImcg1pU7A6fRYbx8VlyHw2SRan3uYRYwSHNJXrEBdgZhFgdYJp1FMxWzxiWnLtJAybUBGDGI57Fg33x3k6A60tAUy5tjgM2wVxm5hAjEwAtr9rd/Sjw+r4PruXYwZn0Txgu+c/w0SsBTCaAmBwYvICnSHW9yTrvYJEM9nJEw4TeGHapMlJsC16xgmNLukXDZfwLW8/FrG5Y8WXQbkX8pyYm5ildDNPdnp0ylw8X9qtlmvtZUHHCbQfnj6NW282vOB/T3yAxqlAxPsxxVu1G5aOYRN5TWostxv591mLXvr7dLKnGJiZs1rqFvuvX0+r0/EdC6uOElp1XHpA3KDYM5Ilonl98HN4/nwJcDJr1G36ne7g2nv5vfQ7F1+gyyZ9I9SPLlxz2aPZ358t2IWuroY1cdO/+nePEshsIfhPB3iuT3rnn+DJZ/i8OGp/xR1E37m1F4Wg2v3lXSvhuIV9y/ujy6WrzF97l2f/8xuOqsnB2Peeo9pM4ZtYUEJo2T8BEQUR9Uefl87lfXC4mt6URIaGJNc1VsqjuICmNDb6paiFi+RBEQDTxZzfT51axaqV2vNZrPeR100QA6yTlEHNVy3Vq01Cg5ao9iB2IvYhCpfimXX/fM1QLLwOLAAYiONEjIDrn9hsY8F1nx2Kx9HxDjcRZLFrefYYk2OX3HyQhM2qVvcEdl4Fenaj0gM2TDuTATE29Rd3aLuWyB0SUHxu2pwLjucC5mLZ5wmIrQqKa4wSOQEiBUJe7bTrJmcLpYhKKTmIgqSECrL2TLPjMnX/7aBCc+lt4O7/OF9GtfutyIFUiegSoGrWLogywh7ZpBVBPJ5wPXNgAvznSSg6n3JfIqYkjWS7U/vbaL6o+wRGdGf3uiPVeAu1Q++/vGm+QUoczcfpaMgpRtui2Eq54Nkj3ZRzWdcea4kaZrk9WsoZoyleVMSpGWOgCSS3l7uojkwszRhHjRdStQ7nkv5Nr5EzNhIYAEL2W1afjxgtRgBV6uFL59JdujesuVS5k1AJvbJeqHcQBTiL5cU4hGlJ8XX8m8VxcF7ufbY2vAj45T7hKBsqk5qjrx80hQkkmapJL4o3jS+z8A+59vCMsklFiG7aZwI+PyLphitpWNCooQJv6/ngk2WzXGKlyV470ofzORM/jaaM/7paP55dTmSfLfAeqlL/1vZoHm7ENDVBpBjaemZ3DSlczbdYPU3gDvEjuxqza2e2j2r69glsddcF7mNWpnArUjaH8QfJRs53X0P7b8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F95023593F2C1B42E0401F0A05990975</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F95023593F2C1B42E0401F0A05990975</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95106358886D0B0E0401F0A07995357</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95106358886D0B0E0401F0A07995357</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_084326</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95106358887D0B0E0401F0A07995357</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_084331</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_084331</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_084331</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSx1WIE8IlUUHi1jbddmlLL7v7sjLOAC7BobET0v76tUOTAqU97JGQkCfjmW8u/mZOOF6EttfhHGJBI6b5/Zb+B1tj1LCadcMiDcdwUBUZuFGvGs64DshCBKpjpGs+5wn4jAvMREu3keUYqGZYzh1CnlP17EalYdV+69oDxFyalioVeStbhIx7uduWnsTMizCn3GN4AdwTxBt1ri49qenhApPePlmjzB3G7ZkQS880SSUAAmFIKiRamCfmls5JwL0RnTIskhjefAa8pb/dXa1WlVW1EsVT00YImcg1pU7A6fRYbx8VlyHw2SRan3uYRYwSHNJXrEBdgZhFgdYJp1FMxWzxiWnLtJAybUBGDGI57Fg33x3k6A60tAUy5tjgM2wVxm5hAjEwAtr9rd/Sjw+r4PruXYwZn0Txgu+c/w0SsBTCaAmBwYvICnSHW9yTrvYJEM9nJEw4TeGHapMlJsC16xgmNLukXDZfwLW8/FrG5Y8WXQbkX8pyYm5ildDNPdnp0ylw8X9qtlmvtZUHHCbQfnj6NW282vOB/T3yAxqlAxPsxxVu1G5aOYRN5TWostxv591mLXvr7dLKnGJiZs1rqFvuvX0+r0/EdC6uOElp1XHpA3KDYM5Ilonl98HN4/nwJcDJr1G36ne7g2nv5vfQ7F1+gyyZ9I9SPLlxz2aPZ358t2IWuroY1cdO/+nePEshsIfhPB3iuT3rnn+DJZ/i8OGp/xR1E37m1F4Wg2v3lXSvhuIV9y/ujy6WrzF97l2f/8xuOqsnB2Peeo9pM4ZtYUEJo2T8BEQUR9Uefl87lfXC4mt6URIaGJNc1VsqjuICmNDb6paiFi+RBEQDTxZzfT51axaqV2vNZrPeR100QA6yTlEHNVy3Vq01Cg5ao9iB2IvYhCpfimXX/fM1QLLwOLAAYiONEjIDrn9hsY8F1nx2Kx9HxDjcRZLFrefYYk2OX3HyQhM2qVvcEdl4Fenaj0gM2TDuTATE29Rd3aLuWyB0SUHxu2pwLjucC5mLZ5wmIrQqKa4wSOQEiBUJe7bTrJmcLpYhKKTmIgqSECrL2TLPjMnX/7aBCc+lt4O7/OF9GtfutyIFUiegSoGrWLogywh7ZpBVBPJ5wPXNgAvznSSg6n3JfIqYkjWS7U/vbaL6o+wRGdGf3uiPVeAu1Q++/vGm+QUoczcfpaMgpRtui2Eq54Nkj3ZRzWdcea4kaZrk9WsoZoyleVMSpGWOgCSS3l7uojkwszRhHjRdStQ7nkv5Nr5EzNhIYAEL2W1afjxgtRgBV6uFL59JdujesuVS5k1AJvbJeqHcQBTiL5cU4hGlJ8XX8m8VxcF7ufbY2vAj45T7hKBsqk5qjrx80hQkkmapJL4o3jS+z8A+59vCMsklFiG7aZwI+PyLphitpWNCooQJv6/ngk2WzXGKlyV470ofzORM/jaaM/7paP55dTmSfLfAeqlL/1vZoHm7ENDVBpBjaemZ3DSlczbdYPU3gDvEjuxqza2e2j2r69glsddcF7mNWpnArUjaH8QfJRs53X0P7b8=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F95023593F2C1B42E0401F0A05990975</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH1chCUm4RAUJKF2yvXIp29OXyjgOeElsGjsh8OuPHZoUKO1hj4SEPBnPfHPxN3PBQBRW3Q5jKOaYEsW7bKkvAKAZCJChmb5paLbv21rTtqBWC2y/ZgUNqw6hqniMJcgjjAPCW2rVMG3NcDTTnhiGa1uuZVQcu/GsKlMUM2FaqFQMVcmikDA3d9tSk5i4FDDMXAIixFwO3XHn9sYVmi4oMKntix3K3GHcXnC+cnUdVnwEURjCCqSRfqEf6Fz4zB3jOQE8idGbT5+11Le76/W6srYqNJ7rVcMwdKOpCx2f4fl3tf2tuIx8jwR0d+4BQgmGIMRbIEHdIr6gvtIJ5zTGfBF9YtrUTUOa1lAGNWja5LuqvzvI0Z1p6QBkzIDGFsAsjI1QgGJEIFIeR15L/X5eBXd3JzEgLKBxxI7OfwcJkRSFdIV8jRWRFejOt3giXe0LBF2PwDBhOEV3sk1WACKmPMQowNkNZqL5fKbk5VcyJn646DIE/6YsF/o+VgFdP5GdSzxHjP+fmu3Xa2dlCsIEtR+Gk9+W1X3kw80I3FyvNlYvfLauk/Fm2coh7CvvQJXlfjsfN2vZW2+XsgG1h7/ZD88bXlvbThcQm/Yew5XnDMjtutFN+zz+FT4O/hkn0fqP/XN5Nwyu7gfbhAb2Q3A9y0yqD+Y/h9Fynn77MZ2mtWia/nqEo2DTvM6Cwfo1RI1pY+MkdPuj/7S0Z9Pl7/p4UO1315ZP+1uwvLOeskm6WAZ9YNFbDLs3U7rcfANPk+rIBms7S67AvNF73g5b7zHtx3AoLChhnMz+IMiLo2wP71K5EvUC/Gt6kRLsa0Gu6q4kRzGOCFfb8pakFjcRBIR9VxRzd75qOkbVbFYbHce0eo7RN2zDvDI6Rr3ZNBzrsuCgHYojiD1KAix9SZbd9c/XAGHkMkR8FGspTeACMfULi5eAA8UjI/E4KGFoQgWLm7VVo47nM1oj85lZC5lTh0Gy8JNMVe4ovyf3cSfgKD7kbuuAu0cI4hVGkuBlhzPR4oyLZLyCNOGhWUlBhaBEjIBYsrBbtRuOznC0CpGEqkfUT0JUWS1WeWp0tvuvagCyXDrqT/KX92lgx9+KHAgdH0sFJmPpIlFHdGIIVYtAPg+4th9wYb6T+Fg+MJFQHmO4Q3L46b1PZIOUTSIieumNX8wCd6l+9vWPN/UvQOnH+Sgd+Snec1tMUzEgBH20i2q+gsprJUnTJK9fXVJjLMzrgiFNfYxgIvhtM6FLRPTShH7WeClRH3ku5Yf4Er4gYw44ikS3KfnxjN1ijJjcLTzxTrJzF5cDlyJvHGX8lKwXihVEIv5yS4EulHpC/CD+1jT238t1wtaeHxGnWCg4JnN5koNk80lTQCrMYsF8NN43fsrAKeeHwjLJJRYuummWcPT5F0VSWksFENKEcO9SzQX7NJvj5JsVct+VPpjJqfxtNmfs09n8dHszFoQXAbXUxf+trOG8XSBS5QqQY2mpmVg1hXMy36P1N4AfmN1ymtZVtWd27WrJ7I5g9mbdKRN4EEn7g/ijZC+nx++h/S8=</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F95021928A513C50E0401F0A0799053D</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F95021928A513C50E0401F0A0799053D</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_084329</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F95021928A523C50E0401F0A0799053D</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbc9o8EH3vr/C4jx0j37h5AjMEQkMukAJN07x0hLyAElt2LBmc/PpKJnaAkHz0m2GG0Xq1e3b36EgnHIeB7XU4h0TQiGmDXkv/4zSI3ajVXKNu1cBwq+AazRp2DEzmDga30bAdW9cGnKcwYFxgJlq6bVquYVYNy52apuc6nuNUbNO+17VbSLgMLV0qpq5lYcC4l6dt6WnCvAhzyj2GQ+CeIN6kc33lSU8PF5j09skGZZ4waS+FiD2ESMUHAkFAKiQK0Qna8TnxuTehC4ZFmsBrTp+39Ne96/W6snYqUbJAtmmayGwi6eNzuviqt78Um8EfsHm0WXcxixglOKAvWIG6BrGMfK0TLKKEimX4QWgLWaYKbUBGDGK57KuO3hLk6I6MtAMy4djgS2wVwcYwhwQYAe3neNDSvx43wc3eaYIZn0dJyPfW/wYJ2AqCKAbf4EVlBbrjIx5oV/sEiDdgJEg5XcFQ0STGBLh2k8CcZleUS/L5XMvHr2Vc/mjBMiD/MpYTtI1VQkcHutOjC+Di/8xse16bKLc4SKEdivgUJ2i66qLx+Us8u2LDPhsOV+PRWSuHsO28AVWO+3W9T9aSW6+bsikZ3QxD567xcFpj8ct1NIMRYeGdWetbY3Tu/CIL31mT2dDu/HyAoDt/qk+z38lv55JenV/8WP44H5r243Q1/ya+rM6f69/XF6x2109G59XT+4ufz7eNFA2+3cNs0YtvYjEhZn3ReBw/CQdO4/oDfmmiamBfXIZnl73v42B0O776Jezhw5f7aZb9/nYzX5h95/mxe2atB623mrZr2DUWkjBJZw9ARLFU9Bj0tL6cFxafy4uyUN+Y565erDSKC2BCb6tdSlq8VAoQ9T05zM2636yatm31Xafe6Nume2a6ptU3O2a92TTtnlVo0AbFHsRuxOZU5VIqu+HP5wBJ6HFgPiTGKkrJErj+ScQeFlgbsLE8HBHjMI2kiq+TzM+s5sMMHBI8rhdQ409kVq/r2jASIzZKOnMBya5yOzvKPQZCYwpK3hW/uSQ4F7IVT3iVisCqrHCFQSovgERpsGe7jSriNIwDUEBRGPlpAJV4GeeNQXzzb0sV4rl1fDbNz92HZe1/KzogfXyqHLiq5RTkFOHAFWQXhXxccG274CJ8J/WpOl6ynSKhZINk99MbSxQ9SorIiv50J39KKpTuR29/vxN9Agrt96NM5K/oVtriLpXXgxSPdjHNJ1x5qqSrVZrPr66EMZHhkdRHC02ApFLdnqfRIzBUhkBHXS4l6r3MpX0XXyqWbCKwgFCyTcuXR7wsJsDVy2IgT0l27LNlJ6Xsm4BMHLJ1A/kAUYg/faMQjyg/ab6Rf+so8d/GdSDWVh5Zp3xOCMoWaqWukecPSEEiGZZK3YuS7eCHAhxKvmssm1xiEZJNs1TAx180JWgtHRMSpUwMenpu2BbZHKd4jsF7c3oXJhfy15s54x/ezHfXVxMpdyHWS1/6384GzelCQFcPgBxLS8/kQ1MmZ4stUX8F+E7XnWrT6dtd69S1S12vSl1v1qtlA3cqab8zv7ds9XT/PLT/Ag==</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>F950221F4378F204E0401F0A079902D1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:F950221F4378F204E0401F0A079902D1</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20140513_084331</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>F950221F4379F204E0401F0A079902D1</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e34c814a-8ac5-424b-a19a-7d3453e3b9c7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1de1e00d-487c-492d-b21b-5e895e1ee18e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00032_ACCESS_UVTC_UserName_RequestorUserBAU_Active_RequesteeOtherBAU_ValidateEmail_Role_DECE_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Second Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Second Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+o4EH7vr4jSx1XIhXCLChK3crKnpRdot+1LZZwJuE2cEDsQ+uvXDg0FCl3OSkjIk/HMNxd/MxcMhYHltBmDhJOIKm6vqb5aVsOvWj7WGmVU1+yq6WkNv2ZqdcA2qmGoT0xbVVzGUnAp44jypmoZpq0ZFc20x4bh2GWnXCvVavaLqjxCwoRpoVIyVCULA8qc3G1TTRPqRIgR5lAUAnM4dkbt6ytHaDqowKS2LtYoc4dJa8Z57Og6LnmAIQhwCUehfqHv6Fx4zBmRKUU8TeDTp8ea6ufd5XJZWpZLUTLVLcMwdKOhCx2Pkem52jorLoPnUj9an7uIRpRgFJAPJEFdA59FntIOplFC+Cw8YtrUTUOa1iDDGjZteq7qXw5ydCda2gGZMKSxGTILY/fgQwIUg/Jw7zbV89MquL47ThBlfpSEbO/8Z5CALiCIYvA0VkRWoDvd4oF0tS4AOy7FQcrIAoayTWKEgSm3CfgkuyJMNJ/HlLz8SsbEjxRdBvhPynKhb2MV0PUD2emRKTD+f2q2Xa+1lUcUpNDqd7qZwd6u8ei31y8vcKdipc+dvyZ2YjRzCNvKa1Cbcn+e95t101ufl9jN3a+3X3fPC53PaOOlNxyYfy9XffLC7weVoZlVBre/H/u9wUM2fv6YvsfxTaXzT7h6tF6sNzecd/rtSTznkHWqln028J86Q9MYYs9fPpan1Fu9l200K9OPZPTAhsvxkxd1B8R0Vw+VyfzZH/6q9G+j4fsLXQ7Z8M2zO173YaLfGvMsPLtrk4d6FtfunhbtNJgnunvd/IppO4ZdYUEJo3TyBpgXR9kebk+5FPVC/Gd6kRLiaX6u6sSSoxgHytWWvCWpxUkFARHPEcVcny8bFcOyurV2rdeomHa9b9iGeWm0jVqjYVi9TsFBaxR7ELsR9Yn0JVl23T8/A8Shw4B6kGiLKMUzYOoPFnuII8Wl9+JxRJTBOBIsTpbmBAUUjCyxPmY+awTLRg0FSFWGEb+hN0nb55DsMnd5h7nvAZOYgKR32d9MNDjjIhVztEh5YJYWqEQhFQMgkRzsWHa9ojMSxgFIoHoYeWkApXgW54nR2frf0hBmufS+P87f3dGw9r8VGRA6HpEKTMbSAVFFODCCrCKQ4wFXtwMuzLdTj8jnJdLJE4LXSHY/fXWJbI9Ni4iIXrujV7PAvVE/+fr3m/oPoPT9fGwceQuy5baYpWI8CPJoFdWco9K8lC4WaV6/miTGRJjXBT+a+ghwKthtNY7egeobE/pJw2WDes/zRr6LLxXENOKIQyi6TcmPJ2wWI2Bys3DFK8lOXVt2XIq8CVrjh2TdQCwgEvGPOwp2sNQT4lvxt4wS76tcB2xt+RFxinWCEzqVJzlGVkeaAkfCLBG8FyXbxg8ZOOR8V7hJ8gYLF900STkc/6JIQmuqCOMopdztqblgm2RznHwVg/Ol9M1MTuSfkzljRyfz0/XVSNBdiNSNLvlvZY3k7YJBlQtAjqWpZmLRFM7pdIvUPwHu83rPMqrlWrnTrfSMbV6vVKsbXt+NpPVN/F2yldP999D6Fw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950D206373BC5D0E0401F0A0799566B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950D206373BC5D0E0401F0A0799566B</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95022C7A7D95148E0401F0A079902DB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95022C7A7D95148E0401F0A079902DB</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_084336</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95022C7A7DA5148E0401F0A079902DB</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_084341</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_084341</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_084341</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+o4EH7vr4jSx1XIhXCLChK3crKnpRdot+1LZZwJuE2cEDsQ+uvXDg0FCl3OSkjIk/HMNxd/MxcMhYHltBmDhJOIKm6vqb5aVsOvWj7WGmVU1+yq6WkNv2ZqdcA2qmGoT0xbVVzGUnAp44jypmoZpq0ZFc20x4bh2GWnXCvVavaLqjxCwoRpoVIyVCULA8qc3G1TTRPqRIgR5lAUAnM4dkbt6ytHaDqowKS2LtYoc4dJa8Z57Og6LnmAIQhwCUehfqHv6Fx4zBmRKUU8TeDTp8ea6ufd5XJZWpZLUTLVLcMwdKOhCx2Pkem52jorLoPnUj9an7uIRpRgFJAPJEFdA59FntIOplFC+Cw8YtrUTUOa1iDDGjZteq7qXw5ydCda2gGZMKSxGTILY/fgQwIUg/Jw7zbV89MquL47ThBlfpSEbO/8Z5CALiCIYvA0VkRWoDvd4oF0tS4AOy7FQcrIAoayTWKEgSm3CfgkuyJMNJ/HlLz8SsbEjxRdBvhPynKhb2MV0PUD2emRKTD+f2q2Xa+1lUcUpNDqd7qZwd6u8ei31y8vcKdipc+dvyZ2YjRzCNvKa1Cbcn+e95t101ufl9jN3a+3X3fPC53PaOOlNxyYfy9XffLC7weVoZlVBre/H/u9wUM2fv6YvsfxTaXzT7h6tF6sNzecd/rtSTznkHWqln028J86Q9MYYs9fPpan1Fu9l200K9OPZPTAhsvxkxd1B8R0Vw+VyfzZH/6q9G+j4fsLXQ7Z8M2zO173YaLfGvMsPLtrk4d6FtfunhbtNJgnunvd/IppO4ZdYUEJo3TyBpgXR9kebk+5FPVC/Gd6kRLiaX6u6sSSoxgHytWWvCWpxUkFARHPEcVcny8bFcOyurV2rdeomHa9b9iGeWm0jVqjYVi9TsFBaxR7ELsR9Yn0JVl23T8/A8Shw4B6kGiLKMUzYOoPFnuII8Wl9+JxRJTBOBIsTpbmBAUUjCyxPmY+awTLRg0FSFWGEb+hN0nb55DsMnd5h7nvAZOYgKR32d9MNDjjIhVztEh5YJYWqEQhFQMgkRzsWHa9ojMSxgFIoHoYeWkApXgW54nR2frf0hBmufS+P87f3dGw9r8VGRA6HpEKTMbSAVFFODCCrCKQ4wFXtwMuzLdTj8jnJdLJE4LXSHY/fXWJbI9Ni4iIXrujV7PAvVE/+fr3m/oPoPT9fGwceQuy5baYpWI8CPJoFdWco9K8lC4WaV6/miTGRJjXBT+a+ghwKthtNY7egeobE/pJw2WDes/zRr6LLxXENOKIQyi6TcmPJ2wWI2Bys3DFK8lOXVt2XIq8CVrjh2TdQCwgEvGPOwp2sNQT4lvxt4wS76tcB2xt+RFxinWCEzqVJzlGVkeaAkfCLBG8FyXbxg8ZOOR8V7hJ8gYLF900STkc/6JIQmuqCOMopdztqblgm2RznHwVg/Ol9M1MTuSfkzljRyfz0/XVSNBdiNSNLvlvZY3k7YJBlQtAjqWpZmLRFM7pdIvUPwHu83rPMqrlWrnTrfSMbV6vVKsbXt+NpPVN/F2yldP999D6Fw==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950D206373BC5D0E0401F0A0799566B</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbvU+I8EP5+f0Wn9/GmNC1QoCPMIIhyL3Ie5dTzy01MF4i2SW3SCv71b1IsAqIv987oMNludp/9kWf3ROA4cv2uEJBKypkx7LfNP7iOsINI1br3MLZqHrhW023NrKpHGrgJtaaLWqYxFCKDIRMSM9k2XeTULFS3nNoUIb9W9Wuo0kStO9O4hlQo00qlgkxjGUdM+IXbtpmlzOdYUOEzHIPwJfGD7uXIV5o+LjGZnZM1ysJh2llImfi2TSohEIgiUiE8tk/sHZ2TUPgBnTMssxRefYaibb7efX5+rjxXKzyd2y5CyEYtW+mEgs6/mp0v5WUIh2zG1+ceZpxRgiP6gjWoS5ALHhrdaM5TKhfxB6Yd20HatAVLYhGnxr6a9puDAt2RlnZApgJbYoGd0tgEZpACI2D8mgzb5tfjKri+O00xEzOexmLv/HeQgOUQ8QRCS5SRleiOt3ggXZ0TIP6QkSgTNIexbpMEExDGVQozuhxRoZovFEZRfmMp1B8tuwzI35TlxN7GqqDbB7LTp3MQ8v/UbLteayvXOMqgk14kYnzeP70ei/rtufd7UL9NfjI+UfVrFxC2ldegNuV+Pe8366a3Xi+Jq+8rjBajEAajn6tZ9JhdnC1+nQX5uP7k3ozH6NdLPpuvsmfnW/PhtHqeRTdXqZPEwcOy2vzpDRxMp0/94K52HU6+XNzVX36c32TTRjM+P0P9ePmYL29vr12ck9n16JFd3Hi3V2foeyyD6cN3wrx6L119w6RXHwU3NEz6d7Z8vBn80x2Ov/zu8vHV5cNYRk5OXLvZCIftt5i2Y9gVlpQQZPcPQGR51O0x7BsDVS8sP6cXLaGhNStU/URzlJDApNnRtzS1+JkiIBr6qpjr86BVR67rqf9Bz6k2WmeohpwB6qJGq4XcfqPkoDWKPYg9zmZU+9Isu+6fzwGS2BfAQkitnGdkAcL8xGIfS2wM2UQ9Ds4ETLlicacpW4+ZfEiy+8hxkBAvnM+512pg0xhz+YP9SLszCekud1d3uHsChCYUNMHrDheqxYVUyXjCeaZqVslxhUGmRkCqWdh3a826LWicRKCh2jEPswgqySIpUmOL9a9rYSIK6eRsWry8DwPb/1bmQOmEVCsIHcspqDrCgSFULQP5OGBvO+DSfDcLqX5gKqEypWSNZPfTW5/oBtk0iYroTy/445S4N+pHX39/0/4ElL2fj42jMKdbbstpqgaEoo9OWc0nXHmqZHmeFfVraGpMlXlbMaRjB0AyxW+rKX8EZm9M2EeNlw3qPc8b+S6+TC5YILGEWHWbURyP2C0CEHq3GKp3sjx2cdlxqfImYSkPyXqRWkE04k+3FOITrafEV+rnmafhW7kO2Nryo+JUC4WkbK5PepCsPmgKwpVZqpiPp9vGDxk45HxXuEnyBotU3XSfSfj4i6EprW1iQnjG5LBvFoJtmi1wylUC/pvSOzMFlb/O5qX4cDbfXo4CRXgxNje69L+VLVq0CwFTrwAFlra5VKumcs7mW7T+CnCf2fsu8qqN6mmv3kfbzF73vNNNAnci6bwTv5ds5XT/PXT+BQ==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950226022FC1379E0401F0A079902D7</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950226022FC1379E0401F0A079902D7</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_084339</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950226022FD1379E0401F0A079902D7</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4jx3jO8aewAyX0rohpIGEpnnpCFmAElsylgyEX1/JxA4QkkPPDDOM1qvdby/6di8YSGIraDOGMo4pUcJeU/0D/KnrWQ1Pc2eWpzmOb2lTzwdaw3Q9x52Zvhc1VCVkLEchYRwQ3lQtw3Q0w9VM59YwAscOHKvm+c6DqkxQxoRpoVIzVGWTxIQFhdummmckoIBhFhCQIBZwGIzbV4NAaAagxKS2LnYoC4dZa8F5Gug6rEUIojiGNUgT/UI/0LmIWDDGcwJ4nqEXnxFrqi931+t1bW3XaDbXLcMwdMPXhU7E8Pyz2vpUXkZRSGZ0d+4CQgmGIMZbIEFdIb6gkdKO5zTDfJG8Y9rUTUOa1tAGatB0yGdVf3VQoDvT0gHIjAGNLYBZGhuhGcoQgUi5G4VN9fN5Fdzdvc0AYTOaJezo/G+QEFmhmKYo0lgZWYnufIsn0tW6QDAICYxzhldoKNskBRAx5WeGZngzwEw0X8SUovzKhokfLrsMwX8py4W+j1VA109kp4fniPH/U7P9eu2sTECco1be3zz6yxt0hxeP/v33m0WX4uGl2b1sPDULCPvKO1BVuV/Ox81a9dbLpe232HK2aw9b3x6+4nWasA5/+vU81SeDJeXUTH/B3nQ4ujHMaTq5M5/M8YymvaF+1R+m9mjU/uJeOrrJ0lHjB/8UtnWvP/E7A2uRDcItSif3I99b/b77sXp87MxTfHcdXf924ff6ksRk+zDRb58aad8YJxQSPIgfDDjvhY22X99an+7JOFsu7e8uup4/d9CXRpc2X2Paj+FQWFLCOJ8+IsjLo2yPsKf0Rb0A/5hepARH2qxQDVLJUYwjwtWWvCWpJcgFAeEoEMXcnfu+axqeZ7Xrtt+37d5XwzHMvtE2XN+3jXan5KAdiiOIXUpmWPqSLLvrn48BwiRgiEQo01Y0hwvE1A8s9gAHSkhG4nFQwtAtFSweLc11Nl84ljWDEXnazkCawnVmq8qQ8mtynbVnHGWHzG0fMPcIQZxiJOld9jcTDc64SMUSrHIem7UVqBGUiwGQSQ4OLKfh6gwnaYwkUD2hUR6jWrpIi8TobPdvaQCyQjr6elu8u3fDOv5WZkDoRFgqMBlLB4kqohMjyC4DeT/g+n7Apfl2HmH5vEQ6eYbhDsnhp9cuke1RtYiI6E93/McscVfqZ19/e1P/AJR+nI/KUbTCe27LWSrGgyCPVlnNJagta/lqlRf18yQxZsK8LvjR1McI5oLdnm/pEyJ6ZUI/a7hUqI88V/JDfDlfkDEHHCWi25TieMZmMUZMbhaheCWbc9eWA5cibxxt+ClZNxYLiET84Y4CAyj1hPin+FvTLHot1wlbe35EnGKd4JjM5UmOked3mgJSYRYL3qPZvvFTBk45PxRWSa6wcNFN05yj978oktCaKoCQ5oSHPbUQ7JNsgZM/pyh4VXpjpiDyl8m8Ye9O5vurwVjQXQLUShf/t7KGi3aBSJULQIGlqW7Eoimck/keqb8APOJ1o2cZdduzO123Z1S87vm+W69XvH4YSeuN+K1kL6fH76H1Fw==</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>F9510772A639F33DE0401F0A059930AB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:F9510772A639F33DE0401F0A059930AB</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20140513_084341</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>F9510772A63AF33DE0401F0A059930AB</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e34c814a-8ac5-424b-a19a-7d3453e3b9c7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1de1e00d-487c-492d-b21b-5e895e1ee18e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00033_ACCESS_UVTC_UserName_RequestorUserSAU_Active_RequesteeSelf_ValidateEmail_Role_DECE_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj6vgJA2XRAUpJVRlW1oK7J7Sl5VxJuBt4kDsAO2vP3ZoKFDawx4JCXkynvnm4m/mguMktj2fc8gETZnWDZr6b7caNczapGa4dnRuOG5kG5N6vW6QRjWsYdtxsWPqWpfzHLqMC8xEU7dNyzHMqmE5I9P0nHPPqVYa1dqTrv2CjEvTUqUib62TmHGvcNvU84x5KeaUewwnwD1BvKHfu/WkpodLTHrrYoOycJi1ZkLMPYRIJQQCcUwqJE3QBdrTuQi5N6RThkWewZvPkDf1t7ur1aqyOq+k2RTZpmki00VSJ+R0eqa3vpWXIeyyKN2c25iljBIc01esQPVAzNJQ8+NpmlExSz4xbSHLVKYNWBODWA4709G7gwLdiZb2QGYcG3yGrdLYACLIgBHQfg66Tf3stApu7o4yzHiUZgk/OP8dJGBLiNM5hAYvIyvRnW7xSLpaF0C8LiNxzukS7lSbzDEBrvUziOj6lnLZfCHXivJray5/tOwyIH9Tlgu0i1VCR0eyE9ApcPF/arZbr42VXzjOoXXtPLSf2tZCuNmwd9clt2NIhij53vPHzQLCrvIG1Lbcb+fDZt321tulEXfjx2kHj4MVNBbz6CqsBsPB5HIW3Q2elw+TSPy4fR3MAt/JX7GfATgkMFfh9yS9/nOTPId+vnCDtD9bPU3jb6jRcAamjy/Xqx77Z8yJdeeMb65fe6wxT4OfEF5dN7Jh/0ksRj5aCpJ12DjoXd+4N4seM8eT78j5NXsIH2c/CP/28HxvXp3X+s/9diNH1uPa7DTfY9qNYV9YUsIwn/wBIsqjao9uoF3JemHxNb0oCQ2NqFD15oqjuAAm9Ja6pajFyyUB0dCTxdycr9yqadvtTufSdC23XeuYjmldmb5ZdV3TrbklB21QHEBspyyiypdi2U3/fA2QJB4HFkJmLNOczIDrX1gMsMBalw3k40gZh1EqWTxcuLZNXpioisgS1MT1Sd1sEF7XtbtU3LP7zI8EZPvUfb5H3QMgdE5B8btqcC47nAuZiwVe5iK2KktcYZDLCZApEvZsp1FFnCbzGBRSlKRhHkNlPpsXmUF8828bmPBCOuiMiof3aVyH38oUSJ2QKgWuYrkEWUY4MoPOy0A+D7i2G3Bp3s9Dqt6XzKfIKNkg2f/03iaqP7Y9IiP63R7+tkrcW/WTr3+8ib4AhQ7zsXUULumO23KYyvkg2aNVVnOBK4tKvlzmRf3qihkzaR5JgrTQEEgu6e1llD4DQ1sT6KTpskV94Hkr38eXixkbCiwgkd2mFccTVoshcLVadOUzWZ+6t+y5lHkTsBbHZO1YbiAK8ZdLCvGI0pPivvxbpVn4Xq4jtnb8yDjlPiEom6qTmiMvnzQFSaVZKokvzXaNHzNwzPm+cJvkLRYhu2mSC/j8i6YYraljQtKciW6gF4Jdli1wipc5eO9KH8wUTP42mtf809H82LsdSr5LsL7Vpf+tbNCiXQjoagMosDT1tdw0pXM23WH1N4AfiN2yfSfwrWqn1t4ndvdym8C9SFofxB8lOzk9fA+tfwE=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950212A4DA15E6CE0401F0A0599099B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950212A4DA15E6CE0401F0A0599099B</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F95022CEEB0919C6E0401F0A05990969</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F95022CEEB0919C6E0401F0A05990969</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_084344</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F95022CEEB0A19C6E0401F0A05990969</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_084347</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_084347</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_084347</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj6vgJA2XRAUpJVRlW1oK7J7Sl5VxJuBt4kDsAO2vP3ZoKFDawx4JCXkynvnm4m/mguMktj2fc8gETZnWDZr6b7caNczapGa4dnRuOG5kG5N6vW6QRjWsYdtxsWPqWpfzHLqMC8xEU7dNyzHMqmE5I9P0nHPPqVYa1dqTrv2CjEvTUqUib62TmHGvcNvU84x5KeaUewwnwD1BvKHfu/WkpodLTHrrYoOycJi1ZkLMPYRIJQQCcUwqJE3QBdrTuQi5N6RThkWewZvPkDf1t7ur1aqyOq+k2RTZpmki00VSJ+R0eqa3vpWXIeyyKN2c25iljBIc01esQPVAzNJQ8+NpmlExSz4xbSHLVKYNWBODWA4709G7gwLdiZb2QGYcG3yGrdLYACLIgBHQfg66Tf3stApu7o4yzHiUZgk/OP8dJGBLiNM5hAYvIyvRnW7xSLpaF0C8LiNxzukS7lSbzDEBrvUziOj6lnLZfCHXivJray5/tOwyIH9Tlgu0i1VCR0eyE9ApcPF/arZbr42VXzjOoXXtPLSf2tZCuNmwd9clt2NIhij53vPHzQLCrvIG1Lbcb+fDZt321tulEXfjx2kHj4MVNBbz6CqsBsPB5HIW3Q2elw+TSPy4fR3MAt/JX7GfATgkMFfh9yS9/nOTPId+vnCDtD9bPU3jb6jRcAamjy/Xqx77Z8yJdeeMb65fe6wxT4OfEF5dN7Jh/0ksRj5aCpJ12DjoXd+4N4seM8eT78j5NXsIH2c/CP/28HxvXp3X+s/9diNH1uPa7DTfY9qNYV9YUsIwn/wBIsqjao9uoF3JemHxNb0oCQ2NqFD15oqjuAAm9Ja6pajFyyUB0dCTxdycr9yqadvtTufSdC23XeuYjmldmb5ZdV3TrbklB21QHEBspyyiypdi2U3/fA2QJB4HFkJmLNOczIDrX1gMsMBalw3k40gZh1EqWTxcuLZNXpioisgS1MT1Sd1sEF7XtbtU3LP7zI8EZPvUfb5H3QMgdE5B8btqcC47nAuZiwVe5iK2KktcYZDLCZApEvZsp1FFnCbzGBRSlKRhHkNlPpsXmUF8828bmPBCOuiMiof3aVyH38oUSJ2QKgWuYrkEWUY4MoPOy0A+D7i2G3Bp3s9Dqt6XzKfIKNkg2f/03iaqP7Y9IiP63R7+tkrcW/WTr3+8ib4AhQ7zsXUULumO23KYyvkg2aNVVnOBK4tKvlzmRf3qihkzaR5JgrTQEEgu6e1llD4DQ1sT6KTpskV94Hkr38eXixkbCiwgkd2mFccTVoshcLVadOUzWZ+6t+y5lHkTsBbHZO1YbiAK8ZdLCvGI0pPivvxbpVn4Xq4jtnb8yDjlPiEom6qTmiMvnzQFSaVZKokvzXaNHzNwzPm+cJvkLRYhu2mSC/j8i6YYraljQtKciW6gF4Jdli1wipc5eO9KH8wUTP42mtf809H82LsdSr5LsL7Vpf+tbNCiXQjoagMosDT1tdw0pXM23WH1N4AfiN2yfSfwrWqn1t4ndvdym8C9SFofxB8lOzk9fA+tfwE=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950212A4DA15E6CE0401F0A0599099B</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+o4EH7vr4jSx1WIE0haooIEgZ5ythcKtNuel8pxHPBpYkPsQOivXzs0KVDa5ayEhDwZz3xz8TdzwWES216Hc5wKwqg26LX0FxChMMBOw7CcKDAa5wgawVkjNCw3DM5tF0QWwro24DzDA8oFpKKl28BqGMAxrMYEAK9R9xrntTNg/dK1R5xyaVqq1ICu5UlMuVe4belZSj0GOeEehQnmnkDeuHNz7UlND5aY9PbFBmXhMG3PhJh7polqIUY4jlENscS8MHd0LkLujcmUQpGl+N1nyFv6+93ValVb1WssnZo2AMAETVPqhJxMT/X2SXkZhwMasc3Zh5RRgmBM3qACdYPFjIVaJ56ylIhZ8oVpy7SAMm3gHBnIatBT3fxwUKA70tIOyJRDg8+gVRob4QinmCKsPYwGLf30uApu7k5SSHnE0oTvnf8MEqZLHLM5Dg1eRlaiO97igXS1LzDyBhTFGSdLfKvaZA4R5towxRHJrwmXzRdyrSi/lnP5I2WXYfQnZbkwt7FK6OaB7PTIFHPxf2q2Xa+NlUcYZ7hNHsVf4uHvpD8Z3r493N2e1S/9QCTOm7VqFRC2lTegqnK/n/ebteqt90t4lFyFw4XDr/DTZR7djzmNnOBx1czBVTLiE1o3r+f+6wIFr8/1RQD7hN3kMXzwbbfrJFfdKwqe/Tvyz2hppSe2z0PSzZ6Gt4u1O8h/mD/vsh8gu74ZrZvEdekwWeTnoz5dgpVz/9tsPrr3437q3vfc4DWcDsc/85snc/3LHY0erk7sYPh025ksu+EPdpc45Jo9tz5i2o5hV1hSwjgLfmMkyqNqj0FPu5T1guJ7elESEhpRoerNFUdxganQ2+qWohYvkwREQk8Wc3O+bDrAtsEZcLp+v+u7fdAA1iXogLNmE9h+t+SgDYo9iD6jEVG+FMtu+ud7gCjxOKYhTo0ly9AMc/0biz0ooDagI/k4GOV4wiSLWxSTZgrfHLYIFlbEV+czEa5zEr7q2i0Td/Qu7UQCp7vcXd/h7hFGZE6wInjV4Vy2OBcyGQu4zERs1ZawRnEmR0CqWNizG+eOyUkyj7GCaiYszGJcm8/mRWpMvvm3DYh4IR31J8XL+zKw/W9lDqROSJQCV7F0sawjPjCE6mUgXwfsbgdcmu9kIVEPTCZUpARtkOx++ugT1SBVk8iIXvzxi1XirtSPvv75pvkNKHM/H5WjcEm23JbTVA4ISR/tspoLWFvUsuUyK+p3pqgxleZNyZCWOcYok/y2nrBXTM3KhHnUeKlQ73mu5Lv4MjGjYwEFTmS3acXxiN1ijLnaLQbyneTHLi47LmXeBM7FIZkfyxVEIf52S0EeUnpSPJR/K5aGH+U6YGvLj4xTLhSC0Kk6qUGy/qIpEJNmiWQ+lm4bP2TgkPNdYZXkCouQ3RRkAn/9RVOU1tIhQiyjYtDTC8E2zRY4xXqOvQ+lT2YKKn+fzTn/cjY/3VyPJeElUK90yX8rG6RoF7WZSv0CS0vP5aopndPpFq2/A/zE7JbdafQ6ltN3/YrZHcnszWbF7LuRtD+JP0u2crr/Htr/Ag==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950220705BCEBC6E0401F0A079902CB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950220705BCEBC6E0401F0A079902CB</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_084347</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950220705BDEBC6E0401F0A079902CB</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00034_ACCESS_UVTC_UserName_RequestorUserSAU_Active_RequesteeFAU_ValidateEmail_Role_DECE_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbRcto6EH3vV3jcx46xbGwSewIzBNJeWhJaICnJS0eWF6PUlsGSDenXX8nEDhCSS+8MM4zWq92zu0dHuuA4iW2/yzlkgqZMG/Tb+i8XeWFg4dAAz0GG4ziWce4GroFtQBY0zx1Arq4NOM9hwLjATLR1G1mOgVzDcqYI+U7Td63G2bn9oGt3kHEZWro0kK5tkphxv0zb1vOM+SnmlPsMJ8B9QfxJ93roS08fV5j0zsUWZZkw6yyEWPqmSRohEIhj0iBpYl6Yez4XIfcnNGJY5Bk85wx5W3/eu16vG+tmI80i00YImcgzpU/IafRR73yoNkM4YPN0u+5hljJKcEz/YAXqGsQiDbVuHKUZFYvkjdCWaSEV2oANMYjlsI+6+ZKgRHdipD2QGccGX2CrCjaGOWTACGi340Fb/3jaBLd7pxlmfJ5mCT9Y/x0kYAXE6RJCg1eVVehOj3ikXZ0LIP6AkTjntIAbRZMlJsC17xnM6WZIuSRfyLVy/NqGyx+tWAbkb8ZyYe5ildDNI93p0wi4+D8z253XNsodjnPoBCMbsqdZs7Vce0WzGwXWp9n4PvlzEzjtEsKu8xZUPe7n9SFZa249b+pnNoP5/WgYJo9oHNGf326/2Lcr6/4Kuz/R+pb2fggBm2H4kNzSpyfn0+0/8+if9Cpe/5hOMtQL4PHb+no0W/8orj4UCbEzbp7di0l/fOmukj+/TXiMmgH61BTNmQUt07npTyLmkOgrTb/0x99ns+G0ld4F3uZePIy/LXvrh+IqdAf3H1ZfR60ivi7uAjEa2q0gHnfbLzXt1rBvrCRhkgePQES1VPQY9LXPcl5YvC8vykJDY166+kulUVwAE3pH7VLS4udSgGjoy2Fu158910KtZs9ynB7qWd4VcpD1GXXRmee5TdeqNGiL4gBiL2VzqnIpld3y532AJPE5sBAyo0hzsgCuvxOxjwXWBmwsD0fKOExTqeL2psmEFSTngs2tNFiRxQatXeQsde0mFSM2yrpzAdm+dDf3pHsMhC4pKH1XBOeS4VzIXqxwkYvYahS4wSCXN0CmRNi3nXPX5DRZxqCQmkka5jE0lotl2RmTb/9tAxNeWsdX0/LgvVnX4beqBdInpMqBq1ouQY4RjtxBTlXI2wW3dguuwnfzkKrzJfspMkq2SPY/vdBE8aPmiKzoV2/yq+ZC7X7y9tc7zXdAmYf9qBOFBd1JW12m8n6Q6tGpprnCjVUjL4q8nN+ZUsZMhjelQFrmBEgu5e1pmv4GZtYhzJNulxr1Qebavo8vFws2EVhAItmmlcsTnhYT4OppMZDHZHPqu2UvpeybFD5xzNaL5QtEIX73kUJ8ovyk+bv8W6dZ+DKuI7F28sg65XtCUBaplbpHnt4gBUllWCqFL812gx8LcCz5vrFuco1FSDYFuYC3v2hK0do6JiTNmRj09dKwq7IlTvG0BP/F6VWYUsmfr+YNf/Nqnl0PJ1LvEqzXvvS/nQ1a0oWArl4AJZa2vpEvTZmcRTuq/gzwQNiRbXuo17fPrcvLfi3sruchz3s5zHuVdF6ZX1t2enp4Hjr/Ag==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F9502290CD281BBDE0401F0A05990991</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F9502290CD281BBDE0401F0A05990991</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F951063C144C0C19E0401F0A07995351</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F951063C144C0C19E0401F0A07995351</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_084350</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F951063C144D0C19E0401F0A07995351</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_084353</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_084353</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_084353</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbRcto6EH3vV3jcx46xbGwSewIzBNJeWhJaICnJS0eWF6PUlsGSDenXX8nEDhCSS+8MM4zWq92zu0dHuuA4iW2/yzlkgqZMG/Tb+i8XeWFg4dAAz0GG4ziWce4GroFtQBY0zx1Arq4NOM9hwLjATLR1G1mOgVzDcqYI+U7Td63G2bn9oGt3kHEZWro0kK5tkphxv0zb1vOM+SnmlPsMJ8B9QfxJ93roS08fV5j0zsUWZZkw6yyEWPqmSRohEIhj0iBpYl6Yez4XIfcnNGJY5Bk85wx5W3/eu16vG+tmI80i00YImcgzpU/IafRR73yoNkM4YPN0u+5hljJKcEz/YAXqGsQiDbVuHKUZFYvkjdCWaSEV2oANMYjlsI+6+ZKgRHdipD2QGccGX2CrCjaGOWTACGi340Fb/3jaBLd7pxlmfJ5mCT9Y/x0kYAXE6RJCg1eVVehOj3ikXZ0LIP6AkTjntIAbRZMlJsC17xnM6WZIuSRfyLVy/NqGyx+tWAbkb8ZyYe5ildDNI93p0wi4+D8z253XNsodjnPoBCMbsqdZs7Vce0WzGwXWp9n4PvlzEzjtEsKu8xZUPe7n9SFZa249b+pnNoP5/WgYJo9oHNGf326/2Lcr6/4Kuz/R+pb2fggBm2H4kNzSpyfn0+0/8+if9Cpe/5hOMtQL4PHb+no0W/8orj4UCbEzbp7di0l/fOmukj+/TXiMmgH61BTNmQUt07npTyLmkOgrTb/0x99ns+G0ld4F3uZePIy/LXvrh+IqdAf3H1ZfR60ivi7uAjEa2q0gHnfbLzXt1rBvrCRhkgePQES1VPQY9LXPcl5YvC8vykJDY166+kulUVwAE3pH7VLS4udSgGjoy2Fu158910KtZs9ynB7qWd4VcpD1GXXRmee5TdeqNGiL4gBiL2VzqnIpld3y532AJPE5sBAyo0hzsgCuvxOxjwXWBmwsD0fKOExTqeL2psmEFSTngs2tNFiRxQatXeQsde0mFSM2yrpzAdm+dDf3pHsMhC4pKH1XBOeS4VzIXqxwkYvYahS4wSCXN0CmRNi3nXPX5DRZxqCQmkka5jE0lotl2RmTb/9tAxNeWsdX0/LgvVnX4beqBdInpMqBq1ouQY4RjtxBTlXI2wW3dguuwnfzkKrzJfspMkq2SPY/vdBE8aPmiKzoV2/yq+ZC7X7y9tc7zXdAmYf9qBOFBd1JW12m8n6Q6tGpprnCjVUjL4q8nN+ZUsZMhjelQFrmBEgu5e1pmv4GZtYhzJNulxr1Qebavo8vFws2EVhAItmmlcsTnhYT4OppMZDHZHPqu2UvpeybFD5xzNaL5QtEIX73kUJ8ovyk+bv8W6dZ+DKuI7F28sg65XtCUBaplbpHnt4gBUllWCqFL812gx8LcCz5vrFuco1FSDYFuYC3v2hK0do6JiTNmRj09dKwq7IlTvG0BP/F6VWYUsmfr+YNf/Nqnl0PJ1LvEqzXvvS/nQ1a0oWArl4AJZa2vpEvTZmcRTuq/gzwQNiRbXuo17fPrcvLfi3sruchz3s5zHuVdF6ZX1t2enp4Hjr/Ag==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F9502290CD281BBDE0401F0A05990991</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxGlj6uQj4aWRAUJyNJll9JdoB+3LyvjDOA2ccB2SNpff+3QpEBpL3slJOTJeObMzPGxLziKI8dvcw5MkIRq/aCp/5k50+l5A1wDkDs1XIyR0QBrajjT8GwGnuUg5Ohan/MU+pQLREVTdyzbNay6YbsTy/LdU7/u1jzLftC1W2BchpYuNUvX8jii3C/SNvWUUT9BnHCfohi4L7A/bl8NfOnpoxKT3rrYoCwSstZCiKVvmrgWAoYowjWcxOaFueNzEXJ/TOYUiZTBa86QN/XXvVmW1bLTWsLmpmNZlml5pvQJOZmf6K0v5WYI+3SWbNZdRBNKMIrIC1KgrkAsklBrR/OEEbGIPwhtm7alQhuQYwPbLj3RzbcEBbojI+2AZBwZfIHsMtgIZsCAYtBuRv2mfnLcBDd7JwxRPktYzPfWfwcJ6BqiZAmhwcvKSnTHRzzQrtYFYL9PcZRysoahoskSYeDaLwYzkg8Il+QLuVaMX8u5/JGSZYD/ZiwX5jZWCd080J2AzIGL/zOz7XltotyiKIUWO71f5T9RO5nA7Xj8u2s3npj7nDkPvXazgLDtvAFVjft1vU/Wiluvm0g2+PF7PMS9p0e2vmmT7DciKzKfPUwanpV3HrP77u2l6Axz0vWCKbk/e4zMr0PzJ7LvHBTNX5zh09XK7oTfo8fBFzqio87XPLwL4oTM79xh5roPzH30gutg/W3VX9STMPuF7q8XaPCwuOnxlxfSrZNG8HDZnd99T72vDesHRwPTy8ZfvPBu3b30zhb9bujyqyW//Kf5VtN2DbvGUhLG6fQRsCiXih79QOvJeSHxubwoCwmNWeHqL5VGcQFU6C21S0mLn0oBIqEvh7lZ97y65Th2z3Wd855jud8s17J7Vts69+SJCuxSgzYo9iB2EzojKpdS2Q1/PgeIY58DDYEZ6yTFC+D6JxEDJJDWpyN5OBLKYZJIFWfzGMHTcn3O4sxm+Tmy8kaIZ6uGrg0TcU2vWXsmgO1K9+mOdI8AkyUBpe+K4FwynAvZixVapyKya2tUo5DKG4ApEfYdt1E3OYmXESikZpyEaQS15WJZdMbkm3/HQJgX1tG3SXHwPqxr/1vZAukTEuXAVS0dkGOEA3eQWxbyccFn2wWX4dtpSNT5kv0UjOANkt1PbzRR/Kg4Iiv60x3/qbhQuR+9/f1O8xNQ5n4/qkThmmylLS9TeT9I9WiV01yh2qqWrtdpMb9zpYxMhjelQNrmGHAq5e15kjwBNasQ5lG3S4V6L3Nl38WXigUdCyQglmzTiuURT4sxcPW06Mtjkh/7btlJKfsmIBeHbN1IvkAU4k8fKdjHyk+af8m/LGHh27gOxNrKI+uU7wlB6Fyt1D3y/AEpcCLDEil8CdsOfijAoeS7xqrJFRYh2TRNBXz8RVOK1tQRxklKRT/QC8O2yhY4xfMS/Dend2EKJX+9mnP+4dV8fzUYS72LkV75kv92NkhBFwy6egEUWJp6Ll+aMjmdb6n6K8D3wu5Z3cBp2J1OUAl7XQq7570d5p1KWu/M7y1bPd0/D61/AQ==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F950221F4427F204E0401F0A079902D1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F950221F4427F204E0401F0A079902D1</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_084353</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F950221F4428F204E0401F0A079902D1</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00035_ACCESS_UVTC_UserName_RequestorUserSAU_Active_RequesteeBAU_ValidateEmail_Role_DECE_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult BAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU+JKEH7fX5HKPm6FXAhCUkIVAipnUeSyrvqyNU46ZCSZYGYSor/+zAQTAdHDniqqqOn0dH99ma/7lKEotNwuY5BwElNl2G+rf1qW73u+Y2v1Bn7U7DqYmoOclmYZDdvDGIOPHlVlyFgKQ8o4orytWoZpa0ZDM+25Ybh23W20aobhPKjKLSRMmBYqNUNV8iikzC3cttU0oW6MGGEuRREwl2N31r0auULTRSUmtXO6QVk4TDoB5ytX13HNAwxhiGs4jvRTfUfn1GPujCwo4mkCbz491lbf7q7X69q6XouThW4ZhqEbji50PEYW39XOt/IyeEPqx5tzD9GYEoxC8ookqCvgQewp3XARJ4QH0SemTd00pGkNcqxh06bfVf3dQYHuSEs7IBOGNBYgszQ2BR8SoBiUX9NhW/1+XAU3d+cJosyPk4jtnf8OEtAMwngFnsbKyEp0x1s8kK7OKWB3SHGYMpLBtWyTFcLAlJsEfJKPCBPN5zGlKL+SM/EjZZcB/puynOrbWAV0/UB2+mQBjP+fmm3Xa2PlFoUpdJLbB375j8eRc+adD35HSd/XL/tXt6Pr+3YBYVt5A6oq99t5v1mr3nq7NPn9lK0ugF0MptnN7dgKJ2ZmTs5/31grugxOWrPH/D44uRp17x66477ZH06CiC85Wb72r42r6b2zoNPn8WAyz1PrW740xiKq2RNZZpczdjF5nddb9z94o65Tcz7O8oeBN6LTde/uEt8ZDx4Npr/uohu4/dVla/Tjcq7/zGa+93OyfB5/C5rhaJBbgRnAzaJZb1xfsPZ7TNsx7ApLSpilj0+AeXmU7THsK+eiXoh/TS9SQjzNL1TdleQoxoFytSNvSWpxU0FAxHNFMTfnc6dhGs2m1T3p9s7r9f7AsA3z3OgaDcepG92zkoM2KPYg9mLqE+lLsuymf74GiCOXAfUg0bI4xQEw9QuLfcSRMqRT8ThiymAeCxYHO7HZIjDxq5Nhy1+dPFmPPEwjVbmO+ZiOk67PIdll7voOc08BkxUBSe+yv5locMZFKp5RlvLQrGWoRiEVAyCRHOxadquhMxKtQpBA9Sj20hBqq2BVJEZnm39LQ5gV0ulgXry7T8Pa/1ZmQOh4RCowGcsZiCrCgRFkl4F8HvDJdsCl+W7qEfm8RDp5QvAGye6n9y6R7VG1iIjoT2/2xyxxV+pHX/94U/8ClL6fj8qRl5Ett+UsFeNBkEenrOYzqj3X0ixLi/o1JTEmwrwu+NHUZ4BTwW4v83gJVK9M6EcNlwr1nudKvosv5QGdccQhEt2mFMcjNosZMLlZDMUryY9dW3ZcirxxyPkhWS8UC4hE/OWOgl0s9YT4Rvyt48R7L9cBW1t+RJxineCELuRJjpGXT5oCx8IsEbwXJ9vGDxk45HxXWCW5wsJFNz2mHD7/okhCa6sI4zilfNhXC8E2yRY4+csK3HelD2YKIn+bzDn7dDLfXY1mgu4ipFa65L+VNVK0CwZVLgAFlraai0VTOKeLLVJ/A7jH60bfMlp23elZ/TO74vWm4zROmo0qgTuRdD6IP0q2crr/Hjr/Ag==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950D208439C2DB4E0401F0A07995675</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950D208439C2DB4E0401F0A07995675</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F9510772A6ACF33DE0401F0A059930AB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F9510772A6ACF33DE0401F0A059930AB</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_084356</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F9510772A6ADF33DE0401F0A059930AB</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_08442</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_08442</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_08442</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbU+JKEH7fX5HKPm6FXAhCUkIVAipnUeSyrvqyNU46ZCSZYGYSor/+zAQTAdHDniqqqOn0dH99ma/7lKEotNwuY5BwElNl2G+rf1qW73u+Y2v1Bn7U7DqYmoOclmYZDdvDGIOPHlVlyFgKQ8o4orytWoZpa0ZDM+25Ybh23W20aobhPKjKLSRMmBYqNUNV8iikzC3cttU0oW6MGGEuRREwl2N31r0auULTRSUmtXO6QVk4TDoB5ytX13HNAwxhiGs4jvRTfUfn1GPujCwo4mkCbz491lbf7q7X69q6XouThW4ZhqEbji50PEYW39XOt/IyeEPqx5tzD9GYEoxC8ookqCvgQewp3XARJ4QH0SemTd00pGkNcqxh06bfVf3dQYHuSEs7IBOGNBYgszQ2BR8SoBiUX9NhW/1+XAU3d+cJosyPk4jtnf8OEtAMwngFnsbKyEp0x1s8kK7OKWB3SHGYMpLBtWyTFcLAlJsEfJKPCBPN5zGlKL+SM/EjZZcB/puynOrbWAV0/UB2+mQBjP+fmm3Xa2PlFoUpdJLbB375j8eRc+adD35HSd/XL/tXt6Pr+3YBYVt5A6oq99t5v1mr3nq7NPn9lK0ugF0MptnN7dgKJ2ZmTs5/31grugxOWrPH/D44uRp17x66477ZH06CiC85Wb72r42r6b2zoNPn8WAyz1PrW740xiKq2RNZZpczdjF5nddb9z94o65Tcz7O8oeBN6LTde/uEt8ZDx4Npr/uohu4/dVla/Tjcq7/zGa+93OyfB5/C5rhaJBbgRnAzaJZb1xfsPZ7TNsx7ApLSpilj0+AeXmU7THsK+eiXoh/TS9SQjzNL1TdleQoxoFytSNvSWpxU0FAxHNFMTfnc6dhGs2m1T3p9s7r9f7AsA3z3OgaDcepG92zkoM2KPYg9mLqE+lLsuymf74GiCOXAfUg0bI4xQEw9QuLfcSRMqRT8ThiymAeCxYHO7HZIjDxq5Nhy1+dPFmPPEwjVbmO+ZiOk67PIdll7voOc08BkxUBSe+yv5locMZFKp5RlvLQrGWoRiEVAyCRHOxadquhMxKtQpBA9Sj20hBqq2BVJEZnm39LQ5gV0ulgXry7T8Pa/1ZmQOh4RCowGcsZiCrCgRFkl4F8HvDJdsCl+W7qEfm8RDp5QvAGye6n9y6R7VG1iIjoT2/2xyxxV+pHX/94U/8ClL6fj8qRl5Ett+UsFeNBkEenrOYzqj3X0ixLi/o1JTEmwrwu+NHUZ4BTwW4v83gJVK9M6EcNlwr1nudKvosv5QGdccQhEt2mFMcjNosZMLlZDMUryY9dW3ZcirxxyPkhWS8UC4hE/OWOgl0s9YT4Rvyt48R7L9cBW1t+RJxineCELuRJjpGXT5oCx8IsEbwXJ9vGDxk45HxXWCW5wsJFNz2mHD7/okhCa6sI4zilfNhXC8E2yRY4+csK3HelD2YKIn+bzDn7dDLfXY1mgu4ipFa65L+VNVK0CwZVLgAFlraai0VTOKeLLVJ/A7jH60bfMlp23elZ/TO74vWm4zROmo0qgTuRdD6IP0q2crr/Hjr/Ag==</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950D208439C2DB4E0401F0A07995675</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH6sQh4TSRAWJQmnp0i0nQHe3LyvXMeBuYoPtpIFff+zQpEAvhz0SEvJkPPPNxd/MuYBJXA86QmAuCaPGoNcyf4NmHTS8JrQQ8rHlPdaRBRvAsRrumT9zT+unM9c3jYEQKR5QISGVLbMOHM8CDcvxJgAEnhcAp+bVvQfTuMdcKNNKpQZMI09iKoLCbctMOQ0YFEQEFCZYBBIF487tMFCaASwxme3zLcrCIW8vpFwGto1qEUY4jlENscQ+t/d0ziMRjMmcQply/OIzEi3z5e7z83Pt2a0xPrfrAAAb+LbSiQSZfzXbX8rLOBrQGdueu5AyShCMyQZqULdYLlhkdOI540Qukg9MO7YDtGkL58hCjke/mvargwLdkZb2QHIBLbGATmksxDPMMUXYmIaDlvn1uApu7044pGLGeCIOzn8HCdMMx2yJI0uUkZXojrf4Trra5xgFA4riVJAMf9dtsoQIC2PE8YzkQyJU80XCKMpv5EL9SNllGP1NWc7tXawKuv1OdnpkjoX8PzXbrdfWyj2MU9yerPJfw+76brO+u3QhzvlwQ6f9aXZyBVoFhF3lLaiq3C/nw2ateuvlUgLXfDqKVtOFc3WyWEwfo9HiBwwfbk5+XF5Mb06c8NZLnyZuLAdh+tD8J4+Wlw8xexzGv+SfNEzzycb+fjYbkT7LvqxOxyhbwZB/uw/57ez650mcEJpcjti6u3Svf/h+ctPMr8DjcDKxZzCdPvGn6fX44duVuM/gpNvo/ZxcwxGJN+GfLzdP/c0d/pW7nfDGPonXC/+59RrTbgz7wpISxunjE0ayPOr2GPSMvqoXlJ/Ti5aQyJoVqsFSc5SQmEqzrW9paglSRUAkClQxt+e+33CA7/R7HnC7Fy64BB5w+qADGr7v+qedkoO2KA4gdhmdEe1Ls+y2fz4HiJJAYBphbmUsRQsszE8s9qCExoCG6nEwKvCEKRZ3MtdLY15/YtyLHLpZsgxtckm8lWl8Z/KO3vHOTGK+z93uHneHGJElwZrgdYcL1eJCqmSsYJbK2KllsEZxqkYA1ywc1L2zhi1IsoyxhmonLEpjXFsulkVqbLH9r1sQiUIaXk6Kl/dhYIffyhwonYhoBaFjucCqjvjNEHKDRhnIxwGf7gZcmu+kEdEPTCVUcoK2SPY/vfaJbpCqSVREv7vj306Ju1I/+vrbm/YnoOzDfFSOoozsuC2nqRoQij7aZTVXsLaqpVmWFvVramrkyrytGNKxxxilit/WE/YHU7syYR81XirUB54r+T6+VC7oWEKJE9VtRnE8YrcYY6F3i4F6J/mxi8ueS5U3iXP5nqwbqxVEI/50S0EB0npKPFJ/z4xHr+V6x9aOHxWnWigkoXN90oNk/UFTIKbMEsV8jO8af8/Ae873hVWSKyxSddNjKvHHXwxNaS0TIsRSKgc9sxDs0myBU66XOHhVemOmoPKX2ZyLD2fzz9vhWBFeAs1Kl/y3skWKdkHY1CtAgaVl5mrVVM7pfIfWXwAeMDvo1cGZ5/rdeu/Cq5i96fuN02ajSuBeJO034reSnZwevof2vw==</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F951091FD403CB30E0401F0A0599396A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F951091FD403CB30E0401F0A0599396A</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_08440</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F951091FD404CB30E0401F0A0599396A</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFln0MuhEuigkShHKUtvQDtLrysjDMJhsRJY4dLf/2xQ0OBXg57JCTkyXjmm5nPn33BUBxZbocxyDhJqOL1Wuofs2k4yKnVtUa1Hmh2069pTd+sa8hBs2bdb8z8makqHmM5eJRxRHlLtQzT1oyaZtpjw3Bt2zWqlUbVmarKM2RMhBYuFUNVNnFEmVukbal5Rt0EMcJcimJgLsfuqDO4dYWni0pMavtih7JImLXnnKeuruOKDxiiCFdwEusX+pHPhc/cEQkp4nkGbzl91lLf9q7X68q6WkmyULcMw9ANRxc+PiPhT7X9o9wMvkeDZLfuIppQglFEXpEENQA+T3ylE4VJRvg8/iK0qZuGDK3BBmvYtOlPVX9PUKA7M9IRyIwhjc2RWQYbQgAZUAzK09BrqT/Pm+Bu7zhDlAVJFrOT9d9BArqCKEnB11hZWYnu/IiftKt9Adj1KI5yRlZwJ2mSIgxMecggIJtbwgT5fKYU41c2TPxIyTLAfzOWC/0Qq4Cuf9KdHgmB8f8zs8N57aI8oyiHttVtRKalR4i9XuX0lTxGvdH0brqtTSetAsKh8w7Uftxv61Oy7rn1tump+ahPmg+b6eXjdTob+NNRZ+n1w8GN/7iqh4s4DKPLUTAhd83VfXaznYNXf46v7PW4OVsZ98PLSe1uTEz2mi6b6MdCv762bq3bqZda6+UNkKd58PIw3mSTofHM+/HvsLfk4WQ4WIZOevMPdLz01/XMufnVXzUDbG+hM1k3nke845HBD56Rrf8Em/tlECxIo9NZ2K33mg5rODaWkjDKZwvAvFxKeng9pS/mhfj38iItxNeCwtVNpUYxDpSrbblLSoubCwEiviuGuVv3nZphWVfVar/eq9bM2pVhG2bf6BgNxzGq1W6pQTsUJxC7CQ2IzCVVdsef7wHi2GVAfci0VZLjOTD1m4g9xJHi0aE4HAllME6kisdzhzkLo7Z4TVLTQZsXexnE9VWWqspdwu/pfdYJOGTH2l090u4hYJISkAIvGc4ExRkXzXhBq5xHZmWFKhRycQVkUoVdy27WdEbiNAIJVY8TP4+gks7TojU62/1bGsKssA6vxsXJ+7Kw029lD4SPT6QDk7VcgpgjfLiEqm6tLOTrguuHBZfhO7lP5AETDRUUxTskx5/eeSIJsieJqOhPd/THLHHv3c/e/nGn/g0o/bQf+0T+ihykLW9TcUEI+WiX03xBlZdKvlrlxfwaUhozEV4XCmnqI8C50LftOFkC1fch9LOulz3qk8x7+zG+nM/piCMOsWCbUizPeFuMgMm3hSfOyebch8tRStE3Dhv+ma0rJJlJxN++UrCLpZ8wP4i/dZL57+P6JNZBHlGneFBwQkO5khfJ9gtS4ESEJUL5kuww+GcBPkt+bNw3eY+FCzbNcg5ff1GkpLVUhHGSU+711MJwKLMFTr5NwX13+hCmkPK3u3nDvrybfw9uR0LwYqTufcl/O2ukoAsGVT4BCiwtdSOemiI5DQ9k/Q3gqbL3LKNpV52u1bu0D5W9Vm/U9g08qqT9wfzRctDT0/PQ/hc=</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>F95022E33F6D3515E0401F0A0799033C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:F95022E33F6D3515E0401F0A0799033C</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20140513_08442</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>F95022E33F6E3515E0401F0A0799033C</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e34c814a-8ac5-424b-a19a-7d3453e3b9c7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1de1e00d-487c-492d-b21b-5e895e1ee18e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00036_ACCESS_UVTC_UserName_RequestorUserSAU_Active_RequesteeOtherSAU_ValidateEmail_Role_DECE_200_OK_P1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Adult SAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Second Adult SAU"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "usercreate"+new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("MeetsAgeOfMajority","true");

tC.setPropertyValue("LegalGuardian","");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));


tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("PrimaryEmailConfirmationEndpoint",tP.getPropertyValue("PrimaryEmailConfirmationEndpoint"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create - Second Adult SAU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("User_Create_API");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER3",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID1",myTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID3",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL3",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName3",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid3",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call UVTC_Acc_User"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));

myTC.setPropertyValue("TokenType",tP.getPropertyValue("TokenType_VE"));
myTC.setPropertyValue("errorRespType","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+o6EP7ur+jUj05pSlteOsAMAt7LCCqUA+oXJ6QpxFNSaNIW/fUnKbbyol7OdZxhst3sPrv75EkaDK6CstNmDEechFTpd5vqCxR/Hjbrml2pmppl2xWtVrfmWqUO5p5vliuG5alKn7EY9ynjkPKmWgaGpQFbM6wJAI5lOaBaAqb1rCpTHDERWriUgKpsVwFlTpa2qcYRdULICHMoXGHmcOS47eHAEZ4OzDGprcYOZZYwai05Xzu6jkoeRjgIUAmFK72hH/g0POa4ZEEhjyP8kdNjTfVjb5qmpdQshdFCLwMAdFDXhY/HyOJSbV3km7HXp364W3cgDSlBMCDvUIIaYr4MPaUdLMKI8OXqm9CGbgAZWsNbpCHDopeq/pkgQ3dmpAOQEYMaW0IjDzbGPo4wRVj5Ne431cvzJrjbO4kgZX4YrdjR+u8gYZrgIFxjT2N5ZTm68yN+0a5WAyOnT1EQM5LgO0mTNUSYKQ8R9sl2QJggn8eUbPzKlol/krMMo78ZS0Pfxyqg6190p0sWmPH/M7P9ee2iTGEQ45ZVfryO32uDh3Y6GKVe5Yr6m/tt7991AJoZhH3nHahi3B/rY7IW3PrYxDeD0fCajno8nVvm3Ju63B281m9eK88e2Xavnp6fU2ylrnk7mqWjQVQhm+veuO4GyawTjbsbczIP2rXXmc9+PV+wYac6Cl7bG4b4P0kySxGY3t6WbXQfpJvx8moYvY6H15MrsLmN57VBZzGtptXwrhe1p8kIgOQ31NF7zO3Hd59cVDwaPs0e3+5mKXR9cvN032t+1rRfw6ExlwQ3nr9ixPOlpEe/q9yIeUH+s7xIC/E0P3N11lKjGMeUqy25S0qLEwsBIp4jhrlb39RtUDbr3Wq31jWqht0DFjBuQBvY9Tqo14xcg3YojiB2QuoTmUuq7I4/PwNEK4dh6uFIS8IYLTFTf4jYhRwqfToWhyOkDE9CoeJGYi5rtRS8WdWKZXrVcM5No2Ybhqrchfye3kdtn+PoULrNA+keY0TWBEt9lwRnguGMi15sYBLzwCglsERxLG6ASIqwU7Zqts7Iah1giVRfhV4c4NJ6uc46o7Pdb1mDiGXWcW+SHbxv6zr+lrdA+HhEOjBZyzUWY8Qnd5Dp2Hkh3xdc2S84D9+OPSLPl+gnjwjaITn89EkTyY+CI6Kil477UnChcD97++lO/QdQ+nE/ikReQvbS5pepuB+EerTyaW5gaVOKkyTO5leVyhiJ8LoQSEN3MYqFvL1Nwt+Y6kUI/azbpUB9lLmwH+KL+ZK6HHK8EmxTsuUZTwsXM/m06Itjsj333XKQUvSN4y3/ytYJxAtEIv7xkYIcJP2E+UH8pGH0WfhXsfbyiDrFe4ITupAreY+8fUMKFIqwRAhfGO0H/yrAV8kPjUWTCyxcsGkec/z9F0UqWlOFCIUx5f2umhn2VTbDyd/W2Pl0OgmTKfnH1bxl317Nj8OBK/RuBdXCl/y3s0YyuiCsyhdAhqWpbsVLUySniz1V/wB4IuxGuVPudHrddg8cCnvbLhp4UEnrxHxq2evp8Xlo/QE=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>F950212C2CCEDAE0E0401F0A059909A5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:F950212C2CCEDAE0E0401F0A059909A5</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>F950239D7D8D1715E0401F0A05990981</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:F950239D7D8D1715E0401F0A05990981</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>uvtc_firstuser20140513_08445</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>F950239D7D8E1715E0401F0A05990981</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20140513_084414</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20140513_084414</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20140513_084414</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+o6EP7ur+jUj05pSlteOsAMAt7LCCqUA+oXJ6QpxFNSaNIW/fUnKbbyol7OdZxhst3sPrv75EkaDK6CstNmDEechFTpd5vqCxR/Hjbrml2pmppl2xWtVrfmWqUO5p5vliuG5alKn7EY9ynjkPKmWgaGpQFbM6wJAI5lOaBaAqb1rCpTHDERWriUgKpsVwFlTpa2qcYRdULICHMoXGHmcOS47eHAEZ4OzDGprcYOZZYwai05Xzu6jkoeRjgIUAmFK72hH/g0POa4ZEEhjyP8kdNjTfVjb5qmpdQshdFCLwMAdFDXhY/HyOJSbV3km7HXp364W3cgDSlBMCDvUIIaYr4MPaUdLMKI8OXqm9CGbgAZWsNbpCHDopeq/pkgQ3dmpAOQEYMaW0IjDzbGPo4wRVj5Ne431cvzJrjbO4kgZX4YrdjR+u8gYZrgIFxjT2N5ZTm68yN+0a5WAyOnT1EQM5LgO0mTNUSYKQ8R9sl2QJggn8eUbPzKlol/krMMo78ZS0Pfxyqg6190p0sWmPH/M7P9ee2iTGEQ45ZVfryO32uDh3Y6GKVe5Yr6m/tt7991AJoZhH3nHahi3B/rY7IW3PrYxDeD0fCajno8nVvm3Ju63B281m9eK88e2Xavnp6fU2ylrnk7mqWjQVQhm+veuO4GyawTjbsbczIP2rXXmc9+PV+wYac6Cl7bG4b4P0kySxGY3t6WbXQfpJvx8moYvY6H15MrsLmN57VBZzGtptXwrhe1p8kIgOQ31NF7zO3Hd59cVDwaPs0e3+5mKXR9cvN032t+1rRfw6ExlwQ3nr9ixPOlpEe/q9yIeUH+s7xIC/E0P3N11lKjGMeUqy25S0qLEwsBIp4jhrlb39RtUDbr3Wq31jWqht0DFjBuQBvY9Tqo14xcg3YojiB2QuoTmUuq7I4/PwNEK4dh6uFIS8IYLTFTf4jYhRwqfToWhyOkDE9CoeJGYi5rtRS8WdWKZXrVcM5No2Ybhqrchfye3kdtn+PoULrNA+keY0TWBEt9lwRnguGMi15sYBLzwCglsERxLG6ASIqwU7Zqts7Iah1giVRfhV4c4NJ6uc46o7Pdb1mDiGXWcW+SHbxv6zr+lrdA+HhEOjBZyzUWY8Qnd5Dp2Hkh3xdc2S84D9+OPSLPl+gnjwjaITn89EkTyY+CI6Kil477UnChcD97++lO/QdQ+nE/ikReQvbS5pepuB+EerTyaW5gaVOKkyTO5leVyhiJ8LoQSEN3MYqFvL1Nwt+Y6kUI/azbpUB9lLmwH+KL+ZK6HHK8EmxTsuUZTwsXM/m06Itjsj333XKQUvSN4y3/ytYJxAtEIv7xkYIcJP2E+UH8pGH0WfhXsfbyiDrFe4ITupAreY+8fUMKFIqwRAhfGO0H/yrAV8kPjUWTCyxcsGkec/z9F0UqWlOFCIUx5f2umhn2VTbDyd/W2Pl0OgmTKfnH1bxl317Nj8OBK/RuBdXCl/y3s0YyuiCsyhdAhqWpbsVLUySniz1V/wB4IuxGuVPudHrddg8cCnvbLhp4UEnrxHxq2evp8Xlo/QE=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:F950212C2CCEDAE0E0401F0A059909A5</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jS55ALgZKoIIVbly2FltBdui+VcQZwG5wQOymcX3/s0FCgtIc9EhLyZDzzzcXfzDVDy9ByPcYg4SSiSq9dV5+rVsWpwVWgAcamZleqjoZm1SvNCcpls1q2cM3AqtJjLIUeZRxRXlctw7Q1o6KZ9tgwXNt2TatUqzl/VOUXJEyYFiolQ1XWy5AyN3dbV9OEuhFihLkULYG5HLu+d9d3haaLCkxq43qLMneYNBacx66u41IAGMIQl3C01K/1A53rgLk+mVPE0wTefQasrr7ffXt7K72VS1Ey1y3DMHTD0YVOwMj8Um1cFJch6NFZtD23EI0owSgk/yAJ6g74IgoUL5xHCeGL5RemTd00pGkN1ljDpk0vVf3DQY7uTEsHIBOGNLZAZmFsBDNIgGJQHke9unp5XgW3d8cJomwWJUt2dP47SEAzCKMYAo0VkRXozrd4Il2Na8Buj+IwZSSDgWyTGGFgyn0CM7LuEyaaL2BKXn5lzcSPFF0G+G/Kcq3vYxXQ9RPZaZM5MP5/arZfr62VXyhMoRFaM3TjNS2vXV0tNoNR+WlqNO1Wi8we6zmEfeUtqF2538/HzbrrrfdLJBtH1u84HnbsDr3NajdOt/3o25sHNPGp1b8dvTws1nE7uXrAwR+9+2M6GFSyJtV1f/Pk/wgDxy8vjOnNPXpNpxfJ3WTt10ZdY8m88eC+FtljNohXT31/gl+Gt9bKHtpxTLPu0+3NJPvZJVX74e5nqw/rq2YUNmcdNAnSYdSv+j3vYvK7NuD2uulXVmzwqCdz57X+EdN+DIfCghL8dPoCmBdH2R69ttIV9UL8e3qREhJos1zVjSVHMQ6Uqw15S1KLmwoCIoErirk9d52KaThmt21b1VazbHQM2zC7hmdUHKfsVL2Cg7YojiC2Ijoj0pdk2W3/fA8QL10GNIBEy6IUL4Cp31hsI46UHh2JxxFRBuNIsLg5DeistqmhMpBatYwqoeUwHFuCugcRH9Jh4s04JIfUXT6g7hFgEhOQ/C4bnIkOZ1zkYoWylIdmKUMlCqmYAIkkYdeyaxWdkWUcgkSqL6MgDaEUL+I8Mzrb/lsawiyXjjrj/OF9GdfxtyIFQicgUoHJWJogyggnZpBRBPJ1wNX9gAvzXhoQ+b5EPnlC8BbJ4aePNpH9sesREdFzy382C9w79bOvf76pfwNKP87HzlGQkT23xTAV80GwR6Oo5gqVVqU0y9K8fleSGRNhXhcEaeo+4FTQ22YcvQLVdyb0s6bLDvWR5538EF/KF9TniMNSdJuSH89YLXxgcrXoiWeyPndvOXAp8sZhzU/JWqHYQCTib5cU7GKpJ8T34u8tSoKPcp2wtedHxCn2CU7oXJ7kHNl80RQ4EmaJIL4o2Td+ysAp54fCXZJ3WLjopmnK4esvimS0uoowjlLKe201F+yzbI6Tb2JwP5Q+mcmZ/H00r9mXo3ly1/cF3y2RutMl/62skbxdMKhyA8ix1NW12DSFczrfY/V3gEfEblim1bJarU7b6xwQu+F4lV0CDyJpfBJ/luzl9Pg9NP4F</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>F951091FD426CB30E0401F0A0599396A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:F951091FD426CB30E0401F0A0599396A</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20140513_08449</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>F951091FD427CB30E0401F0A0599396A</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4jx3jDyCOPYEZAjSBEtICSUNeOkJeG+XaElgyX7/+SiYmQEguvTOZIVqvds/uHh3piqMkdvwG55AKwqjWadX0P7YbugGyHePCtbBRcUPL8Lyya7iT0L6sXjiT8oWnax3OM+hQLhAVNd2x7IphVQ27MrIsv1Lx7WrJcS+fde0RUi5DS5eSpWurJKbcz9PW9CylPkOccJ+iBLgvsD9s3PV86emjApNev9qizBOm9akQM980cSkADHGMS5gl5pV54HMVcH9IIopElsJrzoDX9Ne9y+WytCyXWBqZjmVZpuWZ0ifgJPqq178UmyHo0JBt101EGSUYxWSDFKg7EFMWaI04YikR0+SD0LZpWyq0AStsYLtCv+rmW4Ic3ZmRDkCmHBl8iuwi2ABCSIFi0B4GnZr+9bwJbveOUkR5yNKEH63/DhLQBcRsBoHBi8oKdOdHPNGu+hVgv0NxnHGygL6iyQxh4NrPFEKy6hEuyRdwLR+/tuLyjxQsA/w3Y7ky97FK6OaJ7rRIBFz8n5ntz2sb5RHFGdTt8e34Oe0686ElnNvuL9xYoOry283Lc1TLIew7b0Htxv26Pibrjluvm8blXpt35l3HboSNdWOxYddPL8HKijbAWvz2R/9lhR7WTbd3P/+1prMwEtnvQYf8SNiqv9k8b5JmuBlbz/eDCZhfhoOb6+f2ZLze9G7Kvzcjz8tuV60W/QktJ7hzB9X+9dMdGSAadh/cKOgG4yWEntUeWaz/NL0ZXz6xbq9c6Ve/ZTdfuiT6/UidkJHbS14FblqV2ltN+zUcGgtJGGaTF8CiWCp6dFradzkvJD6XF2UhgRHmrv5MaRQXQIVeV7uUtPiZFCAS+HKY2/V3r2o55apXsWzXvq44bUv+991qWFXPszy3WmjQFsURxCajIVG5lMpu+fM5QJz4HGgAqbFgGZ4C1z+J2EICaR06kIeDUQ4jplSczIU8M9Ha8VhkTzyUlWE5D1wKutZn4p7ep41QQHqo3eUD7R4AJjMCSuAVw7mkOBeyGXO0yERslxaoRCGTV0CqVNh3KpdVk5NkFoOCaiYsyGIozaazvDUm3/46BsI8tw7ao/zkfVjY8beiB9InIMqBq1quQc4RTlxCVlHIxwVf7BdchG9kAVEHTDZUpARvkRx+euOJIsiOJLKiP83hH7vAvXM/e/v7neYnoMzjfuwSBQuyl7a4TeUFIeWjXkxzjkrzUrZYZPn8XCWNqQxvSoW0zSHgTOrbesT+AWruQphnXS871EeZd/ZDfJmY0qFAAhLJNi1fnvG2GAJXb4uOPCercx8uByll3wSsxClbM5ZPEIX401cK9rHyk+af8mfJ0uBtXCdi7eWRdcoHhSA0Uit1kaw/IAVmMiyRysfS/eCnApxKfmjcNXmHRUg2TTIBH3/RlKTVdIQxy6jotPTcsC+zOU6xnoH/5vQuTC7lr3fzin94Nz/d9YZS8BKk73zJfzsbJKcLluom/XMsNX0ln5oyOY32ZP0V4Dtlt52m02y2W422dajsjZ2yH1ZSf2d+b9nr6fF5qP8L</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>F950235940171B42E0401F0A05990975</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:F950235940171B42E0401F0A05990975</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20140513_084414</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>F950235940181B42E0401F0A05990975</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f7a3b5b-9ccb-4b11-819b-d211ce13b600</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6cc602c8-885b-4e1d-993b-547d13f3127f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e34c814a-8ac5-424b-a19a-7d3453e3b9c7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1de1e00d-487c-492d-b21b-5e895e1ee18e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>role</con:name><con:value>nodeIdRTL</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:${#Project#nodeidRTLCS}</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:endpointStrategy xsi:type="con:DefaultEndpointStrategy" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:endpoint mode="OVERRIDE">https://qa.p.uvvu.com:7001/${#TestCase#endPoint}</con:endpoint></con:endpointStrategy><con:requirements/><con:properties><con:property><con:name>account_oid</con:name><con:value>E608A05B1095BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>ADULT_DOB</con:name><con:value>29-Jul-94</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-08-17</con:value></con:property><con:property><con:name>ADULT_MIN_AGE</con:name><con:value>18</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionUID</con:name><con:value>E19E3D2D6A904D06E0401F0A05994A7A</con:value></con:property><con:property><con:name>audience</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:org:org:dece:${#Project#nodeidRTLCS}</con:value></con:property><con:property><con:name>Batch_HostName</con:name><con:value>https://qa.b.uvvu.com:7001</con:value></con:property><con:property><con:name>certsPath_Linux</con:name><con:value>/opt/dece/certs</con:value></con:property><con:property><con:name>certsPath_Windows</con:name><con:value>C:/certs</con:value></con:property><con:property><con:name>CHILD_DOB</con:name><con:value>27-Jul-02</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-08-15</con:value></con:property><con:property><con:name>CHILD_MAX_AGE</con:name><con:value>12</con:value></con:property><con:property><con:name>coordinatorSchema</con:name><con:value>http://www.decellc.org/schema/2013/10/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_06</con:name><con:value>http://www.decellc.org/schema/2012/12/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_07</con:name><con:value>http://www.decellc.org/schema/2013/06/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_11</con:name><con:value>http://www.decellc.org/schema/2013/10/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_21</con:name><con:value>http://www.decellc.org/schema/2013/10/coordinator</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-08-17</con:value></con:property><con:property><con:name>DateOfBirthXML</con:name><con:value>1999-07-19</con:value></con:property><con:property><con:name>DBHost</con:name><con:value>LP1</con:value></con:property><con:property><con:name>Device_HostName</con:name><con:value>https://qa.d.uvvu.com:8001</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>encodedUserID</con:name><con:value/></con:property><con:property><con:name>ENV</con:name><con:value>QALP1</con:value></con:property><con:property><con:name>eTag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GeoProfile</con:name><con:value>US</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>user20130716_022720</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Language2</con:name><con:value>de</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>maxUserName</con:name><con:value>64</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>minUserName</con:name><con:value>6</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>NODEACCID</con:name><con:value>E1AF78725D9E6410E0401F0A07997B12</con:value></con:property><con:property><con:name>nodeIdAccportal</con:name><con:value>ACCESS</con:value></con:property><con:property><con:name>nodeIdAccportal2</con:name><con:value>ACCESS_2</con:value></con:property><con:property><con:name>nodeIdAccportalCS</con:name><con:value>ACCESCS</con:value></con:property><con:property><con:name>nodeIdAccportalCS2</con:name><con:value>ACCESSCS_2</con:value></con:property><con:property><con:name>nodeIdCON</con:name><con:value>CON</con:value></con:property><con:property><con:name>nodeIdCON2</con:name><con:value>CON_2</con:value></con:property><con:property><con:name>nodeIdCONCS</con:name><con:value>CON_CS_1</con:value></con:property><con:property><con:name>nodeIdCONCS2</con:name><con:value>CON_CS_2</con:value></con:property><con:property><con:name>nodeIdCoo</con:name><con:value>COO</con:value></con:property><con:property><con:name>nodeIdCoo2</con:name><con:value>COO_2</con:value></con:property><con:property><con:name>nodeIdCoordCS</con:name><con:value>coord:cs</con:value></con:property><con:property><con:name>nodeIdDECE</con:name><con:value>DECE</con:value></con:property><con:property><con:name>nodeIdDECECS</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>nodeIdDECECS1</con:name><con:value>truststore-dece-cs</con:value></con:property><con:property><con:name>nodeIdDEV</con:name><con:value>DEV</con:value></con:property><con:property><con:name>nodeIdDEV2</con:name><con:value>DEV_2</con:value></con:property><con:property><con:name>nodeIdDEVCS</con:name><con:value>DEV_CS_1</con:value></con:property><con:property><con:name>nodeIdDEVCS2</con:name><con:value>DEV_CS_2</con:value></con:property><con:property><con:name>nodeIdDLASP</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>nodeIdDLASP2</con:name><con:value>DLASP_2</con:value></con:property><con:property><con:name>nodeIdDLASPCS</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>nodeIdDLASPCS2</con:name><con:value>DLASP_CS_2</con:value></con:property><con:property><con:name>nodeIdDSP</con:name><con:value>DSP</con:value></con:property><con:property><con:name>nodeIdDSP2</con:name><con:value>DSP_2</con:value></con:property><con:property><con:name>nodeIdDSPCS</con:name><con:value>DSP_CS_1</con:value></con:property><con:property><con:name>nodeIdDSPCS2</con:name><con:value>DSP_CS_2</con:value></con:property><con:property><con:name>nodeIdLLASP</con:name><con:value>LLASP</con:value></con:property><con:property><con:name>nodeIdLLASP2</con:name><con:value>LLASP_2</con:value></con:property><con:property><con:name>nodeIdLLASPCS</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>nodeIdLLASPCS2</con:name><con:value>LLASP_CS_2</con:value></con:property><con:property><con:name>nodeIdportal</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>nodeIdportalCS</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>nodeIdRetailerforDeviceAuthToken</con:name><con:value/></con:property><con:property><con:name>nodeIdRTL</con:name><con:value>RET</con:value></con:property><con:property><con:name>nodeIdRTL1</con:name><con:value>sriniretailer</con:value></con:property><con:property><con:name>nodeIdRTL2</con:name><con:value>RET_2</con:value></con:property><con:property><con:name>nodeIdRTLCS</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>nodeIdRTLCS1</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>nodeIdRTLCS2</con:name><con:value>RET_CS_2</con:value></con:property><con:property><con:name>nodeIdSPCLCS</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E19F934C4E6BFA99E0401F0A05993DA2</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E528648B66BDACF7E0401F0A05994DAF</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E19F95D7CFC268C9E0401F0A079952C9</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E151F333D66812AFE0401F0A07996C63</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E528808A600535F3E0401F0A07996230</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3ATermsOfUse</con:value></con:property><con:property><con:name>Policy_TOU</con:name><con:value>https://qa.c.uvvu.com:7001/Consent/Text/US/urn:dece:type:policy:TermsOfUse:20121024/html</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>projectPath</con:name><con:value>C:\Users\rshrivastava\Desktop</con:value></con:property><con:property><con:name>Provision_HostName</con:name><con:value>https://qa.p.uvvu.com:8001</con:value></con:property><con:property><con:name>Query_HostName</con:name><con:value>https://qa.q.uvvu.com:8001</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>RandomPwdFlag</con:name><con:value/></con:property><con:property><con:name>Request_XML</con:name><con:value><![CDATA[<User UserClass="urn:dece:role:user:class:${#TestCase#Privilege}" xmlns="${#TestCase#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#"> 	<Name> 		<GivenName>${#TestCase#GivenName}</GivenName> 		<SurName>${#TestCase#SurName}</SurName> 	</Name> 	<DisplayImage> 		<DisplayImageURL Height="1" MimeType="" Width="1">${#TestCase#DisplayImageURL} 		</DisplayImageURL> 	</DisplayImage> 	<ContactInfo> 		<PrimaryEmail> 			<Value>${#TestCase#PrimaryEmail}</Value> 			</PrimaryEmail> 			<AlternateEmail> 				<Value>${#TestCase#AlternateEmail}</Value> 				</AlternateEmail> 			<Address> 				<PostalAddress>${#TestCase#PostalAddress}</PostalAddress> 				<PostalCode>${#TestCase#PostalCode}</PostalCode> 				<Locality>${#TestCase#Locality}</Locality> 				<StateOrProvince>${#TestCase#StateOrProvince}</StateOrProvince> 				<Country>${#TestCase#Country}</Country> 			</Address> 			<TelephoneNumber>			 					<Value>${#TestCase#TelephoneNumber}</Value> 				</TelephoneNumber> 				<MobileTelephoneNumber> 					<Value>${#TestCase#MobileTelephoneNumber}</Value> 				</MobileTelephoneNumber> 	</ContactInfo> 	<Languages> 		<Language>${#TestCase#Language1}</Language> 	</Languages> 	<DateOfBirth MeetsAgeOfMajority="${#TestCase#MeetsAgeOfMajority}">${#TestCase#DateOfBirth}</DateOfBirth> 	${#TestCase#LegalGuardian} 	<Credentials> 		<Username>${#TestCase#UserName}</Username> 		<Password ${#Project#RandomPwdFlag}>${#TestCase#password}</Password> 	</Credentials> 	<UserRecoveryTokens> 		<RecoveryItem> 			<QuestionID>${#TestCase#QuestionID1}</QuestionID> 			<QuestionResponse>${#TestCase#QuestionResponse1}</QuestionResponse> 		</RecoveryItem> 		<RecoveryItem> 			<QuestionID>${#TestCase#QuestionID2}</QuestionID> 			<QuestionResponse>${#TestCase#QuestionResponse2}</QuestionResponse> 		</RecoveryItem> 	</UserRecoveryTokens> 	${#TestCase#ResourceStatus} </User>]]></con:value></con:property><con:property><con:name>Request_XML_Buffer</con:name><con:value><![CDATA[<User UserClass="urn:dece:role:user:class:${#TestCase#Privilege}" xmlns="${#TestCase#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#"> 	<Name> 		<GivenName>${#TestCase#GivenName}</GivenName> 		<SurName>${#TestCase#SurName}</SurName> 	</Name> 	<DisplayImage> 		<DisplayImageURL Height="1" MimeType="" Width="1">${#TestCase#DisplayImageURL} 		</DisplayImageURL> 	</DisplayImage> 	<ContactInfo> 		<PrimaryEmail> 			<Value>${#TestCase#PrimaryEmail}</Value> 			</PrimaryEmail> 			<AlternateEmail> 				<Value>${#TestCase#AlternateEmail}</Value> 				</AlternateEmail> 			<Address> 				<PostalAddress>${#TestCase#PostalAddress}</PostalAddress> 				<PostalCode>${#TestCase#PostalCode}</PostalCode> 				<Locality>${#TestCase#Locality}</Locality> 				<StateOrProvince>${#TestCase#StateOrProvince}</StateOrProvince> 				<Country>${#TestCase#Country}</Country> 			</Address> 			<TelephoneNumber>			 					<Value>${#TestCase#TelephoneNumber}</Value> 				</TelephoneNumber> 				<MobileTelephoneNumber> 					<Value>${#TestCase#MobileTelephoneNumber}</Value> 				</MobileTelephoneNumber> 	</ContactInfo> 	<Languages> 		<Language>${#TestCase#Language1}</Language> 	</Languages> 	<DateOfBirth MeetsAgeOfMajority="${#TestCase#MeetsAgeOfMajority}">${#TestCase#DateOfBirth}</DateOfBirth> 	${#TestCase#LegalGuardian} 	<Credentials> 		<Username>${#TestCase#UserName}</Username> 		<Password ${#Project#RandomPwdFlag}>${#TestCase#password}</Password> 	</Credentials> 	<UserRecoveryTokens> 		<RecoveryItem> 			<QuestionID>${#TestCase#QuestionID1}</QuestionID> 			<QuestionResponse>${#TestCase#QuestionResponse1}</QuestionResponse> 		</RecoveryItem> 		<RecoveryItem> 			<QuestionID>${#TestCase#QuestionID2}</QuestionID> 			<QuestionResponse>${#TestCase#QuestionResponse2}</QuestionResponse> 		</RecoveryItem> 	</UserRecoveryTokens> 	${#TestCase#ResourceStatus} </User>]]></con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=null</con:value></con:property><con:property><con:name>SAML1</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>scriptsPath_Linux</con:name><con:value>/opt/dece/scripts</con:value></con:property><con:property><con:name>scriptsPath_Windows</con:name><con:value>C:\scripts\Scripts_Praveen</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>user20130716_022720</con:value></con:property><con:property><con:name>targerHostd</con:name><con:value>qa.d.uvvu.com</con:value></con:property><con:property><con:name>targetDeviceDomain</con:name><con:value>qa.d.uvvu.com:8001</con:value></con:property><con:property><con:name>targetHost</con:name><con:value>qa.p.uvvu.com</con:value></con:property><con:property><con:name>targetHostb</con:name><con:value>qa.b.uvvu.com</con:value></con:property><con:property><con:name>targetHostq</con:name><con:value>qa.q.uvvu.com</con:value></con:property><con:property><con:name>targetPort</con:name><con:value>8001</con:value></con:property><con:property><con:name>targetPortq</con:name><con:value>8001</con:value></con:property><con:property><con:name>targetSystem</con:name><con:value>LP1</con:value></con:property><con:property><con:name>targetURL</con:name><con:value>qa.p.uvvu.com:7001</con:value></con:property><con:property><con:name>targetUrlSHost</con:name><con:value>qa.s.uvvu.com:8001</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>TokenType_RP</con:name><con:value>urn:dece:type:token:ResetPassword</con:value></con:property><con:property><con:name>TokenType_UM</con:name><con:value>urn:dece:type:token:UnlockMe</con:value></con:property><con:property><con:name>TokenType_VE</con:name><con:value>urn:dece:type:token:ValidateEmail</con:value></con:property><con:property><con:name>TOUUrl</con:name><con:value>qa.c.uvvu.com:7001</con:value></con:property><con:property><con:name>TOU_AT</con:name><con:value>20130923</con:value></con:property><con:property><con:name>TOU_AU</con:name><con:value>20130220</con:value></con:property><con:property><con:name>TOU_BE</con:name><con:value>20140218</con:value></con:property><con:property><con:name>TOU_CA</con:name><con:value>20121024</con:value></con:property><con:property><con:name>TOU_CH</con:name><con:value>20130923</con:value></con:property><con:property><con:name>TOU_DE</con:name><con:value>20130923</con:value></con:property><con:property><con:name>TOU_FR</con:name><con:value>20130923</con:value></con:property><con:property><con:name>TOU_GB</con:name><con:value>20121024</con:value></con:property><con:property><con:name>TOU_IE</con:name><con:value>20130220</con:value></con:property><con:property><con:name>TOU_LU</con:name><con:value>20140218</con:value></con:property><con:property><con:name>TOU_NL</con:name><con:value>20140218</con:value></con:property><con:property><con:name>TOU_NZ</con:name><con:value>20130220</con:value></con:property><con:property><con:name>TOU_US</con:name><con:value>20121024</con:value></con:property><con:property><con:name>URLEncode</con:name><con:value>YES</con:value></con:property><con:property><con:name>urnaccount</con:name><con:value>urn:dece:accountid:org:dece:</con:value></con:property><con:property><con:name>urnError</con:name><con:value>urn:dece:errorid:org:dece:</con:value></con:property><con:property><con:name>urnNode</con:name><con:value>urn:dece:org:org:dece:</con:value></con:property><con:property><con:name>urntokenType_deviceauthtoken</con:name><con:value>urn:dece:type:tokentype:DeviceAuthToken</con:value></con:property><con:property><con:name>urntokenType_saml</con:name><con:value>urn:dece:type:tokentype:saml2</con:value></con:property><con:property><con:name>urntokenType_userpassword</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130726_035217</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>versionMajor</con:name><con:value>1</con:value></con:property><con:property><con:name>versionMinor</con:name><con:value>11</con:value></con:property><con:property><con:name>YOUTH_DOB</con:name><con:value>28-Jul-99</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>yyyy-MM-dd</con:value></con:property><con:property><con:name>YOUTH_MIN_AGE</con:name><con:value>13</con:value></con:property></con:properties><con:afterLoadScript/><con:wssContainer/><con:databaseConnectionContainer/><con:reporting><con:reportTemplates/><con:xmlTemplates/><con:parameters/></con:reporting><con:sensitiveInformation/></con:soapui-project>