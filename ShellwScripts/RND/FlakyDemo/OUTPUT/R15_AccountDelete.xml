<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="R15_AccountDelete" resourceRoot="${projectDir}" soapui-version="4.6.1" defaultScriptLanguage="Groovy" activeEnvironment="Default" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.ProTestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="&lt;all>"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value="E:\DECE API\STS\Builds\R3\106.2.3\Reports106\STSAPI_Payload_NodeOId_TCs_R3"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">/opt/dece/soapUIProjects/LP/Reports</con:setting></con:settings><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Account" type="rest" id="8252ba06-b20f-4a82-a0b6-fd7f3523ede0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:endpoint>${#Project#Device_HostName}</con:endpoint></con:endpoints><con:resource name="AccountCreate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account" id="ed70a636-717d-4786-b6de-deabd446719b"><con:settings/><con:parameters/><con:method name="AccountCreate" method="POST" id="09857898-3271-43d8-a451-d5bf44ce4858"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404 403 503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400 500</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>400 500 405 403 503</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ErrorList</con:element></con:representation><con:request name="AccountCreate" mediaType="application/xml" postQueryString="false" id="ca4ff0a9-00f8-41e3-871a-d799b7db932c" sslKeystore="80080010.pem"><con:settings><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="http://www.decellc.org/schema/2010/10/dece"> 
<DisplayName>${#Project#AccountDisplayName}</DisplayName>
<Country>US</Country>
</Account>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="AccountGET" method="GET" id="09857898-3271-43d8-a451-d5bf44ce4858"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>201 303 200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404 403 503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400 500 401</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>400 500 405 403</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="AccountGET_BasicAuth" mediaType="application/xml" postQueryString="false" id="ca4ff0a9-00f8-41e3-871a-d799b7db932c" sslKeystore="500500.pem"><con:settings><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Device_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="http://www.decellc.org/schema/2010/10/dece"> 
<DisplayName>${#Project#AccountDisplayName}</DisplayName>
<Country>US</Country>
</Account>
]]></con:request><con:credentials><con:username>${#Project#UserName}</con:username><con:password>Password1</con:password><con:domain>DECE</con:domain><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request><con:request name="AccountGET_SAML" mediaType="application/xml" postQueryString="false" id="ca4ff0a9-00f8-41e3-871a-d799b7db932c" sslKeystore="500500.pem"><con:settings><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="http://www.decellc.org/schema/2010/10/dece"> 
<DisplayName>${#Project#AccountDisplayName}</DisplayName>
<Country>US</Country>
</Account>
]]></con:request><con:credentials><con:username/><con:password/><con:domain/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Account" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}" id="bda852c0-5ccd-41d2-911c-bdec0459e462"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="AccountGet" method="GET" id="5cccdc43-2b89-4e8c-88a3-390b7ef3f239"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 401 400</con:status><con:params/><con:element xmlns:urn="urn:oasis:names:tc:SAML:2.0:protocol">urn:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Account</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>500</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/06/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/06/coordinator">coor:Account</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="AccountGet" mediaType="application/xml" sslKeystore="500500.pem" id="e1b8ad00-9ed3-4f09-980e-f2f86bdf18ca"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#NODEACCID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request><con:request name="AccountGet_BasicAuth" mediaType="application/xml" sslKeystore="500580.pem" id="e1b8ad00-9ed3-4f09-980e-f2f86bdf18ca"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@remove_empty_content">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:username>${#Project#UserName}</con:username><con:password>Password1</con:password><con:domain>DECE</con:domain><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="AB1E09D1A009474DE0401F0A07995BBC" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method><con:method name="AccountDelete" method="DELETE" id="3dd5e135-f342-47db-9631-1bec111dba45"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>412</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" sslKeystore="80080010.pem" id="7e19750b-606f-4d7d-bda7-cfa0c9074a64"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#NODEACCID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method><con:method name="AccountUpdate" method="PUT" id="5cccdc43-2b89-4e8c-88a3-390b7ef3f239"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:urn="urn:oasis:names:tc:SAML:2.0:protocol">urn:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Account</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Account</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ErrorList</con:element></con:representation><con:request name="AccountUpdate" mediaType="application/xml" sslKeystore="80080010.pem" id="e1b8ad00-9ed3-4f09-980e-f2f86bdf18ca" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="http://www.decellc.org/schema/2010/10/dece"> 
<DisplayName>${#Project#AccountDisplayName}</DisplayName>
<Country>US</Country>
</Account>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#NODEACCID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource><con:resource name="Account_Del_Methods" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}"><con:settings/><con:parameters/><con:method name="Get" method="GET"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/06/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/06/coordinator">coor:Account</con:element></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#NODEACCID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method><con:method name="PUT" method="PUT"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#NODEACCID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method><con:method name="POST" method="POST"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/06/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#NODEACCID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method><con:method name="HEAD" method="HEAD"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:request name="Request 1" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#NODEACCID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="FirstUserCreate" type="rest" id="63e68881-a234-4670-82d0-16b5421c30a4" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="FirstUserCreate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" id="9ed9c404-b207-4c25-a786-7bd711105b44"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:resource name="UserAPI" path="/{UserID}" id="8c72fe92-42e8-4bcc-bfc3-29cb8a3ca9cb"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>UserID</con:name><con:value>UserID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>UserID</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:resource name="User_StatusUpdate" path="/ResourceStatus/Current/Update" id="b0f04600-c6bc-42f8-b382-bdb9ef258eee"><con:settings/><con:parameters/><con:method name="UserStatusUpdate" method="PUT" id="5e4818b9-48a0-429e-aa1a-3379298d12be"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/06/coordinator">coor:ResourceStatus</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/06/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>303</con:status><con:params/></con:representation><con:request name="UserStatusUpdate" mediaType="application/xml" postQueryString="false" id="ae263fb2-2f71-4002-b6e4-7831863b5d6f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#Project#NODEACCID}"/>
  <con:entry key="UserID" value="${#Project#NODEUSERID}"/>
</con:parameters></con:request></con:method></con:resource><con:method name="UserGet" method="GET" id="55de7616-71c0-4cac-bade-e9aa4166e711"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/06/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/06/coordinator">coor:User</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="UserGet" mediaType="application/xml" id="86860311-fe06-418d-9e53-0c4d81aa0896" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="UserList" path="/List" id="16a08242-2ac7-42a8-b9c6-ca954b9794d4"><con:settings/><con:parameters/><con:method name="UserList" method="GET" id="e58e8f42-4a16-498a-86e7-a405a0125794"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:UserList</con:element></con:representation><con:request name="UserList" mediaType="application/xml" id="869ab87f-d5fa-4e59-8a29-1bca986023a1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="urn:dece:accountid:org:dece:${#Project#NODEACCID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource><con:method name="FirstUserCreate" method="POST" id="557bc5f3-c2ce-4146-81fc-71cdc6358536"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>404 403 500 400</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404 403 503 502</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>404 405 400 500</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="FirstUserCreate" mediaType="application/xml" postQueryString="false" id="54c781b4-bf2d-4e55-ab6c-fc7337e96457" sslKeystore="80080010.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:full" xmlns="http://www.decellc.org/schema/2010/10/dece" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
        	<GivenName>${#Project#UserName}</GivenName>
		<SurName>Harbor</SurName>
	</Name>	
	<ContactInfo>
	<PrimaryEmail>			
          <Value>shikha.gupta@neustar.biz</Value>
         <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</PrimaryEmail>
	<AlternateEmail>			
        <Value>shikha82@gmail.com</Value>			
        <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</AlternateEmail>
	<Address>
		<PostalAddress>45999 Center Oak Plaza</PostalAddress>
		<PostalCode>20166</PostalCode>
		<Locality>Sterling</Locality>
		<StateOrProvince>NJ</StateOrProvince>
                <Country>US</Country>
	</Address>
	</ContactInfo>
        <Languages>
		<Language>de</Language>	
	</Languages>
       <DateOfBirth>1982-07-01</DateOfBirth>
       <Credentials> 
		<Username>NewnameShikha</Username>		  
                <Password>mypWd007</Password> 
	</Credentials>
<UserRecoveryTokens>
      <RecoveryItem>
		<QuestionID>1200</QuestionID>  
		<QuestionResponse>Turner</QuestionResponse>
       </RecoveryItem>
       <RecoveryItem>
		<QuestionID>1650</QuestionID>  
		<QuestionResponse>Phoenix</QuestionResponse>
       </RecoveryItem> 
</UserRecoveryTokens>
</User>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="urn%3Adece%3Aaccountid%3Aorg%%3A${#TestCase#NODE_ACCOUNT_ID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource><con:resource name="UserDelete" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" id="b4da2587-c2fe-45c4-aa0b-7bfdda8db2c0"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:value>${#TestCase#NODE_ACCOUNT_ID}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestCase#NODE_ACCOUNT_ID}</con:default></con:parameter><con:parameter disableUrlEncoding="true"><con:name>UserID</con:name><con:value>${#TestCase#NODE_USER_ID}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestCase#NODE_USER_ID}</con:default></con:parameter></con:parameters><con:method name="DeleteUser" method="DELETE" id="02c9752d-c22c-4713-874a-3f6c2b982142"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>412</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" id="0f18fdda-5e02-4f21-8def-a3f312f61ac8"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="AddNewUser" type="rest" id="785934cf-6e29-492d-9dd8-504d1aeb0b28" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#HostName}</con:endpoint></con:endpoints><con:resource name="AddUser" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" id="a8f8ca6d-db1b-4090-9ffc-68be2d519618"><con:settings/><con:parameters/><con:resource name="UserAPI" path="/{UserID}" id="20cfed44-6bef-4e69-8937-8a0ed4466e50"><con:settings/><con:parameters><con:parameter><con:name>UserID</con:name><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="UserDelete" method="DELETE" id="ec0bb443-5d9b-4e69-b1d5-c6cf6535c7e4"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>UserID</con:name><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 500 400</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="UserDelete" mediaType="application/xml" sslKeystore="80080010.pem" id="d0bc938e-dbab-4193-8cc9-85cb4f10c8bf"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="urn:dece:accountid:org:dece:${#Project#NODEACCID}"/>
  <con:entry key="UserID" value="urn:dece:userid:org:dece:${#Project#NODEUSERID1}"/>
</con:parameters></con:request></con:method><con:method name="UserGet" method="GET" id="b4c52e6c-50f0-4ebf-b8e3-ab596e55b443"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter disableUrlEncoding="true"><con:name>UserID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 404 500 400</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:User</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>404 400 405</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="UserGet" mediaType="application/xml" sslKeystore="80080010.pem" id="0a991f82-1623-4495-b24c-9cc11cc37183"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="UserUpdate" method="PUT" id="b4c52e6c-50f0-4ebf-b8e3-ab596e55b443"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value>urn:dece:accountid:org:dece:${#Project#NODEACCID}</con:value><con:style>TEMPLATE</con:style><con:default>urn:dece:accountid:org:dece:${#Project#NODEACCID}</con:default></con:parameter><con:parameter><con:name>UserID</con:name><con:value>urn:dece:userid:org:dece:${#Project#NODEUSERID}</con:value><con:style>TEMPLATE</con:style><con:default>urn:dece:userid:org:dece:${#Project#NODEUSERID}</con:default></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400 500 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:User</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>404 503</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:User</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403 400 404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>303</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>412</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="UserUpdate" mediaType="application/xml" sslKeystore="500500.pem" id="0a991f82-1623-4495-b24c-9cc11cc37183" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:full" xmlns="http://www.decellc.org/schema/2010/10/dece" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
        	<GivenName>${#Project#UserName}</GivenName>
		<SurName>Harbor</SurName>
	</Name>	
	<ContactInfo>
	<PrimaryEmail>			
          <Value>shikha.gupta@neustar.biz</Value>
         <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</PrimaryEmail>
	<AlternateEmail>			
        <Value>shikha82@gmail.com</Value>			
        <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</AlternateEmail>
	<Address>
		<PostalAddress>45999 Center Oak Plaza</PostalAddress>
		<PostalCode>20166</PostalCode>
		<Locality>Sterling</Locality>
		<StateOrProvince>NJ</StateOrProvince>
                <Country>US</Country>
	</Address>
	</ContactInfo>
        <Languages>
		<Language>de</Language>	
	</Languages>
       <DateOfBirth>1982-07-01</DateOfBirth>
       <Credentials> 
		<Username>${#Project#UserName}</Username>		  
                <Password>mypWd007</Password> 
	</Credentials>
<UserRecoveryTokens>
      <RecoveryItem>
		<QuestionID>1200</QuestionID>  
		<QuestionResponse>Turner</QuestionResponse>
       </RecoveryItem>
       <RecoveryItem>
		<QuestionID>1650</QuestionID>  
		<QuestionResponse>Phoenix</QuestionResponse>
       </RecoveryItem> 
</UserRecoveryTokens>
</User>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:method name="AddUser" method="POST" id="c8e33bf9-7e9a-4fc7-a85d-b9258d44e3b4"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:urn="urn:oasis:names:tc:SAML:2.0:protocol">urn:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:urn="urn:oasis:names:tc:SAML:2.0:protocol">urn:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="AddUser" mediaType="application/xml" postQueryString="false" sslKeystore="80080010.pem" id="8f456815-cfce-46c5-9b39-907b23b9d134"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:full" xmlns="http://www.decellc.org/schema/2010/10/dece" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
        	<GivenName>${#Project#UserName}</GivenName>
		<SurName>Harbor</SurName>
	</Name>	
	<ContactInfo>
	<PrimaryEmail>			
          <Value>shikha.gupta@neustar.biz</Value>
         <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</PrimaryEmail>
	<AlternateEmail>			
        <Value>shikha82@gmail.com</Value>			
        <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</AlternateEmail>
	<Address>
		<PostalAddress>45999 Center Oak Plaza</PostalAddress>
		<PostalCode>20166</PostalCode>
		<Locality>Sterling</Locality>
		<StateOrProvince>NJ</StateOrProvince>
                <Country>US</Country>
	</Address>
	</ContactInfo>
        <Languages>
		<Language>de</Language>	
	</Languages>
       <DateOfBirth>1982-07-01</DateOfBirth>
       <Credentials> 
		<Username>${#Project#UserName}</Username>		  
                <Password>mypWd007</Password> 
	</Credentials>
<UserRecoveryTokens>
      <RecoveryItem>
		<QuestionID>1200</QuestionID>  
		<QuestionResponse>Turner</QuestionResponse>
       </RecoveryItem>
       <RecoveryItem>
		<QuestionID>1650</QuestionID>  
		<QuestionResponse>Phoenix</QuestionResponse>
       </RecoveryItem> 
</UserRecoveryTokens>
</User>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="urn:dece:accountid:org:dece:${#Project#NODEACCID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="PolicyCreate" type="rest" basePath="" definitionUrl="" id="6c3d536c-c34c-4909-b68e-c56202e901a4" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="PolicyCreate_UserPolicy" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" id="8ea94816-f6ab-4fdb-a7cf-e216079a2d87"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>NodeAccountId</con:name><con:value>${#TestProject#NodeAccountId}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#TestProject#NodeAccountId}</con:default></con:parameter><con:parameter disableUrlEncoding="true"><con:name>NodeUserId</con:name><con:value>${#TestProject#NodeUserId}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#TestProject#NodeUserId}</con:default></con:parameter><con:parameter disableUrlEncoding="true"><con:name>PolicyClass</con:name><con:value>${#TestCase#PolicyClass}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#TestCase#PolicyClass}</con:default></con:parameter></con:parameters><con:method name="PolicyCreateSinglePolicyPost" method="POST" id="1852f785-6b55-4441-927b-2090f020122a"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/06/coordinator">coor:ErrorList</con:element></con:representation><con:request name="PolicyCreateSinglePolicyPost" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="999901_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" xmlns:dece="http://www.decellc.org/schema/2010/10/dece" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:EndUserLicenseAgreement</dece:PolicyClass>
      <dece:Resource>urn:dece:userid:org:dece:${#Project#NODEUSERID}</dece:Resource>
      <dece:RequestingEntity>urn:dece:userid:org:dece:${#Project#NODEUSERID}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#Project#NODEUSERID}">
            <dece:Value>active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="urn:dece:userid:org:dece:${#Project#NODEUSERID}"/>
  <con:entry key="PolicyClass" value="urn:dece:type:policy:EndUserLicenseAgreement "/>
  <con:entry key="NodeAccountId" value="urn:dece:accountid:org:dece:${#Project#NODEACCID}"/>
</con:parameters></con:request></con:method><con:method name="UserPolicyGET" method="GET" id="1852f785-6b55-4441-927b-2090f020122a"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="PolicyGET" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="999901_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" xmlns:dece="http://www.decellc.org/schema/2010/10/dece" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:EndUserLicenseAgreement</dece:PolicyClass>
      <dece:Resource>urn:dece:userid:org:dece:${#Project#NODEUSERID}</dece:Resource>
      <dece:RequestingEntity>urn:dece:userid:org:dece:${#Project#NODEUSERID}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#Project#NODEUSERID}">
            <dece:Value>active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="urn:dece:userid:org:dece:${#Project#NODEUSERID}"/>
  <con:entry key="PolicyClass" value="urn:dece:type:policy:EndUserLicenseAgreement "/>
  <con:entry key="NodeAccountId" value="urn:dece:accountid:org:dece:${#Project#NODEACCID}"/>
</con:parameters></con:request></con:method><con:method name="UserPolicy_DELETE" method="DELETE" id="1852f785-6b55-4441-927b-2090f020122a"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="PolicyDELETE" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="999901_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" xmlns:dece="http://www.decellc.org/schema/2010/10/dece" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:EndUserLicenseAgreement</dece:PolicyClass>
      <dece:Resource>urn:dece:userid:org:dece:${#Project#NODEUSERID}</dece:Resource>
      <dece:RequestingEntity>urn:dece:userid:org:dece:${#Project#NODEUSERID}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#Project#NODEUSERID}">
            <dece:Value>active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="urn:dece:userid:org:dece:${#Project#NODEUSERID}"/>
  <con:entry key="PolicyClass" value="urn:dece:type:policy:EndUserLicenseAgreement "/>
  <con:entry key="NodeAccountId" value="urn:dece:accountid:org:dece:${#Project#NODEACCID}"/>
</con:parameters></con:request></con:method></con:resource><con:resource name="PolicyCreate_AccountPolicy" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/Policy/{PolicyClass}" id="8ea94816-f6ab-4fdb-a7cf-e216079a2d87"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:value>${#TestProject#NodeAccountId}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#TestProject#NodeAccountId}</con:default></con:parameter><con:parameter><con:name>PolicyClass</con:name><con:value>${#TestCase#PolicyClass}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#TestCase#PolicyClass}</con:default></con:parameter></con:parameters><con:method name="PolicyCreateSinglePolicyPost" method="POST" id="1852f785-6b55-4441-927b-2090f020122a"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="PolicyCreateSinglePolicyPost" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="999901_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" xmlns:dece="http://www.decellc.org/schema/2010/10/dece" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:EndUserLicenseAgreement</dece:PolicyClass>
      <dece:Resource>urn:dece:userid:org:dece:${#Project#NODEUSERID}</dece:Resource>
      <dece:RequestingEntity>urn:dece:userid:org:dece:${#Project#NODEUSERID}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#Project#NODEUSERID}">
            <dece:Value>active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="PolicyClass" value="urn:dece:type:policy:EndUserLicenseAgreement "/>
  <con:entry key="NodeAccountId" value="urn:dece:accountid:org:dece:${#Project#NODEACCID}"/>
</con:parameters></con:request></con:method><con:method name="AccountPolicyGET" method="GET" id="c23d9652-8201-4a6d-a343-8eaeb0193004"><con:settings/><con:parameters/><con:request name="AccountPolicyGET" mediaType="application/xml" id="846a1ca0-681d-46b1-a5d8-0a63053da965"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="PolicyClass" value="List" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method><con:method name="AccountPolicyDELETE" method="DELETE" id="33e2e7d9-2b5b-406b-ba40-cad2d4922d0a"><con:settings/><con:parameters/><con:request name="AccountPolicyDELETE" mediaType="application/xml" id="7926fdfc-6744-494b-ad3f-86dbd869e045"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="PolicyClass" value="List" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Rights Token" type="rest" id="2cc5edf0-44c3-45c0-af0b-d6e19735bdd5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="Rights Token Get_List" path="${#TestCase#endPoint}" id="80183adb-1c5a-4de7-9d84-191f16c47def"><con:settings/><con:parameters/><con:method name="Rights Token Get" method="GET" id="8b4cec3d-fe23-4572-9b38-8f6059da115f"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 404 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:RightsTokenList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:RightsToken</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" id="dc5964a7-d54c-453b-85c8-f1cc8f5c4976"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Rights Token Create" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{RIGHTSTOKEN}/RightsToken" id="483f410c-4aec-4f56-bdb8-b53566c9bb97"><con:settings/><con:parameters><con:parameter><con:name>RIGHTSTOKEN</con:name><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="Rights Token Create" method="POST" id="1c20f275-4760-4c4b-994f-d981d038615c"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="0565a9cc-8569-46e9-a479-f8aacc70fa3f"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Stream" type="rest" basePath="" definitionUrl="" id="233e54e8-cd77-4d4d-8f1e-6d240a4b070f" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="StreamView" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{ACCT}/Stream/{STREAM}" id="0931ace2-e7f3-4c79-968d-a04d73600c30"><con:settings/><con:parameters><con:parameter><con:name>STREAM</con:name><con:value>${#Project#urnstream}1234</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#Project#urnstream}1234</con:default></con:parameter><con:parameter><con:name>ACCT</con:name><con:value>${#Project#urnaccount}${#TestCase#assertionAccountId}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#Project#urnaccount}${#TestCase#assertionAccountId}</con:default></con:parameter></con:parameters><con:method name="GET" method="GET" id="9683ed0f-6cc9-4f65-847b-0f131541e354"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:urn="urn:oasis:names:tc:SAML:2.0:protocol">urn:Response</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403 404</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>0 200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Stream</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="bcfd0ffb-67ca-4ab7-94f1-27b7e0a4af61" mediaType="application/json"><con:settings/><con:endpoint>https://${</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="StreamCreate" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{ACCT}/Stream" id="cf353486-e4bd-4e29-9fa0-16678ce3ed16"><con:settings/><con:parameters><con:parameter><con:name>ACCT</con:name><con:value>${#TestCase#assertionAccountIdFULL}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter></con:parameters><con:method name="POST" method="POST" id="8e9894cd-2bd1-4e02-ab04-37036dd75fc6"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:urn="urn:oasis:names:tc:SAML:2.0:protocol">urn:Response</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:urn="urn:oasis:names:tc:SAML:2.0:protocol">urn:Response</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:urn="urn:oasis:names:tc:SAML:2.0:protocol">urn:Response</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>0 201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="f8992888-776a-4588-8ff0-130c8c626196"><con:settings/><con:endpoint>https://${</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="AccountMergeTest" type="rest" id="6ba05ee5-e87a-41e2-93b7-5fac7723d364" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="AccountMergeTest" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{SurvivingAccountID}/Merge/Test/{RetiredAccountID}" id="d3ab43df-328b-4e09-8562-58a80596481d"><con:settings/><con:parameters><con:parameter><con:name>SurvivingAccountID</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>RetiredAccountID</con:name><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="Method 1" method="POST" id="449e438d-5c8b-4814-8ea3-5b23b2d9c7fc"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="cfd0be42-a0ab-4e51-972d-c4a67c9d1208"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="AccountMerge" type="rest" id="38577162-173b-4e3b-b7a4-7084681116dd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="AccountMerge" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{SurvivingAccountID}/Merge/{RetiredAccountID}" id="6ecab418-a971-4402-baea-c83b2ded7efc"><con:settings/><con:parameters><con:parameter><con:name>SurvivingAccountID</con:name><con:value>SurvivingAccountID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>SurvivingAccountID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>RetiredAccountID</con:name><con:value>RetiredAccountID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>RetiredAccountID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" method="POST" id="4659148b-17e0-4ad5-a68e-924d516aa757"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="acbfb94a-f132-4a9c-8d15-8b85ecc78c8c" sslKeystore="7600.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 Assertion=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"/>
  &lt;con:entry key="Authorization" value="SAML2 Assertion=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"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:AccountMerge xmlns:dece="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/schema/md/v1.2/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2012/12/coordinator dece.xsd ">
<dece:UserReference ResourceDisposition="urn:dece:type:status:active">urn:dece:userid:org:dece:D842651EB198EA24E0401F0A07993565</dece:UserReference>                
<dece:UserReference ResourceDisposition="urn:dece:type:status:active">urn:dece:userid:org:dece:D842781AAA4A1E6FE0401F0A0799569A</dece:UserReference>                
</dece:AccountMerge>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="SurvivingAccountID" value="urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD842651EB188EA24E0401F0A07993565"/>
  <con:entry key="RetiredAccountID" value="urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD842781AAA3B1E6FE0401F0A0799569A"/>
</con:parameters></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="AccountMergeUndo" type="rest" id="216cdb32-edc4-42ff-940d-0a24ddc5b6ef" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints/><con:resource name="AccountMergeUndo" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{SurvivingAccountID}/Merge/Undo" id="a3a07d2e-db6c-4d70-a443-af62d5a50a00"><con:settings/><con:parameters><con:parameter><con:name>SurvivingAccountID</con:name><con:value>SurvivingAccountID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>SurvivingAccountID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" method="POST" id="4995638c-d575-4d0f-a861-2a267308a8d9"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="9f81ce2b-c5b6-493d-9b1f-7c101faacf30"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="UserResourceStatusUpdate" type="rest" id="3c0ff9bd-188e-4595-ac97-ec945cbf1b34" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="UserResourceStatusUpdate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}/ResourceStatus/Current/Update" id="a72ea2ab-ce4e-47cc-b28d-787420d41eae"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value>AccountID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>AccountID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>UserID</con:name><con:value>UserID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>UserID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="UserResourceStatusUpdate" method="PUT" id="bae01694-be77-463a-bcef-02134d4e45fb"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ResourceStatus</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="d9791dad-3957-43a7-9916-acc98d6cfcfe"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="AccountResourceStatusUpdate" type="rest" id="d2b48757-d9d7-48b6-99e2-5ffaec2a0276" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="AccountResourceStatusUpdate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/ResourceStatus/Current/Update" id="087a86a9-8ddc-4222-aa5e-8ea5f58f3b44"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value>AccountID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>AccountID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="ResourceStatusUpdate" method="PUT" id="a3720389-3d1d-49ca-8d11-1e6c7977a6b6"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="c5de7daa-09fc-46a7-9439-7290f79b45c1"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="STS" type="rest" id="2b399c77-329a-43cb-9c65-b90e43e27bf5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="STSCreate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/SecurityToken/SecurityTokenExchange" id="c9f3de54-1283-4f02-b8ea-7030652e5a47"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>tokentype</con:name><con:value>tokentype</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>tokentype</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter disableUrlEncoding="true"><con:name>audience</con:name><con:value>audience</con:value><con:style>QUERY</con:style><con:default>audience</con:default></con:parameter></con:parameters><con:method name="STSCreate" method="POST" id="dd8dec87-e935-415f-91f4-ef072cb2b292"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:proj="${#Project#coordinatorSchema}">proj:Credentials</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="8eccae92-53c1-462c-ad88-7bb2ab6bc7a9"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="STSGet" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/SecurityToken/Assertion/{assertionUUID}" id="f7ffc3a2-890e-4d43-8f2a-582eb82ffd58"><con:settings/><con:parameters><con:parameter><con:name>assertionUUID</con:name><con:value>assertionUUID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>assertionUUID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="STSGet" method="GET" id="5edddbc8-bc7c-4b0d-9fa5-394b1f0932ed"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:urn="urn:oasis:names:tc:SAML:2.0:assertion">urn:Assertion</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" id="198a8863-08df-42da-87ef-91fde7f4ac06"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Users" type="rest" id="a6b47e2a-6ec0-4d51-b70d-0fe2c39c89bb" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:endpoint>${#Project#Query_HostName}</con:endpoint></con:endpoints><con:resource name="UserCreate" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" id="6abea313-2ae4-47a2-919b-8639b056a406"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="UserCreate" method="POST" id="22790dc9-f087-4d6b-8978-8ee7e6e5feac"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="aff24390-0479-473a-9b57-a08afc5cc4b7"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="UserGet" path="rest/${Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" id="01c41851-b1a7-4127-914c-05f1b1a625d6"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter><con:name>UserID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="UserGet" method="GET" id="92c030af-0ac7-4174-8453-94f6ff1b243c"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" id="46083e56-5c6f-4481-9c0a-5ccd55d9b1b5"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="UserUpdate" path="rest/${Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" id="c050c9c4-c157-4876-98ca-eb88fd076897"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter><con:name>UserID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="UserUpdate" method="PUT" id="503e1641-389f-43b9-a04e-39adeeff15cb"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="8c4de049-fe81-4441-983b-b6c82114b741"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="UserDelete" path="rest/${Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" id="4314b275-2cc6-4662-95d4-c8af507855a6"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter><con:name>UserID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="UserDelete" method="DELETE" id="bd0ca0c4-9525-43b9-90ca-e9d09cb7fbff"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" id="6961de71-6c81-490c-94f4-2f29f24b3231"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite name="CommonTestSteps" disabled="true" id="6deffdf6-8888-4ac0-bba9-62ac3f5a0a8b"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AccountCreate API" searchProperties="true" id="11a715f3-fabc-4fee-900a-f24ebd6d9c5a"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="9ce61892-9d8a-4055-b161-e19938292410"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("accountname",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);

tC.setPropertyValue("ResponseType","SUCCESS");

tP.setPropertyValue("Request_XML",tP.getPropertyValue("Request_XML_Buffer"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="4dc8aec7-2e8e-4eef-9a55-46dedaad9403"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname);
def callTS = tP.getTestSuiteByName(callTSname);

tP.setPropertyValue("Country",callTS.getPropertyValue("Country"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));

def b = tC.getPropertyValue("nodeid");

log.info b;</script></con:config></con:testStep><con:testStep type="groovy" name="Generate AccountName" id="b8ba87db-df08-4f36-8c88-c580bb3ec25b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def today= new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("AccountName","accname_"+today);</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="1671024d-d72f-4387-92d2-ba0ce6079396"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 
import soapUIUtils.soapUIUtils;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
//def certPath = groovyUtils.projectPath

//Set fileKeyStorePath value 
//log.info "certPath: "+certPath;
//tP.setPropertyValue("certPath",""+certPath);

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")

myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("Account_Create");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="Account_Create" id="63a3307b-6106-4786-9cd4-e176efd0bf16"><con:settings/><con:config service="Account" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account" methodName="AccountCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Account_Create" mediaType="application/xml" postQueryString="false" id="ca4ff0a9-00f8-41e3-871a-d799b7db932c" accept="application/xml" sslKeystore="RET_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@remove_empty_content">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="${#Project#coordinatorSchema}"> 
<DisplayName>${#TestCase#AccountName}</DisplayName>
<Country>${#Project#Country}</Country>
</Account>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="947149be-7bb0-4a3f-9591-1927886d48ad"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="23303af8-41d1-41dc-8fef-fb959f9c4a2f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('Account_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 			
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);

</script></con:config></con:testStep><con:testStep type="groovy" name="Validate Response" id="bd82d430-2a93-49e7-b2a1-7b84f0809636"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def url       = context.expand( '${#Project#Provision_HostName}' );
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');


boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
		
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
		errorReason = "The supplied country code is invalid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
		errorReason = "The country code cannot be null.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
		errorReason = "API call not authorized";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserNotActive";
		errorReason = "User is not active";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
		errorReason = "Requesting User ID Not Specified";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;	
	
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
/*
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
*/
//Location Header

if (httpLocationHeader) {
      assert context.expand( '${#TestCase#httpLocation}') != null;


      def a = context.expand( '${#TestCase#httpLocation}');
      def b = a.toURL();
      def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

      if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO"){
                                
		assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
                 
          int lastColon = urlStr.lastIndexOf(':');
	     int lastSlash = urlStr.lastIndexOf('/');
	     accountid     = urlStr.substring(lastColon + 1);
	     def node_Account = urlStr.substring(lastSlash + 1);

          tC.setPropertyValue("NODE_ACCOUNT_ID",accountid);
                    
          tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",node_Account);                        
          tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",node_Account);                                                   
          
      } else {
            assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*");
            int lastColon = urlStr.lastIndexOf('%3A');
            int lastSlash = urlStr.lastIndexOf('/');
            accountid     = urlStr.substring(lastColon + 3);
            def node_Account = urlStr.substring(lastSlash + 1);

            tC.setPropertyValue("NODE_ACCOUNT_ID",accountid);
            
            tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",node_Account);
		  tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",node_Account);
      }

} else {
      	assert context.expand( '${#TestCase#httpLocation}') == "";
}


//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:testStep type="groovy" name="Return the NodeAccountId to the Calling Test Case" id="35d38137-3ff3-47da-9602-9bed11652bbf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("accountname",tC.getPropertyValue("accountname"));
callTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
callTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
</script></con:config></con:testStep><con:properties><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/2015/02/Account/urn:dece:accountid:org:dece:08482E0679EC69ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">RET</con:value></con:property><con:property><con:name>ResponseType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>Account_Create_Firsrt_User_Create_STS_Policies</con:value></con:property><con:property><con:name>sName</con:name><con:value>First_User_Create</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">08482E0679EC69ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">C:\ALL_CODES\Gits\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20141120_031531</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:08482E0679EC69ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:08482E0679EC69ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>Consent_Version</con:name><con:value>20121024</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>b8ba87db-df08-4f36-8c88-c580bb3ec25b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9ce61892-9d8a-4055-b161-e19938292410</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c50a4409-da80-4892-a2c3-07a22e674bd0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd13479c-f25a-495b-8c94-31e5557a93a8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AccountStatusUpdate API" searchProperties="true" id="51ed92e6-c568-4115-881a-88771404b0de" disabled="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="2842594e-4ff8-47cb-afd9-7d9447bd34b7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("status",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("ResponseType",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("SAML",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="1c828cc6-c718-4458-8285-8f3412120ef1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)


tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("status",callTC.getPropertyValue("status"));
tC.setPropertyValue("NODE_ACCOUNT_ID",callTC.getPropertyValue("NODE_ACCOUNT_ID"));

if (tP.getPropertyValue("versionMinor")=="06" || tP.getPropertyValue("versionMinor")=="07"){
			
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			}else{
				
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			}
			
tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));

if (tC.getPropertyValue("ResponseType") == null ||
	tC.getPropertyValue("ResponseType") == "") {
		tC.setPropertyValue("ResponseType","SUCCESS");
}



</script></con:config></con:testStep><con:testStep type="groovy" name="Set Pem" id="aec46fe2-046b-4208-9b99-b3f8610a7a8d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("AccountResourceStatusUpdate");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="AccountResourceStatusUpdate" id="e434e6ab-627f-454e-a457-6101a23db2bf"><con:settings/><con:config service="AccountResourceStatusUpdate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/ResourceStatus/Current/Update" methodName="ResourceStatusUpdate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AccountResourceStatusUpdate" mediaType="application/xml" postQueryString="false" sslKeystore="dececs_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<ResourceStatus xmlns="${#Project#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
  <Current>
    <Value>urn:dece:type:status:${#TestCase#status}</Value>
    <Description>Account Updated</Description>
  </Current>
</ResourceStatus>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#TestCase#ENCODED_NODE_ACCOUNT_ID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="bef51ec6-85bf-456b-9ec3-670fd87002cf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('AccountResourceStatusUpdate');
def expXML = tStep.httpRequest.response.getResponseContent();
 
String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
 
 
tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                                contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}
 
tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="518795a7-9465-4ca9-aaa5-d30618461158"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseType}' );
log.info "errorRespType"+errorRespType;

def usercount = context.expand( '${#TestCase#UserCount}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#Project#Node_Account}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
//String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		log.info 'Error Response Type is'
		log.info errorRespType
		expectHTTPstatus   = "HTTP/1.1 303 See Other";
		XMLbodynull        = true;
		processXMLFlag  = false;
		httpLocationHeader = true;
		
	break;

	case "INVALID_STATUS_UPDATE":
		log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:ResourceStatusTransitionRequestedNotAllowed";
		//errorReason = "Requested Status transition is not allowed for the resource";
		errorReason = "The requested status transition is not allowed for the resource.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceStatusTransitionRequestedNotAllowed";
	break;

		case "INVALID_STATUS_UPDATE_ON_USER":
		log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:ResourceStatusTransitionRequestedNotAllowed";
		//errorReason = "Requested Status transition is not allowed for the resource";
		errorReason = "The requested status transition is not allowed for the resource. - Status requested cannot be applied on the user";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceStatusTransitionRequestedNotAllowed";
	break;


	
	case "API_NOT_AUTH":
	log.info 'Error Response Type is'
	log.info errorRespType
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	//errorReason = "API call not authorized";
	errorReason = "The API call is not authorized.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		log.info 'Error Response Type is'
		log.info errorRespType
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	case "NULL_BODY":
		log.info 'Error Response Type is'
		log.info errorRespType
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		expectHTTPcontenttype = "text/xml";
		XMLbodynull        = true;
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	case "XML_PARSE_ERROR":
		log.info 'Error Response Type is'
		log.info errorRespType
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID = "urn:dece:errorid:org:dece:SaxParserException";
		errorReasonFlag = false;
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#SaxParserException";
	break;
	
	case "USER_NOT_MATCH_TOKEN":
		log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		//errorReason = "User ID does not match security token";
		errorReason = "The member’s user ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	break;

	
	case "USER_INACTIVE":
	log.info 'Error Response Type is'
	log.info errorRespType
	expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
	//errorReason = "The requestor is not active.";
	errorReason = "The requesting member is not active.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;
	
	case "USER_REQUESTING_NOT_PROVIDED":
	log.info 'Error Response Type is'
	log.info errorRespType
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	//errorReason = "Requesting User ID Not Specified";
	errorReason = "A user ID is required.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;

	case "USER_NOT_PERMIT":
		log.info 'Error Response Type is'
		log.info errorRespType
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		//errorReason = "The user does not have permission to perform the requested action.";
		errorReason = "The requesting member does not have permission to perform this action."
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
		log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		//errorReason = "Request Account ID not match";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "NO_MNG_ACC_CNST":
		log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		//errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	case "NO_MNG_USER_CNST":

	log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		//errorReason = "The setting of the \"Manage User Consent\" policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
		errorReason = "The setting of the ManageUserConsent policy prevents the requested action from being completed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
	break;
	case "TOU_NOT_ACCEPTED":
		log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The account status cannot be modified. - First User has to accept TOU to move the Account to active status";
		errorID     = "urn:dece:errorid:org:dece:AccountStatusCannotBeModified";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountStatusCannotBeModified";
	break;

     case "ACCT_INACTIVE":
     	log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		//errorReason = "The identified account is not active.";
		errorID     = "The account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "SPL_CS_ALLOWED_ACCT":
     	log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		//errorReason = "The request is unauthorized.";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;

     case "ACCT_ALREADY_DELETED":
     	log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:AccountDeleted";
		errorReason = "The account has already been removed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDeleted";
     break;

     case "SAME_CURRENT_STATUS":
     	log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:ResourceAlreadyInRequestedStatus";
		//errorReason = "Resource is already in the status requested";
		errorReason = "The resource is already in the requested status.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceAlreadyInRequestedStatus";
     break;

     case "MTHD_NOT_ALLOWED":
     log.info 'Error Response Type is'
		log.info errorRespType
	     expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
		errorID     = "urn:dece:errorid:org:dece:ResourceAlreadyInRequestedStatus";
		errorReason = "Resource is already in the status requested";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceAlreadyInRequestedStatus";
	
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
log.info 'Expected: '+expectHTTPstatus
log.info 'Actual: '+context.expand( '${#TestCase#httpStatus}' )
assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;
def a = URLDecoder.decode(context.expand( '${#TestCase#httpLocation}'), "UTF-8");
	//def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

	//assert b.getPath().matches("$errorHost/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
	
	
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;

	    if(errorReasonFlag)
	    {
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;
	    }
		// ErrorLink
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
} 


</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>1.7. Account Status Changed through Resource Update: Account Unlocked [Your UltraViolet account has been unlocked]</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Notifications_Test Cases</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/06/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE0097920D44DE4BAE0401F0A0599272E</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 303 See Other</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>dececs</con:value></con:property><con:property><con:name>ResponseType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E0097920D44DE4BAE0401F0A0599272E</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\UsersAPIs\User_Notifications\dececs_concat.pem</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE0097920D44DE4BAE0401F0A0599272E</con:value></con:property><con:property><con:name>status</con:name><con:value>active</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>8dac2685-8684-45a7-9383-18906924bc23</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>40b51506-e7ed-484f-9cef-144c355c10b8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0e921030-fc0e-4088-8519-d2ea05acede9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserUpdate API" searchProperties="true" id="32279977-861a-426e-81a7-71cea06f5005"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="2df40bdd-6cc9-44f1-90c3-1a4151e7cfd7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("userType",null);
tC.setPropertyValue("Privilege",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("GivenName",null);
tC.setPropertyValue("SurName",null);
tC.setPropertyValue("PrimaryEmail",null);
tC.setPropertyValue("Language1",null);
tC.setPropertyValue("DisplayImageURL",null);
tC.setPropertyValue("AlternateEmail",null);
tC.setPropertyValue("PostalAddress",null);
tC.setPropertyValue("PostalCode",null);
tC.setPropertyValue("Locality",null);
tC.setPropertyValue("StateOrProvince",null);
tC.setPropertyValue("Country",null);
tC.setPropertyValue("TelephoneNumber",null);
tC.setPropertyValue("MobileTelephoneNumber",null);
tC.setPropertyValue("MeetsAgeOfMajority",null);
tC.setPropertyValue("DateOfBirth",null);
tC.setPropertyValue("urnUser",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("QuestionID1",null);
tC.setPropertyValue("QuestionResponse1",null);
tC.setPropertyValue("QuestionID2",null);
tC.setPropertyValue("QuestionResponse2",null);
tC.setPropertyValue("ResourceStatus",null);

tC.setPropertyValue("ResponseType",null);
tC.setPropertyValue("userType",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("NODE_USER_ID_FULL",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("SAML",null);
tC.setPropertyValue("ETag",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="e3a33296-6687-4004-98ad-43216c8953e0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserUpdate"));
tC.setPropertyValue("userType",callTC.getPropertyValue("userType"));
tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("GivenName",callTC.getPropertyValue("GivenName"));
tC.setPropertyValue("SurName",callTC.getPropertyValue("SurName"));
tC.setPropertyValue("PrimaryEmail",callTC.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("Language1",callTC.getPropertyValue("Language1"));
tC.setPropertyValue("DisplayImageURL",callTC.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",callTC.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",callTC.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",callTC.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",callTC.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",callTC.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",callTC.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",callTC.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",callTC.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("DateOfBirth",callTC.getPropertyValue("DateOfBirth"));
tC.setPropertyValue("urnUser",callTC.getPropertyValue("urnUser"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",callTC.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",callTC.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",callTC.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",callTC.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",callTC.getPropertyValue("ResourceStatus"));

tC.setPropertyValue("ETag",callTC.getPropertyValue("ETag"));
tC.setPropertyValue("expectErrType",callTC.getPropertyValue("PolicyCreateResponseType"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("SAML",callTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID", callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL", callTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("CLG_NODE_USER_ID", callTC.getPropertyValue("CLG_NODE_USER_ID"));
			</script></con:config></con:testStep><con:testStep type="groovy" name="Setting constants based on Geo Profile" id="61a1894e-5bca-4a1f-acbe-c5e726a3a6b9"><con:settings/><con:config><script>import java.text.SimpleDateFormat;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


/* Setting constants based on Geo Profile*/

if(tP.getPropertyValue("Country")=="US")
{
  tP.setPropertyValue("GeoProfile","US");
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","13");
  tP.setPropertyValue("CHILD_MAX_AGE","12");
}
else
if(tP.getPropertyValue("Country")=="CA")
{
  tP.setPropertyValue("GeoProfile","CA");	
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","13");
  tP.setPropertyValue("CHILD_MAX_AGE","12");
}
else
if(tP.getPropertyValue("Country")=="GB")
{
  tP.setPropertyValue("GeoProfile","GB");	
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
else
if(tP.getPropertyValue("Country")=="NZ")
{
  tP.setPropertyValue("GeoProfile","NZ");	
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
else
if(tP.getPropertyValue("Country")=="AU")
{
  tP.setPropertyValue("GeoProfile","AU");	
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
else
if(tP.getPropertyValue("Country")=="IE")
{
  tP.setPropertyValue("GeoProfile","IE");	
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
else
if(tP.getPropertyValue("Country")=="AT")
{
  tP.setPropertyValue("GeoProfile","AT");	
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
else
if(tP.getPropertyValue("Country")=="DE")
{
  tP.setPropertyValue("GeoProfile","DE");	
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
  else
if(tP.getPropertyValue("Country")=="CH")
{
  tP.setPropertyValue("GeoProfile","CH");	
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
  else
if(tP.getPropertyValue("Country")=="FR")
{
  tP.setPropertyValue("GeoProfile","FR");	
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("CHILD_MAX_AGE","17");
}

	def userType = tC.getPropertyValue("userType")
	log.info "userType: "+userType;
	
	switch(userType){
	
	case "ADULT":
	
	Date dob = (new Date());
	dob = dob - ((tP.getPropertyValue("ADULT_MIN_AGE").toInteger()+1)*365);
	log.info "Adult DateOfBirth: "+dob.format('yyyy-MM-dd');
	tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
	break;

	case "YOUTH":
	
	Date dob = (new Date());
	dob = dob - ((tP.getPropertyValue("YOUTH_MIN_AGE").toInteger()+1)*365);
	log.info "YOUTH DateOfBirth: "+dob.format('yyyy-MM-dd');
	tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
	break;

	case "CHILD":
	
	Date dob = (new Date());
	dob = dob - ((tP.getPropertyValue("CHILD_MAX_AGE").toInteger()-1)*365);
	log.info "CHILD DateOfBirth: "+dob.format('yyyy-MM-dd');
	tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
	break;

	case "ADULTPlus":
	
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, -1);
	def dob = sdf.format(calendar.getTime());
	log.info "AdultPlus DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	break;

	case "ADULTMinus":
	
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear1 = today.get(Calendar.YEAR)- tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear1-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, +1);
	def dob = sdf.format(calendar.getTime());
	log.info "ADULTMinus DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	break;

	case "YOUTHPlus":
		
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, -1);
	def dob = sdf.format(calendar.getTime());
	log.info "YOUTHPlus DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	break;

	case "YOUTHMinus":
   	
   	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, +1);
	def dob = sdf.format(calendar.getTime());
	log.info "YOUTHMinus DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	break;

	case "ADULTToday":
	 
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, 0);
	def dob = sdf.format(calendar.getTime());
	log.info "ADULTToday DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	break;

	case "YOUTHToday":

	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear1 = today.get(Calendar.YEAR)- tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear1-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, 0);
	def dob = sdf.format(calendar.getTime());
	log.info "YOUTHToday DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	break;

	default:
	log.info "userType is not matched!!"
	break;

	}</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="c1c25c09-87d7-4c13-a6f4-1abb82fc51b0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("UserUpdate");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="UserUpdate" id="1b78c8af-d076-49a8-89ad-96aa23408bda"><con:settings/><con:config service="AddNewUser" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" methodName="UserUpdate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserUpdate" mediaType="application/xml" sslKeystore="RET_CS_1_concat.pem" id="0a991f82-1623-4495-b24c-9cc11cc37183" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="If-Match" value="${#TestCase#ETag}"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:${#TestCase#Privilege}" xmlns="${#TestCase#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
		<GivenName>${#TestCase#GivenName}</GivenName>
		<SurName>${#TestCase#SurName}</SurName>
	</Name>
	<DisplayImage>
		<DisplayImageURL Height="1" MimeType="" Width="1">${#TestCase#DisplayImageURL}
		</DisplayImageURL>
	</DisplayImage>
	<ContactInfo>
		<PrimaryEmail>
			<Value>${#TestCase#PrimaryEmail}</Value>
			</PrimaryEmail>
			<AlternateEmail>
				<Value>${#TestCase#AlternateEmail}</Value>
				</AlternateEmail>
			<Address>
				<PostalAddress>${#TestCase#PostalAddress}</PostalAddress>
				<PostalCode>${#TestCase#PostalCode}</PostalCode>
				<Locality>${#TestCase#Locality}</Locality>
				<StateOrProvince>${#TestCase#StateOrProvince}</StateOrProvince>
				<Country>${#TestCase#Country}</Country>
			</Address>
			<TelephoneNumber>			
					<Value>${#TestCase#TelephoneNumber}</Value>
				</TelephoneNumber>
				<MobileTelephoneNumber>
					<Value>${#TestCase#MobileTelephoneNumber}</Value>
				</MobileTelephoneNumber>
	</ContactInfo>
	<Languages>
		<Language>${#TestCase#Language1}</Language>
	</Languages>
	<DateOfBirth MeetsAgeOfMajority="${#TestCase#MeetsAgeOfMajority}">${#TestCase#DateOfBirth}</DateOfBirth>
	<LegalGuardian>${#TestCase#urnUser}${#TestCase#CLG_NODE_USER_ID}</LegalGuardian>
	<Credentials>
		<Username>${#TestCase#UserName}</Username>
<!--		<Password>${#TestCase#password}</Password>-->
	</Credentials>
	<UserRecoveryTokens>
		<RecoveryItem>
			<QuestionID>${#TestCase#QuestionID1}</QuestionID>
			<QuestionResponse>${#TestCase#QuestionResponse1}</QuestionResponse>
		</RecoveryItem>
		<RecoveryItem>
			<QuestionID>${#TestCase#QuestionID2}</QuestionID>
			<QuestionResponse>${#TestCase#QuestionResponse2}</QuestionResponse>
		</RecoveryItem>
	</UserRecoveryTokens>
<!--	${#TestCase#ResourceStatus}-->
</User>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="41ca1f7d-5625-4f51-8ca4-25567c822ce4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('UserUpdate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="f2bf8bc6-5e0d-41ba-b6c2-bfdc1e394e92"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

def RequestorType = "";
def RequestorClass = "";
def Requestee = "";

def usernamestring = "";
def givennamestring = "";
def surnamestring = "";

int firstmask = 0;
int lastmask = 0;

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#TestCase#AccountID}')+ "/User/" + context.expand('${#TestCase#UserID}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
	break;

	case "USER_PRIVILEGE_CANNOT_BE_CHANGED":
	XMLbodynull     = false;
	expectHTTPstatus  = "HTTP/1.1 403 Forbidden";
	errorID  = "urn:dece:errorID:org:dece:UserPrivilegeCannotBeChanged";
	errorReason ="The member's permission level cannot be changed.";
	errorLink   ="$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeCannotBeChanged";
	break;

	case "NOT_ALLOWED_TO_UPDATE_INFO":
 	expectHTTPstatus  = "HTTP/1.1 403 Forbidden";
	errorID  = "urn:dece:errorID:org:dece:RequestorNotAllowedToUpdateUserInformation";
	errorReason = "The requesting member cannot update member information.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToUpdateUserInformation"
	break;

	case "REQUESTOR_PRIVILEGE_INSUFFICIENT_TO_UPDATE_USER_CLASS":
 	expectHTTPstatus  = "HTTP/1.1 403 Forbidden";
	errorID  = "urn:dece:errorID :org:dece:RequestorPrivilegeInsufficientToUpdateUserClass";
	errorReason = "The requesting member does not have permission to change the member's permission level.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToUpdateUserClass"
	break;

	case "COUNTRY_CANNOT_BE_CHANGED_ONCE_SET":
	XMLbodynull     = false;
 	expectHTTPstatus  = "HTTP/1.1 400 Bad Request";
	errorID  = "urn:dece:errorID :org:dece:CountryCannotBeChangedOnceSet";
	errorReason = "The country cannot be changed.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#CountryCannotBeChangedOnceSet"
	break;

	case "UNAUTH_CLG_CHANGE":
	expectHTTPstatus  = "HTTP/1.1 403 Forbidden";
	errorID  = "urn:dece:errorID:org:dece:UnauthorizedCLGChangeInRequest";
	errorReason = "The connected legal guardian (CLG) change request is not authorized.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UnauthorizedCLGChangeInRequest";
	break;
	
	case "UNAUTH_NODE_TO_UPDATE_INFO":
 	expectHTTPstatus  = "HTTP/1.1 403 Forbidden";
	errorID  = "urn:dece:errorID:org:dece:NodeUnauthorizedToUpdateUserInformation";
	errorReason = "The node is not authorized to update member information.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToUpdateUserInformation"
	break;

	
	case "REQUESTOR_NOT_ALLOWED_TO_UPDATE_OTHER_USERS":
	XMLbodynull     = false;
 	expectHTTPstatus  = "HTTP/1.1 400 Bad Request";
	errorID  = "urn:dece:errorID :org:dece:RequestorNotAllowedToUpdateOtherUsers";
	errorReason = "The requesting member cannot update another member.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToUpdateOtherUsers"
	break;

	case "INVALID_STATUS":
	XMLbodynull     = false;
	expectHTTPstatus  = "HTTP/1.1 400 Bad Request";
	errorID  = "urn:dece:errorID:org:dece:UserStatusNotValid";
	errorReason = "The member's status is not valid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserStatusNotValid";
	break;

	case "FULL_ACCESS_USER_MUST_BE_18_OR_OLDER":
	XMLbodynull     = false;
 	expectHTTPstatus  = "HTTP/1.1 403 Forbidden";
	errorID  = "urn:dece:errorIDorg:dece:A full-access member must be 18 or older";
	errorReason = "A full-access member must be 18 or older.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FullAccessUserMustBe18OrOlder";
	break;

	case "LAST_FULL_ACCESS_USER_CANNOT_BE_DEMOTED_TO_STANDARD_OR_BASIC_PRIVILGE":
	XMLbodynull     = false;
 	expectHTTPstatus  = "HTTP/1.1 403 Forbidden";
	errorID  = "urn:dece:errorIDorg:dece:LastFullAccessUserCannotBeDemotedToStandardOrBasicPrivilege";
	errorReason = "The permission level of the last remaining full-access member in an account cannot be changed.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#LastFullAccessUserCannotBeDemotedToStandardOrBasicPrivilege"
	break;


	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "The API call is not authorized.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "DOB_NOT_EDITABLE":
	XMLbodynull     = false;
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID  =  "urn:dece:errorid:org:dece:DateOfBirthNotEditable";
	errorReason = "A member's date of birth cannot be changed.";
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
     errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#DateOfBirthNotEditable" ;
	break;



	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	case "NOT_ALLOWED_TO_UPDATE_ACS_LEVEL":
	XMLbodynull     = false;
 	expectHTTPstatus  = "HTTP/1.1 403 Forbidden";
	errorID  = "urn:dece:errorid:org:dece:RequestorNotAllowedToUpdateUserAccessLevel";
	errorReason = "The requesting member cannot update a member's permission level.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToUpdateUserAccessLevel"
   break;


	case "USER_NOT_VALID":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserIdInvalid";
		errorReason = "The user ID is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
	break;

	case "USER_INACTIVE":
	expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
	errorReason = "The requesting member is not active.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;

	case "NOT_ALLOWED_TO_UPDATE_OTHERS":
	XMLbodynull     = false;
 	expectHTTPstatus  = "HTTP/1.1 400 Bad Request";
	errorID  = "urn:dece:errorID:org:dece:RequestorNotAllowedToUpdateOtherUsers";
	errorReason = "The requesting member cannot update another member.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToUpdateOtherUsers"
	break;

     case "URL_NOT_FOUND":
	expectHTTPstatus = "HTTP/1.1 404 Not Found";
	expectHTTPcontenttype = "text/xml"
	XMLbodynull     = true;
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "MTHD_NOT_ALLWD":
	expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
	expectHTTPcontenttype = "text/plain; charset=UTF-8"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "USER_NOT_IN_ACC":
	expectHTTPstatus = "HTTP/1.1 404 Not Found";
	errorID     = "urn:dece:errorid:org:dece:UserNotFound";
	errorReason = "The user ID was not found.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotFound";
	break;

     case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;

	case "NO_ENABLE_MNG_USR_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the EnableManageUserConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:EnableManageUserConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:EnableManageUserConsentRequired";
	break;

	case "NO_MNG_USR_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageUserConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
	break;

	case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		//errorReason = "The identified account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "SPL_CS_ALLOWED_ACCT":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;

     case "SPL_CS_ALLOWED_USER":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToDeleteSuspendedUsers";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToDeleteSuspendedUsers";
     break;

    case "REQUESTEE_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorReason = "The member has been removed.";
		errorID     = "urn:dece:errorid:org:dece:AccountUserStatusDeleted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserStatusDeleted";
	break;
      
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;
/*
//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
*/
//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

	assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
	
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	accountid     = urlStr.substring(lastColon + 1);
	
	tC.setPropertyValue("ACCID",accountid);
	
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
//assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}
if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		//assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		//assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	}
} </script></con:config></con:testStep><con:properties><con:property><con:name>ResponseType</con:name><con:value>UNAUTH_NODE_TO_UPDATE_INFO</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:NodeUnauthorizedToUpdateUserInformation">
      <Reason Language="en">The node is not authorized to update member information.</Reason>
      <OriginalRequest>https://qa.p.uvvu.com:7001/rest/1/07/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE40D5200989FCC89E0401F0A079901AE/User/urn%3Adece%3Auserid%3Aorg%3Adece%3AE40D52009981CC89E0401F0A079901AE</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/07/error/en/ErrorList.html#NodeUnauthorizedToUpdateUserInformation</ErrorLink>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 403 Forbidden</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">848</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_02012_UserUpdate_FUNC_CHILD_Update_CHILD_Access 400 Bad Request</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Update_GeoProfile_CS</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E40D5200989FCC89E0401F0A079901AE</con:value></con:property><con:property><con:name>SecondUserName</con:name><con:value>username_20130122_043244</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E40D52009981CC89E0401F0A079901AE</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE19E24F0C476894EE0401F0A05992542</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:/certs/RET_CS_1_concat.pem</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2002-08-19</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>UserName</con:name><con:value>seconduser20130816_015753</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E40D520098B5CC89E0401F0A079901AE</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E26875D79D093C60E0401F0A05996273</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>seconduser20130816_015753</con:value></con:property><con:property><con:name>SurName</con:name><con:value>seconduser20130816_015753</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3ATermsOfUse</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE40D5200989FCC89E0401F0A079901AE</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE40D52009981CC89E0401F0A079901AE</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>coordinatorSchema</con:name><con:value>${#Project#coordinatorSchema}</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E40D520099C8CC89E0401F0A079901AE"</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-08-03</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-08-16</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5ff78eb3-d79f-4f4a-b9a8-5ec1c84f61c0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3d78db1c-105b-43a0-b406-6bb0f690c833</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662fb201-c4e7-401c-b10a-548ea13f5020</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Account_Get_API" searchProperties="true" id="cacb2fcd-1bef-4e8b-ad7e-32941fd262fd"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="13ed78eb-2ef5-49c2-8928-b781b8b5af4c"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="2da08880-9621-4c99-bb72-a05db9926419"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("AccountGet");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep.name]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="AccountGet" id="0a35dbf2-9159-44f6-ad92-92198b59d2b6"><con:settings/><con:config service="Account" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}" methodName="AccountGet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AccountGet" mediaType="application/xml" sslKeystore="RET_concat.pem" id="e1b8ad00-9ed3-4f09-980e-f2f86bdf18ca"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="648c8b18-139e-414a-9886-48bfa4f700e2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('AccountGet');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String ETag = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);

tC.setPropertyValue("ETag", ETag);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="46d94cac-1e0c-439c-a664-6dcacbd493b4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseTypeAccountGet}' );
def usercount = context.expand( '${#TestCase#UserCount}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#Project#Node_Account}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		assert context.expand( '${#TestCase#httpCacheControl}') != null;
		assert context.expand( '${#TestCase#httpEtag}') != null;
		assert context.expand( '${#TestCase#httpExpires}') != null;
		assert context.expand( '${#TestCase#httpLastModified}') != null;
		//XMLbodynull        = true;
		//httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
		errorReason = "The country code is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
		errorReason = "The country code is required.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
		errorReason = "The API call is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	break;
	
	case "USER_INACTIVE":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
		//errorReason = "The requestor is not active.";
	errorReason = "The requesting member is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;
	
	case "USER_REQUESTING_NOT_PROVIDED":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
		errorReason = "Requesting User ID Not Specified";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;

	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "The user does not have permission to perform the requested action.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;	

     case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "SPL_CS_ALLOWED_ACCT":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;

     case "ACCT_ALREADY_DELETED":
	     expectHTTPstatus = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:AccountDeleted";
		errorReason = "The account has already been removed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDeleted";
     break;
	
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

	if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO"){
                                
          assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
                 
		 int lastColon = urlStr.lastIndexOf(':');
		 int lastSlash = urlStr.lastIndexOf('/');
		 accountid     = urlStr.substring(lastColon + 1);
			                                
		tC.setPropertyValue("ACCID",accountid);
		
		
	} else {
		 assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*");
		 int lastColon = urlStr.lastIndexOf('%3A');
		 int lastSlash = urlStr.lastIndexOf('/');
		 accountid     = urlStr.substring(lastColon + 3);
		 	                                
		tC.setPropertyValue("ACCID",accountid);
				
	}
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
//assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;  -- Comment for cache issue


//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
	log.info "myXML  "+ myXML;
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	else {
		
		//Commented the ActiveStreams and Availabe Streams for coord-2288
		//assert myXML.Account.size() == 1;
		assert myXML.DisplayName.size() == 1;
		assert myXML.Country.size() == 1;
		assert myXML.RightsLockerID.size() == 1;
		//assert myXML.ActiveStreamCount == 0;
		//assert myXML.AvailableStreams == 12;
		assert myXML.UserList.size() == 1;
		assert myXML.UserList.UserReference.size().toString() > 0;
		assert myXML.ResourceStatus.size() == 1;
		assert myXML.ResourceStatus.Current.size() == 1;
		assert myXML.ResourceStatus.Current.@CreatedBy.size() == 1;
		assert myXML.ResourceStatus.Current.@CreationDate.size() == 1;
		assert myXML.ResourceStatus.Current.Value.size() == 1;
		assert myXML.ResourceStatus.Current.Description.size() == 1;

	     if(context.expand( '${#TestCase#CS}') == 'Y')
	     {
	       assert myXML.ResourceStatus.History.size() == 1;
	     }
	}
} 

</script></con:config></con:testStep><con:testStep type="groovy" name="Return_ETag_to_Calling_TestCase" id="3c193123-be70-4eea-988c-07e25df3eee6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));</script></con:config></con:testStep><con:properties><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpConnect</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00001_AccountDelete_PERM_API_Invocation_from_a_Retailer_P0</con:value></con:property><con:property><con:name>sName</con:name><con:value>AccountDelete_PERM</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>DF6FE78EF7554B5BE0401F0A05994050</con:value></con:property><con:property><con:name>SecondUserName</con:name><con:value>username_20130618_082841</con:value></con:property><con:property><con:name>SAML</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SAML2 Assertion=nVZtU+o6EP4rTP3olLZAETrCDPKiKCqXop57vtyJ6VKibVKatIC//iQFKkX0cu+nTrab3Wd3nzzJJUdhUHE6nEMsCKOlVRhQ7mTWlpbE1GGIE+5QFAJ3BHbczv3IqZRNB+22aKVhr6X9U31tXCCAum4jq6rXcAPpqIbqujTZNq7V7Gq1IV05T2BIuUBUtLSKadV0s6FXGlOr6pgNx74oN6r131rpGWIuY0uXsqltQa14S5sLETmGsVwuy8tqmcW+UTFNy/h1P3LxHEKktS83FWWJ4vbWH5c9wBAEuIxZaFwaBZ9Ljzsu8SkSSQzbXN53uUzDbBrSx+PEP9PyveAN6Yxlyy6ijBKMAvKBVH/uQcyZV+oEPouJmIffFmGZKrAOK6xjq0bPNKMI7cRABYQxRzqfI2sbawIziIFiKD1Nhi3t7LSpZVunMaJ8xuKQF5f/DQ/QFAIWgafzXVlbaKcHPNKp9iVgZ0hxkHCSwoMia4Qw8O00AZ8eqjSOYUZWI8IlQVdcoTP24R0sN93oER+4+D8D2hvOJsgzChJo8/tFf/x8vhyt/0JPXnQ3vj4fhg/WxSjlrQzAvnNmyEe7WR6QMifRZsejC/79e79r1Pu192e/z1+6fGStXHa7sG+M6/oqeu/4NJiEN7eDqTV+fLm5Hi2e2e/uR9RZ81W/R9KhffsyQ+sX6/xmweK1u1qcz16X3Ykvy50bd2O3f/3g968Wwjzvjr27j6Z3h+YJaQ467w+/3CntouRtZkZ3Ty/+esY65OpDzOd/08eBmeK01kPL5Y3lIjZs5eXs4S/admfeTV7fAIvdUtFg2CsN5JSQ+FnMlIV4+ixzdSIlPlwAFVpb7VLa4SRS7ojnyBlu1qZ1ZVn9npqnbdbtet+0q6bdbFoDs9Ptm9WdyGxQHEDsMjojKpeS3A1tfgaIQ4cD9SDWU5ZIpePaDxF7SKDSkE7kIWCUw5RJebb8N9tv4vnai/zQ8syUrV5Nr/p+UdFKD0w80se4MxMQF0W5XhDlCWASEVDKrYjNJbO5kM1YoDQRgVVOUZlCIrU9VjLrVGoN2+AkjAJQUI2QeUkA5WgeZa0x+OZb0RHmmXXSn2bH7dvCDv/teiB9PKIcuKrlCuQc4cjtUtsV8n3Bzf2Cd+E7iUfUyZINFTHBGyTFX588UQTJSSIr2kHOPQ8NhajGYUF5Ii8lOGd6fl9LGZcHv70bxwKVF+UkTZNsABdK4GIZ3pA6Zxku4ETq0nrK3oEaeQjjpEsgR32QObcX8SViTl2BBISSLqVsecKt7wJXt/5QEn116pOikFL2TcBKHLN1A/liUYh/fNRgBys/aR7Lz5LF3ue4jsTayyPrlJe+INRXK3UBrL8hBWYyLJHSxeL94McCHEteNOZNzrEIyabXRMD3f0pKk1oawpglVAx7WmbY18kMp1hH4Hw6fQmTSXH+NiP//jjTSUYBDPJFx0kWX12xjuI/9fe0dpv0iNxag8HgR7ktomt/MX+17PXpkOPtPw==</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>D3DF7BAE6D161DAEE0401F0A05993EE0</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADF6FE78EF7554B5BE0401F0A05994050</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP3LBS/RET_concat.pem</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:01B11ED1FFF50656E05305991F0ACE03</con:value></con:property><con:property><con:name>ResponseTypeAccountGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"01B0D769F1D21CF7E05305991F0AD0D6:CFB99212"</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E763CEDB3CA1FFCEE0401F0A07991BDA</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5ff78eb3-d79f-4f4a-b9a8-5ec1c84f61c0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3d78db1c-105b-43a0-b406-6bb0f690c833</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662fb201-c4e7-401c-b10a-548ea13f5020</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Account_Delete_API" searchProperties="true" id="50689f7a-271a-48af-ac58-51a00dcf25e1"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="cf3b865a-29ea-477d-b95b-c43f031f13b6"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="efdeccdb-6452-4757-8742-168412fcf27b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("AccountDelete");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep.name]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="AccountDelete" id="7dfbf775-9a67-431b-bdda-786ea95cc0e0"><con:settings/><con:config service="Account" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}" methodName="AccountDelete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AccountDelete" mediaType="application/xml" sslKeystore="RET_concat.pem" id="7e19750b-606f-4d7d-bda7-cfa0c9074a64" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="IF-Match" value="${#TestCase#ETag}"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="e33b673a-0ef4-4681-bc6f-abfbbf10e33c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('AccountDelete');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="aa74adfe-6f1a-4eb3-8891-56556b47f6c0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );
def errorRespType = context.expand( '${#TestCase#ResponseTypeAccountDelete}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) 
{
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = true;
		//httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "The API call is not authorized.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	break;
	
	case "USER_INACTIVE":
	expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
	errorReason = "The requesting member is not active.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;
	
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;

	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;	

     case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "SPL_CS_ALLOWED_ACCT":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;

     case "ACCT_ALREADY_DELETED":
	     expectHTTPstatus = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:AccountDeleted";
		errorReason = "The account has already been removed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDeleted";
     break;
     

     
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
def responseTypeAccountDelete = context.expand( '${#TestCase#ResponseTypeAccountDelete}' )
</script></con:config></con:testStep><con:properties><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpConnect</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SAML2 Assertion=nVZtU+o6EP4rTP3olLZAETrCDPKiKCqXop57vtyJ6VKibVKatIC//iQFKkX0cu+nTrab3Wd3nzzJJUdhUHE6nEMsCKOlVRhQ7mTWlpbE1GGIE+5QFAJ3BHbczv3IqZRNB+22aKVhr6X9U31tXCCAum4jq6rXcAPpqIbqujTZNq7V7Gq1IV05T2BIuUBUtLSKadV0s6FXGlOr6pgNx74oN6r131rpGWIuY0uXsqltQa14S5sLETmGsVwuy8tqmcW+UTFNy/h1P3LxHEKktS83FWWJ4vbWH5c9wBAEuIxZaFwaBZ9Ljzsu8SkSSQzbXN53uUzDbBrSx+PEP9PyveAN6Yxlyy6ijBKMAvKBVH/uQcyZV+oEPouJmIffFmGZKrAOK6xjq0bPNKMI7cRABYQxRzqfI2sbawIziIFiKD1Nhi3t7LSpZVunMaJ8xuKQF5f/DQ/QFAIWgafzXVlbaKcHPNKp9iVgZ0hxkHCSwoMia4Qw8O00AZ8eqjSOYUZWI8IlQVdcoTP24R0sN93oER+4+D8D2hvOJsgzChJo8/tFf/x8vhyt/0JPXnQ3vj4fhg/WxSjlrQzAvnNmyEe7WR6QMifRZsejC/79e79r1Pu192e/z1+6fGStXHa7sG+M6/oqeu/4NJiEN7eDqTV+fLm5Hi2e2e/uR9RZ81W/R9KhffsyQ+sX6/xmweK1u1qcz16X3Ykvy50bd2O3f/3g968Wwjzvjr27j6Z3h+YJaQ467w+/3CntouRtZkZ3Ty/+esY65OpDzOd/08eBmeK01kPL5Y3lIjZs5eXs4S/admfeTV7fAIvdUtFg2CsN5JSQ+FnMlIV4+ixzdSIlPlwAFVpb7VLa4SRS7ojnyBlu1qZ1ZVn9npqnbdbtet+0q6bdbFoDs9Ptm9WdyGxQHEDsMjojKpeS3A1tfgaIQ4cD9SDWU5ZIpePaDxF7SKDSkE7kIWCUw5RJebb8N9tv4vnai/zQ8syUrV5Nr/p+UdFKD0w80se4MxMQF0W5XhDlCWASEVDKrYjNJbO5kM1YoDQRgVVOUZlCIrU9VjLrVGoN2+AkjAJQUI2QeUkA5WgeZa0x+OZb0RHmmXXSn2bH7dvCDv/teiB9PKIcuKrlCuQc4cjtUtsV8n3Bzf2Cd+E7iUfUyZINFTHBGyTFX588UQTJSSIr2kHOPQ8NhajGYUF5Ii8lOGd6fl9LGZcHv70bxwKVF+UkTZNsABdK4GIZ3pA6Zxku4ETq0nrK3oEaeQjjpEsgR32QObcX8SViTl2BBISSLqVsecKt7wJXt/5QEn116pOikFL2TcBKHLN1A/liUYh/fNRgBys/aR7Lz5LF3ue4jsTayyPrlJe+INRXK3UBrL8hBWYyLJHSxeL94McCHEteNOZNzrEIyabXRMD3f0pKk1oawpglVAx7WmbY18kMp1hH4Hw6fQmTSXH+NiP//jjTSUYBDPJFx0kWX12xjuI/9fe0dpv0iNxag8HgR7ktomt/MX+17PXpkOPtPw==</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP3LBS/RET_concat.pem</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00001_AccountDelete_PERM_API_Invocation_from_a_Retailer_P0</con:value></con:property><con:property><con:name>sName</con:name><con:value>AccountDelete_PERM</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:01B11ED1FFF50656E05305991F0ACE03</con:value></con:property><con:property><con:name>ResponseTypeAccountDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"01B0D769F1D21CF7E05305991F0AD0D6:CFB99212"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5ff78eb3-d79f-4f4a-b9a8-5ec1c84f61c0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3d78db1c-105b-43a0-b406-6bb0f690c833</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662fb201-c4e7-401c-b10a-548ea13f5020</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="User_Create_DB_Validations" searchProperties="true" id="1cc8c7f1-8717-461e-801a-f31149324c32"><con:settings/><con:testStep type="groovy" name="Establish_TestCase_Properties" id="43c5dbf9-3574-4373-9d3f-f1b49a7247c5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("userType",null);
tC.setPropertyValue("Privilege",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("GivenName",null);
tC.setPropertyValue("SurName",null);
tC.setPropertyValue("PrimaryEmail",null);
tC.setPropertyValue("Language1",null);
tC.setPropertyValue("DisplayImageURL",null);
tC.setPropertyValue("AlternateEmail",null);
tC.setPropertyValue("PostalAddress",null);
tC.setPropertyValue("PostalCode",null);
tC.setPropertyValue("Locality",null);
tC.setPropertyValue("StateOrProvince",null);
tC.setPropertyValue("Country",null);
tC.setPropertyValue("TelephoneNumber",null);
tC.setPropertyValue("MobileTelephoneNumber",null);
tC.setPropertyValue("MeetsAgeOfMajority",null);
tC.setPropertyValue("DateOfBirth",null);
tC.setPropertyValue("urnUser",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("QuestionID1",null);
tC.setPropertyValue("QuestionResponse1",null);
tC.setPropertyValue("QuestionID2",null);
tC.setPropertyValue("QuestionResponse2",null);
tC.setPropertyValue("ResourceStatus",null);

tC.setPropertyValue("ResponseType",null);
tC.setPropertyValue("userType",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("NODE_USER_ID_FULL",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("user_oid",null);
tC.setPropertyValue("account_oid",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract_Required_Properties_from_Calling_TestCase" id="c50fe2d3-1534-4f7d-94a8-bf12161b0236"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("userType",callTC.getPropertyValue("userType"));
tC.setPropertyValue("GivenName",callTC.getPropertyValue("GivenName"));
tC.setPropertyValue("SurName",callTC.getPropertyValue("SurName"));
tC.setPropertyValue("PrimaryEmail",callTC.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("Language1",callTC.getPropertyValue("Language1"));
tC.setPropertyValue("DisplayImageURL",callTC.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",callTC.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",callTC.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",callTC.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",callTC.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",callTC.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",callTC.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",callTC.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",callTC.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("DateOfBirth",tP.getPropertyValue("DateOfBirth"));
tC.setPropertyValue("urnUser",callTC.getPropertyValue("urnUser"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",callTC.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",callTC.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",callTC.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",callTC.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",callTC.getPropertyValue("ResourceStatus"));

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("user_oid",callTC.getPropertyValue("user_oid"));
tC.setPropertyValue("account_oid",callTC.getPropertyValue("account_oid"));
tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserUpdate"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify_ACCOUNT_USER_Table" id="01831dcd-e7f2-4900-9668-eaaf97116e9b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("IsMinor","");

def dbHost = context.expand( '${#Project#targetSystem}' );
def userID = context.expand( '${#TestCase#user_oid}' );

def BirthDate = null;
def myXML1 = null;
def finalbday = null;

a = new dbUtils.dbUtils(log,dbHost);
b = new dbUtils.dbUser(log,dbHost);

Result = b.userGetRow(userID);

myXML1 = new XmlSlurper().parseText(Result);

log.info "Actual Rows ==  " + myXML1.ResultSet.Row.size();
		
 if(context.expand( '${#TestCase#ResponseType}')=='SUCCESS')
     {
        assert  myXML1.ResultSet.Row.size() == 1;
       	
       // assert myXML1.ResultSet.Row.STATUS == 'pending';
        assert myXML1.ResultSet.Row.PRIVILEGE == context.expand( '${#TestCase#Privilege}' );
        assert myXML1.ResultSet.Row.USERNAME == context.expand( '${#TestCase#UserName}' ) ;
        assert myXML1.ResultSet.Row.GIVEN_NAME == context.expand( '${#TestCase#GivenName}' ) ;
        assert myXML1.ResultSet.Row.SURNAME == context.expand( '${#TestCase#SurName}' ) ;
        assert myXML1.ResultSet.Row.PRIMARY_EMAIL == context.expand( '${#TestCase#PrimaryEmail}' ) ;
        assert myXML1.ResultSet.Row.TELEPHONE == context.expand( '${#TestCase#TelephoneNumber}' ) ;
        assert myXML1.ResultSet.Row.MOBILE_TELEPHONE == context.expand( '${#TestCase#MobileTelephoneNumber}' ) ;

        if(context.expand( '${#TestCase#DateOfBirth}' )== context.expand( '${#Project#CHILD_DOB_XML}' ))
        {

        	 log.info "I am CHILD";
        	 
           BirthDate = context.expand( '${#Project#CHILD_DOB_XML}' );
           assert myXML1.ResultSet.Row.AGE_CLASS == 'CHILD';

           tC.setPropertyValue("IsMinor","true");
           
         //  assert myXML1.ResultSet.Row.EMAIL_CLOCK_START_TIME == 'null' ;
         //  assert myXML1.ResultSet.Row.EMAIL_CLOCK_END_TIME == 'null' ;        
        } 
       
        else
        if(context.expand( '${#TestCase#DateOfBirth}' )== context.expand( '${#Project#YOUTH_DOB_XML}' ))
        {
        	log.info "I am YOUTH";
        	
          BirthDate = context.expand( '${#Project#YOUTH_DOB_XML}' );
          assert myXML1.ResultSet.Row.AGE_CLASS == 'YOUTH';

          tC.setPropertyValue("IsMinor","true");

                    
        //  assert myXML1.ResultSet.Row.EMAIL_CLOCK_START_TIME == 'null' ;
        //  assert myXML1.ResultSet.Row.EMAIL_CLOCK_END_TIME == 'null' ;

         } 
        else
        if(context.expand( '${#TestCase#DateOfBirth}' )== context.expand( '${#Project#ADULT_DOB_XML}' ))
        {

        	log.info "I am ADULT";
        	
          BirthDate = context.expand( '${#Project#ADULT_DOB_XML}' );
          
          assert myXML1.ResultSet.Row.AGE_CLASS == 'ADULT';

          tC.setPropertyValue("IsMinor","false");
          
        /* if(context.expand( '${#TestCase#attested}' ) == 'true')
          {
            assert myXML1.ResultSet.Row.EMAIL_CLOCK_START_TIME == 'null' ;
            assert myXML1.ResultSet.Row.EMAIL_CLOCK_END_TIME == 'null' ;
          }
          else
          {
            assert myXML1.ResultSet.Row.EMAIL_CLOCK_START_TIME != 'null' ;
            assert myXML1.ResultSet.Row.EMAIL_CLOCK_END_TIME != 'null' ;	
          }
          */ 
        } 

          // Retrieving Birth Date in proper format
 /******************************************************************************************************/
          
         bdaystring = myXML1.ResultSet.Row.BIRTH_DATE.toString();

         int lastspace = bdaystring.lastIndexOf(' ');

         finalbday = bdaystring.substring(0,lastspace);
          
         log.info "Birth Day:  " + finalbday;
       
        assert finalbday == BirthDate;

/******************************************************************************************************/

        assert myXML1.ResultSet.Row.COUNTRY == context.expand( '${#Project#GeoProfile}' );

        if(context.expand( '${#TestCase#attested}' ) == 'true')
        {
          assert myXML1.ResultSet.Row.PRIMARYEMAIL_VERIFICATION_DATE != null ;
          assert myXML1.ResultSet.Row.PRIMARYEMAIL_VERIFICATION_ENTY != null ;
          assert myXML1.ResultSet.Row.PRIMARYEMAIL_VERIFICATION_ID != null ;
        }  

      log.info "User Validations Passed";
               
   }// end if for success response check
  else
  {
  	assert  myXML1.ResultSet.Row.size() == 0;
  	log.info "No Validation Required";
  }
  

   
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify_NODE_USER_Table" id="646f252a-1208-41ee-b592-29898615c1ed"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def dbHost = context.expand( '${#Project#targetSystem}' );
def userID = context.expand( '${#TestCase#user_oid}' );
def nodeid =context.expand('${#TestCase#nodeid}' );

a = new dbUtils.dbUtils(log,dbHost);
b = new dbUtils.dbUser(log,dbHost);
c=  new dbUtils.dbNode(log,dbHost);
//log.info b.accountGetfromNodeAccountId(accID);

String sql = """select to_char(rawtohex(NODE_OID)) NODE_OID from NODE_USER where USER_OID = '$userID'""";

log.info sql;

results = a.SelectFromDB(sql,dbHost);

log.info results;

/*
*  If zero length, no need to continue;
*/
 assert results.length() > 0;

  def myXML = new XmlSlurper().parseText(results);
  
  log.info "myXML.ResultSet.Row.size() is [" + myXML.ResultSet.Row.size() + "]";


if (context.expand( '${#TestCase#ResponseType}' ) == 'SUCCESS')
{
	assert myXML.ResultSet.Row.size() > 0;


	if(nodeid=="dece:cs"|| nodeid=="coord:cs" || nodeid=="portal" || nodeid=="portal:cs")
     {  
       assert myXML.ResultSet.Row.size() == 4;  
       //assert myXML.ResultSet.Row[0].NODE_OID == context.expand( '${#Project#Node_OID}' ); 
       log.info "DECE Node User Validation Passed";     
     }
     else
     { 
       assert myXML.ResultSet.Row.size() == 5;
      // assert myXML.ResultSet.Row[0].NODE_OID == context.expand( '${#Project#Node_OID}' );    
      // assert myXML.ResultSet.Row[1].NODE_OID == "10"; 
       log.info "3rd Party Node User Validation Passed";    
     }
	
}
else
{
	assert myXML.ResultSet.Row.size() == 0;
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify_USER_LEGAL_GUARDIAN_Table" id="c2556cd7-c040-4e74-899c-dd36e9895fad"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

if(context.expand( '${#TestCase#IsMinor}' )=="true")
{
def dbHost = context.expand( '${#Project#targetSystem}' );
def userID = context.expand( '${#TestCase#user_oid}' );

  a = new dbUtils.dbUtils(log,dbHost);
  b = new dbUtils.dbUser(log,dbHost);

  String sql = """select ATTESTATION_STATUS from USER_LEGAL_GUARDIAN where USER_OID ='$userID'""";
  results = a.SelectFromDB(sql,dbHost);

  /*
  *  If zero length, no need to continue;
  */
   assert results.length() > 0;

   def myXML = new XmlSlurper().parseText(results);
  
   log.info "myXML.ResultSet.Row.size() is [" + myXML.ResultSet.Row.size() + "]";

   assert myXML.ResultSet.Row.size() > 0;
	
   assert myXML.ResultSet.Row[0].ATTESTATION_STATUS == "pending";  

   log.info "Legal Guardian Validation Passed";	
}
else
{
	log.info "No Legal Guardian Validation Required";
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify_USER_Policies" id="14df3c78-1881-4452-ae4b-ee45fc2dba4e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

if(context.expand( '${#TestCase#IsMinor}' )=="true")
{
def dbHost = context.expand( '${#Project#targetSystem}' );
def userID = context.expand( '${#TestCase#user_oid}' );

  a = new dbUtils.dbUtils(log,dbHost);
  b = new dbUtils.dbUser(log,dbHost);

  String sql = """select POLICY_CLASS,STATUS from POLICY P, POLICY_RELATIONSHIP PR where PR.POLICY_ACTOR = '"""+b.userGetfromNodeUserId(userID)+"""'
  and P.POLICY_OID = PR.POLICY_OID""";

  results = a.SelectFromDB(sql,dbHost);

  /*
  *  If zero length, no need to continue;
  */
   assert results.length() > 0;

   def myXML = new XmlSlurper().parseText(results);
  
   log.info "myXML.ResultSet.Row.size() is [" + myXML.ResultSet.Row.size() + "]";

   assert myXML.ResultSet.Row.size() > 0;
	
   assert myXML.ResultSet.Row[0].ATTESTATION_STATUS == "pending";  

   log.info "Legal Guardian Validation Passed";	
}
else
{
	log.info "No Legal Guardian Validation Required";
}
</script></con:config></con:testStep><con:properties><con:property><con:name>IsMinor</con:name><con:value/></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00004_UserUpdate_FUNC_CLG_Update_CHILD_DOB_TO_YOUTH_AGE</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Update_GeoProfile</con:value></con:property><con:property><con:name>userType</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>Username</con:name><con:value>seconduser20130813_120746</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>seconduser20130813_120746</con:value></con:property><con:property><con:name>SurName</con:name><con:value>seconduser20130813_120746</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-08-17</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseType</con:name><con:value>DOB_NOT_EDITABLE</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE3CF68DF2A8CD783E0401F0A07994C97</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E3CF68DF2A8CD783E0401F0A07994C97</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>user_oid1</con:name><con:value>E2A349A2ABBCCB1DE0401F0A059926E1</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E3CF68DF2A8DD783E0401F0A07994C97</con:value></con:property><con:property><con:name>user_oid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E3CF692D5BE44697E0401F0A05993AD3</con:value></con:property><con:property><con:name>attested</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="FirstUserCreate API" searchProperties="true" id="0559683a-89a8-4543-9672-06581fc3aece"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="57a6b4c1-0694-446e-8f36-05e83c7ce9d8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("userType",null);
tC.setPropertyValue("Privilege",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("GivenName",null);
tC.setPropertyValue("SurName",null);
tC.setPropertyValue("PrimaryEmail",null);
tC.setPropertyValue("Language1",null);
tC.setPropertyValue("DisplayImageURL",null);
tC.setPropertyValue("AlternateEmail",null);
tC.setPropertyValue("PostalAddress",null);
tC.setPropertyValue("PostalCode",null);
tC.setPropertyValue("Locality",null);
tC.setPropertyValue("StateOrProvince",null);
tC.setPropertyValue("Country",null);
tC.setPropertyValue("TelephoneNumber",null);
tC.setPropertyValue("MobileTelephoneNumber",null);
tC.setPropertyValue("MeetsAgeOfMajority",null);
tC.setPropertyValue("DateOfBirth",null);
tC.setPropertyValue("urnUser",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("QuestionID1",null);
tC.setPropertyValue("QuestionResponse1",null);
tC.setPropertyValue("QuestionID2",null);
tC.setPropertyValue("QuestionResponse2",null);
tC.setPropertyValue("ResourceStatus",null);

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_USER_ID_FULL",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("user_oid1",null);
tC.setPropertyValue("account_oid",null);

tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("ResponseType",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="d1c7a146-8d82-464f-a13c-88e5647b362d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserCreate"));
tC.setPropertyValue("Country",callTC.getPropertyValue("Country"));
tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("userType",callTC.getPropertyValue("userType"));

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("user_oid1",callTC.getPropertyValue("user_oid"));
tC.setPropertyValue("account_oid",callTC.getPropertyValue("account_oid"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Setting constants based on Geo Profile" id="6bfca67d-bde1-48a1-ac3c-4f55e0fb1152"><con:settings/><con:config><script>import java.text.SimpleDateFormat;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/* Setting constants based on Geo Profile*/

if(tP.getPropertyValue("Country")=="US")
{
  tP.setPropertyValue("GeoProfile","US");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","13");
  tP.setPropertyValue("CHILD_MAX_AGE","12");
}
else
if(tP.getPropertyValue("Country")=="CA")
{
  tP.setPropertyValue("GeoProfile","CA");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","13");
  tP.setPropertyValue("CHILD_MAX_AGE","12");
}
else
if(tP.getPropertyValue("Country")=="GB")
{
  tP.setPropertyValue("GeoProfile","GB");          
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
else
if(tP.getPropertyValue("Country")=="AU")
{
  tP.setPropertyValue("GeoProfile","AU");          
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
  else
if(tP.getPropertyValue("Country")=="NZ")
{
  tP.setPropertyValue("GeoProfile","NZ");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
  else
if(tP.getPropertyValue("Country")=="IE")
{
  tP.setPropertyValue("GeoProfile","IE");             
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
else
if(tP.getPropertyValue("Country")=="AT")
{
  tP.setPropertyValue("GeoProfile","AT");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","14");
  tP.setPropertyValue("CHILD_MAX_AGE","13");
}
else
if(tP.getPropertyValue("Country")=="DE")
{
  tP.setPropertyValue("GeoProfile","DE");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","14");
  tP.setPropertyValue("CHILD_MAX_AGE","13");
}
  else
if(tP.getPropertyValue("Country")=="CH")
{
  tP.setPropertyValue("GeoProfile","CH");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
  else
if(tP.getPropertyValue("Country")=="FR")
{
  tP.setPropertyValue("GeoProfile","FR");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("CHILD_MAX_AGE","17");
}

	def userType = tC.getPropertyValue("userType")
	log.info "userType: "+userType;
	
	switch(userType){
	
	case "ADULT":
	
	Date dob = (new Date());
	dob = dob - ((tP.getPropertyValue("ADULT_MIN_AGE").toInteger()+1)*365);
	log.info "Adult DateOfBirth: "+dob.format('yyyy-MM-dd');
	tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
	tC.setPropertyValue("ADULT_DOB_XML",dob.format('yyyy-MM-dd'));
	tC.setPropertyValue("MeetsAgeOfMajority","true");
	break;

	case "YOUTH":
	
	Date dob = (new Date());
	dob = dob - ((tP.getPropertyValue("YOUTH_MIN_AGE").toInteger()+1)*365);
	log.info "YOUTH DateOfBirth: "+dob.format('yyyy-MM-dd');
	tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
	tC.setPropertyValue("YOUTH_DOB_XML",dob.format('yyyy-MM-dd'));
	tC.setPropertyValue("MeetsAgeOfMajority","false");
	break;

	case "CHILD":
	
	Date dob = (new Date());
	dob = dob - ((tP.getPropertyValue("CHILD_MAX_AGE").toInteger()-1)*365);
	log.info "CHILD DateOfBirth: "+dob.format('yyyy-MM-dd');
	tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
	tC.setPropertyValue("CHILD_DOB_XML",dob.format('yyyy-MM-dd'));
	tC.setPropertyValue("MeetsAgeOfMajority","false");
	break;

	default:
	log.info "userType is not matched!!"
	break;

	}

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="d83a7aa0-a338-4337-bd80-8a6555265525"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("User_Create");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="User_Create" id="0bddecd5-3dd5-46cb-98f9-531d8470ab22"><con:settings/><con:config service="FirstUserCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" methodName="FirstUserCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User_Create" mediaType="application/xml" postQueryString="false" accept="application/xml" sslKeystore="RET_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request>${#Project#Request_XML}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1" id="dc7939c7-4e38-4936-ab5e-97a276c8b7cf"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Copy of User_Create" id="6afcd2ee-d125-48d3-86d9-0b8f90dcad31" disabled="true"><con:settings/><con:config service="FirstUserCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" methodName="FirstUserCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of User_Create" mediaType="application/xml" postQueryString="false" accept="application/xml" sslKeystore="RET_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:${#TestCase#Privilege}"
	xmlns="${#TestCase#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md"
	xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
		<GivenName>${#TestCase#GivenName}</GivenName>
		<SurName>${#TestCase#SurName}</SurName>
	</Name>
	<DisplayImage>
		<DisplayImageURL Height="1" MimeType="" Width="1">${#TestCase#DisplayImageURL}
		</DisplayImageURL>
	</DisplayImage>
	<ContactInfo>
		<PrimaryEmail>
			<Value>${#TestCase#PrimaryEmail}</Value>
			</PrimaryEmail>
			<AlternateEmail>
				<Value>${#TestCase#AlternateEmail}</Value>
				</AlternateEmail>
			<Address>
				<PostalAddress>${#TestCase#PostalAddress}</PostalAddress>
				<PostalCode>${#TestCase#PostalCode}</PostalCode>
				<Locality>${#TestCase#Locality}</Locality>
				<StateOrProvince>${#TestCase#StateOrProvince}</StateOrProvince>
				<Country>${#TestCase#Country}</Country>
			</Address>
			<TelephoneNumber>			
					<Value>${#TestCase#TelephoneNumber}</Value>
				</TelephoneNumber>
				<MobileTelephoneNumber>
					<Value>${#TestCase#MobileTelephoneNumber}</Value>
				</MobileTelephoneNumber>
	</ContactInfo>
	<Languages>
		<Language>${#TestCase#Language1}</Language>
	</Languages>
	<DateOfBirth MeetsAgeOfMajority="${#TestCase#MeetsAgeOfMajority}">${#TestCase#DateOfBirth}</DateOfBirth>
	<LegalGuardian>${#TestCase#urnUser}${#TestCase#CLG_NODE_USER_ID}</LegalGuardian>
	<Credentials>
		<Username>${#TestCase#UserName}</Username>
		<Password>${#TestCase#password}</Password>
	</Credentials>
	<UserRecoveryTokens>
		<RecoveryItem>
			<QuestionID>${#TestCase#QuestionID1}</QuestionID>
			<QuestionResponse>${#TestCase#QuestionResponse1}</QuestionResponse>
		</RecoveryItem>
		<RecoveryItem>
			<QuestionID>${#TestCase#QuestionID2}</QuestionID>
			<QuestionResponse>${#TestCase#QuestionResponse2}</QuestionResponse>
		</RecoveryItem>
	</UserRecoveryTokens>
	${#TestCase#ResourceStatus}
</User>
]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1" id="dc7939c7-4e38-4936-ab5e-97a276c8b7cf"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="0d5f80a7-2de4-498f-ae54-f37855d409a6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('User_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 			
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="81aa2acc-00f2-4213-83b4-8d8b8a3892bf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
def primaryEmail = context.expand( '${#TestCase#PrimaryEmail}');
//def nodetype      = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/

if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
		expectHTTPconnection = "close";
	break;

	case "INVALID_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
		errorReason = "The supplied country code is invalid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
		expectHTTPconnection = "close";
	break;

	case "NULL_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
		errorReason = "The country code cannot be null.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
		expectHTTPconnection = "close";
	break;
	
	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
		errorReason = "API call not authorized";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserNotActive";
		errorReason = "User is not active";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
		errorReason = "Requesting User ID Not Specified";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
		expectHTTPconnection = "close";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

		case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The user does not have permission to create a full-access user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The user does not have permission to create a user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:FirstUserMustBe18OrOlder";
		errorReason = "First User must be 18 years or older";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBe18OrOlder";
	break;


	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The first user in a household account must be a full-access user.";
		errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;

	case "INVALID_PASSWORD":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorReason = "The password is not valid.";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPasswordNotValid";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPasswordNotValid";
		expectHTTPconnection = "close";
	break;

	case "INVALID_PRIMARY_EMAIL":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPrimaryEmailNotValid";
		errorReason = "The primary email address is not valid. - " + primaryEmail;
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPrimaryEmailNotValid";
		expectHTTPconnection = "close";
	break;
	
}

tC.setPropertyValue("expectHTTPstatus",expectHTTPstatus);


// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
/*
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
*/
//Location Header

if (httpLocationHeader) {
	 assert context.expand( '${#TestCase#httpLocation}') != null;

      def a = context.expand( '${#TestCase#httpLocation}');
      def b = a.toURL();
      def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

      if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO"){
                                
         assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
         
         int lastColon = urlStr.lastIndexOf(':');
         int lastSlash = urlStr.lastIndexOf('/');
         userid     = urlStr.substring(lastColon + 1);
         def node_User = urlStr.substring(lastSlash + 1);
                                           
         tC.setPropertyValue("NODE_USER_ID",userid);

         tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
         tC.setPropertyValue("NODE_USER_ID_FULL1",node_User);
      } else {
         assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");
         int lastColon = urlStr.lastIndexOf('%3A');
         int lastSlash = urlStr.lastIndexOf('/');
         userid     = urlStr.substring(lastColon + 3);
         def node_User = urlStr.substring(lastSlash + 1);
                                
         tC.setPropertyValue("NODE_USER_ID",userid);

         tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
         tC.setPropertyValue("NODE_USER_ID_FULL1",node_User);
      }
                                
} else {
                                
       	assert context.expand( '${#TestCase#httpLocation}') == "";
}


//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		log.info errorLink;
		log.info myXML.Error.ErrorLink.toString()
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract_Account_OID_and_User_OID" id="634c2e6f-087e-4579-9cce-60d8b6645b9e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def dbUser;

def expectHTTPstatus = tC.getPropertyValue("expectHTTPstatus");

if (expectHTTPstatus == "HTTP/1.1 201 Created")
     {  	
  		def dBHost = context.expand( '${#Project#targetsystem}' )
		
		try          {
		                dbUser = new dbUtils.dbUser(log,dBHost);
		                }
		catch(Throwable e) {
		                log.info "ERROR - dbUtils.dbUser - $e";
		                assert 1 == 2;
		                }
		finally {
		         try {
		                 String u = dbUser.userGetUserOID(tC.getPropertyValue("UserName").toLowerCase());
		                 String a = dbUser.userGetAccountOIDbyUsername(tC.getPropertyValue("UserName").toLowerCase())
		
		                 assert u.length() > 0;
		                 assert a.length() > 0;
		                 
		                 tC.setPropertyValue("user_oid", u);
		                 tC.setPropertyValue("ACCOUNT_OID", a);
		                }
		          catch(Throwable e) {
		                 log.info "ERROR - dbUtils.userGetUserOID - $e";
		                 assert 1 == 2;                     
		     		     }
				}
     }
     else
     {
     	log.info ("Can not retreive User_OID for a negative scenario");
     }
     

</script></con:config></con:testStep><con:testStep type="groovy" name="Return the Username and NodeUserId to the Calling Test Case" id="36b6711f-6cce-40c3-b9aa-ddc166e106d4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID"));
callTC.setPropertyValue("NODE_USER_ID1",tC.getPropertyValue("NODE_USER_ID"));
callTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
callTC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL1"));
callTC.setPropertyValue("UserName",tC.getPropertyValue("UserName"));
callTC.setPropertyValue("user_oid1",tC.getPropertyValue("user_oid"));
callTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));
callTC.setPropertyValue("DateOfBirth",tC.getPropertyValue("DateOfBirth"));</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>Account_Create_Firsrt_User_Create_STS_Policies</con:value></con:property><con:property><con:name>sName</con:name><con:value>First_User_Create</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>UserName</con:name><con:value>AcountDelete_firstuser20141120_1416476733872</con:value></con:property><con:property><con:name>GivenName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>SurName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Language1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DisplayImageURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AlternateEmail</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PostalAddress</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PostalCode</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Locality</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>StateOrProvince</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">true</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1995-11-25</con:value></con:property><con:property><con:name>urnUser</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QuestionID1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QuestionResponse1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QuestionID2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QuestionResponse2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ResourceStatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">08482E0679F869ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:08482E0679F869ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>08482E0679EC69ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:08482E0679EC69ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>account_oid</con:name><con:value>08482E0679ED69ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/2015/02/Account/urn:dece:accountid:org:dece:08482E0679EC69ADE05305991F0A0FF6/User/urn:dece:userid:org:dece:08482E0679F869ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-11-25</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Gits\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>expectHTTPstatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:08482E0679F869ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>08482E0679F969ADE05305991F0A0FF6</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>3d78db1c-105b-43a0-b406-6bb0f690c833</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662fb201-c4e7-401c-b10a-548ea13f5020</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6afcd2ee-d125-48d3-86d9-0b8f90dcad31</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserCreate API" searchProperties="true" id="30aefa36-5265-4855-8432-a953e41b8771"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="cc7ab515-dee1-4301-a271-69c0066d67df"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("userType",null);
tC.setPropertyValue("Privilege",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("GivenName",null);
tC.setPropertyValue("SurName",null);

tC.setPropertyValue("Country",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_USER_ID_FULL",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("SAML",null);

tC.setPropertyValue("ResponseType","SUCCESS");

//def request_XML_Buffer = context.expand( '${#Project#Request_XML_Buffer}' )

//tP.setPropertyValue("Request_XML",request_XML_Buffer);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="815bff3b-842a-4070-86bb-cece5b19c7a8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tP.setPropertyValue("Request_XML",tP.getPropertyValue("Request_XML_Buffer"));

tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserCreate"));

tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("userType",callTC.getPropertyValue("userType"));
tC.setPropertyValue("GivenName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("SurName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("LegalGuardian",callTC.getPropertyValue("LegalGuardian"));

tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));


tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID1", callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL", callTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("SAML",callTC.getPropertyValue("SAML"));
tC.setPropertyValue("CLG_NODE_USER_ID",callTC.getPropertyValue("CLG_NODE_USER_ID"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Setting constants based on Geo Profile" id="f23d9bb0-0bd1-4723-928b-a9c1d99c147f"><con:settings/><con:config><script>import java.text.SimpleDateFormat;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/* Setting constants based on Geo Profile*/

if(tP.getPropertyValue("Country")=="US")
	{
		tP.setPropertyValue("GeoProfile","US");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","13");
		tP.setPropertyValue("CHILD_MAX_AGE","12");
	}
else
if(tP.getPropertyValue("Country")=="CA")
	{
		tP.setPropertyValue("GeoProfile","CA");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","13");
		tP.setPropertyValue("CHILD_MAX_AGE","12");
	}
else
if(tP.getPropertyValue("Country")=="GB")
	{
		tP.setPropertyValue("GeoProfile","GB");          
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="AU")
	{
		tP.setPropertyValue("GeoProfile","AU");          
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="NZ")
	{
		tP.setPropertyValue("GeoProfile","NZ");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="IE")
	{
		tP.setPropertyValue("GeoProfile","IE");             
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="AT")
	{
		tP.setPropertyValue("GeoProfile","AT");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","14");
		tP.setPropertyValue("CHILD_MAX_AGE","13");
	}
else
if(tP.getPropertyValue("Country")=="DE")
	{
		tP.setPropertyValue("GeoProfile","DE");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","14");
		tP.setPropertyValue("CHILD_MAX_AGE","13");
	}
else
if(tP.getPropertyValue("Country")=="CH")
	{
		tP.setPropertyValue("GeoProfile","CH");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="FR")
	{
		tP.setPropertyValue("GeoProfile","FR");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("CHILD_MAX_AGE","17");
	}


	def userType = tC.getPropertyValue("userType")
	log.info "userType: "+userType;
	
	switch(userType){
	
	case "ADULT":
		Date dob = (new Date());
		dob = dob - ((tP.getPropertyValue("ADULT_MIN_AGE").toInteger()+1)*365);
		log.info "Adult DateOfBirth: "+dob.format('yyyy-MM-dd');
		tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
		tC.setPropertyValue("ADULT_DOB_XML",dob.format('yyyy-MM-dd'));
		tC.setPropertyValue("MeetsAgeOfMajority","true");
	break;

	case "YOUTH":	
		Date dob = (new Date());
		dob = dob - ((tP.getPropertyValue("YOUTH_MIN_AGE").toInteger()+1)*365);
		log.info "YOUTH DateOfBirth: "+dob.format('yyyy-MM-dd');
		tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
		tC.setPropertyValue("YOUTH_DOB_XML",dob.format('yyyy-MM-dd'));
		tC.setPropertyValue("MeetsAgeOfMajority","false");
	break;

	case "CHILD":	
		Date dob = (new Date());
		dob = dob - ((tP.getPropertyValue("CHILD_MAX_AGE").toInteger()-1)*365);
		log.info "CHILD DateOfBirth: "+dob.format('yyyy-MM-dd');
		tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
		tC.setPropertyValue("CHILD_DOB_XML",dob.format('yyyy-MM-dd'));
		tC.setPropertyValue("MeetsAgeOfMajority","false");
	break;

	default:
		log.info "userType is not matched!!"
	break;

	}</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="5aec259f-6efc-4047-958a-f404549b66a3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")

myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("User_Create");

def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="User_Create" id="bdbb05a4-3195-40a4-a273-e98edb919cda"><con:settings/><con:config service="FirstUserCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" methodName="FirstUserCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User_Create" mediaType="application/xml" postQueryString="false" accept="application/xml" sslKeystore="RET_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request>${#Project#Request_XML}
</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1" id="dc7939c7-4e38-4936-ab5e-97a276c8b7cf"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="bc996057-be4c-4bee-a9ac-43bd22a866c4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('User_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);

</script></con:config></con:testStep><con:testStep type="groovy" name="Test Case Name with Expected Result" disabled="true" id="6606defe-0900-4d4c-835a-feae6fcf695b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def httpStatus = context.expand( '${#TestCase#httpStatus}' )

logFile.append("${callTCname}"+"\t"+"$httpStatus" +"\n");</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="b31e8838-e244-4a70-b23e-27ecedeb39ef"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	   case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";		
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;


   case "INVALID_USER_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUsernameNotValid";
		errorReason = "The sign-in name is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUsernameNotValid";
	break;

   case "INVALID_GIVEN_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserGivenNameNotValid";
		errorReason = "The given name is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserGivenNameNotValid";
	break;

    case "INVALID_PASSWORD":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPasswordNotValid";
		errorReason = "The password is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPasswordNotValid";
	break;

    case "INVALID_SECURITY_ANS":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserSecurityAnswerNotValid";
		errorReason = "The answer to the security question is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserSecurityAnswerNotValid";
	break;

    case "INVALID_ADDRESS":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserAddressNotValid";
		errorReason = "The address is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserAddressNotValid";
	break;

	case "INVALID_SURNAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserSurnameNotValid";
		errorReason = "The surname is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserSurnameNotValid";
	break;


	case "INVALID_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
		errorReason = "The country code is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
		errorReason = "The country code is required.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "INVALID_PRIMARY_EMAIL":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPrimaryEmailNotValid";
		errorReason = "The primary email address is not valid." + primaryEmail;
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPrimaryEmailNotValid";
	break;
	
	case "INVALID_ALTERNATE_EMAIL":
			expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
			errorID     = "urn:dece:errorid:org:dece:AccountUserAlternateEmailNotValid";

			if(tP.getPropertyValue("AlternateEmail")=="")
			{
			  errorReason = "The alternate email address is not valid.";
			}
			else
			{
				errorReason = "The alternate email address is not valid. - " + tP.getPropertyValue("AlternateEmail");
			}
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserAlternateEmailNotValid";
	break;	
	
	
	case "INVALID_TELEPHONE":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserTelephoneNumberNotValid";
		errorReason = "The telephone number is not valid. - "+ context.expand('${#Project#TelephoneNo}');
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserTelephoneNumberNotValid";
	break;
	
	
	case "INVALID_PRIMARY_LANG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPrimaryLanguageNotValid";
		errorReason = "The primary language is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPrimaryLanguageNotValid";
	break;
	
	case "INVALID_LANG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserLanguageNotValid";
		errorReason = "The language is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserLanguageNotValid";
	break;
	
	case "DUPLICATE_LANG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserLanguageDuplicated";
		errorReason = "The language is a duplicate.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserLanguageDuplicated";
	break;
	
	case "DUPLICATE_EMAIL":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserEmailAddressDuplicated";
		errorReason = "The email address is a duplicate.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserEmailAddressDuplicated";
	break;

		
	case "USERNAME_EXISTS":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUsernameRegistered";
		errorReason = "The sign-in name already exists.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUsernameRegistered";
	break;

	case "INVALID_DOB":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserBirthDateNotValid";
		errorReason = "The date of birth is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserBirthDateNotValid";
	break;
	
	case "INVALID_CLG_STATUS":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:CLGStatusInRequestNotValid";
		errorReason = "The status of the connected legal guardian (CLG) must be active or pending.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#CLGStatusInRequestNotValid";
	break;
	
	
	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
		errorReason = "The API call is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";		
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_INACTIVE":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
		errorReason = "The requesting member is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;

	case "MAX_USERS_IN_ACCOUNT":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountActiveUserCountReachedMaxLimit";
		errorReason = "The maximum number of active members allowed has been reached.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountActiveUserCountReachedMaxLimit";
	break;
	
	case "USER_REQUESTING_NOT_PROVIDED":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
		errorReason = "Requesting User ID Not Specified";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

	case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The requesting member does not have permission to create a full-access member.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The requesting member does not have permission to create a member.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserMustBe18OrOlderToRegister";
		errorReason = "The member must be 18 or older.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserMustBe18OrOlderToRegister";
	break;
	
	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The first member must be a full-access member.";
		errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;
	
	case "FAU_MUST_BE_ABOVE18":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "A full-access member must be 18 or older.";
		errorID     = "urn:dece:errorid:org:dece:FullAccessUserMustBe18OrOlder";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FullAccessUserMustBe18OrOlder";
	break;
	
	case "LEGAL_GUARDIAN_REQD":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserRequiresLegalGuardianDeclared";
		errorReason = "The connected legal guardian (CLG) must be declared.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserRequiresLegalGuardianDeclared";
	break;
	
	case "CREATOR_MUST_BE_CLG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:CLGMustBeSameAsCreator";
		errorReason = "An underage member must be created by a connected legal guardian (CLG).";			       
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#CLGMustBeSameAsCreator";
	break;
	
	case "CREATOR_RESTRICTED_TO_BE_CLG":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The requesting member cannot create an underage member.";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateChildOrYouthUsers";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateChildOrYouthUsers";
	break;

	case "CLG_NOT_FOUND":
	     expectHTTPstatus   = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:LegalGuardianUserNotFound";
		errorReason = "The connected legal guardian (CLG) was not found.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#LegalGuardianUserNotFound";
	break;

	case "CLG_MUST_BE_FAU":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";		
		errorReason = "A connected legal guardian (CLG) must be a full-access member.";
		errorID     = "urn:dece:errorid:org:dece:LegalGuardianMustBeFullAccessUser";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#LegalGuardianMustBeFullAccessUser";
	break;

	case "CLG_STATUS_INVALID":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorReason = "The connected legal guardian (CLG) is not in a valid status.";
		errorID     = "urn:dece:errorid:org:dece:PendingCLGDeclaredNotInValidStatus";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#PendingCLGDeclaredNotInValidStatus";
	break;

     case "ACC_STATUS_INVALID":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountStatusNotValid";
		errorReason = "The account status is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountStatusNotValid";
	break;

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "STATUS_NOT_ALLOWED":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:ResourceStatusElementNotAllowed";
		errorReason = "The resource status element is not allowed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceStatusElementNotAllowed";
     break;

          case "DOB_NOT_CONSISTENT":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserDOBNotConsistentWithAgeOfMajorityDeclaration";
		errorReason = "The member's date of birth conflicts with the value of the AgeOfMajority attribute.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserDOBNotConsistentWithAgeOfMajorityDeclaration";
     break;

     case "AGE_OF_MAJORITY_BOOLEAN_ERROR":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:SaxParserException";
		errorReason = "cvc-datatype-valid.1.2.1: \'' is not a valid value for \'boolean\'.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#SaxParserException";
     break;

	case "DOB_DATATYPE_ERROR":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:SaxParserException";
		errorReason = "cvc-datatype-valid.1.2.3: \'' is not a valid value of union type \'DayOptionalDate-type\'.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#SaxParserException";
     break;

     case "INSUFFICIENT_PRIVILEGES":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "The user does not have permission to perform the requested action.";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;    

	
}

tC.setPropertyValue("expectHTTPstatus",expectHTTPstatus);

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
/*
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;
*/

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
/*
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
*/
//Location Header

if (httpLocationHeader) {
	 assert context.expand( '${#TestCase#httpLocation}') != null;

      def a = context.expand( '${#TestCase#httpLocation}');
      def b = a.toURL();
      def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

      if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
      	{                                
			assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
			
			int lastColon = urlStr.lastIndexOf(':');
			int lastSlash = urlStr.lastIndexOf('/');
			userid     = urlStr.substring(lastColon + 1);
			def node_User = urlStr.substring(lastSlash + 1);
			                                 
			tC.setPropertyValue("NODE_USER_ID",userid);			
			tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
      	} 
      else 
      	{
			assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");
			int lastColon = urlStr.lastIndexOf('%3A');
			int lastSlash = urlStr.lastIndexOf('/');
			userid     = urlStr.substring(lastColon + 3);
			def node_User = urlStr.substring(lastSlash + 1);
			                      
			tC.setPropertyValue("NODE_USER_ID",userid);			
			tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
      	}
                                
} else 
	{
       	assert context.expand( '${#TestCase#httpLocation}') == "";
	}


//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		log.info "Errorlink from Coord : " + myXML.Error.ErrorLink.toString();
		log.info "Errorlink  expected" + errorLink;
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract_Account_OID_and_User_OID" id="95f3189f-715e-4cef-bc91-14a1b4138b68"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def dbUser;

def expectHTTPstatus = tC.getPropertyValue("expectHTTPstatus");

if (expectHTTPstatus == "HTTP/1.1 201 Created")
     {
		def dBHost = context.expand( '${#Project#targetsystem}' )
		
		try          {
		                dbUser = new dbUtils.dbUser(log,dBHost);
		                }
		catch(Throwable e) {
		                log.info "ERROR - dbUtils.dbUser - $e";
		                assert 1 == 2;
		                }
		finally {
		         try {
		                String u = dbUser.userGetUserOID(tC.getPropertyValue("UserName").toLowerCase());
		                //String a = dbUser.userGetAccountOIDbyUsername(tC.getPropertyValue("UserName").toLowerCase());
		
		                 assert u.length() > 0;
		                 //assert a.length() > 0;
		                 
		                 tC.setPropertyValue("user_oid", u);
		                //tP.setPropertyValue("account_oid", a);
		                }
		          catch(Throwable e) 
		          	{
		                 log.info "ERROR - dbUtils.userGetUserOID - $e";
		                 assert 1 == 2;                     
		          	}
		}
     }
     else
     {
     	log.info ("Can not retreive User_OID for a negative scenario");
     }
     

</script></con:config></con:testStep><con:testStep type="groovy" name="Return the NodeAccountId and NodeUserId to the Calling Test Case" id="419e9428-03d9-4db9-8ef2-4eaee630ffe1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("UserName",tC.getPropertyValue("UserName"));
callTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID"));
callTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
callTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid"));
callTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

callTC.setPropertyValue("ADULT_DOB_XML",tC.getPropertyValue("ADULT_DOB_XML"));
callTC.setPropertyValue("YOUTH_DOB_XML",tC.getPropertyValue("YOUTH_DOB_XML"));
callTC.setPropertyValue("CHILD_DOB_XML",tC.getPropertyValue("CHILD_DOB_XML"));
callTC.setPropertyValue("DateOfBirth",tC.getPropertyValue("DateOfBirth"));</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Validate_Response" disabled="true" id="d54de616-6e27-4415-9595-dc1c9befc230"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#nodeIdRetailerforDeviceAuthToken}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#nodeIdRetailerforDeviceAuthToken}' );
}
if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The supplied country code is invalid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code cannot be null.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "API call not authorized";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:UserNotActive";
	errorReason = "User is not active";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

		case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The user does not have permission to create a full-access user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The user does not have permission to create a user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
			expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBe18OrOlder";
			errorReason = "First User must be 18 years or older";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBe18OrOlder";
	break;


	case "NO_MNG_ACC_CNST":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
			errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The first user in a household account must be a full-access user.";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;
	
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
/*
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
*/
//Location Header

if (httpLocationHeader) {
	 assert context.expand( '${#TestCase#httpLocation}') != null;

      def a = context.expand( '${#TestCase#httpLocation}');
      def b = a.toURL();
      def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

      if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO"){
                                
         assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
         
         int lastColon = urlStr.lastIndexOf(':');
         int lastSlash = urlStr.lastIndexOf('/');
         userid     = urlStr.substring(lastColon + 1);
         def node_User = urlStr.substring(lastSlash + 1);
                                           
         tC.setPropertyValue("NODE_USER_ID",userid);

         tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
         tC.setPropertyValue("NODE_USER_ID_FULL2",node_User);
      } else {
         assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");
         int lastColon = urlStr.lastIndexOf('%3A');
         int lastSlash = urlStr.lastIndexOf('/');
         userid     = urlStr.substring(lastColon + 3);
         def node_User = urlStr.substring(lastSlash + 1);
                                
         tC.setPropertyValue("NODE_USER_ID",userid);

         tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
         tC.setPropertyValue("NODE_USER_ID_FULL2",node_User);
      }
                                
} else {
                                
       	assert context.expand( '${#TestCase#httpLocation}') == "";
}


//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:testStep type="restrequest" name="Copy of User_Create" disabled="true" id="c17a5bb4-45e8-4769-a033-1d1cc450c284"><con:settings/><con:config service="FirstUserCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" methodName="FirstUserCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of User_Create" mediaType="application/xml" postQueryString="false" accept="application/xml" sslKeystore="RET_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:${#TestCase#Privilege}" xmlns="${#TestCase#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
		<GivenName>${#TestCase#GivenName}</GivenName>
		<SurName>${#TestCase#SurName}</SurName>
	</Name>
	<DisplayImage>
		<DisplayImageURL Height="1" MimeType="" Width="1">${#TestCase#DisplayImageURL}
		</DisplayImageURL>
	</DisplayImage>
	<ContactInfo>
		<PrimaryEmail>
			<Value>${#TestCase#PrimaryEmail}</Value>
			</PrimaryEmail>
			<AlternateEmail>
				<Value>${#TestCase#AlternateEmail}</Value>
				</AlternateEmail>
			<Address>
				<PostalAddress>${#TestCase#PostalAddress}</PostalAddress>
				<PostalCode>${#TestCase#PostalCode}</PostalCode>
				<Locality>${#TestCase#Locality}</Locality>
				<StateOrProvince>${#TestCase#StateOrProvince}</StateOrProvince>
				<Country>${#TestCase#Country}</Country>
			</Address>
			<TelephoneNumber>			
					<Value>${#TestCase#TelephoneNumber}</Value>
				</TelephoneNumber>
				<MobileTelephoneNumber>
					<Value>${#TestCase#MobileTelephoneNumber}</Value>
				</MobileTelephoneNumber>
	</ContactInfo>
	<Languages>
		<Language>${#TestCase#Language1}</Language>
	</Languages>
	<DateOfBirth MeetsAgeOfMajority="${#TestCase#MeetsAgeOfMajority}">${#TestCase#DateOfBirth}</DateOfBirth>
<!--	<LegalGuardian>${#TestCase#urnUser}${#TestCase#CLG_NODE_USER_ID}</LegalGuardian>-->
	<Credentials>
		<Username>${#TestCase#UserName}</Username>
		<Password>${#TestCase#password}</Password>
	</Credentials>
	<UserRecoveryTokens>
		<RecoveryItem>
			<QuestionID>${#TestCase#QuestionID1}</QuestionID>
			<QuestionResponse>${#TestCase#QuestionResponse1}</QuestionResponse>
		</RecoveryItem>
		<RecoveryItem>
			<QuestionID>${#TestCase#QuestionID2}</QuestionID>
			<QuestionResponse>${#TestCase#QuestionResponse2}</QuestionResponse>
		</RecoveryItem>
	</UserRecoveryTokens>
	${#TestCase#ResourceStatus}
</User>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1" id="dc7939c7-4e38-4936-ab5e-97a276c8b7cf"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>User_Create_STS_Policies</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Create_API</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>UserName</con:name><con:value>AcountDelete_20140819_1408463632453</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>AcountDelete_20140819_1408463632453</con:value></con:property><con:property><con:name>SurName</con:name><con:value>AcountDelete_20140819_1408463632453</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1995-08-24</con:value></con:property><con:property><con:name>urnUser</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">00FE35CCBDA037A6E05307991F0A9C25</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FE35CCBDA037A6E05307991F0A9C25</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35BEA2FC6B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35BEA2FC6B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/11/Account/urn:dece:accountid:org:dece:00FE35BEA2FC6B84E05305991F0AFAB5/User/urn:dece:userid:org:dece:00FE35CCBDA037A6E05307991F0A9C25</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0TpYxVygXCJClIKTZveC23VfV6OjGOIN4kdYieBfv22Q5MCpT3dR0JCnoxn1swsL/uUgTiyHJcxlHJMieKP+uq/XcvuTkEAtU63OdVaRqep9QC0tKYFTNsGZqs9NVXFZyxDPmEcEN5XLcNsaUZXM3tPpu3YTcc2Gr12+x9VeUEpE6GFS8NQlVUcEeaUaftqlhKHAoaZQ0CMmMOhM3Fvbxzh6YAKkzo43aAsE6aDkPPE0XXYCBBEUQQbkMb6qb7jcxowZ4LnBPAsRe85A9ZX3/cWRdEomg2aznXLMAzd6OnCJ2B4fqwOjqrNKPDJjG7WQ0AowRBE+A1IULeIhzRQ3GhOU8zD+IvQpm4aMrSGVlCDZoscq/pHghLdDyPtgEwZ0FgIzCrYGM1QighEyvPY76vHP5vgZu9TCgib0TRme+u/g4RIjiKaoEBjVWUVup9HPNCuwSmCjk9glDGcoztJkwRAxJSHFM3w6gYzQb6AKeX4lRUTP1yxDMG/Gcupvo1VQNcPdGeE54jx/zOz7XltoryAKEOD4OSOmU0Pnrvr2WvxttYvCr9oPQA4gv0SwrbzBlQ97vf1Pllrbr1vyk6A/za9aN6OfDhuTx6b5zdBES9eb+PLk8XZ9GRoeZ2X69Xzo1cU7tXydrKY302e8UOE73teGD+//XrMV6Ooje7aV0fuVTqb+s8XnavlSzgZPq9PlpMxuUIe9lNw2QmpuVhfZkX8C3vzO6TrKMSx/YpJooPi5pq2pquELPNW+xGmr0fz4jpeItMm8zYNr2iax4v+R03bNewaK0mYZNPfCPJqKenhjxRPzAvw7+VFWnCgzUpXJ5EaxTgiXB3IXVJanEwIEA4cMczN2jC886Y9bHuubbfPeta5YTcNu9czPcPtmq5XadAGxR7EISUzLHNJld3w53uAMHYYIgFKtZxmMERM/SbiCHCg+GQsDgclDD1RoeK/4TKZt3IKwjwwg06Y9dKEwkXPUpU7yu/JferOOEp3pbu7I91jBHGCkdR3SXAmGM646MUS5BmPzEYOGgRl4gZIpQg7Vqtr6wzHSYQkUj2mQRahRhImZWd0tvm3NABZaR2fP5UH78u69r9VLRA+AZYOTNZyhsQY0YE7qFUV8mXBlrldcBXezQIsz5foJ08x3CDZ/fRBE8mPmiOiogpy7blv2Imq7xdUJwpyDGui1ze0EHhx/AfVOJagsWxkeZ6VA+hIaUtFeF0onKlPEMyEPq2f6AIRvQ6h/+h6qFHvZa7tu/gyHpIJBxzFgi5KufzB22CCmHwb+ILnq58+PHZSir5xtOKHbMNIPCEk4m9fGdCB0k+YH8RfQdPgY1wHYm3lEXWKBwHHZC5X8iJYf0EKSEVYLJSLptvBDwU4lHzXWDe5xsIFm6YZR19/UaQk9VUAIc0I90dqadiWyRInXyfI+XD6FKaU4ve7dcW+vFtfb28mQrBioNa++L+dNVzSBSJVXuEllr66Ek9FkZzMt2T5HeBnZT47dy1v2D7rtraV2XPP7LqBO5UMPpk/W7Z6un8eBn8A</con:value></con:property><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-08-24</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/RET_concat.pem</con:value></con:property><con:property><con:name>expectHTTPstatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>00FE35CCBDA137A6E05307991F0A9C25</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5ff78eb3-d79f-4f4a-b9a8-5ec1c84f61c0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3d78db1c-105b-43a0-b406-6bb0f690c833</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662fb201-c4e7-401c-b10a-548ea13f5020</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f23d9bb0-0bd1-4723-928b-a9c1d99c147f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95f3189f-715e-4cef-bc91-14a1b4138b68</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Child_UserCreate API" searchProperties="true" id="590b402e-4d94-4c2b-a26d-a4d3267a4ef0"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="f27028f3-2af9-46ac-a1de-e4256a56b696"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("userType",null);
tC.setPropertyValue("Privilege",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("GivenName",null);
tC.setPropertyValue("SurName",null);
tC.setPropertyValue("PrimaryEmail",null);
tC.setPropertyValue("Language1",null);
tC.setPropertyValue("DisplayImageURL",null);
tC.setPropertyValue("AlternateEmail",null);
tC.setPropertyValue("PostalAddress",null);
tC.setPropertyValue("PostalCode",null);
tC.setPropertyValue("Locality",null);
tC.setPropertyValue("StateOrProvince",null);
tC.setPropertyValue("Country",null);
tC.setPropertyValue("TelephoneNumber",null);
tC.setPropertyValue("MobileTelephoneNumber",null);
tC.setPropertyValue("MeetsAgeOfMajority",null);
tC.setPropertyValue("DateOfBirth",null);
tC.setPropertyValue("urnUser",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("QuestionID1",null);
tC.setPropertyValue("QuestionResponse1",null);
tC.setPropertyValue("QuestionID2",null);
tC.setPropertyValue("QuestionResponse2",null);
tC.setPropertyValue("ResourceStatus",null);

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_USER_ID_FULL",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("SAML",null);

tC.setPropertyValue("ResponseType","SUCCESS");
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="d5b51071-2ee3-4d2b-9d9f-bc6a6ac92aee"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserCreate"));

tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("userType",callTC.getPropertyValue("userType"));
tC.setPropertyValue("GivenName",callTC.getPropertyValue("GivenName"));
tC.setPropertyValue("SurName",callTC.getPropertyValue("SurName"));
tC.setPropertyValue("PrimaryEmail",callTC.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("Language1",callTC.getPropertyValue("Language1"));
tC.setPropertyValue("DisplayImageURL",callTC.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",callTC.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",callTC.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",callTC.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",callTC.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",callTC.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",callTC.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",callTC.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",callTC.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("urnUser",callTC.getPropertyValue("urnUser"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",callTC.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",callTC.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",callTC.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",callTC.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",callTC.getPropertyValue("ResourceStatus"));

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID1", callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL", callTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("SAML",callTC.getPropertyValue("SAML"));
tC.setPropertyValue("CLG_NODE_USER_ID", callTC.getPropertyValue("CLG_NODE_USER_ID"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Setting constants based on Geo Profile" id="50763b73-9049-4b58-a596-22b9c44d28ce"><con:settings/><con:config><script>import java.text.SimpleDateFormat;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


/* Setting constants based on Geo Profile*/

if(tP.getPropertyValue("Country")=="US")
	{
		tP.setPropertyValue("GeoProfile","US");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","13");
		tP.setPropertyValue("CHILD_MAX_AGE","12");
	}
else
if(tP.getPropertyValue("Country")=="CA")
	{
		tP.setPropertyValue("GeoProfile","CA");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","13");
		tP.setPropertyValue("CHILD_MAX_AGE","12");
	}
else
if(tP.getPropertyValue("Country")=="GB")
	{
		tP.setPropertyValue("GeoProfile","GB");          
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="AU")
	{
		tP.setPropertyValue("GeoProfile","AU");          
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="NZ")
	{
		tP.setPropertyValue("GeoProfile","NZ");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="IE")
	{
		tP.setPropertyValue("GeoProfile","IE");             
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="AT")
	{
		tP.setPropertyValue("GeoProfile","AT");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","14");
		tP.setPropertyValue("CHILD_MAX_AGE","13");
	}
else
if(tP.getPropertyValue("Country")=="DE")
	{
		tP.setPropertyValue("GeoProfile","DE");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","14");
		tP.setPropertyValue("CHILD_MAX_AGE","13");
	}
else
if(tP.getPropertyValue("Country")=="CH")
	{
		tP.setPropertyValue("GeoProfile","CH");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("YOUTH_MIN_AGE","16");
		tP.setPropertyValue("CHILD_MAX_AGE","15");
	}
else
if(tP.getPropertyValue("Country")=="FR")
	{
		tP.setPropertyValue("GeoProfile","FR");           
		tP.setPropertyValue("ADULT_MIN_AGE","18");
		tP.setPropertyValue("CHILD_MAX_AGE","17");
	}


	def userType = tC.getPropertyValue("userType")
	log.info "userType: "+userType;
	
	switch(userType){
	
	case "ADULT":
		Date dob = (new Date());
		dob = dob - ((tP.getPropertyValue("ADULT_MIN_AGE").toInteger()+1)*365);
		log.info "Adult DateOfBirth: "+dob.format('yyyy-MM-dd');
		tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
		tC.setPropertyValue("ADULT_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "YOUTH":	
		Date dob = (new Date());
		dob = dob - ((tP.getPropertyValue("YOUTH_MIN_AGE").toInteger()+1)*365);
		log.info "YOUTH DateOfBirth: "+dob.format('yyyy-MM-dd');
		tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
		tC.setPropertyValue("YOUTH_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "CHILD":	
		Date dob = (new Date());
		dob = dob - ((tP.getPropertyValue("CHILD_MAX_AGE").toInteger()-1)*365);
		log.info "CHILD DateOfBirth: "+dob.format('yyyy-MM-dd');
		tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
		tC.setPropertyValue("CHILD_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "ADULTPlus":	
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, -1);
		def dob = sdf.format(calendar.getTime());
		log.info "AdultPlus DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("ADULT_DOB_XML",dob); 
	break;

	case "ADULTMinus":	
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear1 = today.get(Calendar.YEAR)- tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear1-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, +1);
		def dob = sdf.format(calendar.getTime());
		log.info "ADULTMinus DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("YOUTH_DOB_XML",dob);
	break;

	case "YOUTHPlus":
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, -1);
		def dob = sdf.format(calendar.getTime());
		log.info "YOUTHPlus DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob); 
		tC.setPropertyValue("YOUTH_DOB_XML",dob);
	break;

	case "YOUTHMinus":   	
	   	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, +1);
		def dob = sdf.format(calendar.getTime());
		log.info "YOUTHMinus DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("CHILD_DOB_XML",dob); 
	break;

	case "ADULTToday":	 
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, 0);
		def dob = sdf.format(calendar.getTime());
		log.info "ADULTToday DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("ADULT_DOB_XML",dob); 
	break;

	case "YOUTHToday":
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar today = Calendar.getInstance();
		int curYear1 = today.get(Calendar.YEAR)- tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
		int curMonth = today.get(Calendar.MONTH);
		int curDay = today.get(Calendar.DAY_OF_MONTH);
	
		if(curDay==29){
			curDay==28
			}
	
		Date now = new Date(curYear1-1900,curMonth,curDay);  
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(now);  
		calendar.add(Calendar.DAY_OF_YEAR, 0);
		def dob = sdf.format(calendar.getTime());
		log.info "YOUTHToday DateOfBirth: "+dob;
		tC.setPropertyValue("DateOfBirth",dob);
		tC.setPropertyValue("YOUTH_DOB_XML",dob); 
	break;

	default:
		log.info "userType is not matched!!"
	break;

	}</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="e60197f4-457a-471d-9c07-8c2288d7ab27"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")

myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("User_Create");

def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="User_Create" id="de24c3ce-5f05-4e09-b55f-cc972dd6ed20"><con:settings/><con:config service="FirstUserCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" methodName="FirstUserCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User_Create" mediaType="application/xml" postQueryString="false" accept="application/xml" sslKeystore="RET_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:${#TestCase#Privilege}" xmlns="${#TestCase#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
		<GivenName>${#TestCase#GivenName}</GivenName>
		<SurName>${#TestCase#SurName}</SurName>
	</Name>
	<DisplayImage>
		<DisplayImageURL Height="1" MimeType="" Width="1">${#TestCase#DisplayImageURL}
		</DisplayImageURL>
	</DisplayImage>
	<ContactInfo>
		<PrimaryEmail>
			<Value>${#TestCase#PrimaryEmail}</Value>
			</PrimaryEmail>
			<AlternateEmail>
				<Value>${#TestCase#AlternateEmail}</Value>
				</AlternateEmail>
			<Address>
				<PostalAddress>${#TestCase#PostalAddress}</PostalAddress>
				<PostalCode>${#TestCase#PostalCode}</PostalCode>
				<Locality>${#TestCase#Locality}</Locality>
				<StateOrProvince>${#TestCase#StateOrProvince}</StateOrProvince>
				<Country>${#TestCase#Country}</Country>
			</Address>
			<TelephoneNumber>			
					<Value>${#TestCase#TelephoneNumber}</Value>
				</TelephoneNumber>
				<MobileTelephoneNumber>
					<Value>${#TestCase#MobileTelephoneNumber}</Value>
				</MobileTelephoneNumber>
	</ContactInfo>
	<Languages>
		<Language>${#TestCase#Language1}</Language>
	</Languages>
	<DateOfBirth MeetsAgeOfMajority="${#TestCase#MeetsAgeOfMajority}">${#TestCase#DateOfBirth}</DateOfBirth>
	<LegalGuardian>${#TestCase#urnUser}${#TestCase#CLG_NODE_USER_ID}</LegalGuardian>
	<Credentials>
		<Username>${#TestCase#UserName}</Username>
		<Password>${#TestCase#password}</Password>
	</Credentials>
	<UserRecoveryTokens>
		<RecoveryItem>
			<QuestionID>${#TestCase#QuestionID1}</QuestionID>
			<QuestionResponse>${#TestCase#QuestionResponse1}</QuestionResponse>
		</RecoveryItem>
		<RecoveryItem>
			<QuestionID>${#TestCase#QuestionID2}</QuestionID>
			<QuestionResponse>${#TestCase#QuestionResponse2}</QuestionResponse>
		</RecoveryItem>
	</UserRecoveryTokens>
	${#TestCase#ResourceStatus}
</User>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1" id="dc7939c7-4e38-4936-ab5e-97a276c8b7cf"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="03a76851-c6af-43f8-9a56-27b1c0fbd654"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('User_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="db9995f9-2d03-4edc-a7b5-1a27806f9df4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	   case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";		
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;


   case "INVALID_USER_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUsernameNotValid";
		errorReason = "The sign-in name is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUsernameNotValid";
	break;

   case "INVALID_GIVEN_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserGivenNameNotValid";
		errorReason = "The given name is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserGivenNameNotValid";
	break;

    case "INVALID_PASSWORD":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPasswordNotValid";
		errorReason = "The password is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPasswordNotValid";
	break;

    case "INVALID_SECURITY_ANS":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserSecurityAnswerNotValid";
		errorReason = "The answer to the security question is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserSecurityAnswerNotValid";
	break;

    case "INVALID_ADDRESS":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserAddressNotValid";
		errorReason = "The address is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserAddressNotValid";
	break;

	case "INVALID_SURNAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserSurnameNotValid";
		errorReason = "The surname is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserSurnameNotValid";
	break;


	case "INVALID_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
		errorReason = "The country code is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
		errorReason = "The country code is required.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "INVALID_PRIMARY_EMAIL":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPrimaryEmailNotValid";
		errorReason = "The primary email address is not valid." + primaryEmail;
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPrimaryEmailNotValid";
	break;
	
	case "INVALID_ALTERNATE_EMAIL":
			expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
			errorID     = "urn:dece:errorid:org:dece:AccountUserAlternateEmailNotValid";

			if(tP.getPropertyValue("AlternateEmail")=="")
			{
			  errorReason = "The alternate email address is not valid.";
			}
			else
			{
				errorReason = "The alternate email address is not valid. - " + tP.getPropertyValue("AlternateEmail");
			}
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserAlternateEmailNotValid";
	break;	
	
	
	case "INVALID_TELEPHONE":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserTelephoneNumberNotValid";
		errorReason = "The telephone number is not valid. - "+ context.expand('${#Project#TelephoneNo}');
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserTelephoneNumberNotValid";
	break;
	
	
	case "INVALID_PRIMARY_LANG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPrimaryLanguageNotValid";
		errorReason = "The primary language is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPrimaryLanguageNotValid";
	break;
	
	case "INVALID_LANG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserLanguageNotValid";
		errorReason = "The language is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserLanguageNotValid";
	break;
	
	case "DUPLICATE_LANG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserLanguageDuplicated";
		errorReason = "The language is a duplicate.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserLanguageDuplicated";
	break;
	
	case "DUPLICATE_EMAIL":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserEmailAddressDuplicated";
		errorReason = "The email address is a duplicate.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserEmailAddressDuplicated";
	break;

		
	case "USERNAME_EXISTS":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUsernameRegistered";
		errorReason = "The sign-in name already exists.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUsernameRegistered";
	break;

	case "INVALID_DOB":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserBirthDateNotValid";
		errorReason = "The date of birth is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserBirthDateNotValid";
	break;
	
	case "INVALID_CLG_STATUS":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:CLGStatusInRequestNotValid";
		errorReason = "The status of the connected legal guardian (CLG) must be active or pending.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#CLGStatusInRequestNotValid";
	break;
	
	
	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
		errorReason = "The API call is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";		
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_INACTIVE":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
		errorReason = "The requesting member is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;

	case "MAX_USERS_IN_ACCOUNT":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountActiveUserCountReachedMaxLimit";
		errorReason = "The maximum number of active members allowed has been reached.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountActiveUserCountReachedMaxLimit";
	break;
	
	case "USER_REQUESTING_NOT_PROVIDED":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
		errorReason = "Requesting User ID Not Specified";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

	case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The requesting member does not have permission to create a full-access member.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The requesting member does not have permission to create a member.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserMustBe18OrOlderToRegister";
		errorReason = "The member must be 18 or older.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserMustBe18OrOlderToRegister";
	break;
	
	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The first member must be a full-access member.";
		errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;
	
	case "FAU_MUST_BE_ABOVE18":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "A full-access member must be 18 or older.";
		errorID     = "urn:dece:errorid:org:dece:FullAccessUserMustBe18OrOlder";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FullAccessUserMustBe18OrOlder";
	break;
	
	case "LEGAL_GUARDIAN_REQD":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserRequiresLegalGuardianDeclared";
		errorReason = "The connected legal guardian (CLG) must be declared.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserRequiresLegalGuardianDeclared";
	break;
	
	case "CREATOR_MUST_BE_CLG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:CLGMustBeSameAsCreator";
		errorReason = "An underage member must be created by a connected legal guardian (CLG).";			       
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#CLGMustBeSameAsCreator";
	break;
	
	case "CREATOR_RESTRICTED_TO_BE_CLG":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The requesting member cannot create an underage member.";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateChildOrYouthUsers";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateChildOrYouthUsers";
	break;

	case "CLG_NOT_FOUND":
	     expectHTTPstatus   = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:LegalGuardianUserNotFound";
		errorReason = "The connected legal guardian (CLG) was not found.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#LegalGuardianUserNotFound";
	break;

	case "CLG_MUST_BE_FAU":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";		
		errorReason = "A connected legal guardian (CLG) must be a full-access member.";
		errorID     = "urn:dece:errorid:org:dece:LegalGuardianMustBeFullAccessUser";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#LegalGuardianMustBeFullAccessUser";
	break;

	case "CLG_STATUS_INVALID":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorReason = "The connected legal guardian (CLG) is not in a valid status.";
		errorID     = "urn:dece:errorid:org:dece:PendingCLGDeclaredNotInValidStatus";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#PendingCLGDeclaredNotInValidStatus";
	break;

     case "ACC_STATUS_INVALID":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountStatusNotValid";
		errorReason = "The account status is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountStatusNotValid";
	break;

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "STATUS_NOT_ALLOWED":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:ResourceStatusElementNotAllowed";
		errorReason = "The resource status element is not allowed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceStatusElementNotAllowed";
     break;

          case "DOB_NOT_CONSISTENT":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserDOBNotConsistentWithAgeOfMajorityDeclaration";
		errorReason = "The member's date of birth conflicts with the value of the AgeOfMajority attribute.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserDOBNotConsistentWithAgeOfMajorityDeclaration";
     break;

     case "AGE_OF_MAJORITY_BOOLEAN_ERROR":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:SaxParserException";
		errorReason = "cvc-datatype-valid.1.2.1: \'' is not a valid value for \'boolean\'.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#SaxParserException";
     break;

	case "DOB_DATATYPE_ERROR":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:SaxParserException";
		errorReason = "cvc-datatype-valid.1.2.3: \'' is not a valid value of union type \'DayOptionalDate-type\'.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#SaxParserException";
     break;

     case "INSUFFICIENT_PRIVILEGES":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "The user does not have permission to perform the requested action.";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;    

	
}

tC.setPropertyValue("expectHTTPstatus",expectHTTPstatus);

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
/*
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;
*/

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
/*
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
*/
//Location Header

if (httpLocationHeader) {
	 assert context.expand( '${#TestCase#httpLocation}') != null;

      def a = context.expand( '${#TestCase#httpLocation}');
      def b = a.toURL();
      def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

      if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
      	{                                
			assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
			
			int lastColon = urlStr.lastIndexOf(':');
			int lastSlash = urlStr.lastIndexOf('/');
			userid     = urlStr.substring(lastColon + 1);
			def node_User = urlStr.substring(lastSlash + 1);
			                                 
			tC.setPropertyValue("NODE_USER_ID",userid);
			
			tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
//			tC.setPropertyValue("NODE_USER_ID_FULL2",node_User);
      	} 
      else 
      	{
			assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");
			int lastColon = urlStr.lastIndexOf('%3A');
			int lastSlash = urlStr.lastIndexOf('/');
			userid     = urlStr.substring(lastColon + 3);
			def node_User = urlStr.substring(lastSlash + 1);
			                      
			tC.setPropertyValue("NODE_USER_ID",userid);
			
			tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
//			tC.setPropertyValue("NODE_USER_ID_FULL2",node_User);
      	}
                                
} else 
	{
       	assert context.expand( '${#TestCase#httpLocation}') == "";
	}


//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		log.info "Errorlink from Coord : " + myXML.Error.ErrorLink.toString();
		log.info "Errorlink  expected" + errorLink;
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract_Account_OID_and_User_OID" id="6560a526-a158-4680-bb3e-7becdd8e8e22"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def dbUser;

def expectHTTPstatus = tC.getPropertyValue("expectHTTPstatus");

if (expectHTTPstatus == "HTTP/1.1 201 Created")
     {
		def dBHost = context.expand( '${#Project#targetsystem}' )
		
		try          {
		                dbUser = new dbUtils.dbUser(log,dBHost);
		                }
		catch(Throwable e) {
		                log.info "ERROR - dbUtils.dbUser - $e";
		                assert 1 == 2;
		                }
		finally {
		         try {
		                String u = dbUser.userGetUserOID(tC.getPropertyValue("UserName").toLowerCase());
		                String a = dbUser.userGetAccountOIDbyUsername(tC.getPropertyValue("UserName").toLowerCase());
		
		                 assert u.length() > 0;
		                 assert a.length() > 0;
		                 
		                 tC.setPropertyValue("user_oid", u);
		                tP.setPropertyValue("account_oid", a);
		                }
		          catch(Throwable e) 
		          	{
		                 log.info "ERROR - dbUtils.userGetUserOID - $e";
		                 assert 1 == 2;                     
		          	}
		}
     }
     else
     {
     	log.info ("Can not retreive User_OID for a negative scenario");
     }
     

</script></con:config></con:testStep><con:testStep type="groovy" name="Return the NodeAccountId and NodeUserId to the Calling Test Case" id="3cb92131-dcff-4db9-b779-7d67fa6de2d7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("UserName",tC.getPropertyValue("UserName"));
callTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID"));
callTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
callTC.setPropertyValue("user_oid",tC.getPropertyValue("user_oid"));

//callTC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//callTC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL2"));
//callTC.setPropertyValue("UserName2",tC.getPropertyValue("UserName"));
//callTC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));

callTC.setPropertyValue("ADULT_DOB_XML",tC.getPropertyValue("ADULT_DOB_XML"));
callTC.setPropertyValue("YOUTH_DOB_XML",tC.getPropertyValue("YOUTH_DOB_XML"));
callTC.setPropertyValue("CHILD_DOB_XML",tC.getPropertyValue("CHILD_DOB_XML"));
callTC.setPropertyValue("DateOfBirth",tC.getPropertyValue("DateOfBirth"));</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Validate_Response" disabled="true" id="2b0912aa-5f74-432f-b079-69e9e921e8a9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#nodeIdRetailerforDeviceAuthToken}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#nodeIdRetailerforDeviceAuthToken}' );
}
if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The supplied country code is invalid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code cannot be null.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "API call not authorized";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:UserNotActive";
	errorReason = "User is not active";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

		case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The user does not have permission to create a full-access user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The user does not have permission to create a user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
			expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBe18OrOlder";
			errorReason = "First User must be 18 years or older";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBe18OrOlder";
	break;


	case "NO_MNG_ACC_CNST":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
			errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The first user in a household account must be a full-access user.";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;
	
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
/*
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
*/
//Location Header

if (httpLocationHeader) {
	 assert context.expand( '${#TestCase#httpLocation}') != null;

      def a = context.expand( '${#TestCase#httpLocation}');
      def b = a.toURL();
      def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

      if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO"){
                                
         assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
         
         int lastColon = urlStr.lastIndexOf(':');
         int lastSlash = urlStr.lastIndexOf('/');
         userid     = urlStr.substring(lastColon + 1);
         def node_User = urlStr.substring(lastSlash + 1);
                                           
         tC.setPropertyValue("NODE_USER_ID",userid);

         tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
         tC.setPropertyValue("NODE_USER_ID_FULL2",node_User);
      } else {
         assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");
         int lastColon = urlStr.lastIndexOf('%3A');
         int lastSlash = urlStr.lastIndexOf('/');
         userid     = urlStr.substring(lastColon + 3);
         def node_User = urlStr.substring(lastSlash + 1);
                                
         tC.setPropertyValue("NODE_USER_ID",userid);

         tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
         tC.setPropertyValue("NODE_USER_ID_FULL2",node_User);
      }
                                
} else {
                                
       	assert context.expand( '${#TestCase#httpLocation}') == "";
}


//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:properties><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-08</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E5A158E8FAED7930E0401F0A0599188B</con:value></con:property><con:property><con:name>coordinatorSchema</con:name><con:value>${#Project#coordinatorSchema}</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE19F934C4E6BFA99E0401F0A05993DA2</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE19F95D7CFC268C9E0401F0A079952C9</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>seconduser20130905_04010</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/07/Account/urn:dece:accountid:org:dece:E5A158BFEF210675E0401F0A07992D42/User/urn:dece:userid:org:dece:E5A158BFF59C0675E0401F0A07992D42</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:/certs/RET_concat.pem</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5A158BFEF210675E0401F0A07992D42</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E5A158BFEF210675E0401F0A07992D42</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E5A158BFF59C0675E0401F0A07992D42</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E5A158E8FAED7930E0401F0A0599188B</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5A158BFF59C0675E0401F0A07992D42</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E56665ABC808DB00E0401F0A07993371</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML2</con:name><con:value>SAML2 Assertion=null</con:value></con:property><con:property><con:name>SecondUserName</con:name><con:value>username_20130122_043244</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Create_GeoProfile</con:value></con:property><con:property><con:name>StandardUserName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>seconduser20130905_04010</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00033_UserCreate_AUTH_Creator_ADULT_Full_New_CHILD_Standard_201_CREATED_P1</con:value></con:property><con:property><con:name>UC_RequestBody_Mandatory</con:name><con:value/></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>UserName</con:name><con:value>seconduser20130905_04010</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5A158BFF59D0675E0401F0A07992D42</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-07</con:value></con:property><con:property><con:name>expectHTTPstatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5ff78eb3-d79f-4f4a-b9a8-5ec1c84f61c0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3d78db1c-105b-43a0-b406-6bb0f690c833</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662fb201-c4e7-401c-b10a-548ea13f5020</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f23d9bb0-0bd1-4723-928b-a9c1d99c147f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95f3189f-715e-4cef-bc91-14a1b4138b68</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserGet" searchProperties="true" id="18d6dbdf-5594-4023-8f59-664e83628798" disabled="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="40b51506-e7ed-484f-9cef-144c355c10b8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("UserName",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("ResponseType",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("ENCODED_NODE_USER_ID",null);
tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID",null);
tC.setPropertyValue("SAML",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="0e921030-fc0e-4088-8519-d2ea05acede9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID",callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID",callTC.getPropertyValue("NODE_USER_ID"));
if (tP.getPropertyValue("versionMinor")=="06" || tP.getPropertyValue("versionMinor")=="07"){
			tC.setPropertyValue("ENCODED_NODE_USER_ID", URLEncoder.encode("urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"), "UTF-8"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			}else{
			tC.setPropertyValue("ENCODED_NODE_USER_ID", "urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			}
tC.setPropertyValue("ResponseType",callTC.getPropertyValue("UserGetResponseType"));
tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Pem" id="8dac2685-8684-45a7-9383-18906924bc23"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("UserGET");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="UserGET" id="9edfc5bd-e710-4adb-a343-f24a81968540"><con:settings/><con:config service="FirstUserCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" methodName="UserGet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserGET" mediaType="application/xml" id="86860311-fe06-418d-9e53-0c4d81aa0896" sslKeystore="RET_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#ENCODED_NODE_ACCOUNT_ID}"/>
  <con:entry key="UserID" value="${#TestCase#ENCODED_NODE_USER_ID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="5be437dd-519a-4ddb-9991-82608accc06d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('UserGET');
def expXML = tStep.httpRequest.response.getResponseContent();
 
String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
 
 
tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                                contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}
 
tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="a34e05a2-007f-4659-9d23-4e5f076e5223"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
 
def url       = context.expand( '${#Project#Provision_HostName}' );
 
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");
 
def RequestorType = "";
def RequestorClass = "";
def Requestee = "";
 
def usernamestring = "";
def givennamestring = "";
def surnamestring = "";
 
int firstmask = 0;
int lastmask = 0;
 
boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;
 
String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#TestCase#AccountID}')+ "/User/" + context.expand('${#TestCase#UserID}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
                errorHost = "http://error.decellc.org";
} else {
                errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";
 
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus   = "HTTP/1.1 200 OK";
                break;
 
                case "API_NOT_AUTH":
                expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
                errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
                errorReason = "API call not authorized";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
                break;
 
                case "FORBIDDEN":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                processXMLFlag  = false;
                                errorIDFlag     = false;
                                errorReasonFlag = false;
                                errorLinkFlag   = false;
                break;
                
                case "USER_NOT_VALID":
                     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
                                errorID     = "urn:dece:errorid:org:dece:UserIdInvalid";
                                errorReason = "The supplied UserID is invalid.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
                break;
 
                case "USER_INACTIVE":
                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
                //errorReason = "The requestor is not active.";
	errorReason = "The requesting member is not active.";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
                break;
 
     case "URL_NOT_FOUND":
                expectHTTPstatus = "HTTP/1.1 404 Not Found";
                expectHTTPcontenttype = "text/xml"
                XMLbodynull     = true;
                processXMLFlag  = false;
                errorIDFlag     = false;
                errorReasonFlag = false;
                errorLinkFlag   = false;
                break;
 
                case "MTHD_NOT_ALLWD":
                expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
                expectHTTPcontenttype = "text/plain; charset=UTF-8"
                processXMLFlag  = false;
                errorIDFlag     = false;
                errorReasonFlag = false;
                errorLinkFlag   = false;
                break;
 
                case "USER_NOT_IN_ACC":
                expectHTTPstatus = "HTTP/1.1 404 Not Found";
                errorID     = "urn:dece:errorid:org:dece:UserNotFound";
                errorReason = "The supplied UserID was not found.";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotFound";
                break;
 
     case "USER_NOT_PERMIT":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
                                errorReason = "The user does not have permission to perform the requested action.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
                break;   
 
                case "ACC_NOT_MATCH_TOKEN":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
                                errorReason = "Request Account ID not match";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
                break;
 
                case "NO_MNG_ACC_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
                break;
 
                case "NO_ENABLE_MNG_USR_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Enable Manage User Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:EnableManageUserConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:EnableManageUserConsentRequired";
                break;
 
                case "NO_MNG_USR_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Manage User Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
                break;
 
                case "ACCT_INACTIVE":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
                                errorReason = "The identified account is not active.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;
 
     case "SPL_CS_ALLOWED_ACCT":
                     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
                                errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
                                errorReason = "The request is unauthorized.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;
 
     case "SPL_CS_ALLOWED_USER":
                     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
                                errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToDeleteSuspendedUsers";
                                errorReason = "The request is unauthorized.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToDeleteSuspendedUsers";
     break;
 
    case "REQUESTEE_INACTIVE":
                     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
                                errorReason = "The user has been removed.";
                                errorID     = "urn:dece:errorid:org:dece:AccountUserStatusDeleted";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserStatusDeleted";
                break;
      
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
 
assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;
 
// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;
 
//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
                //assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
                //assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
 
//Location Header
if (httpLocationHeader) {
                assert context.expand( '${#TestCase#httpLocation}') != null;
 
                def a = context.expand( '${#TestCase#httpLocation}');
                def b = a.toURL();
                def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}
 
                assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
                
                int lastColon = urlStr.lastIndexOf(':');
                int lastSlash = urlStr.lastIndexOf('/');
                accountid     = urlStr.substring(lastColon + 1);
                
                tC.setPropertyValue("ACCID",accountid);
                
} else {
                assert context.expand( '${#TestCase#httpLocation}') == "";
}
 
//Content-Type
//assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;
 
//XML body should be null test
if (XMLbodynull) {
 
                assert XMLbody == "";
}
 
if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
                
                def myXML = new XmlSlurper().parseText(XMLbody);
  
                if (errorRespType != "SUCCESS" ) {
                                // Verify response sizes...
                                assert myXML.Error.size() == 1;
                                assert myXML.Error.Reason.size() == 1;
                                assert myXML.Error.OriginalRequest.size() == 1;
                                assert myXML.Error.ErrorLink.size() == 1;
                                
                                // ErrorCode
                                this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
                                assert myXML.Error.@ErrorID.toString() == errorID;
                
                                // ErrorReason
                                this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
                                assert myXML.Error.Reason.toString() == errorReason;
 
                                // ErrorLink
                                this.log.info "ErrorLink Received [" + myXML.Error.ErrorLink.toString() + "] Exp[$errorLink]";
                                //assert myXML.Error.ErrorLink.toString() == errorLink;
                } 
  else
  {
   //Data Types
   // RequestorType: Self, CLG, CS, Other
   // RequestorClass: BAU,SAU,FAU
   //Requestee: CHILD, YOUTH, ADULT
 
   RequestorType = context.expand( '${#TestCase#RequestorType}');
   RequestorClass = context.expand( '${#TestCase#RequestorClass}');
   Requestee = context.expand( '${#TestCase#Requestee}');
 
    // Following Fields returned for Everyone
    
         assert myXML.@UserClass.size() == 1;
         assert myXML.@UserClass.toString().matches("urn:dece:role:user:class:[a-z]*");
         
         assert myXML.Credentials.size() == 1;
         assert myXML.Credentials.Username.size() == 1;
         assert myXML.Credentials.Password.size() == 0;
 
         assert myXML.Name.size() == 1;
         assert myXML.Name.GivenName.size() == 1;
         assert myXML.Name.SurName.size() == 1;
             
         assert myXML.ContactInfo.size() == 1;
       //  assert myXML.ContactInfo.Address.size() == 1;
      //   assert myXML.ContactInfo.Address.PostalAddress.size() == 1;
       //  assert myXML.ContactInfo.Address.PostalCode.size() == 1;
       //  assert myXML.ContactInfo.Address.Locality.size() == 1;
     //    assert myXML.ContactInfo.Address.StateOrProvince.size() == 1;
     //    assert myXML.ContactInfo.Address.Country.size() == 1;
      //   assert myXML.ContactInfo.TelephoneNumber.size() == 1;
      //   assert myXML.ContactInfo.TelephoneNumber.Value.size() == 1;
       //  assert myXML.ContactInfo.MobileTelephoneNumber.size() == 1;
       //  assert myXML.ContactInfo.MobileTelephoneNumber.Value.size() == 1;
     
         assert myXML.Languages.size() == 1;
         assert myXML.Languages.Language.size() > 0;
     
         assert myXML.ResourceStatus.size() == 1;
         assert myXML.ResourceStatus.Current.size() == 1;
 
         if(RequestorType == "CS")
         {
           assert myXML.ResourceStatus.History.size() > 0;   
         } 
         else
         {
           assert myXML.ResourceStatus.History.size() == 0;                
         }
 
   /******************************************************************************************************************/
           
   //Filtering fields based on PI and Access levels
 
   if(Requestee == "CHILD")
    {
 
                  this.log.info "Getting CHILD details";
                  
                 if((RequestorType == "CLG") || (RequestorType == "Self"))
                  {
                   /****************DOB, Security Token and Email Shown only to Self,CLG and CS**********/
        assert myXML.DateOfBirth.size() == 1;     
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0;
        
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;     
                 }
                 else
                  {
         /****************DOB, Security Token and Email not shown to CS and others**********/
         assert myXML.DateOfBirth.size() == 0;     
       //  assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() == 0;
         //assert myXML.LegalGuardian.size() == 1; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 0;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 0;
                   
 
         /**************Verifying Masking of CHILD PI details *******************/
          
         usernamestring = myXML.Credentials.Username.toString();
         givennamestring = myXML.Name.GivenName.toString();
         surnamestring = myXML.Name.SurName.toString();
                
         //*************Verifying Masking of CHILD UserName details ******************
   
         firstmask = usernamestring.indexOf('â');
         lastmask = usernamestring.lastIndexOf('¢');
 
         usernamestring = usernamestring.substring(firstmask,lastmask+1);
 
         assert usernamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
 
       //*************Verifying Masking of CHILD GivenName details ******************
          
        firstmask = givennamestring.indexOf('â');
        lastmask = givennamestring.lastIndexOf('¢');
 
         givennamestring = givennamestring.substring(firstmask,lastmask+1);
 
         assert givennamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
 
         //*************Verifying Masking of CHILD SurName details ******************
          
        firstmask = surnamestring.indexOf('â');
        lastmask = surnamestring.lastIndexOf('¢');
 
         surnamestring = surnamestring.substring(firstmask,lastmask+1);
 
         assert surnamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";         
    }
                 if(RequestorType == "CS")
          {
             this.log.info "Getting CHILD LG details for CS";
             
             assert myXML.LegalGuardian.size() > 0; 
 
              if(myXML.LegalGuardian.size() == 1)        
             {
                 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");  
             }
             else
             if(myXML.LegalGuardian.size() == 2)         
             {
                if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                                assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else
               if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
                {
                  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";    
               } 
            }         
          else if(myXML.LegalGuardian.size() != 0)                    
                {
                   this.log.info "Getting CHILD Active CLG details for NonCS";
                 
                   assert myXML.LegalGuardian.size() == 1;   
                   assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";        
               }
           else
               {
                 this.log.info "Getting CHILD Pending CLG details for NonCS";
                 assert myXML.LegalGuardian.size() == 0;  
              }
          }
    }  
   else if((RequestorClass == "FAU") || (RequestorClass == "SAU") || (RequestorType == "Self") || (RequestorType == "CS"))
    {
                                  
                    assert myXML.DateOfBirth.size() == 1; 
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;
         
          if(Requestee == "YOUTH")                
          {
            this.log.info "Getting YOUTH details";
            assert myXML.LegalGuardian.size() == 0; 
/*
             if(RequestorType == "CS")
            {
              assert myXML.LegalGuardian.size() > 0; 
 
              if(myXML.LegalGuardian.size() == 1)        
             {
                 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");  
             }
             else if(myXML.LegalGuardian.size() == 2)                
             {
                 if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                                assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
                {
                  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";    
               } 
            }
            else if(myXML.LegalGuardian.size() != 0)                  
            {
                 assert myXML.LegalGuardian.size() == 1;   
                 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";          
            }
           else
            {
                 assert myXML.LegalGuardian.size() == 0;  
            }                  
          }
*/          
       }  
     else
        {
           this.log.info "Getting ADULT details";          
           //assert myxml.LegalGuardian.size() == 0;                
                                assert myXML.LegalGuardian.size() == 0;              
        }
    }  
     else 
    {   
                 //   this.log.info "BAU geting other's details";
                    
                    assert myXML.DateOfBirth.size() == 1; 
        // assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() >> 0; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1; 
         
         if(Requestee == "YOUTH") 
          {
            if(myXML.LegalGuardian.size() != 0)           
            {
                 assert myXML.LegalGuardian.size() == 1;   
                 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";          
            }
          else
            {
                 assert myXML.LegalGuardian.size() == 0;  
            }  
          }
          else
          {
            assert myXML.LegalGuardian.size() == 0; 
          }                    
    }       
    
  }            // end if for SUCCESS response
} // end if for XML Body Validations
</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>TC_DECE_14015 - STSCreate - Portal:CS - unamepasswd - User created by node RTL - P2</con:value></con:property><con:property><con:name>sName</con:name><con:value>4_STS Create - Node Role - CREATED_BY_NODE_OID</con:value></con:property><con:property><con:name>UserName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpConnect</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>ResponseType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>DC2F5A7DCFDE454AE0401F0A0799394E</con:value></con:property><con:property><con:name>SAML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\DECE\RET_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>8dac2685-8684-45a7-9383-18906924bc23</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>40b51506-e7ed-484f-9cef-144c355c10b8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0e921030-fc0e-4088-8519-d2ea05acede9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserStatusUpdate API" searchProperties="true" id="19cc486a-a16d-4ec8-86ef-9f451f07ebed" disabled="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="46e67ffd-7362-4e1c-a502-21e353b9227c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("status",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("ResponseType",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("SAML",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="277c6a80-14fb-4da5-bd51-3f2ccc23180d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("NODE_USER_ID",callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("status",callTC.getPropertyValue("status"));
tC.setPropertyValue("NODE_ACCOUNT_ID",callTC.getPropertyValue("NODE_ACCOUNT_ID"));

if (tP.getPropertyValue("versionMinor")=="06" || tP.getPropertyValue("versionMinor")=="07"){
			tC.setPropertyValue("ENCODED_NODE_USER_ID", URLEncoder.encode("urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"), "UTF-8"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			}else{
				tC.setPropertyValue("ENCODED_NODE_USER_ID", "urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			}
			
tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));

if (tC.getPropertyValue("ResponseType") == null ||
	tC.getPropertyValue("ResponseType") == "") {
		tC.setPropertyValue("ResponseType","SUCCESS");
}



</script></con:config></con:testStep><con:testStep type="groovy" name="Set Pem" id="11565952-3245-4993-9a90-b45b77daa42f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("UserResourceStatusUpdate");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="UserResourceStatusUpdate" id="aa2ec204-f680-47ad-98fb-51d2d96fbf59"><con:settings/><con:config service="UserResourceStatusUpdate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}/ResourceStatus/Current/Update" methodName="UserResourceStatusUpdate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserResourceStatusUpdate" mediaType="application/xml" postQueryString="false" sslKeystore=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<ResourceStatus xmlns="${#Project#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
  <Current>
    <Value>urn:dece:type:status:${#TestCase#status}</Value>
    <Description>Account Updated</Description>
  </Current>
</ResourceStatus>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#ENCODED_NODE_ACCOUNT_ID}"/>
  <con:entry key="UserID" value="${#TestCase#ENCODED_NODE_USER_ID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="367744f1-376f-4646-9264-0e788eced0b1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('UserResourceStatusUpdate');
def expXML = tStep.httpRequest.response.getResponseContent();
 
String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
 
 
tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                                contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}
 
tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="e8904455-2076-49b1-9371-9836b5d0c1cf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
 
def url       = context.expand( '${#Project#Provision_HostName}' );
 
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");
 
def RequestorType = "";
def RequestorClass = "";
def Requestee = "";
 
def usernamestring = "";
def givennamestring = "";
def surnamestring = "";
 
int firstmask = 0;
int lastmask = 0;
 
boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;
 
String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#TestCase#AccountID}')+ "/User/" + context.expand('${#TestCase#UserID}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
                errorHost = "http://error.decellc.org";
} else {
                errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";
 
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus   = "HTTP/1.1 200 OK";
                break;
 
                case "API_NOT_AUTH":
                expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
                errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
                errorReason = "API call not authorized";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
                break;
 
                case "FORBIDDEN":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                processXMLFlag  = false;
                                errorIDFlag     = false;
                                errorReasonFlag = false;
                                errorLinkFlag   = false;
                break;
                
                case "USER_NOT_VALID":
                     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
                                errorID     = "urn:dece:errorid:org:dece:UserIdInvalid";
                                errorReason = "The supplied UserID is invalid.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
                break;
 
                case "USER_INACTIVE":
                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
                //errorReason = "The requestor is not active.";
	errorReason = "The requesting member is not active.";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
                break;
 
     case "URL_NOT_FOUND":
                expectHTTPstatus = "HTTP/1.1 404 Not Found";
                expectHTTPcontenttype = "text/xml"
                XMLbodynull     = true;
                processXMLFlag  = false;
                errorIDFlag     = false;
                errorReasonFlag = false;
                errorLinkFlag   = false;
                break;
 
                case "MTHD_NOT_ALLWD":
                expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
                expectHTTPcontenttype = "text/plain; charset=UTF-8"
                processXMLFlag  = false;
                errorIDFlag     = false;
                errorReasonFlag = false;
                errorLinkFlag   = false;
                break;
 
                case "USER_NOT_IN_ACC":
                expectHTTPstatus = "HTTP/1.1 404 Not Found";
                errorID     = "urn:dece:errorid:org:dece:UserNotFound";
                errorReason = "The supplied UserID was not found.";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotFound";
                break;
 
     case "USER_NOT_PERMIT":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
                                errorReason = "The user does not have permission to perform the requested action.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
                break;   
 
                case "ACC_NOT_MATCH_TOKEN":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
                                errorReason = "Request Account ID not match";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
                break;
 
                case "NO_MNG_ACC_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
                break;
 
                case "NO_ENABLE_MNG_USR_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Enable Manage User Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:EnableManageUserConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:EnableManageUserConsentRequired";
                break;
 
                case "NO_MNG_USR_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Manage User Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
                break;
 
                case "ACCT_INACTIVE":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
                                errorReason = "The identified account is not active.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;
 
     case "SPL_CS_ALLOWED_ACCT":
                     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
                                errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
                                errorReason = "The request is unauthorized.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;
 
     case "SPL_CS_ALLOWED_USER":
                     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
                                errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToDeleteSuspendedUsers";
                                errorReason = "The request is unauthorized.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToDeleteSuspendedUsers";
     break;
 
    case "REQUESTEE_INACTIVE":
                     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
                                errorReason = "The user has been removed.";
                                errorID     = "urn:dece:errorid:org:dece:AccountUserStatusDeleted";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserStatusDeleted";
                break;
      
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
 
assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;
 
// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;
 
//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
                //assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
                assert context.expand( '${#TestCase#httpContentLength}').toInteger()== 0;
}
 
//Location Header
if (httpLocationHeader) {
                assert context.expand( '${#TestCase#httpLocation}') != null;
 
                def a = context.expand( '${#TestCase#httpLocation}');
                def b = a.toURL();
                def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}
 
                assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
                
                int lastColon = urlStr.lastIndexOf(':');
                int lastSlash = urlStr.lastIndexOf('/');
                accountid     = urlStr.substring(lastColon + 1);
                
                tC.setPropertyValue("ACCID",accountid);
                
} else {
                assert context.expand( '${#TestCase#httpLocation}') == "";
}
 
//Content-Type
//assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;
 
//XML body should be null test
if (XMLbodynull) {
 
                assert XMLbody == "";
}
 
if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
                
                def myXML = new XmlSlurper().parseText(XMLbody);
  
                if (errorRespType != "SUCCESS" ) {
                                // Verify response sizes...
                                assert myXML.Error.size() == 1;
                                assert myXML.Error.Reason.size() == 1;
                                assert myXML.Error.OriginalRequest.size() == 1;
                                assert myXML.Error.ErrorLink.size() == 1;
                                
                                // ErrorCode
                                this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
                                assert myXML.Error.@ErrorID.toString() == errorID;
                
                                // ErrorReason
                                this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
                                assert myXML.Error.Reason.toString() == errorReason;
 
                                // ErrorLink
                                this.log.info "ErrorLink Received [" + myXML.Error.ErrorLink.toString() + "] Exp[$errorLink]";
                                //assert myXML.Error.ErrorLink.toString() == errorLink;
                } 
  else
  {
   //Data Types
   // RequestorType: Self, CLG, CS, Other
   // RequestorClass: BAU,SAU,FAU
   //Requestee: CHILD, YOUTH, ADULT
 
   RequestorType = context.expand( '${#TestCase#RequestorType}');
   RequestorClass = context.expand( '${#TestCase#RequestorClass}');
   Requestee = context.expand( '${#TestCase#Requestee}');
 
    // Following Fields returned for Everyone
    
         assert myXML.@UserClass.size() == 1;
         assert myXML.@UserClass.toString().matches("urn:dece:role:user:class:[a-z]*");
         
         assert myXML.Credentials.size() == 1;
         assert myXML.Credentials.Username.size() == 1;
         assert myXML.Credentials.Password.size() == 0;
 
         assert myXML.Name.size() == 1;
         assert myXML.Name.GivenName.size() == 1;
         assert myXML.Name.SurName.size() == 1;
             
         assert myXML.ContactInfo.size() == 1;
       //  assert myXML.ContactInfo.Address.size() == 1;
      //   assert myXML.ContactInfo.Address.PostalAddress.size() == 1;
       //  assert myXML.ContactInfo.Address.PostalCode.size() == 1;
       //  assert myXML.ContactInfo.Address.Locality.size() == 1;
     //    assert myXML.ContactInfo.Address.StateOrProvince.size() == 1;
     //    assert myXML.ContactInfo.Address.Country.size() == 1;
      //   assert myXML.ContactInfo.TelephoneNumber.size() == 1;
      //   assert myXML.ContactInfo.TelephoneNumber.Value.size() == 1;
       //  assert myXML.ContactInfo.MobileTelephoneNumber.size() == 1;
       //  assert myXML.ContactInfo.MobileTelephoneNumber.Value.size() == 1;
     
         assert myXML.Languages.size() == 1;
         assert myXML.Languages.Language.size() > 0;
     
         assert myXML.ResourceStatus.size() == 1;
         assert myXML.ResourceStatus.Current.size() == 1;
 
         if(RequestorType == "CS")
         {
           assert myXML.ResourceStatus.History.size() > 0;   
         } 
         else
         {
           assert myXML.ResourceStatus.History.size() == 0;                
         }
 
   /******************************************************************************************************************/
           
   //Filtering fields based on PI and Access levels
 
   if(Requestee == "CHILD")
    {
 
                  this.log.info "Getting CHILD details";
                  
                 if((RequestorType == "CLG") || (RequestorType == "Self"))
                  {
                   /****************DOB, Security Token and Email Shown only to Self,CLG and CS**********/
        assert myXML.DateOfBirth.size() == 1;     
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0;
        
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;     
                 }
                 else
                  {
         /****************DOB, Security Token and Email not shown to CS and others**********/
         assert myXML.DateOfBirth.size() == 0;     
       //  assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() == 0;
         //assert myXML.LegalGuardian.size() == 1; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 0;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 0;
                   
 
         /**************Verifying Masking of CHILD PI details *******************/
          
         usernamestring = myXML.Credentials.Username.toString();
         givennamestring = myXML.Name.GivenName.toString();
         surnamestring = myXML.Name.SurName.toString();
                
         //*************Verifying Masking of CHILD UserName details ******************
   
         firstmask = usernamestring.indexOf('â');
         lastmask = usernamestring.lastIndexOf('¢');
 
         usernamestring = usernamestring.substring(firstmask,lastmask+1);
 
         assert usernamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
 
       //*************Verifying Masking of CHILD GivenName details ******************
          
        firstmask = givennamestring.indexOf('â');
        lastmask = givennamestring.lastIndexOf('¢');
 
         givennamestring = givennamestring.substring(firstmask,lastmask+1);
 
         assert givennamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
 
         //*************Verifying Masking of CHILD SurName details ******************
          
        firstmask = surnamestring.indexOf('â');
        lastmask = surnamestring.lastIndexOf('¢');
 
         surnamestring = surnamestring.substring(firstmask,lastmask+1);
 
         assert surnamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";         
    }
                 if(RequestorType == "CS")
          {
             this.log.info "Getting CHILD LG details for CS";
             
             assert myXML.LegalGuardian.size() > 0; 
 
              if(myXML.LegalGuardian.size() == 1)        
             {
                 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");  
             }
             else
             if(myXML.LegalGuardian.size() == 2)         
             {
                if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                                assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else
               if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
                {
                  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";    
               } 
            }         
          else if(myXML.LegalGuardian.size() != 0)                    
                {
                   this.log.info "Getting CHILD Active CLG details for NonCS";
                 
                   assert myXML.LegalGuardian.size() == 1;   
                   assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";        
               }
           else
               {
                 this.log.info "Getting CHILD Pending CLG details for NonCS";
                 assert myXML.LegalGuardian.size() == 0;  
              }
          }
    }  
   else if((RequestorClass == "FAU") || (RequestorClass == "SAU") || (RequestorType == "Self") || (RequestorType == "CS"))
    {
                                  
                    assert myXML.DateOfBirth.size() == 1; 
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;
         
          if(Requestee == "YOUTH")                
          {
            this.log.info "Getting YOUTH details";
            assert myXML.LegalGuardian.size() == 0; 
/*
             if(RequestorType == "CS")
            {
              assert myXML.LegalGuardian.size() > 0; 
 
              if(myXML.LegalGuardian.size() == 1)        
             {
                 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");  
             }
             else if(myXML.LegalGuardian.size() == 2)                
             {
                 if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                                assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
                {
                  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";    
               } 
            }
            else if(myXML.LegalGuardian.size() != 0)                  
            {
                 assert myXML.LegalGuardian.size() == 1;   
                 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";          
            }
           else
            {
                 assert myXML.LegalGuardian.size() == 0;  
            }                  
          }
*/          
       }  
     else
        {
           this.log.info "Getting ADULT details";          
           //assert myxml.LegalGuardian.size() == 0;                
                                assert myXML.LegalGuardian.size() == 0;              
        }
    }  
     else 
    {   
                 //   this.log.info "BAU geting other's details";
                    
                    assert myXML.DateOfBirth.size() == 1; 
        // assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() >> 0; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1; 
         
         if(Requestee == "YOUTH") 
          {
            if(myXML.LegalGuardian.size() != 0)           
            {
                 assert myXML.LegalGuardian.size() == 1;   
                 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";          
            }
          else
            {
                 assert myXML.LegalGuardian.size() == 0;  
            }  
          }
          else
          {
            assert myXML.LegalGuardian.size() == 0; 
          }                    
    }       
    
  }            // end if for SUCCESS response
} // end if for XML Body Validations
</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>1.15. User Status Changed through Resource Update: User Locked [Your UltraViolet membership has been locked]</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Notifications_Test Cases</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>859</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 400 Bad Request</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>ResponseType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:InvocationPathHasNonEncodedParameters">
      <Reason Language="en">The parameters in the invocation path must be escape-encoded.</Reason>
      <OriginalRequest>https://qa.p.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:DF7C3C9C94E2F31EE0401F0A07992917/User/urn:dece:userid:org:dece:DF7C3E49DCFC8E50E0401F0A05995F38/ResourceStatus/Current/Update</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/06/error/en/ErrorList.html#InvocationPathHasNonEncodedParameters</ErrorLink>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DF7C3E49DCFC8E50E0401F0A05995F38</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>DF7C3C9C94E2F31EE0401F0A07992917</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\User_Notifications\RET_CS_1_concat.pem</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3ADF7C3E49DCFC8E50E0401F0A05995F38</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADF7C3C9C94E2F31EE0401F0A07992917</con:value></con:property><con:property><con:name>status</con:name><con:value>blocked</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>8dac2685-8684-45a7-9383-18906924bc23</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>40b51506-e7ed-484f-9cef-144c355c10b8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0e921030-fc0e-4088-8519-d2ea05acede9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserDelete_API" searchProperties="true" id="3ad94f34-6a5c-418b-b8f8-a203cab10bc0"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="a41d2cef-51b0-46b7-b40c-1d6923e3263d"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="e0e1fe9a-79d7-42ce-8931-9ee2304fe307"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserDelete"));

tC.setPropertyValue("ETag",callTC.getPropertyValue("ETag"));
tC.setPropertyValue("expectErrType",callTC.getPropertyValue("PolicyCreateResponseType"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("SAML",callTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID", callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL", callTC.getPropertyValue("NODE_USER_ID_FULL"));

			</script></con:config></con:testStep><con:testStep type="groovy" name="Set Pem" id="dc69f304-d0b1-4059-89ba-47e13860aae8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("UserDelete");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="UserDelete" id="f64f1781-9c0e-4af0-98c4-96319bba32ff"><con:settings/><con:config service="FirstUserCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" methodName="DeleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserDelete" mediaType="application/xml" id="86860311-fe06-418d-9e53-0c4d81aa0896" sslKeystore="iscportalcs1_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="If-Match" value="${#TestCase#ETag}"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
  <con:entry key="UserID" value="${#TestCase#NODE_USER_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="1e9ae371-1bd0-4759-940c-81391e47aabd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('UserDelete');
def expXML = tStep.httpRequest.response.getResponseContent();
 
String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
 
 
tStep.httpRequest.response.responseHeaders.each() { header, value ->
switch (header) {
     case "Location": 
		contentLocation = value[0];
          break;
     case "#status#": 
		status = value[0]; 
          break;
	case "Connection": 
		connection = value[0]; 
	     break;
	case "Content-Type": 
	     contentType = value[0]; 
	     break;
	case "Content-Length": 
	     contentLength = value[0]; 
	     break;
	case "Transfer-Encoding": 
	     httpContentEncoding = value[0]; 
	     break;
      }
}
 
tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="fc5935eb-e5d0-495a-bb33-6346b3b9fdb4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def projectPath = groovyUtils.projectPath

def url = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#TestCase#AccountID}')+ "/User/" + context.expand('${#TestCase#UserID}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = true;
		//httpLocationHeader = true;
	break;

	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";	
		errorReason = "The API call is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_VALID":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserIdInvalid";
		errorReason = "The user ID is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
	break;

	case "USER_INACTIVE":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";	
		errorReason = "The requesting member is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;

     case "URL_NOT_FOUND":
		expectHTTPstatus = "HTTP/1.1 404 Not Found";
		expectHTTPcontenttype = "text/xml"
		XMLbodynull     = true;
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	case "MTHD_NOT_ALLWD":
		expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
		expectHTTPcontenttype = "text/plain; charset=UTF-8"
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	case "USER_NOT_IN_ACC":
		expectHTTPstatus = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:UserNotFound";
		errorReason = "The user ID was not found.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotFound";
	break;

     case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;

	case "NO_ENABLE_MNG_USR_CNST":	
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Policy:EnableManageUserConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:EnableManageUserConsentRequired";
		errorReason = "The setting of the EnableManageUserConsent policy prevents the requested action from being completed.";

	break;

	case "NO_MNG_USR_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageUserConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
	break;

	case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "SPL_CS_ALLOWED_ACCT":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;

     case "USER_ALREADY_DELETED":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserAlreadyDeleted";
		errorReason = "The member has already been removed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserAlreadyDeleted";
     break;

     case "LAST_FULL_USER":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:LastFullAccessUserofAccountCannotBeDeleted";
		errorReason = "The last remaining full-access member in an account cannot be removed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#LastFullAccessUserofAccountCannotBeDeleted";
     break;

     case "FULL_USER_DELETE_NOT_ALLWD":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToDeleteFullAccessUser";
		errorReason = "The requesting member does not have permission to delete a full-access member.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToDeleteFullAccessUser";
     break;

     case "SPL_CS_ALLOWED_USER":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToDeleteSuspendedUsers";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToDeleteSuspendedUsers";
     break;

     case "USER_ACTIVE_CLG":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:LegalGuardianUserCannotBeDeleted";
		errorReason = "The connected legal guardian (CLG) cannot be removed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#LegalGuardianUserCannotBeDeleted";
	break;

	case "USER_PRIVILEGE_INSUFFICIENT":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:RequestorPermissionInsufficientToDeleteUser";
		errorReason = "The requesting member cannot delete the member.";		
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPermissionInsufficientToDeleteUser";
	break;

     
     
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	//def a = context.expand( '${#TestCase#httpLocation}');
	def a = URLDecoder.decode(context.expand( '${#TestCase#httpLocation}'), "UTF-8");
	def b = a.toURL();
	def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

	assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
	
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	accountid     = urlStr.substring(lastColon + 1);
	
	tC.setPropertyValue("ACCID",accountid);

} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorLink Received [" + myXML.Error.ErrorLink.toString() + "] Exp[$errorLink]";
		//assert myXML.Error.ErrorLink.toString() == errorLink;

		// code added to get the expected and actual responses
		def fileName = tS.project.name + new Date().format( 'yyyyMMdd_hhmms' );

//		tP.setPropertyValue("fileName",fileName);
//		def testCaseName = testRunner.testCase.name;
//
//		def logFile = new File(projectPath +"\\" +context.expand( '${#Project#fileName}' )+".xls")
//		logFile.append(testCaseName.toString()+"\t"+context.expand( '${#TestCase#httpStatus}').toString()+"\t"+expectHTTPstatus.toString()+"\t"+"Exp[$errorID]"+"\t"+"ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "]"+"\t"+"\n")

	} 
	
 } 


</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Validate_Response" disabled="true" id="ffb7d87f-5213-4536-a1b4-773bf47f9502"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
 
def url       = context.expand( '${#Project#Provision_HostName}' );
 
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");
 
def RequestorType = "";
def RequestorClass = "";
def Requestee = "";
 
def usernamestring = "";
def givennamestring = "";
def surnamestring = "";
 
int firstmask = 0;
int lastmask = 0;
 
boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;
 
String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#TestCase#AccountID}')+ "/User/" + context.expand('${#TestCase#UserID}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
                errorHost = "http://error.decellc.org";
} else {
                errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";
 
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus   = "HTTP/1.1 200 OK";
                break;
 
                case "API_NOT_AUTH":
                expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
                errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
                errorReason = "API call not authorized";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
                break;
 
                case "FORBIDDEN":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                processXMLFlag  = false;
                                errorIDFlag     = false;
                                errorReasonFlag = false;
                                errorLinkFlag   = false;
                break;
                
                case "USER_NOT_VALID":
                     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
                                errorID     = "urn:dece:errorid:org:dece:UserIdInvalid";
                                errorReason = "The supplied UserID is invalid.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
                break;
 
                case "USER_INACTIVE":
                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
                //errorReason = "The requestor is not active.";
	errorReason = "The requesting member is not active.";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
                break;
 
     case "URL_NOT_FOUND":
                expectHTTPstatus = "HTTP/1.1 404 Not Found";
                expectHTTPcontenttype = "text/xml"
                XMLbodynull     = true;
                processXMLFlag  = false;
                errorIDFlag     = false;
                errorReasonFlag = false;
                errorLinkFlag   = false;
                break;
 
                case "MTHD_NOT_ALLWD":
                expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
                expectHTTPcontenttype = "text/plain; charset=UTF-8"
                processXMLFlag  = false;
                errorIDFlag     = false;
                errorReasonFlag = false;
                errorLinkFlag   = false;
                break;
 
                case "USER_NOT_IN_ACC":
                expectHTTPstatus = "HTTP/1.1 404 Not Found";
                errorID     = "urn:dece:errorid:org:dece:UserNotFound";
                errorReason = "The supplied UserID was not found.";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotFound";
                break;
 
     case "USER_NOT_PERMIT":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
                                errorReason = "The user does not have permission to perform the requested action.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
                break;   
 
                case "ACC_NOT_MATCH_TOKEN":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
                                errorReason = "Request Account ID not match";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
                break;
 
                case "NO_MNG_ACC_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
                break;
 
                case "NO_ENABLE_MNG_USR_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Enable Manage User Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:EnableManageUserConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:EnableManageUserConsentRequired";
                break;
 
                case "NO_MNG_USR_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Manage User Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
                break;
 
                case "ACCT_INACTIVE":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
                                errorReason = "The identified account is not active.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;
 
     case "SPL_CS_ALLOWED_ACCT":
                     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
                                errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
                                errorReason = "The request is unauthorized.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;
 
     case "SPL_CS_ALLOWED_USER":
                     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
                                errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToDeleteSuspendedUsers";
                                errorReason = "The request is unauthorized.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToDeleteSuspendedUsers";
     break;
 
    case "REQUESTEE_INACTIVE":
                     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
                                errorReason = "The user has been removed.";
                                errorID     = "urn:dece:errorid:org:dece:AccountUserStatusDeleted";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserStatusDeleted";
                break;
      
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
 
assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;
 
// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;
 
//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
                //assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
                assert context.expand( '${#TestCase#httpContentLength}').toInteger()== 0;
}
 
//Location Header
if (httpLocationHeader) {
                assert context.expand( '${#TestCase#httpLocation}') != null;
 
                def a = context.expand( '${#TestCase#httpLocation}');
                def b = a.toURL();
                def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}
 
                assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
                
                int lastColon = urlStr.lastIndexOf(':');
                int lastSlash = urlStr.lastIndexOf('/');
                accountid     = urlStr.substring(lastColon + 1);
                
                tC.setPropertyValue("ACCID",accountid);
                
} else {
                assert context.expand( '${#TestCase#httpLocation}') == "";
}
 
//Content-Type
//assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;
 
//XML body should be null test
if (XMLbodynull) {
 
                assert XMLbody == "";
}
 
if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
                
                def myXML = new XmlSlurper().parseText(XMLbody);
  
                if (errorRespType != "SUCCESS" ) {
                                // Verify response sizes...
                                assert myXML.Error.size() == 1;
                                assert myXML.Error.Reason.size() == 1;
                                assert myXML.Error.OriginalRequest.size() == 1;
                                assert myXML.Error.ErrorLink.size() == 1;
                                
                                // ErrorCode
                                this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
                                assert myXML.Error.@ErrorID.toString() == errorID;
                
                                // ErrorReason
                                this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
                                assert myXML.Error.Reason.toString() == errorReason;
 
                                // ErrorLink
                                this.log.info "ErrorLink Received [" + myXML.Error.ErrorLink.toString() + "] Exp[$errorLink]";
                                //assert myXML.Error.ErrorLink.toString() == errorLink;
                } 
  else
  {
   //Data Types
   // RequestorType: Self, CLG, CS, Other
   // RequestorClass: BAU,SAU,FAU
   //Requestee: CHILD, YOUTH, ADULT
 
   RequestorType = context.expand( '${#TestCase#RequestorType}');
   RequestorClass = context.expand( '${#TestCase#RequestorClass}');
   Requestee = context.expand( '${#TestCase#Requestee}');
 
    // Following Fields returned for Everyone
    
         assert myXML.@UserClass.size() == 1;
         assert myXML.@UserClass.toString().matches("urn:dece:role:user:class:[a-z]*");
         
         assert myXML.Credentials.size() == 1;
         assert myXML.Credentials.Username.size() == 1;
         assert myXML.Credentials.Password.size() == 0;
 
         assert myXML.Name.size() == 1;
         assert myXML.Name.GivenName.size() == 1;
         assert myXML.Name.SurName.size() == 1;
             
         assert myXML.ContactInfo.size() == 1;
       //  assert myXML.ContactInfo.Address.size() == 1;
      //   assert myXML.ContactInfo.Address.PostalAddress.size() == 1;
       //  assert myXML.ContactInfo.Address.PostalCode.size() == 1;
       //  assert myXML.ContactInfo.Address.Locality.size() == 1;
     //    assert myXML.ContactInfo.Address.StateOrProvince.size() == 1;
     //    assert myXML.ContactInfo.Address.Country.size() == 1;
      //   assert myXML.ContactInfo.TelephoneNumber.size() == 1;
      //   assert myXML.ContactInfo.TelephoneNumber.Value.size() == 1;
       //  assert myXML.ContactInfo.MobileTelephoneNumber.size() == 1;
       //  assert myXML.ContactInfo.MobileTelephoneNumber.Value.size() == 1;
     
         assert myXML.Languages.size() == 1;
         assert myXML.Languages.Language.size() > 0;
     
         assert myXML.ResourceStatus.size() == 1;
         assert myXML.ResourceStatus.Current.size() == 1;
 
         if(RequestorType == "CS")
         {
           assert myXML.ResourceStatus.History.size() > 0;   
         } 
         else
         {
           assert myXML.ResourceStatus.History.size() == 0;                
         }
 
   /******************************************************************************************************************/
           
   //Filtering fields based on PI and Access levels
 
   if(Requestee == "CHILD")
    {
 
                  this.log.info "Getting CHILD details";
                  
                 if((RequestorType == "CLG") || (RequestorType == "Self"))
                  {
                   /****************DOB, Security Token and Email Shown only to Self,CLG and CS**********/
        assert myXML.DateOfBirth.size() == 1;     
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0;
        
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;     
                 }
                 else
                  {
         /****************DOB, Security Token and Email not shown to CS and others**********/
         assert myXML.DateOfBirth.size() == 0;     
       //  assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() == 0;
         //assert myXML.LegalGuardian.size() == 1; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 0;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 0;
                   
 
         /**************Verifying Masking of CHILD PI details *******************/
          
         usernamestring = myXML.Credentials.Username.toString();
         givennamestring = myXML.Name.GivenName.toString();
         surnamestring = myXML.Name.SurName.toString();
                
         //*************Verifying Masking of CHILD UserName details ******************
   
         firstmask = usernamestring.indexOf('â');
         lastmask = usernamestring.lastIndexOf('¢');
 
         usernamestring = usernamestring.substring(firstmask,lastmask+1);
 
         assert usernamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
 
       //*************Verifying Masking of CHILD GivenName details ******************
          
        firstmask = givennamestring.indexOf('â');
        lastmask = givennamestring.lastIndexOf('¢');
 
         givennamestring = givennamestring.substring(firstmask,lastmask+1);
 
         assert givennamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
 
         //*************Verifying Masking of CHILD SurName details ******************
          
        firstmask = surnamestring.indexOf('â');
        lastmask = surnamestring.lastIndexOf('¢');
 
         surnamestring = surnamestring.substring(firstmask,lastmask+1);
 
         assert surnamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";         
    }
                 if(RequestorType == "CS")
          {
             this.log.info "Getting CHILD LG details for CS";
             
             assert myXML.LegalGuardian.size() > 0; 
 
              if(myXML.LegalGuardian.size() == 1)        
             {
                 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");  
             }
             else
             if(myXML.LegalGuardian.size() == 2)         
             {
                if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                                assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else
               if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
                {
                  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";    
               } 
            }         
          else if(myXML.LegalGuardian.size() != 0)                    
                {
                   this.log.info "Getting CHILD Active CLG details for NonCS";
                 
                   assert myXML.LegalGuardian.size() == 1;   
                   assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";        
               }
           else
               {
                 this.log.info "Getting CHILD Pending CLG details for NonCS";
                 assert myXML.LegalGuardian.size() == 0;  
              }
          }
    }  
   else if((RequestorClass == "FAU") || (RequestorClass == "SAU") || (RequestorType == "Self") || (RequestorType == "CS"))
    {
                                  
                    assert myXML.DateOfBirth.size() == 1; 
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;
         
          if(Requestee == "YOUTH")                
          {
            this.log.info "Getting YOUTH details";
            assert myXML.LegalGuardian.size() == 0; 
/*
             if(RequestorType == "CS")
            {
              assert myXML.LegalGuardian.size() > 0; 
 
              if(myXML.LegalGuardian.size() == 1)        
             {
                 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");  
             }
             else if(myXML.LegalGuardian.size() == 2)                
             {
                 if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                                assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
                {
                  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";    
               } 
            }
            else if(myXML.LegalGuardian.size() != 0)                  
            {
                 assert myXML.LegalGuardian.size() == 1;   
                 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";          
            }
           else
            {
                 assert myXML.LegalGuardian.size() == 0;  
            }                  
          }
*/          
       }  
     else
        {
           this.log.info "Getting ADULT details";          
           //assert myxml.LegalGuardian.size() == 0;                
                                assert myXML.LegalGuardian.size() == 0;              
        }
    }  
     else 
    {   
                 //   this.log.info "BAU geting other's details";
                    
                    assert myXML.DateOfBirth.size() == 1; 
        // assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() >> 0; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1; 
         
         if(Requestee == "YOUTH") 
          {
            if(myXML.LegalGuardian.size() != 0)           
            {
                 assert myXML.LegalGuardian.size() == 1;   
                 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";          
            }
          else
            {
                 assert myXML.LegalGuardian.size() == 0;  
            }  
          }
          else
          {
            assert myXML.LegalGuardian.size() == 0; 
          }                    
    }       
    
  }            // end if for SUCCESS response
} // end if for XML Body Validations
</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>TC_DECE_00038_UserDelete_FUNC_CS_Basic_Delete_Full_200_OK_P2</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Delete_Access_Portal_CS</con:value></con:property><con:property><con:name>UserName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>ResponseType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E52C7ACD89FC834FE0401F0A07991922</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E52C7B258058766FE0401F0A079940DB</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:/certs/iscportalcs1_concat.pem</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3ADF8026914382E445E0401F0A05996AFB</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADF802691433EE445E0401F0A05996AFB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E52C7ACD89FC834FE0401F0A07991922</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E52C7B258058766FE0401F0A079940DB</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E52C7B2598AE766FE0401F0A079940DB:4917B200"</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>8dac2685-8684-45a7-9383-18906924bc23</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>40b51506-e7ed-484f-9cef-144c355c10b8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0e921030-fc0e-4088-8519-d2ea05acede9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="FullUserUpdate API" searchProperties="true" id="7862a908-a45a-4b81-bc0e-801e8e24856e" disabled="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="e8e7711f-eb52-4a17-984b-8a6a0236e395"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("ResponseType",null);
tC.setPropertyValue("userType",null);
tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID",null);
tC.setPropertyValue("ENCODED_NODE_USER_ID",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("SAML",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="fc0f6904-5506-463b-adf0-9309f4db6c7a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));

tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID", callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));
tC.setPropertyValue("userType", callTC.getPropertyValue("userType"));
tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserCreate"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
if (tP.getPropertyValue("versionMinor")=="06" || tP.getPropertyValue("versionMinor")=="07"){
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			tC.setPropertyValue("ENCODED_NODE_USER_ID", URLEncoder.encode("urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"), "UTF-8"));
			}else{
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			tC.setPropertyValue("ENCODED_NODE_USER_ID", "urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"));
			}</script></con:config></con:testStep><con:testStep type="groovy" name="Setting constants based on Geo Profile" id="15098d07-3e28-4bd9-8ce6-eddc712c561b"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


/* Setting constants based on Geo Profile*/

if(tP.getPropertyValue("GeoProfile")=="US")
{
  tP.setPropertyValue("Country","US");                
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","13");
  tP.setPropertyValue("CHILD_MAX_AGE","12");
}
else
if(tP.getPropertyValue("GeoProfile")=="CA")
{
  tP.setPropertyValue("Country","CA");                
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","13");
  tP.setPropertyValue("CHILD_MAX_AGE","12");
}
else
if(tP.getPropertyValue("GeoProfile")=="GB")
{
  tP.setPropertyValue("Country","GB");                
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
else
if(tP.getPropertyValue("GeoProfile")=="AU")
{
  tP.setPropertyValue("Country","AU");                
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
  else
if(tP.getPropertyValue("GeoProfile")=="NZ")
{
  tP.setPropertyValue("Country","NZ");                
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
  else
if(tP.getPropertyValue("GeoProfile")=="IE")
{
  tP.setPropertyValue("Country","IE");  
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
/*Setting DOB for Adults*/
Date dob = (new Date());
  
dob = dob - ((tP.getPropertyValue("ADULT_MIN_AGE").toInteger()+1)*365);

tP.setPropertyValue("ADULT_DOB",dob.format('dd-MMM-yy'));
tP.setPropertyValue("ADULT_DOB_XML",dob.format('yyyy-MM-dd'));

/*Setting DOB for Youth*/

dob = (new Date());
  
dob = dob - ((tP.getPropertyValue("YOUTH_MIN_AGE").toInteger()+1)*365);

tP.setPropertyValue("YOUTH_DOB",dob.format('dd-MMM-yy'));
tP.setPropertyValue("YOUTH_DOB_XML",dob.format('yyyy-MM-dd'));


/*Setting DOB for Child*/

dob = (new Date());
  
dob = dob - ((tP.getPropertyValue("CHILD_MAX_AGE").toInteger()-1)*365);

tP.setPropertyValue("CHILD_DOB",dob.format('dd-MMM-yy'));
tP.setPropertyValue("CHILD_DOB_XML",dob.format('yyyy-MM-dd'));


if(tC.getPropertyValue("userType")=="ADULT"){
	tC.setPropertyValue("DateOfBirth",tP.getPropertyValue("ADULT_DOB_XML"));
	tC.setPropertyValue("MeetsAgeOfMajority","true");
}else if(tC.getPropertyValue("userType")=="YOUTH"){
	tC.setPropertyValue("DateOfBirth",tP.getPropertyValue("YOUTH_DOB_XML"));
	tC.setPropertyValue("MeetsAgeOfMajority","false");
}else if(tC.getPropertyValue("userType")=="CHILD"){
	tC.setPropertyValue("DateOfBirth",tP.getPropertyValue("CHILD_DOB_XML"));
	tC.setPropertyValue("MeetsAgeOfMajority","false");
}else{
	tC.setPropertyValue("DateOfBirth",tP.getPropertyValue("ADULT_DOB_XML"));
	tC.setPropertyValue("MeetsAgeOfMajority","true");
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="02239d7c-1ce6-4d58-9ae0-6470a8e1e472"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("UserUpdate");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="UserUpdate" id="a1716223-f6c8-4dc3-856d-e8679a537744"><con:settings/><con:config service="AddNewUser" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" methodName="UserUpdate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserUpdate" mediaType="application/xml" sslKeystore="RET_concat.pem" id="0a991f82-1623-4495-b24c-9cc11cc37183" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:full" xmlns="${#Project#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
        	<GivenName>${#TestCase#UserName}</GivenName>
		<SurName>${#TestCase#UserName}</SurName>
	</Name>	
	<ContactInfo>
        <PrimaryEmail>			
	       <Value>${#Project#PrimaryEmail}</Value>
               <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</PrimaryEmail>
	<AlternateEmail>			
        <Value>${#Project#AlternateEmailAddress}</Value>			
        <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</AlternateEmail>
	</ContactInfo>
        <Languages>
		<Language>de</Language>	
	</Languages>
       <DateOfBirth MeetsAgeOfMajority="${#TestCase#MeetsAgeOfMajority}">${#TestCase#DateOfBirth}</DateOfBirth>
       <Credentials> 
               <Username>${#TestCase#UserName}</Username>	 
	</Credentials>
<UserRecoveryTokens>
      <RecoveryItem>
		<QuestionID>1200</QuestionID>  
		<QuestionResponse>Turner</QuestionResponse>
       </RecoveryItem>
       <RecoveryItem>
		<QuestionID>1650</QuestionID>  
		<QuestionResponse>Phoenix</QuestionResponse>
       </RecoveryItem> 
</UserRecoveryTokens>
</User>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#ENCODED_NODE_ACCOUNT_ID}"/>
  <con:entry key="UserID" value="${#TestCase#ENCODED_NODE_USER_ID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="3af7e03a-0317-48f5-92bd-e35a465a120e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('UserUpdate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="5d887a92-965a-45ab-ab45-7daaea74c225"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
 
def url       = context.expand( '${#Project#Provision_HostName}' );
 
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");
 
def RequestorType = "";
def RequestorClass = "";
def Requestee = "";
 
def usernamestring = "";
def givennamestring = "";
def surnamestring = "";
 
int firstmask = 0;
int lastmask = 0;
 
boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;
 
String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#TestCase#AccountID}')+ "/User/" + context.expand('${#TestCase#UserID}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
                errorHost = "http://error.decellc.org";
} else {
                errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";
 
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus   = "HTTP/1.1 200 OK";
                break;
 
                case "API_NOT_AUTH":
                expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
                errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
                errorReason = "API call not authorized";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
                break;
 
                case "FORBIDDEN":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                processXMLFlag  = false;
                                errorIDFlag     = false;
                                errorReasonFlag = false;
                                errorLinkFlag   = false;
                break;
                
                case "USER_NOT_VALID":
                     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
                                errorID     = "urn:dece:errorid:org:dece:UserIdInvalid";
                                errorReason = "The supplied UserID is invalid.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
                break;
 
                case "USER_INACTIVE":
                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
                //errorReason = "The requestor is not active.";
	errorReason = "The requesting member is not active.";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
                break;
 
     case "URL_NOT_FOUND":
                expectHTTPstatus = "HTTP/1.1 404 Not Found";
                expectHTTPcontenttype = "text/xml"
                XMLbodynull     = true;
                processXMLFlag  = false;
                errorIDFlag     = false;
                errorReasonFlag = false;
                errorLinkFlag   = false;
                break;
 
                case "MTHD_NOT_ALLWD":
                expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
                expectHTTPcontenttype = "text/plain; charset=UTF-8"
                processXMLFlag  = false;
                errorIDFlag     = false;
                errorReasonFlag = false;
                errorLinkFlag   = false;
                break;
 
                case "USER_NOT_IN_ACC":
                expectHTTPstatus = "HTTP/1.1 404 Not Found";
                errorID     = "urn:dece:errorid:org:dece:UserNotFound";
                errorReason = "The supplied UserID was not found.";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotFound";
                break;
 
     case "USER_NOT_PERMIT":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
                                errorReason = "The user does not have permission to perform the requested action.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
                break;   
 
                case "ACC_NOT_MATCH_TOKEN":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
                                errorReason = "Request Account ID not match";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
                break;
 
                case "NO_MNG_ACC_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
                break;
 
                case "NO_ENABLE_MNG_USR_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Enable Manage User Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:EnableManageUserConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:EnableManageUserConsentRequired";
                break;
 
                case "NO_MNG_USR_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Manage User Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
                break;
 
                case "ACCT_INACTIVE":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
                                errorReason = "The identified account is not active.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;
 
     case "SPL_CS_ALLOWED_ACCT":
                     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
                                errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
                                errorReason = "The request is unauthorized.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;
 
     case "SPL_CS_ALLOWED_USER":
                     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
                                errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToDeleteSuspendedUsers";
                                errorReason = "The request is unauthorized.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToDeleteSuspendedUsers";
     break;
 
    case "REQUESTEE_INACTIVE":
                     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
                                errorReason = "The user has been removed.";
                                errorID     = "urn:dece:errorid:org:dece:AccountUserStatusDeleted";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserStatusDeleted";
                break;
      
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
 
assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;
 
// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;
 
//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
                //assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
                assert context.expand( '${#TestCase#httpContentLength}').toInteger()== 0;
}
 
//Location Header
if (httpLocationHeader) {
                assert context.expand( '${#TestCase#httpLocation}') != null;
 
                def a = context.expand( '${#TestCase#httpLocation}');
                def b = a.toURL();
                def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}
 
                assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
                
                int lastColon = urlStr.lastIndexOf(':');
                int lastSlash = urlStr.lastIndexOf('/');
                accountid     = urlStr.substring(lastColon + 1);
                
                tC.setPropertyValue("ACCID",accountid);
                
} else {
                assert context.expand( '${#TestCase#httpLocation}') == "";
}
 
//Content-Type
//assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;
 
//XML body should be null test
if (XMLbodynull) {
 
                assert XMLbody == "";
}
 
if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
                
                def myXML = new XmlSlurper().parseText(XMLbody);
  
                if (errorRespType != "SUCCESS" ) {
                                // Verify response sizes...
                                assert myXML.Error.size() == 1;
                                assert myXML.Error.Reason.size() == 1;
                                assert myXML.Error.OriginalRequest.size() == 1;
                                assert myXML.Error.ErrorLink.size() == 1;
                                
                                // ErrorCode
                                this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
                                assert myXML.Error.@ErrorID.toString() == errorID;
                
                                // ErrorReason
                                this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
                                assert myXML.Error.Reason.toString() == errorReason;
 
                                // ErrorLink
                                this.log.info "ErrorLink Received [" + myXML.Error.ErrorLink.toString() + "] Exp[$errorLink]";
                                //assert myXML.Error.ErrorLink.toString() == errorLink;
                } 
  else
  {
   //Data Types
   // RequestorType: Self, CLG, CS, Other
   // RequestorClass: BAU,SAU,FAU
   //Requestee: CHILD, YOUTH, ADULT
 
   RequestorType = context.expand( '${#TestCase#RequestorType}');
   RequestorClass = context.expand( '${#TestCase#RequestorClass}');
   Requestee = context.expand( '${#TestCase#Requestee}');
 
    // Following Fields returned for Everyone
    
         assert myXML.@UserClass.size() == 1;
         assert myXML.@UserClass.toString().matches("urn:dece:role:user:class:[a-z]*");
         
         assert myXML.Credentials.size() == 1;
         assert myXML.Credentials.Username.size() == 1;
         assert myXML.Credentials.Password.size() == 0;
 
         assert myXML.Name.size() == 1;
         assert myXML.Name.GivenName.size() == 1;
         assert myXML.Name.SurName.size() == 1;
             
         assert myXML.ContactInfo.size() == 1;
       //  assert myXML.ContactInfo.Address.size() == 1;
      //   assert myXML.ContactInfo.Address.PostalAddress.size() == 1;
       //  assert myXML.ContactInfo.Address.PostalCode.size() == 1;
       //  assert myXML.ContactInfo.Address.Locality.size() == 1;
     //    assert myXML.ContactInfo.Address.StateOrProvince.size() == 1;
     //    assert myXML.ContactInfo.Address.Country.size() == 1;
      //   assert myXML.ContactInfo.TelephoneNumber.size() == 1;
      //   assert myXML.ContactInfo.TelephoneNumber.Value.size() == 1;
       //  assert myXML.ContactInfo.MobileTelephoneNumber.size() == 1;
       //  assert myXML.ContactInfo.MobileTelephoneNumber.Value.size() == 1;
     
         assert myXML.Languages.size() == 1;
         assert myXML.Languages.Language.size() > 0;
     
         assert myXML.ResourceStatus.size() == 1;
         assert myXML.ResourceStatus.Current.size() == 1;
 
         if(RequestorType == "CS")
         {
           assert myXML.ResourceStatus.History.size() > 0;   
         } 
         else
         {
           assert myXML.ResourceStatus.History.size() == 0;                
         }
 
   /******************************************************************************************************************/
           
   //Filtering fields based on PI and Access levels
 
   if(Requestee == "CHILD")
    {
 
                  this.log.info "Getting CHILD details";
                  
                 if((RequestorType == "CLG") || (RequestorType == "Self"))
                  {
                   /****************DOB, Security Token and Email Shown only to Self,CLG and CS**********/
        assert myXML.DateOfBirth.size() == 1;     
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0;
        
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;     
                 }
                 else
                  {
         /****************DOB, Security Token and Email not shown to CS and others**********/
         assert myXML.DateOfBirth.size() == 0;     
       //  assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() == 0;
         //assert myXML.LegalGuardian.size() == 1; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 0;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 0;
                   
 
         /**************Verifying Masking of CHILD PI details *******************/
          
         usernamestring = myXML.Credentials.Username.toString();
         givennamestring = myXML.Name.GivenName.toString();
         surnamestring = myXML.Name.SurName.toString();
                
         //*************Verifying Masking of CHILD UserName details ******************
   
         firstmask = usernamestring.indexOf('â');
         lastmask = usernamestring.lastIndexOf('¢');
 
         usernamestring = usernamestring.substring(firstmask,lastmask+1);
 
         assert usernamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
 
       //*************Verifying Masking of CHILD GivenName details ******************
          
        firstmask = givennamestring.indexOf('â');
        lastmask = givennamestring.lastIndexOf('¢');
 
         givennamestring = givennamestring.substring(firstmask,lastmask+1);
 
         assert givennamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
 
         //*************Verifying Masking of CHILD SurName details ******************
          
        firstmask = surnamestring.indexOf('â');
        lastmask = surnamestring.lastIndexOf('¢');
 
         surnamestring = surnamestring.substring(firstmask,lastmask+1);
 
         assert surnamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";         
    }
                 if(RequestorType == "CS")
          {
             this.log.info "Getting CHILD LG details for CS";
             
             assert myXML.LegalGuardian.size() > 0; 
 
              if(myXML.LegalGuardian.size() == 1)        
             {
                 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");  
             }
             else
             if(myXML.LegalGuardian.size() == 2)         
             {
                if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                                assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else
               if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
                {
                  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";    
               } 
            }         
          else if(myXML.LegalGuardian.size() != 0)                    
                {
                   this.log.info "Getting CHILD Active CLG details for NonCS";
                 
                   assert myXML.LegalGuardian.size() == 1;   
                   assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";        
               }
           else
               {
                 this.log.info "Getting CHILD Pending CLG details for NonCS";
                 assert myXML.LegalGuardian.size() == 0;  
              }
          }
    }  
   else if((RequestorClass == "FAU") || (RequestorClass == "SAU") || (RequestorType == "Self") || (RequestorType == "CS"))
    {
                                  
                    assert myXML.DateOfBirth.size() == 1; 
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;
         
          if(Requestee == "YOUTH")                
          {
            this.log.info "Getting YOUTH details";
            assert myXML.LegalGuardian.size() == 0; 
/*
             if(RequestorType == "CS")
            {
              assert myXML.LegalGuardian.size() > 0; 
 
              if(myXML.LegalGuardian.size() == 1)        
             {
                 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");  
             }
             else if(myXML.LegalGuardian.size() == 2)                
             {
                 if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                                assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
                {
                  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";    
               } 
            }
            else if(myXML.LegalGuardian.size() != 0)                  
            {
                 assert myXML.LegalGuardian.size() == 1;   
                 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";          
            }
           else
            {
                 assert myXML.LegalGuardian.size() == 0;  
            }                  
          }
*/          
       }  
     else
        {
           this.log.info "Getting ADULT details";          
           //assert myxml.LegalGuardian.size() == 0;                
                                assert myXML.LegalGuardian.size() == 0;              
        }
    }  
     else 
    {   
                 //   this.log.info "BAU geting other's details";
                    
                    assert myXML.DateOfBirth.size() == 1; 
        // assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() >> 0; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1; 
         
         if(Requestee == "YOUTH") 
          {
            if(myXML.LegalGuardian.size() != 0)           
            {
                 assert myXML.LegalGuardian.size() == 1;   
                 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";          
            }
          else
            {
                 assert myXML.LegalGuardian.size() == 0;  
            }  
          }
          else
          {
            assert myXML.LegalGuardian.size() == 0; 
          }                    
    }       
    
  }            // end if for SUCCESS response
} // end if for XML Body Validations
</script></con:config></con:testStep><con:properties><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>tName</con:name><con:value>1.21. User Email Address Changed by Another User [Your UltraViolet email address has been changed]</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Notifications_Test Cases</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>DF83148BF14A1B37E0401F0A0799725A</con:value></con:property><con:property><con:name>SecondUserName</con:name><con:value>username_20130122_043244</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>DF831D3BDEBB69DEE0401F0A05992E1F</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADF83148BF14A1B37E0401F0A0799725A</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\User_Notifications\RET_concat.pem</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-06-24</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3ADF831D3BDEBB69DEE0401F0A05992E1F</con:value></con:property><con:property><con:name>UserName</con:name><con:value>fullusername_20130619_072217</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5ff78eb3-d79f-4f4a-b9a8-5ec1c84f61c0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3d78db1c-105b-43a0-b406-6bb0f690c833</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662fb201-c4e7-401c-b10a-548ea13f5020</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CLGTransfer" searchProperties="true" id="9d562b4c-2b21-4e4b-9dee-ea86ba8721ce" disabled="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="b6c59ddd-f128-45cc-acc1-fcb9c7601c10"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("ResponseType",null);
tC.setPropertyValue("userType",null);
tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID",null);
tC.setPropertyValue("ENCODED_NODE_USER_ID",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("SAML",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="d2122245-f595-48c8-b54c-ea78d0db3f52"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));

tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID", callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("CLG_NODE_USER_ID", callTC.getPropertyValue("CLG_NODE_USER_ID"));
tC.setPropertyValue("FULL_NODE_USER_ID", callTC.getPropertyValue("FULL_NODE_USER_ID"));
tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));
tC.setPropertyValue("userType", callTC.getPropertyValue("userType"));
tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserCreate"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
if (tP.getPropertyValue("versionMinor")=="06" || tP.getPropertyValue("versionMinor")=="07"){
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			tC.setPropertyValue("ENCODED_NODE_USER_ID", URLEncoder.encode("urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"), "UTF-8"));
			}else{
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			tC.setPropertyValue("ENCODED_NODE_USER_ID", "urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"));
			}</script></con:config></con:testStep><con:testStep type="groovy" name="Setting constants based on Geo Profile" id="7060fe95-13b3-41ca-a150-3f0edc3adc54"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


/* Setting constants based on Geo Profile*/

if(tP.getPropertyValue("GeoProfile")=="US")
{
  tP.setPropertyValue("Country","US");                
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","13");
  tP.setPropertyValue("CHILD_MAX_AGE","12");
}
else
if(tP.getPropertyValue("GeoProfile")=="CA")
{
  tP.setPropertyValue("Country","CA");                
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","13");
  tP.setPropertyValue("CHILD_MAX_AGE","12");
}
else
if(tP.getPropertyValue("GeoProfile")=="GB")
{
  tP.setPropertyValue("Country","GB");                
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
else
if(tP.getPropertyValue("GeoProfile")=="AU")
{
  tP.setPropertyValue("Country","AU");                
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
  else
if(tP.getPropertyValue("GeoProfile")=="NZ")
{
  tP.setPropertyValue("Country","NZ");                
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
  else
if(tP.getPropertyValue("GeoProfile")=="IE")
{
  tP.setPropertyValue("Country","IE");  
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
/*Setting DOB for Adults*/
Date dob = (new Date());
  
dob = dob - ((tP.getPropertyValue("ADULT_MIN_AGE").toInteger()+1)*365);

tP.setPropertyValue("ADULT_DOB",dob.format('dd-MMM-yy'));
tP.setPropertyValue("ADULT_DOB_XML",dob.format('yyyy-MM-dd'));

/*Setting DOB for Youth*/

dob = (new Date());
  
dob = dob - ((tP.getPropertyValue("YOUTH_MIN_AGE").toInteger()+1)*365);

tP.setPropertyValue("YOUTH_DOB",dob.format('dd-MMM-yy'));
tP.setPropertyValue("YOUTH_DOB_XML",dob.format('yyyy-MM-dd'));


/*Setting DOB for Child*/

dob = (new Date());
  
dob = dob - ((tP.getPropertyValue("CHILD_MAX_AGE").toInteger()-1)*365);

tP.setPropertyValue("CHILD_DOB",dob.format('dd-MMM-yy'));
tP.setPropertyValue("CHILD_DOB_XML",dob.format('yyyy-MM-dd'));


if(tC.getPropertyValue("userType")=="ADULT"){
	tC.setPropertyValue("DateOfBirth",tP.getPropertyValue("ADULT_DOB_XML"));
	tC.setPropertyValue("MeetsAgeOfMajority","true");
}else if(tC.getPropertyValue("userType")=="YOUTH"){
	tC.setPropertyValue("DateOfBirth",tP.getPropertyValue("YOUTH_DOB_XML"));
	tC.setPropertyValue("MeetsAgeOfMajority","false");
}else if(tC.getPropertyValue("userType")=="CHILD"){
	tC.setPropertyValue("DateOfBirth",tP.getPropertyValue("CHILD_DOB_XML"));
	tC.setPropertyValue("MeetsAgeOfMajority","false");
}else{
	tC.setPropertyValue("DateOfBirth",tP.getPropertyValue("ADULT_DOB_XML"));
	tC.setPropertyValue("MeetsAgeOfMajority","true");
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="20e9cc33-a9bd-4521-aef3-430d62debf4b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("CLGTransfer");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="CLGTransfer" id="f04ef3e0-3f34-4fd7-b08e-576d088813e1"><con:settings/><con:config service="AddNewUser" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" methodName="UserUpdate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CLGTransfer" mediaType="application/xml" sslKeystore="dececs_concat.pem" id="0a991f82-1623-4495-b24c-9cc11cc37183" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:standard" xmlns="${#Project#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
        	<GivenName>${#TestCase#UserName}</GivenName>
		<SurName>${#TestCase#UserName}</SurName>
	</Name>	
	<ContactInfo>
        <PrimaryEmail>			
	       <Value>${#Project#PrimaryEmail}</Value>
               <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</PrimaryEmail>
	<AlternateEmail>			
        <Value>${#Project#AlternateEmailAddress}</Value>			
        <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</AlternateEmail>
	</ContactInfo>
        <Languages>
		<Language>de</Language>	
	</Languages>
       <DateOfBirth MeetsAgeOfMajority="${#TestCase#MeetsAgeOfMajority}">${#TestCase#DateOfBirth}</DateOfBirth>
      <LegalGuardian Status="urn:dece:type:status:active">urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}</LegalGuardian>
      <LegalGuardian Status="urn:dece:type:status:pending">urn:dece:userid:org:dece:${#TestCase#FULL_NODE_USER_ID}</LegalGuardian>
       <Credentials> 
               <Username>${#TestCase#UserName}</Username>	 
	</Credentials>
<UserRecoveryTokens>
      <RecoveryItem>
		<QuestionID>1200</QuestionID>  
		<QuestionResponse>Turner</QuestionResponse>
       </RecoveryItem>
       <RecoveryItem>
		<QuestionID>1650</QuestionID>  
		<QuestionResponse>Phoenix</QuestionResponse>
       </RecoveryItem> 
</UserRecoveryTokens>
</User>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#ENCODED_NODE_ACCOUNT_ID}"/>
  <con:entry key="UserID" value="${#TestCase#ENCODED_NODE_USER_ID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="2479ab41-1198-444b-88a0-f69cfd793c9b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('CLGTransfer');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="5db4b6fe-99bc-4dbd-b846-0fe097588a46"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
 
def url       = context.expand( '${#Project#Provision_HostName}' );
 
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");
 
def RequestorType = "";
def RequestorClass = "";
def Requestee = "";
 
def usernamestring = "";
def givennamestring = "";
def surnamestring = "";
 
int firstmask = 0;
int lastmask = 0;
 
boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;
 
String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#TestCase#AccountID}')+ "/User/" + context.expand('${#TestCase#UserID}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
                errorHost = "http://error.decellc.org";
} else {
                errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";
 
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus   = "HTTP/1.1 200 OK";
                break;
 
                case "API_NOT_AUTH":
                expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
                errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
                errorReason = "API call not authorized";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
                break;
 
                case "FORBIDDEN":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                processXMLFlag  = false;
                                errorIDFlag     = false;
                                errorReasonFlag = false;
                                errorLinkFlag   = false;
                break;
                
                case "USER_NOT_VALID":
                     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
                                errorID     = "urn:dece:errorid:org:dece:UserIdInvalid";
                                errorReason = "The supplied UserID is invalid.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
                break;
 
                case "USER_INACTIVE":
                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
                //errorReason = "The requestor is not active.";
	errorReason = "The requesting member is not active.";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
                break;
 
     case "URL_NOT_FOUND":
                expectHTTPstatus = "HTTP/1.1 404 Not Found";
                expectHTTPcontenttype = "text/xml"
                XMLbodynull     = true;
                processXMLFlag  = false;
                errorIDFlag     = false;
                errorReasonFlag = false;
                errorLinkFlag   = false;
                break;
 
                case "MTHD_NOT_ALLWD":
                expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
                expectHTTPcontenttype = "text/plain; charset=UTF-8"
                processXMLFlag  = false;
                errorIDFlag     = false;
                errorReasonFlag = false;
                errorLinkFlag   = false;
                break;
 
                case "USER_NOT_IN_ACC":
                expectHTTPstatus = "HTTP/1.1 404 Not Found";
                errorID     = "urn:dece:errorid:org:dece:UserNotFound";
                errorReason = "The supplied UserID was not found.";
                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotFound";
                break;
 
     case "USER_NOT_PERMIT":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
                                errorReason = "The user does not have permission to perform the requested action.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
                break;   
 
                case "ACC_NOT_MATCH_TOKEN":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
                                errorReason = "Request Account ID not match";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
                break;
 
                case "NO_MNG_ACC_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
                break;
 
                case "NO_ENABLE_MNG_USR_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Enable Manage User Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:EnableManageUserConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:EnableManageUserConsentRequired";
                break;
 
                case "NO_MNG_USR_CNST":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorReason = "The setting of the \"Manage User Consent\" policy prevents the requested action from being completed.";
                                errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
                break;
 
                case "ACCT_INACTIVE":
                     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
                                errorReason = "The identified account is not active.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;
 
     case "SPL_CS_ALLOWED_ACCT":
                     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
                                errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
                                errorReason = "The request is unauthorized.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;
 
     case "SPL_CS_ALLOWED_USER":
                     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
                                errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToDeleteSuspendedUsers";
                                errorReason = "The request is unauthorized.";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToDeleteSuspendedUsers";
     break;
 
    case "REQUESTEE_INACTIVE":
                     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
                                errorReason = "The user has been removed.";
                                errorID     = "urn:dece:errorid:org:dece:AccountUserStatusDeleted";
                                errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserStatusDeleted";
                break;
      
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
 
assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;
 
// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;
 
//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
                //assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
                assert context.expand( '${#TestCase#httpContentLength}').toInteger()== 0;
}
 
//Location Header
if (httpLocationHeader) {
                assert context.expand( '${#TestCase#httpLocation}') != null;
 
                def a = context.expand( '${#TestCase#httpLocation}');
                def b = a.toURL();
                def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}
 
                assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
                
                int lastColon = urlStr.lastIndexOf(':');
                int lastSlash = urlStr.lastIndexOf('/');
                accountid     = urlStr.substring(lastColon + 1);
                
                tC.setPropertyValue("ACCID",accountid);
                
} else {
                assert context.expand( '${#TestCase#httpLocation}') == "";
}
 
//Content-Type
//assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;
 
//XML body should be null test
if (XMLbodynull) {
 
                assert XMLbody == "";
}
 
if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
                
                def myXML = new XmlSlurper().parseText(XMLbody);
  
                if (errorRespType != "SUCCESS" ) {
                                // Verify response sizes...
                                assert myXML.Error.size() == 1;
                                assert myXML.Error.Reason.size() == 1;
                                assert myXML.Error.OriginalRequest.size() == 1;
                                assert myXML.Error.ErrorLink.size() == 1;
                                
                                // ErrorCode
                                this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
                                assert myXML.Error.@ErrorID.toString() == errorID;
                
                                // ErrorReason
                                this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
                                assert myXML.Error.Reason.toString() == errorReason;
 
                                // ErrorLink
                                this.log.info "ErrorLink Received [" + myXML.Error.ErrorLink.toString() + "] Exp[$errorLink]";
                                //assert myXML.Error.ErrorLink.toString() == errorLink;
                } 
  else
  {
   //Data Types
   // RequestorType: Self, CLG, CS, Other
   // RequestorClass: BAU,SAU,FAU
   //Requestee: CHILD, YOUTH, ADULT
 
   RequestorType = context.expand( '${#TestCase#RequestorType}');
   RequestorClass = context.expand( '${#TestCase#RequestorClass}');
   Requestee = context.expand( '${#TestCase#Requestee}');
 
    // Following Fields returned for Everyone
    
         assert myXML.@UserClass.size() == 1;
         assert myXML.@UserClass.toString().matches("urn:dece:role:user:class:[a-z]*");
         
         assert myXML.Credentials.size() == 1;
         assert myXML.Credentials.Username.size() == 1;
         assert myXML.Credentials.Password.size() == 0;
 
         assert myXML.Name.size() == 1;
         assert myXML.Name.GivenName.size() == 1;
         assert myXML.Name.SurName.size() == 1;
             
         assert myXML.ContactInfo.size() == 1;
       //  assert myXML.ContactInfo.Address.size() == 1;
      //   assert myXML.ContactInfo.Address.PostalAddress.size() == 1;
       //  assert myXML.ContactInfo.Address.PostalCode.size() == 1;
       //  assert myXML.ContactInfo.Address.Locality.size() == 1;
     //    assert myXML.ContactInfo.Address.StateOrProvince.size() == 1;
     //    assert myXML.ContactInfo.Address.Country.size() == 1;
      //   assert myXML.ContactInfo.TelephoneNumber.size() == 1;
      //   assert myXML.ContactInfo.TelephoneNumber.Value.size() == 1;
       //  assert myXML.ContactInfo.MobileTelephoneNumber.size() == 1;
       //  assert myXML.ContactInfo.MobileTelephoneNumber.Value.size() == 1;
     
         assert myXML.Languages.size() == 1;
         assert myXML.Languages.Language.size() > 0;
     
         assert myXML.ResourceStatus.size() == 1;
         assert myXML.ResourceStatus.Current.size() == 1;
 
         if(RequestorType == "CS")
         {
           assert myXML.ResourceStatus.History.size() > 0;   
         } 
         else
         {
           assert myXML.ResourceStatus.History.size() == 0;                
         }
 
   /******************************************************************************************************************/
           
   //Filtering fields based on PI and Access levels
 
   if(Requestee == "CHILD")
    {
 
                  this.log.info "Getting CHILD details";
                  
                 if((RequestorType == "CLG") || (RequestorType == "Self"))
                  {
                   /****************DOB, Security Token and Email Shown only to Self,CLG and CS**********/
        assert myXML.DateOfBirth.size() == 1;     
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0;
        
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;     
                 }
                 else
                  {
         /****************DOB, Security Token and Email not shown to CS and others**********/
         assert myXML.DateOfBirth.size() == 0;     
       //  assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() == 0;
         //assert myXML.LegalGuardian.size() == 1; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 0;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 0;
                   
 
         /**************Verifying Masking of CHILD PI details *******************/
          
         usernamestring = myXML.Credentials.Username.toString();
         givennamestring = myXML.Name.GivenName.toString();
         surnamestring = myXML.Name.SurName.toString();
                
         //*************Verifying Masking of CHILD UserName details ******************
   
         firstmask = usernamestring.indexOf('â');
         lastmask = usernamestring.lastIndexOf('¢');
 
         usernamestring = usernamestring.substring(firstmask,lastmask+1);
 
         assert usernamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
 
       //*************Verifying Masking of CHILD GivenName details ******************
          
        firstmask = givennamestring.indexOf('â');
        lastmask = givennamestring.lastIndexOf('¢');
 
         givennamestring = givennamestring.substring(firstmask,lastmask+1);
 
         assert givennamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
 
         //*************Verifying Masking of CHILD SurName details ******************
          
        firstmask = surnamestring.indexOf('â');
        lastmask = surnamestring.lastIndexOf('¢');
 
         surnamestring = surnamestring.substring(firstmask,lastmask+1);
 
         assert surnamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";         
    }
                 if(RequestorType == "CS")
          {
             this.log.info "Getting CHILD LG details for CS";
             
             assert myXML.LegalGuardian.size() > 0; 
 
              if(myXML.LegalGuardian.size() == 1)        
             {
                 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");  
             }
             else
             if(myXML.LegalGuardian.size() == 2)         
             {
                if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                                assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else
               if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
                {
                  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";    
               } 
            }         
          else if(myXML.LegalGuardian.size() != 0)                    
                {
                   this.log.info "Getting CHILD Active CLG details for NonCS";
                 
                   assert myXML.LegalGuardian.size() == 1;   
                   assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";        
               }
           else
               {
                 this.log.info "Getting CHILD Pending CLG details for NonCS";
                 assert myXML.LegalGuardian.size() == 0;  
              }
          }
    }  
   else if((RequestorClass == "FAU") || (RequestorClass == "SAU") || (RequestorType == "Self") || (RequestorType == "CS"))
    {
                                  
                    assert myXML.DateOfBirth.size() == 1; 
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;
         
          if(Requestee == "YOUTH")                
          {
            this.log.info "Getting YOUTH details";
            assert myXML.LegalGuardian.size() == 0; 
/*
             if(RequestorType == "CS")
            {
              assert myXML.LegalGuardian.size() > 0; 
 
              if(myXML.LegalGuardian.size() == 1)        
             {
                 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");  
             }
             else if(myXML.LegalGuardian.size() == 2)                
             {
                 if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                                assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
                {
                  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";    
               } 
            }
            else if(myXML.LegalGuardian.size() != 0)                  
            {
                 assert myXML.LegalGuardian.size() == 1;   
                 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";          
            }
           else
            {
                 assert myXML.LegalGuardian.size() == 0;  
            }                  
          }
*/          
       }  
     else
        {
           this.log.info "Getting ADULT details";          
           //assert myxml.LegalGuardian.size() == 0;                
                                assert myXML.LegalGuardian.size() == 0;              
        }
    }  
     else 
    {   
                 //   this.log.info "BAU geting other's details";
                    
                    assert myXML.DateOfBirth.size() == 1; 
        // assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() >> 0; 
 
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1; 
         
         if(Requestee == "YOUTH") 
          {
            if(myXML.LegalGuardian.size() != 0)           
            {
                 assert myXML.LegalGuardian.size() == 1;   
                 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";          
            }
          else
            {
                 assert myXML.LegalGuardian.size() == 0;  
            }  
          }
          else
          {
            assert myXML.LegalGuardian.size() == 0; 
          }                    
    }       
    
  }            // end if for SUCCESS response
} // end if for XML Body Validations
</script></con:config></con:testStep><con:properties><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>tName</con:name><con:value>1.31. CLG Change Completed [The legal guardianship setting for an underage UltraViolet member has been changed]</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Notifications_Test Cases</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>dececs</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>DF8240BDE2C9DC9EE0401F0A05997B85</con:value></con:property><con:property><con:name>SecondUserName</con:name><con:value>username_20130122_043244</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>DF82425275355BDBE0401F0A079960F2</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADF8240BDE2C9DC9EE0401F0A05997B85</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\User_Notifications\dececs_concat.pem</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2002-06-22</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3ADF82425275355BDBE0401F0A079960F2</con:value></con:property><con:property><con:name>UserName</con:name><con:value>standardusername_20130619_062045</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>DF8240BDE2D6DC9EE0401F0A05997B85</con:value></con:property><con:property><con:name>FULL_NODE_USER_ID</con:name><con:value>DF82425275645BDBE0401F0A079960F2</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5ff78eb3-d79f-4f4a-b9a8-5ec1c84f61c0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3d78db1c-105b-43a0-b406-6bb0f690c833</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662fb201-c4e7-401c-b10a-548ea13f5020</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateTOU_API" searchProperties="true" id="16c677b6-f520-424c-859c-233d39f17e8a"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="f245ec71-a809-4a70-848c-36b8eb1bb550"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

tC.setPropertyValue("expectErrType","SUCCESS");

if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
{
	tC.setPropertyValue("Policy_Class", "urn:dece:type:policy:TermsOfUse");
}
else
{
	tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:TermsOfUse", "UTF-8"));
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Set_TOU_Policy_Resource" id="6542cb8c-da51-47fb-b7c4-2670ff287d69"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

String country = context.expand( '${#Project#Country}' );
def tOUUrl = context.expand( '${#Project#TOUUrl}' )

def touForCountry = "TOU_"+country
def consent_Version =  tP.getPropertyValue(touForCountry);

tP.setPropertyValue("policy_TOU",'https://'+ tOUUrl + '/Consent/Text/' + country + '/urn:dece:type:policy:TermsOfUse:' + consent_Version + '/html');

log.info "Policy TOU from Project level property " + tP.getPropertyValue("policy_TOU");</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="aa874b4b-0aa5-41ba-933b-be696ac3d33a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_TOU" id="aa640512-7782-42ad-b469-536a81c03732"><con:settings/><con:config service="PolicyCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateSinglePolicyPost" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_TOU" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="RET_concat.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@bind_address"/></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd"  xmlns:dece="${#Project#coordinatorSchema}"  xmlns:ds="http://www.w3.org/2000/09/xmldsig#"  xmlns:md="http://www.movielabs.com/md"  xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <dece:Policy>
    <dece:PolicyClass>urn:dece:type:policy:TermsOfUse</dece:PolicyClass>
    <dece:Resource>${#Project#Policy_TOU}</dece:Resource>
    <dece:RequestingEntity>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_REQ_ENTITY}</dece:RequestingEntity>
    <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
    <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_CREATED_BY}">
        <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
    </dece:ResourceStatus>
  </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="b2aa4e66-efd9-4533-8e23-d5191b75b3e3">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreateSinglePolicyPost_TOU');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                             contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="844d6c80-e576-4d3d-95e2-868bce023ff2">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D12F2DD48A10D559E0401F0A059918B0/User/urn:dece:userid:org:dece:D12F2DD48A1ED559E0401F0A059918B0/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/2015/02/Account/urn:dece:accountid:org:dece:08482E0679EC69ADE05305991F0A0FF6/User/urn:dece:userid:org:dece:08482E0679F869ADE05305991F0A0FF6/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Gits\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>08482E0679EC69ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:08482E0679EC69ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4E99389111664AEE0401F0A07990AF6</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E4E99389111664AEE0401F0A07990AF6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:08482E0679F869ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZrc7I6EP4rDv34DnIRqTLVGVtry/tqL2ovp1/OxLBAWghKAmp//UlQqdjL8ZxPTJbN7rO7T57kjKE4Mp0eY5ByktDaKo4ocwprR8lS6iSIEeZQFANzOHYmvdHQMeu6g3ZblJrb7yh/N4yZ7TcaSLVmyFOtptdSZ3Lpn/q24WN/preRcGUsA5cyjijvKKZuWKphqKY+1duO1XT0Rt04bb8otUdImYgtXOq6sgW1Yh0l5HzuaNpyuawvG/UkDTRT1w3teTSc4BBipHTPNhUVidLu1h/XPcAQRbiOk1g70yo+Zx5zJiSgiGcpbHN53+XSNb2tCR+PkeBEKfeC51I/KZYXiCaUYBSRdyT7MwIeJl6tFwVJSngYf1uEocvAKqywig2LnihaFdqRgSoIU4ZUFiJjG2sMPqRAMdQexm5HOTluasXWaYoo85M0ZtXlf8MDNIcomYOnsl1ZW2jHB/yiU90zwI5LcZQxksONJOscYWDbaQI+PlTtLgWfrIaECYKumESn7cM7WG660ScBMP5/BrQ3nE2QRxRl0GXpKL55aOev6+F5/81Og5E7SuD+94s96hQA9p0LQznazfKAlCWJNjvCfOTPyXBwpb1ZyMJJ9LroBzk89u/aF6tH1LrW2BAQGj6F7eksmLXeQ/ucXv6yh6bLXll7OB8srvPbJn1iLS933wfvQZyH954e3cXEuhkv7p8fnhZ5Ej5Rc3ixWDf4w9VMY3/dmXx8n5nn9Ffussbk+er+2rYedfLbNBohoHUQcfxnsJwGzdfbFxMFuTFgnbKcPfxV2+7MT7LZK2C+W0oauP3aQEwJ8Z/FTFqIp/qFqzOX4sM4UK505S6pHU4m5I54jpjhZq23rJZ5qdun7UHLbvf6l3qzoTfbbWOg9/TBwN6JzAbFAcSLhPpE5pKSu6HNzwBx7DCgHqRqnmRC6ZjyQ8Q+4qjm0rE4BAllME2EPBvUS+01brxZPuM2zvXWLFzY4sQotZuE39LbtOdzSCuabJgVTR4DJnMCUrglr5kgNuOiFwuUZzwy6jmqU8iEtKdSZR3TajU1RuJ5BBKpFideFkF9Hs6Lzmhs8zVVhFlhHV9Oi9P2bV2H/3YtED4ekQ5M1nIOYozw6XKxnOaukO8Lbu4XvAvfyzwiD5boJ08J3iCp/vqgieRHyRFR0Q5y6XloqETVDgsqE3k5wSXRy+taqLg4993dOBaovqhneZ4VAziV+paK8EJ0jKamm9oEcCaUaT1N3oBqZRTtqGugBH6QvLRXIWY8pBOOOMSCMbViecS9PwEm731XUH117KOiklK0jsOKf2W7iMSbRSL+8VmDHSz9hPlOfJZJ6n1M7ItYe3lEneLa54QGciWvgPU3vMCJCEuEeCXpfvCvAnyVvGosm1xi4YJQs4zD939qUpU6CsI4ySh3+0ph2FfKAidfz8H5cPoUphDj8nVG/v15ppKCAhjEm46RIr68ZB15BGiwp7bbpF8L7uXFT4JbRdf9ZP5s2evTIce7/wA=</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Update_Access_NonCS</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00005_UserUpdate_FUNC_NonCS_Full_Update_UserName_Others</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID_REQ_ENTITY</con:name><con:value>08482E0679F869ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>NODE_USER_ID_CREATED_BY</con:name><con:value>08482E0679F869ADE05305991F0A0FF6</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bd6efb96-bbf3-4226-9917-48245caf20c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6542cb8c-da51-47fb-b7c4-2670ff287d69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateCLGAttestation" searchProperties="true" id="69fd4170-842f-452d-b5ba-2a3dcb222763"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="50376d6d-121f-49b7-a38e-5003f16c248f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

tC.setPropertyValue("expectErrType","SUCCESS");

if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
{
	tC.setPropertyValue("Policy_Class","urn:dece:type:policy:CLGAttestation");
}
else
{
	tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:CLGAttestation", "UTF-8"));
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="6f62f720-8990-433e-b87f-e5bfb4b7fa27" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

//tC.setPropertyValue("Policy_Class", "urn:dece:type:policy:CLGAttestation");


</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="53731713-82f6-4689-b18d-e2d614c0f00a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_CLGAttestation" id="e1f50a3a-0e4f-4409-85f8-0e805d506f11"><con:settings/><con:config service="PolicyCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateSinglePolicyPost" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_CLGAttestation" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="RET_concat.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@bind_address"/></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd"  xmlns:dece="${#Project#coordinatorSchema}"  xmlns:ds="http://www.w3.org/2000/09/xmldsig#"  xmlns:md="http://www.movielabs.com/md"  xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <dece:Policy>
    <dece:PolicyClass>urn:dece:type:policy:CLGAttestation</dece:PolicyClass>
    <dece:Resource>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_CHILD}</dece:Resource>
    <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
    <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}">
        <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
    </dece:ResourceStatus>
  </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="9d9dbe4a-7055-4988-8e66-537efed92ca4">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreateSinglePolicyPost_CLGAttestation');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                             contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="6ac2bd45-adeb-4c9a-8295-932d1e7e4a30">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>tName</con:name><con:value>Child_User_Create_STS_Policies</con:value></con:property><con:property><con:name>sName</con:name><con:value>Child_User_Create_API</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E48705C62976FCB4E0401F0A079971D7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D12F2DD48A10D559E0401F0A059918B0/User/urn:dece:userid:org:dece:D12F2DD48A1ED559E0401F0A059918B0/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/07/Account/urn:dece:accountid:org:dece:E643241E6041B4D4E0401F0A079949D1/User/urn:dece:userid:org:dece:E6432442DEB9EDF6E0401F0A079949AA/Policy/urn:dece:type:policy:CLGAttestation</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn:dece:type:policy:CLGAttestation</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:/certs/iscportal1_concat.pem</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E6432442DEB9EDF6E0401F0A079949AA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E643241E6041B4D4E0401F0A079949D1</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E486FC50804D1AE5E0401F0A05991EF2</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E2E22E83505CC024E0401F0A0599357E</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E6432D13CD199C26E0401F0A0799607F</con:value></con:property><con:property><con:name>CHILD_NODE_USER_ID</con:name><con:value>E2E25B1DF5BEDD19E0401F0A07991448</con:value></con:property><con:property><con:name>NODE_USER_ID_CHILD</con:name><con:value>E6432442DEB9EDF6E0401F0A079949AA</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bd6efb96-bbf3-4226-9917-48245caf20c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateMAC" searchProperties="true" id="7d85ebf5-2378-47de-9c73-bcc3be05c78c" disabled="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="d4371971-21ff-4a90-a0e0-37d68d88fa6b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("ENCODED_NODE_USER_ID",null);
tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("SAML",null);
tC.setPropertyValue("expectErrType",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="1de7ab16-bf7b-4512-ae11-1599f01163bd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID",callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID",callTC.getPropertyValue("NODE_USER_ID"));
if (tP.getPropertyValue("versionMinor")=="06" || tP.getPropertyValue("versionMinor")=="07"){
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			}else{
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			}
tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));
tC.setPropertyValue("expectErrType",callTC.getPropertyValue("PolicyCreateResponseType"));
tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:ManageAccountConsent", "UTF-8"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="4285855e-3060-462c-b83f-1d458ec03956"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreateSinglePolicyPost_MAC");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_MAC" id="cbeadbfd-394a-4b1c-9e9a-4c96b103c67e"><con:settings/><con:config service="PolicyCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/Policy/{PolicyClass}" methodName="PolicyCreateSinglePolicyPost" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_MAC" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="7600.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" xmlns:dece="${#Project#coordinatorSchema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:ManageAccountConsent</dece:PolicyClass>
      <dece:Resource>urn:dece:accountid:org:dece:${#TestCase#NODE_ACCOUNT_ID}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#TestCase#nodeid}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#ENCODED_NODE_ACCOUNT_ID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="bf51df31-427c-436d-aab8-95c2f091660b">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreateSinglePolicyPost_MAC');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;
/*

def expXML = tStep.httpRequest.response.getResponseContent();
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/
tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                               contentLocation = value[0];
                                                
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="9df4ad07-5eae-44d6-bbbf-fa0607afb8ef">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_11018 - STSCreate - retailer - unamepasswd - Different users on save account share same node accountID - P2</con:value></con:property><con:property><con:name>sName</con:name><con:value>1_STS Create Tokentype unamepasswd - Payload</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>DC428B882C31FB8CE0401F0A07996D53</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>DC428B882C23FB8CE0401F0A07996D53</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>7600</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 400 Bad Request</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>829</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:DC428B882C23FB8CE0401F0A07996D53/Policy/urn:dece:type:policy:ManageAccountConsent</con:value></con:property><con:property><con:name>ENNODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD3CD43AEEE91F252E0401F0A079913BF</con:value></con:property><con:property><con:name>ENNODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD3CD44C830AA5460E0401F0A079913BD</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AManageAccountConsent</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADC428B882C23FB8CE0401F0A07996D53</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\STSAPI_Projects\7600.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AccountMergeTestRequest" searchProperties="true" id="1ed1186f-c5dd-457e-8f01-8a0cc98d07bb"><con:settings/><con:testStep type="groovy" name="Feed Data for the AccountMergeTest API" id="e55544f2-194d-400f-9b20-0f2f08c38bf1"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import dbUtils.dbAccount;
import dbUtils.dbUser;
import com.eviware.soapui.support.types.StringToStringMap

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//Set the Node Details
testCase.setPropertyValue("nodeid",CallingTCase.getPropertyValue("nodeid"));


//Surviving and Retiring Account Details
testCase.setPropertyValue("SurvivingAccountID",CallingTCase.getPropertyValue("SurvivingAccountID"));
testCase.setPropertyValue("RetiredAccountID",CallingTCase.getPropertyValue("RetiredAccountID"));
if (testProject.getPropertyValue("versionMinor")=="06")
{
	testCase.setPropertyValue("encodedSurvivingAccountID",URLEncoder.encode(CallingTCase.getPropertyValue("SurvivingAccountID"),"UTF-8"));
	testCase.setPropertyValue("encodedRetiredAccountID",URLEncoder.encode(CallingTCase.getPropertyValue("RetiredAccountID"),"UTF-8"));
}
else if (testProject.getPropertyValue("versionMinor")=="02")
{
	testCase.setPropertyValue("encodedSurvivingAccountID",CallingTCase.getPropertyValue("SurvivingAccountID"));
	testCase.setPropertyValue("encodedRetiredAccountID",CallingTCase.getPropertyValue("RetiredAccountID"));
}

//User Details for Merging two Accounts
testCase.setPropertyValue("user1Status",CallingTCase.getPropertyValue("user1Status");
testCase.setPropertyValue("mergeUser1",CallingTCase.getPropertyValue("mergeUser1"));
testCase.setPropertyValue("user2Status",CallingTCase.getPropertyValue("user2Status");
testCase.setPropertyValue("mergeUser2",CallingTCase.getPropertyValue("mergeUser2"));
testCase.setPropertyValue("user3Status",CallingTCase.getPropertyValue("user3Status");
testCase.setPropertyValue("mergeUser3",CallingTCase.getPropertyValue("mergeUser3"));
testCase.setPropertyValue("user4Status",CallingTCase.getPropertyValue("user4Status");
testCase.setPropertyValue("mergeUser4",CallingTCase.getPropertyValue("mergeUser4"));
testCase.setPropertyValue("user5Status",CallingTCase.getPropertyValue("user5Status");
testCase.setPropertyValue("mergeUser5",CallingTCase.getPropertyValue("mergeUser5"));
testCase.setPropertyValue("user6Status",CallingTCase.getPropertyValue("user6Status");
testCase.setPropertyValue("mergeUser6",CallingTCase.getPropertyValue("mergeUser6"));

//Set the SAML Details of the Full Users to the AccountMergeTest API

def headers = new StringToStringMap()
headers.put("Authorization","SAML2 assertion="+ CallingTCase.getPropertyValue("survivingAccountUserAssertion"));
headers.put("Authorization","SAML2 assertion="+ CallingTCase.getPropertyValue("RetiredAccountUserAssertion"));

testRunner.testCase.getTestStepByName("AccountMergeTest_API").testRequest.setRequestHeaders(headers);

//Set the Expected Value
testCase.setPropertyValue("expectErrTypeAccountMergeTest",CallingTCase.getPropertyValue("expectErrTypeAccountMergeTest"));
</script></con:config></con:testStep><con:testStep type="groovy" name="pem set for AccountMergeTest_API" id="ff916405-df6f-46b9-a011-a6689d00989e">
        <con:settings/>
        <con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase    = testRunner.getTestCase();
def testSuite   = testCase.getTestSuite();
def testProject = testSuite.getProject();

String keyStorePath  = "";
String keyStoreAlias = "";
String nodeId = testCase.getPropertyValue("nodeid");

RestTestRequestStep testStep = testCase.getTestStepByName("AccountMergeTest_API");

//String keyStorePath = testCase.getPropertyValue("KeyStorePath");
//String keyStoreAlias = testCase.getPropertyValue("notValidExpiredNode");

switch (nodeId) {
	case "0799":
		keyStorePath = "C:\\DECE\\certs\\0799_concat.pem";
	break;
	case "0798":
		keyStorePath = "C:\\DECE\\certs\\0798_concat.pem";
	break;
	case "0701":
		keyStorePath = "C:\\DECE\\certs\\0701_concat.pem";
	break;
	case "0702":
		keyStorePath = "C:\\DECE\\certs\\0702_concat.pem";
	break;
	case "500500":
		keyStorePath = "C:\\DECE\\certs\\500500.pem";
	break;
	case "222312":
		keyStorePath = "C:\\DECE\\certs\\222312_concat.pem";
	break;
	case "222333":
		keyStorePath = "C:\\DECE\\certs\\222333_concat.pem";
	break;
	case "222332":
		keyStorePath = "C:\\DECE\\certs\\222332_concat.pem";
	break;
	case "222334":
		keyStorePath = "C:\\DECE\\certs\\222334_concat.pem";
	break;
	case "222335":
		keyStorePath = "C:\\DECE\\certs\\222335_concat.pem";
	break;
	case "222336":
		keyStorePath = "C:\\DECE\\certs\\222336_concat.pem";
	break;
	case "222337":
		keyStorePath = "C:\\DECE\\certs\\222337_concat.pem";
	break;
	case "222338":
		keyStorePath = "C:\\DECE\\certs\\222338_concat.pem";
	break;
	case "222339":
		keyStorePath = "C:\\DECE\\certs\\222339_concat.pem";
	break;
	case "222340":
		keyStorePath = "C:\\DECE\\certs\\222340_concat.pem";
	break;
	}
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);

soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config>
      </con:testStep><con:testStep type="restrequest" name="AccountMergeTest_API" id="ed28c5b3-0007-40cc-849a-38beaea556d6"><con:settings/><con:config service="AccountMergeTest" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{SurvivingAccountID}/Merge/Test/{RetiredAccountID}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AccountMergeTest_API" mediaType="application/xml" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="SurvivingAccountID" value="${#TestCase#SurvivingAccountID}"/>
  <con:entry key="RetiredAccountID" value="${#TestCase#RetiredAccountID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="26183098-d0ae-4f26-b4bb-e416676cf6a4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('AccountMergeTest_API');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="d8f0ba87-2757-4ec7-ac6d-427210632ea1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def url       = context.expand( '${#Project#Provision_HostName}' );
//def urnacct   = tP.getPropertyValue("urnaccount");
//def acct      = tC.getPropertyValue("nodeaccountid");
//def urnnode   = tP.getPropertyValue("urnNode");

//def sh            = tC.getPropertyValue("streamhandleFULL");
//def nodeid        = tC.getPropertyValue("nodeid");
//def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = context.expand( '${#TestCase#expectErrTypeAccountMergeTest}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The supplied country code is invalid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code cannot be null.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "API call not authorized";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:UserNotActive";
	errorReason = "User is not active";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

     case "RESOURCE_STATUS_NOT_ALLOWED":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:ResourceStatusElementNotAllowed";
		errorReason = "Resource Status Element Not Allowed";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceStatusElementNotAllowed";
	break;

	
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

	assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
	
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	accountid     = urlStr.substring(lastColon + 1);
	//streamidFULL = urlStr.substring(lastSlash + 1);

	//this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

	tC.setPropertyValue("ACCID",accountid);
	//tC.setPropertyValue("streamhandleFULL",streamidFULL);
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:properties><con:property><con:name>SurvivingAccountID</con:name><con:value/></con:property><con:property><con:name>RetiredAccountID</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyGet" searchProperties="true" id="23d09377-9e3c-47e0-92cd-8d7e2ed8d6fd"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="3f9a5121-1ba4-4ce7-9098-b2a7278fb180"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("ENCODED_NODE_USER_ID",null);
tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("SAML",null);
tC.setPropertyValue("expectErrType",null);
tC.setPropertyValue("policyCLASS",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="21cf2586-d1ed-4fdc-832a-472a816d6528"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("NODE_USER_ID",callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID",callTC.getPropertyValue("NODE_ACCOUNT_ID"));
if (tP.getPropertyValue("versionMinor")=="06" || tP.getPropertyValue("versionMinor")=="07"){
	
			tC.setPropertyValue("ENCODED_NODE_USER_ID", URLEncoder.encode("urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"), "UTF-8"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			log.info ""+URLEncoder.encode("urn:dece:type:policy:"+callTC.getPropertyValue("POLICY_CLASS"), "UTF-8");
			tC.setPropertyValue("policyClass",URLEncoder.encode("urn:dece:type:policy:"+callTC.getPropertyValue("POLICY_CLASS"), "UTF-8"));
			
			
			}else{
				tC.setPropertyValue("ENCODED_NODE_USER_ID", "urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			tC.setPropertyValue("policyClass","urn:dece:type:policy:"+callTC.getPropertyValue("POLICY_CLASS"));
			}

tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));
tC.setPropertyValue("expectErrType",callTC.getPropertyValue("PolicyGetResponseType"));


if (tC.getPropertyValue("expectErrType") == null ||
	tC.getPropertyValue("expectErrType") == "") {
		tC.setPropertyValue("expectErrType","SUCCESS");
}




</script></con:config></con:testStep><con:testStep type="groovy" name="Set Pem" id="eaa96ed5-3cca-4156-8a09-c54bea8b60f0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("Policy Get");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="Policy Get" id="10fe7e27-0ca1-4b5b-900d-075f1886f604"><con:settings/><con:config service="PolicyCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="UserPolicyGET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Policy Get" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="7600.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" xmlns:dece="http://www.decellc.org/schema/2010/10/dece" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:EndUserLicenseAgreement</dece:PolicyClass>
      <dece:Resource>urn:dece:userid:org:dece:${#Project#NODEUSERID}</dece:Resource>
      <dece:RequestingEntity>urn:dece:userid:org:dece:${#Project#NODEUSERID}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#Project#NODEUSERID}">
            <dece:Value>active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#ENCODED_NODE_USER_ID}"/>
  <con:entry key="PolicyClass" value="${#TestCase#policyClass}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#ENCODED_NODE_ACCOUNT_ID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="3764bed9-292d-4b3e-8638-5dd84e1225de">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('Policy Get');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                                contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);


 </script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="3bb99271-32ca-4459-9ddc-4ca05ee135c6">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def XMLbody    = tC.getPropertyValue("XMLbody");
def httpStatus = tC.getPropertyValue("httpStatus");

String policyWasFound = "false";
String xmlPolicyClass = "";
String tcPolicyClass  = tC.getPropertyValue("policyClass");

/*
*  We can assume that if we get returned an HTTP status 
*  of 'HTTP/1.1 200 OK' the policy was found.  However,
*  it is never a bad idea to doublecheck.
*/

/*
*  The body should not be null...something should be
*  there.
*/
assert XMLbody.size() > 0;

if (XMLbody != null) {
                def myXML = new XmlSlurper().parseText(XMLbody);

                xmlPolicyClass = myXML.Policy[0].PolicyClass.text();
}

log.info "xmlPolicyClass [$xmlPolicyClass] - tcPolicyClass[$tcPolicyClass]";
                                
if (httpStatus == "HTTP/1.1 200 OK" || xmlPolicyClass == tcPolicyClass) {
                policyWasFound = "true";
                def PolicyID = context.expand( '${#TestCase#XMLbody#declare namespace ns1=\'http://www.decellc.org/schema/2012/12/coordinator\'; //ns1:PolicyList[1]/ns1:Policy[1]/@PolicyID}' )
                log.info "================="+PolicyID
                tC.setPropertyValue("PolicyID",PolicyID);
}


tC.setPropertyValue("policyExists", policyWasFound);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Return policyId" id="db2d7a86-6720-4405-a764-6b8d396ae082"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("PolicyID",tC.getPropertyValue("PolicyID"));

</script></con:config></con:testStep><con:properties><con:property><con:name>NODE_USER_ID</con:name><con:value>D84127385A77AB9FE0401F0A0799779D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>D841235B02690A67E0401F0A05995219</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>7600</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVdbc6pKE333V1jux5ThoqhYO6kaLhKMqFy8vnyFw4gogjIgyK8/A26NZif77PM9pMw0PT2ruxfNmp/Y3vtsF2CMotgLg6oqvdT+10A0z3HtRp1r20y9ybf5+qrRseuw1aLXbMu2uRaqVVWME6QGOLaD+KXG0kyjTjfqDG/RXJdpdDn6mW63lrXqFEWYhCYuz3Stmu39AHfLY19qSRR0Qxt7uBvYe4S7MeyaQBt0iWfXvmKqvf68oCwPjF43cXzoUhR8dhBEvg+fYbinflIPPj8d3DU9N7DjJEK/znTwS+3X3jRNn9PGcxi5FEvTNEXzFPFxsOf+qL1WrpuRowbr8LIW7SAMPGj7Xm4XoDQUb0KnCnw3jLx4s/8mNEMxdBG6jjJYh0wz+FGjPg4o0f1lpAeQEbbreGMz12AGWqMIBRBVJ4b6Uvvxdx287LUiO8DrMNrjT+v/BgkFJ+SHB+TU8TWzK7q/j/hFuV5/IthVA+gn2DuhYUGTgw0Rro4jtPaygYcJ+RxcLdtfzfCVYQj+l5b8pO5xEtjUF5WRPBfh+P/p132vLlGmtp+gV9sMBHfXbPPnBuwvcl7XLKfZMuwx33wpIdw7X0DdWv1r/ZmoN1792rSd77DPOD3JT89j+riF4WIXQR3kST4Yj9KhstrzDS7ghe0CurTpjxWVbaKDcE4Yhl/uUqHVlyQ3cHuC9F5Zb8eJZybaiUmpPdSDzrH/JMFjzO5yzo4P5lv/CZ3W6ZA/SUKeqcF+8AYGa6+PBAuu7SdHbqkKd4zdviKCyiydthlT5xNjn6s9Lj5R+OUjp/scirze0blMsvh/ztG8ZMf2bSEWk2JNXs8YvWqqKiW5KIKz6YJUFYBL/rZgSAp93Ow8hU9pAeh6D0ii4G/lgQZ2CmAmsrDRxOlUy8Qc9AV3OCUbrQrwl4JmyKmULqSprr/J6cZylOl5pfjJMpeHGsDlZnGjyYY8lQxL1jQQXmyZJq2UbKuZWqrqC6lCAkhydsgdhY+RknmQVTnN5NiFySXL+ZTYe+fBfnhaWbKviZoimkfFVFcNSZf7wFjMINtLyN58sD+ElcVEuNvUP6AtQL2UJmeCXLN2qWZN2KFk2KXNerRpqtLXdJyKepmVUpHT/nSSf9RCFDTR2cuZbIHxpRbQEntDejnvY3vGBZoBUsktN7/LqTO6AtF0Oq2Il1oN5NSQjcmwpxlqKoPSJsmpj1fscLNSNifY0LO+Bbb3jRF1edYLyPPAOMEzd6zYSg+s9lMGNowN9DjPnoepu+ykkr7ov4dLlYQZAl0WBB0QQDQoUiP1F8BAmHKjg8ezHhqse+EebaKKxoTvu1Oe0R2vMXLHwxknrXftseKNG7azoVQfstvGDqgqct6ZjW47xoIypMDLW6P3yRx50SKPh5zOtLwOVzFmyWQuhX7beZsvJu9P2QLq1mhsTmbjPMuGx20n9+O3kfAWmX1NckdDhMYYPlG03ROsjsSJi7ct4dPaoBFXAa4mAKBsXVf2CIGFt+2FhG+GJhPyAk1MFXEmKiZQlCdZFSRdX/c2zBgq02TCDDVVdnxSpvNibviVpShIpFO0PVseFmyPXlrAKYPpTbnn6hPuqT9HS33oW9MYpIfpOmAYWjnob2stdaFWMMBRU1Mgb5FQSVQwsUeHPp29T1s0c9Qdv2/yYNLITHaXjTbu8rxzyZxwl4u7V2dhAX9q3XFMJRSbVXRLNjTQubxvmaZOGoYP99lhtYeZZJGelZtDS5CNnk5PMkkC7xcbtgCb4UUubzVRLvdXQKbZhBan1XyDF8HQG1lyQkib3NFlu2Lpf+VYQbHKI8eOItDBZ47JF47JYH18UjsSg7mWeMCz1BUU+ai3p4M+f6D1+WBXEZ56lBt7fnMUdFLr/WnGnNP2ZqvPZrwqbcSnYL3YNFaxQNs51FF/11Y8YycFraZ/1gaazk08yj/TW3RM8aAyVJlAbsR5j+Kj5EnYL719njea7GQ/NpOTOrHfMXPerI4zPt2O31oUFSlnLm8vT3pvHsLF5TvyeUjejJcxSt0P2IcJfNVeZrLaIhhfl8V3WJWqPfJxtOM/67jC4jn1denaPRRiEMcoiGuvxa5Cw3UTovQ8p0u+nJe11GkybLvR4UC7DQS+J9NNmunRgG7zfLvNS1exd0HxCaIYBmuvOKuQs5eP9Z8Bwn0Xo8BBUf0UJnCDcO0PEYt6VdXAICokDDCyQiKXW1yD7Ygdpg1anAQIYNDmANdpsoIosqDH1KrDMB4FowisYxQ9SuXOg1Q2EPQOHir0dCEqMFEVOCYlOdqnJPaZ55P9HKCEKO6oEL1dttnhKOztDz4qAFP70El89HzYHMoCUfjyy9ZtiEtru0XTpdr5Nr/Pz66lID6OVzjgIhkBkXaiL0R/85rJtxkzzH3G1/AgcbxC1JC6xpEHL0geH33QpeDJjStFSlfMN9fPhoew1OeMbic5Jw/eGH+7ExFJTUTX67UhR/v5+JycTknZgnYhKCMSnmIoukWZCCZEFZ6tcIcC6haC+itBfkP96eSb/RFfEm8CMyZv854Qplou/+I2ZiJc3MZUQvjsb696D0eSusUoi7+yiT65tBWI/3ivg11Y+BHzmPykYeR8tOuLWHfnkDyL8eUFbrEq5Pf5G1bAkIT1yAgLo/vgXwX46vBH463INywxYdMqidH3T6rFbHqp2RCGSRCrUq003M/LEmd8PqDuh9NvYUoB/OtGk+FvbzRzbWCSybW3azdf79+d615JF0ju8sS/xPJSy8jlnBweuHfz+RfA30Z0gxNotsXToNW+jWiO5zmW4W8FfMjk9Tfz75a7mn5+H17/AQ==</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>POLICY_ID</con:name><con:value/></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_ 20008 - SAMLExchange - retailer - saml2 - FORBIDDEN - Active full user - with deleted ULC</con:value></con:property><con:property><con:name>sName</con:name><con:value>STS Create and SAML Exchange - FUNC</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 404 Not Found</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>837</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AUserLinkConsent</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<PolicyList xmlns="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Policy PolicyID="urn:dece:policyid:org:dece:D8412DEC2C19E6E5E0401F0A059962B6">
      <PolicyClass>urn:dece:type:policy:UserLinkConsent</PolicyClass>
      <Resource>urn:dece:userid:org:dece:D84127385A77AB9FE0401F0A0799779D</Resource>
      <RequestingEntity>urn:dece:org:org:dece:7600</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreatedBy="urn:dece:userid:org:dece:D84127385A77AB9FE0401F0A0799779D" CreationDate="2013-03-19T05:14:46.000Z">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
</PolicyList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>952</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyExists</con:name><con:value>true</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD84127385A77AB9FE0401F0A0799779D</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD841235B02690A67E0401F0A05995219</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\ISC_Nodes\7600.pem</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>urn:dece:policyid:org:dece:D8412DEC2C19E6E5E0401F0A059962B6</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5935459c-5982-4cb1-9974-1d4d88038a65</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9bbb88e5-07dd-4d4f-ba3c-1c734ce9be3a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserUpdate" searchProperties="true" id="16f91eb6-d036-4044-a104-3416700f4139" disabled="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="9ecbac18-bd7a-4df2-b9d2-c9fb4bc9817c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("ResponseType","SUCCESS");
tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID",null);
tC.setPropertyValue("ENCODED_NODE_USER_ID",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("userStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("SAML",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="dc3fbb0f-7f56-43ad-b37a-35c38bae3724"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("NODE_USER_ID",callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID",callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));
tC.setPropertyValue("expectErrType",callTC.getPropertyValue("PolicyDeleteResponseType"));

if (tP.getPropertyValue("versionMinor")=="06" || tP.getPropertyValue("versionMinor")=="07"){
			tC.setPropertyValue("ENCODED_NODE_USER_ID", URLEncoder.encode("urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"), "UTF-8"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
				tC.setPropertyValue("PolicyID",URLEncoder.encode(""+callTC.getPropertyValue("PolicyID"), "UTF-8"));
			}else{
				tC.setPropertyValue("ENCODED_NODE_USER_ID", "urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			tC.setPropertyValue("PolicyID",""+callTC.getPropertyValue("PolicyID"));
			}
			
if (tC.getPropertyValue("expectErrType") == null ||
	tC.getPropertyValue("expectErrType") == "") {
		tC.setPropertyValue("expectErrType","SUCCESS");
}



</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="98cfc05d-90a4-4012-b47d-f1f449632e22"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("User_Update");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="User_Update" id="fb4ef185-64fb-4374-8300-43409b18034e"><con:settings/><con:config service="AddNewUser" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" methodName="UserUpdate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User_Update" mediaType="application/xml" sslKeystore="RET_concat.pem" id="0a991f82-1623-4495-b24c-9cc11cc37183" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:${#TestCase#userStatus}" xmlns="${#Project#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
        	<GivenName>${#TestCase#UserName}</GivenName>
		<SurName>Ganji</SurName>
	</Name>	
	<ContactInfo>
        <PrimaryEmail>			
	       <Value>testing@uvvutesting.biz</Value>
               <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</PrimaryEmail>
	<AlternateEmail>			
        <Value>rajuganji@gmail.com</Value>			
        <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</AlternateEmail>
	<!--Address>
		<PostalAddress>45999 Center Oak Plaza</PostalAddress>
		<PostalCode>20166</PostalCode>
		<Locality>Sterling</Locality>
		<StateOrProvince>NJ</StateOrProvince>
                <Country>UK</Country>
	</Address-->
	</ContactInfo>
        <Languages>
		<Language>de</Language>	
	</Languages>
       <DateOfBirth MeetsAgeOfMajority="true">1990-07-01</DateOfBirth>
      <LegalGuardian>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID}</LegalGuardian>
       <Credentials> 
               <Username>${#TestCase#UserName}</Username>	
                <Password>${#Project#password}</Password> 
	</Credentials>
<UserRecoveryTokens>
      <RecoveryItem>
		<QuestionID>1200</QuestionID>  
		<QuestionResponse>Turner</QuestionResponse>
       </RecoveryItem>
       <RecoveryItem>
		<QuestionID>1650</QuestionID>  
		<QuestionResponse>Phoenix</QuestionResponse>
       </RecoveryItem> 
</UserRecoveryTokens>
</User>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#TestCase#ENCODED_NODE_ACCOUNT_ID}"/>
  <con:entry key="UserID" value="${#TestCase#ENCODED_NODE_USER_ID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="b23cb4e2-2bd7-421f-91f3-9470fd51d912"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('User_Update');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="cd84f76e-b48f-43aa-8526-34731eaf10da"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );
//def urnacct   = tP.getPropertyValue("urnaccount");
//def acct      = tC.getPropertyValue("nodeaccountid");
//def urnnode   = tP.getPropertyValue("urnNode");

//def sh            = tC.getPropertyValue("streamhandleFULL");
//def nodeid        = tC.getPropertyValue("nodeid");
//def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#nodeIdRetailerforDeviceAuthToken}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#nodeIdRetailerforDeviceAuthToken}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = true;
		httpLocationHeader = false;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The supplied country code is invalid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code cannot be null.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "API call not authorized";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:UserNotActive";
	errorReason = "User is not active";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

		case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The user does not have permission to create a full-access user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The user does not have permission to create a user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
			expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBe18OrOlder";
			errorReason = "First User must be 18 years or older";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBe18OrOlder";
	break;


	case "NO_MNG_ACC_CNST":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
			errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The first user in a household account must be a full-access user.";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;
	
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

	assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
	
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	userid     = urlStr.substring(lastColon + 1);
	//streamidFULL = urlStr.substring(lastSlash + 1);

	//this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

	tC.setPropertyValue("NODE_USER_ID",userid);
	//tC.setPropertyValue("streamhandleFULL",streamidFULL);
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:testStep type="groovy" name="Return the NodeAccountId and NodeUserId to the Calling Test Case" disabled="true" id="c3f3c863-6773-4ad7-883e-f4966c2bcb43"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("NODE_USER_ID1",tC.getPropertyValue("NODE_USER_ID"));
callTC.setPropertyValue("SecondUserName",tC.getPropertyValue("SecondUserName"));
callTC.setPropertyValue("password",tP.getPropertyValue("password"));</script></con:config></con:testStep><con:properties><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpConnect</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_70082 - STSCreate - llasp - unamepasswd - for the user who updated to Standard from Basic</con:value></con:property><con:property><con:name>sName</con:name><con:value>STS Create Tokentype usernamepassword - Linked LASP Test Cases</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>D82F859216DC97E2E0401F0A05996483</con:value></con:property><con:property><con:name>SecondUserName</con:name><con:value>username_20130122_043244</con:value></con:property><con:property><con:name>SAML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>UserName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\DECE\RET_concat.pem</con:value></con:property><con:property><con:name>userStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5ff78eb3-d79f-4f4a-b9a8-5ec1c84f61c0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3d78db1c-105b-43a0-b406-6bb0f690c833</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662fb201-c4e7-401c-b10a-548ea13f5020</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyDelete" searchProperties="true" id="853b66b1-2855-4d93-8f16-0c0514cd932e"><con:settings/><con:testStep type="groovy" name="Set Pem" id="6a0df690-63bf-4b9c-ae59-c6c2ff9420bf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("Policy Delete");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="Policy Delete2" id="afcc2bf8-a03d-442a-bb54-83b79c3a8deb"><con:settings/><con:config service="PolicyCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="UserPolicy_DELETE" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Policy Delete2" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="RET_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" xmlns:dece="http://www.decellc.org/schema/2010/10/dece" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:EndUserLicenseAgreement</dece:PolicyClass>
      <dece:Resource>urn:dece:userid:org:dece:${#Project#NODEUSERID}</dece:Resource>
      <dece:RequestingEntity>urn:dece:userid:org:dece:${#Project#NODEUSERID}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#Project#NODEUSERID}">
            <dece:Value>active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#POLICY_ID}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Policy Delete" id="1ada6391-4467-46ac-b5a9-f8d47363030a"><con:settings/><con:config service="PolicyCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/Policy/{PolicyClass}" methodName="AccountPolicyDELETE" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Policy Delete" mediaType="application/xml" id="7926fdfc-6744-494b-ad3f-86dbd869e045" sslKeystore="RET_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="PolicyClass" value="${#TestCase#POLICY_ID}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="17df3acf-9f74-4983-9c2c-7ca80c9272ea">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def tStep  = tC.getTestStepByName('Policy Delete');

/*
*  Get the HTTP headers
*/
def status = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];

log.info status[0];
log.info contentLocation;
log.info connection[0];
log.info contentType[0];
log.info contentLength[0];

tC.setPropertyValue("status",status[0]);
tC.setPropertyValue("contentType", contentType[0]);
tC.setPropertyValue("contentLength", contentLength[0]);
//tC.setPropertyValue("contentLocation", contentLocation[0]);

if (contentLength[0].toInteger() > 0) {
	rawResp = new ByteArrayOutputStream();
    def rawResp = tStep.httpRequest.response.getRawResponseData();
     strVal  = new String(rawResp);
      log.info strVal[0];

    int startAssert = strVal.indexOf("&lt;?xml version=\"1.0\" ");

	String XMLbody  = strVal.substring(startAssert, strVal.size());
     
	tC.setPropertyValue("XMLbody", XMLbody);
}</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers and save assertion" id="3d442766-d852-4dda-8d00-1ca77ae70830">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
def expectErrType = tC.getPropertyValue("expectErrType");
log.info(expectErrType);
def XMLbody       = tC.getPropertyValue("XMLbody");

boolean dobodyXML = true;
boolean doContentTypeHeader = true;
boolean doConnectionClose = false;
boolean doContentLocaton  = true;
boolean contentLengthZero = false;

String errorID     = "";
String errorReason = "";
String errorLink   = "";
String expectHTTPstatus = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";

if (expectErrType == "") {
	expectErrType = "SUCCESS";
}

this.log.info "expectErrType is $expectErrType";
switch (expectErrType) {
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 200 OK";
		expectHTTPcontenttype = "application/xml";
		contentLengthZero = true;
		doContentLocaton  = false;
		dobodyXML = false;
		
	break;
	case "FORBIDDEN":
	default:
		errorReason = "assertion_not_found";
		errorID = "urn:dece:errorid:org:dece:securitycontext:unauthorized";
		errorLink = "https://qa.q.uvvu.com:7001/deceerrors/error/error_response.html";
		orgRequest = "";
		doContentLocaton  = false;
		dobodyXML = true;
	break;
}

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("status");
assert tC.getPropertyValue("status") == expectHTTPstatus;

// Connection

if (doConnectionClose) {
	this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("connection");
	assert tC.getPropertyValue("connection") == expectHTTPconnection;
}


//Content-Length
/*if (contentLengthZero) {
	//assert tC.getPropertyValue("contentLength").toInteger() == 0;
} else {
	//assert tC.getPropertyValue("contentLength").toInteger() > 0;
}
	
//Content-Type
if (doContentTypeHeader) {
	assert tC.getPropertyValue("contentType") == expectHTTPcontenttype;
}

// Content-Location
if (doContentLocaton) {
	assert tC.getPropertyValue("contentLocation") != null;
	
	def b = tC.getPropertyValue("contentLocation").toURL();
	assert b.getPath().matches("");
	def parms = b.getPath().split("/");
	
	tC.setPropertyValue("assertionUUID",parms[parms.size() - 1]);
} else {
	assert tC.getPropertyValue("contentLocation") == null;
}

if (dobodyXML) {
	if (XMLbody.length() > 0) {
		def myXML = new XmlSlurper().parseText(XMLbody);

		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode: Expect[$errorID] Received: " + myXML.Error.@ErrorID.toString();
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason: Expect[$errorReason] Received: " + myXML.Error.Reason.toString();
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorReason: Expect[$errorLink] Received: " + myXML.Error.ErrorLink.toString();
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	} else {
		return false;
	}
} */</script></con:config>
      </con:testStep><con:properties><con:property><con:name>NODE_USER_ID</con:name><con:value>D84127385A77AB9FE0401F0A0799779D</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>D841235B02690A67E0401F0A05995219</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>POLICY_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:policyid:org:dece:E617180F360A7374E0401F0A05995FE1</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00011_US_UserGet_FUNC_YOUTH_SAU_Get_CHILD_Blocked_tou_P2</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Get_GeoProfile</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 404 Not Found</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>765</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD84127385A77AB9FE0401F0A0799779D</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD841235B02690A67E0401F0A05995219</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>urn%3Adece%3Apolicyid%3Aorg%3Adece%3AD8412DEC2C19E6E5E0401F0A059962B6</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:/certs/RET_concat.pem</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E6170EEF63CD2F20E0401F0A05994E39</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E608A05B1126BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ErrorList xmlns="http://www.decellc.org/schema/2013/06/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
    <Error ErrorID="urn:dece:errorid:org:dece:Policy:PolicyNotFound">
        <Reason Language="en">The policy was not found.</Reason>
        <OriginalRequest>https://qa.p.uvvu.com:7001/rest/1/07/Account/urn:dece:accountid:org:dece:E6170EEF63CD2F20E0401F0A05994E39/Policy/urn:dece:policyid:org:dece:E617180F360A7374E0401F0A05995FE1</OriginalRequest>
        <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/07/error/en/ErrorList.html#Policy:PolicyNotFound</ErrorLink>
    </Error>
</ErrorList>
]]></con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetPem" searchProperties="true" id="9eefa1a9-efcc-493d-a73f-76683cebfde6"><con:settings/><con:testStep type="groovy" name="Set Pem" id="6512c4b0-42ef-4467-b104-ffa33eace57b"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import org.apache.commons.lang.SystemUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def projectPath = groovyUtils.projectPath

def eNV = context.expand( '${#Project#ENV}' )

def propertiesPath = null;

if (System.properties['os.name'].toLowerCase().contains('windows')) 
	{
    		log.info "it's Windows OS!!";
    		File temp = new File( projectPath + "\\..\\..\\..\\Properties\\");
    		propertiesPath = temp.getCanonicalPath();
	} 
else 
	{
    		log.info "it's Linux OS!!";
    		File temp = new File(projectPath + "/../../../Properties/");
    		propertiesPath = temp.getCanonicalPath();
	}
	
log.info("Properties File Location : '" + propertiesPath+ "'");




def propMap=[:]
BufferedReader reader = new BufferedReader(new FileReader(propertiesPath + "/" + eNV +"project.properties"));

String line;
while ((line = reader.readLine()) != null)
      {
	       if (line.trim().length()==0) continue;
	       if (line.charAt(0)=='#') continue;
	
	       int delimPosition = line.indexOf("=");
	       String key = line.substring(0, delimPosition-0).trim();
	       String value = line.substring(delimPosition+1).trim();
	       propMap.put(key, value);
      }


if (System.properties['os.name'].toLowerCase().contains('windows')) 
      {
            log.info "it's Windows OS!!!";
            File temp = new File( projectPath + "\\..\\..\\..\\Certs\\" + eNV + "\\");
    		  certPath = temp.getCanonicalPath();      
      } 
else 
      {
            log.info "it's Linux OS!!!";
            File temp = new File(projectPath + "/../../../Certs/" + eNV + "/");
    		  certPath = temp.getCanonicalPath();
      }  
      
 log.info("Cert path: " + certPath );  
                  
def nodeId = context.expand( '${#TestCase#nodeid}' )

log.info "nodeId: "+nodeId;

 if (nodeId == "dece:cs")
       {
             nodeId = "dececs";
       }
 else if (nodeId == "coord:cs")
       {
             nodeId = "coordcs";
       }
 else
       {
             nodeId = nodeId;
       }


//log.info "~~~~~~~~~~~~" +nodeId
boolean imFine = true;
def pwd = null;
def certMatchesNodeID = context.expand( '${#Project#CertMatchesNodeID}' )
log.info("CertMatchesNodeID : '" + certMatchesNodeID + "'");
if (certMatchesNodeID == "YES")
{
		File f1 = new File(certPath+"/"+nodeId + "_concat.pem");
		File f2 = new File(certPath+"/"+nodeId + ".jks");
		File f3 = new File(certPath+"/truststore-"+nodeId + ".jks");
		File f4 = new File(certPath+"/"+nodeId + ".pem");

		log.info("F1 : '" + f1.getPath()+ "'");
		log.info("F2 : '" + f2.getPath()+ "'");
		log.info("F3 : '" + f3.getPath()+ "'");
		log.info("F4 : '" + f4.getPath()+ "'");
	
	// sets the certificate from the specific folder when the certname and NodeId are same
	  if(f1.exists()) 
             {
                   keyStorePath = certPath+"/"+nodeId + "_concat.pem";
                   pwd = "123"
                   log.info("F1 file exists!!!");
                   log.info("keyStorePath : '" + keyStorePath + "'");      
             }
	  else if(f2.exists())
             {
                  	keyStorePath = certPath+"/"+nodeId + ".jks";
                   	pwd = "abcd1234" 
                   	log.info("F2 file exists!!!");
                   log.info("keyStorePath : '" + keyStorePath + "'");          
             }
	  else if(f3.exists())
             {
                  	keyStorePath = certPath+"/truststore-"+nodeId + ".jks";
                   	pwd = "12elma";
				log.info("F3 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");
             }
	  else if(f4.exists()) 
             {
                   	keyStorePath = certPath+"/"+nodeId + ".pem";
                   	pwd = "123";
                   	log.info("F4 file exists!!!");
                   log.info("keyStorePath : '" + keyStorePath + "'");       
             }
	  else
             {
                  	log.info "No cert file is Found!!!";
                  	imFine = false;
             }
}
else
{
	//to get the certificate name from another property based on the nodeid property.
		
	
       def value = propMap.find{ it.value == nodeId }?.key
       def certName = testProject.getPropertyValue(value+"_cert");       
       log.info "cert name .... " + certName;

		File f1 = new File(certPath+"/"+certName + "_concat.pem");
		File f2 = new File(certPath+"/"+certName + ".jks");
		File f3 = new File(certPath+"/truststore-"+certName + ".jks");
		File f4 = new File(certPath+"/"+certName + ".pem");

		log.info("F1 : '" + f1.getPath()+ "'");
		log.info("F2 : '" + f2.getPath()+ "'");
		log.info("F3 : '" + f3.getPath()+ "'");
		log.info("F4 : '" + f4.getPath()+ "'");      
		     
       if(f1.exists()) 
             {
             		
				keyStorePath = certPath+"/"+certName + "_concat.pem";
				pwd = "123";
				log.info("F1 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");     
             }
       else if(f2.exists())
             {
				keyStorePath = certPath+"/"+certName + ".jks";
				pwd = "abcd1234";
				log.info("F2 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");           
             }
       else if(f3.exists())
             {
                  	keyStorePath = certPath+"/truststore-"+certName + ".jks";
                   	pwd = "abcd1234";
                   	log.info("F3 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");
                   	         
             }
       else if(f4.exists()) 
             {
				keyStorePath = certPath+"/"+certName + ".pem";
				pwd = "123";  
				log.info("F4 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");     
             }
       else
			{
			log.info "No cert file is Found!!!";
			imFine = false;
			}                             
}


if(imFine)
{
      def callTSname = testCase.getPropertyValue("sName");
      def callTCname = testCase.getPropertyValue("tName");
      
      def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
      
      callTC.setPropertyValue("keyStorePath","$keyStorePath");
      testCase.setPropertyValue("keyStorePath","$keyStorePath");
      
      SoapUI.settings.setString( SSLSettings.KEYSTORE, keyStorePath );
      SoapUI.settings.setString( SSLSettings.KEYSTORE_PASSWORD, pwd);
      log.info 'pwd='+pwd
}

assert imFine == true;
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set Pem" disabled="true" id="e67f8294-fae8-473e-af1e-f2345ab28bc8"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String nodeId = testCase.getPropertyValue("nodeid");

log.info "nodeId: "+nodeId;

if (nodeId == "dece:cs")
	{
		nodeId = "dececs";
	}
else if (nodeId == "coord:cs")
	{
		nodeId = "coordcs";
	}
else
	{
		nodeId = nodeId;
	}
String certPath = testProject.getPropertyValue("certPath");

File f1 = new File(certPath+"/"+nodeId + "_concat.pem");
File f2 = new File(certPath+"/"+nodeId + ".jks");
File f3 = new File(certPath+"/truststore-"+nodeId + ".jks");

boolean imFine = true;

if(f1.exists()) 
	{
		keyStorePath = certPath+"/"+nodeId + "_concat.pem";
		pwd = "123"	
	 }
 else if(f2.exists())
	 {
	 	keyStorePath = certPath+"/"+nodeId + ".jks";
		pwd = "abcd1234"	
	 }
 else if(f3.exists())
	 {
	 	keyStorePath = certPath+"/truststore-"+nodeId + ".jks";
		pwd = "abcd1234"	
	 }
 else
	 {
	 	log.info "Error!";
	 	imFine = false;
	 }


if(imFine)
{
	log.info "keyStorePath: "+keyStorePath;
	def callTSname = testCase.getPropertyValue("sName");
	def callTCname = testCase.getPropertyValue("tName");
	
	def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
	
	callTC.setPropertyValue("keyStorePath","$keyStorePath");
	
	SoapUI.settings.setString( SSLSettings.KEYSTORE, keyStorePath );
	SoapUI.settings.setString( SSLSettings.KEYSTORE_PASSWORD, pwd);
	log.info 'pwd='+pwd
}

assert imFine == true;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DEV</con:value></con:property><con:property><con:name>tName</con:name><con:value>Account_Delete_API_Device</con:value></con:property><con:property><con:name>sName</con:name><con:value>CommonTestSteps</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Gits\Certs\QALP1/DEV_concat.pem</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Rename Test Cases" searchProperties="true" id="e2c4e4ac-425a-4711-bf15-1e0925e0b8a1"><con:settings/><con:testStep type="groovy" name="Rename Test Cases from external" id="bf86a2d2-4144-4811-a43f-1013547ebc99"><con:settings/><con:config><script>import java.io.*;

def testCase  = testRunner.getTestCase();
def testSuite = "STS Create Tokentype unamepasswd - Portal:CS";

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

BufferedReader br = new BufferedReader(new FileReader("C:\\Users\\raju.ganji\\Desktop\\TCs.txt"));

def newTestCaseName;

log.info "TCCount:"+TCCount;

for(i = 0; i &lt;= TCCount - 1; i++)
{	
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);

	newTestCaseName = br.readLine();
	log.info "Input Test Case Name: "+newTestCaseName;
	
	//if(targetTestCase.isDisabled() == false)
	//{
		targetTestCase.setFailOnError(true);
		targetTestCase.name = newTestCaseName;	
	//}

}</script></con:config></con:testStep><con:testStep type="groovy" name="Rename Test Cases internal" id="4380f443-dbba-469e-a609-36e3fa51657a"><con:settings/><con:config><script>//Copyright (c) 2010 Bhavin Bharat Joshi - Neustar, Inc.

import java.io.*;

//TestCase
def testCase  = testRunner.getTestCase();

//Get Arguments
//def testSuite = testCase.getPropertyValue("TestSuite"); 
def testSuite = "STS Tokentype DeviceAuthToken - Device Role";

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

def TCNum = 13;

//BufferedWriter bufferedWriter = null;
//bufferedWriter = new BufferedWriter(new FileWriter("c:\\DiscreteMediaLeaseCreateQuestions.txt"));

def oldTestCaseName;
def newTestCaseName;

for(i = 0; i &lt;= TCCount - 1; i++)
{	
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
	//if(targetTestCase.isDisabled() == false)
	//{
		//targetTestCase.setFailOnError(true);
		oldTestCaseName = TCList[i].name;
		newTestCaseName = oldTestCaseName.replace("Copy of ", "");	
		targetTestCase.name = newTestCaseName;	
		TCNum = TCNum + 1;
		log.info "Done renaming Test Case '" + oldTestCaseName + "' to '" + newTestCaseName + "'";
	//}
	//else
	//{
	//	bufferedWriter.write(targetTestCase.name);
	//	bufferedWriter.newLine();
	//}
}

//if (bufferedWriter != null) {
	//bufferedWriter.flush();
     //bufferedWriter.close();
//}

log.info 'Woohoo!'</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AccountMergeRequest" searchProperties="true" id="789968d3-8176-4b31-8f47-431e3011758b"><con:settings/><con:testStep type="groovy" name="Feed Data for the AccountMerge API" id="80d70818-b5a8-4794-8ce0-8d82f461f03e"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import dbUtils.dbAccount;
import dbUtils.dbUser;
import com.eviware.soapui.support.types.StringToStringMap

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("sName");
def callTCasename = testCase.getPropertyValue("tName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//Set the Node Details
testCase.setPropertyValue("nodeid",CallingTCase.getPropertyValue("nodeid"));


//Surviving and Retiring Account Details
testCase.setPropertyValue("SurvivingAccountID",CallingTCase.getPropertyValue("survive_assertionAccountIdFULL"));
testCase.setPropertyValue("RetiredAccountID",CallingTCase.getPropertyValue("retire_assertionAccountIdFULL"));
if (testProject.getPropertyValue("versionMinor")=="06")
{
	testCase.setPropertyValue("encodedSurvivingAccountID",URLEncoder.encode(CallingTCase.getPropertyValue("survive_assertionAccountIdFULL"),"UTF-8"));
	testCase.setPropertyValue("encodedRetiredAccountID",URLEncoder.encode(CallingTCase.getPropertyValue("retire_assertionAccountIdFULL"),"UTF-8"));
}
else if (testProject.getPropertyValue("versionMinor")=="02")
{
	testCase.setPropertyValue("encodedSurvivingAccountID",CallingTCase.getPropertyValue("survive_assertionAccountIdFULL"));
	testCase.setPropertyValue("encodedRetiredAccountID",CallingTCase.getPropertyValue("retire_assertionAccountIdFULL"));
}

//User Details for Merging two Accounts
testCase.setPropertyValue("user1Status","active");
testCase.setPropertyValue("mergeUser1",CallingTCase.getPropertyValue("survive_assertionUserIdFULL"));
testCase.setPropertyValue("user2Status","active");
testCase.setPropertyValue("mergeUser2",CallingTCase.getPropertyValue("retire_assertionUserIdFULL"));

testCase.setPropertyValue("survive_assert","SAML2 assertion="+ CallingTCase.getPropertyValue("survive_assert"));
testCase.setPropertyValue("retire_assert","SAML2 assertion="+ CallingTCase.getPropertyValue("retire_assert"));
//Set the Expected Value
testCase.setPropertyValue("expectErrTypeAccountMerge",CallingTCase.getPropertyValue("expectErrTypeAccountMerge"));
</script></con:config></con:testStep><con:testStep type="groovy" name="pem set for AccountMerge_API" id="476e4efc-f319-4609-aa59-39cb705eb97a">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("AccountMerge");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config>
      </con:testStep><con:testStep type="restrequest" name="AccountMerge" id="5112a73a-602e-4296-8f8b-3bf52b94d139"><con:settings/><con:config service="AccountMerge" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{SurvivingAccountID}/Merge/{RetiredAccountID}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AccountMerge" mediaType="application/xml" postQueryString="false" sslKeystore="RET_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#retire_assert}"/>
  &lt;con:entry key="Authorization" value="${#TestCase#survive_assert}"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:AccountMerge xmlns:dece="${#Project#coordinatorSchema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/schema/md/v1.2/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2012/12/coordinator dece.xsd ">
<dece:UserReference ResourceDisposition="urn:dece:type:status:${#TestCase#user1Status}">${#TestCase#mergeUser1}</dece:UserReference>                
<dece:UserReference ResourceDisposition="urn:dece:type:status:${#TestCase#user2Status}">${#TestCase#mergeUser2}</dece:UserReference>                
</dece:AccountMerge>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="SurvivingAccountID" value="${#TestCase#encodedSurvivingAccountID}"/>
  <con:entry key="RetiredAccountID" value="${#TestCase#encodedRetiredAccountID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="8b0dbffb-cde9-43ff-b2ab-4d8ab9a34c14"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('AccountMerge');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="1d6adba7-5667-4993-a3d5-c0da8990549f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def url       = context.expand( '${#Project#Provision_HostName}' );
//def urnacct   = tP.getPropertyValue("urnaccount");
//def acct      = tC.getPropertyValue("nodeaccountid");
//def urnnode   = tP.getPropertyValue("urnNode");

//def sh            = tC.getPropertyValue("streamhandleFULL");
//def nodeid        = tC.getPropertyValue("nodeid");
//def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = context.expand( '${#TestCase#expectErrTypeAccountMerge}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = true;
		httpLocationHeader = false;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The supplied country code is invalid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code cannot be null.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "API call not authorized";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:UserNotActive";
	errorReason = "User is not active";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

     case "RESOURCE_STATUS_NOT_ALLOWED":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:ResourceStatusElementNotAllowed";
		errorReason = "Resource Status Element Not Allowed";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceStatusElementNotAllowed";
	break;

	
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

	assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
	
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	accountid     = urlStr.substring(lastColon + 1);
	//streamidFULL = urlStr.substring(lastSlash + 1);

	//this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

	tC.setPropertyValue("ACCID",accountid);
	//tC.setPropertyValue("streamhandleFULL",streamidFULL);
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>1.40. Account Merged Notice [Your UltraViolet account has been merged with another UltraViolet account]</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Notifications_Test Cases</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SurvivingAccountID</con:name><con:value>urn:dece:accountid:org:dece:DF7DD728D818E14DE0401F0A05997D5C</con:value></con:property><con:property><con:name>RetiredAccountID</con:name><con:value>urn:dece:accountid:org:dece:DF7DD728D87CE14DE0401F0A05997D5C</con:value></con:property><con:property><con:name>encodedSurvivingAccountID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADF7DD728D818E14DE0401F0A05997D5C</con:value></con:property><con:property><con:name>encodedRetiredAccountID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADF7DD728D87CE14DE0401F0A05997D5C</con:value></con:property><con:property><con:name>user1Status</con:name><con:value>active</con:value></con:property><con:property><con:name>mergeUser1</con:name><con:value>urn:dece:userid:org:dece:DF7DD728D828E14DE0401F0A05997D5C</con:value></con:property><con:property><con:name>user2Status</con:name><con:value>active</con:value></con:property><con:property><con:name>mergeUser2</con:name><con:value>urn:dece:userid:org:dece:DF7DD728D88AE14DE0401F0A05997D5C</con:value></con:property><con:property><con:name>expectErrTypeAccountMerge</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\User_Notifications\RET_concat.pem</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>survive_assert</con:name><con:value>SAML2 assertion=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</con:value></con:property><con:property><con:name>retire_assert</con:name><con:value>SAML2 assertion=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</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>600743e6-779f-43ea-8db9-37ac0891f773</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AccountMergeUndoRequest" searchProperties="true" id="bb7e7d8b-e8e3-4dc9-9073-6b2a9c8ac469"><con:settings/><con:testStep type="groovy" name="Feed Data for the AccountMergeUndo API" id="979f1903-1ef6-4a21-b7ed-3c829bec85dc"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import dbUtils.dbAccount;
import dbUtils.dbUser;
import com.eviware.soapui.support.types.StringToStringMap

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//Set the Node Details
testCase.setPropertyValue("nodeid",CallingTCase.getPropertyValue("nodeid"));


//Surviving and Retiring Account Details
testCase.setPropertyValue("SurvivingAccountID",CallingTCase.getPropertyValue("SurvivingAccountID"));
if (testProject.getPropertyValue("versionMinor")=="06")
{
	testCase.setPropertyValue("encodedSurvivingAccountID",URLEncoder.encode(CallingTCase.getPropertyValue("SurvivingAccountID"),"UTF-8"));
}
else if (testProject.getPropertyValue("versionMinor")=="02")
{
	testCase.setPropertyValue("encodedSurvivingAccountID",CallingTCase.getPropertyValue("SurvivingAccountID"));
}


//Set the SAML Details of the Full Users to the AccountMergeTest API

def headers = new StringToStringMap()
headers.put("Authorization","SAML2 assertion="+ CallingTCase.getPropertyValue("survivingAccountUserAssertion"));

testRunner.testCase.getTestStepByName("AccountMerge").testRequest.setRequestHeaders(headers);

//Set the Expected Value
testCase.setPropertyValue("expectErrTypeAccountMergeUndo",CallingTCase.getPropertyValue("expectErrTypeAccountMergeUndo"));
</script></con:config></con:testStep><con:testStep type="groovy" name="pem set for AccountMergeUndo_API" id="9d27ef5d-226b-4710-91da-6a452b364641">
        <con:settings/>
        <con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase    = testRunner.getTestCase();
def testSuite   = testCase.getTestSuite();
def testProject = testSuite.getProject();

String keyStorePath  = "";
String keyStoreAlias = "";
String nodeId = testCase.getPropertyValue("nodeid");

RestTestRequestStep testStep = testCase.getTestStepByName("AccountMergeUndo");

//String keyStorePath = testCase.getPropertyValue("KeyStorePath");
//String keyStoreAlias = testCase.getPropertyValue("notValidExpiredNode");

switch (nodeId) {
	case "0799":
		keyStorePath = "C:\\DECE\\certs\\0799_concat.pem";
	break;
	case "0798":
		keyStorePath = "C:\\DECE\\certs\\0798_concat.pem";
	break;
	case "0701":
		keyStorePath = "C:\\DECE\\certs\\0701_concat.pem";
	break;
	case "0702":
		keyStorePath = "C:\\DECE\\certs\\0702_concat.pem";
	break;
	case "500500":
		keyStorePath = "C:\\DECE\\certs\\500500.pem";
	break;
	case "222312":
		keyStorePath = "C:\\DECE\\certs\\222312_concat.pem";
	break;
	case "222333":
		keyStorePath = "C:\\DECE\\certs\\222333_concat.pem";
	break;
	case "222332":
		keyStorePath = "C:\\DECE\\certs\\222332_concat.pem";
	break;
	case "222334":
		keyStorePath = "C:\\DECE\\certs\\222334_concat.pem";
	break;
	case "222335":
		keyStorePath = "C:\\DECE\\certs\\222335_concat.pem";
	break;
	case "222336":
		keyStorePath = "C:\\DECE\\certs\\222336_concat.pem";
	break;
	case "222337":
		keyStorePath = "C:\\DECE\\certs\\222337_concat.pem";
	break;
	case "222338":
		keyStorePath = "C:\\DECE\\certs\\222338_concat.pem";
	break;
	case "222339":
		keyStorePath = "C:\\DECE\\certs\\222339_concat.pem";
	break;
	case "222340":
		keyStorePath = "C:\\DECE\\certs\\222340_concat.pem";
	break;
	}
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);

soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config>
      </con:testStep><con:testStep type="restrequest" name="AccountMergeUndo" id="ff86e280-8efc-438f-a0f8-c455f69b9e1e"><con:settings/><con:config service="AccountMergeUndo" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{SurvivingAccountID}/Merge/Undo" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AccountMergeUndo" mediaType="application/xml" postQueryString="false"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SurvivingAccountID" value="${#TestCase#SurvivingAccountID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="355f30c0-6988-4a19-b98d-00eb17001332"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('AccountMergeUndo');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="7b43b087-c6b1-41fa-9958-b3af8215ddd8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def url       = context.expand( '${#Project#Provision_HostName}' );
//def urnacct   = tP.getPropertyValue("urnaccount");
//def acct      = tC.getPropertyValue("nodeaccountid");
//def urnnode   = tP.getPropertyValue("urnNode");

//def sh            = tC.getPropertyValue("streamhandleFULL");
//def nodeid        = tC.getPropertyValue("nodeid");
//def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = context.expand( '${#TestCase#expectErrTypeAccountMergeTest}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The supplied country code is invalid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code cannot be null.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "API call not authorized";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:UserNotActive";
	errorReason = "User is not active";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

     case "RESOURCE_STATUS_NOT_ALLOWED":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:ResourceStatusElementNotAllowed";
		errorReason = "Resource Status Element Not Allowed";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceStatusElementNotAllowed";
	break;
	case "FORBIDDEN_SURVIVING_ACCOUNT_HAS_BEEN_MODIFIED":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:SurvivingAccountHasBeenModified";
		errorReason = "Changes have been made to the Surviving Account since the Merge happened";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#SurvivingAccountHasBeenModified";
	break;

	
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

	assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
	
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	accountid     = urlStr.substring(lastColon + 1);
	//streamidFULL = urlStr.substring(lastSlash + 1);

	//this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

	tC.setPropertyValue("ACCID",accountid);
	//tC.setPropertyValue("streamhandleFULL",streamidFULL);
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>600743e6-779f-43ea-8db9-37ac0891f773</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>424ec930-ca02-4bff-8ed5-51aa458ee303</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateULC_nodes" searchProperties="true" id="3217055c-57f5-4f6b-8986-5c97d330161d"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="7b00abc6-17e9-4793-8beb-c38a75a236da"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("ENCODED_NODE_USER_ID",null);
tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("SAML",null);
tC.setPropertyValue("expectErrType",null);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="a0a81299-e499-4d96-8fe3-ee9125bfe1ac"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("NODE_USER_ID",callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID",callTC.getPropertyValue("NODE_ACCOUNT_ID"));

if (tP.getPropertyValue("versionMinor")=="06" || tP.getPropertyValue("versionMinor")=="07"){
			tC.setPropertyValue("ENCODED_NODE_USER_ID", URLEncoder.encode("urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"), "UTF-8"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			}else{
				tC.setPropertyValue("ENCODED_NODE_USER_ID", "urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			}
			
tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));
tC.setPropertyValue("expectErrType",callTC.getPropertyValue("PolicyCreateResponseType"));
tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:UserLinkConsent", "UTF-8"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="afad6394-18c1-41f0-834e-d5fd2a0de724"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreateSinglePolicyPost_ULC");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_ULC" id="8c721406-10ad-4003-9fcd-4043b3af0f90"><con:settings/><con:config service="PolicyCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateSinglePolicyPost" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_ULC" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="7600.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#coordinatorSchema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:UserLinkConsent</dece:PolicyClass>
      <dece:Resource>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#TestCase#nodeid}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

<dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:UserLinkConsent</dece:PolicyClass>
      <dece:Resource>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:7602</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

<dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:UserLinkConsent</dece:PolicyClass>
      <dece:Resource>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:7603</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

<dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:UserLinkConsent</dece:PolicyClass>
      <dece:Resource>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:7604</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#ENCODED_NODE_USER_ID}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#ENCODED_NODE_ACCOUNT_ID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="4ed4c6fb-f157-4d76-90cf-c2111034e717">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreateSinglePolicyPost_ULC');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;
/*

def expXML = tStep.httpRequest.response.getResponseContent();
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/
tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                               contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="7065e381-9693-46c0-afa3-f3f540ed93ee">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>tName</con:name><con:value>WithRightsLockerDataGet and MUC</con:value></con:property><con:property><con:name>sName</con:name><con:value>ISC_TestCases</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>D8BE7D11CB019805E0401F0A07992E11</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>D8BE7D11CAE49805E0401F0A07992E11</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>7600</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>connection</con:name><con:value>close</con:value></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D14403889CD0F3ECE0401F0A07992161/User/urn:dece:userid:org:dece:D14403889CDFF3ECE0401F0A07992161/Policy/urn:dece:type:policy:UserLinkConsent</con:value></con:property><con:property><con:name>policyId</con:name><con:value>urn:dece:type:policy:UserLinkConsent</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D8BE7D11CAE49805E0401F0A07992E11/User/urn:dece:userid:org:dece:D8BE7D11CB019805E0401F0A07992E11/Policy/urn:dece:type:policy:UserLinkConsent</con:value></con:property><con:property><con:name>ENNODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD3DD6C150D6CC4DCE0401F0A0799470D</con:value></con:property><con:property><con:name>ENNODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD3CD44C830AA5460E0401F0A079913BD</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AUserLinkConsent</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD8BE7D11CAE49805E0401F0A07992E11</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD8BE7D11CB019805E0401F0A07992E11</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\ISC_Nodes\7600.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateMUC_nodes" searchProperties="true" id="02e196fd-6a33-458f-a779-20bdcb8f65f6"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="4a1fa38b-4b5a-43bc-b4ac-c8b2cd422c62"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("ENCODED_NODE_USER_ID",null);
tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("SAML",null);
tC.setPropertyValue("expectErrType",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="78a51972-e97c-4fcc-a444-ae8c86a62bc6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("NODE_USER_ID",callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID",callTC.getPropertyValue("NODE_ACCOUNT_ID"));

if (tP.getPropertyValue("versionMinor")=="06" || tP.getPropertyValue("versionMinor")=="07"){
			tC.setPropertyValue("ENCODED_NODE_USER_ID", URLEncoder.encode("urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"), "UTF-8"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			}else{
				tC.setPropertyValue("ENCODED_NODE_USER_ID", "urn:dece:userid:org:dece:"+callTC.getPropertyValue("NODE_USER_ID"));
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			}
			
tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));
tC.setPropertyValue("expectErrType",callTC.getPropertyValue("PolicyCreateResponseType"));
tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:ManageUserConsent", "UTF-8"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="45db53d0-e287-4b60-a809-f9e6735e4f2f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreateSinglePolicyPost_MUC");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_MUC" id="a34ac438-f9e9-46e6-aa72-085a95955c04"><con:settings/><con:config service="PolicyCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateSinglePolicyPost" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_MUC" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="7600.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" xmlns:dece="${#Project#coordinatorSchema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:ManageUserConsent</dece:PolicyClass>
      <dece:Resource>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#TestCase#nodeid}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>

   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:ManageUserConsent</dece:PolicyClass>
      <dece:Resource>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:7602</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>

   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:ManageUserConsent</dece:PolicyClass>
      <dece:Resource>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:7603</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>

   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:ManageUserConsent</dece:PolicyClass>
      <dece:Resource>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:7604</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#ENCODED_NODE_USER_ID}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#ENCODED_NODE_ACCOUNT_ID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="517a95b3-ce83-437a-827d-5e49fdb10fa1">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreateSinglePolicyPost_MUC');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;
/*

def expXML = tStep.httpRequest.response.getResponseContent();
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/
tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                              contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="6a93b9aa-b6dc-4adf-983f-0d78466e7a19">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>tName</con:name><con:value>WithRightsLockerDataGet and MUC</con:value></con:property><con:property><con:name>sName</con:name><con:value>ISC_TestCases</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>D8BE7D11CB019805E0401F0A07992E11</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>D8BE7D11CAE49805E0401F0A07992E11</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>7600</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D8BE7D11CAE49805E0401F0A07992E11/User/urn:dece:userid:org:dece:D8BE7D11CB019805E0401F0A07992E11/Policy/urn:dece:type:policy:ManageUserConsent</con:value></con:property><con:property><con:name>ENNODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD3CD43AEEE91F252E0401F0A079913BF</con:value></con:property><con:property><con:name>ENNODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD3CD44C830AA5460E0401F0A079913BD</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AManageUserConsent</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD8BE7D11CB019805E0401F0A07992E11</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD8BE7D11CAE49805E0401F0A07992E11</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\ISC_Nodes\7600.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f2eeb936-13ad-4f02-a213-128d8a600f31</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="STS_API" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="96fdea5e-3165-42ad-86cd-31f66cb06840">
      <con:settings/>
      <con:testStep type="groovy" name="Establish Test Case Properties" id="89035e54-011b-4e78-8314-3066b20a7451">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("tokentype",null);
tC.setPropertyValue("audience",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);

tC.setPropertyValue("expectErrType","SUCCESS");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="d336e59f-097a-4d6b-a0ab-dad12dc87fd3">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def dbUtils;

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

def callTS = tP.getTestSuiteByName(callTSname);

//tP.setPropertyValue("audience",callTS.getPropertyValue("audience"));

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("username",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));

if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
{
	tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
	tC.setPropertyValue("audience",tP.getPropertyValue("audience"));
}
else
{
	tC.setPropertyValue("tokentype",URLEncoder.encode(tP.getPropertyValue("urntokenType_userpassword"), "UTF-8"));
	if(tP.getPropertyValue("audience")!=null){
	tC.setPropertyValue("audience",URLEncoder.encode(tP.getPropertyValue("audience"), "UTF-8"));
}
}

	</script></con:config>
      </con:testStep>
      
      
      
      
      <con:testStep type="groovy" name="Establish pem" id="94b59c95-ff72-47e3-9fd0-fd8d7afd897f">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("POST - STS");
RestTestRequestStep testStep1 = tC.getTestStepByName("GET - STS");

def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);</script></con:config>
      </con:testStep>
      
      <con:testStep type="restrequest" name="POST - STS" id="ce52285d-9dc0-4384-aaf1-5960e49fc5b6"><con:settings/><con:config service="STS" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/SecurityToken/SecurityTokenExchange" methodName="STSCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - STS" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="RET_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes" ?> 
  <Credentials xmlns="${#Project#coordinatorSchema}">
  <Username>${#TestCase#username}</Username> 
  <Password>${#TestCase#password}</Password> 
  </Credentials>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="audience" value="${#TestCase#audience}"/>
  <con:entry key="tokentype" value="${#TestCase#tokentype}"/>
</con:parameters></con:restRequest></con:config></con:testStep>
      <con:testStep type="groovy" name="Extract Response Body and Headers" id="a978a785-c50d-4c04-8a92-bdc972ecdc01">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def tStep = tC.getTestStepByName('POST - STS');

tC.setPropertyValue("status", null);
tC.setPropertyValue("connection", null);
tC.setPropertyValue("contentType", null);
tC.setPropertyValue("contentLength", null);
tC.setPropertyValue("contentLocation", null);
/*
*  Get the HTTP headers
*/
String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("versionMajor");
String minor = tP.getPropertyValue("versionMinor");

tP.setPropertyValue("targetURL","qa.p.uvvu.com:7001");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("status", status);
tC.setPropertyValue("connection", connection);
tC.setPropertyValue("contentType", contentType);
tC.setPropertyValue("contentLength", contentLength);
tC.setPropertyValue("contentLocation", contentLocation);

this.log.info "contentLength [$contentLength]";
this.log.info "status [$status]";
this.log.info "contentType [$contentType]";
this.log.info "contentLocation [$contentLocation]";

/*
 *if (contentLength.toInteger() > 0) {
	rawResp = new ByteArrayOutputStream();
     rawResp = tStep.httpRequest.response.getRawResponseData();
     strVal  = new String(rawResp);

     int startAssert = strVal.indexOf("&lt;?xml version=\"1.0\" ");
  
	String XMLbody  = strVal.substring(startAssert, strVal.length());
     
	tC.setPropertyValue("XMLbody", XMLbody);
}
*/</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Extract ERROR table information" disabled="true" id="7a36644e-867e-4ef2-bd53-c316b0b0b1f3">
        <con:settings/>
        <con:config>
          <script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def a = new dbUtils.dbErrors(log,tP.getPropertyValue("targetSystem"));

tC.setPropertyValue("errorStatusCode",null);
tC.setPropertyValue("errorReason",null);
tC.setPropertyValue("errorID",null);

String xmlData = "";
String errId = "";

log.info "expectErrType[" + tC.getPropertyValue("expectErrType") + "]";

switch (tC.getPropertyValue("expectErrType")) {
	case "ADULT_CONTENT_NOT_ALLOWED":
		errId = "Policy:AdultContentNotAllowed";
		break;
	case "ACCOUNT_NOT_ACTIVE":
		errId = "AccountNotActive";
		break;
	case "API_NOT_AUTH":
		errId = "Security:RoleInvalid";
		break;
	case "BLOCKED_ACCESS_UNRATED":
		errId = "Policy:UnratedContentBlocked";
		break;
	case "CID_NOT_ACTIVE":
		errId = "ContentIDNotActive";
		break;
	case "CID_NOT_FOUND":
		errId = "ContentIDNotFound";
		break;
	case "LOGICAL_ASSET_NOT_ACTIVE":
		errId = "AssetLogicalIDNotActive";
		break;
	case "RT_RENT_EXPIRED":
		errId = "RightsTokenRentalExpired";
		break;
	case "RT_NOT_FOUND":
		errId = "RightsTokenNotFound";
		break;
	case "RT_NOT_ACTIVE":
		errId = "RightsTokenNotActive";
		break;
	case "RATING_POLICY":
		errId = "RatingPolicyExists";
		break;
	case "CID_NOT_GRANTED":
	case "STREAM_RIGHTS_NOT_GRANTED":
		errId = "StreamRightsNotGranted";
		break;
	case "STREAM_COUNT_EXCEEDED":
		errId = "AccountStreamCountExceedMaxLimit";
		break;
	case "STREAM_COUNT_EXCEEDED_USER":
		errId = "UserStreamCountExceedMaxLimit";
		break;
	case "STREAM_INVALID_TRANS":
		errId = "StreamTransactionIdInvalid";
		break;
	case "STREAM_ACCOUNTID_MISMATCH":
		errId = "AccountIdUnmatched";
		break;		
	case "STREAM_NICKNAME_TOO_LONG":
		errId = "StreamClientNicknameTooLong";
		break;		
	case "STREAM_WINDOW_NOT_ALLOWED":
		errId = "StreamAssetWindowNotAllowed";
		break;
	case "STREAM_OWNER_MISMATCH":
		errId = "StreamOwnerMismatch";
		break;
	case "STREAM_NOT_FOUND":
		errId = "StreamNotFound";
		break;
	case "STREAM_NOT_ACTIVE":
		errId = "StreamNotActive";
		break;
	case "USER_NOT_MATCH_TOKEN":
		errId = "UserIdUnmatched";
		break;
	case "USER_NOT_ACTIVE":
		errId = "UserNotActive";
		break;
	case "USER_NOT_SUPPLIED":
		errId = "UserNotSpecified";
		break;
}

try {
	xmlData = a.errGetIdInfo(errId);
	
	assert xmlData.trim().length() > 1;

	def myXML = new XmlSlurper().parseText(xmlData);

	log.info myXML.ResultSet.Row.size();
	tC.setPropertyValue("errorStatusCode", myXML.ResultSet.Row[0].STATUS_CODE.toString());
	tC.setPropertyValue("errorReason", myXML.ResultSet.Row[0].REASON.toString());
	tC.setPropertyValue("errorID", myXML.ResultSet.Row[0].ERROR_ID.toString());

	/*
	*  The DB does not contain the complete HTTP status
	*  string, only the code.  Thus, we must adjust.
	*/
	switch (tC.getPropertyValue("errorStatusCode")) {
		case "400":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 400 Bad Request");
			break;
		case "403":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 403 Forbidden");
			break;
		case "404":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 404 Not Found");
			break;
		case "409":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 409 Conflict");
			break;
	}
}
catch (Throwable e) {
	log.info "STEP FAILURE! --- " + e;
}</script>
        </con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify Response Body and Headers and save assertion" id="db516161-86e4-476d-bf56-7f98e27247fe">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def url           = tP.getPropertyValue("targetURL");
//def urnacct       = tP.getPropertyValue("urnaccount");
//def urnstream     = tP.getPropertyValue("urnstream");
def expectErrType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");
def nodeaccountid = tC.getPropertyValue("nodeaccountid");

boolean dobodyXML = true;
boolean doContentTypeHeader = true;
boolean doConnectionClose = false;
boolean doContentLocaton  = false;
boolean contentLengthZero = false;

String errorID     = "";
String errorReason = "";
String errorLink   = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
//String orgRequest  = url + "/dece/Account/" + urnacct + nodeaccountid;
String expectHTTPstatus = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";

if (expectErrType == "") {
	expectErrType = "SUCCESS";
}

this.log.info "expectErrType is $expectErrType";
switch (expectErrType) {
	case "SUCCESS":
	default:
		expectHTTPstatus = "HTTP/1.1 201 Created";
		expectHTTPcontenttype = "application/xml";
		contentLengthZero = false;
		doContentLocaton  = true;
		doContentTypeHeader = false;
		dobodyXML = true;
	break;
}

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("status");
//assert tC.getPropertyValue("status") == expectHTTPstatus;

// Connection
log.info "doConnectionClose=="+doConnectionClose;
if (doConnectionClose) {
	this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("connection");
	assert tC.getPropertyValue("connection") == expectHTTPconnection;
}
/*
//Content-Length
if (contentLengthZero) {
	//assert tC.getPropertyValue("contentLength").toInteger() > 0;
} else {
	//assert tC.getPropertyValue("contentLength").toInteger() > 0;
}
*/	
//Content-Type
if (doContentTypeHeader) {
	assert tC.getPropertyValue("contentType") == expectHTTPcontenttype;
}

// Content-Location
log.info "doContentLocaton=="+doContentLocaton;
if (doContentLocaton) {
	assert tC.getPropertyValue("contentLocation") != null;
	
	def b = tC.getPropertyValue("contentLocation").toURL();
	log.info "Path=="+b.getPath();
	assert b.getPath().matches("/rest/$major/$minor/SecurityToken/Assertion/[_,0-9,a-f,-]*");
	def parms = b.getPath().split("/");
	tC.setPropertyValue("assertionUUID",parms[parms.size() - 1]);
} else {
	//assert tC.getPropertyValue("contentLocation") == null;
}

if (dobodyXML) {
	if (XMLbody.length() > 0) {
		def myXML = new XmlSlurper().parseText(XMLbody);

		// Verify response sizes...
		assert myXML.saml2:Assertion.size() == 1;
		assert myXML.ds:Signature.size()    == 1;
		assert myXML.ds:SignedInfo.size()   == 1;
		assert myXML.ds:DigestValue.size()  == 1;
		assert myXML.ds:SignatureValue.size()  == 1;
		assert myXML.ds:X509Certificate.size() == 1;
		assert myXML.saml2:NameID.size()    == 1;
		assert myXML.saml2:AudienceRestriction.size() == 1;
		assert myXML.saml2:AssertionURIRef.size() == 1;
		assert myXML.saml2:AssertionURIRef.size() == 1;
	}
}</script></con:config>
      </con:testStep>
      
      
      
      
      
      
      
      
      
      
      <con:testStep type="groovy" name="Return the assertion information to the Calling Test Case" id="ba4dda14-1235-40f0-b44e-e25b1b8a9ca3">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("assertionUUID",null);
callTC.setPropertyValue("assertionUUID",null);
callTC.setPropertyValue("assertionUUID",tC.getPropertyValue("assertionUUID"));
callTC.setPropertyValue("assertionUUID1",tC.getPropertyValue("assertionUUID"));</script></con:config>
      </con:testStep><con:testStep type="restrequest" name="GET - STS" id="9af2df1d-af07-4b39-9527-92dcc32d9120"><con:settings/><con:config service="STS" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/SecurityToken/Assertion/{assertionUUID}" methodName="STSGet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - STS" mediaType="application/xml" sslKeystore="RET_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="assertionUUID" value="${#TestCase#assertionUUID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers 1" id="41aec0e4-8f1c-46d0-af53-1a19c010eab9">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def tStep  = tC.getTestStepByName('GET - STS');

/*
*  Get the HTTP headers
*/
String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("versionMajor");
String minor = tP.getPropertyValue("versionMinor");
String XMLbody = "";

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

//def expXML = tStep.httpRequest.response.getResponseContent();
this.log.info tStep.httpRequest.response.getRawResponseData();
//new b = tStep.httpRequest.response.getResponseContent();

rawResp = new ByteArrayOutputStream();

rawResp = tStep.httpRequest.response.getRawResponseData();
strVal  = new String(rawResp);
log.info strVal;

int startAssert = strVal.indexOf("&lt;?xml version=\"1.0\" ");
log.info  "startAssert: "+startAssert;

if (startAssert > 0) {
	XMLbody  = strVal.substring(startAssert, strVal.length());
}

tC.setPropertyValue("XMLbody", XMLbody);
tC.setPropertyValue("status", status);
tC.setPropertyValue("connection", connection);
tC.setPropertyValue("contentType", contentType);
tC.setPropertyValue("contentLength", contentLength);
tC.setPropertyValue("contentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Extract Key Elements from &lt;Assertion> Body" id="2040850c-ee49-4935-86e9-5f2505a43f76">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def XMLbody = tC.getPropertyValue("XMLbody");
def expectErrType = tC.getPropertyValue("expectErrType");

int lastColon = 0;
int lastSlash = 0;

if (expectErrType == "" || expectErrType == "SUCCESS") {
	tC.setPropertyValue("SAML",null);
	tC.setPropertyValue("NODE_ACCOUNT_ID",null);
	tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
	tC.setPropertyValue("NODE_USER_ID",null);
	tC.setPropertyValue("NODE_USER_ID_FULL",null);
	
	if (XMLbody.length() > 0) {
		def myXML = new XmlSlurper().parseText(XMLbody).declareNamespace(saml2: "urn:oasis:names:tc:SAML:2.0:assertion");

			// Verify response sizes...
			assert myXML.size() == 1;

			def accountId = myXML."saml2:AttributeStatement"."saml2:Attribute"."saml2:AttributeValue";
			def userId    = myXML."saml2:Subject"."saml2:NameID";
			def NotBefore = myXML."saml2:Conditions".@NotBefore.text();
			def NotOnOrAfter = myXML."saml2:Conditions".@NotOnOrAfter.text();
			def AudienceRestriction = myXML."saml2:Conditions".AudienceRestriction;
			
			this.log.info "accountId [$accountId]";
			this.log.info "userId [$userId]";
			this.log.info "NotBefore [$NotBefore]";
			this.log.info "NotOnOrAfter [$NotOnOrAfter]";
			this.log.info "AudienceRestriction [$AudienceRestriction]";
						
			tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",accountId.toString());
			tC.setPropertyValue("NODE_USER_ID_FULL",userId.toString());
			tC.setPropertyValue("assertionNotBefore",NotBefore.toString());
			tC.setPropertyValue("assertionNotOnOrAfter",NotOnOrAfter.toString());
			tC.setPropertyValue("assertionAudienceRestriction",NotBefore.toString());
			tC.setPropertyValue("NODE_ACCOUNT_ID",accountId.toString().substring(accountId.toString().lastIndexOf(':') + 1).toString());
			tC.setPropertyValue("NODE_USER_ID",userId.toString().substring(userId.toString().lastIndexOf(':') + 1).toString());

			if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
			{
                    tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",accountId.toString());
				tC.setPropertyValue("NODE_USER_ID_FULL",userId.toString());
        	     } 
        	     else 
        	     {
				tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(accountId.toString()));
				tC.setPropertyValue("NODE_USER_ID_FULL",URLEncoder.encode(userId.toString()));        	     	
		     }
		     
	} else {
		return false;
	}
}</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="61cabfc0-62e4-4f84-9578-d6b1043bb8f5">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def url           = tP.getPropertyValue("targetURL");
//def urnacct       = tP.getPropertyValue("urnaccount");
//def urnstream     = tP.getPropertyValue("urnstream");
def expectErrType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");
def nodeaccountid = tC.getPropertyValue("nodeaccountid");

boolean dobodyXML = true;
boolean doContentTypeHeader = true;
boolean doConnectionClose = false;
boolean doContentLocaton  = false;
boolean contentLengthZero = false;

String errorID     = "";
String errorReason = "";
String errorLink   = "";
//String orgRequest  = url + "/dece/Account/" + urnacct + nodeaccountid;
String expectHTTPstatus = "HTTP/1.1 200 OK";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";

if (expectErrType == "") {
	expectErrType = "SUCCESS";
}

this.log.info "expectErrType is $expectErrType";
switch (expectErrType) {
	case "SUCCESS":
	default:
		expectHTTPstatus = "HTTP/1.1 200 OK";
		expectHTTPcontenttype = "application/xml";
		contentLengthZero = false;
		doContentLocaton  = false;
		doContentTypeHeader = false;
		dobodyXML = true;
	break;
}

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("status");
//assert tC.getPropertyValue("status") == expectHTTPstatus;

// Connection

if (doConnectionClose) {
	this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("connection");
	assert tC.getPropertyValue("connection") == expectHTTPconnection;
}
/*
//Content-Length
if (contentLengthZero) {
	//assert tC.getPropertyValue("contentLength").toInteger() == 0;
} else {
	//assert tC.getPropertyValue("contentLength").toInteger() > 0;
}
*/	
//Content-Type
if (doContentTypeHeader) {
	assert tC.getPropertyValue("contentType") == expectHTTPcontenttype;
}

// Content-Location
if (doContentLocaton) {
	assert tC.getPropertyValue("contentLocation") != null;
	
	def b = tC.getPropertyValue("contentLocation").toURL();
	assert b.getPath().matches("/dece/SecurityToken/Assertion/[0-9,a-f,-]*");
	def parms = b.getPath().split("/");
	
	tC.setPropertyValue("assertionUUID",parms[parms.size() - 1]);
} else {
	assert tC.getPropertyValue("contentLocation") == null;
}

if (dobodyXML) {
	if (XMLbody.length() > 0) {
		def myXML = new XmlSlurper().parseText(XMLbody);

		// Verify response sizes...
		assert myXML.saml2:Assertion.size() == 1;
		assert myXML.ds:Signature.size()    == 1;
		assert myXML.ds:SignedInfo.size()   == 1;
		assert myXML.ds:DigestValue.size()  == 1;
		assert myXML.ds:SignatureValue.size()  == 1;
		assert myXML.ds:X509Certificate.size() == 1;
		assert myXML.saml2:NameID.size()    == 1;
		assert myXML.saml2:AudienceRestriction.size() == 1;
		assert myXML.saml2:AssertionURIRef.size() == 1;
		assert myXML.saml2:AssertionURIRef.size() == 1;
/*
		
		// ErrorCode
		this.log.info "ErrorCode: Expect[$errorID] Received: " + myXML.Error.@ErrorID.toString();
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason: Expect[$errorReason] Received: " + myXML.Error.Reason.toString();
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorReason: Expect[$errorLink] Received: " + myXML.Error.ErrorLink.toString();
		//assert myXML.Error.ErrorLink.toString() == errorLink;
		*/
	} else {
		return false;
	}
}



</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Deflate and encode the &lt;Assertion>" id="3e70141a-7836-4057-9fa3-549155a21767">
        <con:settings/>
        <con:config><script>import java.util.zip.Deflater;
import org.w3c.tools.codec.Base64Encoder;
import java.io.ByteArrayOutputStream;
import java.util.zip.DeflaterOutputStream;
import java.lang.*;

import org.opensaml.xml.util.Base64;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)


int compressedLength = 0;
//String XMLbody = tC.getPropertyValue("XMLassertion").toString();
String XMLbodyRaw = tC.getPropertyValue("XMLbody").toString();

int startAssert = XMLbodyRaw.indexOf("&lt;saml2:Assertion ");
int endAssert   = XMLbodyRaw.indexOf("&lt;/saml2:Assertion>");


String XMLbody = XMLbodyRaw.substring(startAssert, endAssert + 18).trim();
String base64encodeStr = "";

this.log.info "XMLbody is [$XMLbody]";

def myXML = new XmlSlurper().parseText(XMLbody);
tC.setPropertyValue("assertId",myXML.@ID.toString());

// Perform Deflation
//byte[] xmlBytes = XMLbody.trim().getBytes();
byte [] xmlBytes = new byte[XMLbody.trim().length()];

Deflater compresser = new Deflater(Deflater.DEFLATED, true);
compresser.setInput(XMLbody.trim().getBytes());
compresser.finish();
compressedLength = compresser.deflate(xmlBytes);

byte [] subArray = Arrays.copyOfRange(xmlBytes, 0, compressedLength);
base64encodeStr = Base64.encodeBytes(subArray,Base64.DONT_BREAK_LINES);
// finally, URL encode it
tC.setPropertyValue("SAML", "SAML2 Assertion="+base64encodeStr);


</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Return extracted Properties back to calling Test Case" id="e74a6738-775c-40c0-afb6-0b3f1707439b">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

String acctID = tC.getPropertyValue("NODE_ACCOUNT_ID");
String userID = tC.getPropertyValue("NODE_USER_ID");

callTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));
//callTC.setPropertyValue("SAML_USER1",tC.getPropertyValue("SAML"));

if (acctID != null &amp;&amp; acctID.length() > 0) {
	
	callTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
	//callTC.setPropertyValue("NODE_ACCOUNT_ID1",tC.getPropertyValue("NODE_ACCOUNT_ID"));
	callTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
	//callTC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
} else {
	callTC.setPropertyValue("assertionAccountId","ERROR");
}
if (userID != null &amp;&amp; userID.length() > 0) {
	callTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID"));
	//callTC.setPropertyValue("NODE_USER_ID1",tC.getPropertyValue("NODE_USER_ID"));
	callTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
	//callTC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL"));
} else {
	callTC.setPropertyValue("assertionUserId","ERROR");
}</script></con:config>
      </con:testStep><con:properties>
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
      <con:property><con:name>assertId</con:name><con:value>_31b6f33a-4bad-45d8-b33a-f7f61fcfb09a</con:value></con:property><con:property><con:name>assertionAudienceRestriction</con:name><con:value>2014-11-20T09:44:53.179Z</con:value></con:property><con:property><con:name>assertionNotBefore</con:name><con:value>2014-11-20T09:44:53.179Z</con:value></con:property><con:property><con:name>assertionNotOnOrAfter</con:name><con:value>2014-11-20T15:45:03.179Z</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_31b6f33a-4bad-45d8-b33a-f7f61fcfb09a</con:value></con:property><con:property><con:name>assertionUUIDprior</con:name><con:value>_732606f9-3702-470e-9ecf-2bbb514a18ba</con:value></con:property><con:property><con:name>audience</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>connection</con:name><con:value>close</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>2887</con:value></con:property><con:property><con:name>contentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>contentType</con:name><con:value>text/xml;charset=UTF-8</con:value></con:property><con:property><con:name>errorID</con:name><con:value/></con:property><con:property><con:name>errorReason</con:name><con:value/></con:property><con:property><con:name>errorStatusCode</con:name><con:value/></con:property><con:property><con:name>expectErrType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Gits\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>08482E0679EC69ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:08482E0679EC69ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>08482E0679F869ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:08482E0679F869ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZrc7I6EP4rDv34DnIRqTLVGVtry/tqL2ovp1/OxLBAWghKAmp//UlQqdjL8ZxPTJbN7rO7T57kjKE4Mp0eY5ByktDaKo4ocwprR8lS6iSIEeZQFANzOHYmvdHQMeu6g3ZblJrb7yh/N4yZ7TcaSLVmyFOtptdSZ3Lpn/q24WN/preRcGUsA5cyjijvKKZuWKphqKY+1duO1XT0Rt04bb8otUdImYgtXOq6sgW1Yh0l5HzuaNpyuawvG/UkDTRT1w3teTSc4BBipHTPNhUVidLu1h/XPcAQRbiOk1g70yo+Zx5zJiSgiGcpbHN53+XSNb2tCR+PkeBEKfeC51I/KZYXiCaUYBSRdyT7MwIeJl6tFwVJSngYf1uEocvAKqywig2LnihaFdqRgSoIU4ZUFiJjG2sMPqRAMdQexm5HOTluasXWaYoo85M0ZtXlf8MDNIcomYOnsl1ZW2jHB/yiU90zwI5LcZQxksONJOscYWDbaQI+PlTtLgWfrIaECYKumESn7cM7WG660ScBMP5/BrQ3nE2QRxRl0GXpKL55aOev6+F5/81Og5E7SuD+94s96hQA9p0LQznazfKAlCWJNjvCfOTPyXBwpb1ZyMJJ9LroBzk89u/aF6tH1LrW2BAQGj6F7eksmLXeQ/ucXv6yh6bLXll7OB8srvPbJn1iLS933wfvQZyH954e3cXEuhkv7p8fnhZ5Ej5Rc3ixWDf4w9VMY3/dmXx8n5nn9Ffussbk+er+2rYedfLbNBohoHUQcfxnsJwGzdfbFxMFuTFgnbKcPfxV2+7MT7LZK2C+W0oauP3aQEwJ8Z/FTFqIp/qFqzOX4sM4UK505S6pHU4m5I54jpjhZq23rJZ5qdun7UHLbvf6l3qzoTfbbWOg9/TBwN6JzAbFAcSLhPpE5pKSu6HNzwBx7DCgHqRqnmRC6ZjyQ8Q+4qjm0rE4BAllME2EPBvUS+01brxZPuM2zvXWLFzY4sQotZuE39LbtOdzSCuabJgVTR4DJnMCUrglr5kgNuOiFwuUZzwy6jmqU8iEtKdSZR3TajU1RuJ5BBKpFideFkF9Hs6Lzmhs8zVVhFlhHV9Oi9P2bV2H/3YtED4ekQ5M1nIOYozw6XKxnOaukO8Lbu4XvAvfyzwiD5boJ08J3iCp/vqgieRHyRFR0Q5y6XloqETVDgsqE3k5wSXRy+taqLg4993dOBaovqhneZ4VAziV+paK8EJ0jKamm9oEcCaUaT1N3oBqZRTtqGugBH6QvLRXIWY8pBOOOMSCMbViecS9PwEm731XUH117KOiklK0jsOKf2W7iMSbRSL+8VmDHSz9hPlOfJZJ6n1M7ItYe3lEneLa54QGciWvgPU3vMCJCEuEeCXpfvCvAnyVvGosm1xi4YJQs4zD939qUpU6CsI4ySh3+0ph2FfKAidfz8H5cPoUphDj8nVG/v15ppKCAhjEm46RIr68ZB15BGiwp7bbpF8L7uXFT4JbRdf9ZP5s2evTIce7/wA=</con:value></con:property><con:property><con:name>sName</con:name><con:value>First_User_Create</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>tName</con:name><con:value>Account_Create_Firsrt_User_Create_STS_Policies</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>username</con:name><con:value>AcountDelete_firstuser20141120_1416476733872</con:value></con:property><con:property><con:name>username1</con:name><con:value>firstuser20130726_035156</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<?xml version="1.0" encoding="UTF-8"?><saml2:Assertion xmlns:saml2="urn:oasis:names:tc:SAML:2.0:assertion" ID="_31b6f33a-4bad-45d8-b33a-f7f61fcfb09a" IssueInstant="2014-11-20T09:45:03.179Z" Version="2.0" xmlns:xs="http://www.w3.org/2001/XMLSchema"><saml2:Issuer>http://c.decellc.com/</saml2:Issuer><ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#"><ds:SignedInfo><ds:CanonicalizationMethod Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"/><ds:SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/><ds:Reference URI="#_31b6f33a-4bad-45d8-b33a-f7f61fcfb09a"><ds:Transforms><ds:Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/><ds:Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"><ec:InclusiveNamespaces xmlns:ec="http://www.w3.org/2001/10/xml-exc-c14n#" PrefixList="xs"/></ds:Transform></ds:Transforms><ds:DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/><ds:DigestValue>srMmNU9vjyLBDk6rgMIMoeQJZ6M=</ds:DigestValue></ds:Reference></ds:SignedInfo><ds:SignatureValue>hvMfpiLFG/k4a4coljqDgveVDP9CxVa8H/sLeaaLWh9Tbgb8zh6BnE+6L2Isjs9LpFqHvO5nWs8dvIzFzgmvhQd0lPmi4NRqQXUWqvohWn2LCqy3tUGb/sYP2tRQu2Bn+vIs3SXGQH64V0iJ213heaygltcKFwTg5jOZ2agv1Fs=</ds:SignatureValue></ds:Signature><saml2:Subject><saml2:NameID Format="urn:oasis:names:tc:SAML:2.0:nameid-format:persistent">urn:dece:userid:org:dece:08482E0679F869ADE05305991F0A0FF6</saml2:NameID><saml2:SubjectConfirmation Method="urn:oasis:names:tc:SAML:2.0:cm:sender-vouches"><saml2:SubjectConfirmationData InResponseTo="_1ndr6yc3k4fst6cv08bhq6ncl" NotOnOrAfter="2014-11-20T12:45:03.179Z" Recipient="https://stdecqavutl1.va.neustar.com:2485/simplesaml/module.php/saml/sp/saml2-acs.php/RET"/></saml2:SubjectConfirmation></saml2:Subject><saml2:Conditions NotBefore="2014-11-20T09:44:53.179Z" NotOnOrAfter="2014-11-20T15:45:03.179Z"><saml2:AudienceRestriction><saml2:Audience>urn:dece:org:org:dece:RET</saml2:Audience></saml2:AudienceRestriction></saml2:Conditions><saml2:Advice><saml2:AssertionURIRef>https://qa.q.uvvu.com:7001/rest/2015/02/SecurityToken/Assertion/_31b6f33a-4bad-45d8-b33a-f7f61fcfb09a</saml2:AssertionURIRef></saml2:Advice><saml2:AuthnStatement AuthnInstant="2014-11-20T09:45:03.179Z" SessionIndex="_31b6f33a-4bad-45d8-b33a-f7f61fcfb09a"><saml2:AuthnContext><saml2:AuthnContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:Password</saml2:AuthnContextClassRef><saml2:AuthenticatingAuthority>urn:dece:org:org:dece:coordinator</saml2:AuthenticatingAuthority></saml2:AuthnContext></saml2:AuthnStatement><saml2:AttributeStatement><saml2:Attribute Name="accountID" NameFormat="urn:dece:type:accountID"><saml2:AttributeValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xs:string">urn:dece:accountid:org:dece:08482E0679EC69ADE05305991F0A0FF6</saml2:AttributeValue></saml2:Attribute></saml2:AttributeStatement></saml2:Assertion>]]></con:value></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>555384c9-6fa2-448b-a38e-713264e945f2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="User_Notification DB Validation" searchProperties="true" id="e6d93400-ec29-487d-845d-0269783271b0"><con:settings/><con:testStep type="groovy" name="User_Notification DB Validation" id="36a03322-c94f-4c44-9b0d-8ed3193a4a59"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

int cnt = 0;

	String emailAddress = tP.getPropertyValue("PrimaryEmailAddress").toString();
	String username = callTC.getPropertyValue("UserName").toString();
	String emailEvent = callTC.getPropertyValue("emailEvent").toString();
	
	String sql = """Select * FROM EMAIL_NOTIFICATION WHERE EMAIL_ADDRESS='$emailAddress' and EMAIL_DISPATCH_STATUS = 'Y' and EMAIL_NOTIFICATION_EVENT='$emailEvent' and USER_OID=(SELECT USER_OID FROM ACCOUNT_USER WHERE USERNAME='$username')""";

	log.info sql;

	try {
		a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());
		
	}
	catch(Throwable e) {
		log.info "ERROR - dbUtils.dbUtils - $e"; 
		assert 1 == 2;

		}
	finally {
		def results   = a.SelectFromDB(sql,tP.getPropertyValue("targetSystem"));
		log.info results;
	
		try {
			def myXML = new XmlSlurper().parseText(results);
			assert myXML.ResultSet.Row.size() == 1;
			
		}
		catch (Throwable e) {
			log.info "ERROR - XmlSlurper - $e";
			assert 1 == 2;
		} 
		
		}
</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>1.2. Account Create: Email Address Confirmed [Your UltraViolet account has been created]</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Notifications_Test Cases</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserGet_API" searchProperties="true" id="a9371951-a0d7-4374-b477-39820ba727c5"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="34eab9ef-094b-4ea5-b816-16bad8f3019a"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="SetPem" id="ab184205-d3f8-4833-a390-e2590f4dff15"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("User_Get");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="3475aa35-aee4-44f3-bc56-b7358d0abca8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('User_Get');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String ETag = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);

//tC.setPropertyValue("ETagPrior",tC.getPropertyValue("ETag"));
tC.setPropertyValue("ETag", ETag);

//log.info "ETagPrior: " + tC.getPropertyValue("ETagPrior")+", ETag: "+ tC.getPropertyValue("ETag");
//assert tC.getPropertyValue("ETagPrior")!= tC.getPropertyValue("ETag");
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="621e6c79-25ba-4fc8-86b5-0fa7a2e3401f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseTypeUserGet}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

def RequestorType = "";
def RequestorClass = "";
def Requestee = "";

def usernamestring = "";
def givennamestring = "";
def surnamestring = "";

int firstmask = 0;
int lastmask = 0;

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#TestCase#AccountID}')+ "/User/" + context.expand('${#TestCase#UserID}');
String expectHTTPstatus      = "HTTP/1.1 200 OK";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
	break;

	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
		errorReason = "The API call is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_VALID":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserIdInvalid";
		errorReason = "The user ID is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
	break;

	case "USER_INACTIVE":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
		errorReason = "The requesting member is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;

     case "URL_NOT_FOUND":
		expectHTTPstatus = "HTTP/1.1 404 Not Found";
		expectHTTPcontenttype = "text/xml"
		XMLbodynull     = true;
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	case "MTHD_NOT_ALLWD":
		expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
		expectHTTPcontenttype = "text/plain; charset=UTF-8"
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	case "USER_NOT_IN_ACC":
		expectHTTPstatus = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:UserNotFound";
		errorReason = "The user ID was not found.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotFound";
	break;

     case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;

	case "NO_ENABLE_MNG_USR_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the EnableManageUserConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:EnableManageUserConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:EnableManageUserConsentRequired";
	break;

	case "NO_MNG_USR_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageUserConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
	break;

	case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		//errorReason = "The identified account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "SPL_CS_ALLOWED_ACCT":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;

     case "SPL_CS_ALLOWED_USER":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToDeleteSuspendedUsers";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToDeleteSuspendedUsers";
     break;

    case "REQUESTEE_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorReason = "The member has been removed.";
		errorID     = "urn:dece:errorid:org:dece:AccountUserStatusDeleted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserStatusDeleted";
	break;
      
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

      def a = context.expand( '${#TestCase#httpLocation}');
      def b = a.toURL();
      def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

      if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
      	{                                
			assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
			
			int lastColon = urlStr.lastIndexOf(':');
			int lastSlash = urlStr.lastIndexOf('/');
			userid     = urlStr.substring(lastColon + 1);
			def node_User = urlStr.substring(lastSlash + 1);
			                                 
			tC.setPropertyValue("NODE_USER_ID",userid);			
			tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
      	} 
      else 
      	{
			assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");
			int lastColon = urlStr.lastIndexOf('%3A');
			int lastSlash = urlStr.lastIndexOf('/');
			userid     = urlStr.substring(lastColon + 3);
			def node_User = urlStr.substring(lastSlash + 1);
			                      
			tC.setPropertyValue("NODE_USER_ID",userid);			
			tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
      	}
	
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
//assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}


if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorLink Received [" + myXML.Error.ErrorLink.toString() + "] Exp[$errorLink]";
		//assert myXML.Error.ErrorLink.toString() == errorLink;

	} 
  else
  {
   //Data Types
   // RequestorType: Self, CLG, CS, Other
   // RequestorClass: BAU,SAU,FAU
   //Requestee: CHILD, YOUTH, ADULT

   RequestorType = context.expand( '${#TestCase#RequestorType}');
   RequestorClass = context.expand( '${#TestCase#RequestorClass}');
   Requestee = context.expand( '${#TestCase#Requestee}');

    // Following Fields returned for Everyone
    // Contact Info shwon only for CLG or Self or Portal:CS or DECE:CS or COORD:CS - kalyan 05092013
    if ( (RequestorType == "Other")  || (RequestorType == "CS") )
    {
         assert myXML.@UserClass.size() == 1;
         assert myXML.@UserClass.toString().matches("urn:dece:role:user:class:[a-z]*");
         
         assert myXML.Credentials.size() == 1;
         assert myXML.Credentials.Username.size() == 1;
         assert myXML.Credentials.Password.size() == 0;

         assert myXML.Name.size() == 1;
         assert myXML.Name.GivenName.size() == 1;
         assert myXML.Name.SurName.size() == 1;
            
         assert myXML.Languages.size() == 1;
         assert myXML.Languages.Language.size() > 0;
     
         assert myXML.ResourceStatus.size() == 1;
         assert myXML.ResourceStatus.Current.size() == 1;
    }
    else
    {
    	    assert myXML.@UserClass.size() == 1;
         assert myXML.@UserClass.toString().matches("urn:dece:role:user:class:[a-z]*");
         
         assert myXML.Credentials.size() == 1;
         assert myXML.Credentials.Username.size() == 1;
         assert myXML.Credentials.Password.size() == 0;

         assert myXML.Name.size() == 1;
         assert myXML.Name.GivenName.size() == 1;
         assert myXML.Name.SurName.size() == 1;
  /*      
         def a = myXML.DisplayImage.DisplayImageURL;
         log.info a ;
		//def b = a.toURL();
		//log.info b;
		 log.info "Response_DisplayImageURL: "+a.getPath();
         assert  a.matches("https://qa.uvvu.com:7001/ssp/image?type=image&amp;imageId=[0-9,A-F]*");
        log.info "here";
*/
        
         assert myXML.ContactInfo.size() == 1;
         assert myXML.ContactInfo.Address.size() == 1;
         assert myXML.ContactInfo.Address.PostalAddress.size() == 1;
         assert myXML.ContactInfo.Address.PostalCode.size() == 1;
         assert myXML.ContactInfo.Address.Locality.size() == 1;
         assert myXML.ContactInfo.Address.StateOrProvince.size() == 1;
         assert myXML.ContactInfo.Address.Country.size() == 1;
         assert myXML.ContactInfo.TelephoneNumber.size() == 1;
         assert myXML.ContactInfo.TelephoneNumber.Value.size() == 1;
         assert myXML.ContactInfo.MobileTelephoneNumber.size() == 1;
         assert myXML.ContactInfo.MobileTelephoneNumber.Value.size() == 1;
     
         assert myXML.Languages.size() == 1;
         assert myXML.Languages.Language.size() > 0;
     
         assert myXML.ResourceStatus.size() == 1;
         assert myXML.ResourceStatus.Current.size() == 1;
    }
         if ((RequestorType == "CS") || (RequestorType == "SPLCS"))
         {
           assert myXML.ResourceStatus.History.size() > 0; 	
         } 
         else
         {
           assert myXML.ResourceStatus.History.size() == 0; 	
         }

   /******************************************************************************************************************/
           
   //Filtering fields based on PI and Access levels

   if(Requestee == "CHILD")
    {

    	  this.log.info "Getting CHILD details";
    	  
  	 if((RequestorType == "CLG") || (RequestorType == "Self") || (RequestorType == "SPLCS"))
  	 {
  	   /****************DOB, Security Token and Email Shown only to Self,CLG and CS**********/
         assert myXML.DateOfBirth.size() == 1;     
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0;
        
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;     
  	 }
  	 else
  	  {
         /****************DOB, Security Token and Email not shown to CS and others**********/
         assert myXML.DateOfBirth.size() == 0;     
       //  assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() == 0;
         //assert myXML.LegalGuardian.size() == 1; 

         assert myXML.ContactInfo.PrimaryEmail.size() == 0;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 0;
  	   

         /**************Verifying Masking of CHILD PI details *******************/
          
         usernamestring = myXML.Credentials.Username.toString();
         givennamestring = myXML.Name.GivenName.toString();
         surnamestring = myXML.Name.SurName.toString();
                
         //*************Verifying Masking of CHILD UserName details ******************

         //firstmask = usernamestring.indexOf('u');
        lastmask = usernamestring.length();
        
     log.info firstmask;
 		 log.info  lastmask;
        usernamestring = usernamestring.substring(1,lastmask-1);
        //usernamestring = "••••••";
   log.info usernamestring;
//        assert usernamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
         assert usernamestring == "••••••";

       //*************Verifying Masking of CHILD GivenName details ******************
          
        //firstmask = givennamestring.indexOf('â');
        lastmask = givennamestring.length();

         givennamestring = givennamestring.substring(1,lastmask-1);

       // assert givennamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
        assert givennamestring == "••••••";

         //*************Verifying Masking of CHILD SurName details ******************
          
       // firstmask = surnamestring.indexOf('â');
        lastmask = surnamestring.length();

         surnamestring = surnamestring.substring(1,lastmask-1);

       //assert surnamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";     
      assert surnamestring == "••••••";        
    }
  	 if ((RequestorType == "CS") || (RequestorType == "SPLCS"))
          {
             this.log.info "Getting CHILD CLG details for CS";
             
             assert myXML.LegalGuardian.size() > 0; 

              if(myXML.LegalGuardian.size() == 1)     	
             {
           	 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");	
             }
             else
             if(myXML.LegalGuardian.size() == 2)     	
             {
                if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                	assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else
               if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
             	{
           	  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";	
               } 
            }         
          else if(myXML.LegalGuardian.size() != 0)     	
                {
            	   this.log.info "Getting CHILD Active CLG details for NonCS";
            	 
           	   assert myXML.LegalGuardian.size() == 1;   
           	   assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";	
               }
           else
               {
            	 this.log.info "Getting CHILD Pending CLG details for NonCS";
           	 assert myXML.LegalGuardian.size() == 0;  
              }
          }
    }  
   else if((RequestorClass == "FAU") || (RequestorClass == "SAU") || (RequestorType == "Self") || (RequestorType == "SPLCS"))
    {
    	       	  
    	    assert myXML.DateOfBirth.size() == 1; 
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0; 

         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;
         
          if(Requestee == "YOUTH")	
          {
            this.log.info "Getting YOUTH details";
            assert myXML.LegalGuardian.size() == 0; 
/*
             if(RequestorType == "CS")
            {
              assert myXML.LegalGuardian.size() > 0; 

              if(myXML.LegalGuardian.size() == 1)     	
             {
           	 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");	
             }
             else if(myXML.LegalGuardian.size() == 2)     	
             {
           	 if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                	assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
             	{
           	  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";	
               } 
            }
            else if(myXML.LegalGuardian.size() != 0)     	
            {
           	 assert myXML.LegalGuardian.size() == 1;   
           	 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";	
            }
           else
            {
           	 assert myXML.LegalGuardian.size() == 0;  
            }      	
          }
*/          
       }  
     else
        {
           this.log.info "Getting ADULT details";	
           //assert myxml.LegalGuardian.size() == 0; 	
		assert myXML.LegalGuardian.size() == 0; 	
        }
    }  
     else 
    {   
    	    this.log.info "BAU geting other's details";
    	    
    	    assert myXML.DateOfBirth.size() == 1; 
        // assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() == 0; 

         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1; 
         
         if(Requestee == "YOUTH")	
          {
            if(myXML.LegalGuardian.size() != 0)     	
            {
           	 assert myXML.LegalGuardian.size() == 1;   
           	 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";	
            }
          else
            {
           	 assert myXML.LegalGuardian.size() == 0;  
            }	
          }
          else
          {
            assert myXML.LegalGuardian.size() == 0; 	
          }      	
    }       
    
  }	// end if for SUCCESS response
} // end if for XML Body Validations
</script></con:config></con:testStep><con:testStep type="groovy" name="Return_ETag_to_Calling_TestCase" id="948ce4c9-000a-48f8-8ed9-6e9a5983276c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));</script></con:config></con:testStep><con:properties><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"E641652A31FC5318E0401F0A05993F57:F41796B9"</con:value></con:property><con:property><con:name>ETagPrior</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>3531</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:/certs/dececs_concat.pem</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E6193ACEE6A11BFFE0401F0A05995B7C</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E6193ACEE7D81BFFE0401F0A05995B7C</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E5F850C559F9CD04E0401F0A05993FCD</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E6193ACEE7D81BFFE0401F0A05995B7C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E5F850C559F9CD04E0401F0A05993FCD</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>FAU</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>SPLCS</con:value></con:property><con:property><con:name>ResponseTypeUserGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>sName</con:name><con:value>04.Functional_UserGet_SPLCS_P2</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_40040_UserGet_FUNC_SPLCS_Get_AccStatus_Mergedeleted_SPLCS_P2</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E603BD56DDEEF0CEE0401F0A07990E43</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E5F850C559FACD04E0401F0A05993FCD</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<User UserClass="urn:dece:role:user:class:basic" UserID="urn:dece:userid:org:dece:E6193ACEE7D81BFFE0401F0A05995B7C" xmlns="http://www.decellc.org/schema/2013/06/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Name>
      <GivenName>usercreate20130911_030350</GivenName>
      <SurName>usercreate20130911_030350</SurName>
   </Name>
   <DisplayImage>
      <DisplayImageURL>https://qa.uvvu.com:7001/ssp/image?type=image&amp;imageId=E6193ACEE7DC1BFFE0401F0A05995B7C</DisplayImageURL>
   </DisplayImage>
   <ContactInfo>
      <PrimaryEmail verificationEntity="urn:dece:org:org:dece:RET" verificationDateTime="2013-09-11T09:31:03.103Z" VerificationStatus="urn:dece:type:status:success" verified="true" ID="Coordinator">
         <Value>testing@uvvutesting.biz</Value>
         <ConfirmationEndpoint>Coordinator</ConfirmationEndpoint>
      </PrimaryEmail>
      <AlternateEmail Notify="false" VerificationStatus="urn:dece:type:status:pending">
         <Value>testing@uvvutesting.biz</Value>
      </AlternateEmail>
      <Address>
         <PostalAddress>46000 Center Oak Plaza</PostalAddress>
         <PostalCode>20166</PostalCode>
         <Locality>Sterling</Locality>
         <StateOrProvince>VA</StateOrProvince>
         <Country>US</Country>
      </Address>
      <TelephoneNumber>
         <Value>+1.703598741</Value>
      </TelephoneNumber>
      <MobileTelephoneNumber>
         <Value>+1.703598742</Value>
      </MobileTelephoneNumber>
   </ContactInfo>
   <Languages>
      <Language primary="true">en-us</Language>
      <Language primary="false">en</Language>
   </Languages>
   <DateOfBirth MeetsAgeOfMajority="false">2002-09-14</DateOfBirth>
   <LegalGuardian Status="urn:dece:type:status:active">urn:dece:userid:org:dece:E6193ACEE6FF1BFFE0401F0A05995B7C</LegalGuardian>
   <Credentials>
      <Username>usercreate20130911_030350</Username>
   </Credentials>
   <UserRecoveryTokens>
      <RecoveryItem>
         <QuestionID>1200</QuestionID>
         <Question>What is the name of your favorite movie?</Question>
         <QuestionResponse>myname</QuestionResponse>
      </RecoveryItem>
      <RecoveryItem>
         <QuestionID>1650</QuestionID>
         <Question>What is the name of your favorite song?</Question>
         <QuestionResponse>myname</QuestionResponse>
      </RecoveryItem>
   </UserRecoveryTokens>
   <ResourceStatus>
      <Current CreatedBy="urn:dece:org:org:dece:RET" CreationDate="2013-09-11T09:30:53.000Z" ModifiedBy="urn:dece:org:org:dece:RET" ModificationDate="2013-09-11T09:31:03.108Z">
         <Value>urn:dece:type:status:active</Value>
         <Description>Flipping User Status to active</Description>
      </Current>
      <History>
         <Prior ModifiedBy="urn:dece:org:org:dece:RET" ModificationDate="2013-09-11T09:31:00.871Z">
            <Value>urn:dece:type:status:pending</Value>
            <Description>Flipping User Status to pending</Description>
         </Prior>
         <Prior ModifiedBy="urn:dece:org:org:dece:RET" ModificationDate="2013-09-11T09:30:53.011Z">
            <Value>urn:dece:type:status:blocked:tou</Value>
            <Description>User Created</Description>
         </Prior>
      </History>
   </ResourceStatus>
</User>]]></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>cc891f73-44b8-47ce-9d08-8d9a2f63ef82</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c72b5513-a556-4ec7-9925-002c39bb23ff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9c734ae7-5af5-42b8-9df0-6dd308e44f7c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateMUC_API" searchProperties="true" id="b842e70d-a8b1-44af-91c2-44516599f032"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="215d4672-2e57-480a-a80e-d258d7b50dad"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

tC.setPropertyValue("expectErrType","SUCCESS");

if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
{
	tC.setPropertyValue("Policy_Class","urn:dece:type:policy:ManageUserConsent");
}
else
{
	tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:ManageUserConsent", "UTF-8"));
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="7b7db62c-25c3-45a6-a22a-220baead7507"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreateSinglePolicyPost_MUC");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_MUC" id="6e6a3bde-d58f-4514-a0db-b9f3983a4e4a"><con:settings/><con:config service="PolicyCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateSinglePolicyPost" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_MUC" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="RET_concat.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@bind_address"/></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd"  xmlns:dece="${#Project#coordinatorSchema}"  xmlns:ds="http://www.w3.org/2000/09/xmldsig#"  xmlns:md="http://www.movielabs.com/md"  xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <dece:Policy>
    <dece:PolicyClass>urn:dece:type:policy:ManageUserConsent</dece:PolicyClass>
    <dece:Resource>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_REQ_ENTITY}</dece:Resource>
    <dece:RequestingEntity>urn:dece:org:org:dece:${#TestCase#nodeid}</dece:RequestingEntity>
    <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
    <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_CREATED_BY}">
        <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
    </dece:ResourceStatus>
  </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="1581bd9a-2a13-43f9-abd7-d15ee95c3374">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreateSinglePolicyPost_MUC');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                             contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="58771ea9-69a8-4296-aa24-2a8104397ca9">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SAML2 Assertion=nVZrc7I6EP4rDv34DnIRqTLVGVtry/tqL2ovp1/OxLBAWghKAmp//UlQqdjL8ZxPTJbN7rO7T57kjKE4Mp0eY5ByktDaKo4ocwprR8lS6iSIEeZQFANzOHYmvdHQMeu6g3ZblJrb7yh/N4yZ7TcaSLVmyFOtptdSZ3Lpn/q24WN/preRcGUsA5cyjijvKKZuWKphqKY+1duO1XT0Rt04bb8otUdImYgtXOq6sgW1Yh0l5HzuaNpyuawvG/UkDTRT1w3teTSc4BBipHTPNhUVidLu1h/XPcAQRbiOk1g70yo+Zx5zJiSgiGcpbHN53+XSNb2tCR+PkeBEKfeC51I/KZYXiCaUYBSRdyT7MwIeJl6tFwVJSngYf1uEocvAKqywig2LnihaFdqRgSoIU4ZUFiJjG2sMPqRAMdQexm5HOTluasXWaYoo85M0ZtXlf8MDNIcomYOnsl1ZW2jHB/yiU90zwI5LcZQxksONJOscYWDbaQI+PlTtLgWfrIaECYKumESn7cM7WG660ScBMP5/BrQ3nE2QRxRl0GXpKL55aOev6+F5/81Og5E7SuD+94s96hQA9p0LQznazfKAlCWJNjvCfOTPyXBwpb1ZyMJJ9LroBzk89u/aF6tH1LrW2BAQGj6F7eksmLXeQ/ucXv6yh6bLXll7OB8srvPbJn1iLS933wfvQZyH954e3cXEuhkv7p8fnhZ5Ej5Rc3ixWDf4w9VMY3/dmXx8n5nn9Ffussbk+er+2rYedfLbNBohoHUQcfxnsJwGzdfbFxMFuTFgnbKcPfxV2+7MT7LZK2C+W0oauP3aQEwJ8Z/FTFqIp/qFqzOX4sM4UK505S6pHU4m5I54jpjhZq23rJZ5qdun7UHLbvf6l3qzoTfbbWOg9/TBwN6JzAbFAcSLhPpE5pKSu6HNzwBx7DCgHqRqnmRC6ZjyQ8Q+4qjm0rE4BAllME2EPBvUS+01brxZPuM2zvXWLFzY4sQotZuE39LbtOdzSCuabJgVTR4DJnMCUrglr5kgNuOiFwuUZzwy6jmqU8iEtKdSZR3TajU1RuJ5BBKpFideFkF9Hs6Lzmhs8zVVhFlhHV9Oi9P2bV2H/3YtED4ekQ5M1nIOYozw6XKxnOaukO8Lbu4XvAvfyzwiD5boJ08J3iCp/vqgieRHyRFR0Q5y6XloqETVDgsqE3k5wSXRy+taqLg4993dOBaovqhneZ4VAziV+paK8EJ0jKamm9oEcCaUaT1N3oBqZRTtqGugBH6QvLRXIWY8pBOOOMSCMbViecS9PwEm731XUH117KOiklK0jsOKf2W7iMSbRSL+8VmDHSz9hPlOfJZJ6n1M7ItYe3lEneLa54QGciWvgPU3vMCJCEuEeCXpfvCvAnyVvGosm1xi4YJQs4zD939qUpU6CsI4ySh3+0ph2FfKAidfz8H5cPoUphDj8nVG/v15ppKCAhjEm46RIr68ZB15BGiwp7bbpF8L7uXFT4JbRdf9ZP5s2evTIce7/wA=</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00005_UserUpdate_FUNC_NonCS_Full_Update_UserName_Others</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Update_Access_NonCS</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4E99389111664AEE0401F0A07990AF6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">08482E0679EC69ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D12F2DD48A10D559E0401F0A059918B0/User/urn:dece:userid:org:dece:D12F2DD48A1ED559E0401F0A059918B0/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/2015/02/Account/urn:dece:accountid:org:dece:08482E0679EC69ADE05305991F0A0FF6/User/urn:dece:userid:org:dece:08482E0679F869ADE05305991F0A0FF6/Policy/urn:dece:type:policy:ManageUserConsent</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn:dece:type:policy:ManageUserConsent</con:value></con:property><con:property><con:name>ENNODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD3CD43AEEE91F252E0401F0A079913BF</con:value></con:property><con:property><con:name>ENNODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD3CD44C830AA5460E0401F0A079913BD</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE1B04F1ACAC275C1E0401F0A079905C0</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE1B04F1ACAA475C1E0401F0A079905C0</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Gits\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:08482E0679F869ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:08482E0679EC69ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E4E99389111664AEE0401F0A07990AF6</con:value></con:property><con:property><con:name>NODE_USER_ID_REQ_ENTITY</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">08482E0679F869ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>NODE_USER_ID_CREATED_BY</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">08482E0679F869ADE05305991F0A0FF6</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bd6efb96-bbf3-4226-9917-48245caf20c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateULC_API" searchProperties="true" id="700e149b-ee46-4a91-8f84-916ec3bfa37e"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="78845ba2-8601-4f71-87d9-d285f6650912"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

tC.setPropertyValue("expectErrType","SUCCESS");

if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
{
	tC.setPropertyValue("Policy_Class","urn:dece:type:policy:UserLinkConsent");
}
else
{
	tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:UserLinkConsent", "UTF-8"));
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="ceac24ad-0e3f-4bd8-af8d-5c003d89a19c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreateSinglePolicyPost_ULC");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_ULC" id="d5c2eb02-3b4f-4a08-9f5d-ce1a78c4dba0"><con:settings/><con:config service="PolicyCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateSinglePolicyPost" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_ULC" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="RET_concat.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@bind_address"/></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd"  xmlns:dece="${#Project#coordinatorSchema}"  xmlns:ds="http://www.w3.org/2000/09/xmldsig#"  xmlns:md="http://www.movielabs.com/md"  xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <dece:Policy>
    <dece:PolicyClass>urn:dece:type:policy:UserLinkConsent</dece:PolicyClass>
    <dece:Resource>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_REQ_ENTITY}</dece:Resource>
    <dece:RequestingEntity>urn:dece:org:org:dece:${#TestCase#nodeid}</dece:RequestingEntity>
    <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
    <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_CREATED_BY}">
        <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
    </dece:ResourceStatus>
  </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="0426fe4f-882b-4ea7-bfbd-4124b6413d7e">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreateSinglePolicyPost_ULC');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                             contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="7b8c1483-c541-4f08-aab9-041228f45d0f">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00005_UserUpdate_FUNC_NonCS_Full_Update_UserName_Others</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Update_Access_NonCS</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E26A4604E1520139E0401F0A05990BBB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E26A4604E0EC0139E0401F0A05990BBB</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D12F2DD48A10D559E0401F0A059918B0/User/urn:dece:userid:org:dece:D12F2DD48A1ED559E0401F0A059918B0/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/07/Account/urn:dece:accountid:org:dece:E26A4604E0EC0139E0401F0A05990BBB/User/urn:dece:userid:org:dece:E26A4604E1520139E0401F0A05990BBB/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3ATermsOfUse</con:value></con:property><con:property><con:name>ENNODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD3CD43AEEE91F252E0401F0A079913BF</con:value></con:property><con:property><con:name>ENNODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD3CD44C830AA5460E0401F0A079913BD</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE1B04F1ACAC275C1E0401F0A079905C0</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE1B04F1ACAA475C1E0401F0A079905C0</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:/DECE/RET_concat.pem</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE26A4604E1520139E0401F0A05990BBB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE26A4604E0EC0139E0401F0A05990BBB</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bd6efb96-bbf3-4226-9917-48245caf20c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>43c5dbf9-3574-4373-9d3f-f1b49a7247c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateGeoPrivacyAssent" searchProperties="true" id="1a42b403-fac9-4e9b-beba-08428b612d51"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="584480d5-e621-4b91-826d-e5a22d8a067f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

tC.setPropertyValue("expectErrType","SUCCESS");

if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
{
	tC.setPropertyValue("Policy_Class","urn:dece:type:policy:GeoPrivacyAssent");
}
else
{
	tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:GeoPrivacyAssent", "UTF-8"));
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="b362db47-5a20-4722-a929-195f2edc4c9f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreateSinglePolicyPost_CLGAttestation");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateGeoPrivacyAssent" id="bf3cd8d9-3dda-4fe1-923c-6bcb85102ee9"><con:settings/><con:config service="PolicyCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateSinglePolicyPost" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateGeoPrivacyAssent" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="RET_concat.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@bind_address"/></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd"  xmlns:dece="${#Project#coordinatorSchema}"  xmlns:ds="http://www.w3.org/2000/09/xmldsig#"  xmlns:md="http://www.movielabs.com/md"  xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <dece:Policy>
    <dece:PolicyClass>urn:dece:type:policy:GeoPrivacyAssent</dece:PolicyClass>
    <dece:Resource>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_REQ_ENTITY}</dece:Resource>
    <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
    <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_CREATED_BY}">
        <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
    </dece:ResourceStatus>
  </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="a6e60891-93be-4a57-891b-4d0e499de53a">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreateGeoPrivacyAssent');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                             contentLocation = value[0];
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="fe2c0a6c-2712-49f0-9c07-b0bafe8efedf">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00005_UserUpdate_FUNC_NonCS_Full_Update_UserName_Others</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Update_Access_NonCS</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4DAFF5120AEA1B8E0401F0A079957C6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D12F2DD48A10D559E0401F0A059918B0/User/urn:dece:userid:org:dece:D12F2DD48A1ED559E0401F0A059918B0/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/07/Account/urn:dece:accountid:org:dece:E643241E6041B4D4E0401F0A079949D1/User/urn:dece:userid:org:dece:E6432442DEB9EDF6E0401F0A079949AA/Policy/urn:dece:type:policy:GeoPrivacyAssent</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn:dece:type:policy:GeoPrivacyAssent</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">C:/certs/iscportal1_concat.pem</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E6432442DEB9EDF6E0401F0A079949AA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E643241E6041B4D4E0401F0A079949D1</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E4DAFF51203BA1B8E0401F0A079957C6</con:value></con:property><con:property><con:name>NODE_USER_ID_REQ_ENTITY</con:name><con:value>E6432442DEB9EDF6E0401F0A079949AA</con:value></con:property><con:property><con:name>NODE_USER_ID_CREATED_BY</con:name><con:value>E6432D13CD199C26E0401F0A0799607F</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bd6efb96-bbf3-4226-9917-48245caf20c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6f62f720-8990-433e-b87f-e5bfb4b7fa27</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update_UserStatus" searchProperties="true" id="8b84599f-9011-4a1a-a266-93bd146fbbc4"><con:settings/><con:testStep type="groovy" name="Update_User_Status" id="89ea8073-43b0-413c-be9e-23e7e1586b7f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def status = context.expand( '${#TestCase#Status}' )
def userID = context.expand( '${#TestCase#User_OID}' )


def dbHost = context.expand( '${#Project#targetSystem}' );

a = new dbUtils.dbUtils(log,dbHost);

String sql = """update ACCOUNT_USER set STATUS = '$status' where USER_OID = hextoraw('$userID')""";

log.info "SQL : " + sql;

a.dbConnExecuteUpdate(sql,dbHost);
</script></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>blocked:tou</con:value></con:property><con:property><con:name>UserID</con:name><con:value>${#TestCase#UserID}</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E357C457986AEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE357C457986AEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>user_oid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">00FE35CEC86F6B94E05305991F0A1B73</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E357C457986BEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_02013_AccountDelete_FUNC_CS_Deleting_an_account_when_Account_Blocked_and_User_blocked:tou_P1</con:value></con:property><con:property><con:name>sName</con:name><con:value>AccountDelete_FUNC_SPLCS_P2</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update_AccStatus" searchProperties="true" id="80487ede-aacb-4a03-9614-e48d276255d6"><con:settings/><con:testStep type="groovy" name="Update_AccStatus" id="8fa8c609-1d19-4270-8788-687034e7a859"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def status = context.expand( '${#TestCase#Status}' )
def accountID = context.expand( '${#TestCase#account_oid}' )

log.info "account Oid :  " + accountID;

def dbHost = context.expand( '${#Project#targetSystem}' );

a = new dbUtils.dbUtils(log,dbHost);


String sql = """update ACCOUNT set STATUS = '$status' where ACCOUNT_OID = hextoraw('$accountID')""";

log.info "SQL : " + sql;

a.dbConnExecuteUpdate(sql,dbHost);
</script></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>other</con:value></con:property><con:property><con:name>UserID</con:name><con:value>${#TestCase#UserID}</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E357C457986AEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE357C457986AEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>user_oid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35B3E37C6B78E05305991F0ABA86</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_02018_AccountDelete_FUNC_CS_Deleting_an_account_which_is_other_P1</con:value></con:property><con:property><con:name>sName</con:name><con:value>AccountDelete_FUNC_SPLCS_P2</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5fdeaf38-c814-4c84-a148-2fc4448e3d23</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7ebe7972-d488-48c3-9a7f-c13ef2cdf20d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update_Policy_Status" searchProperties="true" id="0fe6ceb2-bf24-4dc3-a614-abc94dd19143"><con:settings/><con:testStep type="groovy" name="Update_Policy_Status" id="f0e80ecd-5515-441d-b52f-589542815928"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def status = context.expand( '${#TestCase#Status}' )
def userID = context.expand( '${#TestCase#User_OID}' )
def Policy = context.expand( '${#TestCase#Policy}' )
def userName = context.expand( '${#TestCase#UserName}' )

def dbHost = context.expand( '${#Project#targetSystem}' );

a = new dbUtils.dbUtils(log,dbHost);


//String sql = """update POLICY set STATUS = '$status' where CREATED_BY = hextoraw('$userID') and POLICY_CLASS = '$Policy'""";

//String sql = """update policy set status = '$status' where policy_oid in (select prel.policy_oid from policy p, policy_relationship prel where p.policy_oid = prel.policy_oid(+) and policy_actor = hextoraw('$userID')) and policy_class = '$Policy'""";



String sql = """update policy set status = '$status' 
		where policy_oid in 
		(select policy_oid from policy_relationship where policy_actor 
				in ((select user_oid from account_user where lower(username) = lower('$userName')), 
				(select account_oid from account_user where lower(username) = lower('$userName')))) 
		and policy_class = '$Policy'""";

log.info "SQL : " + sql;

a.dbConnExecuteUpdate(sql,dbHost);

</script></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>deleted</con:value></con:property><con:property><con:name>UserID</con:name><con:value>${#TestCase#UserID}</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E357C457986AEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE357C457986AEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>user_oid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">00FE35BEA3476B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E357C457986BEE09E0401F0A059917C9</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_02014_AccountDelete_FUNC_CS_Deleting_an_account_No_ManageAccountConsent_Policy_P1</con:value></con:property><con:property><con:name>sName</con:name><con:value>AccountDelete_FUNC_SPLCS_P2</con:value></con:property><con:property><con:name>Policy</con:name><con:value>105</con:value></con:property><con:property><con:name>UserName</con:name><con:value>AcountDelete_firstuser20140819_1408463666389</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5fdeaf38-c814-4c84-a148-2fc4448e3d23</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7ebe7972-d488-48c3-9a7f-c13ef2cdf20d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RenameTCs" searchProperties="true" id="9dedc8c4-1bc7-4f3d-90f8-76fc1c3bb757"><con:settings/><con:testStep type="groovy" name="Rename" id="d3663aca-7eb8-443b-a986-2d81307d5a76"><con:settings/><con:config><script>import java.io.*;

def testCase  = testRunner.getTestCase();
def testSuite = "07.User_Get_GeoProfile_Portal";

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

BufferedReader br = new BufferedReader(new FileReader("C:\\Users\\rshrivastava\\Desktop\\TCs.txt"));

def newTestCaseName;

log.info "TCCount:"+TCCount;

for(i = 0; i &lt;= TCCount - 1; i++)
{               
                def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);

                newTestCaseName = br.readLine();
                log.info "Input Test Case Name: "+newTestCaseName;
                
                                targetTestCase.setFailOnError(true);
                                targetTestCase.name = newTestCaseName;    
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Get_Responses" id="e2ef2188-45e8-4193-86c8-78d3a2732120"><con:settings/><con:config><script>import java.io.*;

//def commonTestStep = "User_Delete_API";

def testCase  = testRunner.getTestCase();
def TSList = testRunner.testCase.testSuite.project.getTestSuiteList();
def TSCount = testRunner.testCase.testSuite.project.getTestSuiteCount();

//def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
//def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();


log.info "TS List:"+TSList[0].name;

//log.info "TCCount:"+TCCount;

for(k in (0..TSCount-1))
      {
            def testSuite = TSList[k].name;
            def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList(); 
            def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();
            log.info "TestSuite  " + testSuite +"  TCCount:"+TCCount;
            log.info "TSList[k].disabled " + TSList[k].disabled 
            
            if ((TSList[k].disabled).toString() != "true")
            {                              
                  for(i in (0..TCCount-1))                                                                  
				{                                                                                         
                  	try {
                        		def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
						def targetStep = targetTestCase.getTestStepByName(commonTestStep);
						log.info  testSuite + " " + targetTestCase.name+" "+targetStep.getPropertyValue("ResponseType");         
                  		}
                  	catch(Throwable e) {
                        log.info "Exception : " + e;
                        }                                                                              
                   }                              
            }
      }
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserDelete_DB_Validation" searchProperties="true" id="04c62a5f-b87c-4edf-81e6-67cf45583012"><con:settings/><con:testStep type="groovy" name="SAML_HISTORY_STATUS_Validate" id="a0620ce5-5336-43ee-aa9d-a49fbb701e62"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def dbHost = context.expand( '${#Project#targetSystem}' );
def node_User_ID = context.expand( '${#TestCase#Node_User_ID}');
def userID = context.expand( '${#TestCase#User_OID}' )
def status = context.expand( '${#TestCase#Status}' )

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("ResponseTypeUserDelete",callTC.getPropertyValue("ResponseTypeUserDelete"));

def responseType = tC.getPropertyValue("ResponseTypeUserDelete");

log.info "Response Type is:  ----> "+ responseType;


if (responseType == "SUCCESS")
	{              
		a = new dbUtils.dbUtils(log,dbHost);
		b = new dbUtils.dbUser(log,dbHost);

			String sql = """select accUsr.status USER_STATUS, usrHstry.status USER_HISTORY_STATUS, 
			usrSAMLAssrt.status USER_SAML_STATUS, usrHstry.DESCRIPTION 
			FROM ACCOUNT_USER accUsr INNER JOIN USER_STATUS_HISTORY usrHstry
			ON accUsr.user_oid = '$userID' and usrHstry.status='deleted'
			and accUsr.user_oid = usrHstry.user_oid INNER JOIN NODE_USER ndUsr
			ON accUsr.user_oid=ndUsr.user_oid INNER JOIN node_user_saml_assertion usrSAMLAssrt
			ON ndUsr.row_oid = usrSAMLAssrt.node_user_id""";
			
			log.info sql;
			
			results = a.SelectFromDB(sql,dbHost);

		//b.dbConnClose();
		assert results.length() > 0;
		log.info "results" + results;
		
		def myXML = new XmlSlurper().parseText(results);   
		def i = 0;

		for (i;i&lt;=myXML.ResultSet.Row.size()-1;i++)
			{  
				if (myXML != null) 
				{
					log.info "User Status from ACCOUNT_USER table is -----      " + myXML.ResultSet.Row.USER_STATUS[0].text();
					assert myXML.ResultSet.Row.USER_STATUS[0].text() == context.expand( '${#TestCase#Status}' );

					if(context.expand( '${#TestCase#Status}')=='deleted')
						{
							assert myXML.ResultSet.Row.DESCRIPTION[0].text() == "User Deleted" ;
							assert myXML.ResultSet.Row.USER_HISTORY_STATUS[0].text() == context.expand( '${#TestCase#Status}') ;
							assert myXML.ResultSet.Row.USER_SAML_STATUS[0].text() == context.expand( '${#TestCase#Status}') ;
							log.info "Description from USER_STATUS_HISTORY is -----     " + myXML.ResultSet.Row.DESCRIPTION[0].text();
							log.info "User status from USER_STATUS_HISTORY is -----     " + myXML.ResultSet.Row.USER_HISTORY_STATUS[0].text();
							log.info "SAML status from NODE_USER_SAML_ASSERTION is -----" + myXML.ResultSet.Row.USER_SAML_STATUS[0].text();                                                   
						}
					else
					{
						assert myXML.ResultSet.Row.USER_SAML_STATUS[0].text() == "active" ;
					}
					log.info "User DB Validations Passed"; 
				}
				
				else 
				{
					assert XMLbody == "";
				}          
			}
	}
else
	{
		log.info "DB Validations skipped due to non SUCCESS scenario";
	}

</script></con:config></con:testStep><con:properties><con:property><con:name>dbxmlresponse</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>Status</con:name><con:value>deleted</con:value></con:property><con:property><con:name>Node_User_ID</con:name><con:value>E52C7ACD89FC834FE0401F0A07991922</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>91160</con:value></con:property><con:property><con:name>User_OID</con:name><con:value>E52C7ACD89FD834FE0401F0A07991922</con:value></con:property><con:property><con:name>dbxmlresponse_rowOID</con:name><con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <NODE_USER_SAML_UUID>_77a2a0ff-dba8-4c48-bd90-b725d6ece88e</NODE_USER_SAML_UUID>
    </Row>
    <Row rowNumber='2'>
      <NODE_USER_SAML_UUID>_77a2a0ff-dba8-4c48-bd90-b725d6ece88e</NODE_USER_SAML_UUID>
    </Row>
  </ResultSet>
</Results>]]></con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00038_UserDelete_FUNC_CS_Basic_Delete_Full_200_OK_P2</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Delete_Access_Portal_CS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters><con:property><con:name>ACCID</con:name><con:value/></con:property></con:reportParameters></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update_User_CLG_Details" searchProperties="true" id="d2b2d499-5c24-479e-9969-404560acf0db"><con:settings/><con:testStep type="groovy" name="Update_User_CLG_Details" id="092d897d-5a1b-434e-b3d0-90fdb21bd08c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def dbHost = context.expand( '${#Project#targetSystem}' );

def nodeuserID = context.expand('${#TestCase#UserID}' );
def clguserID = context.expand('${#TestCase#CLGUserID}' );


a = new dbUtils.dbUtils(log,dbHost);
b = new dbUtils.dbUser(log,dbHost);

//log.info b.userGetfromNodeUserId(nodeuserID);

if(context.expand( '${#TestCase#Action}' ) == "addclg")
{
sql = """DECLARE
BEGIN
insert into USER_LEGAL_GUARDIAN values(sys_guid(),
'$nodeuserID',
'$clguserID',
'"""+context.expand('${#TestCase#CLGAttestationStatus}' )+"""',
sysdate,
null,
null);
commit;
END;""";
}
else
if(context.expand( '${#TestCase#Action}' ) == "removeclg")
{
sql = """delete from USER_LEGAL_GUARDIAN where USER_OID = '$nodeuserID'""";
}

a.dbConnExecuteUpdate(sql,dbHost);

</script></con:config></con:testStep><con:properties><con:property><con:name>Action</con:name><con:value>addclg</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>UserID</con:name><con:value>E4890111840E60DCE0401F0A05993DE1</con:value></con:property><con:property><con:name>CLGAttestationStatus</con:name><con:value>pending</con:value></con:property><con:property><con:name>CLGUserID</con:name><con:value>E488FA3B9A214958E0401F0A05993DE5</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>91162</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00002_US_UserDelete_FUNC_Pending_CLG_Delete_Self_P1</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Delete_GeoProfile</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="User_Create_DB_Validation" searchProperties="true" id="c4b23f47-43c5-4476-ac81-eaa1b66c5619"><con:settings/><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="d7765da1-c221-46a8-b0ee-4ada2ad4098a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

def callTS = tP.getTestSuiteByName(callTSname);

tC.setPropertyValue("ADULT_DOB_XML",callTC.getPropertyValue("ADULT_DOB_XML"));
tC.setPropertyValue("YOUTH_DOB_XML",callTC.getPropertyValue("YOUTH_DOB_XML"));
tC.setPropertyValue("CHILD_DOB_XML",callTC.getPropertyValue("CHILD_DOB_XML"));
tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("GivenName",callTC.getPropertyValue("GivenName"));
tC.setPropertyValue("SurName",callTC.getPropertyValue("SurName"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("DateOfBirth",callTC.getPropertyValue("DateOfBirth"));
tC.setPropertyValue("ResponseTypeUserCreate",callTC.getPropertyValue("ResponseTypeUserCreate"));
tC.setPropertyValue("GeoProfile",callTC.getPropertyValue("GeoProfile"));
tC.setPropertyValue("role",callTS.getPropertyValue("role"));

tC.setPropertyValue("PrimaryEmail",callTC.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("DisplayImageURL",callTC.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",callTC.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",callTC.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",callTC.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",callTC.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",callTC.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",callTC.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",callTC.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",callTC.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",callTC.getPropertyValue("Language1"));
tC.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("urnUser",callTC.getPropertyValue("urnUser"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",callTC.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",callTC.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",callTC.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",callTC.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",callTC.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify_ACCOUNT_USER_Table" id="88f3d83f-4381-4a06-958f-b95673d0a3fc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname);

tC.setPropertyValue("IsMinor","");
tC.setPropertyValue("Requestee","");

def dbHost = context.expand( '${#Project#targetSystem}' );
def node_User_ID = context.expand( '${#TestCase#Node_User_ID}');
def userID = context.expand( '${#TestCase#User_OID}' );
def node_OID = context.expand( '${#Project#Node_OID}' );
def responseType = tC.getPropertyValue("ResponseTypeUserCreate");

def BirthDate = context.expand( '${#TestCase#DateOfBirth}' );
def myXML1 = null;
def finalbday = null;

a = new dbUtils.dbUtils(log,dbHost);
b = new dbUtils.dbUser(log,dbHost);

			
log.info "Response Type is:  ----> "+ responseType;

def cHILD_DOB_XML = context.expand( '${#TestCase#CHILD_DOB_XML}' )
def aDULT_DOB_XML = context.expand( '${#TestCase#ADULT_DOB_XML}' )
def yOUTH_DOB_XML = context.expand( '${#TestCase#YOUTH_DOB_XML}' )

def dateOfBirth = context.expand( '${#TestCase#DateOfBirth}' )
def privilege = context.expand( '${#TestCase#Privilege}' )


if (responseType == "SUCCESS")
     {
		Result = b.userGetRow(userID);
	
		log.info "Result Set:   " + Result		
		myXML1 = new XmlSlurper().parseText(Result);		
		log.info "Actual Rows ==  " + myXML1.ResultSet.Row.size();
		
		assert myXML1.ResultSet.Row.size() == 1;       	
		assert myXML1.ResultSet.Row.STATUS == 'blocked:tou';
		log.info "privelege ;; " + myXML1.ResultSet.Row.PRIVILEGE;
		assert myXML1.ResultSet.Row.PRIVILEGE == tC.getPropertyValue("Privilege");
		assert myXML1.ResultSet.Row.USERNAME == tC.getPropertyValue("UserName");
		assert myXML1.ResultSet.Row.GIVEN_NAME == tC.getPropertyValue("GivenName");
		assert myXML1.ResultSet.Row.SURNAME == tC.getPropertyValue("SurName") ;
		assert myXML1.ResultSet.Row.PRIMARY_EMAIL == tC.getPropertyValue("PrimaryEmail") ;
		assert myXML1.ResultSet.Row.TELEPHONE == tC.getPropertyValue("TelephoneNumber") ;
		assert myXML1.ResultSet.Row.MOBILE_TELEPHONE == tC.getPropertyValue("MobileTelephoneNumber") ;

        if(context.expand( '${#TestCase#DateOfBirth}' )== context.expand( '${#TestCase#CHILD_DOB_XML}' ))
        { 
			log.info "I am CHILD";
			tC.setPropertyValue("Requestee","CHILD");
			
			BirthDate = tC.getPropertyValue("CHILD_DOB_XML");
			assert myXML1.ResultSet.Row.AGE_CLASS == 'CHILD';
			
			tC.setPropertyValue("IsMinor","true");
			
			assert myXML1.ResultSet.Row.EMAIL_CLOCK_START_TIME == 'null' ;
			assert myXML1.ResultSet.Row.EMAIL_CLOCK_END_TIME == 'null' ;        
        } 
		else 
		if(context.expand( '${#TestCase#DateOfBirth}' )== context.expand( '${#TestCase#YOUTH_DOB_XML}' ))
        {
			log.info "I am YOUTH";
			tC.setPropertyValue("Requestee","YOUTH");
			
			BirthDate = tC.getPropertyValue("YOUTH_DOB_XML");
			assert myXML1.ResultSet.Row.AGE_CLASS == 'YOUTH';
			
			tC.setPropertyValue("IsMinor","true");
			
			assert myXML1.ResultSet.Row.EMAIL_CLOCK_START_TIME == 'null' ;
			assert myXML1.ResultSet.Row.EMAIL_CLOCK_END_TIME == 'null' ;
         } 
        else 
        if(context.expand( '${#TestCase#DateOfBirth}' )== context.expand( '${#TestCase#ADULT_DOB_XML}' ))
        {
			log.info "I am ADULT";
			tC.setPropertyValue("Requestee","ADULT");
			
			BirthDate = tC.getPropertyValue("ADULT_DOB_XML");
			
			assert myXML1.ResultSet.Row.AGE_CLASS == 'ADULT';
			
			tC.setPropertyValue("IsMinor","false");
  /*        
         if(context.expand( '${#TestCase#attested}' ) == 'true')
          {
            assert myXML1.ResultSet.Row.EMAIL_CLOCK_START_TIME == 'null' ;
            assert myXML1.ResultSet.Row.EMAIL_CLOCK_END_TIME == 'null' ;
          }
          else
          {
            assert myXML1.ResultSet.Row.EMAIL_CLOCK_START_TIME != 'null' ;
            assert myXML1.ResultSet.Row.EMAIL_CLOCK_END_TIME != 'null' ;	
          }
   */        
        } 

          // Retrieving Birth Date in proper format
 /******************************************************************************************************/
          
         bdaystring = myXML1.ResultSet.Row.BIRTH_DATE.toString();

         int lastspace = bdaystring.lastIndexOf(' ');

         finalbday = bdaystring.substring(0,lastspace);
          
         log.info "Birth Day:  " + finalbday;
       
        assert finalbday == BirthDate;

/******************************************************************************************************/

        assert myXML1.ResultSet.Row.COUNTRY == context.expand( '${#Project#GeoProfile}');

        if(context.expand( '${#TestCase#attested}' ) == 'true')
        {
          assert myXML1.ResultSet.Row.PRIMARYEMAIL_VERIFICATION_DATE != null ;
          assert myXML1.ResultSet.Row.PRIMARYEMAIL_VERIFICATION_ENTY != null ;
          assert myXML1.ResultSet.Row.PRIMARYEMAIL_VERIFICATION_ID != null ;
        }  

      log.info "User ACCOUNT_USER table Validations Passed";
               
   }// end if for success response check
  else
  { 
  	assert  myXML1.ResultSet.Row.size() == 0;
  	log.info "No Validation Required";
  	testRunner.gotoStepByName("End_Of_DB_Validations");
  }
  
   
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify_NODE_USER_Table" id="49705387-620b-49cb-a9bc-0928f1079024"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def dbHost = context.expand( '${#Project#targetSystem}' );
def node_User_ID = context.expand( '${#TestCase#Node_User_ID}');
def userID = context.expand( '${#TestCase#User_OID}' );
def node_OID = context.expand( '${#Project#Node_OID}' );
def responseType = tC.getPropertyValue("ResponseTypeUserCreate");
def geoProfile = context.expand( '${#Project#GeoProfile}' )


def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname);

a = new dbUtils.dbUtils(log,dbHost);
b = new dbUtils.dbUser(log,dbHost);

def role = tC.getPropertyValue("role");

log.info "Role : --- " + role;

//log.info b.accountGetfromNodeAccountId(accID);

String sql = """select to_char(rawtohex(NODE_OID)) NODE_OID from NODE_USER where USER_OID = hextoraw('$userID')""";

log.info sql;

results = a.SelectFromDB(sql,dbHost);

//log.info results;

/*
*  If zero length, no need to continue;
*/
  assert results.length() > 0;

  def myXML = new XmlSlurper().parseText(results);
  
  log.info "myXML.ResultSet.Row.size() is [" + myXML.ResultSet.Row.size() + "]";


if (responseType == "SUCCESS")
{
	assert myXML.ResultSet.Row.size() > 0;

// Modified to comply with Generic Portal
//    if(context.expand( '${#TestCase#Role}' ) == 'urn:dece:role:portal' || context.expand( '${#TestCase#Role}' ) == 'urn:dece:role:portal:customersupport' || context.expand( '${#TestCase#Role}' ) == 'urn:dece:role:dece:customersupport' || context.expand( '${#TestCase#Role}' ) == 'urn:dece:role:coordinator:customersupport')

	if( role ==  'urn:dece:role:dece:customersupport' || role == 'urn:dece:role:coordinator:customersupport')
     { 	
       assert myXML.ResultSet.Row.size() == 4;	 
       //assert myXML.ResultSet.Row[0].NODE_OID == context.expand( '${#Project#Node_OID}' ); 
       log.info "DECE Node User Validation Passed";	    
     }
     else
     { 
       assert myXML.ResultSet.Row.size() > 4;
      // assert myXML.ResultSet.Row[0].NODE_OID == context.expand( '${#Project#Node_OID}' ); 		 
      // assert myXML.ResultSet.Row[1].NODE_OID == "10"; 
       log.info "3rd Party Node User Validation Passed";    
     }
	
}
else
{
	assert myXML.ResultSet.Row.size() == 0;
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify_USER_Policies" id="482c9984-194b-4b02-886e-06be0089e7c0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def dbHost = context.expand( '${#Project#targetSystem}' );
def node_User_ID = context.expand( '${#TestCase#Node_User_ID}');
def userID = context.expand( '${#TestCase#User_OID}' );
def node_OID = context.expand( '${#Project#Node_OID}' );
def responseType = tC.getPropertyValue("ResponseTypeUserCreate");
def geoProfile = context.expand( '${#Project#GeoProfile}' )


def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname);

a = new dbUtils.dbUtils(log,dbHost);
b = new dbUtils.dbUser(log,dbHost);

def role = tC.getPropertyValue("role");

		String sql = """select POLICY_CLASS,STATUS,RESOURCE_ID from POLICY P,POLICY_RELATIONSHIP PR,POLICY_RESOURCE PRE where PR.POLICY_ACTOR = hextoraw('$userID')
		and P.POLICY_OID = PR.POLICY_OID and PR.POLICY_OID = PRE.POLICY_OID(+) ORDER BY POLICY_CLASS""";


		this.log.info "Query is:  " + sql;
		results = a.SelectFromDB(sql,dbHost);
		
		log.info "Policies Results : " + results;
		/*
		*  If zero length, no need to continue;
		*/
		assert results.length() > 0;
		
		def myXML = new XmlSlurper().parseText(results);
		
		log.info "myXML.ResultSet.Row.size() is [" + myXML.ResultSet.Row.size() + "]";
		
		assert myXML.ResultSet.Row.size() > 0;

		//if( (context.expand( '${#TestCase#IsMinor}')=="true") &amp;&amp; (context.expand( '${#Project#AgeClass}')=="YOUTH") ) 

		if (context.expand( '${#TestCase#IsMinor}')=="true") 
			{
				if((geoProfile == "US")|| (geoProfile == "CA"))
					{
						assert myXML.ResultSet.Row[0].POLICY_CLASS == "302";  
						//      assert myXML.ResultSet.Row[0].RESOURCE_ID == "us:riaa:prohibitexplicitlyrics";  
						assert myXML.ResultSet.Row[0].RESOURCE_ID == "US:RIAA:PROHIBITEXPLICITLYRICS"; 
					}
				else if ((geoProfile == "GB") || (geoProfile == "AU") || (geoProfile == "NZ") || (geoProfile == "IE") || (geoProfile == "AT") || (geoProfile == "CH") || (geoProfile == "DE") || (geoProfile == "FR"))
					{
						assert myXML.ResultSet.Row[0].POLICY_CLASS == "300"; 

						assert myXML.ResultSet.Row[1].POLICY_CLASS == "302";  
						//      assert myXML.ResultSet.Row[1].RESOURCE_ID == "us:riaa:prohibitexplicitlyrics";  
						assert myXML.ResultSet.Row[1].RESOURCE_ID == "US:RIAA:PROHIBITEXPLICITLYRICS"; 
					} 
			} 
		else
			{
				assert myXML.ResultSet.Row[0].POLICY_CLASS == "304";
			}


log.info "Policy Validation Passed";	


</script></con:config></con:testStep><con:testStep type="groovy" name="Verify_USER_LEGAL_GUARDIAN_Table" id="69330bd7-d073-40bf-a7af-04bbf8e0e165"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

if ((context.expand( '${#TestCase#IsMinor}' )=="true") &amp;&amp; context.expand( '${#Testcase#Requestee}')=="CHILD")
	{
	  	def dbHost = context.expand( '${#Project#targetSystem}' );
		def userID = context.expand( '${#TestCase#User_OID}' );
	  	def node_OID = context.expand( '${#Project#Node_OID}' );

		a = new dbUtils.dbUtils(log,dbHost);
		b = new dbUtils.dbUser(log,dbHost);
		
		String sql = """select ATTESTATION_STATUS from USER_LEGAL_GUARDIAN where USER_OID = hextoraw('$userID')""";
		
		results = a.SelectFromDB(sql,dbHost);
		
		/*
		*  If zero length, no need to continue;
		*/
		assert results.length() > 0;
		
		def myXML = new XmlSlurper().parseText(results);
		
		log.info "myXML.ResultSet.Row.size() is [" + myXML.ResultSet.Row.size() + "]";
		
		assert myXML.ResultSet.Row.size() > 0;
		
		assert myXML.ResultSet.Row[0].ATTESTATION_STATUS == "pending";  
		
		log.info "Legal Guardian Validation Passed";	
	}
else
	{
		log.info "No Legal Guardian Validation Required";
	}
</script></con:config></con:testStep><con:testStep type="groovy" name="End_Of_DB_Validations" id="418d894c-0d5e-41ce-af71-087c1cf97b82"><con:settings/><con:config><script>

log.info "DB Validations Complete";</script></con:config></con:testStep><con:properties><con:property><con:name>ADULT_DOB_XML</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>attested</con:name><con:value/></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2002-09-08</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130910_092427</con:value></con:property><con:property><con:name>IsMinor</con:name><con:value>true</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>Node_User_ID</con:name><con:value>E60068AEF0205738E0401F0A07990D3F</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>90508</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>YOUTH</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>Role</con:name><con:value>nodeIdRTL</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Create_GeoProfile</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>Status</con:name><con:value>FAIL</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130910_092427</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00021_UserCreate_AUTH_Creator_ADULT_Full_New_YOUTH_Standard_201_CREATED_P1</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>UserName</con:name><con:value>usercreate20130910_092427</con:value></con:property><con:property><con:name>User_OID</con:name><con:value>E60068AEF0215738E0401F0A07990D3F</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1999-09-14</con:value></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>GeoProfile</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters><con:property><con:name>ACCID</con:name><con:value/></con:property></con:reportParameters><con:breakPoints><con:testStepId>d7765da1-c221-46a8-b0ee-4ada2ad4098a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>418d894c-0d5e-41ce-af71-087c1cf97b82</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Account_Delete_DB_Validation" searchProperties="true" id="48b71661-ccd2-4642-af3b-32fe9e8abc9f"><con:settings/><con:testStep type="groovy" name="Verify_User_DB_Details" id="142255c0-283c-4c33-b8e9-5f6a22d944a1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def tC  = testRunner.getTestCase();

def dbHost = context.expand( '${#Project#targetsystem}');
def accID = context.expand( '${#TestCase#ACCOUNT_OID}' )

def aCCOUNT_STATUS = context.expand( '${#TestCase#ACCOUNT_STATUS}' )
def uSER_SAML_STATUS = context.expand( '${#TestCase#USER_SAML_STATUS}' )
def uSER_STATUS = context.expand( '${#TestCase#USER_STATUS}' )

def Result;
def myXML;
a = new dbUtils.dbUtils(log,dbHost);
b = new dbUtils.dbAccount(log,dbHost);
c = new dbUtils.dbUser(log,dbHost);

	 	
	 	String sql = """Select to_char(rawtohex(accusr.user_oid)) user_oid, accusr.status USER_STATUS,acc.status ACCNT_STATUS,
	 					to_char(rawtohex(ndusr.node_user_id)) node_user_id, to_char(rawtohex(ndusr.node_oid)) node_oid,nusa.status NUSA_STATUS 
	 					from account acc INNER JOIN account_user accusr 
	 					ON 
	 					acc.account_oid=hextoraw('$accID') 
	 					and accusr.status&lt;>'deleted' 
	 					and acc.account_oid=accusr.account_oid  
	 					INNER JOIN node_user ndusr 
	 					ON 
	 					ndusr.node_user_saml_uuid is not null 
	 					and accusr.user_oid=ndusr.user_oid  
	 					LEFT OUTER JOIN  node_user_saml_assertion nusa 
	 					ON  
	 					ndusr.node_user_saml_uuid=nusa.node_user_saml_uuid""";

	log.info "SQL Query : " + sql;
		Result = a.SelectFromDB(sql,dbHost);
		log.info "Result  : " + Result
	 	myXML = new XmlSlurper().parseText(Result);
	
	 	log.info "Results  "+  myXML;
	 	def count = myXML.ResultSet.Row.size();
	 	def i = 0;
	 	for (i; i&lt;=count-1;i++)
	 	{ 
	 		log.info "loop " + i
	 		assert myXML.ResultSet.Row[i].USER_STATUS.toString() == context.expand('${#TestCase#USER_STATUS}');
	 		assert myXML.ResultSet.Row[i].ACCNT_STATUS.toString() == context.expand('${#TestCase#ACCOUNT_STATUS}');
	 		assert myXML.ResultSet.Row[i].NUSA_STATUS.toString() == context.expand('${#TestCase#USER_SAML_STATUS}');		 		
	 	}

  log.info "User Validations Passed";


</script></con:config></con:testStep><con:properties><con:property><con:name>ACCOUNT_OID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">01B11ED1FFF60656E05305991F0ACE03</con:value></con:property><con:property><con:name>ACCOUNT_STATUS</con:name><con:value>deleted</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value>AccountDelete_PERM</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00001_AccountDelete_PERM_API_Invocation_from_a_Retailer_P0</con:value></con:property><con:property><con:name>USER_SAML_STATUS</con:name><con:value>deleted</con:value></con:property><con:property><con:name>USER_STATUS</con:name><con:value>active</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>142255c0-283c-4c33-b8e9-5f6a22d944a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="STS_API_Device" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="d3c8e548-121e-485c-a2d6-01c3d99b6e9a">
      <con:settings/>
      <con:testStep type="groovy" name="Establish Test Case Properties">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("tokentype",null);
tC.setPropertyValue("audience",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);

tC.setPropertyValue("expectErrType","SUCCESS");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Extract Required Properties from Calling Test Case">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def dbUtils;

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

def callTS = tP.getTestSuiteByName(callTSname);

//tP.setPropertyValue("audience",callTS.getPropertyValue("audience"));

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("username",callTC.getPropertyValue("UserName1"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));

if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
{
	tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
	tC.setPropertyValue("audience",tP.getPropertyValue("audience"));
}
else
{
	tC.setPropertyValue("tokentype",URLEncoder.encode(tP.getPropertyValue("urntokenType_userpassword"), "UTF-8"));
	if(tP.getPropertyValue("audience")!=null){
	tC.setPropertyValue("audience",URLEncoder.encode(tP.getPropertyValue("audience"), "UTF-8"));
}
}

	</script></con:config>
      </con:testStep>
      
      
      
      
      <con:testStep type="groovy" name="Establish pem">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("POST - STS");
RestTestRequestStep testStep1 = tC.getTestStepByName("GET - STS");

def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);</script></con:config>
      </con:testStep>
      
      <con:testStep type="restrequest" name="POST - STS"><con:settings/><con:config service="STS" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/SecurityToken/SecurityTokenExchange" methodName="STSCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - STS" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="DEV_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="x-dece-ApplicationAuthorization" value="dclient-basic w0rnh4lz4bfuaxasn7qu:A3D90BF121838C67444D58AC6D6554A6" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Device_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes" ?> 
  <Credentials xmlns="${#Project#coordinatorSchema}">
  <Username>${#TestCase#username}</Username> 
  <Password>${#TestCase#password}</Password> 
  </Credentials>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="audience" value="${#TestCase#audience}"/>
  <con:entry key="tokentype" value="${#TestCase#tokentype}"/>
</con:parameters></con:restRequest></con:config></con:testStep>
      <con:testStep type="groovy" name="Extract Response Body and Headers">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def tStep = tC.getTestStepByName('POST - STS');

tC.setPropertyValue("status", null);
tC.setPropertyValue("connection", null);
tC.setPropertyValue("contentType", null);
tC.setPropertyValue("contentLength", null);
tC.setPropertyValue("contentLocation", null);
/*
*  Get the HTTP headers
*/
String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("versionMajor");
String minor = tP.getPropertyValue("versionMinor");

tP.setPropertyValue("targetURL","qa.p.uvvu.com:7001");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("status", status);
tC.setPropertyValue("connection", connection);
tC.setPropertyValue("contentType", contentType);
tC.setPropertyValue("contentLength", contentLength);
tC.setPropertyValue("contentLocation", contentLocation);

this.log.info "contentLength [$contentLength]";
this.log.info "status [$status]";
this.log.info "contentType [$contentType]";
this.log.info "contentLocation [$contentLocation]";

/*
 *if (contentLength.toInteger() > 0) {
	rawResp = new ByteArrayOutputStream();
     rawResp = tStep.httpRequest.response.getRawResponseData();
     strVal  = new String(rawResp);

     int startAssert = strVal.indexOf("&lt;?xml version=\"1.0\" ");
  
	String XMLbody  = strVal.substring(startAssert, strVal.length());
     
	tC.setPropertyValue("XMLbody", XMLbody);
}
*/</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Extract ERROR table information" disabled="true">
        <con:settings/>
        <con:config>
          <script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def a = new dbUtils.dbErrors(log,tP.getPropertyValue("targetSystem"));

tC.setPropertyValue("errorStatusCode",null);
tC.setPropertyValue("errorReason",null);
tC.setPropertyValue("errorID",null);

String xmlData = "";
String errId = "";

log.info "expectErrType[" + tC.getPropertyValue("expectErrType") + "]";

switch (tC.getPropertyValue("expectErrType")) {
	case "ADULT_CONTENT_NOT_ALLOWED":
		errId = "Policy:AdultContentNotAllowed";
		break;
	case "ACCOUNT_NOT_ACTIVE":
		errId = "AccountNotActive";
		break;
	case "API_NOT_AUTH":
		errId = "Security:RoleInvalid";
		break;
	case "BLOCKED_ACCESS_UNRATED":
		errId = "Policy:UnratedContentBlocked";
		break;
	case "CID_NOT_ACTIVE":
		errId = "ContentIDNotActive";
		break;
	case "CID_NOT_FOUND":
		errId = "ContentIDNotFound";
		break;
	case "LOGICAL_ASSET_NOT_ACTIVE":
		errId = "AssetLogicalIDNotActive";
		break;
	case "RT_RENT_EXPIRED":
		errId = "RightsTokenRentalExpired";
		break;
	case "RT_NOT_FOUND":
		errId = "RightsTokenNotFound";
		break;
	case "RT_NOT_ACTIVE":
		errId = "RightsTokenNotActive";
		break;
	case "RATING_POLICY":
		errId = "RatingPolicyExists";
		break;
	case "CID_NOT_GRANTED":
	case "STREAM_RIGHTS_NOT_GRANTED":
		errId = "StreamRightsNotGranted";
		break;
	case "STREAM_COUNT_EXCEEDED":
		errId = "AccountStreamCountExceedMaxLimit";
		break;
	case "STREAM_COUNT_EXCEEDED_USER":
		errId = "UserStreamCountExceedMaxLimit";
		break;
	case "STREAM_INVALID_TRANS":
		errId = "StreamTransactionIdInvalid";
		break;
	case "STREAM_ACCOUNTID_MISMATCH":
		errId = "AccountIdUnmatched";
		break;		
	case "STREAM_NICKNAME_TOO_LONG":
		errId = "StreamClientNicknameTooLong";
		break;		
	case "STREAM_WINDOW_NOT_ALLOWED":
		errId = "StreamAssetWindowNotAllowed";
		break;
	case "STREAM_OWNER_MISMATCH":
		errId = "StreamOwnerMismatch";
		break;
	case "STREAM_NOT_FOUND":
		errId = "StreamNotFound";
		break;
	case "STREAM_NOT_ACTIVE":
		errId = "StreamNotActive";
		break;
	case "USER_NOT_MATCH_TOKEN":
		errId = "UserIdUnmatched";
		break;
	case "USER_NOT_ACTIVE":
		errId = "UserNotActive";
		break;
	case "USER_NOT_SUPPLIED":
		errId = "UserNotSpecified";
		break;
}

try {
	xmlData = a.errGetIdInfo(errId);
	
	assert xmlData.trim().length() > 1;

	def myXML = new XmlSlurper().parseText(xmlData);

	log.info myXML.ResultSet.Row.size();
	tC.setPropertyValue("errorStatusCode", myXML.ResultSet.Row[0].STATUS_CODE.toString());
	tC.setPropertyValue("errorReason", myXML.ResultSet.Row[0].REASON.toString());
	tC.setPropertyValue("errorID", myXML.ResultSet.Row[0].ERROR_ID.toString());

	/*
	*  The DB does not contain the complete HTTP status
	*  string, only the code.  Thus, we must adjust.
	*/
	switch (tC.getPropertyValue("errorStatusCode")) {
		case "400":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 400 Bad Request");
			break;
		case "403":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 403 Forbidden");
			break;
		case "404":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 404 Not Found");
			break;
		case "409":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 409 Conflict");
			break;
	}
}
catch (Throwable e) {
	log.info "STEP FAILURE! --- " + e;
}</script>
        </con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify Response Body and Headers and save assertion">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def url           = tP.getPropertyValue("targetURL");
//def urnacct       = tP.getPropertyValue("urnaccount");
//def urnstream     = tP.getPropertyValue("urnstream");
def expectErrType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");
def nodeaccountid = tC.getPropertyValue("nodeaccountid");

boolean dobodyXML = true;
boolean doContentTypeHeader = true;
boolean doConnectionClose = false;
boolean doContentLocaton  = false;
boolean contentLengthZero = false;

String errorID     = "";
String errorReason = "";
String errorLink   = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
//String orgRequest  = url + "/dece/Account/" + urnacct + nodeaccountid;
String expectHTTPstatus = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";

if (expectErrType == "") {
	expectErrType = "SUCCESS";
}

this.log.info "expectErrType is $expectErrType";
switch (expectErrType) {
	case "SUCCESS":
	default:
		expectHTTPstatus = "HTTP/1.1 201 Created";
		expectHTTPcontenttype = "application/xml";
		contentLengthZero = false;
		doContentLocaton  = true;
		doContentTypeHeader = false;
		dobodyXML = true;
	break;
}

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("status");
//assert tC.getPropertyValue("status") == expectHTTPstatus;

// Connection
log.info "doConnectionClose=="+doConnectionClose;
if (doConnectionClose) {
	this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("connection");
	assert tC.getPropertyValue("connection") == expectHTTPconnection;
}
/*
//Content-Length
if (contentLengthZero) {
	//assert tC.getPropertyValue("contentLength").toInteger() > 0;
} else {
	//assert tC.getPropertyValue("contentLength").toInteger() > 0;
}
*/	
//Content-Type
if (doContentTypeHeader) {
	assert tC.getPropertyValue("contentType") == expectHTTPcontenttype;
}

// Content-Location
log.info "doContentLocaton=="+doContentLocaton;
if (doContentLocaton) {
	assert tC.getPropertyValue("contentLocation") != null;
	
	def b = tC.getPropertyValue("contentLocation").toURL();
	log.info "Path=="+b.getPath();
	assert b.getPath().matches("/rest/$major/$minor/SecurityToken/Assertion/[_,0-9,a-f,-]*");
	def parms = b.getPath().split("/");
	tC.setPropertyValue("assertionUUID",parms[parms.size() - 1]);
} else {
	//assert tC.getPropertyValue("contentLocation") == null;
}

if (dobodyXML) {
	if (XMLbody.length() > 0) {
		def myXML = new XmlSlurper().parseText(XMLbody);

		// Verify response sizes...
		assert myXML.saml2:Assertion.size() == 1;
		assert myXML.ds:Signature.size()    == 1;
		assert myXML.ds:SignedInfo.size()   == 1;
		assert myXML.ds:DigestValue.size()  == 1;
		assert myXML.ds:SignatureValue.size()  == 1;
		assert myXML.ds:X509Certificate.size() == 1;
		assert myXML.saml2:NameID.size()    == 1;
		assert myXML.saml2:AudienceRestriction.size() == 1;
		assert myXML.saml2:AssertionURIRef.size() == 1;
		assert myXML.saml2:AssertionURIRef.size() == 1;
	}
}</script></con:config>
      </con:testStep>
      
      
      
      
      
      
      
      
      
      
      <con:testStep type="groovy" name="Return the assertion information to the Calling Test Case">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("assertionUUID",null);
callTC.setPropertyValue("assertionUUID",null);
callTC.setPropertyValue("assertionUUID",tC.getPropertyValue("assertionUUID"));
callTC.setPropertyValue("assertionUUID1",tC.getPropertyValue("assertionUUID"));</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Base64EncodeUsernamePassword"><con:settings/><con:config><script>def tC = testRunner.getTestCase();


String combo = tC.getPropertyValue("username").toString().toLowerCase() + ":" + tC.getPropertyValue("password").toString();
String authHeaderValue = "Basic " + combo.bytes.encodeBase64().toString()

log.info "combo[$combo] - authHeaderValue[$authHeaderValue]";

tC.setPropertyValue("authHeaderValue",authHeaderValue);
</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - STS"><con:settings/><con:config service="STS" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/SecurityToken/Assertion/{assertionUUID}" methodName="STSGet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - STS" mediaType="application/xml" sslKeystore="DEV_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#authHeaderValue}"/>
  &lt;con:entry key="x-dece-ApplicationAuthorization" value="dclient-basic w0rnh4lz4bfuaxasn7qu:A3D90BF121838C67444D58AC6D6554A6"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Device_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="assertionUUID" value="${#TestCase#assertionUUID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers 1">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def tStep  = tC.getTestStepByName('GET - STS');

/*
*  Get the HTTP headers
*/
String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("versionMajor");
String minor = tP.getPropertyValue("versionMinor");
String XMLbody = "";

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

//def expXML = tStep.httpRequest.response.getResponseContent();
this.log.info tStep.httpRequest.response.getRawResponseData();
//new b = tStep.httpRequest.response.getResponseContent();

rawResp = new ByteArrayOutputStream();

rawResp = tStep.httpRequest.response.getRawResponseData();
strVal  = new String(rawResp);
log.info strVal;

int startAssert = strVal.indexOf("&lt;?xml version=\"1.0\" ");
log.info  "startAssert: "+startAssert;

if (startAssert > 0) {
	XMLbody  = strVal.substring(startAssert, strVal.length());
}

tC.setPropertyValue("XMLbody", XMLbody);
tC.setPropertyValue("status", status);
tC.setPropertyValue("connection", connection);
tC.setPropertyValue("contentType", contentType);
tC.setPropertyValue("contentLength", contentLength);
tC.setPropertyValue("contentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Extract Key Elements from &lt;Assertion> Body">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def XMLbody = tC.getPropertyValue("XMLbody");
def expectErrType = tC.getPropertyValue("expectErrType");

int lastColon = 0;
int lastSlash = 0;

if (expectErrType == "" || expectErrType == "SUCCESS") {
	tC.setPropertyValue("SAML",null);
	tC.setPropertyValue("NODE_ACCOUNT_ID",null);
	tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
	tC.setPropertyValue("NODE_USER_ID",null);
	tC.setPropertyValue("NODE_USER_ID_FULL",null);
	
	if (XMLbody.length() > 0) {
		def myXML = new XmlSlurper().parseText(XMLbody).declareNamespace(saml2: "urn:oasis:names:tc:SAML:2.0:assertion");

			// Verify response sizes...
			assert myXML.size() == 1;

			def accountId = myXML."saml2:AttributeStatement"."saml2:Attribute"."saml2:AttributeValue";
			def userId    = myXML."saml2:Subject"."saml2:NameID";
			def NotBefore = myXML."saml2:Conditions".@NotBefore.text();
			def NotOnOrAfter = myXML."saml2:Conditions".@NotOnOrAfter.text();
			def AudienceRestriction = myXML."saml2:Conditions".AudienceRestriction;
			
			this.log.info "accountId [$accountId]";
			this.log.info "userId [$userId]";
			this.log.info "NotBefore [$NotBefore]";
			this.log.info "NotOnOrAfter [$NotOnOrAfter]";
			this.log.info "AudienceRestriction [$AudienceRestriction]";
						
			tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",accountId.toString());
			tC.setPropertyValue("NODE_USER_ID_FULL",userId.toString());
			tC.setPropertyValue("assertionNotBefore",NotBefore.toString());
			tC.setPropertyValue("assertionNotOnOrAfter",NotOnOrAfter.toString());
			tC.setPropertyValue("assertionAudienceRestriction",NotBefore.toString());
			tC.setPropertyValue("NODE_ACCOUNT_ID",accountId.toString().substring(accountId.toString().lastIndexOf(':') + 1).toString());
			tC.setPropertyValue("NODE_USER_ID",userId.toString().substring(userId.toString().lastIndexOf(':') + 1).toString());

			if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO")
			{
                    tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",accountId.toString());
				tC.setPropertyValue("NODE_USER_ID_FULL",userId.toString());
        	     } 
        	     else 
        	     {
				tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(accountId.toString()));
				tC.setPropertyValue("NODE_USER_ID_FULL",URLEncoder.encode(userId.toString()));        	     	
		     }
		     
	} else {
		return false;
	}
}</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def url           = tP.getPropertyValue("targetURL");
//def urnacct       = tP.getPropertyValue("urnaccount");
//def urnstream     = tP.getPropertyValue("urnstream");
def expectErrType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");
def nodeaccountid = tC.getPropertyValue("nodeaccountid");

boolean dobodyXML = true;
boolean doContentTypeHeader = true;
boolean doConnectionClose = false;
boolean doContentLocaton  = false;
boolean contentLengthZero = false;

String errorID     = "";
String errorReason = "";
String errorLink   = "";
//String orgRequest  = url + "/dece/Account/" + urnacct + nodeaccountid;
String expectHTTPstatus = "HTTP/1.1 200 OK";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";

if (expectErrType == "") {
	expectErrType = "SUCCESS";
}

this.log.info "expectErrType is $expectErrType";
switch (expectErrType) {
	case "SUCCESS":
	default:
		expectHTTPstatus = "HTTP/1.1 200 OK";
		expectHTTPcontenttype = "application/xml";
		contentLengthZero = false;
		doContentLocaton  = false;
		doContentTypeHeader = false;
		dobodyXML = true;
	break;
}

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("status");
//assert tC.getPropertyValue("status") == expectHTTPstatus;

// Connection

if (doConnectionClose) {
	this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("connection");
	assert tC.getPropertyValue("connection") == expectHTTPconnection;
}
/*
//Content-Length
if (contentLengthZero) {
	//assert tC.getPropertyValue("contentLength").toInteger() == 0;
} else {
	//assert tC.getPropertyValue("contentLength").toInteger() > 0;
}
*/	
//Content-Type
if (doContentTypeHeader) {
	assert tC.getPropertyValue("contentType") == expectHTTPcontenttype;
}

// Content-Location
if (doContentLocaton) {
	assert tC.getPropertyValue("contentLocation") != null;
	
	def b = tC.getPropertyValue("contentLocation").toURL();
	assert b.getPath().matches("/dece/SecurityToken/Assertion/[0-9,a-f,-]*");
	def parms = b.getPath().split("/");
	
	tC.setPropertyValue("assertionUUID",parms[parms.size() - 1]);
} else {
	assert tC.getPropertyValue("contentLocation") == null;
}

if (dobodyXML) {
	if (XMLbody.length() > 0) {
		def myXML = new XmlSlurper().parseText(XMLbody);

		// Verify response sizes...
		assert myXML.saml2:Assertion.size() == 1;
		assert myXML.ds:Signature.size()    == 1;
		assert myXML.ds:SignedInfo.size()   == 1;
		assert myXML.ds:DigestValue.size()  == 1;
		assert myXML.ds:SignatureValue.size()  == 1;
		assert myXML.ds:X509Certificate.size() == 1;
		assert myXML.saml2:NameID.size()    == 1;
		assert myXML.saml2:AudienceRestriction.size() == 1;
		assert myXML.saml2:AssertionURIRef.size() == 1;
		assert myXML.saml2:AssertionURIRef.size() == 1;
/*
		
		// ErrorCode
		this.log.info "ErrorCode: Expect[$errorID] Received: " + myXML.Error.@ErrorID.toString();
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason: Expect[$errorReason] Received: " + myXML.Error.Reason.toString();
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorReason: Expect[$errorLink] Received: " + myXML.Error.ErrorLink.toString();
		//assert myXML.Error.ErrorLink.toString() == errorLink;
		*/
	} else {
		return false;
	}
}



</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Deflate and encode the &lt;Assertion>">
        <con:settings/>
        <con:config><script>import java.util.zip.Deflater;
import org.w3c.tools.codec.Base64Encoder;
import java.io.ByteArrayOutputStream;
import java.util.zip.DeflaterOutputStream;
import java.lang.*;

import org.opensaml.xml.util.Base64;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)


int compressedLength = 0;
//String XMLbody = tC.getPropertyValue("XMLassertion").toString();
String XMLbodyRaw = tC.getPropertyValue("XMLbody").toString();

int startAssert = XMLbodyRaw.indexOf("&lt;saml2:Assertion ");
int endAssert   = XMLbodyRaw.indexOf("&lt;/saml2:Assertion>");


String XMLbody = XMLbodyRaw.substring(startAssert, endAssert + 18).trim();
String base64encodeStr = "";

this.log.info "XMLbody is [$XMLbody]";

def myXML = new XmlSlurper().parseText(XMLbody);
tC.setPropertyValue("assertId",myXML.@ID.toString());

// Perform Deflation
//byte[] xmlBytes = XMLbody.trim().getBytes();
byte [] xmlBytes = new byte[XMLbody.trim().length()];

Deflater compresser = new Deflater(Deflater.DEFLATED, true);
compresser.setInput(XMLbody.trim().getBytes());
compresser.finish();
compressedLength = compresser.deflate(xmlBytes);

byte [] subArray = Arrays.copyOfRange(xmlBytes, 0, compressedLength);
base64encodeStr = Base64.encodeBytes(subArray,Base64.DONT_BREAK_LINES);
// finally, URL encode it
tC.setPropertyValue("SAML", "SAML2 Assertion="+base64encodeStr);


</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Return extracted Properties back to calling Test Case">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

String acctID = tC.getPropertyValue("NODE_ACCOUNT_ID");
String userID = tC.getPropertyValue("NODE_USER_ID");

callTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));
//callTC.setPropertyValue("SAML_USER1",tC.getPropertyValue("SAML"));

if (acctID != null &amp;&amp; acctID.length() > 0) {
	
	callTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
	//callTC.setPropertyValue("NODE_ACCOUNT_ID1",tC.getPropertyValue("NODE_ACCOUNT_ID"));
	callTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
	//callTC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
} else {
	callTC.setPropertyValue("assertionAccountId","ERROR");
}
if (userID != null &amp;&amp; userID.length() > 0) {
	callTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID"));
	//callTC.setPropertyValue("NODE_USER_ID1",tC.getPropertyValue("NODE_USER_ID"));
	callTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
	//callTC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL"));
} else {
	callTC.setPropertyValue("assertionUserId","ERROR");
}</script></con:config>
      </con:testStep><con:properties>
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
      <con:property><con:name>assertId</con:name><con:value>_46a62ebb-c6ed-45e7-954c-247a800e81e2</con:value></con:property><con:property><con:name>assertionAudienceRestriction</con:name><con:value>2014-11-20T09:45:06.408Z</con:value></con:property><con:property><con:name>assertionNotBefore</con:name><con:value>2014-11-20T09:45:06.408Z</con:value></con:property><con:property><con:name>assertionNotOnOrAfter</con:name><con:value>2024-11-20T09:45:16.408Z</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_46a62ebb-c6ed-45e7-954c-247a800e81e2</con:value></con:property><con:property><con:name>assertionUUIDprior</con:name><con:value>_732606f9-3702-470e-9ecf-2bbb514a18ba</con:value></con:property><con:property><con:name>audience</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>connection</con:name><con:value>close</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>2605</con:value></con:property><con:property><con:name>contentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>contentType</con:name><con:value>text/xml;charset=UTF-8</con:value></con:property><con:property><con:name>errorID</con:name><con:value/></con:property><con:property><con:name>errorReason</con:name><con:value/></con:property><con:property><con:name>errorStatusCode</con:name><con:value/></con:property><con:property><con:name>expectErrType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Gits\Certs\QALP1/DEV_concat.pem</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DEV</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>08482E0CDC4868B0E05305991F0A6CFB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:08482E0CDC4868B0E05305991F0A6CFB</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>08482E0CDC4968B0E05305991F0A6CFB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:08482E0CDC4968B0E05305991F0A6CFB</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuo6DP0VJn3shDhpuGUKM5RLT3qhBQrd7csZ4yjgkjg0diDt1x87QDZQ2sPeT4yEvLRsSUu55DgMLKfJOcSCRqyQhgHjTuata0nMnAhzyh2GQ+COIM6weX/nWEXk4O0RreC269q/dhmXLZhMdFIGT7dLUNFrJZvoll3BVYSgaoIlQzlPwGVcYCbqmoVMWzdN3UJPqObYJccsF21UfdUKY4i5xJYhRaRtSKW8rs2EWDiGsVqtiquLYhRPDQsh0/h1fzckMwix1rhc3yhLFDc28aToAYEgIEUShcalsRdz6XFnSKcMiySGTS7vu1zIQDVDxnicTs+0/Cx4LvOjzGxhFjFKcEA/sXqfexCzyCs0g2kUUzELv72EiRSwDinRiWmzM83Yp3Yi0B7DmGOdz7C5wRqADzEwAoXRwK1rZ6dVLTv6FGPG/SgO+b75Z3yALSGIFjIX315rQ+10wCMv1bgE4riMBAmnS+ipZl1gAnxTTSCnQxUeY/Bpeke5bNCUK3bGLr0Dc/0abToFLv6mQDvFWYOMcZBA4yUNxu1ReXpntOaz95T2g5vrYd8dzl9X9YzAbnDmyEu7Ng+aMm+i9YnRU+f+2Xu77n2sSjehmFeMBJ+7ZNoZmLdXnRt4Tn/dvkM4Eh+8+Rw1+Zs3+JysZjdX9xfC74zbg3O7PBnEL56BJt58+PAcvQz8f9zaq9F96V0ntUr43scUxvSBuz0Bo/K8Xx1W/dW4F84C0u/2bT/+PL+G7qTsB6bn2zTyEvvxFlpPzamXDtLFrLI0mqtRwOv5dXb47/u2Mz9MJm9AxNZUbeC2C11ZJSx+FjPloZ7uZ6HOQokPF8CE1lCnlHY4iZQ76jmyhmsbVe2q1UGtdsuulatXqINKF6hUq5ld1Cy3uldbkVmzOKDYiphPVS4lueu2+ZkgCZ0J4Bhi7QekNha40IvEA3uIm76AeE9hTWtXYVVbfwt0+N82p4zxqArgKs0VyPeCIyqOtip+yMU6rvbGFr/pLSnJy5kvJalVsrszLedymt5x0Ssmy2WixNypqCmO5SzI0TJLBrKMIZBEzt/HUzQHZuQoxklit735YfLcv08xETM2FFhAKLulkJknbLchcLXdXOZBeurq3EspCyEgFcd8rUBuZsX4x+VNHKLipPtR/qyi2MsveAxrJ4+8p1xugrKpspTQffweEjUd+YSQSMJSOaJRvAt+DOBY8n1n/sg5FyFiOkkEfP9PQc1eXcOERAkTblvLHLt6kPEUHwtwfgd9gckkJ/8Gof//EaLTrAUIyC8XTjN8tUocLgHZdEdTNkm/kZXqT7Kyz67xxf3Vs/NOhz3e+A8=</con:value></con:property><con:property><con:name>sName</con:name><con:value>AccountDelete_PERM</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00013_AccountDelete_PERM_API_Invocation_from_a_Device_P0</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>username</con:name><con:value>AcountDelete_firstuser20141120_1416476733872</con:value></con:property><con:property><con:name>username1</con:name><con:value>firstuser20130726_035156</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<?xml version="1.0" encoding="UTF-8"?><saml2:Assertion xmlns:saml2="urn:oasis:names:tc:SAML:2.0:assertion" ID="_46a62ebb-c6ed-45e7-954c-247a800e81e2" IssueInstant="2014-11-20T09:45:16.408Z" Version="2.0" xmlns:xs="http://www.w3.org/2001/XMLSchema"><saml2:Issuer>http://c.decellc.com/</saml2:Issuer><ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#"><ds:SignedInfo><ds:CanonicalizationMethod Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"/><ds:SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/><ds:Reference URI="#_46a62ebb-c6ed-45e7-954c-247a800e81e2"><ds:Transforms><ds:Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/><ds:Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"><ec:InclusiveNamespaces xmlns:ec="http://www.w3.org/2001/10/xml-exc-c14n#" PrefixList="xs"/></ds:Transform></ds:Transforms><ds:DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/><ds:DigestValue>YxlVDU6gL/CkhqxiQlJGSQISkZw=</ds:DigestValue></ds:Reference></ds:SignedInfo><ds:SignatureValue>UTEMWdjGNyw5Jmtk7/ua+IcgER1KBEJeWxXKqemUtysAWoAsjdRzbwhJBM3tfEVDR+46bRrYd/0bdkSOWoYRfHI9Z/FYNGu97mqQaieViOsINteU6kQ8S8fwVNmhlcQFQ4frz+GeFb6fl1df4iodu4PKeCTAgdxRxph7v/AwUls=</ds:SignatureValue></ds:Signature><saml2:Subject><saml2:NameID Format="urn:oasis:names:tc:SAML:2.0:nameid-format:persistent">urn:dece:userid:org:dece:08482E0CDC4968B0E05305991F0A6CFB</saml2:NameID><saml2:SubjectConfirmation Method="urn:oasis:names:tc:SAML:2.0:cm:bearer"><saml2:SubjectConfirmationData NotOnOrAfter="2014-11-20T12:45:16.408Z"/></saml2:SubjectConfirmation></saml2:Subject><saml2:Conditions NotBefore="2014-11-20T09:45:06.408Z" NotOnOrAfter="2024-11-20T09:45:16.408Z"/><saml2:Advice><saml2:AssertionURIRef>https://qa.d.uvvu.com:7001/rest/2015/02/SecurityToken/Assertion/_46a62ebb-c6ed-45e7-954c-247a800e81e2</saml2:AssertionURIRef></saml2:Advice><saml2:AuthnStatement AuthnInstant="2014-11-20T09:45:16.408Z" SessionIndex="_46a62ebb-c6ed-45e7-954c-247a800e81e2"><saml2:AuthnContext><saml2:AuthnContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:Password</saml2:AuthnContextClassRef><saml2:AuthenticatingAuthority>urn:dece:org:org:dece:coordinator</saml2:AuthenticatingAuthority></saml2:AuthnContext></saml2:AuthnStatement><saml2:AttributeStatement><saml2:Attribute Name="accountID" NameFormat="urn:dece:type:accountID"><saml2:AttributeValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xs:string">urn:dece:accountid:org:dece:08482E0CDC4868B0E05305991F0A6CFB</saml2:AttributeValue></saml2:Attribute></saml2:AttributeStatement></saml2:Assertion>]]></con:value></con:property><con:property><con:name>authHeaderValue</con:name><con:value>Basic YWNvdW50ZGVsZXRlX2ZpcnN0dXNlcjIwMTQxMTIwXzE0MTY0NzY3MzM4NzI6dGVzdGluZw==</con:value></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>555384c9-6fa2-448b-a38e-713264e945f2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Account_Get_API_Device" searchProperties="true" id="9b5955fa-2320-4d68-8c21-524f9f94eaea"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("AccountGet");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep.name]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="AccountGet"><con:settings/><con:config service="Account" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}" methodName="AccountGet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AccountGet" mediaType="application/xml" sslKeystore="DEV_concat.pem" id="e1b8ad00-9ed3-4f09-980e-f2f86bdf18ca" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="x-dece-ApplicationAuthorization" value="dclient-basic w0rnh4lz4bfuaxasn7qu:A3D90BF121838C67444D58AC6D6554A6"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Device_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('AccountGet');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String ETag = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);

tC.setPropertyValue("ETag", ETag);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseTypeAccountGet}' );
def usercount = context.expand( '${#TestCase#UserCount}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#Project#Node_Account}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		assert context.expand( '${#TestCase#httpCacheControl}') != null;
		assert context.expand( '${#TestCase#httpEtag}') != null;
		assert context.expand( '${#TestCase#httpExpires}') != null;
		assert context.expand( '${#TestCase#httpLastModified}') != null;
		//XMLbodynull        = true;
		//httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
		errorReason = "The country code is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
		errorReason = "The country code is required.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
		errorReason = "The API call is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	break;
	
	case "USER_INACTIVE":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
		//errorReason = "The requestor is not active.";
	errorReason = "The requesting member is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;
	
	case "USER_REQUESTING_NOT_PROVIDED":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
		errorReason = "Requesting User ID Not Specified";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;

	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "The user does not have permission to perform the requested action.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;	

     case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "SPL_CS_ALLOWED_ACCT":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;

     case "ACCT_ALREADY_DELETED":
	     expectHTTPstatus = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:AccountDeleted";
		errorReason = "The account has already been removed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDeleted";
     break;
	
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

def hostAddress = b.getHost();
 log.info " hostAddress....     " + hostAddress;
 		if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3ST");
			}
			else if (hostAddress == "lp3.qa-web-vip2-s02.uvvu.com")
			{
				tP.setPropertyValue("targetSystem","LP3CH");
			}

	if (tP.getPropertyValue("URLEncode").toUpperCase()=="NO"){
                                
          assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
                 
		 int lastColon = urlStr.lastIndexOf(':');
		 int lastSlash = urlStr.lastIndexOf('/');
		 accountid     = urlStr.substring(lastColon + 1);
			                                
		tC.setPropertyValue("ACCID",accountid);
		
		
	} else {
		 assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*");
		 int lastColon = urlStr.lastIndexOf('%3A');
		 int lastSlash = urlStr.lastIndexOf('/');
		 accountid     = urlStr.substring(lastColon + 3);
		 	                                
		tC.setPropertyValue("ACCID",accountid);
				
	}
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
//assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;  -- Comment for cache issue


//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
	log.info "myXML  "+ myXML;
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	else {
		//assert myXML.Account.size() == 1;
		assert myXML.DisplayName.size() == 1;
		assert myXML.Country.size() == 1;
		assert myXML.RightsLockerID.size() == 1;
//		assert myXML.ActiveStreamCount == 0;
//		assert myXML.AvailableStreams == 12;
		assert myXML.UserList.size() == 1;
		assert myXML.UserList.UserReference.size().toString() > 0;
		assert myXML.ResourceStatus.size() == 1;
		assert myXML.ResourceStatus.Current.size() == 1;
		assert myXML.ResourceStatus.Current.@CreatedBy.size() == 1;
		assert myXML.ResourceStatus.Current.@CreationDate.size() == 1;
		assert myXML.ResourceStatus.Current.Value.size() == 1;
		assert myXML.ResourceStatus.Current.Description.size() == 1;

	     if(context.expand( '${#TestCase#CS}') == 'Y')
	     {
	       assert myXML.ResourceStatus.History.size() == 1;
	     }
	}
} 

</script></con:config></con:testStep><con:testStep type="groovy" name="Return_ETag_to_Calling_TestCase"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));</script></con:config></con:testStep><con:properties><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<dece:Account AccountID="urn:dece:accountid:org:dece:08482E0CDC4868B0E05305991F0A6CFB" xmlns:dece="http://www.decellc.org/schema/2015/03/coordinator" xmlns:md="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#">
   <dece:DisplayName>accname_20141120_031531</dece:DisplayName>
   <dece:Country>US</dece:Country>
   <dece:RightsLockerID>urn:dece:rightslockerid:org:dece:08482E0679F469ADE05305991F0A0FF6</dece:RightsLockerID>
   <dece:UserList>
      <dece:UserReference>urn:dece:userid:org:dece:08482E0CDC4968B0E05305991F0A6CFB</dece:UserReference>
   </dece:UserList>
   <dece:ResourceStatus>
      <dece:Current ModificationDate="2014-11-20T09:45:08.238Z" ModifiedBy="urn:dece:org:org:dece:RET" CreationDate="2014-11-20T09:44:51.333Z" CreatedBy="urn:dece:org:org:dece:RET">
         <dece:Value>urn:dece:type:status:active</dece:Value>
         <dece:Description>Flipping Account Status to active</dece:Description>
      </dece:Current>
   </dece:ResourceStatus>
</dece:Account>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00013_AccountDelete_PERM_API_Invocation_from_a_Device_P0</con:value></con:property><con:property><con:name>sName</con:name><con:value>AccountDelete_PERM</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DEV</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>DF6FE78EF7554B5BE0401F0A05994050</con:value></con:property><con:property><con:name>SecondUserName</con:name><con:value>username_20130618_082841</con:value></con:property><con:property><con:name>SAML</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SAML2 Assertion=nVbbcuo6DP0VJn3shDhpuGUKM5RLT3qhBQrd7csZ4yjgkjg0diDt1x87QDZQ2sPeT4yEvLRsSUu55DgMLKfJOcSCRqyQhgHjTuata0nMnAhzyh2GQ+COIM6weX/nWEXk4O0RreC269q/dhmXLZhMdFIGT7dLUNFrJZvoll3BVYSgaoIlQzlPwGVcYCbqmoVMWzdN3UJPqObYJccsF21UfdUKY4i5xJYhRaRtSKW8rs2EWDiGsVqtiquLYhRPDQsh0/h1fzckMwix1rhc3yhLFDc28aToAYEgIEUShcalsRdz6XFnSKcMiySGTS7vu1zIQDVDxnicTs+0/Cx4LvOjzGxhFjFKcEA/sXqfexCzyCs0g2kUUzELv72EiRSwDinRiWmzM83Yp3Yi0B7DmGOdz7C5wRqADzEwAoXRwK1rZ6dVLTv6FGPG/SgO+b75Z3yALSGIFjIX315rQ+10wCMv1bgE4riMBAmnS+ipZl1gAnxTTSCnQxUeY/Bpeke5bNCUK3bGLr0Dc/0abToFLv6mQDvFWYOMcZBA4yUNxu1ReXpntOaz95T2g5vrYd8dzl9X9YzAbnDmyEu7Ng+aMm+i9YnRU+f+2Xu77n2sSjehmFeMBJ+7ZNoZmLdXnRt4Tn/dvkM4Eh+8+Rw1+Zs3+JysZjdX9xfC74zbg3O7PBnEL56BJt58+PAcvQz8f9zaq9F96V0ntUr43scUxvSBuz0Bo/K8Xx1W/dW4F84C0u/2bT/+PL+G7qTsB6bn2zTyEvvxFlpPzamXDtLFrLI0mqtRwOv5dXb47/u2Mz9MJm9AxNZUbeC2C11ZJSx+FjPloZ7uZ6HOQokPF8CE1lCnlHY4iZQ76jmyhmsbVe2q1UGtdsuulatXqINKF6hUq5ld1Cy3uldbkVmzOKDYiphPVS4lueu2+ZkgCZ0J4Bhi7QekNha40IvEA3uIm76AeE9hTWtXYVVbfwt0+N82p4zxqArgKs0VyPeCIyqOtip+yMU6rvbGFr/pLSnJy5kvJalVsrszLedymt5x0Ssmy2WixNypqCmO5SzI0TJLBrKMIZBEzt/HUzQHZuQoxklit735YfLcv08xETM2FFhAKLulkJknbLchcLXdXOZBeurq3EspCyEgFcd8rUBuZsX4x+VNHKLipPtR/qyi2MsveAxrJ4+8p1xugrKpspTQffweEjUd+YSQSMJSOaJRvAt+DOBY8n1n/sg5FyFiOkkEfP9PQc1eXcOERAkTblvLHLt6kPEUHwtwfgd9gckkJ/8Gof//EaLTrAUIyC8XTjN8tUocLgHZdEdTNkm/kZXqT7Kyz67xxf3Vs/NOhz3e+A8=</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>D3DF7BAE6D161DAEE0401F0A05993EE0</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADF6FE78EF7554B5BE0401F0A05994050</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Gits\Certs\QALP1/DEV_concat.pem</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:08482E0CDC4868B0E05305991F0A6CFB</con:value></con:property><con:property><con:name>ResponseTypeAccountGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"08482E15023F68B7E05305991F0A48F8:822407B4"</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E763CEDB3CA1FFCEE0401F0A07991BDA</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5ff78eb3-d79f-4f4a-b9a8-5ec1c84f61c0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3d78db1c-105b-43a0-b406-6bb0f690c833</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662fb201-c4e7-401c-b10a-548ea13f5020</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Account_Delete_API_Device" searchProperties="true" id="5f0bbe7a-5937-4eac-b54e-e79d00d8349d"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("AccountDelete");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep.name]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="AccountDelete"><con:settings/><con:config service="Account" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}" methodName="AccountDelete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AccountDelete" mediaType="application/xml" sslKeystore="DEV_concat.pem" id="7e19750b-606f-4d7d-bda7-cfa0c9074a64" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML}"/>
  &lt;con:entry key="x-dece-ApplicationAuthorization" value="dclient-basic w0rnh4lz4bfuaxasn7qu:A3D90BF121838C67444D58AC6D6554A6"/>
  &lt;con:entry key="If-Match" value="${#TestCase#ETag}"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Device_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('AccountDelete');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );
def errorRespType = context.expand( '${#TestCase#ResponseTypeAccountDelete}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) 
{
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = true;
		//httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "The API call is not authorized.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	break;
	
	case "USER_INACTIVE":
	expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
	errorReason = "The requesting member is not active.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;
	
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;

	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;	

     case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "SPL_CS_ALLOWED_ACCT":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;

     case "ACCT_ALREADY_DELETED":
	     expectHTTPstatus = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:AccountDeleted";
		errorReason = "The account has already been removed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDeleted";
     break;
 	case "MTHD_NOT_ALLWD":
	expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
	expectHTTPcontenttype = "text/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
     

     
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		//assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
def responseTypeAccountDelete = context.expand( '${#TestCase#ResponseTypeAccountDelete}' )
</script></con:config></con:testStep><con:properties><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2010/10/dece">
   <Error ErrorID="urn:dece:error:MalformedRequest">
      <Reason Language="en-us">405 Method Not Allowed. The request cannot be fulfilled because the method is unknown or not supported at the requested server.</Reason>
      <OriginalRequest>urn:dece:type:null</OriginalRequest>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 405 Method Not Allowed</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">text/xml</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">356</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DEV</con:value></con:property><con:property><con:name>SAML</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SAML2 Assertion=nVbbcuo6DP0VJn3shDhpuGUKM5RLT3qhBQrd7csZ4yjgkjg0diDt1x87QDZQ2sPeT4yEvLRsSUu55DgMLKfJOcSCRqyQhgHjTuata0nMnAhzyh2GQ+COIM6weX/nWEXk4O0RreC269q/dhmXLZhMdFIGT7dLUNFrJZvoll3BVYSgaoIlQzlPwGVcYCbqmoVMWzdN3UJPqObYJccsF21UfdUKY4i5xJYhRaRtSKW8rs2EWDiGsVqtiquLYhRPDQsh0/h1fzckMwix1rhc3yhLFDc28aToAYEgIEUShcalsRdz6XFnSKcMiySGTS7vu1zIQDVDxnicTs+0/Cx4LvOjzGxhFjFKcEA/sXqfexCzyCs0g2kUUzELv72EiRSwDinRiWmzM83Yp3Yi0B7DmGOdz7C5wRqADzEwAoXRwK1rZ6dVLTv6FGPG/SgO+b75Z3yALSGIFjIX315rQ+10wCMv1bgE4riMBAmnS+ipZl1gAnxTTSCnQxUeY/Bpeke5bNCUK3bGLr0Dc/0abToFLv6mQDvFWYOMcZBA4yUNxu1ReXpntOaz95T2g5vrYd8dzl9X9YzAbnDmyEu7Ng+aMm+i9YnRU+f+2Xu77n2sSjehmFeMBJ+7ZNoZmLdXnRt4Tn/dvkM4Eh+8+Rw1+Zs3+JysZjdX9xfC74zbg3O7PBnEL56BJt58+PAcvQz8f9zaq9F96V0ntUr43scUxvSBuz0Bo/K8Xx1W/dW4F84C0u/2bT/+PL+G7qTsB6bn2zTyEvvxFlpPzamXDtLFrLI0mqtRwOv5dXb47/u2Mz9MJm9AxNZUbeC2C11ZJSx+FjPloZ7uZ6HOQokPF8CE1lCnlHY4iZQ76jmyhmsbVe2q1UGtdsuulatXqINKF6hUq5ld1Cy3uldbkVmzOKDYiphPVS4lueu2+ZkgCZ0J4Bhi7QekNha40IvEA3uIm76AeE9hTWtXYVVbfwt0+N82p4zxqArgKs0VyPeCIyqOtip+yMU6rvbGFr/pLSnJy5kvJalVsrszLedymt5x0Ssmy2WixNypqCmO5SzI0TJLBrKMIZBEzt/HUzQHZuQoxklit735YfLcv08xETM2FFhAKLulkJknbLchcLXdXOZBeurq3EspCyEgFcd8rUBuZsX4x+VNHKLipPtR/qyi2MsveAxrJ4+8p1xugrKpspTQffweEjUd+YSQSMJSOaJRvAt+DOBY8n1n/sg5FyFiOkkEfP9PQc1eXcOERAkTblvLHLt6kPEUHwtwfgd9gckkJ/8Gof//EaLTrAUIyC8XTjN8tUocLgHZdEdTNkm/kZXqT7Kyz67xxf3Vs/NOhz3e+A8=</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Gits\Certs\QALP1/DEV_concat.pem</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00013_AccountDelete_PERM_API_Invocation_from_a_Device_P0</con:value></con:property><con:property><con:name>sName</con:name><con:value>AccountDelete_PERM</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:08482E0CDC4868B0E05305991F0A6CFB</con:value></con:property><con:property><con:name>ResponseTypeAccountDelete</con:name><con:value>MTHD_NOT_ALLWD</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"08482E15023F68B7E05305991F0A48F8:822407B4"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5ff78eb3-d79f-4f4a-b9a8-5ec1c84f61c0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3d78db1c-105b-43a0-b406-6bb0f690c833</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662fb201-c4e7-401c-b10a-548ea13f5020</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>QC_TestPlanDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestLabDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestSet</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="TestSuite Utility Test Cases" id="29e8cdd4-b32f-4148-ae3a-ef0e02b4df6a" disabled="true">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    
    
    
    
    
    
    
    
    
    
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Rename Test Cases" searchProperties="true" disabled="true" id="3e631592-a3e8-42be-94c5-e4f208a401a8">
      <con:settings/>
      <con:testStep type="groovy" name="Rename Test Cases" id="c49f417a-5c75-482d-99fc-deabcf5c4952">
        <con:settings/>
        <con:config><script>import java.io.*;

def testCase  = testRunner.getTestCase();
def testSuite = "User_Get_GeoProfile";

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

BufferedReader br = new BufferedReader(new FileReader("C:\\Documents and Settings\\praveen.dantuluri\\Desktop\\TCs.txt"));

def newTestCaseName;

log.info "TCCount:"+TCCount;

for(i = 0; i &lt;= TCCount - 1; i++)
{               
                def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);

                newTestCaseName = br.readLine();
                log.info "Input Test Case Name: "+newTestCaseName;
                
                                targetTestCase.setFailOnError(true);
                                targetTestCase.name = newTestCaseName;    
}
</script></con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>TestSuite</con:name>
          <con:value>PERM_ACCOUNT_CONSENT_POLICIES</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Change a step's script for all Steps in a Suite" searchProperties="true" disabled="true" id="63df2d8e-8a58-4955-be8e-c4eccb9b3ba4">
      <con:settings/>
      <con:testStep type="groovy" name="Change a step's script for all Steps in a Suite" id="6d43ab82-0256-41cb-944c-980322b1d977">
        <con:settings/>
        <con:config>
          <script>//Copyright (c) 2010 Bhavin Bharat Joshi - Neustar, Inc.

//TestCase
def testCase  = testRunner.getTestCase();

//Get Arguments
def testSuite = "STS Tokentype urn:dece:type:tokentype:saml2 Test Cases"; 

def oldString = """STS API - SecurityTokenExchange Invoked to Coordinator URL""";
def newString = """STS API - Invoked to Coordinator URL""";

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

for(i = 0; i &lt;= TCCount - 1; i++)
{			
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
	testStepList = targetTestCase.getTestStepList();
	testStepCount = targetTestCase.getTestStepCount();
	if(targetTestCase.isDisabled() == false)
	{
		for(j = 0; j &lt;= testStepCount - 1; j++)
		{
			try
			{
				def testStepName = testStepList[j].name;
				
				if (testStepName == "-- Call STS SAML Token Exchange") {
					log.info "Hit!";
					targetTestStep = targetTestCase.getTestStepByName(testStepList[j].name);
					stepScript = testStepList[j].getScript();
					stepScript = stepScript.replace(oldString, newString);

					/*
					*  Delete a step
					*/
					//targetTestStep.delete();

					/*
					*  Replaces step's script completely
					*/
					//stepScript = """""";
					targetTestStep.setScript(stepScript);		
				}
				
				//targetTestStep = targetTestCase.getTestStepByName(testStepList[j].name);
				//stepScript = testStepList[j].getScript();
				//stepScript = stepScript.replace(oldString, newString);
				//targetTestStep.setScript(stepScript);		
			}
			catch(Throwable e)
			{
				log.info e;
			}	
		}
	}
}						
log.info 'Woohoo!'</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>TestSuite</con:name>
          <con:value>RTL_CS</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Set a Property" searchProperties="true" disabled="true" id="88abec67-0cfd-4158-ab1e-3dcbf6d69df0">
      <con:settings/>
      <con:testStep type="groovy" name="Set a Property" id="4aae0d70-4938-4154-a8b0-c9815b6cbb6e">
        <con:settings/>
        <con:config>
          <script>//Copyright (c) 2010 Bhavin Bharat Joshi - Neustar, Inc.

//TestCase
def testCase  = testRunner.getTestCase();

//Get Arguments
//def testSuite = testCase.getPropertyValue("TestSuite"); 
def testSuite = "Holder for new sts";
def propertyName;

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

for(i = 0; i &lt;= TCCount - 1; i++)
{	
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);	
	propertyName = testCase.getPropertyValue("PropertyName");	
	propertyValue = testCase.getPropertyValue("PropertyValue");		
	if(targetTestCase.isDisabled() == false)
	{
		try
		{
			//nodeRole = targetTestCase.getPropertyValue("ErrorResponse");
			propertyName = "synced";			
			/*if(nodeRole == 'ForbiddenRightsTokenAccessNotAllowed')
			{
				nodeRole = 'ForbiddenDiscreteMediaRightOwnerMismatch';
			}
			*/
			propertyValue = null
			targetTestCase.setPropertyValue(propertyName, propertyValue);
			log.info "Done with Test Case '" + TCList[i].name + "'";
		}
		catch(Throwable e)
		{
			log.info e.text;
		}		
	}	
}

log.info 'Woohoo!'</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>TestSuite</con:name>
          <con:value>FUNC_USER_CONSENT_POLICIES</con:value>
        </con:property>
        <con:property>
          <con:name>PropertyName</con:name>
          <con:value>NumberOfPolicyRequestingEntities</con:value>
        </con:property>
        <con:property>
          <con:name>PropertyValue</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Remove a Step for all Testcases in a Suite" searchProperties="true" disabled="true" id="99c778cf-bd1a-4293-b34d-53339dcae326">
      <con:settings/>
      <con:testStep type="groovy" name="Change a step's script for all Steps in a Suite" id="6fa579e3-343b-4c71-a90d-3e3530823dbd">
        <con:settings/>
        <con:config>
          <script>//Copyright (c) 2010 Bhavin Bharat Joshi - Neustar, Inc.

//TestCase
def testCase  = testRunner.getTestCase();

//Get Arguments
def testSuite = "STS Tokentype urn:dece:type:tokentype:DeviceAuthToken"; 
def stepName  = "Establish Stage for STS invocation as a Device";

def TCList  = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

for(i = 0; i &lt;= TCCount - 1; i++)
{			
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
	testStepList  = targetTestCase.getTestStepList();
	testStepCount = targetTestCase.getTestStepCount();
	if(targetTestCase.isDisabled() == false)
	{
		for(j = 0; j &lt;= testStepCount - 1; j++)
		{
			try
			{
				if (testStepList[j].name == stepName) {
					log.info "Removing Step " + testStepList[j].name;
					targetTestStep = targetTestCase.getTestStepByName(testStepList[j].name);
					targetTestCase.removeTestStep(targetTestStep);
				}
				
				//stepScript = testStepList[j].getScript();
				//stepScript = stepScript.replace(oldString, newString);
				//targetTestStep.setScript(stepScript);		
			}
			catch(Throwable e)
			{
				log.info "ERROR:" + e;
			}	
		}
	}
}						
log.info 'Woohoo!'</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>TestSuite</con:name>
          <con:value>RTL_CS</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Rename a Step" searchProperties="true" disabled="true" id="0e62a367-0dda-4249-af02-f64c612938a3">
      <con:settings/>
      <con:testStep type="groovy" name="Change a step's script for all Steps in a Suite" id="fad1a6f8-dba2-4686-8508-367c21c245f7">
        <con:settings/>
        <con:config>
          <script>//Copyright (c) 2010 Bhavin Bharat Joshi - Neustar, Inc.

//TestCase
def testCase  = testRunner.getTestCase();

//Get Arguments
def testSuite = "STS GET Node Role Type Test Cases"; 
def stepName  = "Call STS";
def stepNewName  = "Call STS GET - DeviceAuthToken";

def TCList  = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

for(i = 0; i &lt;= TCCount - 1; i++)
{			
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
	testStepList  = targetTestCase.getTestStepList();
	testStepCount = targetTestCase.getTestStepCount();
	if(targetTestCase.isDisabled() == false)
	{
		for(j = 0; j &lt;= testStepCount - 1; j++)
		{
			try
			{
				if (testStepList[j].name == stepName) {
					log.info "Renaming Step " + testStepList[j].name;
					targetTestStep = targetTestCase.getTestStepByName(testStepList[j].name);
					targetTestStep.name = stepNewName;
				}
				
				//stepScript = testStepList[j].getScript();
				//stepScript = stepScript.replace(oldString, newString);
				//targetTestStep.setScript(stepScript);		
			}
			catch(Throwable e)
			{
				log.info "ERROR:" + e;
			}	
		}
	}
}						
log.info 'Woohoo!'</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>TestSuite</con:name>
          <con:value>RTL_CS</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetTestCase_Titles" searchProperties="true" id="331566b6-50a8-4d4a-9fca-b5e9f81ff3ee"><con:settings/><con:testStep type="groovy" name="Get_TestCase_Titles"><con:settings/><con:config><script>
import java.io.*;

def commonTestStep = "AccountDelete_API_R4";

def testCase  = testRunner.getTestCase();
def TSList = testRunner.testCase.testSuite.project.getTestSuiteList();
def TSCount = testRunner.testCase.testSuite.project.getTestSuiteCount();

//def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
//def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();


log.info "TS List:"+TSList[0].name;

//log.info "TCCount:"+TCCount;

for(k in (0..TSCount-1))
                {
                                def testSuite = TSList[k].name;
                                def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList(); 
                                def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();
                                log.info "TestSuite  " + testSuite +"  TCCount:"+TCCount;
                                log.info "TSList[k].disabled " + TSList[k].disabled 
                                
                                if ((TSList[k].disabled).toString() != "true")
                                {                              
                                                for(i in (0..TCCount-1))                                                                  
                                                                {                                                                                         
                                                          try {
                                                                def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
                                                                                                def targetStep = targetTestCase.getTestStepByName(commonTestStep);
                                                                                                log.info  testSuite + " " + targetTestCase.name+" "+targetStep.getPropertyValue("ResponseType");         
                                                          }
                                                          catch(Throwable e) {
                                                                log.info "Exception : " + e;
                                                                }                                                                              
                                                                }                              
                                }
                }

</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties>
      <con:property>
        <con:name>QC_TestPlanDirectory</con:name>
        <con:value/>
      </con:property>
      <con:property>
        <con:name>QC_TestLabDirectory</con:name>
        <con:value/>
      </con:property>
      <con:property>
        <con:name>QC_TestSet</con:name>
        <con:value/>
      </con:property>
    </con:properties>
    <con:reportParameters/>
  </con:testSuite><con:testSuite name="First_User_Create" disabled="true" id="1f6319fc-0958-44bc-a18f-e63653a0e8af"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Account_Create_Firsrt_User_Create_STS_Policies" searchProperties="true" id="bf6be7d4-9561-4c60-9314-ec69bcea736d"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="f05e0c99-e0d5-45df-a3a3-69bdd405b626"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tS.getPropertyValue("nodeid"));




</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Create" id="16607a01-08f1-45c1-8587-cd696ca23e57"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("AccountCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for First User Create" id="c45904a4-762a-4f06-974b-cc91555d52f3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "AcountDelete_firstuser"+new Date().format( 'yyyyMMdd') + "_" + System.currentTimeMillis();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);

tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("MeetsAgeOfMajority",tP.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First User Create" id="823f71e5-447b-47c2-93ce-59ce6e6e5939"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("FirstUserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS API for First User" id="e295461c-81ad-43d9-8829-d547e6a8d66b">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;



tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID1",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call Policy Create - TOU" id="19645da3-f439-428e-b225-bd218007a1b9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateTOU_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call Policy Create - MUC" id="919b68d1-fc2e-485e-8681-3867fe9cb1f2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateMUC_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20141120_031531</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>08482E0679ED69ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_31b6f33a-4bad-45d8-b33a-f7f61fcfb09a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_31b6f33a-4bad-45d8-b33a-f7f61fcfb09a</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:RET_CS_1</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1995-11-25</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>AcountDelete_firstuser20141120_1416476733872</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>08482E0679EC69ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>08482E0679EC69ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:08482E0679EC69ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:08482E0679EC69ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>08482E0679F869ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>08482E0679F869ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:08482E0679F869ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:08482E0679F869ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZrc7I6EP4rDv34DnIRqTLVGVtry/tqL2ovp1/OxLBAWghKAmp//UlQqdjL8ZxPTJbN7rO7T57kjKE4Mp0eY5ByktDaKo4ocwprR8lS6iSIEeZQFANzOHYmvdHQMeu6g3ZblJrb7yh/N4yZ7TcaSLVmyFOtptdSZ3Lpn/q24WN/preRcGUsA5cyjijvKKZuWKphqKY+1duO1XT0Rt04bb8otUdImYgtXOq6sgW1Yh0l5HzuaNpyuawvG/UkDTRT1w3teTSc4BBipHTPNhUVidLu1h/XPcAQRbiOk1g70yo+Zx5zJiSgiGcpbHN53+XSNb2tCR+PkeBEKfeC51I/KZYXiCaUYBSRdyT7MwIeJl6tFwVJSngYf1uEocvAKqywig2LnihaFdqRgSoIU4ZUFiJjG2sMPqRAMdQexm5HOTluasXWaYoo85M0ZtXlf8MDNIcomYOnsl1ZW2jHB/yiU90zwI5LcZQxksONJOscYWDbaQI+PlTtLgWfrIaECYKumESn7cM7WG660ScBMP5/BrQ3nE2QRxRl0GXpKL55aOev6+F5/81Og5E7SuD+94s96hQA9p0LQznazfKAlCWJNjvCfOTPyXBwpb1ZyMJJ9LroBzk89u/aF6tH1LrW2BAQGj6F7eksmLXeQ/ucXv6yh6bLXll7OB8srvPbJn1iLS933wfvQZyH954e3cXEuhkv7p8fnhZ5Ej5Rc3ixWDf4w9VMY3/dmXx8n5nn9Ffussbk+er+2rYedfLbNBohoHUQcfxnsJwGzdfbFxMFuTFgnbKcPfxV2+7MT7LZK2C+W0oauP3aQEwJ8Z/FTFqIp/qFqzOX4sM4UK505S6pHU4m5I54jpjhZq23rJZ5qdun7UHLbvf6l3qzoTfbbWOg9/TBwN6JzAbFAcSLhPpE5pKSu6HNzwBx7DCgHqRqnmRC6ZjyQ8Q+4qjm0rE4BAllME2EPBvUS+01brxZPuM2zvXWLFzY4sQotZuE39LbtOdzSCuabJgVTR4DJnMCUrglr5kgNuOiFwuUZzwy6jmqU8iEtKdSZR3TajU1RuJ5BBKpFideFkF9Hs6Lzmhs8zVVhFlhHV9Oi9P2bV2H/3YtED4ekQ5M1nIOYozw6XKxnOaukO8Lbu4XvAvfyzwiD5boJ08J3iCp/vqgieRHyRFR0Q5y6XloqETVDgsqE3k5wSXRy+taqLg4993dOBaovqhneZ4VAziV+paK8EJ0jKamm9oEcCaUaT1N3oBqZRTtqGugBH6QvLRXIWY8pBOOOMSCMbViecS9PwEm731XUH117KOiklK0jsOKf2W7iMSbRSL+8VmDHSz9hPlOfJZJ6n1M7ItYe3lEneLa54QGciWvgPU3vMCJCEuEeCXpfvCvAnyVvGosm1xi4YJQs4zD939qUpU6CsI4ySh3+0ph2FfKAidfz8H5cPoUphDj8nVG/v15ppKCAhjEm46RIr68ZB15BGiwp7bbpF8L7uXFT4JbRdf9ZP5s2evTIce7/wA=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZrc7I6EP4rDv34DnIRqTLVGVtry/tqL2ovp1/OxLBAWghKAmp//UlQqdjL8ZxPTJbN7rO7T57kjKE4Mp0eY5ByktDaKo4ocwprR8lS6iSIEeZQFANzOHYmvdHQMeu6g3ZblJrb7yh/N4yZ7TcaSLVmyFOtptdSZ3Lpn/q24WN/preRcGUsA5cyjijvKKZuWKphqKY+1duO1XT0Rt04bb8otUdImYgtXOq6sgW1Yh0l5HzuaNpyuawvG/UkDTRT1w3teTSc4BBipHTPNhUVidLu1h/XPcAQRbiOk1g70yo+Zx5zJiSgiGcpbHN53+XSNb2tCR+PkeBEKfeC51I/KZYXiCaUYBSRdyT7MwIeJl6tFwVJSngYf1uEocvAKqywig2LnihaFdqRgSoIU4ZUFiJjG2sMPqRAMdQexm5HOTluasXWaYoo85M0ZtXlf8MDNIcomYOnsl1ZW2jHB/yiU90zwI5LcZQxksONJOscYWDbaQI+PlTtLgWfrIaECYKumESn7cM7WG660ScBMP5/BrQ3nE2QRxRl0GXpKL55aOev6+F5/81Og5E7SuD+94s96hQA9p0LQznazfKAlCWJNjvCfOTPyXBwpb1ZyMJJ9LroBzk89u/aF6tH1LrW2BAQGj6F7eksmLXeQ/ucXv6yh6bLXll7OB8srvPbJn1iLS933wfvQZyH954e3cXEuhkv7p8fnhZ5Ej5Rc3ixWDf4w9VMY3/dmXx8n5nn9Ffussbk+er+2rYedfLbNBohoHUQcfxnsJwGzdfbFxMFuTFgnbKcPfxV2+7MT7LZK2C+W0oauP3aQEwJ8Z/FTFqIp/qFqzOX4sM4UK505S6pHU4m5I54jpjhZq23rJZ5qdun7UHLbvf6l3qzoTfbbWOg9/TBwN6JzAbFAcSLhPpE5pKSu6HNzwBx7DCgHqRqnmRC6ZjyQ8Q+4qjm0rE4BAllME2EPBvUS+01brxZPuM2zvXWLFzY4sQotZuE39LbtOdzSCuabJgVTR4DJnMCUrglr5kgNuOiFwuUZzwy6jmqU8iEtKdSZR3TajU1RuJ5BBKpFideFkF9Hs6Lzmhs8zVVhFlhHV9Oi9P2bV2H/3YtED4ekQ5M1nIOYozw6XKxnOaukO8Lbu4XvAvfyzwiD5boJ08J3iCp/vqgieRHyRFR0Q5y6XloqETVDgsqE3k5wSXRy+taqLg4993dOBaovqhneZ4VAziV+paK8EJ0jKamm9oEcCaUaT1N3oBqZRTtqGugBH6QvLRXIWY8pBOOOMSCMbViecS9PwEm731XUH117KOiklK0jsOKf2W7iMSbRSL+8VmDHSz9hPlOfJZJ6n1M7ItYe3lEneLa54QGciWvgPU3vMCJCEuEeCXpfvCvAnyVvGosm1xi4YJQs4zD939qUpU6CsI4ySh3+0ph2FfKAidfz8H5cPoUphDj8nVG/v15ppKCAhjEm46RIr68ZB15BGiwp7bbpF8L7uXFT4JbRdf9ZP5s2evTIce7/wA=</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>AcountDelete_firstuser20141120_1416476733872</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>UserName</con:name><con:value>AcountDelete_firstuser20141120_1416476733872</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>08482E0679F969ADE05305991F0A0FF6</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>tName</con:name><con:value>TC_DECE_00013_AccountDelete_PERM_API_Invocation_from_a_Device_P0</con:value></con:property><con:property><con:name>sName</con:name><con:value>AccountDelete_PERM</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E603091B0B6BE1E4E0401F0A05995622</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E603091B0B6BE1E4E0401F0A05995622</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E6030B86105B021EE0401F0A07992E9E</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E6030B86105B021EE0401F0A07992E9E</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>audience</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="User_Create_API" disabled="true" id="af2da472-8a82-46f5-b112-a2e5a332757e"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="User_Create_STS_Policies" searchProperties="true" id="d4a22e7e-29ae-4d26-b76c-def0e45086de"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="27d7ed5d-3471-474a-90b0-bd0d0ce61dc1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("userType",null);
tC.setPropertyValue("Privilege",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("GivenName",null);
tC.setPropertyValue("SurName",null);
tC.setPropertyValue("PrimaryEmail",null);
tC.setPropertyValue("Language1",null);
tC.setPropertyValue("DisplayImageURL",null);
tC.setPropertyValue("AlternateEmail",null);
tC.setPropertyValue("PostalAddress",null);
tC.setPropertyValue("PostalCode",null);
tC.setPropertyValue("Locality",null);
tC.setPropertyValue("StateOrProvince",null);
tC.setPropertyValue("Country",null);
tC.setPropertyValue("TelephoneNumber",null);
tC.setPropertyValue("MobileTelephoneNumber",null);
tC.setPropertyValue("MeetsAgeOfMajority",null);
tC.setPropertyValue("DateOfBirth",null);
tC.setPropertyValue("urnUser",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("QuestionID1",null);
tC.setPropertyValue("QuestionResponse1",null);
tC.setPropertyValue("QuestionID2",null);
tC.setPropertyValue("QuestionResponse2",null);
tC.setPropertyValue("ResourceStatus",null);

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_USER_ID_FULL",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("SAML",null);
tC.setPropertyValue("ResponseType",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="e4457366-ffe3-4c20-9707-5fb5d033e5ab"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

def uname= "AcountDelete_"+new Date().format( 'yyyyMMdd') + "_" + System.currentTimeMillis();

tP.setPropertyValue("Request_XML",tP.getPropertyValue("Request_XML_Buffer"));

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");

tC.setPropertyValue("UserName",uname);
tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("userType",callTC.getPropertyValue("userType"));

tC.setPropertyValue("LegalGuardian",callTC.getPropertyValue("LegalGuardian"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID1", callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL", callTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("SAML",callTC.getPropertyValue("SAML"));
tC.setPropertyValue("CLG_NODE_USER_ID",callTC.getPropertyValue("CLG_NODE_USER_ID"));




</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create" id="ea48f77a-a776-4eae-99c2-cf9a7f69137a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS API" id="f51ca961-b6c3-4f21-b308-7facc85fc443">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("audience",tS.getPropertyValue("audience"));

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;


//tC.setPropertyValue("SAML_USER2",context.expand( '${#TestCase#SAML}'));
//tC.setPropertyValue("NODE_ACCOUNT_ID1",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
//tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
//tC.setPropertyValue("NODE_USER_ID2",context.expand( '${#TestCase#NODE_USER_ID}'));
//tC.setPropertyValue("NODE_USER_ID_FULL2",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call Policy Create - TOU" id="0cc3e8e9-082c-4485-bb24-4458d1821ca9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateTOU_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call Policy Create - MUC" id="ab10bd11-03da-4e8c-8786-c9b290cc4dde"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateMUC_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:properties><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>UserName</con:name><con:value>AcountDelete_20140819_1408463632453</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35BEA2FC6B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC6745CCAEAA2D8AE0401F0A079957EA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35BEA2FC6B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FE35CCBDA037A6E05307991F0A9C25</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EH3PV7icx5TxDQdwBarMLUuGTBJgmE1etoTcGE1s2Vgyl/n6lUzsACFZZquoMmq3u093Hx3phqEotFyPMUg5iaky6DbVf65RFeZ1x9Ac8U+rOlZdm/mOrTlVZIHdgFodZqoyYCyDAWUcUd5ULcOsakZdMxsT03EdW/wqZsN6UZUppEyEFi4VQ1U2UUiZm6dtqllK3RgxwlyKImAux+7Yux+6wtNFBSa1dbNDmSdMWwvOE1fXccUHDGGIKziO9Bv9wOfGZ+6YBBTxLIW3nD5rqm/frtfrytquxGmgW4Zh6EZDFz4+I8Gl2rooPgZ/QOfxbt1BNKYEo5D8RhLUPfBF7CteGMQp4Yvok9CmbhoytAYbrGGzSi9V/T1Bju7MSAcgU4Y0tkBmEWwEc0iBYlB+jAZN9fK8Ce6+naSIsnmcRuxo/WeQgK4gjBPwNVZUVqA7P+KJdrVuALsDisOMkRV8lzRJEAamPKYwJ5shYYJ8PlPy8SsbJn6kYBngPxnLjb6PVUDXT3SnSwJg/P/MbH9euyhTFGbQupqOttlm7o2GHdNj3zZk9jrGIX7o9Z6bOYR95x2octxv62Oyltx6+yiYBrOr4XO0tJe3yW3G77pT/0d6+7TotH1m9pLa423tOXz17OCbtZxG+q/46i/Ao9fa05BeP/RpQx9iitrV2kuyuphdOXOWVc2fHlrbk+E9e5w0DGJNjNdVdUb73Nze/py/GM9Pz23skTCzX/y27W0mvXp9MBqOrbsBRdfhlDDvjl2kr/A0p3bVWevjh+dpV98azfea9ms4NBaSMM5mvwDzYinpMegqfTEvxL+WF2khvjbPXd1EahTjQLnakl9JaXEzIUDEd8Uwd2vD6Pdsp9Npdz3DrnnXPcOxjVqjYfYNr9GxnEKDdiiOIHZiOicyl1TZHX++BogjlwH1IdVWcYYXwNQvInYRR8qAjsTmiCmDSSxUvBZvnU24DswAsQZepWmwjYOEZqryPeYP9CH15hzSQ+WuHyj3CDBJCEh5l/xmguCMi1Ys0SrjoVlZoQqFTBwAqdRg16rWHZ2RKAlBAtWj2M9CqCSLJG+MznZPS0OY5dZRb5Lvu0/LOn5XdED4+EQ6MFlLG8QU4cQRVC0K+bRgy9wvuAjvZT6R20u0k6cE75AcvnpniaRHSRFRUQG59Dw2HETVjwsqE/krgkuelwe00Hex+1vFOJaosqxkq1WWD6AmlS0V4XUhcKY+BpwJedpO4legehlCP+t0KFEfZS7th/gyvqBjjjhEgi5KvjzjajAGJq8GA0Hzzbn3joOUom8cNvyUrROKG4RE/OUlA7tY+gnzo3is49R/H9eJWHt5RJ3iPsAJDeRKngPbT0iBYxGWCOGK0/3gpwKcSn5oLJtcYuGCTbOMw+dvFKlITRVhHGeUD7pqbthXyRwn3ybgvjt9CJMr8dvRumGfHq1/3w/HQq8ipJa+5L+dNZLTBYMqT/AcS1PdiJuiSE6DPVV+A/hRmNs9z+p3rtv1ai7Mzk6Y+167FObDSlofzB8tez093g+tfwE=</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>GivenName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>SurName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PrimaryEmail</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Language1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DisplayImageURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AlternateEmail</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PostalAddress</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PostalCode</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Locality</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>StateOrProvince</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Country</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TelephoneNumber</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DateOfBirth</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1995-08-24</con:value></con:property><con:property><con:name>urnUser</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QuestionID1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QuestionResponse1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QuestionID2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QuestionResponse2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ResourceStatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">00FE35CCBDA037A6E05307991F0A9C25</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ResponseType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>user_oid</con:name><con:value>00FE35CCBDA137A6E05307991F0A9C25</con:value></con:property><con:property><con:name>account_oid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-08-24</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value>_6a4ef850-56a4-4528-bd53-54a2e39e78eb</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_6a4ef850-56a4-4528-bd53-54a2e39e78eb</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_02005_AccountDelete_FUNC_CS_Deleting_an_account_when_user_is_Controlled_P1</con:value></con:property><con:property><con:name>sName</con:name><con:value>AccountDelete_FUNC_SPLCS_P2</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>27d7ed5d-3471-474a-90b0-bd0d0ce61dc1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e4457366-ffe3-4c20-9707-5fb5d033e5ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_02006_AccountDelete_FUNC_NonCS_Deleting_an_account_when_user_is_Full_P1</con:value></con:property><con:property><con:name>sName</con:name><con:value>02.Functional_UserGet_NonCS_P1</con:value></con:property><con:property><con:name>audience</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Child_User_Create_API" disabled="true" id="660303d6-0c73-4c55-955b-388662c7fec4"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Child_User_Create_STS_Policies" searchProperties="true" id="d28a0c5d-89e3-4133-8e7a-f724774172a5"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="02ebec61-d7d8-4608-bd31-7bb33827bce1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("userType",null);
tC.setPropertyValue("Privilege",null);
tC.setPropertyValue("UserName",null);
tC.setPropertyValue("GivenName",null);
tC.setPropertyValue("SurName",null);
tC.setPropertyValue("PrimaryEmail",null);
tC.setPropertyValue("Language1",null);
tC.setPropertyValue("DisplayImageURL",null);
tC.setPropertyValue("AlternateEmail",null);
tC.setPropertyValue("PostalAddress",null);
tC.setPropertyValue("PostalCode",null);
tC.setPropertyValue("Locality",null);
tC.setPropertyValue("StateOrProvince",null);
tC.setPropertyValue("Country",null);
tC.setPropertyValue("TelephoneNumber",null);
tC.setPropertyValue("MobileTelephoneNumber",null);
tC.setPropertyValue("MeetsAgeOfMajority",null);
tC.setPropertyValue("DateOfBirth",null);
tC.setPropertyValue("urnUser",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("QuestionID1",null);
tC.setPropertyValue("QuestionResponse1",null);
tC.setPropertyValue("QuestionID2",null);
tC.setPropertyValue("QuestionResponse2",null);
tC.setPropertyValue("ResourceStatus",null);


tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("CLG_NODE_USER_ID",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_USER_ID_FULL",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("SAML",null);
tC.setPropertyValue("ResponseType",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" id="56c3cd99-6982-4ede-9835-046e8ee5e7cf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tS.getPropertyValue("sName");
def callTCname = tS.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tP.setPropertyValue("Request_XML",tP.getPropertyValue("Request_XML_Buffer"));

tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserCreate"));

tC.setPropertyValue("SAML",callTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("CLG_NODE_USER_ID",callTC.getPropertyValue("CLG_NODE_USER_ID"));

tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("userType",callTC.getPropertyValue("userType"));
tC.setPropertyValue("GivenName",callTC.getPropertyValue("GivenName"));
tC.setPropertyValue("SurName",callTC.getPropertyValue("SurName"));
tC.setPropertyValue("PrimaryEmail",callTC.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("Language1",callTC.getPropertyValue("Language1"));
tC.setPropertyValue("DisplayImageURL",callTC.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",callTC.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",callTC.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",callTC.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",callTC.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",callTC.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",callTC.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",callTC.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",callTC.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("urnUser",callTC.getPropertyValue("urnUser"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",callTC.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",callTC.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",callTC.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",callTC.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",callTC.getPropertyValue("ResourceStatus"));
tC.setPropertyValue("LegalGuardian",callTC.getPropertyValue("LegalGuardian"));

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID1", callTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("NODE_USER_ID_FULL", callTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("SAML",callTC.getPropertyValue("SAML"));
tC.setPropertyValue("CLG_NODE_USER_ID",callTC.getPropertyValue("CLG_NODE_USER_ID"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call User Create" id="f30b54d2-40eb-40e7-8401-cd05ba38c823"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("UserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
//
//tC.setPropertyValue("user_oid2",tC.getPropertyValue("user_oid"));
//tC.setPropertyValue("NODE_USER_ID2",tC.getPropertyValue("NODE_USER_ID"));
//tC.setPropertyValue("NODE_USER_ID_FULL2",tC.getPropertyValue("NODE_USER_ID_FULL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Policy Create - CLGAttestation for Child User" id="2f6b5e6a-f14e-4f6e-8fea-8db066daf2f2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateCLGAttestation")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("NODE_ACCOUNT_ID", tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("CLG_NODE_USER_ID", tC.getPropertyValue("CLG_NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_CHILD", tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL", tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("NODE_USER_ID_FULL", tC.getPropertyValue("NODE_USER_ID_FULL"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call Policy Create - TOU for Child User" id="0ac33380-ad9e-4708-a4ca-90399db993bc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateTOU_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("CLG_NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call Policy Create - GeoPrivacyAssent for Child User" id="e8e1901d-f2cf-46f5-9a82-13938b6ef14b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateGeoPrivacyAssent")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("CLG_NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));



//myTC.setPropertyValue("tName",tC.getName());
//myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call Policy Create - MUC for Child User" id="02e5c9d9-10c4-454b-9d25-27d65356729f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateMUC_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("CLG_NODE_USER_ID"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS API" id="c5295d99-5448-463a-a7c7-16da5cdfeac0">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

//tC.setPropertyValue("SAML_USER2",context.expand( '${#TestCase#SAML}'));
//tC.setPropertyValue("NODE_ACCOUNT_ID1",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
//tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
//tC.setPropertyValue("NODE_USER_ID2",context.expand( '${#TestCase#NODE_USER_ID}'));
//tC.setPropertyValue("NODE_USER_ID_FULL2",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config>
      </con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>E514D97E20BCB55CE0401F0A05991265</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-18</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_9070c791-13ba-4b2d-8113-8b66698dcc9c</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_9070c791-13ba-4b2d-8113-8b66698dcc9c</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-16</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E6432D13CD199C26E0401F0A0799607F</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2002-09-16</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E5F8A903DB8B8399E0401F0A07992F13:DC7DFFA6"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130913_05055</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E643241E6041B4D4E0401F0A079949D1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E643241E6041B4D4E0401F0A079949D1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E5F89A132C5325E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E6432442DEB9EDF6E0401F0A079949AA</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E6432442DEB9EDF6E0401F0A079949AA</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:E5F89A132C6625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E56B6CBBFC218D76E0401F0A07991CCF</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130913_05055</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>usercreate20130913_05055</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>firstuser20130903_114248</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>usercreate20130903_114310</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>seconduser20130902_104922</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E6432442DEBAEDF6E0401F0A079949AA</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>E5F89A132C6725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E56B6CBBFC228D76E0401F0A07991CCF</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-17</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>27d7ed5d-3471-474a-90b0-bd0d0ce61dc1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e4457366-ffe3-4c20-9707-5fb5d033e5ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c5295d99-5448-463a-a7c7-16da5cdfeac0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_70045_UserGet_Portal_FUNC_CHILD_SAU_Get_ADULT_FAU_200_OK_P1</con:value></con:property><con:property><con:name>sName</con:name><con:value>07.User_Get_GeoProfile_Portal</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:iscportalcs1</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="SetupScripts"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Setup_P1" searchProperties="true" id="b503aa64-97a1-4945-84b6-6cbe84f6b343"><con:settings/><con:testStep type="groovy" name="Set ENV Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

log.info("Set Environment properties!!!");
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def projectPath = groovyUtils.projectPath
log.info("Project Path : '" + projectPath + "'");

def eNV = context.expand( '${#Project#ENV}' )
log.info("Environment: '" + eNV+ "'");

def propertiesPath = null;

if (System.properties['os.name'].toLowerCase().contains('windows')) 
	{
    		log.info "it's Windows OS!!";
    		File temp = new File( projectPath + "\\..\\..\\..\\Properties\\");
    		propertiesPath = temp.getCanonicalPath();
	} 
else 
	{
    		log.info "it's Linux OS!!";
    		File temp = new File(projectPath + "/../../../Properties/");
    		propertiesPath = temp.getCanonicalPath();
	}
	
log.info("Properties File Location : '" + propertiesPath+ "'");


def propMap=[:]
BufferedReader reader = new BufferedReader(new FileReader(propertiesPath + "/" + eNV +"project.properties"));
log.info("Load property file : '" + propertiesPath + "/" + eNV +"project.properties"+ "'");
String line;
while ((line = reader.readLine()) != null)
	{
		if (line.trim().length()==0) continue;
		if (line.charAt(0)=='#') continue;

		int delimPosition = line.indexOf("=");
		String key = line.substring(0, delimPosition-0).trim();
		String value = line.substring(delimPosition+1).trim();
		propMap.put(key, value);
	}

propMap.each{ k, v -> tP.setPropertyValue(k,v)}

</script></con:config></con:testStep><con:testStep type="groovy" name="Set_CoordinatorSchema"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

log.info "versionMinor: "+tP.getPropertyValue("versionMinor");

def v2 = context.expand( '${#Project#versionMinor}' )
def schema = tP.getPropertyValue("coordinatorSchema_"+v2);

tP.setPropertyValue("coordinatorSchema",schema);
log.info "Setting the coordinatorSchema value ---- "+schema;
</script></con:config></con:testStep><con:testStep type="datasource" name="Country"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">US&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">GB&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">CA&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">IE&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">AU&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">NZ&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">AT&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">DE&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">CH&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">FR&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">BE&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">NL&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">LU&lt;/con:entry></row></con:configuration></con:dataSource><con:property>Country</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="groovy" name="TOUSetup"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def tP = testSuite.getProject();

def dBHost = context.expand( '${#Project#targetSystem}' )

def country = context.expand( '${Country#Country}' )

def a = new dbUtils.dbUtils(log,dBHost);
String sql = """select consent_version from (select
	            consent_version            
	            from
	            CONSENT
	            where
	            CONSENT_URN = 'urn:dece:type:policy:TermsOfUse'
	            and
	            COUNTRY = '""" + country + """'
	            order by
	            consent_version desc)
	            where rownum &lt; 2""";             
	log.info sql;
        
        results = a.SelectFromDB(sql,dBHost);

//                            a.dbConnClose();
       assert results.length() > 0;
       log.info "results" + results;

       def myXML = new XmlSlurper().parseText(results);   

       log.info myXML.ResultSet.Row.CONSENT_VERSION.text();
                testCase.setPropertyValue("Consent_Version",myXML.ResultSet.Row.CONSENT_VERSION.text());
                

def consent_Version = context.expand( '${#TestCase#Consent_Version}' )

tP.setPropertyValue("TOU_"+country,consent_Version);


</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop"><con:settings/><con:config><dataSourceStep>Country</dataSourceStep><targetStep>TOUSetup</targetStep></con:config></con:testStep><con:testStep type="groovy" name="Prioritize"><con:settings/><con:config><script>import com.eviware.soapui.impl.wsdl.*;
import com.eviware.soapui.impl.wsdl.teststeps.*;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def enablePriorityScript = context.expand( '${#Project#enablePriorityScript}' )

def executionPriority = context.expand('${#Project#disablePriority}');
def priority = context.expand('${#Project#disablePriority}').split(",");
def coords = context.expand('${#Project#coords}').split(",");//COORD-1000,COORD-2010
//log.info("Inside setUp for project '" + tP.getName() + "'");
def suiteList = tP.getTestSuiteList();
if(enablePriorityScript=='true')
{
log.info '----------------------------------------';

	tP.getTestSuiteList().each
		{	thisSuite->
				if( !thisSuite.isDisabled())
				{
					thisSuite.getTestCaseList().each
					{tCase->
						tCase.setDisabled(false); 		//Enabled everything
						//log.info '@@@@ ENABLING '+ thisSuite.getName() +' :: ' + tCase.getName();
						
							for (def prior : priority)
							{
								if (prior!='' &amp;&amp; tCase.getName().toUpperCase().contains(prior))
								{
									tCase.setDisabled(true); 	//Enable needed Priority
									log.info '!!!! Disabling'+ thisSuite.getName() +' :: ' + tCase.getName();
									break;
								}
							}
							coords.each //coord
							{ 
								if (tCase.getName().toUpperCase().contains(it))
								{
									tCase.setDisabled(true);		//Disable COORD issues
									log.info it+'#### Disabling COORD'+ thisSuite.getName() +' :: ' + tCase.getName();
									return true;
								}
							}
						
					}
				}
		}
	
	log.info "Disabled TCs with below Priorities : " ;
	priority.each{log.info it;}
	log.info "Disabled TCs with below COORDs: " ;
	coords.each{log.info it;}
	log.info '----------------------------------------';
}</script></con:config></con:testStep><con:properties><con:property><con:name>Consent_Version</con:name><con:value>20140811</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>48eef7a0-e5f2-4926-99bb-c9ecd11b1888</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c0f3550c-c4aa-4ddc-abb8-3d629c23599f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="AccountDelete_PERM" id="3bc12a64-ccc1-49ab-a19b-c93e974a7387"><con:settings><con:setting id="GeneratableJUnitReport@Folder">C:\Users\ralluri\Desktop\New folder</con:setting></con:settings><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00001_AccountDelete_PERM_API_Invocation_from_a_Retailer_P0" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="0359565d-e509-4702-b11e-5aa0c82a29f8"><con:description> This case describes the scenario where a consumer goes to an online Retailer to delete an Account which is active. In order to delete an account it requires Node ID,AccountID and UserID.

This deletes an account.  The account is flagged that it is deleted without removing the data .  This is a reversible process.  Status is changed to &amp;quot;deleted&amp;quot;.  
This is performed on behalf of an authenticated Administrative User for the Account

Account deletion may be initiated only by a User on that Account with Full Access privileges. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="08657729-c527-48da-ad88-6bd40cd00ff9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="13012a96-d7b9-4f65-aa93-c029c21ce9cf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Get" id="db139e78-d226-4e76-88d9-7eae9dd275cd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Acccount Delete" id="89aa1644-518a-4ad3-bb5d-a4149e3a886b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="bb32f40f-70d5-40c9-835f-ea4add8acb92"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>90179</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+o6EP4rTP3olLZAETrCDPKiKCqXop57vtyJ6VKibVKatIC//iQFKkX0cu+nTrab3Wd3nzzJJUdhUHE6nEMsCKOlVRhQ7mTWlpbE1GGIE+5QFAJ3BHbczv3IqZRNB+22aKVhr6X9U31tXCCAum4jq6rXcAPpqIbqujTZNq7V7Gq1IV05T2BIuUBUtLSKadV0s6FXGlOr6pgNx74oN6r131rpGWIuY0uXsqltQa14S5sLETmGsVwuy8tqmcW+UTFNy/h1P3LxHEKktS83FWWJ4vbWH5c9wBAEuIxZaFwaBZ9Ljzsu8SkSSQzbXN53uUzDbBrSx+PEP9PyveAN6Yxlyy6ijBKMAvKBVH/uQcyZV+oEPouJmIffFmGZKrAOK6xjq0bPNKMI7cRABYQxRzqfI2sbawIziIFiKD1Nhi3t7LSpZVunMaJ8xuKQF5f/DQ/QFAIWgafzXVlbaKcHPNKp9iVgZ0hxkHCSwoMia4Qw8O00AZ8eqjSOYUZWI8IlQVdcoTP24R0sN93oER+4+D8D2hvOJsgzChJo8/tFf/x8vhyt/0JPXnQ3vj4fhg/WxSjlrQzAvnNmyEe7WR6QMifRZsejC/79e79r1Pu192e/z1+6fGStXHa7sG+M6/oqeu/4NJiEN7eDqTV+fLm5Hi2e2e/uR9RZ81W/R9KhffsyQ+sX6/xmweK1u1qcz16X3Ykvy50bd2O3f/3g968Wwjzvjr27j6Z3h+YJaQ467w+/3CntouRtZkZ3Ty/+esY65OpDzOd/08eBmeK01kPL5Y3lIjZs5eXs4S/admfeTV7fAIvdUtFg2CsN5JSQ+FnMlIV4+ixzdSIlPlwAFVpb7VLa4SRS7ojnyBlu1qZ1ZVn9npqnbdbtet+0q6bdbFoDs9Ptm9WdyGxQHEDsMjojKpeS3A1tfgaIQ4cD9SDWU5ZIpePaDxF7SKDSkE7kIWCUw5RJebb8N9tv4vnai/zQ8syUrV5Nr/p+UdFKD0w80se4MxMQF0W5XhDlCWASEVDKrYjNJbO5kM1YoDQRgVVOUZlCIrU9VjLrVGoN2+AkjAJQUI2QeUkA5WgeZa0x+OZb0RHmmXXSn2bH7dvCDv/teiB9PKIcuKrlCuQc4cjtUtsV8n3Bzf2Cd+E7iUfUyZINFTHBGyTFX588UQTJSSIr2kHOPQ8NhajGYUF5Ii8lOGd6fl9LGZcHv70bxwKVF+UkTZNsABdK4GIZ3pA6Zxku4ETq0nrK3oEaeQjjpEsgR32QObcX8SViTl2BBISSLqVsecKt7wJXt/5QEn116pOikFL2TcBKHLN1A/liUYh/fNRgBys/aR7Lz5LF3ue4jsTayyPrlJe+INRXK3UBrL8hBWYyLJHSxeL94McCHEteNOZNzrEIyabXRMD3f0pKk1oawpglVAx7WmbY18kMp1hH4Hw6fQmTSXH+NiP//jjTSUYBDPJFx0kWX12xjuI/9fe0dpv0iNxag8HgR7ktomt/MX+17PXpkOPtPw==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>01B11ED1FFF60656E05305991F0ACE03</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>01B11ED1FFF50656E05305991F0ACE03</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:01B11ED1FFF50656E05305991F0ACE03</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>01B11ED200050656E05305991F0ACE03</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:01B11ED200050656E05305991F0ACE03</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140828_1409231352603</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>01B11ED200060656E05305991F0ACE03</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"01B0D769F1D21CF7E05305991F0AD0D6:CFB99212"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>760e7ad9-ea07-4848-b172-46915ec752c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e7986cf8-dc25-4c32-9617-6256d919eb92</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5be2fca7-4226-4ec4-b147-7da4a9d73f10</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3e5ce75-2fd6-47a1-851a-96e7c11a22fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13012a96-d7b9-4f65-aa93-c029c21ce9cf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00002_AccountDelete_PERM_API_Invocation_from_a_Retailer_CS_P0" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="1b7d3893-aec1-4747-9d76-92e15ee968e1"><con:description> This case describes the scenario where a consumer goes to an online Retailer to delete an Account which is active. In order to delete an account it requires Node ID,AccountID and UserID.

This deletes an account.  The account is flagged that it is deleted without removing the data .  This is a reversible process.  Status is changed to &amp;quot;deleted&amp;quot;.  
This is performed on behalf of an authenticated Administrative User for the Account

Account deletion may be initiated only by a User on that Account with Full Access privileges. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="53c9d9db-75f4-4943-9746-de3922b1f63e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTLCS"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="5707bd73-e5ed-4fae-a97d-697be8ecc078"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Get" id="be61a374-38e8-47e6-8f7f-25685e678e4f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set NodeID to Retailer_customersupport" id="fce024d2-ddf2-4b5c-bb39-ec0134d9ce81"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTLCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Acccount Delete" id="e2c3f6ad-33ed-42f5-81dc-33d0d418a8fa"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="1fd188c7-7bcb-43f7-9bb3-2a516edcf386"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>90179</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj6vgJBBSooJEubRUvWyB9lR9WRlnAu4mTrAdoP31xw4NBUp72CMhIU/GM99c/M2cCZzEbtAWArikKTMG3ab5uwGhV601Ti0njOpWzXMiC0c1bFWJ7dVsp+FPHM80BkLkMGBCYiabpms7NctWVxpjxwtqflD1KnXHfzaNR+BCmVYqFds0VknMRFC4bZo5Z0GKBRUBwwmIQJJg1L65DpRmgEtMZutsjbJwyFszKbMAIVIJgUAckwpJE3SGdnTOQhGM6JRhmXN49xmKpvl+d7lcVpbVSsqnyLVtG9kNpHRCQac/zNZJeRnCAYvS9bmDWcoowTF9wxrUDchZGhrteJpyKmfJF6Yd5NjatAUrYhGnxn6Y6MNBge5ISzsgucCWmGGnNDaECDgwAsbDcNA0fxxXwfXdMcdMRClPxN757yABW0CcZhBaooysRHe8xQPpap0BCQaMxLmgC7jVbZJhAsL4xSGiq2sqVPOFwijKb6yE+tGyy4D8TVnO0DZWBR0dyE6XTkHI/1Oz7XqtrTziOIdWPfzHHTEkOw+2/7j4M0P9h+cQP89f2/fNAsK28hrUptzv5/1m3fTW+6XLt7x25aI7f97gGX25vUczPPJi54FfpDfZcvw4a9+L6dNrlz/Hk3794fJydjmeeb3zJP/lxAz83mN1hWXf+9kfnUCGB95wEi1CCNuT+DRt9Oed+qpzx4f49qe/vB2NfdaLr66qSd2m6eIiQS+PkyHl9xB12NPrGz1PanP3JnxzL06S+Hnx5Lv4pRfbPzP68BSfNj9i2o5hV1hSwiifvACR5VG3x6Br9FW9sPyeXrSEhlZUqAaZ5ighgUmzpW9paglyRUA0DFQx12fb7veqXqdXt51u1W/XerZXtf1Gw+nbbdfxqyUHrVHsQeykLKLal2bZdf98D5AkgQAWArcWaU5mIMxvLHaxxMaADdXjSJmAcapYXPjTxI/diHpzXnOXKx451MUgTeM2lXfsjrcjCXyXuU93mHsIhGYUNL3r/haqwYVUqZjjRS5jp7LAFQa5GgBcc3Dg1k49JGiSxaCBoiQN8xgq2SwrEoPE+t+1MBGFdNgbF+/uy7D2v5UZUDoh1QpCx3IOqopwYAS5ZSBfBuw62wGX5tt5SPXzUumUnJI1kt1PH12i22PTIiqi353Rb6fEvVE/+vrnm+gbUGg/HxtH4YJuuS1nqRoPijxaZTXnuDKv5ItFXtTP18TIlXmk+NFBIyC5YrfXcfoHGNqYQEcNlw3qPc8b+S6+XM7YSGIJieo2ozgesVmMQOjNYqBeyerYtWXHpcqbhJU8JOvEagHRiL/dUUhAtJ4S/1J/y5SHH+U6YGvLj4pTrROSsqk+6THy+kVTkFSZpYr3Ur5t/JCBQ853hZskb7BI1U2TXMLXXwxNaE0TE5LmTA66ZiHYJtkCp3zNIPhQ+mSmIPL3ybwSX07mp5vrkaK7BJsbXfrfyhYt2oWAqReAAkvTXKlFUzln0y1Sfwf4mdfPvfp5u1o/93sFr3trXu90O/4mgTuRtD6JP0u2crr/Hlr/Ag==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FE35B56BA46B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B56BA36B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B56BA36B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35CE601D37A4E05307991F0A2173</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35CE601D37A4E05307991F0A2173</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463254506</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35CE601E37A4E05307991F0A2173</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CC6C616B80E05305991F0A0CC0:4DC2F827"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>760e7ad9-ea07-4848-b172-46915ec752c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e7986cf8-dc25-4c32-9617-6256d919eb92</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5be2fca7-4226-4ec4-b147-7da4a9d73f10</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3e5ce75-2fd6-47a1-851a-96e7c11a22fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13012a96-d7b9-4f65-aa93-c029c21ce9cf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00003_AccountDelete_PERM_API_Invocation_from_a_Accessportal_P0" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="b8b860ab-6676-49f4-8ac1-48d044420140"><con:description> This case describes the scenario where a consumer goes to an online Retailer to delete an Account which is active. In order to delete an account it requires Node ID,AccountID and UserID.

This deletes an account.  The account is flagged that it is deleted without removing the data .  This is a reversible process.  Status is changed to &amp;quot;deleted&amp;quot;.  
This is performed on behalf of an authenticated Administrative User for the Account

Account deletion may be initiated only by a User on that Account with Full Access privileges. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="36a4eada-5973-43aa-85b0-7a7ab6218b92"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdAccportal"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="898cdf53-bfe2-4674-a40d-d479132754a6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set NodeID to Accessportal" id="0c733a8b-6a88-4405-80d0-adeda415b8d7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdAccportal"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call_MUC_Policy_Create" id="bbdea7fc-660a-4cce-a890-8a382dbba248"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateMUC_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Get" id="0c81a06e-12bb-4989-9e34-048a0c54ae98"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Acccount Delete" id="eaa88420-3d38-4b5b-b6ba-ebb181052b23"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="59a615d3-d48a-4457-bd99-43f1e268ffb3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>90179</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>ACCESS</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+o4EH4/vyLKeaxCEkiBRAWJQmjD9kK5tEd9WbnOBLwkdoidAOfXrxMaCpR2OSshIU/GM99c/M1ccRSFVafDOSSCMKp4vZb6t22BjVEAGrJqpmZhE7SmjwPNt23TqkNw2XgzVcXjPAWPcoGoaKlVw7Q0o6mZ9sS8dKyGU7Mrdbv2qirPkHBpWqpUDFVZRyHlTuG2paYJdRjihDsURcAdgZ1x5/7OkZoOKjGp7astysJh0p4LETu6jis+YAhDXMEs0q/0A50rnztjMqNIpAm8+/R5S32/u1qtKqtahSUzvWoYhm7YutTxOZn9VNs/ysvgezRg23MXUUYJRiH5jXJQ9yDmzFc64YwlRMyjL0ybumnkpjVYYw2bFv2p6h8OCnRnWjoAmXCk8TkyS2MjCCABikGZjryW+vO8Cm7vThJEecCSiB+d/wwS0AxCFoOv8TKyEt35Fk+kq30F2PEoDlNOMnjI2yRGGLgyTCAg6zvCZfP5XCnKr6y5/JGyywD/SVmu9H2sErp+Ijs9MgMu/k/N9uu1tfKMwhTa9/EAvfQGDf/p0h3eTBbkcVxnFzdP/9xNWwWEfeUtqF2538/HzbrrrfdLaX26bFwHi1+ji4d6sPSsjLPBJr2tvvR6T1Y9DdNefPGcJYv7buAONsawf7eAx4fV+s3Aft+fj1eDxkvjevprMbj58Tby3KeMThMxqvdfLQrkmt0uh4+vZHXzMHiOVsPsxt80k8nFeDq9j+t3ro1v4zjNHkX4PHc3mLN1l6yqjRfv4kc3tKLXBpsPb/GFH7O//Lnb+ohpP4ZDYUkJ4/TtH8CiPObt4fWUvqwXEt/TSy4hvhYUqk6ccxQXQIXazm/l1OKkkoCI78hibs+G0Xdrl93etW3Xaw3bdY3LmtGQL6pvdOy+Wy85aIviCGKX0YDkvnKW3fbP9wBx5HCgPiRaxlI8B65+Y7GHBFI8OpKPg1EOEyZZfBH/Xtv270WS1WtmcxUuN2+N2nJN56rywMQjfUw6gYDkkLqbB9Q9AkxiAjm/5w3OZYdzIXOxRFkqQrOSoQqFVE6AJCdhp2o1L3VOojiEHKkeMT8NoRLP4yIzOt/+VzWEeSEduZPi4X0Z1/G3MgVSxye5As9juQZZRjgxg6plIF8GXDX3Ay7Nd1Kf5O9L5lMkBG+RHH76aJO8P3Y90ul23fG4RL1TPu+yTMfnm/o3kPTjbOwc+RnZc1uOUjkdJHe0y1ouUWVZSbMsLarXyHkxkeZ1SY+mPgacSnLbTNgCqL4zoZ81W3aojzzv5If4UjGnY4EERLLXlOJ4xmIxBp4vFp58JOtzt5YDlzJvAtbilKwbyv0jR/ztioIdnOtJ8VD+rVjif5TrhK09PzJOuU0IQmf5KZ8imy+aAjNplkjaY8m+8VMGTjk/FO6SvMMiZDe9pQK+/qLkfNZSEcYspcLrqYVgn2MLnGITg/Oh9MlMwePvg3nNvxzMv+7vxpLtIqTudMl/K2ukaBcMaj7/CywtdS33TOmczvY4/R3gZ1q/tvo115K03t2ndbNpd3YJPIik/Un8WbKX0+P30P4X</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FE35B4F3E5379CE05307991F0A189A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B4F3E4379CE05307991F0A189A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B4F3E4379CE05307991F0A189A</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35CDB996379EE05307991F0A9FE6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35CDB996379EE05307991F0A9FE6</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463258845</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35CDB997379EE05307991F0A9FE6</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CC6C6B6B80E05305991F0A0CC0:60704C94"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>760e7ad9-ea07-4848-b172-46915ec752c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e7986cf8-dc25-4c32-9617-6256d919eb92</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5be2fca7-4226-4ec4-b147-7da4a9d73f10</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3e5ce75-2fd6-47a1-851a-96e7c11a22fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13012a96-d7b9-4f65-aa93-c029c21ce9cf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c81a06e-12bb-4989-9e34-048a0c54ae98</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bbdea7fc-660a-4cce-a890-8a382dbba248</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00004_AccountDelete_PERM_API_Invocation_from_a_Accessportal_CS_P0" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="264ab602-111e-4225-9588-ed217f29947d"><con:description> This case describes the scenario where a consumer goes to an online Retailer to delete an Account which is active. In order to delete an account it requires Node ID,AccountID and UserID.

This deletes an account.  The account is flagged that it is deleted without removing the data .  This is a reversible process.  Status is changed to &amp;quot;deleted&amp;quot;.  
This is performed on behalf of an authenticated Administrative User for the Account

Account deletion may be initiated only by a User on that Account with Full Access privileges. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="dbfd213f-7776-4813-8f5c-c07a080271d1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdAccportalCS"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="468a72b1-a8a2-466d-a990-b46e6e29ba0c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set NodeID to Accessportal_CustomerSupport" id="b1fea1f3-da83-4766-8623-cee7130125a6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdAccportalCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS API with Access_customersupport" id="eb57e931-1457-4e47-9a8d-1e0e58297db4" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER2",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID2",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL2",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID2",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL2",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call_MUC_Policy_Create" id="7b539819-af74-4716-bc7d-52854b8cf026"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateMUC_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Get" id="a3cf24dc-991e-4ca0-9910-ab3904881b77"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Acccount Delete" id="8a9877dd-f3ec-46f6-b3f5-7726ae9fd3b0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="c6ec61d0-6bd3-4b93-8abe-c94c85607d9e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>90179</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>ACCESCS</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH1chVwpEBSlcus22ZbeFtqd9OTLOBEwTJ9gOhP3164SGAqU97JEiRR6PZ765+BufcxRHlutxDkyQhCp+v63+a9brDWiiiRZarbrmAD7TJsgKNKcVNGwbQscAW1V8zjPwKReIirZqGaajGU3NbI3Nuus0XMeutezms6o8AOPStFSpGaqSxxHlbum2rWaMugnihLsUxcBdgd2Rd3PtSk0XVZjUzvkGZemQdWZCpK6u41oAGKII13AS6+f6ns55wN0RmVIkMgavPgPeVl/Prlar2squJWyqW4Zh6EZLlzoBJ9OvaudLdRgCn4bJZt1DNKEEo4j8RgWoGxCzJFC8aJowImbxB6ZN3TQK0xrkWMOmQ7+q+puDEt2JlvZAMo40PkNmZewOQmBAMSj3d35b/XpaBTdnxwxRHiYs5gfrv4MEdAlRkkKg8SqyCt3pFo+kq3MO2PUpjjJOljAs2iRFGLjyi0FI8mvCZfMFXCnLr+RcfqTqMsB/U5ZzfRerhK4fyU6fTIGL/1Oz3XptrDygKIOO90RY436Ge8/ZpYmG9rx+25rFwrfzl3YJYVd5A2pb7tf1YbNue+v10Jo9cTLvsWH9cnn545GYD87yt5Vn13kE+uyq8e3x4ennCm4j8+Wbb427+Hly+fzNG/T8+R1qnl2F1jobyH/fS/iXXjBZ3UTO/HFxebVuPcwDsg5fxv5tnS1ZJmYv1n3/qvndG+m38e2v701j5s9fBtPL4Hf3ZnY/8lHj8elpdR3owxXrfblYDBpXP8z5czcd5vnzcFB32m8x7cawL6woYZRN5oBFtSzaw+8rF7JeSHxOL4WEBFpYqrppwVFcABVqpzhVUIubSQIigSuLuVkbxsXArnftgXHWPes2mgOjbhv1Vsu8MLyu1zyrOGiD4gBiL6EhKXwVLLvpn88B4tjlQANg2jLJ8Ay4+onFPhJI8emdvBwJ5TBOJItH8WJC5mkS0pazzLOVFZKWs0hTVRkm4if9ybxQANtn7uYec98BJimBgt6L/uaywbmQqVigZSYis7ZENQqZHACs4GDXcpp1nZM4jaAAqsdJkEVQS2dpmRidb/6WhjAvpXeDcXnvPgzrcK/KgNQJSKHAi1i6IKsIR0aQXQXyYcCWuRtwZd7LAlJcL5lOwQjeINnfeuuSoj22LeL1eoNRb1TB3mqfdlrm4/1J/RNM+mE6to6CJdlxW41SOR0kd3SqYi5QbVHLlsusLF+j4EUmzeuSHk19BDiT5LYeJy9A9a0J/aTZskV94Hkr38cneYOOBBIQy2ZTyuUJD4sR8OJh4ctLkp/6atlzKfMmIBfHZL1Ivj8KxJ8+UbCLCz0p/iV/q4QFb+U6YmvHj4xTviYEodNiVUyR9QdNgRNplkjaS9iu8WMGjjnfF26TvMUiZDdNMgEf7ygFn7VVhHGSUeH31VKwy7ElTrFOwX1Temem5PHXwZzzDwfzPzfXI8l2MVK3uuS/lTVStgsGtZj/JZa2mst3pnROpzuc/grwCK17Vuusazc8o6T1xobW68agu03gXiSdd+L3kp2cHt6Hzh8=</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FE35BA296C37A0E05307991F0A50EB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35BA296B37A0E05307991F0A50EB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35BA296B37A0E05307991F0A50EB</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B3E06B6B78E05305991F0ABA86</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B3E06B6B78E05305991F0ABA86</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463263109</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B3E06C6B78E05305991F0ABA86</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:ACCESCS</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CC82D537A2E05307991F0A444C:5FAB1566"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>760e7ad9-ea07-4848-b172-46915ec752c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e7986cf8-dc25-4c32-9617-6256d919eb92</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5be2fca7-4226-4ec4-b147-7da4a9d73f10</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3e5ce75-2fd6-47a1-851a-96e7c11a22fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13012a96-d7b9-4f65-aa93-c029c21ce9cf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3cf24dc-991e-4ca0-9910-ab3904881b77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00005_AccountDelete_PERM_API_Invocation_from_a_LLASP_P0" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="87d1ee73-ca54-47bb-b9be-74f6c083e6a4"><con:description> This case describes the scenario where a consumer goes to an online Retailer to delete an Account which is active. In order to delete an account it requires Node ID,AccountID and UserID.

This deletes an account.  The account is flagged that it is deleted without removing the data .  This is a reversible process.  Status is changed to &amp;quot;deleted&amp;quot;.  
This is performed on behalf of an authenticated Administrative User for the Account

Account deletion may be initiated only by a User on that Account with Full Access privileges. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="b1977e64-0cd1-4679-b477-02ae421f0a1d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdLLASP"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="212984c4-c10a-486e-960f-abdcb7715e23"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set NodeID to LLASP" id="b90d0788-1a70-498b-81b9-efc728ea3450"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdLLASP"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call MUC Policy Create" id="3a215376-91d2-44bf-90c9-9af151244c3c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateMUC_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Get" id="7d23d351-27b7-482a-a3c6-f1f207b7de6a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));


myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Acccount Delete" id="618bf5b1-32b8-4ebd-958a-e9d7758b10ad"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="273d8aee-03a2-45cd-ad7d-655361b63ca8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>90179</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>LLASP</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+o4EH4/vyJKH1fBCSGFRAWJW89yDrcCbWlfVq7jgGliU9sB2l+/dmgoUNrlrISEPBnPfHPxN3MlYBIXg7oQmEvCqNFpVc1/PFzBfsWLrND3XauE3JLlR+6TZYdFL3LCy7ILfdPoCJHiDhUSUlk1i7ZTsuyK5fgTxwtK5aBUKdhl79E07jAXyrRSKdimsUliKoLMbdVMOQ0YFEQEFCZYBBIF43qvGyjNAOaYzNrVFmXmkNfmUi4DAFAhxAjHMSogloArcKBzFYpgTGYUypTjd5+hqJrvd9frdWHtFhifgaJt28D2gdIJBZldmLUf+WUcdmjEtucmpIwSBGPyBjWoHpZzFhr1eMY4kfPkC9MOcGxt2sIbZCGnRC9M8OEgQ3empQOQXEBLzKGTGxvhCHNMETZuR52qeXFeBbd3JxxSETGeiKPzn0HCdIVjtsShJfLIcnTnWzyRrtoVRkGHojgVZIX7uk2WEGFhDDmOyKZLhGq+UBhZ+Y2NUD+SdxlGf1KWK7CPVUEHJ7LTIjMs5P+p2X69tlbuYJziWv/6udXmT22l+OgOJrfcW92U8dv652JWzSDsK29B7cr9fj5u1l1vvV+6p4z9XD+tp7cPs8FwI4d4VEyn4+F9bx5dDvtRAn6NF979c/eXxx9fY68R9W8nf709yuIzeJS23ZtM2SDkL4MYln7M793Oxnd6v0vxsvLoQ1BppunrzYLdPJBRw2tPhdvf9AEYLzqyF/39lPDugNz+dNrT5LLPbord1zRpzBfFYfoQ/mgO7Gm71Eou6Z2/ePN4S9xUP2Laj+FQmFPCOH1aYCTzo26PTsu4VvWC8nt60RISWlGmGiw1RwmJqTRr+pamliBVBETCQBVze7bt67brNepFv3Lplut22/Zcu+z7zrVd9+x2I+egLYojiE1GI6J9aZbd9s/3AFESCExDzK0VS9EcC/Mbiy0oodGhI/U4GBV4whSLO0vBIHJnnpJ5axwyxt4I9J+RafSZHNABr0cS80PqrhxQ9wgjsiRY87tucKE6XEiVixe4SmXsFFawQHGqJgDXJBwUSxUPCJIsY6yRgoSFaYwLy/kyywwQ2/+iBZHIpKP2JHt4X8Z1/C1PgdIJiVYQOpYGVmXEJ2aQmwfyZcBFZz/g3Hw9DYl+XyqfkhO0RXL46aNNdH/seqTbrY+HOeid7nl3VTY+3wTfIALHydg5Cldkz20+SdVwUNRRy0v5AgsvhXS1SrPilTUtcmUeKHZ0wBijVHHb64Q9Ywp2JsBZo2WH+sjzTn6IL5VzOpZQ4kS1mpEdz9grxljovaKj3sjm3KXlwKXKm8QbeUrWjNX6oRF/u6GgAGk9JR6qvzXj4Ue5Ttja86PiVMuEJHSmT3qIvH7RFIgps0SxHuP7xk8ZOOX8ULhL8g6LVN30lEr89RdD01nVhAixlMpOy8wE+xSb4ZSvSxx8KH0yk9H4+1zeiC/n8rTXHSuyS6C50yX/rWyRrF0QNvX4z7BUzY1aM5VzOtuj9HeAn1m92W569dZlwy9lrO5tWd1plN1dAg8iqX0Sf5bs5fT4PdT+BQ==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FE35CEC5AE6B94E05305991F0A1B73</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CEC5AD6B94E05305991F0A1B73</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CEC5AD6B94E05305991F0A1B73</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35BA298637A0E05307991F0A50EB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35BA298637A0E05307991F0A50EB</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463267128</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35BA298737A0E05307991F0A50EB</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CDB9B3379EE05307991F0A9FE6:DC096492"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>760e7ad9-ea07-4848-b172-46915ec752c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e7986cf8-dc25-4c32-9617-6256d919eb92</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5be2fca7-4226-4ec4-b147-7da4a9d73f10</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3e5ce75-2fd6-47a1-851a-96e7c11a22fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13012a96-d7b9-4f65-aa93-c029c21ce9cf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3a215376-91d2-44bf-90c9-9af151244c3c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7d23d351-27b7-482a-a3c6-f1f207b7de6a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00006_AccountDelete_PERM_API_Invocation_from_a_LLASP_CS_P0" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="c84e09f7-a206-4ed9-b6ba-81f0f5a93a26"><con:description> This case describes the scenario where a consumer goes to an online Retailer to delete an Account which is active. In order to delete an account it requires Node ID,AccountID and UserID.

This deletes an account.  The account is flagged that it is deleted without removing the data .  This is a reversible process.  Status is changed to &amp;quot;deleted&amp;quot;.  
This is performed on behalf of an authenticated Administrative User for the Account

Account deletion may be initiated only by a User on that Account with Full Access privileges. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="48e48b07-337e-4cde-a291-46bc79378c53"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdLLASPCS"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="c8e57191-5417-4607-b915-91f2f601c51a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set NodeID to LLASPCS" id="e23a29d0-0e90-480b-bdcd-87ce6484b228"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdLLASPCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call MUC Policy Create" id="47a6f4c6-761d-4a58-99b7-a4253f7f8cef"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateMUC_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Get" id="deef7eaa-7214-4e2b-a8ec-d8de65cc0c9a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Acccount Delete" id="4b8387a8-1ade-4be9-a799-259110d78af6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="84a2dc4d-5818-4133-ae3a-ee422b8fd3b6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>90179</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU+o6FH73V3Tq457SCy2XjjCDgHvjRhGKuvXFCekCom1amrTW8+tPUiwCood9ZphhsrryrW9d8iVnDIWB5XYYg4STiCqDXkt9smYzbDQaoM0Ny9ds265rs6pZ05Dt1GqOjQzbR6oyYCyFAWUcUd5SLcO0NaOhmc2p6bh23XWsSr1hPqrKHSRMQAuXiqEqeRhQ5hZhW2qaUDdCjDCXohCYy7Hrda6GrvB0UclJbZ+tWRYBk/aS89jVdVzxAUMQ4AqOQv1M3/E585nrkQVFPE3gPabPWur73tfX18prtRIlC90yDEM3mrrw8RlZnKrtk3Iz+AM6j9brLqIRJRgF5B8kSV0BX0a+0gkWUUL4MvwC2tRNQ0JrkGMNmzY9VfWPAAW7I5F2SCYMaWyJzBJsAnNIgGJQbieDlnp6XAfXe6cJomweJSHbW/8dJaAZBFEMvsbKzEp2xyMeKFf7DLA7oDhIGcngWo5JjDAw5SaBOcmHhInh85lStF/JmfiRcsoA/01bzvRtroK6fqA6PbIAxv9Pz7b7tUa5Q0EK7at780WvZosYfv34PXp9HD50grn1izyO7FZBYdt5TWrT7vf1/rBuZut9E7q/mc7icR8WDxd49rYyrTubBOPl1ds0Rf3xz964eq/zrpUNxzCL7+ovb94Y/X7MiBdfhy/3TQh9Zq+c7q1tk5O62Tdvlob1MNLRJYdw9Kc27AZodDPJrO7tZd7xH+14fNXIk6SRBs8+iqsw+UmfvWmQ+dhbWbmovfFj/rgY1E7iX6Pbbuhll0FwHzTAse2H1kdO2znsGktJ8NLZM2BeLuV4DHrKhegX4t/Li7QQX5sXrm4sNYpxoFxty11SWtxUCBDxXdHM9dowLvpV59y2eo5TrTcbfcOpGvVm07wwOo5pOKUGrVnsUexGdE5kLKmy6/n5niAOXQbUh0TLohQvganfIPYQR8qATsThiCiDaSRUPDTMWRSz1GR5YD7jeR4ZwGshYapyHfERHSWdOYdkV7obO9I9AUxiAlLf5YAzMeGMi1qsUJbywKxkqEIhFTdAIkXYteyGozMSxgFIpnoY+WkAlXgZF5XR2frf0hBmhXXSnxYH78u89r+VJRA+PpEOTOZyDqKNcOAOsstEvkzYMrcTLuE7qU/k+RL15AnBaya7nz7GRM7HZkaGw45389T1nsyS+WbDcQCiJJ936t/Q0vcrsgnkZ2QrbHmdihtC6Ee77OcKVVaVNMvSooN1qY2JgNeFRJq6BzgVAvc2jV6A6hsI/aj7ZcN6L/LGvssv5UvqcSQURcybUiyPeFx4wOTjYiAOSn7sy2UnpKgbh5wfsglVY0wy/vaZgl0s/YT5Rvy9Ron/0a4DWFtxRJ7iRcEJXciVvEnevhgKHAlYIqQvSrbBDwEcCr5r3BR5w4WLaZqlHL7+okhNa6kI4yilfNBTC8O2zhY8+VsM7ofTJ5hCy98v55x9eTn/uRp6QvFCpG58yX87a6QYFwyqfAMUXFpqLt6aIjhdbOn6O8ED0u7UzrvN2nm9X0i7s5b2bq9b3xRwJ5P2J/Nny1ZN989D+18=</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FE35B56BCA6B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B56BC96B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B56BC96B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B42D553798E05307991F0A5105</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B42D553798E05307991F0A5105</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463271948</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B42D563798E05307991F0A5105</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35B3E08A6B78E05305991F0ABA86:A6642E6B"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>760e7ad9-ea07-4848-b172-46915ec752c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e7986cf8-dc25-4c32-9617-6256d919eb92</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5be2fca7-4226-4ec4-b147-7da4a9d73f10</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3e5ce75-2fd6-47a1-851a-96e7c11a22fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13012a96-d7b9-4f65-aa93-c029c21ce9cf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>47a6f4c6-761d-4a58-99b7-a4253f7f8cef</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>deef7eaa-7214-4e2b-a8ec-d8de65cc0c9a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00007_AccountDelete_PERM_API_Invocation_from_a_DLASP_P0" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="56d4ce16-8405-4b07-9699-ac7a2f861aca"><con:description> This case describes the scenario where a consumer goes to an online Retailer to delete an Account which is active. In order to delete an account it requires Node ID,AccountID and UserID.

This deletes an account.  The account is flagged that it is deleted without removing the data .  This is a reversible process.  Status is changed to &amp;quot;deleted&amp;quot;.  
This is performed on behalf of an authenticated Administrative User for the Account

Account deletion may be initiated only by a User on that Account with Full Access privileges. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="98ce8cc5-a19f-4289-979c-b77a1fc10f5d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdDLASP"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="2788ab18-4cca-44ad-826b-9ac3c8be2c7b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set NodeID to DLASP" id="98d55da6-eee1-4a26-891a-cd059dbaafec"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDLASP"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call MUC Policy Create" id="5c8b5ab7-2578-4e1f-9513-ddd0b7cfc17d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateMUC_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Get" id="908ac91e-1ba4-4412-b2a4-a1b11b322a69"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Acccount Delete" id="225b2b24-9338-4922-a5e3-47928afb3692"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="1c7fd598-11e6-48c7-99c7-7c04f2e9a6e1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>90179</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyjyjkQiAQFaRw6zDqhRZ6Oy9HxtmA28SG2Am0Xz92aChQ2sMcCQl5Z3vttS9e9hlHceT4AeeQCMKoNug29X+RXQWrBrbRmEBouC7yDFR1Ksa0MXEw8lxrMvV0bcB5CgPKBaKiqTuW7RpW3bAbY7vqu55frZU92/lH1+4h4RJaupQtXVvHEeV+Hrappwn1GeKE+xTFwH2B/VFweeFLTx8VnPTW2YZlHjBpzYVY+KaJyyFgiCJcxiw2z8w9n7OQ+yMyo0ikCbzHDHlTf9+7Wq3Kq0qZJTPTsSzLtBqm9Ak5mf3UWz+KzRAO6JRt1h1EGSUYReQNKVKXIOYs1IJoxhIi5vEX0LZpWwragDU2sO3Sn7r5ESBndyLSHsmEI4PPkV2A3cIUEqAYtLvbQVP/eVoHN3vHCaJ8ypKYH6z/jhLQDCK2kNF4kVnB7nTEI+VqnQH2BxRHKScZXKkxWSAMXBsmMCXrC8Ll8IVcy9uvrbn8kWLKAP9NW87MXa6SunmkOl0yAy7+T892+7VBuUdRCq10cV6roqFN2Us492oUsw4e1jrt5ajezCnsOm9Ibdv9vj4c1u1svW86f0bztJ1c3408s1r6ld2k3tgbivnv7MINol4wfHzpvYbecLRu2KWuOX8U5P75ceF1opcbiJ3eNKqF52Fdln9V+vFyiQLP6Y5d9ybrvZQ8qFeuf12J4Wr0LErD64fJw5PTS2EY1O4YPL7FZH3320nhocayZf+6P7nhzgzfttkbSumPfgk5+O2q8vC78nRTcq+e3p6aHznt5rBvLCRhlE6eAYtiqcZj0NX6sl9IfC8vykJCY5q7+gulUVwAFXpL7VLS4qdSgEjoy2Zu1pbV71Wqbbfe6fdrbS/oWdWKVW007L4V9HqVdqFBGxYHFDuMTomKpVR2Mz/fE8Sxz4GGkBgZS/EcuP4NYhcJpA3orTwcjHIYM6niKeec8bkFSZbZ0yVaxu7CrVfXoa5dMXFNr5NgKiDZl+76nnTfAiYLAkrf1YBzOeFcyFosUZaKyC5nqEwhlTdAokTYdyS8yUm8iEAxNWMWphGUF/NFXhmTb/4dA2GeW2974/zgfZnX4beiBNInJMqBq1zaINsIR+4gt0jky4QdezfhAj5IQ6LOl6ynSAjeMNn/9DEmaj62M9K9CEbDgvTW97S9shqfd5rfMDIPi7ENFGZkJ2xxk8rLQUpHq2jlEpWX5TTL0rx5npLFRMKbUh1tcwQ4ldr2OmYvQM0thHnS1bJlfRB5a9/nl4o5HQkkIJajpuXLE94VI+DqXTGQZ2R96qNlL6Ssm4C1OGbrRPL5oRh/+0LBPlZ+0jyUfyuWhB/tOoK1E0fmKR8TgtCZWqlL5PWLocBMwhKpeizZBT8GcCz4vnFb5C0XIadpkgr4+oum5KypI4xZSsWgq+eGXYnNeYrXBfgfTp9gchl/v5fX/Mt7+fHyYiTFLkb61pf8t7NB8nHBoKvrP+fS1NfymSmD09mOpL8T/KzqnU67bdUrXlDLVd3bqHqj41S3BdzLpPXJ/NmyU9PD89D6Aw==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FE35CCBB0937A6E05307991F0A9C25</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CCBB0837A6E05307991F0A9C25</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CCBB0837A6E05307991F0A9C25</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B48CFF6B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B48CFF6B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463275905</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B48D006B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CCBB1F37A6E05307991F0A9C25:37E46F77"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>760e7ad9-ea07-4848-b172-46915ec752c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e7986cf8-dc25-4c32-9617-6256d919eb92</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5be2fca7-4226-4ec4-b147-7da4a9d73f10</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3e5ce75-2fd6-47a1-851a-96e7c11a22fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13012a96-d7b9-4f65-aa93-c029c21ce9cf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5c8b5ab7-2578-4e1f-9513-ddd0b7cfc17d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>908ac91e-1ba4-4412-b2a4-a1b11b322a69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00008_AccountDelete_PERM_API_Invocation_from_a_DLASP_CS_P0" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="4dd81324-cbe1-4830-9d89-2ebd49deed17"><con:description> This case describes the scenario where a consumer goes to an online Retailer to delete an Account which is active. In order to delete an account it requires Node ID,AccountID and UserID.

This deletes an account.  The account is flagged that it is deleted without removing the data .  This is a reversible process.  Status is changed to &amp;quot;deleted&amp;quot;.  
This is performed on behalf of an authenticated Administrative User for the Account

Account deletion may be initiated only by a User on that Account with Full Access privileges. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="93add03b-fe09-41f9-84ed-02f065385c15"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdDLASPCS"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="63e855aa-6a6d-4435-bbd3-a4e680498878"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set NodeID to DLASPCS" id="93f2b16f-7936-4a27-8086-e4691790be97"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDLASPCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call MUC Policy Create" id="eaad36d6-900d-41b2-bbcf-ec32207c3caa"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateMUC_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Get" id="dc9ec590-8193-4e7b-87f3-a74d73733cfa"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Acccount Delete" id="011f6943-8f13-4bc1-a2b8-744bbfb209f0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="45641062-fe37-45fa-93de-9c282d1dd956"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>90179</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdU+I8FL73V3S6l05pS1uRjjCDgGtdFFZYV73ZCemhRNoEmhSQX79JsQiIvuw7wwyT05PnPOcjT3LBURKX/QbnkArCqBa0avqfoe05rjMCAzvnVcN1vZExHAEYQys89zy7iqxRWdcCzjMIKBeIippetmzXsM4NuzqwPd899y2rVLW8Z117gJRLaOlSsnRtmcSU+3nYmp6l1GeIE+5TlAD3Bfb7jduOLz19VHDS6xdrlnnAtD4WYuqbJi6FgCGOcQmzxLwwd3wuQu73SUSRyFJ4ixnymv62d7FYlBZOiaWRWbYsy7SqpvQJOYm+6fWTYjOEAR2x9bqJKKMEo5iskCJ1C2LMQq0RRywlYpx8Am2btqWgDVhiA9su/aab7wFydkci7ZBMOTL4GNkF2D2MIAWKQft1H9T0b8d1cL13kCLKRyxN+N763ygBnUPMphAavMisYHc84oFy1S8A+wHFccbJHO7UmEwRBq71UhiRZYdwOXwh1/L2a0suf6SYMsD/0pYLc5urpG4eqE6LRMDF/+nZdr/WKA8ozqAeBwG/u338wRa/H7rDfnuxcB5Pm0NAz0Etp7DtvCa1affben9YN7P1tunh9IbgK3sxMAW9M5+rMwhmE1KZ85s757aXwXi2EoJ9936bDHfpwwq9nN5P3Gg4LNtzcSom3mrUndoN50c0uD6JeteTF955fHbxxP1xNexcR09R+6cbZjfB0uk8vgRNwtpL0nthv34+VyJXrK5/iYHFBr2nvuiYD+LnTePWnbVS8f0kiW/Ss9eu3Tx76qFuq2IKq/ae03YOu8ZCEvrZ8AWwKJZqPIKWdiX7hcTX8qIsJDRGuas/VRrFBVCh19UuJS1+JgWIhL5s5nptWVdtx7tslKuNtlNpWG3Lc6xKtWpfWQ3Pal8WGrRmsUexyeiIqFhKZdfz8zVBnPgcaAipMWcZHgPXv0BsIYG0gN7Lw8EohwGTKm7PHLc8Lr9yvEpe7CRECyFWldHEiXTtjoku7aaNkYB0V7vPd7T7HjCZElACryacyxHnQhZjhuaZiO3SHJUoZPIKSJUK+2X33DM5SaYxKKpmwsIshtJ0PM1LY/L1f9lAmOfW+/YgP3mfJrb/raiB9AmJcuAql0uQfYQPl1DF94pEPk24bG8nXMA3spCoAyYLKlKC10x2P73PiRqQzZC0Oo1+70+z/8cumG82HAcgS/Jxp/kFLXO/IptA4ZxshS3uU3lFSAGpF/2codKslM3nWd7BihLHVMKbUiNtsw84kwr3OmAToOYGwjzqgtmw3ou8se/yy8SY9gUSkMh50/LlEa+LPnD1ugjkSVke+3TZCSnrJmApDtmasXyEKMZfvlOwj5WfNPfk34Kl4Xu7DmBtxZF5yieFIDRSK3WVvH4yFJhJWCK1j6Xb4IcADgXfNW6KvOEi5DQNMwGff9GUqNV0hDHLqAhaem7YFtqcp3idgv/u9AEmF/O323nJP72dH287fSl5CdI3vuS/nQ2SjwsGXT0Cci41fSkfmzI4jbaE/Y3gAW33zi7b5bPLSjvXdm+t7c1Ws7Ip4E4m9Q/mj5atmu6fh/pf</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FE35B56BE36B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B56BE26B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B56BE26B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35BA29AE37A0E05307991F0A50EB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35BA29AE37A0E05307991F0A50EB</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463280023</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35BA29AF37A0E05307991F0A50EB</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35BEA0536B84E05305991F0AFAB5:5B40ED22"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>760e7ad9-ea07-4848-b172-46915ec752c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e7986cf8-dc25-4c32-9617-6256d919eb92</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5be2fca7-4226-4ec4-b147-7da4a9d73f10</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3e5ce75-2fd6-47a1-851a-96e7c11a22fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13012a96-d7b9-4f65-aa93-c029c21ce9cf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eaad36d6-900d-41b2-bbcf-ec32207c3caa</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>dc9ec590-8193-4e7b-87f3-a74d73733cfa</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00009_AccountDelete_PERM_API_Invocation_from_a_Portal_P0" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="c8c0399a-6a90-41f6-9718-5936e0bb708e"><con:description> This case describes the scenario where a consumer goes to an online Retailer to delete an Account which is active. In order to delete an account it requires Node ID,AccountID and UserID.

This deletes an account.  The account is flagged that it is deleted without removing the data .  This is a reversible process.  Status is changed to &amp;quot;deleted&amp;quot;.  
This is performed on behalf of an authenticated Administrative User for the Account

Account deletion may be initiated only by a User on that Account with Full Access privileges. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="427ec1f9-15fa-458c-852c-a9ca0a356523"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportal"));
tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdportalCS"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="bd29bcd1-3495-4271-acd7-0b56c5d60e78"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Get" id="7cd65c58-170f-4d42-826d-04404247c71a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Acccount Delete" id="214a748f-accf-4f55-9ac8-57b0344d686d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="0eed4a1f-88d3-4800-adcf-25003416d327"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>90179</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU/I6FH33V3Tqo1N6o7R0hBnk8h2OAiqI6MuZkAaIlLQkKRd//UkKrYDo0TPDDJPdnbXXvmQl1wwsQsuvMYYoxxFR2o2K+g90y8AomZ7mucDVioEDtLFt2JrjlF2vaJsOgEhV2owlqE0YB4RXVMswi5rhaWZ5YDp+0fMNp2CV3FdVGSLKBLRwKRiqslmEhPlp2IqaUOJHgGHmE7BAzOfQ79c6d77w9EHGSa1e71imAWl1xnns6zosBAiiMIQFGC30a/3I5zpgfh9PCeAJRfuYAauo+73r9bqwtgsRneqWYRi6UdaFT8Dw9FKtXmSbUdAmk2i3rgMSEQxBiN+BJNVBfBYFSi2cRhTz2eILaFM3DQmtoQ3UoFkkl6r+ESBl90OkI5KUAY3NgJmBPaIJoohApDw9tivq5c86uNs7oICwSUQX7GT9O0qIrFAYxSjQWJZZxu7niGfKVb1G0G8TGCYMr1BXjkksyDPlnqIJ3txhJoYvYErafmXDxA9nU4bgb9pyrR9yFdT1M9Vp4Cli/P/07LBfO5QhCBNUHfWey298wOEN7Frx6KGZbMzO9uV1OVpXUgqHzjtSebv369NhzWdrv2lYX/SuujZ+aNr1d4C3XfvxZfyit54mV05/8Bx0lnzTN3tj2qQuHW7b8ep+24uLRb1k3I3fzfnr8o/5Erf/urlahhfzsfPWbI3eB+ZTb/z+Fo9Qye1ZXnHTegtuh/2A3c7XHZvPeg+W3eLdWjwc9v7uGt3SVWhttiR2Xz371nprzed/hhdR8vQQL3Hz7soCRe958uDVKh85HeZwbMwkoZ+M3xDk2VKOR7uhtES/AP9eXqQFB9okdfVjqVGMI8LVqtwlpcVPhADhwBfN3K0No9W0nRundNOql27cZtNwbMMpl82WUas36m6mQTsWJxTrEZlgGUuq7G5+vicIFz5DJEBUW0UJnCGmfoPYABwobfIoDkdEGBpEQsW9+WpmgBmEyxk1HRvhWbRdIWKYqtKNeI/0aG3CET2Wbu9Iuh8RxDFGUt/lgDMx4YyLWizBKuGhWViBAkGJuAGoFGHfKnqOzvAiDpFkqi+iIAlRIZ7FaWV0tvu3NABZasUMxhHlIDTT8/dleqffskoInwBLByZTukGim+jTVeT6TpbPl3lb5mHeGXwtCbA8ZqKsnGK4Y3L86WNa5Jjko5InBpmZcc+3/BLiDID+DT/9tDR5vGCFD6Jn16u4MYSeVLP+LkFhWUhWqyTtqCu1kgp4XUimqfcRTITgbQfRHBE9h9B/dN/krE8i5/ZjfgmfkT4HHC3E/Cnp8gePjT5i8rHRFgdn89OXzFFIUTeONvycrR6KN4lk/O2zBfpQ+gnzvfhbRzT4aNcZrIM4Ik/xwuCYTOVK3izbL2YDRgIWCymM6CH4OYBzwY+NeZFzLlxM0zjh6OsvitS4igogjBLC2w01NRzqbsqTb2Pkfzh9gkm1fX9Zb9iXl/Woc9cXCrgAau6L/9tZw+m4yKeq8E+5VNSNeHuK4GR6oPN7gmekvtgqmq7tluup1Ls7qTe9ci0v4FEm1U/mz5aDmp6eh+q/</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FE35B4F418379CE05307991F0A189A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B4F417379CE05307991F0A189A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B4F417379CE05307991F0A189A</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B56BFC6B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B56BFC6B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463284436</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B56BFD6B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CDB9CD379EE05307991F0A9FE6:7D42DE0C"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>760e7ad9-ea07-4848-b172-46915ec752c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e7986cf8-dc25-4c32-9617-6256d919eb92</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5be2fca7-4226-4ec4-b147-7da4a9d73f10</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3e5ce75-2fd6-47a1-851a-96e7c11a22fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13012a96-d7b9-4f65-aa93-c029c21ce9cf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00010_AccountDelete_PERM_API_Invocation_from_a_Portal_CS_P0" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="53d67cd6-7163-481d-b92f-8df7644e1ecb"><con:description> This case describes the scenario where a consumer goes to an online Retailer to delete an Account which is active. In order to delete an account it requires Node ID,AccountID and UserID.

This deletes an account.  The account is flagged that it is deleted without removing the data .  This is a reversible process.  Status is changed to &amp;quot;deleted&amp;quot;.  
This is performed on behalf of an authenticated Administrative User for the Account

Account deletion may be initiated only by a User on that Account with Full Access privileges. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="3410070c-0e98-4360-b560-a2534c9921a7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportal"));
tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdportalCS"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="2de3c02f-5370-4d9b-ae12-5293bc555d91"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set NodeID to Portal_customersupport" id="f50cd9b7-2a76-4479-9bca-44658f07d58a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdportalCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call MUC Policy Create" id="2d760055-0f74-414b-9f39-717c3f30cae9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateMUC_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Get" id="b387226b-bbdf-48e5-addd-e65b168eb0f8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Acccount Delete" id="512585fc-5db5-488b-9f04-f802f50e595d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="3bdf319e-ab6b-4847-a923-ad7b31719934"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>90179</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU/I6FH33V3Tqo1N64d4BZhC8VEX9gKMOL2diugvRNilNysVf/yXFVkD06JlhhsnuztprX7KSFkdR6LhdziERhFHN67f1f60KBsd2aoZj44ZRcRqWgZ4r2LAc7DeDulVu1ANd8zhPwaNcICraumPZFcNqGHZzbFfdSsO1miXLcSa69gAJl9DSpWTp2ioKKXezsG09TajLECfcpSgC7grsjrqDG1d6uijnpHdaG5ZZwKQzEyJ2TROXfMAQhriEWWS2zB2fls/dEZlSJNIE3mP6vK2/710ul6VlucSSqelYlmVaTVP6+JxMj/XOUb4ZfI8GbLPuIcoowSgkb0iRGoCYMV/rhlOWEDGLvoC2TdtS0AassIHtCj3WzY8AGbsfIu2QTDgy+AzZOdgQAkiAYtD+GXpt/fhnHdzsHSeI8oAlEd9b/44S0AWELAbf4HlmObufIx4oV6cF2PUoDlNOFnCrxiRGGLh2n0BAVjeEy+HzuZa1X1tx+SP5lAH+TVta5jZXSd08UJ0+mQIX/6dn2/3aoDygMIVOPagsk9Pnt5vHgF+xxWAd9+6mfi28Yq/tjMK284ZU0e739f6wFrP1vileXvyJRnZK5+c1MvGSp/HtGbOdpnPvX77w+6V4uSTP3Xm/3H24W8NkXV9eVnrMGsYz9jRpXjYfvZPba3tCmxCtjqqTtyeEr9D1xduAvAwfbx/mJ2Ht6Wp28npbmZtnl5g6ozENX5F5wyrm2XNZROzizefBIn6cPkTdp8FFMPFOB+xifETD7jXUrsR0wlY38/J1EPxpf+S0ncOuMZeEUfr8AljkSzUeXl87l/1C4nt5URbiG0Hm6sZKo7gAKvSO2qWkxU2lABHflc3crC3r/KxcPa04/XqvXG82zqxq2ao3m/a51a3aVjXXoA2LPYo9RgOiYimV3czP9wRx5HKgPiTGgqV4Blz/BrGPBNI8OpSHg1EOYyZVPIrwrPwyXU+r6cpeCDtahbVl9ILedO2WiTt6l3QDAcmudDd2pHsImMQElL6rAedywrmQtZijRSpCu7RAJQqpvAESJcKuU2lUTU6iOATF1IyYn4ZQimdxVhmTb/4dA2GeWQnHMUsECu3s/H2Z3v63vBLSxyfKgauUTkF2Ez5dRXW3mufzZd6OvZ13Dt9NfaKOmSyrSAjeMNn99DEtakyKUSkSw9zOuRdbfglxAMD8hp+5X5oinr8gW9Hz61XeGFJPOnl/56g0L6WLRZp1tK60MpHwppRM2xwBTqXgrcfsFahZQJg/um8K1nuRC/suv1TM6EggAZGcPy1b/uCxMQKuHhuePDirn75kdkLKuglYiUO2XijfJIrxt88W7GLlJ8338m/JEv+jXQewtuLIPOULQxA6VSt1s6y/mA3MJCyRUsiSbfBDAIeC7xqLIhdchJym51TA1180pXFtHWHMUiq8vp4ZtnU34ynWMbgfTp9gMm1/v6xX/MvL+mlwM5IKGCG98CX/7WyQbFww6OpNkHFp6yv59pTB6XRL598JHpD6aq1nW7XT+lkm9dWN1Pf6vXpRwJ1MOp/Mny1bNd0/D52/</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FE35B56C116B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B56C106B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B56C106B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B42D7C3798E05307991F0A5105</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B42D7C3798E05307991F0A5105</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463288229</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B42D7D3798E05307991F0A5105</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35B3E0A36B78E05305991F0ABA86:3916B315"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>760e7ad9-ea07-4848-b172-46915ec752c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e7986cf8-dc25-4c32-9617-6256d919eb92</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5be2fca7-4226-4ec4-b147-7da4a9d73f10</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3e5ce75-2fd6-47a1-851a-96e7c11a22fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13012a96-d7b9-4f65-aa93-c029c21ce9cf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2d760055-0f74-414b-9f39-717c3f30cae9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b387226b-bbdf-48e5-addd-e65b168eb0f8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00011_AccountDelete_PERM_API_Invocation_from_a_DSP_P0" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="a2e06c2e-d72f-4faa-9527-dcd508aaacaa"><con:description> This case describes the scenario where a consumer goes to an online Retailer to delete an Account which is active. In order to delete an account it requires Node ID,AccountID and UserID.

This deletes an account.  The account is flagged that it is deleted without removing the data .  This is a reversible process.  Status is changed to &amp;quot;deleted&amp;quot;.  
This is performed on behalf of an authenticated Administrative User for the Account

Account deletion may be initiated only by a User on that Account with Full Access privileges. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="d00d560c-9468-411f-9736-cb271371d98a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdDSP"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="c1500373-8c2b-45c7-a49b-b74492b1d43c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Get" id="7d516612-dbeb-4f53-983b-44d22ad5e762"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set NodeID to DSP" id="9dcd3dfd-a3c2-4447-8a8e-0ef56ebe826b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDSP"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call_MUC_Policy_Create" id="f3e3a451-590b-4a00-9472-919af99c8836" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateMUC_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call Acccount Delete" id="9616ee82-a2aa-48f3-9202-cee68875a7bc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","API_NOT_AUTH");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>90179</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DSP</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSxyrkRrhEBYnrNrvQG5TT7suRcQbwbuKE2AnQX792aChQ2sMehBR5PJ755uJvfM1QGFhuizFIOImo4nUb6r82dixrWrE0E9uglWvTmVafobJmTOuALd82feSoisdYCh5lHFHeUC3DFAo1zayPTcct11zTKtXtyk9VmUDChGmhUjJUZR0GlLm524aaJtSNECPMpSgE5nLsjlrDgSs0XVRgUpvXW5S5w6S54Dx2dR2XfMAQBLiEo1C/1g90rn3mjsicIp4m8ObTZw317exqtSqt7FKUzHXLMAzdqOtCx2dkfqk2L4rD4Ht0Fm3XHUQjSjAKyCuSoIbAF5GvtIJ5lBC+CD8xbeqmIU1rsMYaNsv0UtXfHeTozrR0ADJhSGMLZBbGHmEGCVAMytOj11Avz6vg9uw4QZTNoiRkR+u/gwQ0gyCKwddYEVmB7nyLJ9LVvAbsehQHKSMZ3Mo2iREGptwnMCPrAWGi+Xym5OVX1kz8SdFlgP+mLNf6PlYBXT+RnS6ZA+P/p2b79dpamaAghSYynEH73h/f31w99J695MGqTK5uh3E4LTdyCPvKW1C7cr+tj5t111tvh2KdT4arp2DSHb48rW3/NjbXm+WIVTfZr1dWMxib/6hkWZ/cfeOjsW4PnlD7Zu5Ul30+wZnz0nqg/avJ9J/7tje/MMjMqXdfu/MHc3nTsoe1R1ztDajxvCiXX36Gq0X85CT2w031u1HuvMCyk149kWjjjOc3Ds3uvOfBcml/Zw4z6+uL3u/ej+zKGHyzZqF3NXs1Jg+N95j2YzgUFpQwSqe/APNiKdvD6yp9US/Ev6YXKSG+NstV3VhyFONAudqUpyS1uKkgIOK7opjbtWH0e7bT7jsVw66065We4diGU6+bfaNVcbrVgoO2KI4gdiI6I9KXZNlt/3wNEIcuA+pDomVRihfA1C8sdhFHikcfxeWIKINxJFjcdPhmbWNzYUOlZlbqC6giXIk2NVtVbiN+R++S1oxDcsjdtQPufgRMYgKS4GWHM9HijItkLFGW8sAsZahEIRUjIJEs7FrlmqMzEsYBSKh6GPlpAKV4Eeep0dn2a2kIs1z62BvnN+/TwI73ihwIHZ9IBSZjaYOoI5wYQkYRyKcBW+Z+wIX5VuoTecFEQnlC8BbJ4dZ7n8gG2TVJd3RfQN5pnndS5OLjSf0LPPpxKnaO/IzsuS0GqZgNgjmaRSGXqLQspVmW5qWrSlZMhHldkKOpjwCngto24+g3UH1nQj9rsuxQH3neyQ/xpXxBRxxxCEWjKfnyjGfFCJh8VnjiiqzPfbMcuBR547Dmp2SdQLw+JOIvHyjYxVJPiO/FZxUl/nu5Ttja8yPiFG8JTuhcruQM2XzSFDgSZokgvSjZN37KwCnnh8JdkndYuOimacrh8x1FsllDRRhHKeVeV80F+wyb4+SbGNx3pQ9mchZ/G8tr9ulYfh4ORoLrQqTudMl/K2skbxcMqpz+OZaGuhavTOGczvcY/Q3gR1LvdLoVq25XW7Wc1KtbUm+L3y6BB5E0P4g/SvZyenwfmn8A</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FE35CCD62A37A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CCD62937A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CCD62937A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35BF56036B96E05305991F0A65D7</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35BF56036B96E05305991F0A65D7</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20131017_1382016592260</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35BF56046B96E05305991F0A65D7</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:ACCESCS</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_7585e32a-80eb-4fbc-ba94-f26e687a86c5</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_7585e32a-80eb-4fbc-ba94-f26e687a86c5</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EH3PV7icxy1j2VwMrkAV14kzJGGBZDPzsiXkBjSxZWPJXPL1I5nYAUKyma2iilK71X26++hIVxyHge22OYdE0IhpXq+p/+tU61Uo29ioI5gZlfmMGDPcqBhzuwa1uoPrNVLVNY/zFDzGBWaiqdvIKhsWMixnapXdMnLL1ZLtoJ+69ggJl6GlSwnp2jYMGHeztE09TZgbYU65y3AI3BXEnbRvh670dHGOSW9d7VFmCZPWUojYNU1S8oFAEJASiULzyjzyufK5O6ELhkWawGtOnzf1172bzaa0KZeiZGHaCCETNUzp43O6uNRbF/lm8D02j/brLmYRowQH9AUrULcglpGvtYNFlFCxDD8IbZkWUqEN2BKDWBV2qZtvCTJ0X4x0BDLh2OBLbOXBxjCHBBgB7WHsNfXLr01wv3eaYMbnURLyk/WfQQK2hiCKwTd4XlmO7usRz7SrdQXE9RgJUk7XcKdoEmMCXBslMKfbIeWSfD7XsvFrW54zDMifjOTKPMQpYZtnOtOjC+Di/8zrcFb7KI84SKHFh7vaaju8eZo+oumo1zO7f/vPwXPio34zg3DovAdVjPp1fUrUglevmzbwZMbbtA1O2ntpTMRN/HBnqjP3rVa7Rg73BvedEfpRGTk3w3F3Pd/FCO7iPtmt/vKswbj/o7uzwlWnY07n1xc0cPjt8PvsMRyl03temwon6m+unefd83AUrp9RGFrW/cus8/DzesHF0v6GzZvHIapP7/+ZzZ/iIG60fwXOzLO+2xeLcHH7uB370PDahAXbVWXRfKvpsIZjYy4Hk3T2C4jIl4oaXk8byHlh8bm0KAv1jXnm6sZKn7gAJvSW2qVkxU2l+FDflcPcr/v1Aeo2BtX+wOm3G1a3jyrIGqA2choNq2N3cv3ZoziB2I3YnKpcSmH3/PkcIAldDsyHxFhHKVkC1z+J2MMCax4by4MRMQ7TSCp4pVPr9nq1qjNo9zoWqlXswcDqlBuoMpA/S6r3XSTu2X3SngtIjtW7dqTeYyA0pqAkXvGcS6JzIVuywutUBFZpjUsMUnkJJEqHXbtSr5qchnEACrAZRn4aQClexlmDTL7/tw1MeGbtTUbZ+fuwvNNveSekj0+VA1e1dEBOE85cQ3ZeyMcFNw4LzsO3U5+qYybbKhJK9kiOP72xRdGkoIqsKIdceJ4ajqKapwUVifw1JQXfi0taarxUgVY+jhUurUrpep1mA3CUwiUyvGmZyDEnQFIpU7tp9AzMLEKYX7ohCtQnmQv7Mb5ULNlEYAGhpIuWLb/wPJgAV88DT9J9+9W3x1FK2TcBW3HO1g3kK0Ih/vShQVyi/KR5JP82UeK/jetMrIM8sk75JhCULdRK3Qe7D0hBIhmWSgGLksPg5wKcS35sLJpcYBGSTbNUwMdfNKVMTR0TEqVMeD09MxyqZYZT7GJw35zehckU+fWK3fIPr9in2+FE6laI9cKX/rezQTO6EJC7OM2wNPWtfC3K5GxxoM6vAM8LdKXymUAfV9J6Z35vOejp6Xlo/QY=</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E8F0C9F5EF7EA91CE0401F0A07991B2B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E8F0C9F5EF7EA91CE0401F0A07991B2B</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EH3PV7icxy1j2VwMrkAV14kzJGGBZDPzsiXkBjSxZWPJXPL1I5nYAUKyma2iilK71X26++hIVxyHge22OYdE0IhpXq+p/+tU61Uo29ioI5gZlfmMGDPcqBhzuwa1uoPrNVLVNY/zFDzGBWaiqdvIKhsWMixnapXdMnLL1ZLtoJ+69ggJl6GlSwnp2jYMGHeztE09TZgbYU65y3AI3BXEnbRvh670dHGOSW9d7VFmCZPWUojYNU1S8oFAEJASiULzyjzyufK5O6ELhkWawGtOnzf1172bzaa0KZeiZGHaCCETNUzp43O6uNRbF/lm8D02j/brLmYRowQH9AUrULcglpGvtYNFlFCxDD8IbZkWUqEN2BKDWBV2qZtvCTJ0X4x0BDLh2OBLbOXBxjCHBBgB7WHsNfXLr01wv3eaYMbnURLyk/WfQQK2hiCKwTd4XlmO7usRz7SrdQXE9RgJUk7XcKdoEmMCXBslMKfbIeWSfD7XsvFrW54zDMifjOTKPMQpYZtnOtOjC+Di/8zrcFb7KI84SKHFh7vaaju8eZo+oumo1zO7f/vPwXPio34zg3DovAdVjPp1fUrUglevmzbwZMbbtA1O2ntpTMRN/HBnqjP3rVa7Rg73BvedEfpRGTk3w3F3Pd/FCO7iPtmt/vKswbj/o7uzwlWnY07n1xc0cPjt8PvsMRyl03temwon6m+unefd83AUrp9RGFrW/cus8/DzesHF0v6GzZvHIapP7/+ZzZ/iIG60fwXOzLO+2xeLcHH7uB370PDahAXbVWXRfKvpsIZjYy4Hk3T2C4jIl4oaXk8byHlh8bm0KAv1jXnm6sZKn7gAJvSW2qVkxU2l+FDflcPcr/v1Aeo2BtX+wOm3G1a3jyrIGqA2choNq2N3cv3ZoziB2I3YnKpcSmH3/PkcIAldDsyHxFhHKVkC1z+J2MMCax4by4MRMQ7TSCp4pVPr9nq1qjNo9zoWqlXswcDqlBuoMpA/S6r3XSTu2X3SngtIjtW7dqTeYyA0pqAkXvGcS6JzIVuywutUBFZpjUsMUnkJJEqHXbtSr5qchnEACrAZRn4aQClexlmDTL7/tw1MeGbtTUbZ+fuwvNNveSekj0+VA1e1dEBOE85cQ3ZeyMcFNw4LzsO3U5+qYybbKhJK9kiOP72xRdGkoIqsKIdceJ4ajqKapwUVifw1JQXfi0taarxUgVY+jhUurUrpep1mA3CUwiUyvGmZyDEnQFIpU7tp9AzMLEKYX7ohCtQnmQv7Mb5ULNlEYAGhpIuWLb/wPJgAV88DT9J9+9W3x1FK2TcBW3HO1g3kK0Ih/vShQVyi/KR5JP82UeK/jetMrIM8sk75JhCULdRK3Qe7D0hBIhmWSgGLksPg5wKcS35sLJpcYBGSTbNUwMdfNKVMTR0TEqVMeD09MxyqZYZT7GJw35zehckU+fWK3fIPr9in2+FE6laI9cKX/rezQTO6EJC7OM2wNPWtfC3K5GxxoM6vAM8LdKXymUAfV9J6Z35vOejp6Xlo/QY=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID2</con:name><con:value>E8F0C9F5EF44A91CE0401F0A07991B2B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL2</con:name><con:value>urn:dece:accountid:org:dece:E8F0C9F5EF44A91CE0401F0A07991B2B</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E8F0C9F5EF7EA91CE0401F0A07991B2B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E8F0C9F5EF7EA91CE0401F0A07991B2B</con:value></con:property><con:property><con:name>UserName</con:name><con:value>AcountDelete_firstuser20140819_1408463292223</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CE606637A4E05307991F0A2173:2A6C023D"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>760e7ad9-ea07-4848-b172-46915ec752c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e7986cf8-dc25-4c32-9617-6256d919eb92</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5be2fca7-4226-4ec4-b147-7da4a9d73f10</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3e5ce75-2fd6-47a1-851a-96e7c11a22fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13012a96-d7b9-4f65-aa93-c029c21ce9cf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7d516612-dbeb-4f53-983b-44d22ad5e762</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00012_AccountDelete_PERM_API_Invocation_from_a_DSP_CS_P0" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="70ebfb7c-cf6c-4d5a-9b94-fe9e4a2fa0e0"><con:description> This case describes the scenario where a consumer goes to an online Retailer to delete an Account which is active. In order to delete an account it requires Node ID,AccountID and UserID.

This deletes an account.  The account is flagged that it is deleted without removing the data .  This is a reversible process.  Status is changed to &amp;quot;deleted&amp;quot;.  
This is performed on behalf of an authenticated Administrative User for the Account

Account deletion may be initiated only by a User on that Account with Full Access privileges. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="894f7987-20fd-4824-87d9-cbfecde2f38d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdDSPCS"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="81a74537-949c-4184-a03f-4e8e07f18145"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Get" id="763b357d-1b9e-4d0b-a5ab-092a4f37399b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set NodeID to DSP_CS" id="13b3fe57-a928-4d35-8615-c188e87a4c4e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDSPCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call_MUC_Policy_Create" id="1ed32111-1e68-410f-a4c0-1aa1a82f647f" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateMUC_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call Acccount Delete" id="8e33d528-c894-4314-bb1f-6c91de72b7e0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","API_NOT_AUTH");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>90179</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DSP_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU+JKEH7fX5GKj1bIBQiQEqqA4BoV9XDR9bxYw6QTxk0mmJlA9NfvTDAIiB72VFFFTaen++vLfN1nDMWR5XQZg5SThCqe21afrNmsZc3qSPOrdkOrmS2ktSzD1nCjZluzZtWo4kBVPMYy8CjjiPK2ahlmTTOamtmamHWn1nRMu2JXm/+qyj2kTJgWKhVDVfI4oswp3LbVLKVOghhhDkUxMIdjZ9wdXjtC00ElJrVztkZZOEw7c84Xjq7jig8YoghXcBLrZ/qOzpnPnDEJKeJZCu8+fdZW3++uVqvKqlpJ0lC3DMPQjZYudHxGwhO186O8DL5Hg2R97iOaUIJRRN6QBDUEPk98pRuFSUr4PP7CtKmbhjStQY41bNboiap/OCjQHWlpB2TKkMbmyCyNjSCAFCgGZTry2urJcRVc352kiLIgSWO2d/47SECXECUL8DVWRlaiO97igXR1zgA7HsVRxsgSbmSbLBAGptylEJD8mjDRfD5TivIrORM/UnYZ4L8py5m+jVVA1w9kxyUhMP5/arZdr7WVexRl0Amuc/0+WN1O/Z/BZd4bXJJwmdGXam3htQsI28prUJtyv5/3m3XTW++Xxglpth4eB7+ap6fj9DnIMz386Z5er6a/n8M8huAlZJHR9R9Gg9dwYhlht3FRq7UGQf1qOL27GiDj3k3HcXhR80Y/prFbnbw9PtxciCevd+3b4aM/a/jzq1l+mcBFc/Rwurp/abKa3Z/S4c9eCKtrk8SLO+9mZCNodINu+FZn9fMewj+ywek/r6PZ9HTiwXI0m+iPw/ZHTNsx7ApLShhns2fAvDzK9vBc5VzUC/Hv6UVKiK8FhaqzkBzFOFCuduQtSS1OJgiI+I4o5vpsGOeDar03cHst1+41uwOjXjXqrZZ5bnR7rnlectAaxR7EfkIDIn1Jll33z/cAcewwoD6k2jLJ8ByY+o1FF3GkeHQkHkdCGUwSweJ2VG3QxOINi5lmaJu0lRn5CmUtVblJ+C29TbsBh3SXups71D0CTBYEJL/LBmeiwxkXuXhBy4xHZmWJKhQyMQFSScKOVWvWdSZqHYFEqseJn0VQWcwXRWZ0tv63NIRZIR0NJsXD+zKu/W9lCoSOT6QCk7H0QJQRDswgowzky4Atczvg0nw384l8XyKfPCV4jWT300ebyP7Y9Ig7vnvqj5/MEvdG/bjrIiGfb+rfgNL387Fx5C/JlttymIr5INijU1bzBVVeKtlymRX1a0hmTIV5XRCkqY8BZ4LeXifJb6D6xoR+1HTZoN7zvJHv4sv4nI454hCLblOK4xGrxRiYXC088UzyY/eWHZcibxxyfkjWj8QGIhF/u6RgB0s9Ib4Tf6sk9T/KdcDWlh8Rp9gnOKGhPMk58vpFU+BEmCWC+JJ02/ghA4ec7wo3Sd5g4aKbZhmHr78oktHaKsI4ySj3XLUQbLNsgZO/LsD5UPpkpmDy99Gcsy9H86/h9VjwXYzUjS75b2WNFO2CQZUbQIGlreZi0xTOabjF6u8ADxB73e5blt1rDLaJve/2G5sE7kTS+ST+LNnK6f576PwB</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FE35B56C236B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B56C226B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B56C226B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35BEDB9D6B8AE05305991F0ABD1F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35BEDB9D6B8AE05305991F0ABD1F</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463295677</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35BEDB9E6B8AE05305991F0ABD1F</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:ACCESCS</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CCBB3837A6E05307991F0A9C25:D8CE58B6"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>760e7ad9-ea07-4848-b172-46915ec752c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e7986cf8-dc25-4c32-9617-6256d919eb92</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5be2fca7-4226-4ec4-b147-7da4a9d73f10</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3e5ce75-2fd6-47a1-851a-96e7c11a22fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13012a96-d7b9-4f65-aa93-c029c21ce9cf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00013_AccountDelete_PERM_API_Invocation_from_a_Device_P0" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="92a37a92-eab7-413c-a500-88d0cdd923dd"><con:description> This case describes the scenario where a consumer goes to an online Retailer to delete an Account which is active. In order to delete an account it requires Node ID,AccountID and UserID.

This deletes an account.  The account is flagged that it is deleted without removing the data .  This is a reversible process.  Status is changed to &amp;quot;deleted&amp;quot;.  
This is performed on behalf of an authenticated Administrative User for the Account

Account deletion may be initiated only by a User on that Account with Full Access privileges. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="7c571f80-e169-4e02-b1e2-04ab8199bc40"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="983d510e-16e2-4412-9321-87d374bca7cb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set NodeID to Device" id="75cfe803-fbb7-4d04-a31e-95fffe7e0eb5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDEV"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS API with Device" id="8bdaa831-452d-493c-a66d-937e632ed39e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API_Device")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER2",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID2",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL2",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID2",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL2",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Get" id="6aeb25ba-a31f-4722-b23c-f548b5657eba"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API_Device")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Acccount Delete" id="347e62e7-caf0-40cb-a465-436d626c2e4d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API_Device")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","MTHD_NOT_ALLWD");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>ACCOUNT_OID</con:name><con:value>08482E0679ED69ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_46a62ebb-c6ed-45e7-954c-247a800e81e2</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_46a62ebb-c6ed-45e7-954c-247a800e81e2</con:value></con:property><con:property><con:name>audience</con:name><con:value/></con:property><con:property><con:name>ETag</con:name><con:value>"08482E15023F68B7E05305991F0A48F8:822407B4"</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DEV</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>08482E0CDC4868B0E05305991F0A6CFB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID2</con:name><con:value>08482E0CDC4868B0E05305991F0A6CFB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:08482E0CDC4868B0E05305991F0A6CFB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL2</con:name><con:value>urn:dece:accountid:org:dece:08482E0CDC4868B0E05305991F0A6CFB</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>08482E0CDC4968B0E05305991F0A6CFB</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>08482E0679F869ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>08482E0CDC4968B0E05305991F0A6CFB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:08482E0CDC4968B0E05305991F0A6CFB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:08482E0679F869ADE05305991F0A0FF6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:08482E0CDC4968B0E05305991F0A6CFB</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>90179</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuo6DP0VJn3shDhpuGUKM5RLT3qhBQrd7csZ4yjgkjg0diDt1x87QDZQ2sPeT4yEvLRsSUu55DgMLKfJOcSCRqyQhgHjTuata0nMnAhzyh2GQ+COIM6weX/nWEXk4O0RreC269q/dhmXLZhMdFIGT7dLUNFrJZvoll3BVYSgaoIlQzlPwGVcYCbqmoVMWzdN3UJPqObYJccsF21UfdUKY4i5xJYhRaRtSKW8rs2EWDiGsVqtiquLYhRPDQsh0/h1fzckMwix1rhc3yhLFDc28aToAYEgIEUShcalsRdz6XFnSKcMiySGTS7vu1zIQDVDxnicTs+0/Cx4LvOjzGxhFjFKcEA/sXqfexCzyCs0g2kUUzELv72EiRSwDinRiWmzM83Yp3Yi0B7DmGOdz7C5wRqADzEwAoXRwK1rZ6dVLTv6FGPG/SgO+b75Z3yALSGIFjIX315rQ+10wCMv1bgE4riMBAmnS+ipZl1gAnxTTSCnQxUeY/Bpeke5bNCUK3bGLr0Dc/0abToFLv6mQDvFWYOMcZBA4yUNxu1ReXpntOaz95T2g5vrYd8dzl9X9YzAbnDmyEu7Ng+aMm+i9YnRU+f+2Xu77n2sSjehmFeMBJ+7ZNoZmLdXnRt4Tn/dvkM4Eh+8+Rw1+Zs3+JysZjdX9xfC74zbg3O7PBnEL56BJt58+PAcvQz8f9zaq9F96V0ntUr43scUxvSBuz0Bo/K8Xx1W/dW4F84C0u/2bT/+PL+G7qTsB6bn2zTyEvvxFlpPzamXDtLFrLI0mqtRwOv5dXb47/u2Mz9MJm9AxNZUbeC2C11ZJSx+FjPloZ7uZ6HOQokPF8CE1lCnlHY4iZQ76jmyhmsbVe2q1UGtdsuulatXqINKF6hUq5ld1Cy3uldbkVmzOKDYiphPVS4lueu2+ZkgCZ0J4Bhi7QekNha40IvEA3uIm76AeE9hTWtXYVVbfwt0+N82p4zxqArgKs0VyPeCIyqOtip+yMU6rvbGFr/pLSnJy5kvJalVsrszLedymt5x0Ssmy2WixNypqCmO5SzI0TJLBrKMIZBEzt/HUzQHZuQoxklit735YfLcv08xETM2FFhAKLulkJknbLchcLXdXOZBeurq3EspCyEgFcd8rUBuZsX4x+VNHKLipPtR/qyi2MsveAxrJ4+8p1xugrKpspTQffweEjUd+YSQSMJSOaJRvAt+DOBY8n1n/sg5FyFiOkkEfP9PQc1eXcOERAkTblvLHLt6kPEUHwtwfgd9gckkJ/8Gof//EaLTrAUIyC8XTjN8tUocLgHZdEdTNkm/kZXqT7Kyz67xxf3Vs/NOhz3e+A8=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZrc7I6EP4rDv34DnIRqTLVGVtry/tqL2ovp1/OxLBAWghKAmp//UlQqdjL8ZxPTJbN7rO7T57kjKE4Mp0eY5ByktDaKo4ocwprR8lS6iSIEeZQFANzOHYmvdHQMeu6g3ZblJrb7yh/N4yZ7TcaSLVmyFOtptdSZ3Lpn/q24WN/preRcGUsA5cyjijvKKZuWKphqKY+1duO1XT0Rt04bb8otUdImYgtXOq6sgW1Yh0l5HzuaNpyuawvG/UkDTRT1w3teTSc4BBipHTPNhUVidLu1h/XPcAQRbiOk1g70yo+Zx5zJiSgiGcpbHN53+XSNb2tCR+PkeBEKfeC51I/KZYXiCaUYBSRdyT7MwIeJl6tFwVJSngYf1uEocvAKqywig2LnihaFdqRgSoIU4ZUFiJjG2sMPqRAMdQexm5HOTluasXWaYoo85M0ZtXlf8MDNIcomYOnsl1ZW2jHB/yiU90zwI5LcZQxksONJOscYWDbaQI+PlTtLgWfrIaECYKumESn7cM7WG660ScBMP5/BrQ3nE2QRxRl0GXpKL55aOev6+F5/81Og5E7SuD+94s96hQA9p0LQznazfKAlCWJNjvCfOTPyXBwpb1ZyMJJ9LroBzk89u/aF6tH1LrW2BAQGj6F7eksmLXeQ/ucXv6yh6bLXll7OB8srvPbJn1iLS933wfvQZyH954e3cXEuhkv7p8fnhZ5Ej5Rc3ixWDf4w9VMY3/dmXx8n5nn9Ffussbk+er+2rYedfLbNBohoHUQcfxnsJwGzdfbFxMFuTFgnbKcPfxV2+7MT7LZK2C+W0oauP3aQEwJ8Z/FTFqIp/qFqzOX4sM4UK505S6pHU4m5I54jpjhZq23rJZ5qdun7UHLbvf6l3qzoTfbbWOg9/TBwN6JzAbFAcSLhPpE5pKSu6HNzwBx7DCgHqRqnmRC6ZjyQ8Q+4qjm0rE4BAllME2EPBvUS+01brxZPuM2zvXWLFzY4sQotZuE39LbtOdzSCuabJgVTR4DJnMCUrglr5kgNuOiFwuUZzwy6jmqU8iEtKdSZR3TajU1RuJ5BBKpFideFkF9Hs6Lzmhs8zVVhFlhHV9Oi9P2bV2H/3YtED4ekQ5M1nIOYozw6XKxnOaukO8Lbu4XvAvfyzwiD5boJ08J3iCp/vqgieRHyRFR0Q5y6XloqETVDgsqE3k5wSXRy+taqLg4993dOBaovqhneZ4VAziV+paK8EJ0jKamm9oEcCaUaT1N3oBqZRTtqGugBH6QvLRXIWY8pBOOOMSCMbViecS9PwEm731XUH117KOiklK0jsOKf2W7iMSbRSL+8VmDHSz9hPlOfJZJ6n1M7ItYe3lEneLa54QGciWvgPU3vMCJCEuEeCXpfvCvAnyVvGosm1xi4YJQs4zD939qUpU6CsI4ySh3+0ph2FfKAidfz8H5cPoUphDj8nVG/v15ppKCAhjEm46RIr68ZB15BGiwp7bbpF8L7uXFT4JbRdf9ZP5s2evTIce7/wA=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuo6DP0VJn3shDhpuGUKM5RLT3qhBQrd7csZ4yjgkjg0diDt1x87QDZQ2sPeT4yEvLRsSUu55DgMLKfJOcSCRqyQhgHjTuata0nMnAhzyh2GQ+COIM6weX/nWEXk4O0RreC269q/dhmXLZhMdFIGT7dLUNFrJZvoll3BVYSgaoIlQzlPwGVcYCbqmoVMWzdN3UJPqObYJccsF21UfdUKY4i5xJYhRaRtSKW8rs2EWDiGsVqtiquLYhRPDQsh0/h1fzckMwix1rhc3yhLFDc28aToAYEgIEUShcalsRdz6XFnSKcMiySGTS7vu1zIQDVDxnicTs+0/Cx4LvOjzGxhFjFKcEA/sXqfexCzyCs0g2kUUzELv72EiRSwDinRiWmzM83Yp3Yi0B7DmGOdz7C5wRqADzEwAoXRwK1rZ6dVLTv6FGPG/SgO+b75Z3yALSGIFjIX315rQ+10wCMv1bgE4riMBAmnS+ipZl1gAnxTTSCnQxUeY/Bpeke5bNCUK3bGLr0Dc/0abToFLv6mQDvFWYOMcZBA4yUNxu1ReXpntOaz95T2g5vrYd8dzl9X9YzAbnDmyEu7Ng+aMm+i9YnRU+f+2Xu77n2sSjehmFeMBJ+7ZNoZmLdXnRt4Tn/dvkM4Eh+8+Rw1+Zs3+JysZjdX9xfC74zbg3O7PBnEL56BJt58+PAcvQz8f9zaq9F96V0ntUr43scUxvSBuz0Bo/K8Xx1W/dW4F84C0u/2bT/+PL+G7qTsB6bn2zTyEvvxFlpPzamXDtLFrLI0mqtRwOv5dXb47/u2Mz9MJm9AxNZUbeC2C11ZJSx+FjPloZ7uZ6HOQokPF8CE1lCnlHY4iZQ76jmyhmsbVe2q1UGtdsuulatXqINKF6hUq5ld1Cy3uldbkVmzOKDYiphPVS4lueu2+ZkgCZ0J4Bhi7QekNha40IvEA3uIm76AeE9hTWtXYVVbfwt0+N82p4zxqArgKs0VyPeCIyqOtip+yMU6rvbGFr/pLSnJy5kvJalVsrszLedymt5x0Ssmy2WixNypqCmO5SzI0TJLBrKMIZBEzt/HUzQHZuQoxklit735YfLcv08xETM2FFhAKLulkJknbLchcLXdXOZBeurq3EspCyEgFcd8rUBuZsX4x+VNHKLipPtR/qyi2MsveAxrJ4+8p1xugrKpspTQffweEjUd+YSQSMJSOaJRvAt+DOBY8n1n/sg5FyFiOkkEfP9PQc1eXcOERAkTblvLHLt6kPEUHwtwfgd9gckkJ/8Gof//EaLTrAUIyC8XTjN8tUocLgHZdEdTNkm/kZXqT7Kyz67xxf3Vs/NOhz3e+A8=</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20141120_1416476733872</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>08482E0679F969ADE05305991F0A0FF6</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>760e7ad9-ea07-4848-b172-46915ec752c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e7986cf8-dc25-4c32-9617-6256d919eb92</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5be2fca7-4226-4ec4-b147-7da4a9d73f10</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3e5ce75-2fd6-47a1-851a-96e7c11a22fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13012a96-d7b9-4f65-aa93-c029c21ce9cf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6aeb25ba-a31f-4722-b23c-f548b5657eba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00014_AccountDelete_PERM_API_Invocation_from_a_Device_CS_P0" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="b7c88536-7bc4-4904-b202-4a89950273da"><con:description> This case describes the scenario where a consumer goes to an online Retailer to delete an Account which is active. In order to delete an account it requires Node ID,AccountID and UserID.

This deletes an account.  The account is flagged that it is deleted without removing the data .  This is a reversible process.  Status is changed to &amp;quot;deleted&amp;quot;.  
This is performed on behalf of an authenticated Administrative User for the Account

Account deletion may be initiated only by a User on that Account with Full Access privileges. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="b0565dd5-0e46-4d37-96be-d0587699ce3f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdDEVCS"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="16cd9a0a-acab-4145-8e48-6447d8c2fa2e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Get" id="907d5a06-8940-4b3d-bc31-74fe49ffcfe7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set NodeID to DEV_CS" id="1ffc8b4d-b44c-4da9-b59c-db6e03fe8715"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDEVCS"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Acccount Delete" id="2ffe6226-b000-4f23-a942-996dfd7afdb9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","API_NOT_AUTH");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>90179</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DEV_CS_1</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj6vgBAIkUUGihK6ylNICy/bwsnIdB9wmDtgOt19/7NBQoLSHPVUl5Ml45puLv5lrDpO47LU4x0yQlGqB39D/OLYTPqN6zUARqhh2OaoaTmjXDYStsOa6tu3WKroWcJ7hgHIBqWjoZdOyDdMxLHdkVT3b8cq1kpRNdG2MGZempUrJ1LV1ElPu5W4besaol0JOuEdhgrknkDds9e48qenBApPevN6hzB2y5kyIuQcAKoUY4ThGJZQm4Boc6VyH3BuSKYUiY/jNZ8gb+tvd1WpVWlVKKZuCsmmawHSB1Ak5mX7Tm1fFZRwGNEp35zakKSUIxmQLFageFrM01FrxNGVEzJJPTFvAMpVpA6+RgSybftPBu4Mc3YWWjkAyDg0+g1ZhbIAjzDBFWPs1CBr6t8squLs7YpDyKGUJPzn/HSRMlzhO5zg0eBFZge5yi2fS1bzGyAsoijNOlvhetckcIsy1B4Yjsr4jXDZfyLW8/Nqay39SdBlGf1OWa3CIVUIHZ7Ljkynm4v/U7LBeOytjGGe4mf7Ymls2g/X+5LUDe6vn8faFzm63uN5r5BAOlXeg9uV+O58267633i6F7drwF+s9ToE9Lt/V7kf1BRuXf1b649D328tO4Dy2WKu7HkSbVW/xfVkHbZ/33eS5/zN5FezHdDjqBp27EUD96lXoBGPmDhwAH286/S6YgFv2+2GBJ1uRmuy5Q4G76pUfX8n9ZgIm0XLjh0+jJxsM3H941ttk40F32MX3Dy/dEF5N4nnt98sidbu/K+vvVi8LUOM9psMYjoUFJQyz5xeMRHFU7RH42q2sFxRf04uSkNCIclVvrjiKC0yF3lS3FLV4mSQgEnqymLuzad52KtUb2/ErTu2m3uqY1YpZdV3r1mx1OpWbgoN2KE4gtlMaEeVLseyuf74GiBKPYxpiZizTDM0w17+w6EMBtYAO5ONIKcejVLK45fLQ2bjObFpdRxvxYr1Gr7U4Sra6dp+KPu2zViQwO6Zu54i6BxiROcGK31WDc9nhXMhcLOAyE7FVWsISxZmcAEyRsFe2nSrgJJnHWCEFSRpmMS7NZ/M8M4DvfssGRDyXDjqj/OF9GtfptyIFUickSoGrWG6wLCM+M4OsIpBPAy5bhwEX5ltZSNT7kvkUjKAdkuNP722i+mPfI35n/Kc9/GMVuPfql12XCfl4E3wBCpzmY+8oXJIDt8UwlfNBskezqOYClhalbLnM8vrVFTMyaR5IgrTAEKNM0ttmlL5iCvYmwEXTZY/6xPNefowvEzM6FFDgRHablh8vWC2GmKvVIpDPZH3p3nLkUuZN4LU4J2vHcgNRiL9cUpCHlJ4UP8ifVcrC93KdsXXgR8Yp9wlB6FSd1BzZfNIUKJVmiSS+lB0aP2fgnPNj4T7JeyxCdtNzJvDnXzTFaA0dIpRmVAS+ngsOWTbHKTZz7L0rfTCTM/nbaF7zT0fzU+9uKPkugfpel/y3skHydkFYVxtAjqWhr+WmKZ3T6QGrvwH8SOzttl+z/Uq95eTEXt8R+4382yfwKJLmB/FHyUFOT99D818=</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FE35CCD64E37A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CCD64D37A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CCD64D37A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B48D386B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B48D386B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463305299</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B48D396B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:ACCESCS</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35B56C486B7EE05305991F0ACDC7:5528B426"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>760e7ad9-ea07-4848-b172-46915ec752c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e7986cf8-dc25-4c32-9617-6256d919eb92</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5be2fca7-4226-4ec4-b147-7da4a9d73f10</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3e5ce75-2fd6-47a1-851a-96e7c11a22fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13012a96-d7b9-4f65-aa93-c029c21ce9cf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1ffc8b4d-b44c-4da9-b59c-db6e03fe8715</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>907d5a06-8940-4b3d-bc31-74fe49ffcfe7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00015_AccountDelete_PERM_API_Invocation_from_a_COO_P0" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="79a785e7-9419-4656-8ac5-bc318a736771"><con:description> This case describes the scenario where a consumer goes to an online Retailer to delete an Account which is active. In order to delete an account it requires Node ID,AccountID and UserID.

This deletes an account.  The account is flagged that it is deleted without removing the data .  This is a reversible process.  Status is changed to &amp;quot;deleted&amp;quot;.  
This is performed on behalf of an authenticated Administrative User for the Account

Account deletion may be initiated only by a User on that Account with Full Access privileges. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="93b02fe0-0ed2-4426-a5e3-2a234e9838b1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdCoo"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="5877b7f1-b280-44e1-8215-ac237911eae6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set NodeID to COO" id="18a5d313-382f-4f3d-ae95-294f1b92c51c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCoo"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call_MUC_Policy_Create" id="d5ebe0f2-d169-4887-a3a3-450ab20c5cbf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("PolicyCreateMUC_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID2"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Get" id="247cde77-23e4-4006-b337-8e29c650fad4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Acccount Delete" id="8c982d47-016a-432b-b71c-ea3703e9e524"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="9cda8462-e5c2-462c-9a8d-501fa715188a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>90179</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>COO</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+o4EH7vr4jSxyrkCiFRQeLapVtIC5S252VlHAfcBhtih8v59WuHhgKFLmclpODxeOabi7/xLQOz2PJrjKGEY0qUTrOi/lMul6BTMouaa5pIc0LoamXbjsQ/z/S80thxbEdVOoylqEMYB4RXVMswHc0oa6Y3NIu+U/Ytr1AsWr9UZYQSJkwLlYKhKutZTJifua2oaUJ8ChhmPgEzxHwO/UGt++ALTR/kmNTq7RZl5jCpTjmf+7oOCyGCKI5hAdKZfqsf6NyGzB/gCQE8TdCnz5BV1M+zq9WqsLILNJnolmEYuuHpQidkeHKtVq/ywyjskIhu1w1AKMEQxPg3kKC6iE9pqNTiCU0wn87OmDZ105CmNbSGGjQdcq3qXw4ydBdaOgCZMKCxKTBzY30UoQQRiJTnfqeiXl9Wwe3ZYQIIi2gyY0frP4OEyBLFdI5CjeWR5egut3giXdVbBP0OgXHK8BL1ZJvMAURMeUxQhNcPmInmC5mSlV9ZM/HDeZch+CdludX3sQro+onsNPEEMf5/arZfr62VEYhTVL2zzAYcbXq/rDhxXjYzB/Xr3V7v4+8GrWQQ9pW3oHbl/lwfN+uutz4PsWEA0vduQIf1SS+O4F8B3QDXhclb8AaBzZOg9fSKXHzv3NfHHW7fdIdGN9JfItL+PQgfCfO6Ufd91F7c36RXpVdi1eN3tz7mRhDPV81nOvAWwWJojmqru05U98xW/+VmwCcvvXjeCsym8eis2pYzfXjaNFut56fRPXseBg8fd8aVtbBZk5pu6c0Ka/dvfLw2Kl8x7cdwKMwpYZCO3xHk+VK2R6eptEW9AP+ZXqQEh1qUqfpzyVGMI8LVqjwlqcVPBQHh0BfF3K4No92yi3Wn7dgt2/UaLaNoG67nmW2jZpa9Ws5BWxRHEBuURFj6kiy77Z+fAcKZzxAJUaItaQqniKk/WGwCDpQO6YvLQQlDQypY3Bx/rBnnDAPu8k0xitmHt3DRUlV6lAckSGoRR8khc5cPmLuPIJ5jJOld9jcTDc64SMUCLFMem4UlKBCUigGQSA72Ladc1BmezWMkgeozGqYxKsyn8ywxOtt+LQ1Alkn7rWF2786GdbyXZ0DohFgqMBlLHYkqohMjyMwDORuwZe4HnJuvpSGW10ukkycYbpEcbn11iWyPXYs0giCHvNO87KTIxfeT+g949ONU7ByFS7znNh+jYjII3qjmhVyAwqKQLpdpVjpXcmIizOuCGk19gGAqiG0zpB+I6DsT+kVzZYf6yPNOfogv5VMy4ICjmWg0JVte8KgYICYfFR1xQdaXvlgOXIq8cbTmp2SNWLw9JOIfnyfQh1JPiB/FZ0WT8KtcJ2zt+RFxipcEx2QiV3KCbM40BaTCLBaUR5N946cMnHJ+KNwleYeFi24apxyd31Ekl1VUACFNCe801Uywz68ZTr6ZI/9L6ZuZjMM/h/KanR3Kr92HgWC6GVB3uvi/lTWctQtEqpz9GZaKuhZvTOGcTPb4/BPgCUq3W0bTLtXdckbpxS2l12vl0i6BB5FUv4m/S/Zyenwfqv8C</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FE35B3E0D46B78E05305991F0ABA86</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B3E0D36B78E05305991F0ABA86</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B3E0D36B78E05305991F0ABA86</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B4F43E379CE05307991F0A189A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B4F43E379CE05307991F0A189A</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463308660</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B4F43F379CE05307991F0A189A</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:ACCESCS</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35BEDBCD6B8AE05305991F0ABD1F:71B04F3C"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>760e7ad9-ea07-4848-b172-46915ec752c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e7986cf8-dc25-4c32-9617-6256d919eb92</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5be2fca7-4226-4ec4-b147-7da4a9d73f10</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3e5ce75-2fd6-47a1-851a-96e7c11a22fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13012a96-d7b9-4f65-aa93-c029c21ce9cf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>247cde77-23e4-4006-b337-8e29c650fad4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00016_AccountDelete_PERM_API_Invocation_from_a_COO_CS_P0" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="f2e8575f-03ae-42f4-9584-d42cd6210903"><con:description> This case describes the scenario where a consumer goes to an online Retailer to delete an Account which is active. In order to delete an account it requires Node ID,AccountID and UserID.

This deletes an account.  The account is flagged that it is deleted without removing the data .  This is a reversible process.  Status is changed to &amp;quot;deleted&amp;quot;.  
This is performed on behalf of an authenticated Administrative User for the Account

Account deletion may be initiated only by a User on that Account with Full Access privileges. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="049299de-e039-4e3b-8e74-f4894f557dbf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCoordCS"));
tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdCoordCS"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="5b119796-b8a7-470b-bb88-35b6db88f7b7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Get" id="7e4c676e-5c57-4816-9f37-a2dcb292eb65"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Acccount Delete" id="ce034d7b-99ae-4afb-bc27-a36d92a30099"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="61f82ab5-c553-4cdd-8ff3-1837efa88067"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>90179</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>coord:cs</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH1chFwiXqCBBgSW79ErZbvflyHUm4JLYIXaA8uuPHZoUKO3pHgkJeTKe+Wbm82efcRRHjtflHFJBGNX8flv/p4qDWohRaLj10DFqKAQDObZlVOsWblqBY9dxXdd8zjPwKReIirbuWHbNsJqG3bqzXa/W9KrViltv/dG1X5ByGVq6VCxd28QR5V6etq1nKfUY4oR7FMXAPYG9Sfdi7ElPDxWY9M7ZDmWeMO3MhUg808SVADBEEa5gFptn5oHPWcC9CZlRJLIUXnIGvK2/7F2v15V1tcLSmelYlmVaLVP6BJzMvuqdL8VmCHwast36HFFGCUYR2SIF6gLEnAVaN5qxlIh5/E5o27QtFdqADTawXaNfdfM1QY7uk5EOQKYcGXyO7CLYLYSQAsWgTW/9tv71cxPc7b1LEeUhS2N+tP47SEBXELEEAoMXlRXoPh/xRLs6Z4A9n+Io42QFl4omCcLAtesUQrIZEy7JF3AtH7+24fJHCpYB/puxnJn7WCV080R3+mQGXPyfme3PaxflF4oy6FCEfz718Ghwkd4MezehGyRTiquwCXA7h7DvvANVjvtlfUzWklsvm+Zuyx+ZF9Go8X3kRtciueeRRPbtit1fNvhosQjv0ST0h/b24X4adh/XPWdxGYz71nO9Me22HgLLnlaXA2ce34y+3D/h6Sz+ebO9Wj59W0fry23qz9z0woZhNqo3zav+77tuHbNxs9W7/BOwzfXMREt33NiKbqu5+rb9NU7qd4On31dZ9OX2x/dl2ECNh1pCHkStlt5M26817ddwaCwkYZI9PgEWxVLRw+9rQzkvJD6WF2UhgRHmrl6iNIoLoELvqF1KWrxMChAJPDnM3dqyhoOqe97vtYaNaqM1GFhu1Wq0WvbQ6raGg3qhQTsURxDPGQ2JyqVUdsefjwHi2ONAA0iNFcvwHLj+QcQ+Ekjz6a08HIxyuGNSxe3NerXYVmcLvmaPyxmsFw5bBLXU0bVLJq7oVdoNBaSH0t08kO5bwCQhoPRdEZxLhnMhe7FEq0xEdmWFKhQyeQOkSoQ9p9Z0TU7iJAKF1IxZkEVQSeZJ3hmT7/4dA2GeWzFjaeBhnp++d4s7/lb0QfoERDlwVVAP5CzhxEXkFNW8W7Vj71ddhO9mAVGHTDZVpATvkBx+euWKIklJlKKsAnfpfmw4CG0eV1VmC1YEl5Qv72op9VIIOsVglqiyrGSrVZaPoqFELpXhTal1tjkBnEmler5jC6BmGcL81EVRoj7KXNoP8WViTicCCYglcbR8+YlXwgS4eiX4kvGbzz5BDlLKvgnYiFO280g+JhTiD98b2MPKT5qv5d9ajvB1XCdi7eWRdcqngSB0plbqSnj+iBlEahhL94OfCnAq+aGxbHKJRUg2PWYC3v+iKXFq6whjllHh9/XcsC+YOU7xnID36vQmTC7KL7fshr97y/6+GE+kdMVIL33JfzsbJKcLBl1d5jmWtr6Rj0aZnM72BPoF4FuN7g26VmNQ7zVruUa7O40edntu2cCDSjpvzG8tez09Pg+dfwE=</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FE35BEA0806B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35BEA07E6B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35BEA07E6B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35CDB9F7379EE05307991F0A9FE6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35CDB9F7379EE05307991F0A9FE6</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463312714</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35CDB9F9379EE05307991F0A9FE6</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:ACCESCS</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35B42DA43798E05307991F0A5105:A56383DD"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>760e7ad9-ea07-4848-b172-46915ec752c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e7986cf8-dc25-4c32-9617-6256d919eb92</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5be2fca7-4226-4ec4-b147-7da4a9d73f10</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3e5ce75-2fd6-47a1-851a-96e7c11a22fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13012a96-d7b9-4f65-aa93-c029c21ce9cf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7e4c676e-5c57-4816-9f37-a2dcb292eb65</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00017_AccountDelete_PERM_API_Invocation_from_a_DECE_P0" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="51989afd-3f03-4e2b-bf6d-f00013aa432b"><con:description> This case describes the scenario where a consumer goes to an online Retailer to delete an Account which is active. In order to delete an account it requires Node ID,AccountID and UserID.

This deletes an account.  The account is flagged that it is deleted without removing the data .  This is a reversible process.  Status is changed to &amp;quot;deleted&amp;quot;.  
This is performed on behalf of an authenticated Administrative User for the Account

Account deletion may be initiated only by a User on that Account with Full Access privileges. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="cba3919a-985e-4bcc-a04a-82bec6e9ea0d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdDECE"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="c832b77f-8153-452a-aced-bdd5eda08371"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set NodeID to DECE" id="d7265ee1-3464-41c1-a87e-93a2a1dcd85d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDECE"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Get" id="8777c171-bb0f-4c7d-8196-aaa96b3700fc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Acccount Delete" id="2c6db465-9060-491e-883d-b874e5a4e6a2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","API_NOT_AUTH");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="bd821645-5ff5-4676-b610-0e8739ad9466"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","active");
		myTC.setPropertyValue("ACCOUNT_STATUS","active");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>90179</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DECE</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSx1VwLqS5qCBBAz1sL3QLvWxfjoxjwDSxIXa49NevHRoKlPawR0JCnoxnvrn4mznnME3ssME5zgRhVOtENf1fN3BdD9pVw4m9oVGNz5AxOBv6hh/Hpj9AZvXMsXWtw3mOO5QLSEVNt02rapi+YQV9yw2rfuicVTzLetG1R5xxaVqqVExdW6YJ5WHhtqbnGQ0Z5ISHFKaYhwKFvcbNdSg1Q1hi0uvna5SFw6w+FmIaAoAqMUY4SVAFsRScgx2d85iHPTKiUOQZfvcZ85r+fnexWFQWToVlI2CbpgnMAEidmJPRqV4/KS/juEOHbH2+gJRRgmBC3qACdYPFmMVaIxmxjIhx+oVpC1imMm3gJTKQVaWnOvhwUKA70tIOyIxDg4+hVRq7x0OcYYqw9nDfqemnx1VwfbefQcqHLEv53vnvIGE6xwmb4tjgZWQluuMtHkhX/RyjsENRknMyx7eqTaYQYa7dZXhIlteEy+aLuVaUX1ty+SNll2H0N2U5B9tYJXRwIDsRGWEu/k/Ntuu1tvIIkxzXb26v+9HqB+Pi9SL9OUIgsWa3icfoFNUKCNvKa1Cbcr+f95t101vvl2673YsZ/o2jq4mHnEkbAOthEFzmE79K06DHf7vd9pt96dDo5bkLRo/Am/SbT+RnfwwmQbT6NVpctoIr72z1ehWdPL726PPttZgNndGbSZ7uGn3Pf37uvM39yzS7NPndC7pegadodmcO5u7Lyv0Rs18s67Psn2efwEC+WQe66GHigBMPNM0UBdM32qTD7pvnVFHtI6btGHaFJSX08sEEI1EeVXt0Iq0t6wXF9/SiJCQ2hoVqOFUcxQWmQq+rW4pawlwSEIlDWcz12TTbLcdttqJmVD1r+o2W6TqmGwRW22w0I6tdctAaxR7EC0aHRPlSLLvun+8BojTkmMY4M+YsR2PM9W8sRlBArUPv5eNglOM+kyxuLe1kMavaqW8HA8uZ+VVzxhb+dAV17ZaJLu1mjaHA2S53+zvcfY8RmRKsCF51OJctzoVMxgzOc5FYlTmsUJzLEZApFg7tqu8CTtJpghVUkLI4T3BlOp4WqQF8/W8bEPFCet/qFy/vy8D2v5U5kDoxUQpcxdLEso74wBCyy0C+DNi2tgMuzTfymKgHJhMqMoLWSHY/ffSJapBNk0Sti1aJeaN63FWZjM83wTeAwH4uNo7iOdlyW05SORwkddTLSs5gZVbJ5/O8qJ2naDGT5oFkRwv0MMolt6367BVTsDEBjhotG9R7njfyXXy5GNOegAKnstO04njEXtHDXO0VHflGlscuLTsuZd4EXopDsotErh8K8bcbCgqR0pPiO/m3YFn8Ua4Dtrb8yDjlMiEIHamTGiKrL5oCMWmWSNZj2bbxQwYOOd8VbpK8wSJkNw1ygb/+oik6q+kQIZZT0Yn0QrBNsQVOsZri8EPpk5mCxt/n8pJ/OZefb657kuxSqG90yX8rG6RoF4R1Nf4LLDV9KddM6ZyOtij9HeABVm/YQavteA2zYHVvzequ2WpuErgTSf2T+LNkK6f776H+Bw==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FE35BA29F037A0E05307991F0A50EB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35BA29EF37A0E05307991F0A50EB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35BA29EF37A0E05307991F0A50EB</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35BEDBD46B8AE05305991F0ABD1F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35BEDBD46B8AE05305991F0ABD1F</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463315868</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35BEDBD56B8AE05305991F0ABD1F</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:ACCESCS</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CCBB4A37A6E05307991F0A9C25:449C2E9B"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>760e7ad9-ea07-4848-b172-46915ec752c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e7986cf8-dc25-4c32-9617-6256d919eb92</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5be2fca7-4226-4ec4-b147-7da4a9d73f10</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3e5ce75-2fd6-47a1-851a-96e7c11a22fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13012a96-d7b9-4f65-aa93-c029c21ce9cf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8777c171-bb0f-4c7d-8196-aaa96b3700fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00018_AccountDelete_PERM_API_Invocation_from_a_DECE_CS_P0" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="f96eeb0b-bfc9-4291-8f67-6a37c21d9b30"><con:description> This case describes the scenario where a consumer goes to an online Retailer to delete an Account which is active. In order to delete an account it requires Node ID,AccountID and UserID.

This deletes an account.  The account is flagged that it is deleted without removing the data .  This is a reversible process.  Status is changed to &amp;quot;deleted&amp;quot;.  
This is performed on behalf of an authenticated Administrative User for the Account

Account deletion may be initiated only by a User on that Account with Full Access privileges. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="227e400b-076e-46a8-910e-01fd0a75e3aa"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdDECECS"));
tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdDECECS"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="524ae1e3-09c0-4aa3-b23a-c9cad1e2c275"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Get" id="1718504b-334c-4a9d-b694-cadc5c35c787"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Acccount Delete" id="2b735c1a-2851-4039-853d-f541fbb5b874"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="c7b4ef7b-0db4-4bfd-a2d6-aa0a00edd2de"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>90179</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH6uQC/eoIFEuKl0Kbenutn05Ms5AvAQnxDZJ+fXHDiQFSnu6ByFFnoxnvpn58tmXDK0Cx+0wBjEnIdWGvZb+T9nBto1nNaOJPMuo1JtVo9F0sDGv1qvOHAHYyNK1IWMChpRxRHlLdyy7YlgNw24+2lW30nArVslyyi+69gtiJkNLl5Lcla4CytwsbUsXMXVDxAhzKVoBczl2p53bkSs9XZRj0tuXO5RZwrjtcx65polLHmAIAlzC4cq8NI98Lj3mTsmCIi5i2Of0WEvf702SpJSUS2G8MB3LskyraUofj5HFd739Ld8M3pDOw926i2hICUYB2SIF6ha4H3paJ1iEMeH+6oPQtmlbKrQBKTawXaHfdfMtQYbui5GOQMYMGcxHdh7sAeYQA8Wg/XwYtvTvX5vgbu9jjCibh/GKnaz/DhLQDQRhBJ7B8spydF+PeKZd7UvA7pDiQDCygbGiSYQwMO0uhjlJR4RJ8nlMy8avpUz+Sc4ywH8zlkvzEKuEbp7pTo8sgPH/M7PDee2i/EKBgPZwcj21xYWFa2I7u6i/TPs0GafrW2guWhmEQ+cdqGLc+/UpWQtu7Telv3tL0173lnf9+exnkz/+Dn7cw/bquvI6WQ7mW5oGtrjZ+pPKYjHyBttq/2Vw82I+1V/8emfc5ZPZqtdbjFCtt2Xfnq8bNTFOBjfhmv3gN8/9abosP6348mXMlxMapUma+g4dh+Pwl7WObq95MAueQdwn3eip6U9rNKmlIb+4vxlF36yHjt0YbJpRvWKNZndzWk5abzUd1nBszCVhKmZ/APN8qegx7GkDOS/EP5cXZSGeMc9c3UhpFONAud5Wu5S0uEIKEPFcOczd2rIG/XK1269Z9V653qn0rWrZqjeb9sDqOHa9nGvQDsUJxG5I50TlUiq748/nAPHKZUA9iI1NKLAPTP8kYg9xpA3pg/w4QsrgMZQq/idxRLD1qS8i2240rYUlGmklgYaujUM+oZO4M+cQH0t340i6HwCTiIDSd0VwJhnOuOzFGm0ED+zSBpUoCHkCxEqEXafSqJqMrKIAFFJzFXoigFLkR1lnTLZ7OgbCLLNmbcUs+/g+rO30Xd4G6eMR5cBUPVcgRwlnzqFyXsyHRTv2YdF5+I7wiPrGZE95TPAOyfGrN6oojhQ82VeVwy68Tw1Hkc3Toopk3obggvDFSS2FXspAOx/LGpXWJbHZiGwQdSVxsQxvSqWzzSlgIXXq9TFcAjWLEOaXjokC9Unmwn6MT3CfTjnisJK00bLlF+4IU2DqjjCUfE+/egE5Sin7xiHl52zdQF4lFOJPbxvYxcpPmu/kIwlj721cZ2Id5JF1yosBJ3ShVupAeP2AGDiUYYlUsDA+DH4uwLnkx8aiyQUWLtk0Exw+fqMpaWrpCONQUD7s6ZnhUC4znPw1AvfN6V2YTJL3Z2zKPjxjn25HUylcK6QXvuS/nQ2S0QWDro7yDEtLT+WVUSaniwN53gN8r9BXVVv+alf1bqbQ1Z1C1zqdQqGPK2m/M7+3HPT09Hto/ws=</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FE35B511146B7CE05305991F0A6AA3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B511116B7CE05305991F0A6AA3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B511116B7CE05305991F0A6AA3</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35CE607D37A4E05307991F0A2173</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35CE607D37A4E05307991F0A2173</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463319224</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35CE608037A4E05307991F0A2173</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:ACCESCS</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35B48D596B7AE05305991F0AEE3B:3A8FB34F"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>760e7ad9-ea07-4848-b172-46915ec752c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e7986cf8-dc25-4c32-9617-6256d919eb92</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5be2fca7-4226-4ec4-b147-7da4a9d73f10</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3e5ce75-2fd6-47a1-851a-96e7c11a22fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>13012a96-d7b9-4f65-aa93-c029c21ce9cf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1718504b-334c-4a9d-b694-cadc5c35c787</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>QC_TestPlanDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestLabDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestSet</con:name><con:value/></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property></con:properties><con:tearDownScript>if(context.expand( '${#Project#runTeardown}' )=='true')
	{
	log.info("Executing TearDown for Suite '" + testSuite.getName() + "'");
	
	for ( testCaseResult in runner.results )
	{
	   currentTestCaseName = testCaseResult.getTestCase().name;  
	   currentTestCase = testCaseResult.getTestCase(); 
	   log.info("Current TestCase : '"+ currentTestCaseName + "'");
	   log.info("Current TestCase Status : '" + testCaseResult.getStatus().toString() + "'");
	   
	   if ( testCaseResult.getStatus().toString() == 'FAILED' )
	   {
	      log.info("Re-executing failed TC");
	      def currentRunnerTC = currentTestCase.run(null, false);
	      log.info("Status on re-execution : '" + currentRunnerTC.status + "'");
	   }
	}
	log.info("Execution of TearDown for Suite '" + testSuite.getName() + "' Completed" );
}</con:tearDownScript><con:reportParameters/></con:testSuite><con:testSuite name="AccountDelete_FUNC_NonCS_P1" id="4e448139-e0bd-4b38-930f-efc2c5135eba"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02001_AccountDelete_FUNC_NonCS_Deleting_an_account_which_is_pending_P1" searchProperties="true" id="2f9f1771-8119-457b-b7f9-328c08c42d39"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="5cf4a43e-332d-4259-a57a-33d8b61f9ff1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="973d1449-e6a3-4e4c-bdb7-8c638143abb2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="d34466e4-d1a7-4532-baf8-21c3caf99f6f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Update Account Status" id="99c61175-ca6e-4fe9-95b0-5f3d02f2072d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","pending");
myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="508ef515-5ca8-4b70-853a-30c4f604f760"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","ACCT_INACTIVE");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" disabled="true" id="2a142a24-94f8-416f-bf27-547eb5c381f7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","active");
		myTC.setPropertyValue("ACCOUNT_STATUS","pending");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35B42DB03798E05307991F0A5105</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35C6F8576B92E05305991F0A81AF:32E01136"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B42DAF3798E05307991F0A5105</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B42DAF3798E05307991F0A5105</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35BEA0976B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35BEA0976B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+o6EP7ur+jUzyUtLQgdYQYE7+WI+IKo53xxQpq28bRJbdJS+PUnKRYB0cu5M45MtpvdZ1/y7J5zGEd1t8c5TgVhVBsNOvrLWctreH67YTjNhiP/zX1jjh1sOE597ljIc1ptT9dGnGd4RLmAVHT0umk5htkyrPaD1XCdluvYtfqZ9UvXHnHKpWmpUjN1rYgjyt3SbUfPUuoyyAl3KYwxdwVyp73rsSs1XVhh0rvna5Slw7QbCpG4AKCahxGOIlRDLAbnYEfn3OPulAQUiizF7z493tHf7y4Wi9rCrrE0AHXTNIHZBlLH4yQ41bsn1WXsjajP1ucLSBklCEZkBRWoayxC5mm9KGApEWH8hWkLWKYybeACGchy6KkOPhyU6I60tAMy5dDgIbQqY/fYxymmCGuz+1FHPz2uguu7Dymk3GdpzPfOfwcJ0xxHLMGewavIKnTHWzyQru45Ru6IoijjJMcT1SYJRJhrtyn2STEmXDafx7Wy/FrB5R+pugyjvynLOdjGKqGDA9kZkABz8X9qtl2vtZVHGGW4C6zGzXN4ZZO8P5zxesTYnEUmBI9B0CkhbCuvQW3K/X7eb9ZNb71felzkdz+aDph5w1sSxP8UA2j3i6u72B8Mn/C4P3sSxUUjl8l8KvLbyWoSzFIb3F8Vhb3w355neLkc/L5rxgO/FZ6MrmbNPPkhroMwy1arbMVadJE0h/z19m4KLnPoeOm03wL+z8WkeQdWxdPjeHVVzEV4t7r5d5UWy5/xxA+S1XWATrzxlWNPxj+y5c3tTcZ+mcLpfMS0HcOusKKEaTZ/xUhUR9Ueo4F2KesFxff0oiTEM/xS1U0UR3GBqdC76paiFjeTBEQ8VxZzfTbNy6Hd6A97Zvus2W85Q7Nhm41227o0e5e9fqPioDWKPYgXjPpE+VIsu+6f7wGi2OWYejg1cpahEHP9G4sDKKA2ovfycTDK8QOTLG69tuZJaLZhyKw0avu2vZj7b/MU6dqEiRt6k/Z8gdNd6m7tUPc9RiQhWPG7anAuO5wLmYs3mGcismo5rFGcyQmQKhJ2606rATiJkwgrpCBmXhbhWhImZWYAX//WDYh4Kb0fPpQP78u49r9VKZA6HlEKXMXSx7KM+MAMsqtAvgy4bm0HXJnvZR5R70vmU6QErZHsfvpoE9Ufmx6REb1cTF+sCvdG/ejrn2+Cb0CB/XxsHHk52XJbDVM5HyR7dKtqvsHaWy3L86ys35lixlSaB5IgLTDFKJP0tnxgvzEFGxPgqOmyQb3neSPfxZeJkE4FFDiW3aaVxyNWiynmarUYyWdSHLu37LiUeRO4EIdkF5HcQBTib5cU5CKlJ8W38mfB0o/AD9na8iPjlPuEIDRQJzVHll80BWLSLJHEx9Jt44cMHHK+K9wkeYNFyG6aZwJ//UVTjNbRIUIso2I00EvBNsuWOMUywe6H0iczJZO/j+aCfzman6/HU8l3MdQ3uuS/lQ1StgvCutoASiwdvZCbpnROgy1Wfwd4gNid+qB3aZ+1WyWxn62JvWGZG2LfjaT7SfxZspXT/ffQ/QM=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463322423</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35BEA0986B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>99c61175-ca6e-4fe9-95b0-5f3d02f2072d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02003_AccountDelete_FUNC_NonCS_Deleting_an_account_when_user_is_not_active_P1_UV-340" searchProperties="true" id="5799a4bf-226d-485f-9d10-ce63c45f4343" disabled="true"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="52b6b244-f93f-4bd7-991c-af5ca74b3fd6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="48ac70a3-2cc7-4e71-abed-20c55734ed20"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="16c32900-4e05-4c22-aed3-162696fef840"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="datasource" name="User_Status" id="01ce9ec6-7447-4466-b7fa-b4bcc5783561"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">forcedeleted&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">suspended&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">pending&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">other&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked:tou&lt;/con:entry></row></con:configuration></con:dataSource><con:property>Status</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="groovy" name="Update User Status" id="9c263e60-96bd-4c9c-9c64-ad6f469cfc89"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def status = context.expand( '${User_Status#Status}' )

myTC.setPropertyValue("Status",status);
myTC.setPropertyValue("USER_OID",tC.getPropertyValue("USER_OID1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="b55d5349-1d33-4804-902b-e57a020eb627"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","USER_INACTIVE");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" disabled="true" id="95b9631d-689b-4e84-bd81-88d6d2e3ce71"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","active");
		myTC.setPropertyValue("ACCOUNT_STATUS","active");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="084d9306-644d-4788-9655-5be5dd024b5c"><con:settings/><con:config><dataSourceStep>User_Status</dataSourceStep><targetStep>Update User Status</targetStep></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CDBA18379EE05307991F0A9FE6</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CCD68037A8E05307991F0ABBBB:434671D"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CDBA17379EE05307991F0A9FE6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CDBA17379EE05307991F0A9FE6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B48D616B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B48D616B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVfZcuq6En3nKyj2I0U8MJpKUiVjGwyYyWZ8OWVkeQBPWJ7g649MAptkJ/vm3CdQq9W9enBr6Rnrnst2AcYoip3AL8vCS+UfRLfqOmzAGtsxG7VGxzBqHU5v1zgE60yDZli9qVfKMsYJkn0c6378UmFppl6juRrT1phGt0l3G+2nVpPZVcorFGFimqg80ZVy7rk+7l7dvlSSyO8GOnZw19c9hLsx7KpAGXeJZle/Yaq8Pr+hvDqMXu04DrsUBZ8MBJHrwicYeNQz9UHn2cBd1bF8PU4i9O7TwC+V97NZlj1l9acgsiiWpmmK5iiiY2DH+lV5Ld0OI0P2zeBt3dP9wHeg7joXvQCloNgOjDJwrSByYtv7xjRDMXRhuoZyWINMw/9VoX47uKL7oaUPICOs17CtMzdjC2SiCPkQlZcL+aXy62cVfDurRbqPzSDy8Kf1f4OE/BS5QYiMGr5FdkP3c4tfpOv1GcGu7EM3wU6KJkWbhDpEuDyLkOnkYweT5jNw+Vr+co5vHYbgfynJM/WIk8CmvsiM4FgIx/9PvR5r9WZlpbsJerUYWvA3KqWIUtVbz9YiC4bT6fnE042XK4RH5TdQ91K/rz836r2v3g9dxpe0NT4N2alKj4YdwEKt2hK3dKjZuu1JSgiC4coMLpch6RLB8Zo5OJ2nHdnYyGPbE4f6aZDK6wm0mwEu0Sa9hb3UwlZ7JYcjESnHYMq218ESdc5ImvbxIZc6/enpGNStU7CTD8P6xFZH64wKpsfmqKOyk3PWaHHDVCpt1GGfb8GwHch1VZrpUm/58jumxxiKuEbofA2y+L9p0pygx/p90SsmhUk+zxi9KrLcqwq9HkA9C2QyDyyZH1/AhLeOJ/vo9LmM5sF8KQEBnJUFyARrK6zm85GYGauVu1vJksQri0Y2AFuhRDYEMV8Ju82Q1te7cMtK9E7leWOzCPb1YWgMjtnAhhNFU7KJJp+Vg5hPNJFeX2VWTtYX5aAwU21ZL60PPKcsxEzIrh4FMbMnu/Ui3C65DF7EuQIafcAsxZ6tDDRvxcD6woYHcayA41XO20pvtVJyUQOzEm9NViQ2rSftQugZ4d5z7QfjA2JcM/qr877vJruLeFB6Yr+nnvqqvK8Lc3EIFtvlfr066mspLcHBBOxvHp2mo2+CzNp1MmG+HY5IGe0UTsBc5Pk5IOmigSL3hyDo80BpACe/9A58K+gZUkYNWVyqcm6/tTk7pw3W+7SrM50Osx2vW7NTSxD96m6U7A+2Ym+kaXWkGumSi7nLFqfVtKU7DMxDc74RB/EoNwdztbSfCfkGDqqGNaTcCydFSnsIosvZdhVrEa9bU3zeO6a55jfThts2XaW+CE3XDM+4qgXzY0S3eFRnqe05HcUlYCk8AP3D8sDPFb5TJNWQs/lW4XUgiXECLgc2HrGr03CQunBbB0E+Wk8Px/fCGEIm8lQ2F0lbiaWOAIyiCAN1KUoHsOQtK+ItUeLnUADzrTzKtiRfywFR/pxH6ZpHS+SBWN+BFjco1Zc0F09jtdEAZ59f+hJnK6d8bbQ8un1C4lidhI1MwRPT362Do+I50TJK1OVoNBnney3pHw9kVpm0Okrru5KYHkPgTEaafRQCQZ+F220cVn0YwVgOPUXOL9MdPnScvUcPq02Gn9ECbLNLb58t+7q4G0WWyowGC39Wb3MlnJjngVc9dLJ1VVNbYdvo+aZwPlO7aEUHIJC4RfNk5Cx7tJfZuJWZQ3Dc6+wkdzn+zImjnQazxXy0Vr1qs9RMx2OPvmhUYxJOM7WfNcT5vFo3eG2g4TBytknHyqOpb7BbPW6lO3rVckL3yLHJUWuE9ZXlkWLNUiNsK7PSvLGBO89qh3BILagUiG1zLPfP+4t+Cb0pfBugn6fDXfg2P6jHyfJh9NxIh0q6FcH4tiwuIFkoS+RW0OO/E5hC4hg186raDQsWhGPkx5XX4lRBXroJoTiO0SVXxttabHGtltTkOV4CHZblRJrc1RIN6CbH0Q2ufmM5byg+QewFvukUvgoe93ZL/R0g9LoY+QaKammQQBvhyl8sFvkqy/6CXL+Bj5EWEJ4oNTsczdebTI+hm7TYbgkdQRDYZrsnSR2p06yUJ0E89acRMGMUfeSI7Q8ccYGgEzqoIJLFbYrJdYpjkpKTniaxyzyl+pOPEkI1o4LtddlGp0lhxwtdVACmvMBIXPQU2uE1QRR++2VrOsRX6ULU/pHV3vWm/zbEz3u3bBAdwykUcBEPj0hF0ReEt34L5tugWfox6Jt5kBhOcaGT1MaRA9+QfNz63TFFq9zbpYiqp/7D3HDf1X98/M+T1F9AUZ/zcXdkpM6D2xtzJ2SU0JXXW0VP+tPpKUnT5FrDdkHFImKeYii6TakIJoRPnbXgiHzqboL6EZW9o/7k+S7/iC+JbV+NyTjwSMeVr8sfvGNUhIt3jEy+mPynj6QPLkneYpTHX8l6LnnuFIj/+iKCXVjoEfGM/GRBZPwu1xe2HvyQOIv55/hWsSqI6/mbpoABMeuQGRhEj8a/MvCV84/Ce5LvWGLSTfskRt/vlIvh9lLRIQwSP5aFylXwOHCvOONziLq/lf4wc6WO72+BHH/7FtgoY5WMPk+v3HWd/61cc67tAhE5hZ0rlpdKTp61xLlvPQz4d4Bfz/gO/bcZ/zGS1z/Ef0oecvr5e3j9Fw==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtc9o4EP7eX+FxP3aMbGxe7AnMgCEXX0PTAM01+dKR5QXU2JJjyUD49SebmAAhOXozzDBar3affdGzeyFwEte9nhCQScqZFgw6+q+60wRrZjaMOjim4bTCptF2oW7YVhsTx3VnoYN1LRAih4AJiZns6HXTcgyzbVju1Gp4TttzmrWm3X7QtTvIhDKtVGqmrq2TmAmvdNvR84x5HAsqPIYTEJ4k3qQ3uvaUpocrTHr3YouydJh1F1KmHkKkFgGBOCY1whN0gQ50LiLhTeicYZln8OIzEh395e5qtaqt7BrP5qhumiYyXaR0IkHnn/Xup+oyRAGb8e3Zx4wzSnBMN7gANQK54JHWi+c8o3KRvGPaQpZZmDZgTQxiOeyzjl4dlOjOtHQAMhPYEAtsVcbGMIMMGAHtxzjo6J/Pq+D27jTDTMx4loij859BAraEmKcQGaKKrEJ3vsUT6epeAPECRuJc0CV8K9okxQSE9j2DGV1fU6GaLxJaWX5tLdSPVl0G5E/KcoH2sSro6ER2BnQOQv6fmu3Xa2vlDsc5dKf2uDkPH60B8q8gxMHP54EPzTQZ4ftOCWFfeQtqV+6X83Gz7nrr5dIg6Ofp0+avfgMarr1Zf5+Lhn3/5S4k+OG6HfXvvoxJ++Z5tBzfPuabxXzk+imZfLvit3+hsOVu0FW0Qo9fkN9Mrz6JIQ9UeNeXC//Bpn/b0RNP+9M7J/pqZf7w8p/Rw70fNuNGOG6weX/Suw+aIxNd3wgMLXMT1pd9F41v518XP+Psk3P74FP3R9jifH3n9OTsfth5jWk/hkNhRQmTPPwNRFbHoj2CgXap6oXlx/RSSGhkzEpVLy04SkhgUu8Wtwpq8XJFQDTyVDG3Z9O8HNqNvtMeNK1mv9Ubmg3bbLiudWn2hkO7X3HQFsURRJ+zGS18FSy77Z+PAZLEE8AiyIwlz8kChP6BxQGWWAvYWD0OzgRMuWLx1TIhz4/st7XKQ8tMZjknTzJ3NqGufePyht1kvZmE7JC62wfUPQZCUwoFvxcNLlSHC6ly8YSXuYyt2hLXGORqAmQFCXt1p91AgiZpDAVSlPAoj6GWLtIyM0hs/+sGJqKUjofT8uG9G9fxtyoFSieihYIoYumDKiOcmEF2Fci7Adet/YAr8708osX7UvmUGSVbJIefXtuk6I9dj6iIfvmTX1aFe6d+9vW3N9EHoNBxPnaOoiXdc1sNUzUfFHt0q2o+4dpTLV8u87J+rYIZM2UeKYK00ARIrujtecofgaGdCXTWdNmhPvK8kx/iy+WCTSSWkKhu08rjGavFBESxWgTqmazP3VsOXKq8SVjLUzI/VhtIgfjDJYV4pNBT4u/qb8Wz6LVcJ2zt+VFxqn1CUjYvTsUceX6nKQhXZqkiPp7tGz9l4JTzQ+EuyTssUnVTmEt4/4tWMFpHx4TwnMlgoJeCfZYtccrnFLxXpTdmSiZ/Gc1r8e5o/jm6nii+S7C+06X/rWzQsl0I6MUGUGLp6Gu1aSrnbL7H6i8A3xK7P+j3rJbdcoclsbe2xO5eDpu7BB5E0n0jfivZy+nxe+j+Cw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463325863</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B48D626B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>99c61175-ca6e-4fe9-95b0-5f3d02f2072d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9c263e60-96bd-4c9c-9c64-ad6f469cfc89</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02004_AccountDelete_FUNC_NonCS_Deleting_an_account_when_user_is_Basic_P1" searchProperties="true" id="6196eb18-d20e-4da4-bc8a-59b6a194812d"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="0b3d756d-4cb2-4091-9fda-75cac2d6a50e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="3f3079ea-2e6e-4352-a9c4-ec99db82a112"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="53bdaeb7-b1a6-433f-8387-3ca02c272e31"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));


tC.setPropertyValue("LegalGuardian","");

//required for Child user Create

//tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID_FAU1"));
//tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call Adult BAU Create" id="b85ad346-1825-4fca-a43f-8f523d114f2d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )

log.info country;

def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

myTC.setPropertyValue("Country",country);
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="56de219c-659e-462b-a372-e38129e282e8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="0cd748bf-dbb7-44e0-b827-0fcc107641f3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","USER_NOT_PERMIT");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" disabled="true" id="8251b53d-e0d8-4513-9dd2-1c537ebd8103"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","active");
		myTC.setPropertyValue("ACCOUNT_STATUS","active");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35B48D7B6B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35B48D926B7AE05305991F0AEE3B:44DDE954"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B48D7A6B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B48D7A6B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35BEA0B86B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FE35CE609D37A4E05307991F0A2173</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35BEA0B86B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FE35CE609D37A4E05307991F0A2173</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj0chFy4NUUFKgLZ06dIFuqftS2WcCbibOCF2IOXXrx0aCpT2sEdCQp6MZ765+Ju5YCgKLcdlDFJOYqr0uy31GdnQmIKFNQRNX6tVsanZgWlodt3ChlG36wiqqtJnLIM+ZRxR3lItw6xphq2ZzYlZd2q2U7cqVbv2pCq/IGXCtFCpGKqSRyFlTuG2pWYpdWLECHMoioA5HDtj93bgCE0HlZjU9sUGZeEwbc85TxxdxxUfMIQhruA40i/0PZ0LnzljMqOIZym8+fRZS327u1qtKqtqJU5numUYhm40daHjMzL7prbPysvg92kQb84dRGNKMArJGklQt8Dnsa+44SxOCZ9Hn5g2ddOQpjXIsYbNGv2m6u8OCnQnWtoDmTKksTkyS2MjCCAFikG5H/Vb6rfTKri5O0kRZUGcRuzg/HeQgC4hjBPwNVZGVqI73eKRdLUvADt9isOMkSX8kG2SIAxMuUshIPmAMNF8PlOK8is5Ez9SdhngvynLhb6LVUDXj2SnS2bA+P+p2W69NlZ+oTCD9t13WiUcjXUrv+rcd5686CYkV1dh56bXKiDsKm9Abcv9dj5s1m1vvV26tq9vbmwEnf6omfYnj0MvXv5Mr9DAN+7GN7c+Xj+89OjCnBo/G/8MXfmGOgbPa8kUBdV18ttsDOjotuOtTJOcuU3S7f1arZ9+3N5f93Kr9j2vLoaDYeN8ZPujyctdpmeouYDAWA5HQfPy3lp/B+vKC+nrupGO+OBy4V0abhMCLzpbPNod/ZwN1ova4+yB/zvCbus9pt0Y9oUlJYyz6QtgXh5le/S7yqWoF+Jf04uUEF8LClUnkRzFOFCutuUtSS1OJgiI+I4o5uZsGJe9at3ruYZnNzy71jPqVaPebJoinEvXq5cctEFxALET04BIX5JlN/3zNUAcOQyoD6m2jDM8B6Z+YbGLOFL6dCQeR0wZTGLB4q/Wywzo1OZJ3sgCC1XJlCWzxVxVfsR8SIepG3BI95nb3mPuEWCSEJD0LvubiQZnXKRigZYZD83KElUoZGIApJKDHatm13VGoiQECVSPYj8LoZLMkyIxOtv8WxrCrJCOepPi3X0a1uG3MgNCxydSgclYPBBVhCMjqFYG8mnAlrkbcGnezXwin5dIJ08J3iDZ//TeJbI9ti0iInrujJ/NEvdW/eTrH2/qX4DSD/OxdeQvyY7bcpaK8SDIo11Wc4Eqi0q2XGZF/c4lMabCvC740dTHgDPBbq+T+DdQfWtCP2m4bFEfeN7K9/FlfE7HHHGIRLcpxfGEzWIMTG4WffFK8lPXlj2XIm8ccn5M1gnFAiIRf7mjYAdLPSG+E3+rOPXfy3XE1o4fEadYJzihM3mSY+T1k6bAsTBLBO/F6a7xYwaOOd8XbpO8xcJFN00zDp9/USShtVSEcZxR3u+qhWCXZAuc/DUB513pg5mCyN8mc84+ncwPt4OxoLsIqVtd8t/KGinaBYMqF4ACS0vNxaIpnNPZDqm/ATzC6zW7e+42vHN3l9d7vaq3TeBeJO0P4o+SnZwevof2Hw==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj0chFy4NUUFKgLZ06dIFuqftS2WcCbibOCF2IOXXrx0aCpT2sEdCQp6MZ765+Ju5YCgKLcdlDFJOYqr0uy31GdnQmIKFNQRNX6tVsanZgWlodt3ChlG36wiqqtJnLIM+ZRxR3lItw6xphq2ZzYlZd2q2U7cqVbv2pCq/IGXCtFCpGKqSRyFlTuG2pWYpdWLECHMoioA5HDtj93bgCE0HlZjU9sUGZeEwbc85TxxdxxUfMIQhruA40i/0PZ0LnzljMqOIZym8+fRZS327u1qtKqtqJU5numUYhm40daHjMzL7prbPysvg92kQb84dRGNKMArJGklQt8Dnsa+44SxOCZ9Hn5g2ddOQpjXIsYbNGv2m6u8OCnQnWtoDmTKksTkyS2MjCCAFikG5H/Vb6rfTKri5O0kRZUGcRuzg/HeQgC4hjBPwNVZGVqI73eKRdLUvADt9isOMkSX8kG2SIAxMuUshIPmAMNF8PlOK8is5Ez9SdhngvynLhb6LVUDXj2SnS2bA+P+p2W69NlZ+oTCD9t13WiUcjXUrv+rcd5686CYkV1dh56bXKiDsKm9Abcv9dj5s1m1vvV26tq9vbmwEnf6omfYnj0MvXv5Mr9DAN+7GN7c+Xj+89OjCnBo/G/8MXfmGOgbPa8kUBdV18ttsDOjotuOtTJOcuU3S7f1arZ9+3N5f93Kr9j2vLoaDYeN8ZPujyctdpmeouYDAWA5HQfPy3lp/B+vKC+nrupGO+OBy4V0abhMCLzpbPNod/ZwN1ova4+yB/zvCbus9pt0Y9oUlJYyz6QtgXh5le/S7yqWoF+Jf04uUEF8LClUnkRzFOFCutuUtSS1OJgiI+I4o5uZsGJe9at3ruYZnNzy71jPqVaPebJoinEvXq5cctEFxALET04BIX5JlN/3zNUAcOQyoD6m2jDM8B6Z+YbGLOFL6dCQeR0wZTGLB4q/Wywzo1OZJ3sgCC1XJlCWzxVxVfsR8SIepG3BI95nb3mPuEWCSEJD0LvubiQZnXKRigZYZD83KElUoZGIApJKDHatm13VGoiQECVSPYj8LoZLMkyIxOtv8WxrCrJCOepPi3X0a1uG3MgNCxydSgclYPBBVhCMjqFYG8mnAlrkbcGnezXwin5dIJ08J3iDZ//TeJbI9ti0iInrujJ/NEvdW/eTrH2/qX4DSD/OxdeQvyY7bcpaK8SDIo11Wc4Eqi0q2XGZF/c4lMabCvC740dTHgDPBbq+T+DdQfWtCP2m4bFEfeN7K9/FlfE7HHHGIRLcpxfGEzWIMTG4WffFK8lPXlj2XIm8ccn5M1gnFAiIRf7mjYAdLPSG+E3+rOPXfy3XE1o4fEadYJzihM3mSY+T1k6bAsTBLBO/F6a7xYwaOOd8XbpO8xcJFN00zDp9/USShtVSEcZxR3u+qhWCXZAuc/DUB513pg5mCyN8mc84+ncwPt4OxoLsIqVtd8t/KGinaBYMqF4ACS0vNxaIpnNPZDqm/ATzC6zW7e+42vHN3l9d7vaq3TeBeJO0P4o+SnZwevof2Hw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj6uQe4GoIIVLt3Rhl1NYuu3LyjhDcJvYaewE2l9/nNBQoLSHPRIS8mQ8883F38wFR3FkeT7nkArCqDLotdQ/rg0utpGtNdzFXHOsOWjz+gJpTgM55+CcI6hbqjLgPIMB5QJR0VItw3Q0o6GZzanpek7Dc92a7br3qjKDlEvTUqVmqMo6jij3SrctNUupxxAn3KMoBu4J7E380dCTmh6qMKntiw3K0mHaXgqReLqOawFgiCJcwyzWL/Q9nYuAexMSUiSyFF59Brylvt5drVa1lV1jaahbhmHoRlOXOgEn4Re1fVZdhmBAF2xz7iLKKMEoIi+oADUCsWSB4kchS4lYxh+YNnXTKExrsMYaNh36RdXfHJToTrS0BzLlSONLZFbGbmABKVAMyq+bQUv9cloFN3enKaJ8wdKYH5z/DhLQHCKWQKDxKrIK3ekWj6SrfQHYG1AcZZzk8KNokwRh4Mo4hQVZDwmXzRdwpSy/subyR6ouA/w3ZbnQd7FK6PqR7PRICFz8n5rt1mtjZYaiDNr9vj9eWd+urvL1HQ7zzii7uiXT5XT0/NgqIewqb0Bty/16PmzWbW+9Xoru7+nVKDz/ehnfJP3lMDJX3xmdzvO07jDh9jLHn96NLrF795xO3OGvYJSEvtO0KX7qPixTx7mHaf5AO2Li3p5NrNmD+3T5fXX/Lfl9C+b45R4Jf+ZaD4GLu72VMV938Oxr+FgPrwfMHQq4WtXNJXNm17/oaDFOsua1m8Rkdjv+djYe/oPz0JkmvecA98JgnbPWW0y7MewLK0qYZPMHwKI6Fu0x6CmXsl5IfE4vhYQE2qJU9ZKCo7gAKtR2caugFi+TBEQCTxZzczaMy77tdvvnRrNn132nb7i2UW82zUvDt8y6XXHQBsUBxC6jC1L4Klh20z+fA8Sxx4EGkGo5y/ASuPqJxR4SSBnQG/k4GOUwZZLFTZTZ2dMLZvV1FpmoabGXR3v5cm4+qMoPJn7Sn6m/EJDuc3djj7tvAJOEQEHwRYdz2eJcyGQ8oTwTkVnLUY1CJkdAWrCwZzkNV+ckTiIooOoxC7IIaskyKVOj882/pSHMS+lNf1q+vA8DO/xW5UDqBKRQ4EUsHZB1hCNDyKkC+TBgy9wNuDLvZwEpHphMqEgJ3iDZ//TWJ0WDbJtERvSnO/ljVri36idff39T/wSUfpiPraMgJztuq2kqB4Skj3ZVzSdUe6pleZ6V9asX1JhK87pkSFOfAM4kvz1P2SNQfWtCP2m8bFEfeN7K9/FlYkknAgmIZbcp5fGE3WICvNgtBvKdrE9dXPZcyrwJWItjsm4kV5AC8adbCvZwoSfFY/m3YmnwVq4jtnb8yDjlQiEIDYtTMUieP2gKzKRZIpmPpbvGjxk45nxfuE3yFouQ3TTPBHz8RSkoraUijFlGxaCnloJdmi1xiucEvDeld2ZKKn+dzWv+4Wz+PRpOJOHFSN3qkv9W1kjZLhjUYgUosbTUtVw1pXMa7tD6K8D3zN5xGr26f96p+yWzuxtm7/ftzjaBe5G034nfS3Zyevge2v8C</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AccountDelete_user20130918_1379459446852</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463331454</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20140819_1408463334093</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35BEA0B96B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>00FE35CE609E37A4E05307991F0A2173</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02005_AccountDelete_FUNC_NonCS_Deleting_an_account_when_user_is_Controlled_P1" searchProperties="true" id="e6fbde8e-3153-4f93-9db4-5aeda03e47b1"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="33ce5154-0d30-40ca-897b-60c8212a96ea"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="b589f21a-dc58-489d-92cb-627718948342"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="97f9fb2c-080c-4760-969b-ee71089b566b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));


tC.setPropertyValue("LegalGuardian","");

//required for Child user Create

//tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID_FAU1"));
//tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call Adult SAU Create" id="8dde7bc8-fa95-4b84-9349-25ecc1ab3af5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )

log.info country;

def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

myTC.setPropertyValue("Country",country);
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="4605551d-0158-494b-a58b-48a61a3e318a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="50b8137e-3012-4081-98b7-ec490699726a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","USER_NOT_PERMIT");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" disabled="true" id="54bbb36a-01b8-44d6-a16d-a356fd8af1b6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","active");
		myTC.setPropertyValue("ACCOUNT_STATUS","active");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CCBB6D37A6E05307991F0A9C25</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CCBB8437A6E05307991F0A9C25:7CB80BDC"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CCBB6C37A6E05307991F0A9C25</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CCBB6C37A6E05307991F0A9C25</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B48D966B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FE35B3E1166B78E05305991F0ABA86</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B48D966B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FE35B3E1166B78E05305991F0ABA86</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj6OQC5eEqCBBoNOowHQK01P6UrnOBtwmTho7EPj6Y4eGAqU9zJGQkHe211774mVfMBSFltthDFJOYqr4vZb6aAWOhWdQ1QzDqmu1as3WnJoJWqNumYbTmDWcoKoqPmMZ+JRxRHlLtQyzphmOZjYnZt2tOW7dqVRt60FV7iBlAlq4VAxVyaOQMrcI21KzlLoxYoS5FEXAXI7dcWc4cIWni0pOavtiy7IImLYXnCeuruNKABjCEFdwHOkX+oHPRcDcMZlTxLMU3mIGrKW+7V2tVpVVtRKnc90yDEM3mrrwCRiZf1fb38rNEPh0Fm/XHqIxJRiFZIMkqSHwRRwonXAep4Qvok+gTd00JLQGOdawWaPfVf09QMHuTKQDkilDGlsgswS7hRmkQDEof279lvr9vA5u905SRNksTiN2tP47SkCXEMYJBBorMyvZnY94olztC8CuT3GYMbKEkRyTBGFgyk0KM5IPCBPDFzClaL+SM/Ej5ZQB/pu2XOj7XAV1/UR1emQOjP+fnu33a4tyh8IM2suG492bzqJaH3jd/mRjRWlDf3jmNdRvFRT2nbekdu1+Wx8P62623jZdL/BvyEbxazOz/LvNK7kyJyPzZjr/PeleD0YvyG6OLwf5fWeKf03yfPhnNDd9K5n+9JPn2cPV7dOmO+DNSeYNHuBbbuakZgXGcvrci4Z3LzfPfW80/9FM/7nujp76v71rZ+MnXdtezJ2fw/t1hDfX6071fsivQnvT/zHMp6u7Abv2x0PjW51OF9Z0dEXHKztmeT6f1lrvOe3ncGgsJWGcPT0D5uVSjoffUy5FvxD/Wl6khQTarHB1E6lRjAPlalvuktLiZkKASOCKZm7XhnHZr9a7NafXbDS6dqdv1KtGvdk0L41Ov1/tlhq0ZXFE0YvpjMhYUmW38/M1QRy5DGgAqbaMM7wApn6B2EMcKT69FYcjpgwmsVDxGuaz9cx8Xlg2jp4Mu5Guc4gTVRnF/Bf9lXZmHNJD4XYOhPsWMEkISHWX483EfDMuKvGKlhkPzcoSVShkQv9TKcGuVXPqOiNREoLkqUdxkIVQSRZJURedbf8tDWFWWG/7k+LYfZrV8beyAMInINKByVy6IJoIJ26gWpnIpwlb5n7CJXwnC4g8XaKaPCV4y+Tw0/uQyOnYTYjI6NEbP5ol75372ds/7tS/IKUf12MXKFiSvbDlVSpuB6Ed7bKbr6jyWsmWy6zony11MRXwupBHUx8DzoS4rSfxC1B9B6GfdbfsWB9F3tkP+WV8QccccYjEtCnF8oyHxRiYfFj44pDk575aDkKKunHI+SmbF4r3h2T85RMFu1j6CfON+FvFafDerhNYe3FEnuI1wQmdy5W8RdafDAWOBSwRshen++CnAE4FPzTuirzjwsU0PWUcPv+iSD1rqQjjOKPc76mFYV9jC558nYD77vQBptDxt4s5Z59ezPfDwVioXYTUnS/5b2eNFOOCQZX3f8GlpebinSmC0/mepr8R/CjrntftNryq3WkUsm5vZb3pWfVdAQ8yaX8wf7Ts1fT4PLT/BQ==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj6OQC5eEqCBBoNOowHQK01P6UrnOBtwmTho7EPj6Y4eGAqU9zJGQkHe211774mVfMBSFltthDFJOYqr4vZb6aAWOhWdQ1QzDqmu1as3WnJoJWqNumYbTmDWcoKoqPmMZ+JRxRHlLtQyzphmOZjYnZt2tOW7dqVRt60FV7iBlAlq4VAxVyaOQMrcI21KzlLoxYoS5FEXAXI7dcWc4cIWni0pOavtiy7IImLYXnCeuruNKABjCEFdwHOkX+oHPRcDcMZlTxLMU3mIGrKW+7V2tVpVVtRKnc90yDEM3mrrwCRiZf1fb38rNEPh0Fm/XHqIxJRiFZIMkqSHwRRwonXAep4Qvok+gTd00JLQGOdawWaPfVf09QMHuTKQDkilDGlsgswS7hRmkQDEof279lvr9vA5u905SRNksTiN2tP47SkCXEMYJBBorMyvZnY94olztC8CuT3GYMbKEkRyTBGFgyk0KM5IPCBPDFzClaL+SM/Ej5ZQB/pu2XOj7XAV1/UR1emQOjP+fnu33a4tyh8IM2suG492bzqJaH3jd/mRjRWlDf3jmNdRvFRT2nbekdu1+Wx8P62623jZdL/BvyEbxazOz/LvNK7kyJyPzZjr/PeleD0YvyG6OLwf5fWeKf03yfPhnNDd9K5n+9JPn2cPV7dOmO+DNSeYNHuBbbuakZgXGcvrci4Z3LzfPfW80/9FM/7nujp76v71rZ+MnXdtezJ2fw/t1hDfX6071fsivQnvT/zHMp6u7Abv2x0PjW51OF9Z0dEXHKztmeT6f1lrvOe3ncGgsJWGcPT0D5uVSjoffUy5FvxD/Wl6khQTarHB1E6lRjAPlalvuktLiZkKASOCKZm7XhnHZr9a7NafXbDS6dqdv1KtGvdk0L41Ov1/tlhq0ZXFE0YvpjMhYUmW38/M1QRy5DGgAqbaMM7wApn6B2EMcKT69FYcjpgwmsVDxGuaz9cx8Xlg2jp4Mu5Guc4gTVRnF/Bf9lXZmHNJD4XYOhPsWMEkISHWX483EfDMuKvGKlhkPzcoSVShkQv9TKcGuVXPqOiNREoLkqUdxkIVQSRZJURedbf8tDWFWWG/7k+LYfZrV8beyAMInINKByVy6IJoIJ26gWpnIpwlb5n7CJXwnC4g8XaKaPCV4y+Tw0/uQyOnYTYjI6NEbP5ol75372ds/7tS/IKUf12MXKFiSvbDlVSpuB6Ed7bKbr6jyWsmWy6zony11MRXwupBHUx8DzoS4rSfxC1B9B6GfdbfsWB9F3tkP+WV8QccccYjEtCnF8oyHxRiYfFj44pDk575aDkKKunHI+SmbF4r3h2T85RMFu1j6CfON+FvFafDerhNYe3FEnuI1wQmdy5W8RdafDAWOBSwRshen++CnAE4FPzTuirzjwsU0PWUcPv+iSD1rqQjjOKPc76mFYV9jC558nYD77vQBptDxt4s5Z59ezPfDwVioXYTUnS/5b2eNFOOCQZX3f8GlpebinSmC0/mepr8R/CjrntftNryq3WkUsm5vZb3pWfVdAQ8yaX8wf7Ts1fT4PLT/BQ==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH1chCQmQRAWJ6262d0J7tn1ZGdsBdxMbbIfS/vpjh4YCvRz2SEjIk/HMNxd/MycC5Fk96gqBuSSMGvGgbf5O3bqfpl5gIS9Flh/4wAqDad0K/Kbrex6agmBqGrEQBY6pkIDKtll3XN9yAssNJ24j8sPIcWoNP7w3jVvMhTKtVGqOaazzjIqodNs2C04jBgQREQU5FpGEUdI9P4uUZgQqTGbnZIOydMg7cykXkW3DGsIQZxmsQZbbJ/aezgkSUUJmFMiC4xefSLTNl7uPj4+1R6/G+MyuO45jO6GtdJAgs69m50t1GaOYpmxz7gPKKIEgI89AgzrHcs6Q0c1mjBM5zz8w7dquo01beA0t6Pr0q2m/OijRHWlpDyQXwBJz4FbGxjjFHFOIjZtx3Da/HlfBzd0JB1SkjOfi4Px3kDBd4YwtMLJEFVmF7niL76Src4JhFFOYFYKs8IVukwWAWBhXHKdkfUaEaj4kjLL8xlqoH6m6DMO/KcuJvYtVQbffyc6AzLCQ/6dmu/XaWLkFWYE7dpHeu4Ut8mG/d7p4Rpxffh8OEsDGs3YJYVd5A2pb7pfzYbNue+vlEmuxbvP+50XGf6DRgN48XU7C21/T5dTrXSzD/tPdd/cO1EMh7Pm3bposx7fTHyiHz6PZMJyfwm8ovYb4l3/fvz5PvoRifXOT3if583Uj/uc0uBrxYYtNYg8t8turs4ROvg99+65+FdwvuLe664+64nrSjIH9/GfAT4tbGcqQzpP580X9y/SB0OX5D4IGZ26PSf/BO2+/xrQbw76wooSkmD5gKKujbo94YIxUvYD8nF60hCArLVWjheYoITGVZkff0tQSFYqACIpUMTdnxxkNvUbPG7pus9lrBUOn4TmNMHRHTrfXDZoVB21QHEDsM5oS7Uuz7KZ/PgcI80hgijC3VqyAcyzMTywOgARGTMfqcTAq8IQpFndbDD02n1oPGZpyN5APXGS+IjHhm8YFk5f0kndTifk+dwd73D3GkCwI1gSvO1yoFhdSJWMJVoXM3NoK1Cgu1AjgmoWjuh80bEHyRYY1VDtnqMhwbTFflKmxxea/bgEoSul4OClf3oeBHX6rcqB0ENEKQsfSw6qO+M0QCqJGFciHAdfd3YAr890CEf3AVEIlJ3CDZP/Ta5/oBtk2iYrodz/57Va4t+pHX3970/4ElH2Yj60jtCI7bqtpqgaEoo9OVc0lqC1rxWpVlPVraWrkyrytGNK1EwwLxW9PE/YHU3trwj5qvGxRH3jeyvfxFXJOEwkkzlW3GeXxiN0iwULvFrF6J+tjF5c9lypvEq/le7J+plYQjfjTLQVGUOsp8ZX6e2QcvZbrHVs7flScaqGQhM70SQ+Spw+aAjJllijmY3zX+HsG3nO+L9wmeYtFqm6aFhJ//MXQlNY2AYSsoDIemKVgl2ZLnPJpgaNXpTdmSip/mc1r8eFs/nV+lijCy4G51SX/rWyRsl0gNvUKUGJpm2u1airndLZD6y8A3zJ7v9/rNfteq9ssmb21YfawX29sE7gXSeeN+K1kJ6eH76HzLw==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AccountDelete_user20130918_1379459446852</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463337534</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20140819_1408463339902</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B48D976B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>00FE35B3E1176B78E05305991F0ABA86</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02006_AccountDelete_FUNC_NonCS_Deleting_an_account_when_user_is_Full_P1" searchProperties="true" id="0143f79c-748a-4ad5-a943-612de464645b"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="0cf511cb-410b-4843-b27a-ba8e24a7c4b2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="3ffb0dcd-e402-4b2b-b013-ab64b9b59176"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="96d1896e-894d-4c09-81a8-1c63c45accb9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="0fe33e91-d3de-427c-94a1-c1c0043f60b4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="35881f28-b0ce-4018-91f2-0cb6da435b57"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35C6F86B6B92E05305991F0A81AF</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35B56C7E6B7EE05305991F0ACDC7:A32407A"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35C6F86A6B92E05305991F0A81AF</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35C6F86A6B92E05305991F0A81AF</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35CCBB8837A6E05307991F0A9C25</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35CCBB8837A6E05307991F0A9C25</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj1XIhVsSFaQUeuH0si1Qyu7LyjgT8DZxgu0A3V9/7NBQoLSHPRIS8mQ8883F38wZR0ns+AHnwARJqdbrtvRfDQvb0MRVw40moVGrRWBMnKhpTBoRWBiipuu5utbjPIce5QJR0dIdy64ZlmvY3tCu+zXPt6qVqtP8qWsjYFyalioVS9dWSUy5X7ht6Tmjfoo44T5FCXBfYH8Q3N36UtNHJSa9fbZGWThk7ZkQmW+auBIChjjGFZwm5pm5o3MWcn9AphSJnMGbz5C39Le7y+WysqxWUjY1HcuyTMszpU7IyfREb38rL0PYo1G6PncQTSnBKCZ/kAJ1B2KWhloQT1NGxCz5xLRt2pYybcAKG9iu0RPdfHdQoDvS0g5IxpHBZ8gujfUhAgYUg/bU77X0k+MquL47ZIjyKGUJ3zv/HSSgC4jTDEKDl5GV6I63eCBd7TPAfo/iOOdkAfeqTTKEgWsPDCKyuiVcNl/ItaL82orLHym7DPDflOXM3MYqoZsHstMlU+Di/9Rsu15rKyMU59B+GieuFzKaXpr4znTBaVxZc2G7nvfYKiBsK69Bbcr9dt5v1k1vvV36Pu0/Xg9m41GAb81YJN2Hq5vlaJwkD5N+rXFq/fNToGnUv3+4Or2pL4ZZdjp4nDXYdXV2+5AhHgr847fz/Bx5P4Lxt3A+eoLTl9qYNW6F9ef6RSyWwg6Dq+fz8ehHNGzCz3zudifcuZv8GecDiz39Tq47afR4k2ETX2f89KJXn3Q7o1r323xy3+nV2dOyPplnF43AuZ+23mPajmFXWFLCIJ/8BizKo2qPXle7lPVC4mt6URISGlGh6meKo7gAKvS2uqWoxc8lAZHQl8Vcny3r8qJa73TOz1232gwaF1a9ajU9z760Aq/j1EsOWqPYg9hJaUSUL8Wy6/75GiBOfA40BGYs0hzPgOtfWOwigbQe7cvHkVIOw1SyuHwI0WvqeDPmLeyXSZQsbadWJSjXtftUfKffWRAJYLvU7e5Qdx8wyQgoflcNzmWHcyFzMUeLXMR2ZYEqFHI5AZgiYd+puXWTkySLQSE1kzTMY6hks6zIjMnX/46BMC+k/Yth8fA+jWv/W5kCqRMSpcBVLOcgywgfZpDr18tAPg3YsbcDLs0HeUjU+5L5FIzgNZLdT+9tovpj0yMyol+dwS+7xL1RP/r6x5vmF6DM/XxsHIULsuW2HKZyPkj2aJfVnKPKvJIvFnlRv6ZiRibNm5IgbXMAOJf09jpMX4CaGxPmUdNlg3rP80a+iy8XMzoQSEAiu00rjkesFgPgarXoyWeyOnZv2XEp8yZgJQ7JOrHcQBTiL5cU7GOlJ8UP8m+ZsvC9XAdsbfmRccp9QhA6VSc1R14/aQqcSrNEEl/Kto0fMnDI+a5wk+QNFiG7aZIL+PyLphitpSOM05yKXlcvBNssW+AUrxn470ofzBRM/jaaV/zT0Ty+ux1IvkuQvtEl/61skKJdMOhqAyiwtPSV3DSlczrdYvU3gAeIvXHpNoLGuecUxF5fE7trB5ebBO5E0v4g/ijZyun+e2j/Cw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463342416</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35CCBB8937A6E05307991F0A9C25</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02007_AccountDelete_FUNC_NonCS_Deleting_an_account_already_deleted_P1" searchProperties="true" id="b00a36c9-0e56-46ff-91eb-162207d89661"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="datasource" name="Account_Status" id="cebd615b-d6b8-45a3-9877-e91c6c1c075e"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">deleted&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">forcedeleted&lt;/con:entry></row></con:configuration></con:dataSource><con:property>Status</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="57d0f413-0c3e-44e0-b4a5-54c4e0eb0085"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="553de6fe-0e6a-4cee-8386-f37061b22be5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="73d7a8ed-eaac-4f00-879d-955cc85c13b1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="d1b6f945-91db-4c15-9219-c46012fb0a77"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def status = context.expand( '${Account_Status#Status}' )
myTC.setPropertyValue("Status",status);
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="d4a549b8-ab57-4e69-aadf-d2f2310a25d1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","ACCT_INACTIVE");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="c0f36014-b044-4c09-a86c-07a276fd2f28"><con:settings/><con:config><dataSourceStep>Account_Status</dataSourceStep><targetStep>Establish Test Case Properties</targetStep></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35BA2A3537A0E05307991F0A50EB</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35B42DEF3798E05307991F0A5105:205DBA83"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35BA2A3437A0E05307991F0A50EB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35BA2A3437A0E05307991F0A50EB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B4F48B379CE05307991F0A189A</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B4F48B379CE05307991F0A189A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbT+M6EH7nV0Th8SjNnTYRrZRe2M1SoFBgWV6QcZzEZ1O7tZ228OvXTklpS+F0j1Sp8mQ8883F38wpB5PCCSPOEROYEi3ut/UnJ0VN+bON9MR1DA9YLQO4wDJgy22lJ5ZnJ56nazHnJYoJF4CItu5YtmdIRTu4tf3QC0LbarhW81HX7hHj0rRUaVi6tpwUhIeV27ZeMhJSwDEPCZggHgoYjqOLYSg1Q1Bj0junK5SVQ9bJhZiGpgkbCYKoKGAD0ol5am7pnCY8HOOMAFEy9OYz4W397e5isWgs3AZlmelYlmVagSl1Eo6zY71zVF9GSUxSujr3AKEEQ1DgV6BAXSCR00SLiowyLPLJJ6Zt07aUaQMtoQFtjxzr5ruDCt2BlrZAMg4MngO7NnaDUsQQgUi7u4nb+vFhFVzdvWWA8JSyCd85/x0kROaooFOUGLyOrEZ3uMU96eqcIhjGBBYlx3N0qdpkCiDi2oihFC+HmMvmS7hWlV9bcvnDdZch+DdlOTU3sUro5p7s9HGGuPg/Ndus18rKPShK1On/bpnsH5sNoyt7mQc/siv3cey/JsFs0K4gbCqvQK3L/XbebdZ1b71dyuJp3stm/vB80X/tnfxosls6+W7NA5MBqxssZ0TcZz+F/+vhJh1Hr6x5Vnb961FvkN3nz1129vI6ajb9i/PHZnp/5F72kzvrhPigD+NhfvmQFq4b8N9D53HkmufB6HwcNb8VhPXxYhD7o7ufo7veILj+1itZgSI7soN7eHlHvmP/8WiAHn9l9nzp+VbiXic0f4Dt95g2Y9gW1pQwLp//RVDUR9UecV87k/UC4mt6URKcGGmlGk4VR3GBiNA76pailrCUBISTUBZzdbass4Hrd70zr9V1m0FvYPmS4YLAPrMiuxVENQetUOxA7FGSYuVLseyqf74GCCchRyRBzJjTEuaI619Y7AMBtJjcyMdBCUe3VLK4TVw8O5Hv0rMptd1pc245z46T4xNdu6TiilyxKBWIbXN3a4u7bxDEU4wUwasO57LFuZDJmIF5KQq7MQcNgko5Aphi4dDxWr7J8WRaIAXVnNCkLFBjmk+r1Jh89e8YAPJKejO4rV7ep4HtfqtzIHUSrBS4iqWLZB3RniFk1YF8GrBjbwZcm4/KBKsHJhMqGIYrJNuf3vtENci6SWRET73xk13jXqsffP3jTfMLUOZuPtaOkjnecFtPUzkgJH106mrOQGPWKOfzsqpfU1Ejk+ZNyZC2OUawlPz2ckt/I2KuTZgHjZc16h3Pa/k2vlLkZCyAQBPZbVp1PGC3GCOudotYvpPloYvLlkuZN4GWYp+sV8gVRCH+ckuBIVR6UjySfwvKkvdy7bG14UfGKRcKgUmmTmqQvHzSFJBKs1gyH2WbxvcZ2Od8W7hO8hqLkN30XAr0+RdNUVpbBxDSkoi4r1eCTZqtcIqXKQrflT6Yqaj8bTYv+aez+eFiOJaENwH6Whf/t7KBq3aBSFcrQIWlrS/lqimdk2yD1t8A7mH2yIlcz21G1iaz+9agu07gViSdD+KPko2c7r6Hzh8=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463349524</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B4F48C379CE05307991F0A189A</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02008_AccountDelete_FUNC_NonCS_Deleting_an_account_when_Account_Blocked_and_User_Pending_P1" searchProperties="true" id="1eab3f31-f468-4a93-8699-2831d72dcc54"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="c551b89e-38be-498c-a2a8-3acd9ebf12ed"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="47c33378-cb3e-4531-b690-9d973c0805fa"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="cdedd9ee-9423-4725-9559-e24bd8cae397"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="d9983631-b1a7-47a4-842f-78cc3f2efe0e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set User Status" id="039bb038-d262-404c-bbb9-1dbbe084f0d6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","pending");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="6b6aa86d-0455-45aa-a655-2c2fc35bba06"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","ACCT_INACTIVE");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CE60CC37A4E05307991F0A2173</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35C6F8906B92E05305991F0A81AF:AEB55B96"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CE60CB37A4E05307991F0A2173</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CE60CB37A4E05307991F0A2173</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B478C1379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B478C1379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVfZcuq6En3nKyj2I0U8MJpKUiVjGwyYyWZ8OWVkeQBPWJ7g649MAptkJ/vm3CdQq9W9enBr6Rnrnst2AcYoip3AL8vCS+UfRLfqOmzAGtsxG7VGxzBqHU5v1zgE60yDZli9qVfKMsYJkn0c6378UmFppl6juRrT1phGt0l3G+2nVpPZVcorFGFimqg80ZVy7rk+7l7dvlSSyO8GOnZw19c9hLsx7KpAGXeJZle/Yaq8Pr+hvDqMXu04DrsUBZ8MBJHrwicYeNQz9UHn2cBd1bF8PU4i9O7TwC+V97NZlj1l9acgsiiWpmmK5iiiY2DH+lV5Ld0OI0P2zeBt3dP9wHeg7joXvQCloNgOjDJwrSByYtv7xjRDMXRhuoZyWINMw/9VoX47uKL7oaUPICOs17CtMzdjC2SiCPkQlZcL+aXy62cVfDurRbqPzSDy8Kf1f4OE/BS5QYiMGr5FdkP3c4tfpOv1GcGu7EM3wU6KJkWbhDpEuDyLkOnkYweT5jNw+Vr+co5vHYbgfynJM/WIk8CmvsiM4FgIx/9PvR5r9WZlpbsJerUYWvA3KqWIUtVbz9YiC4bT6fnE042XK4RH5TdQ91K/rz836r2v3g9dxpe0NT4N2alKj4YdwEKt2hK3dKjZuu1JSgiC4coMLpch6RLB8Zo5OJ2nHdnYyGPbE4f6aZDK6wm0mwEu0Sa9hb3UwlZ7JYcjESnHYMq218ESdc5ImvbxIZc6/enpGNStU7CTD8P6xFZH64wKpsfmqKOyk3PWaHHDVCpt1GGfb8GwHch1VZrpUm/58jumxxiKuEbofA2y+L9p0pygx/p90SsmhUk+zxi9KrLcqwq9HkA9C2QyDyyZH1/AhLeOJ/vo9LmM5sF8KQEBnJUFyARrK6zm85GYGauVu1vJksQri0Y2AFuhRDYEMV8Ju82Q1te7cMtK9E7leWOzCPb1YWgMjtnAhhNFU7KJJp+Vg5hPNJFeX2VWTtYX5aAwU21ZL60PPKcsxEzIrh4FMbMnu/Ui3C65DF7EuQIafcAsxZ6tDDRvxcD6woYHcayA41XO20pvtVJyUQOzEm9NViQ2rSftQugZ4d5z7QfjA2JcM/qr877vJruLeFB6Yr+nnvqqvK8Lc3EIFtvlfr066mspLcHBBOxvHp2mo2+CzNp1MmG+HY5IGe0UTsBc5Pk5IOmigSL3hyDo80BpACe/9A58K+gZUkYNWVyqcm6/tTk7pw3W+7SrM50Osx2vW7NTSxD96m6U7A+2Ym+kaXWkGumSi7nLFqfVtKU7DMxDc74RB/EoNwdztbSfCfkGDqqGNaTcCydFSnsIosvZdhVrEa9bU3zeO6a55jfThts2XaW+CE3XDM+4qgXzY0S3eFRnqe05HcUlYCk8AP3D8sDPFb5TJNWQs/lW4XUgiXECLgc2HrGr03CQunBbB0E+Wk8Px/fCGEIm8lQ2F0lbiaWOAIyiCAN1KUoHsOQtK+ItUeLnUADzrTzKtiRfywFR/pxH6ZpHS+SBWN+BFjco1Zc0F09jtdEAZ59f+hJnK6d8bbQ8un1C4lidhI1MwRPT362Do+I50TJK1OVoNBnney3pHw9kVpm0Okrru5KYHkPgTEaafRQCQZ+F220cVn0YwVgOPUXOL9MdPnScvUcPq02Gn9ECbLNLb58t+7q4G0WWyowGC39Wb3MlnJjngVc9dLJ1VVNbYdvo+aZwPlO7aEUHIJC4RfNk5Cx7tJfZuJWZQ3Dc6+wkdzn+zImjnQazxXy0Vr1qs9RMx2OPvmhUYxJOM7WfNcT5vFo3eG2g4TBytknHyqOpb7BbPW6lO3rVckL3yLHJUWuE9ZXlkWLNUiNsK7PSvLGBO89qh3BILagUiG1zLPfP+4t+Cb0pfBugn6fDXfg2P6jHyfJh9NxIh0q6FcH4tiwuIFkoS+RW0OO/E5hC4hg186raDQsWhGPkx5XX4lRBXroJoTiO0SVXxttabHGtltTkOV4CHZblRJrc1RIN6CbH0Q2ufmM5byg+QewFvukUvgoe93ZL/R0g9LoY+QaKammQQBvhyl8sFvkqy/6CXL+Bj5EWEJ4oNTsczdebTI+hm7TYbgkdQRDYZrsnSR2p06yUJ0E89acRMGMUfeSI7Q8ccYGgEzqoIJLFbYrJdYpjkpKTniaxyzyl+pOPEkI1o4LtddlGp0lhxwtdVACmvMBIXPQU2uE1QRR++2VrOsRX6ULU/pHV3vWm/zbEz3u3bBAdwykUcBEPj0hF0ReEt34L5tugWfox6Jt5kBhOcaGT1MaRA9+QfNz63TFFq9zbpYiqp/7D3HDf1X98/M+T1F9AUZ/zcXdkpM6D2xtzJ2SU0JXXW0VP+tPpKUnT5FrDdkHFImKeYii6TakIJoRPnbXgiHzqboL6EZW9o/7k+S7/iC+JbV+NyTjwSMeVr8sfvGNUhIt3jEy+mPynj6QPLkneYpTHX8l6LnnuFIj/+iKCXVjoEfGM/GRBZPwu1xe2HvyQOIv55/hWsSqI6/mbpoABMeuQGRhEj8a/MvCV84/Ce5LvWGLSTfskRt/vlIvh9lLRIQwSP5aFylXwOHCvOONziLq/lf4wc6WO72+BHH/7FtgoY5WMPk+v3HWd/61cc67tAhE5hZ0rlpdKTp61xLlvPQz4d4Bfz/gO/bcZ/zGS1z/Ef0oecvr5e3j9Fw==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+o4EH4/vyLKeVwFJ4GUEBUkCnQLp1eg7dm+VMaZBJfggO0A7a9fOzQUKO1yVkJCnoxnvrn4mzkVeJq4QVMI4JKmzOi26+azG/nkxMeO5UEIVqXqOZYPo7JVqfgh9srRKAwd0+gKkUGXCYmZrJuu7VQs27ec2tDxgkotcMolz7WfTOMBuFCmlUrJNo3VNGEiyN3WzYyzIMWCioDhKYhAkmDQvLoMlGaAC0xm43SNMnfIG2MpZwFCpBQCgSQhJZJO0Sna0TkNRTCgMcMy4/DuMxR18/3ucrksLcullMfItW0b2TWkdEJB459m40dxGcIui9L1uYVZyijBCX3DGtQVyHEaGs0kTjmV4+kXph3k2Nq0BStiEafCfprow0GO7khLOyC5wJYYY6cw1ocIODACxn2/Wzd/HlfB9d0hx0xEKZ+KvfOfQQK2gCSdQWiJIrIC3fEWD6SrcQok6DKSZIIu4Fq3yQwTEMYth4iuLqlQzRcKIy+/sRLqR4suA/InZTlF21gVdHQgO20ag5D/p2bb9VpbecBJBo1Ld+45sXvx0hzdhcuID8sRf0A3MbT+qecQtpXXoDblfj/vN+umt94vPQ5fbyZ+r9O7Oj8ZDHtPrbtJb/KLJWMa8slNEzVPvMeBd5cN419vdmI7In2L/vb+ul30YnT/m7bZ/RSzm2on4m/oB1pld2eJfYn9fu9tlj5elOHt4tewf115oaxdfrmcRfOZE9Pl0m+JCU/m7afuGJ34ycVL1O/0e2R+fzd4vI7P+Rn6cXvt3165L82Hx3nNo4PW6O6q/hHTdgy7woISBtnoBYgsjro9um3jXNULy+/pRUtoaEW5ajDTHCUkMGk29C1NLUGmCIiGgSrm+mzb552yd1ap+i2nXK01O7ZXtqu1mnNuN2utjl1w0BrFHsRWyiKqfWmWXffP9wDJNBDAQuDWIs3IGIT5jcU2ltjosr56HCkTMEwVizu1icvwZB4vXiN7PvdGrytJF2l0YhrXqbxhN7wZSeC71O3vUHcfCJ1R0PyuG1yoDhdS5WKOF5lMnNIClxhkagJwTcKBW/E9JOh0loBGiqZpmCVQmo1neWaQWP+7FiYil/Y7w/zhfRnX/rciBUonpFpB6FjOQJURDswguwjky4BdZzvgwnwzC6l+XyqfklOyRrL76aNNdH9sekRF9NwaPDsF7o360dc/30TfgEL7+dg4Chd0y20xTNV8UOzRKKo5x6V5KVsssrx+Vc2MXJlHiiAdNACSKXp7HaYTYGhjAh01XTao9zxv5Lv4MjlmA4klTFW3GfnxiNViAEKvFl31TFbH7i07LlXeJKzkIVkrURuIRvztkkICovWU+Fb9LVMefpTrgK0tPypOtU9IymJ90nPk9YumIKkySxXxpXzb+CEDh5zvCjdJ3mCRqptGmYSvvxia0eomJiTNmOy2zVywzbI5Tvk6g+BD6ZOZnMnfR/NKfDmaf19dDhTfTbG50aX/rWzRvF0ImHoDyLHUzZXaNJVzFm+x+jvAz8Te6pzYrbNytVnZJnbXqZY3CdyJpPFJ/FmyldP999D4Fw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463352714</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B478C2379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02009_AccountDelete_FUNC_NonCS_Deleting_an_account_when_Account_Blocked_and_User_Suspended_P1" searchProperties="true" id="293cb0ea-f44f-4d0d-9a6b-e4d57eadf262"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="055ace6a-7e4c-425f-be4c-91d726a23872"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="9aa7b343-97b9-454b-bbb5-fbac9c8d41ba"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="947b704d-05ff-4981-825c-ec01b471fe61"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="5d86c65c-401d-4ca6-adad-642661a4ee35"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set User Status" id="5b413f23-2bfe-473a-a804-9c872b2c6bf6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","suspended");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="d7bc324c-97a3-4a15-8529-df66ae2647dc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","ACCT_INACTIVE");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CCD6B037A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35B511466B7CE05305991F0A6AA3:13DC6D1B"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CCD6AF37A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CCD6AF37A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B4F4A6379CE05307991F0A189A</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B4F4A6379CE05307991F0A189A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVfZcuq6En3nKyj2I0U8MJpKUiVjGwyYyWZ8OWVkeQBPWJ7g649MAptkJ/vm3CdQq9W9enBr6Rnrnst2AcYoip3AL8vCS+UfRLfqOmzAGtsxG7VGxzBqHU5v1zgE60yDZli9qVfKMsYJkn0c6378UmFppl6juRrT1phGt0l3G+2nVpPZVcorFGFimqg80ZVy7rk+7l7dvlSSyO8GOnZw19c9hLsx7KpAGXeJZle/Yaq8Pr+hvDqMXu04DrsUBZ8MBJHrwicYeNQz9UHn2cBd1bF8PU4i9O7TwC+V97NZlj1l9acgsiiWpmmK5iiiY2DH+lV5Ld0OI0P2zeBt3dP9wHeg7joXvQCloNgOjDJwrSByYtv7xjRDMXRhuoZyWINMw/9VoX47uKL7oaUPICOs17CtMzdjC2SiCPkQlZcL+aXy62cVfDurRbqPzSDy8Kf1f4OE/BS5QYiMGr5FdkP3c4tfpOv1GcGu7EM3wU6KJkWbhDpEuDyLkOnkYweT5jNw+Vr+co5vHYbgfynJM/WIk8CmvsiM4FgIx/9PvR5r9WZlpbsJerUYWvA3KqWIUtVbz9YiC4bT6fnE042XK4RH5TdQ91K/rz836r2v3g9dxpe0NT4N2alKj4YdwEKt2hK3dKjZuu1JSgiC4coMLpch6RLB8Zo5OJ2nHdnYyGPbE4f6aZDK6wm0mwEu0Sa9hb3UwlZ7JYcjESnHYMq218ESdc5ImvbxIZc6/enpGNStU7CTD8P6xFZH64wKpsfmqKOyk3PWaHHDVCpt1GGfb8GwHch1VZrpUm/58jumxxiKuEbofA2y+L9p0pygx/p90SsmhUk+zxi9KrLcqwq9HkA9C2QyDyyZH1/AhLeOJ/vo9LmM5sF8KQEBnJUFyARrK6zm85GYGauVu1vJksQri0Y2AFuhRDYEMV8Ju82Q1te7cMtK9E7leWOzCPb1YWgMjtnAhhNFU7KJJp+Vg5hPNJFeX2VWTtYX5aAwU21ZL60PPKcsxEzIrh4FMbMnu/Ui3C65DF7EuQIafcAsxZ6tDDRvxcD6woYHcayA41XO20pvtVJyUQOzEm9NViQ2rSftQugZ4d5z7QfjA2JcM/qr877vJruLeFB6Yr+nnvqqvK8Lc3EIFtvlfr066mspLcHBBOxvHp2mo2+CzNp1MmG+HY5IGe0UTsBc5Pk5IOmigSL3hyDo80BpACe/9A58K+gZUkYNWVyqcm6/tTk7pw3W+7SrM50Osx2vW7NTSxD96m6U7A+2Ym+kaXWkGumSi7nLFqfVtKU7DMxDc74RB/EoNwdztbSfCfkGDqqGNaTcCydFSnsIosvZdhVrEa9bU3zeO6a55jfThts2XaW+CE3XDM+4qgXzY0S3eFRnqe05HcUlYCk8AP3D8sDPFb5TJNWQs/lW4XUgiXECLgc2HrGr03CQunBbB0E+Wk8Px/fCGEIm8lQ2F0lbiaWOAIyiCAN1KUoHsOQtK+ItUeLnUADzrTzKtiRfywFR/pxH6ZpHS+SBWN+BFjco1Zc0F09jtdEAZ59f+hJnK6d8bbQ8un1C4lidhI1MwRPT362Do+I50TJK1OVoNBnney3pHw9kVpm0Okrru5KYHkPgTEaafRQCQZ+F220cVn0YwVgOPUXOL9MdPnScvUcPq02Gn9ECbLNLb58t+7q4G0WWyowGC39Wb3MlnJjngVc9dLJ1VVNbYdvo+aZwPlO7aEUHIJC4RfNk5Cx7tJfZuJWZQ3Dc6+wkdzn+zImjnQazxXy0Vr1qs9RMx2OPvmhUYxJOM7WfNcT5vFo3eG2g4TBytknHyqOpb7BbPW6lO3rVckL3yLHJUWuE9ZXlkWLNUiNsK7PSvLGBO89qh3BILagUiG1zLPfP+4t+Cb0pfBugn6fDXfg2P6jHyfJh9NxIh0q6FcH4tiwuIFkoS+RW0OO/E5hC4hg186raDQsWhGPkx5XX4lRBXroJoTiO0SVXxttabHGtltTkOV4CHZblRJrc1RIN6CbH0Q2ufmM5byg+QewFvukUvgoe93ZL/R0g9LoY+QaKammQQBvhyl8sFvkqy/6CXL+Bj5EWEJ4oNTsczdebTI+hm7TYbgkdQRDYZrsnSR2p06yUJ0E89acRMGMUfeSI7Q8ccYGgEzqoIJLFbYrJdYpjkpKTniaxyzyl+pOPEkI1o4LtddlGp0lhxwtdVACmvMBIXPQU2uE1QRR++2VrOsRX6ULU/pHV3vWm/zbEz3u3bBAdwykUcBEPj0hF0ReEt34L5tugWfox6Jt5kBhOcaGT1MaRA9+QfNz63TFFq9zbpYiqp/7D3HDf1X98/M+T1F9AUZ/zcXdkpM6D2xtzJ2SU0JXXW0VP+tPpKUnT5FrDdkHFImKeYii6TakIJoRPnbXgiHzqboL6EZW9o/7k+S7/iC+JbV+NyTjwSMeVr8sfvGNUhIt3jEy+mPynj6QPLkneYpTHX8l6LnnuFIj/+iKCXVjoEfGM/GRBZPwu1xe2HvyQOIv55/hWsSqI6/mbpoABMeuQGRhEj8a/MvCV84/Ce5LvWGLSTfskRt/vlIvh9lLRIQwSP5aFylXwOHCvOONziLq/lf4wc6WO72+BHH/7FtgoY5WMPk+v3HWd/61cc67tAhE5hZ0rlpdKTp61xLlvPQz4d4Bfz/gO/bcZ/zGS1z/Ef0oecvr5e3j9Fw==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jS55AEQoAIkCiX3WwvsA298bIyzgBugx1ih0J//dqhoUBpD3uqSsiT8cw3F38zdY7mUdFrcQ6JIIxqfqeh/ylaUHRRxTXG2AkNJ3QsY2y7rlEOy5NyueQ4dqmiaz7nKfiUC0RFQy9atmNYVcOuDe2y59Q8u1KwquWRrt1DwqVpqVKwdG01jyj3MrcNPU2oxxAn3KNoDtwT2Ata11ee1PRQjklv1jcoM4dJcyZE7JkmLoSAIYpwAbO5WTf3dOoh9wIypUikCbz7DHlDf7/7+vpaeC0VWDI1i5ZlmVbNlDohJ9NzvXmWX4bQpxO2ObcRZZRgFJE3pEBdg5ixUGtFU5YQMZt/Ydo2bUuZNmCFDWw79Fw3Pxxk6E60tAcy4cjgM2Tnxm5hAglQDNrdrd/Qz0+r4ObuMEGUT1gy5wfnf4MEdAkRiyE0eB5Zju50i0fS1awD9nyKo5STJdyoNokRBq4NEpiQ1RXhsvlCrmXl11Zc/pO8ywD/S1nq5i5WCd08kp0OmQIX/6dmu/XaWLlHUQpN5yJetgc90m11wlZZPFR+J08irgZPk5dGBmFXeQNqW+7382Gzbnvr/dLgV2gOkpuqPxf95aJ7JahzBT+Hz8nb3TOBp0t2DWv22nNf+vju+ccDe+pa6YC/PazGwbR3N7kp90d23zJdHFTMs6g29BfuCP1yZ/fD0ro9e4yRc1ukP90fY4a6T7/H12Rqr03s+p1K9+rahvDlZjSKisGlH4/upqWhP6Fi+BiIO+dsVsRQmrnB5Qi6lzdi4A6njY+YdmPYF+aUEKTjZ8AiP6r28DtaT9YLie/pRUlIaEwyVS9WHMUFUKE31S1FLV4qCYiEnizm5mxZvW6pfOH0nJZbqtTaXatcsiq1mt2zWna11so5aIPiAGKb0QlRvhTLbvrne4B47nGgISTGkqV4Blz/xmIHCaT59FY+DkY5DJlk8cRJebpYrWjEkT0W0dqBYilyXha6dsNEn/aT1kRAsk/d1T3qvgVMYgKK31WDc9nhXMhcLNAyFZFdWKIChVROgESRsFd0qmWTk3kcgUJqzlmYRlCIZ3GWGZNvfosGwjyT3naH2cP7Mq7Db3kKpE5IlAJXsVyALCMcmUFWHsiXARft3YBz8600JOp9yXyKhOANkv1PH22i+mPbIzKiP+3gj53j3qqffP3zTfMbUOZhPraOwiXZcZsPUzkfJHs082ouUGFRSJfLNKtfRTFjIs2bkiBtMwCcSnpbD9kLUHNrwjxpumxRH3jeyvfxpWJGA4EEzGW3adnxhNUiAK5WC18+k9Wpe8ueS5k3AStxTNaO5AaiEH+7pGAPKz0pHsifV5aEH+U6YmvHj4xT7hOC0Kk6qTmy/qIpMJNmiSQ+luwaP2bgmPN94TbJWyxCdtM4FfD1F00xWkNHGLOUCr+jZ4Jdls1winUM3ofSJzMZk7+P5hX/cjQ/Xl8Fku/mSN/qkv9WNkjWLhh0tQFkWBr6Sm6a0jmd7rD6O8DPxN5ud9xWr1RpVXeJ/UL+bRO4F0nzk/izZCenh++h+Rc=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463356293</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B4F4A7379CE05307991F0A189A</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02010_AccountDelete_FUNC_NonCS_Deleting_an_account_when_Account_Blocked_and_User_Blocked_P1" searchProperties="true" id="ecb1e142-090a-4ca4-b23f-00ef0be56130"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="7ec41b42-695b-4dc1-a315-825bd76c207b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="8528d1b7-693c-4951-a9b1-fcee84b2682a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="64656eb0-0d54-4b3f-bd18-c8dc7a4576f2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="9f4d4b5e-79ce-448d-9dd7-8512cd69d89f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set User Status" id="b6fc6271-043e-448d-a540-462a5bb0f5e1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="9f5bd7ed-5b44-4a3f-9976-e354ed8bcdf2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","ACCT_INACTIVE");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CEC6356B94E05305991F0A1B73</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CC837E37A2E05307991F0A444C:9D856D11"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CEC6346B94E05305991F0A1B73</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CEC6346B94E05305991F0A1B73</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B56C9B6B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B56C9B6B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU+pIEH4/vyIVH62QBIIhKaGKi57lKOpycV1frGGmQ0aTCWYmAfz1ZyYYBESXs1VUUdPp6f76Ml/3OUdxVPXbnEMqaMK0fq+pP00xgqkVeMbUmhLDcWuW4aEqMhzcIFM3ILW64+han/MM+owLxERTr1q2Y1gNw/bGdt13PL9qVRzXetS1e0i5NC1VKpauLeOIcb9w29SzlPkJ4pT7DMXAfYH9UXtw7UtNH5WY9Nb5GmXhMG2FQsx908QVAhiiCFdwEpvn5o7OOeH+iM4YElkK7z4Jb+rvdxeLRWVRqyTpzKxalmVanil1CKezE731o7wMpM+CZH3uIpYwilFE35ACNQARJkRrR7MkpSKMvzBtm7alTBuwxAa2HXaimx8OCnRHWtoBmXJk8BDZpbEhBJACw6BNhv2mfnJcBdd3xyliPEjSmO+d/wwSsByiZA7E4GVkJbrjLR5IV+scsN9nOMo4zeFGtckcYeDaXQoBXV5TLpuPcK0ov7bk8kfLLgP8J2U5N7exSujmgez06Ay4+D81267X2so9ijJo0ej0OZw1bt3hKvyFMxLD1dtwwq3w2WkWELaV16A25X4/7zfrprfeL4WkHj/G49y5nPDBfBk3fgWXtySwB9UFDwf3jEzvJrkZ9/Ln+ALzh/H475+9dp67M/G2euxg7jybp/Gwvnh5fXv44V6/ruyaZ5LV6Kz9OKMzL+hFE9xBdPXvC7jzcXt+O7GcmzsTvQwHQej8de+iYMl60RUdWJd5lyb18dWQx2ji/fjpjk5Hd8E/3dPT4PqO3rbrs+ZHTNsx7ApLShhl02fAojyq9uj3tEtZLyS+pxclocQIClV/rjiKC2BCb6lbilr8TBIQJb4s5vpsWZcXtXqnftb1Omcd9+LCqtesuufZl1a72+u6JQetUexB7CYsoMqXYtl1/3wPEMc+B0YgNfIkwyFw/RuLPSSQ1mdD+TgSxmGcSBa3V2cuesNiWiOp54TIjWkmRI507SYRt+w2bQcC0l3mbuww9xAwnVNQ9K76m8sG50Km4hXlmYjsSo4qDDI5AFLFwX7VadRNTuN5BAqoGScki6AyD+dFYky+/q8aCPNCOrwYF+/uy7D2v5UZkDqEKgWuYumArCIcGEF2GciXAVft7YBL8+2MUPW8ZDpFSvEaye6njy5R7bFpERnRU3f0ZJe4N+pHX/980/wGlLmfj40jktMtt+UsleNBkkerrOYrqrxWsjzPivq5ihhTad6U/GibI8CZZLfVOHkBZm5MmEcNlw3qPc8b+S6+TIRsJJCAWHabVhyP2CxGwNVm0ZevZHns2rLjUuZNwFIcknUjuYAoxN/uKNjHSk+K7+TfIknJR7kO2NryI+OU64SgbKZOaoysvmgKnEizVPJekm4bP2TgkPNd4SbJGyxCdtM0E/D1F00RWlNHGCcZE/2eXgi2SbbAKVZz8D+UPpkpiPx9Mi/5l5P5YXA9knQXI32jS/9b2aBFu2DQ1QJQYGnqS7loSudstkXq7wA/83r3ontWc846nrPN63bHrW0SuBNJ65P4s2Qrp/vvofUb</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463359587</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B56C9C6B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02011_AccountDelete_FUNC_NonCS_Deleting_an_account_when_Account_Blocked_and_User_forcedeleted_P1" searchProperties="true" id="19f243e1-0e8b-48f0-9fde-3b7821270ea6"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="8a18125a-420d-47f8-a5e9-34d371e9b533"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="f433cf3e-714a-4225-8652-d32c4f8aacad"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="f7c35cf9-67ea-4264-9043-d30290b97289"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="4003dcef-9b68-4039-8c12-2e25e0be9806"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set User Status" id="6bc12f9b-3663-4308-8059-2c3459b8efa1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","forcedeleted");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="7b3fa58a-cebd-4e8b-b53a-fe713cb1019a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","ACCT_INACTIVE");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35B3E14F6B78E05305991F0ABA86</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CCBBCD37A6E05307991F0A9C25:F8AEDDDF"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B3E14E6B78E05305991F0ABA86</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B3E14E6B78E05305991F0ABA86</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35CC6D086B80E05305991F0A0CC0</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35CC6D086B80E05305991F0A0CC0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH49CYiCQRAWJW3vo9kKBdnv2ZeU6A7gkNo0dCP31xw4NBUp72CMhIU/GM99c/M2cCRxH5aAlBCSScmb0uw3zt1fz3bKLHQs5btWqTvCT5YduzUIQuth1fVx3iWn0hUihz4TETDbMsoOqluNZyB8jN6j6QblachD6ZRoPkAhlWqmUHNPI4oiJIHfbMNOEBRwLKgKGYxCBJMGodX0VKM0AF5jM5tkGZe4wac6kXAS2TUohEIgiUiI8ts/sPZ2zUAQjOmVYpgm8+QxFw3y7u1qtSqtKiSdTu+w4ju34ttIJBZ1+N5vfissQ9tmEb84dzDijBEf0FWtQ1yBnPDRa0ZQnVM7iT0wjGznatAUZsQiqsu+m/e4gR3eipT2QicCWmGFUGBvCBBJgBIz7Yb9hfj+tgpu74wQzMeFJLA7OfwYJ2BIivoDQEkVkBbrTLR5JV/MMSNBnJEoFXcKNbpMFJiCMQQITml1RoZovFEZefiMT6keLLgPyJ2U5s3exKuj2kex06RSE/D81263XxsoDjlJoPmX1mwTWHhPnNw+UX9SmOB3DLxR5XiOHsKu8AbUt99v5sFm3vfV2KfHJpFvz138N7muLdWURvcAYCR/dViH+++rnwK9cV+9x+uB3yQXEz4POo38eZdOLl2zVvqzxweVcrB9TvJzfvQ6/TTrpKKw/4PnV5T9yAQLNu7d94D96ycyee/7dYHRXW87r3vOt24Y47ceYX5LHezGruyzrlenr8xR56R1nF/Hq27A+vvBn1dfn9s9aNRLn5atq4z2m3Rj2hQUljNKnZyCyOOr26HeNc1UvLL+mFy2hoTXJVYOF5ighgUmzqW9paglSRUA0DFQxN2fHOe9V3E6n1nW8Wttzeo5bcVzfR+dOy+l0nIKDNigOIHY4m1DtS7Pspn++BkjiQAALIbGWPCUzEOYXFrtYYqPPhupxcCZgzBWLo2TKK06YidihgCYvcfT86q/hdemaxg2Xt+w2aU0kJPvc7e1x9xAIXVDQBK87XKgWF1Il4wUvUxmh0hKXGKRqBCSahdU9z7UFjRcRaKh2zMM0gtJitshTY4vNf9nCROTSYW+cv7xPAzv8VuRA6YRUKwgdSxtUHeHIEEJFIJ8GXEa7ARfmW2lI9QNTCZUJJRsk+5/e+0Q3yLZJVES/O6PfqMC9VT/5+seb9heg7MN8bB2FS7rjtpimakAo+mgW1XzBpZdSulymef3qmhoTZd5WDInsEZBU8dt6zOfA7K0J+6TxskV94Hkr38eXyhkbSSwhVt1m5McTdosRCL1b9NU7yU5dXPZcqrxJyOQxWSdSK4hG/OWWQgKi9ZR4oP5WPAnfy3XE1o4fFadaKCRlU33Sg2T9SVMQrsxSxXw82TV+zMAx5/vCbZK3WKTqpqdUwudfDE1pDRMTwlMm+10zF+zSbI5TrhcQvCt9MJNT+dtszsSns/nx+mqkCC/G5laX/reyRfN2IWDqFSDH0jAztWoq52y6Q+tvAD8ye7vSQ9VerV33dpm93fJq2wTuRdL8IP4o2cnp4Xto/gs=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463363046</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35CC6D096B80E05305991F0A0CC0</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02012_AccountDelete_FUNC_NonCS_Deleting_an_account_when_Account_Blocked_and_User_other_P1" searchProperties="true" id="2afb9ef1-c320-4f8c-b40e-a0242abd04e8"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="742ba4f3-eec3-4ff4-8fe0-fdf890b211e7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="46fe0ef9-9d53-4b84-919c-a1a3ccdffc3e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="eb0f1dc6-9e3d-47f9-97b7-fe37b7e2c0e3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="9bdcc499-fce1-4f49-9e09-285812859f89"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set User Status" id="eafab28a-1f0c-44d4-83a0-90bcf0032ddd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","other");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="33730787-6240-4bda-9cc6-8c178d55671e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","ACCT_INACTIVE");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CDBA65379EE05307991F0A9FE6</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35B42E063798E05307991F0A5105:7F062BB5"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CDBA64379EE05307991F0A9FE6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CDBA64379EE05307991F0A9FE6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35BEA0FE6B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35BEA0FE6B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH1HIhXCLClIK9DS7lLaEbvf0ZWWcCZgmDo2dAPvr1w4NBUp72CMhIU/GM99c/M1cMBRHluMyBiknCVW8fkf9ZdlmswnhVJtCu6bZtVZdQ3WzprVbdsNoNqaNhmGpisdYBh5lHFHeUS3DtDWjpZntiVl37LZjNat1w3pSlR+QMmFaqFQNVVnHEWVO4bajZil1EsQIcyiKgTkcO757M3SEpoNKTGr3YouycJh255wvHV3H1QAwRBGu4iTWL/QDnYuAOT6ZUcSzFF59Bqyjvt5drVbVVa2apDPdMgxDN9q60AkYmX1Vu1/KyxB4NEy25x6iCSUYReQ3kqBugM+TQHGjWZISPo8/MG3qpiFNa7DGGjZt+lXV3xwU6M60dAAyZUhjc2SWxsYQQgoUg/Iw9jrq1/MquL07SRFlYZLG7Oj8d5CA5hAlSwg0VkZWojvf4ol0dS8AOx7FUcZIDiPZJkuEgSl3KYRkPSRMNF/AlKL8ypqJHym7DPDflOVC38cqoOsnstMnM2D8/9Rsv15bKz9QlEF3Gj0OB/g6v59Hv3leqVjD724zGW5GfaNTQNhX3oLalfv1fNysu956vdSP1pVW/M1+/IdeR9btYDa6HbugG7kfu+g2n3iznxZ5ur8L2t+syg/7sXI9ukmeenPsGunCfyI++9db1GtXRniFvvimO5nC/OXnxr5/GKGHUaUWLhqjcJPcTRrX07W/6c0Ar4w6og+P+ZhSGlSeeTN9HgytaxIas7BVufMi8v07S7+s3Pjh2br3XNN/uI179ecF7rzFtB/DobCkBD+bLgDz8ijbw+srV6JeiH9OL1JCAi0sVJ2l5CjGgXK1K29JanEyQUAkcEQxt2fDuBrU6pcDV/w3Llv2wKjXjHq7bV4Z7pV7WS85aIviCGIvoSGRviTLbvvnc4A4dhjQAFItTzI8B6Z+YrGPOFI8OhaPI6EMJolgcXOREpjaWZYkc8vMbByz8PdiGuQLVRkl/Jbepm7IIT3k7tYBd48BkyUBSfCyw5loccZFMl5QnvHIrOaoSiETIyCVLOxYdquuMxIvI5BQ9TgJsgiqy/mySI3Otv+WhjArpOPBpHh5HwZ2/K3MgdAJiFRgMpZLEHWEE0PILAP5MGDL3A+4NO9mAZEPTCSUpwRvkRx+eusT2SC7JhER/er5v8wS90797Ovvb+qfgNKP87FzFORkz205TcWAEPTRLav5gqov1SzPs6J+TUmNqTCvC4Y0dR9wJvhtM0megeo7E/pZ42WH+sjzTn6IL+Nz6nPEIRbdphTHM3YLH5jcLTzxTtbnLi4HLkXeOKz5KVkvEiuIRPzploIdLPWE+E78rZI0eCvXCVt7fkScYqHghM7kSQ6SzQdNgRNhlgjmS9J946cMnHJ+KNwleYeFi26aZhw+/qJISuuoCOMko9zrq4Vgn2YLnHyzBOdN6Z2ZgspfZ/OafTibf94MfUF4MVJ3uuS/lTVStAsGVa4ABZaOuharpnBOZ3u0/grwPbP3+pduw64124OC2ZtbZm8Lst8l8CCS7jvxe8leTo/fQ/cP</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463366692</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35BEA0FF6B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02013_AccountDelete_FUNC_NonCS_Deleting_an_account_when_Account_Blocked_and_User_blocked:tou_P1" searchProperties="true" id="b00bf893-3b8f-4a21-9618-0d88402de059"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="526b4e3d-93bd-4598-8c7e-9daf56af2d3d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="723fa3e4-6798-4d18-ad24-27fb54d98f8e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="5c7c19ef-49e8-431a-927d-7254ccc03d30"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="fa1a28dd-3dfa-464b-8d91-514475692d42"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set User Status" id="d1ac5c0b-71a0-4631-ae9c-89d0420d5b16"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked:tou");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="09ff707d-e25c-4a64-8fd9-e53741b5d73f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","ACCT_INACTIVE");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35B511596B7CE05305991F0A6AA3</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35B3E16A6B78E05305991F0ABA86:ACD55452"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B511586B7CE05305991F0A6AA3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B511586B7CE05305991F0A6AA3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B48DD06B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B48DD06B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH1chNygQFaRw6R5aoJRQ1O3LynUGcJvYIXaA7q8/dmgoUNrDHgkJeTKe+ebib+aSozhyPJ9zSAVhVOt1GvrvMMRly3EvjNCxL4xyGSGj9oTKhmXXK1YVaq5bBV3rcZ5Bj3KBqGjojmVLhZph1yd2xSvXPdcuWW79UdemkHJpWqqULF3bxBHlXu62oWcp9RjihHsUxcA9gb3AH/Q9qemhApPevNyizB2mzYUQiWeauBQChijCJcxi89I80LkMuReQOUUiS+HNZ8gb+tvd9XpdWrslls5Nx7Is06qbUifkZP5db34rLkPYozO2PbcRZZRgFJE/SIEagFiwUPOjOUuJWMSfmLZN21KmDdhgA9tl+l033x3k6M60dAAy5cjgC2QXxsYwgxQoBu1+3Gvo38+r4PbuJEWUz1ga86Pz30ECuoKIJRAavIisQHe+xRPpal4C9noURxknKxiqNkkQBq6NUpiRTZ9w2Xwh1/Lyaxsuf6ToMsB/U5ZLcx+rhG6eyE6HzIGL/1Oz/XptrUxRlEGzH06C+fAxHndv6XVvvFlOHgZOa35f861GDmFfeQtqV+6383Gz7nrr7dJ02emTuhiNUhr0g5E/2tyNKGXPxJ2StjtnV3ft4eNiFNijFru1xWP1iSf+IIn+adnTTjeJ7ye3afxn/GstquNvP6d3bDJ4mLar/fs79NwZrgYmDq99s+2mmIfBOvvx4MxefmUPLH6ZTe7+XA3dG76+Rl1rgto/f1xYN/hXvc575nD8rZ32+2ayGLnzC1G366ubZbfxHtN+DIfCghKC7OkZsCiOqj16He1K1guJr+lFSUhozHJVL1EcxQVQoTfVLUUtXiYJiISeLOb2bFlXXbfSKtc6HeuiVfW7VsW1KvW6fWX53a7bKjhoi+IIYpvRGVG+FMtu++drgDj2ONAQUmPFMrwArn9hsYME0np0LB8HoxwmTLK4HVac8pNYAEIsWRJnTrOqA/Hrk64Nmbilt6k/E5AeUnftgLrHgElCQPG7anAuO5wLmYslWmUisksrVKKQyQmQKhL2nHKtYnISJxEopGbMwiyCUrJI8syYfPvvGAjzXDruTvKH92lcx9+KFEidkCgFrmJpgSwjnJhBThHIpwE79n7AhXk/C4l6XzKfIiV4i+Tw03ubqP7Y9YiM6Hc7+G0XuHfqZ1//eNP8ApR5nI+do3BF9twWw1TOB8kezaKaS1RalrLVKsvrV1XMmErzpiRI2wwAZ5LeXifsBai5M2GeNV12qI887+SH+DKxoIFAAmLZbVp+PGO1CICr1aInn8nm3L3lwKXMm4CNOCVrR3IDUYi/XFKwh5WeFI/k35ql4Xu5Ttja8yPjlPuEIHSuTmqOvH7SFJhJs0QSH0v3jZ8ycMr5oXCX5B0WIbvpKRPw+RdNMVpDRxizjIpeR88F+yyb4xSvCXjvSh/M5Ez+Npo3/NPR/DDoB5LvYqTvdMl/KxskbxcsF1Opn2Np6Bu5aUrndL7H6m8ATxB7xbYrNUns7X1iv/B9d5fAg0iaH8QfJXs5PX4PzX8B</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVfXkuq6En3nKyj2I8U4EkzNTJUcAAMmmfxyyshyACec4euPDAMbZs/sO+c+gVqt7tXBraXXSHMdug2iCIWx7XtlWXyr/EM2aKizFFPjds16jUVQq7VYg6ohrlFvci1GJxFbKctRlCDZi2LNi98qNIn1Sa5GNecU265TbbL+wjTq20p5icIIm8YqL2SlnLuOF7Uvbt8qSei1fS2yo7anuShqx7CtAmXYxppt7Yap8v56RXlxGL5bcRy0CQK+6Agix4Ev0HeJV+JJ51WP2qptelqchOjDpx69VT7OZln2kjEvfmgSNEmSBMkRWEePbPNX5b10O4x02TP861rQPN+zoebYZ60ApaDY8vUycEw/tGPL/cY0RVBkYbqGcliDFOv9qhC/HVzQ/dDSE8gw0mqRpVE3YzNkoBB5EJUXM/mt8utnFbyenYeaFxl+6Eaf1v8NEvJS5PgB0mvRLbIbup9b/CJd768ItmUPOklkp2hUtEmgQRSVJyEy7HxoR7j59Kh8KX85j24dhuB/Kckr8YgTwya+yIxomyiK/596PdbqamWpOQl6t1o5HPSthDa6q5lY7x/5xenITBciD94uEB6Vr6Dupf5Yf27Ue199HBL9lDzxOW+ezbE9GgHmJLnmJB2hqX6Y1VOKRzonpKtO0NnO2ON5HBPQW4TqMXUpLrGo40A7o6aZLSiaVUtwMvaXwt53/Qmot4bjMNcFnqRGLY2RW0sbTlhgu9XZpo9kWo9nyi7s0rwn9A122jMEjRKWFHkKd/Oqu9mWCD9pVM0GMfa31WadDSzPfPsd02MMRVwDdLoEWfxf10lO1GLtvhCKSWHgzzNG74osC1VREAASTJDJPDBlfngGI948HK2D3eUykgfTRQeI4KTMQCaaG3E5nQ6kTF8une1S7nR4ZcZmPbARS3hDlPKluF33SW21DTZ0h9yqPK+vZ/6O6Qd675D1LDhS5ko2mssnZS/lo7lEri4yM8frs7JXqPF8wZRWe55TZlImZhePopRZo+1qFmwWXAbP0lQBbBdQC0mwlN7cXVKQmVlwLw0VcLjIeUsRlksll+ZgUuLN0RLHNhc62wC6erBzHevBeA8bn+vd5WnXdZLtWdorgtQV1GNXlXeMOJX6YLZZ7FbLg7bqpCXYG4HdzaNdt7W1n5nbViZON/2Bv5WtFI7AVOL5KcDpIoEid/vA7/JAwQXPz8Keb/iC3smIPh2VqpzTbaxP9nEdaV3S0ahWi9oMV43JsSFKXnU7SHZ7S7HWnXF1oOrpgou58yZKq2lDsymYB8Z0LfXiQW70pmppNxHzNexVdbNPOGeuEyrNPgjPJ8tRzFm8aoyj0842jBW/HrNO03AUZhYYjhGcourcnx5CssEjhiY2p3QQl4Cp8AB094s9P1X4VpFUXc6mG4XXQEeKE3De0/GAXh77vdSBGwb4+WA13h8+CqOLmcQT2VTCbSWVWiLQiyL01IXU2YMFb5ohb0odfgpFMN3Ig2yD87XoYeXPeexc8mhKPJCYLWhwvRKzILl4HKssC04ev/A6nKUc85XecMnmEUlDdRSwmRKNDG+78g+Ka4eLMFEXg8FomO/mSfewx7PKINVBymxLUnoIgD0azK2D6IvaJNhs4qDqwRDGcuAqcn4eb6N9y965ZL9ap/gJKcImvXB32aKrSdtBaKrUoDfzJkyTK0WJceq51X0rW1XnaiNo6oJniKcTsQ2XpA/8DjerH/Wcpg/WIhs2MqMPDjuNHuUOx584abCdw2w2HaxUt1ov1dPh0CXPc4IdBeNM7WasNJ1WGZ2f9+ZRENqbpGXm4djT6Y0WN9ItuWzYgXPg6OQwZwNmabq4WJNUD5rKpDRl13Drms0A9okZkQKpaQzl7ml31s6BO4bXAfp5OtyF1/lBPE6Wp9FzIx0q7lYE49uyuIBksdzBt4IW/53AFBJbrxkX1XZQsKAoRl5ceS9OFeSlnWCKY+ttfGVc11KDazQ69UaLFZpA6rASyZJUhwRkneNIttW4sZwrik8QBd8z7MJXweOut9TfAUK3HSFPR2Et9RNooajyF4tFvsqyN8PXr+9FaO5jntjqNCSOYzmaYZtNhmuRDC1QVAu3DckKlMRVyiM/HnvjEBgxCp85YvOJI84QtAMbFUSyuE0jfJ1GMU7JUUuT2KFeUu3FQwmmmmHB9to026oTke0GDioAE66vJw56CazgkiAiuv7SNQ1GF+lMmv8jq8Llpv82xM97t2xgHd0uFKIiHh7hiqI/CC/Zrt+C+TZomnwM+mYeJLpdXOg4tXFowyuS563fHVO0yr1dcFQ3yHfNz4Inq8TngO6O9NSG956/Pwcwm8R84/1WkqP2cnxJ0jS5FKFZcKkQmycogmwSKoIJJkSnuX9AHnE3QfyIi95Rf/J8lz/jS2LLU2P8Pbu4ZcqX5Q8eIiqKioeIjFs+/+kr58klzluM8vgrmeDg90qB+K9PGtiGhR4WT/BP5of673J9YevBD46zGGC2ZxargnmevmkK6GOzNh5ifvho/CsDXzl/Ft6TfMcS427aJTH6fqdcTKe3igahn3ixLFYugseJecEZnwLU/q30h5kL9/sg83n0LZlfK0MVzy5Xq9x17f+tXLMv7QIRPhXZFyxvlRy/S7Fzz3yY0B8AvxjSPMe3yBZNc89DmmPuCXyK5P0P8Z+Sh5x+/h7e/wU=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463370263</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B48DD16B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02014_AccountDelete_FUNC_NonCS_Deleting_an_account_No_ManageAccountConsent_Policy_P1" searchProperties="true" id="26b115c9-a627-4a1e-8862-b6236fa8b28e"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="fc963034-7917-447b-9870-5f12eaa5fc46"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="604af840-c9f3-40cc-b458-8eb2c19b2383"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="91b3ca05-ca53-4fa0-b46d-071acbc26493"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Update MAC Policy" id="e05ea227-4fdd-412b-9436-bb0204decd45"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_Policy_Status")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","deleted");
myTC.setPropertyValue("Policy","105");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));
myTC.setPropertyValue("UserName",tC.getPropertyValue("UserName1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="6eda4a23-fcd5-4a78-a536-23dd7e01ff49"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","NO_MNG_ACC_CNST");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CC839537A2E05307991F0A444C</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35B4F4D2379CE05307991F0A189A:862D27A3"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CC839437A2E05307991F0A444C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CC839437A2E05307991F0A444C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35BF56866B96E05305991F0A65D7</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35BF56866B96E05305991F0A65D7</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZrU/I6EP7ur+jUj05pC+XWEWYQUPseULmIly9OSBcItgk2KVR//UmKRUD08J4ZZphsN7vPXvLsnnMUBnm3wTlEgjCqea2a/oKKGJcqY98YV0t5wyn5ZaMydkpGsYzBmlQKFYRKuuZxHoNHuUBU1PS8ZTuGVTHs6tAuuk7VLTi5qu0869oIIi5NS5WcpWtJGFDupm5rehxRlyFOuEtRCNwV2B00uh1Xaroow6TXz9coU4dRfSbEwjVNnPMBQxDgHGaheW7u6Jz73B2QKUUijuDTp89r+ufd1WqVWxVyLJqaecuyTKtqSh2fk+mpXj/JLoPv0Qlbn5uIMkowCsgHUqC6IGbM1xrBlEVEzMIfTNumbSnTBiTYwLZDT3Xzy0GK7khLOyAjjgw+Q3ZmrA8TiIBi0O77Xk0/Pa6C67vDCFE+YVHI985/BwnoEgK2AN/gWWQZuuMtHkhX/Ryw61EcxJws4Ua1yQJh4NpdBBOSdAiXzedzLS2/lnD5I1mXAf6bspyb21gldPNAdlpkClz8n5pt12ttZYSCGOo06YjVcHFnN+a3zavCQ+/67p8g6pVbwVMthbCtvAa1Kffneb9ZN731eal79wYJmi3+OOOb0aQ1hNHHatAqnLH5ffn+7qoSdm7a/eC1GybRe7t326icjW+fLvph9/pV9Abkcs4fO1f05u1sMZidWL1e8PHQmTtPfp5Z7W7jetz2zp5HrNi1ko8iXEXBgzXKmxMxeygLj102IW6iXv+hvLy69pYT6+IPiqaPFXiy8yfvwwkLngPxFKHnUavARqFV+4ppO4ZdYUYJg3g8Byyyo2oPr6Vdynoh8Tu9KAnxjUmq6i4UR3EBVOh1dUtRixtLAiK+K4u5PlvWZbtQvLgsliql0kW11LaKBatYrdqXVqNUbJUzDlqj2IPYZHRClC/Fsuv++R0gDl0O1IfIWLIYz4Drv1hsIYE0j/bl42CUw5BJFicf73Nc+piHZYuNx8lsRbnlhBbStRsmbult1JgIiHaZu7LD3H3AZEFA0bvqby4bnAuZije0jEVg55YoRyGWAyBSHOzmnUrR5CRcBKCAmiHz4wByi9kiTYzJ1/95A2GeSvvtYfrufgxr/1uWAanjE6XAVSwXIKsIB0ZQPgvkx4Dz9nbAmflG7BP1vGQ6RUTwGsnup68uUe2xaREZ0Utz8GJnuDfqR1//ftP8BZS5n4+NI39Jttxms1SOB0ke9ayabyj3louXyzitX1kRYyTNm5IfbXMAOJbs9j5kr0DNjQnzqOGyQb3neSPfxReLGR0IJCCU3aalxyM2iwFwtVl48pUkx64tOy5l3gQk4pCsGcgFRCH+dUfBLlZ6Unwn/1Ys8r/KdcDWlh8Zp1wnBKFTdVJj5P2HpsBMmiWS91i0bfyQgUPOd4WbJG+wCNlN41jAz180RWg1HWHMYiq8lp4Ktkk2xSneF+B+KX0zkxL552RO+I+T+bHbGUi6C5G+0SX/rWyQtF0w6GoBSLHU9EQumtI5nW6R+ifA77zebFYKVadQbuRTXi+ved1xnOYmgTuR1L+Jv0u2crr/Hur/Ag==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463373967</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35BF56876B96E05305991F0A65D7</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02015_AccountDelete_FUNC_NonCS_Deleting_an_account_which_is_suspended_P1" searchProperties="true" id="6fcbf95f-b053-414d-a58c-24a101efd2fd"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="78083e34-eb38-4371-8d79-8700bc43a3ac"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="28d4f35a-d426-48d7-8e72-87997f61f8da"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="5bdb110e-8251-4694-8d86-84977db5d3c2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="fdb01ea5-921c-45f3-b253-1afbf0930e37"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","suspended");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="8d0ec32e-b8a3-46ae-81e4-cdca501441a7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","ACCT_INACTIVE");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35BEA1246B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CEC66A6B94E05305991F0A1B73:D91884D1"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35BEA1236B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35BEA1236B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B48DEB6B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B48DEB6B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZpb+I8EP6+vyLKfqxCEq6GqCBxpIiWXlzb9svKOBPibWKH2OH69euEhgKlfdlXQkKejGeeOfzMXHEUBkW7yTnEgjCq9Dp19XepWLFQrQyaCYC0slvEmmV5nmZVTasE1QpG07Kq9DhPoEe5QFTU1aJhljXD0szayKzY5Zpdsgplw3hVlQnEXJqWKgVDVVZhQLmdua2rSUxthjjhNkUhcFtge9i869tS00Y5JrVxtUWZOYwbvhCRreu44AKGIMAFzEL9Sj/QuXK5PSQzikQSw7tPl9fV97vL5bKwLBVYPNOLhmHoRk2XOi4ns59q40d+Gdwe9dj23EaUUYJRQDYoBXUHwmeu0gxmLCbCD78wbeqmkZrWYIU1bJbpT1X/cJChO9PSAciYI437yMyNDcCDGCgGZTzo1dWf51Vwe3cUI8o9Fof86PxvkIAuIGARuBrPI8vRnW/xRLoaV4DtHsVBwskC7tM2iRAGrjzG4JFVn3DZfC5XsvIrKy5/JO8ywP9Slit9H6uErp/ITofMgIv/U7P9em2tTFCQQMNZBv1BP4A1Re3LX8+EG+Puq39r9qlTzyDsK29B7cr9fj5u1l1vvV+KgC35ePL4azN/ubmGbvXSGXWfnPHwBvl/7jr9TdVstU08GUZ0cTe9eBnfjF/02rh1M+9W/e78flOqkc5ksHpx8fpHTa96FnMSI3h9vmDdxDMepo7f1Z+ebpb92zB+Y7R9ISbD6a/Ncn597xPWI6z0ao2emnqnWX7uTR4W0Zo9tgI6+3Fp8A23hqLmz7oXZnO1vn2rf8S0H8OhMKeEYTL9A1jkx7Q9eh3lWtYLie/pJZUQV/MyVTtKOYoLoEJtpLdSarETSUDEtWUxt2fDuHZKlVbZ6jitauuy6RiVklGp1cxro+k4pVbOQVsURxDbjHok9ZWy7LZ/vgeIQ5sDdSHWFizBPnD1G4sdJJDSowP5OBjlMGKSxd+suRcx+UrWpQ1jvBJCsPbEdKkq90w80Ie46QmID5nbOmDuAWASEUjpPe1vLhucC5mKOVokIjALC1SgkMgBEKccbBfLVkXnJIwCSIHqIXOTAAqRH2WJ0fn2v6ghzDPpwBll7+7LsI6/5RmQOi5JFXgaSwtkFeHECCrmgXwZcNHcDzg330xckj4vmU4RE7xFcvjpo0vS9ti1iIzod3v428xx79TPvv75pv4NKP04HztH7oLsuc1nqRwPkjwaeTXnqDAvJItFktXvMiXGWJrXJT+a+hBwItltPWJvQPWdCf2s4bJDfeR5Jz/ElwifDgUSEMpuU7LjGZvFEHi6WfTkK1mdu7YcuJR5E7ASp2TtQC4gKeJvdxRs41RPih/l35LF7ke5Ttja8yPjlOuEIHSWntIxsv6iKTCTZonkPRbvGz9l4JTzQ+EuyTssQnbTNBHw9RclJbS6ijBmCRW9jpoJ9kk2wynWEdgfSp/MZET+PplX/MvJ/HzXH0q6C5G60yX/rayRrF0wqOkCkGGpqyu5aErndLZH6u8AT/C60zSLpWrLKu/z+nWzVdkl8CCSxifxZ8leTo/fQ+Mv</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463377602</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B48DEC6B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02016_AccountDelete_FUNC_NonCS_Deleting_an_account_which_is_blocked_P1" searchProperties="true" id="5665bf46-4d6a-4ad2-afa4-2a1fbb9c6480"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="1e704ec5-997f-4011-8678-b17be1ee5d3d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="bb0ca795-659e-4532-a48c-a85553fb5ca8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="b1667f26-2a39-4905-85ab-7f5e7d9a212e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="df91b1c0-ba7d-4110-8f36-2354c3309133"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="e7fbb443-fb30-493e-9838-0763e4ca606a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","ACCT_INACTIVE");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35B478FF379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35B511766B7CE05305991F0A6AA3:DD9C55BC"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B478FE379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B478FE379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35BEDC446B8AE05305991F0ABD1F</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35BEDC446B8AE05305991F0ABD1F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSxyrkQrgkKkhct7SUdgvbCy+VcQy4TewQOyHw69cODQVKe9gjISFPxjPfXPzNXDIQ+JbbYAxFHFOi9No19bU0KZplr2RpFce0Ndu2oTaxQFUrWhOnWgKwbJtTVekxFqMeYRwQXlMtQ6gaVc10RmbJtR3XNguW4YxV5RFFTJgWKgVDVdLAJ8zN3NbUOCIuBQwzl4AAMZdDd9i47btC0wU5JrV+uUGZOYzqc85DV9dhwUMQ+T4sQBrol/qezqXH3CGeEcDjCH349FhN/bi7XC4Ly2KBRjPdMgxDNxxd6HgMz87V+ll+GXk9MqWbcwsQSjAEPl4DCeoW8Tn1lIY/oxHm8+Ab06ZuGtK0hlKoQdMm56r+6SBDd6KlPZARAxqbAzM39oCmKEIEIuXPQ6+mnp9Wwc3dUQQIm9IoYAfnf4OESIJ8GiJPY3lkObrTLR5JV/0SQbdHoB8znKCBbJMQQMSU+whNcdrHTDSfx5Ss/ErKxA/nXYbgv5TlUt/FKqDrR7LTxjPE+P+p2W69NlYegR+j+oXRXdw8Xy0qI7t7/9ZkvxajJ326WsTV21oGYVd5A2pb7o/zYbNue+vj0mDmvWALrd6uViSZ3QT2YNz5kw7CRdTv289h7HtVZ83ofaPpdTsrYzEpjso+ubN7jxN4ffXrKrRb3dbkBjvF9+ZZg3nhL7BG3TKdjtcvL8vFS/lqAaD/No6fLviS/06GnE2LrVv27tDVc2ClIPSnv3uWoQ8eg3Hx5SJJk5f7p9HF8uzm5iKaR61wfN2/foxp7NvV2mdMuzHsC3NKGMaTNwR5fpTt0WsrXVEvwH+mFynBnjbNVN1QchTjiHC1Lm9JanFjQUDYc0UxN2fD6HaKpWan3bLtcrPa6BilolFyHLNrNJpts5tz0AbFAcQWJVMsfUmW3fTPzwBh4DJEPBRpCY3hHDH1B4ttwIHSIw/icVDC0IgKFjfBW7UCU/C+Xr6vzThh3AHQTqPiRFUGlN+Ru6gx5Sja5+7qHnc/IIhDjCTByw5nosUZF8lYgCTmvllIQIGgWIyASLKwa9nVks5wEPpIQtUD6sU+KoTzMEuNzjb/lgYgy6QPnVH28r4N7PBbngOh42GpwGQsTSTqiI4MoWIeyLcBW+ZuwLn5Ruxh+cBEQnmE4QbJ/qfPPpENsm0SEdFra/hq5ri36idf/3pT/wGUfpiPrSMvwTtu82kqBoSgj3pezQUoLApxksRZ/SqSGiNhXhcMaepDBGPBb6sRfUdE35rQTxovW9QHnrfyfXwxn5MhBxwFotuU7HjCbjFETO4WPfFO0lMXlz2XIm8cpfyYrOWLFUQi/nFLgS6UekJ8L/6WNPI+y3XE1o4fEadYKDgmM3mSg2T1TVNAKsxiwXw02jV+zMAx5/vCbZK3WLjopknM0fdfFElpNRVASGPCe201E+zSbIaTr0Lkfip9MZNR+cdsTtm3s/n5tj8UhBcAdauL/1tZw1m7QKTKFSDDUlNTsWoK52S2Q+sfAI8wu12piv+Ks2H2yobZnVbH2CZwL5L6F/FXyU5OD99D/S8=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463380544</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35BEDC456B8AE05305991F0ABD1F</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02017_AccountDelete_FUNC_NonCS_Deleting_an_account_which_is_archived_P1" searchProperties="true" id="b56b5d7c-8fef-4a08-8a50-d56e1bf0adad"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="dd057355-8d50-465f-a5a5-35e29f8f2127"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="fb1084e7-0c5e-4ac1-bf16-5729acfc9eb3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="3e2027a0-1483-44da-b681-41f406888b83"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="3ebcfb45-6643-4155-a4ce-0f7e8d73a4b1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","archived");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="ea2beae5-2091-44ab-a662-bdebf826a852"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","ACCT_INACTIVE");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CCD6EA37A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CDBA9C379EE05307991F0A9FE6:F7102FEA"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CCD6E937A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CCD6E937A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B42E253798E05307991F0A5105</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B42E253798E05307991F0A5105</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4jxljG9sBewIz3NI6TQgB0ubkpaPIMijYkrEkcPrrj2RiAoTk0JPJDKP1avfbi77dCwbSpB50GEM5x5RoYb+l/7bccwfWo3PDaUaR4fp1y/CRFxlN27aA6543nrymroWMCRQSxgHhLb1u2a5hNQ3bn9pe4PqB69Zsp/moaz9RzqRpqVKzdK1IE8KC0m1LFzkJKGCYBQSkiAUcBpPOzXUgNQNQYdLbFxuUpcO8Pec8C0wT1iIEUZLAGqSpeWHu6VxELJjgGQFc5OjVZ8Ra+uvd9XpdWzs1ms/MumVZpuWbUidiePZVb3+pLqMoJDHdnHuAUIIhSPAfoEDdID6nkdZJZjTHfJ5+YNo2bUuZNlABDWi75Ktuvjko0Z1oaQ9kzoDB5sCujI1RjHJEINLux2FL/3paBTd3pzkgLKZ5yg7OfwcJkRVKaIYig1WRVehOt3gkXe0LBIOQwEQwvEJD1SYZgIhpoxzFuLjGTDZfxLSy/FrB5D+uugzBvynLhbmLVUI3j2Snj2eI8f9Ts916baz8BIlAbev5ejE6u5t0Sf4Yp8vrrI/F+KzwaURbJYRd5Q2obblfz4fNuu2t10t3dHafPpx1I2eyHF+NR2nxOGiKrGfejaz6feGtYrS2xHc2fUiHi3g6/O5fzUaLGLG7q9GKgPNbcgm93mIu6MvySz97+Sc0f/zwfi279rdwED5N3AZ3byLKG4JddXsZPcuy5vPEG+Lx7bn9SzgpZf3bs3Sw7AKzPluksXgc3q2LH/GX9OnP+tvi2e8W89i/cV6iIW29xbQbw76wooSJeHpGkFdH1R5hX7uU9QL8c3pREhwZcakaZIqjGEeE6211S1FLICQB4SiQxdycLety4Hhdtz6oe07Dbw4sz7Eavm9fWh3PtryKgzYoDiD2KImx8qVYdtM/nwOEacAQiVBurKiAc8T0Tyz2AQdaSMbycVDC0JRKFrftdAVz23q282JuL3k8swRqQIf4ujak/Jbc5p2Yo3yfu5t73D1GEGcYKYJXHc5kizMuk7EEK8ETu7YCNYKEHAG5YuGg7jY9k+E0S5CCaqY0EgmqZfOsTI3JNr91A0BWSseDafnyPgzs8FuVA6kTYaXAVCxdJOuIjgwhpwrkw4Dr9m7AlfmOiLB6YDKhPMdwg2T/01ufqAbZNomM6Hdv8tuucG/VT77+/qb5CSjzMB9bR9EK77itpqkcEJI+2lU1l6C2rInVSpT1ayhqzKV5UzKkbU4QFJLfXqZ0gYi5NWGeNF62qA88b+X7+ASfkwkHHKWy27TyeMJuMUFM7RahfCfFqYvLnkuZN44KfkzWS+QKohB/uqXAACo9KR7JnzXNo7dyHbG140fGKRcKjslMndQgefmgKSCVZrFkPprvGj9m4JjzfeE2yVssXHbTk+Do4y+aorSWDiCkgvCwr5eCXZotcfKXDAVvSu/MlFT+OpsL9uFsfri5nkjCS4G+1cX/rWzgsl0g0tUKUGJp6YVcNaVzMtuh9VeA75m91+ufD3yn0dlj9q782yZwL5L2O/F7yU5OD99D+18=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463383442</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B42E263798E05307991F0A5105</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02018_AccountDelete_FUNC_NonCS_Deleting_an_account_which_is_other_P1" searchProperties="true" id="2d73261d-52f6-4fed-b4d1-9dedf508de2e"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="068b2950-fcae-4f50-8f25-8a8d89413e16"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="517740c4-291c-41ef-8fb9-6667292455cf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="3a6c9282-d9aa-479b-8f1c-93e8905ced5d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="3ad5bf81-3611-411d-81e3-00842abd1951"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","other");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="621b9907-6061-4580-93de-25342d02282c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","ACCT_INACTIVE");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CC6D476B80E05305991F0A0CC0</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CE611337A4E05307991F0A2173:36461FBB"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CC6D466B80E05305991F0A0CC0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CC6D466B80E05305991F0A0CC0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35C6F8D86B92E05305991F0A81AF</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35C6F8D86B92E05305991F0A81AF</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtc6o6EP7eX8HQjx0EFBWZ6oyCtpxb+yK2p6dfOjEETYVESVDrr78JFqvW9nrujDNOls3us7tPnuSSgSQuO23GUMoxJYrvNdXXUdWsW2a9qpUhCDWrEda1EbArmlWx62bZtsL6yFAVn7EM+YRxQHhTLRumpRm2ZjaGZtWxGo5VL9UqlRdVeUIpE6GFS0nsWiUxYU6etqlmKXEoYJg5BCSIORw6Qbt/4whPBxSY1NblBmWeMG1NOJ85ug5LIYIojmEJ0kS/1Pd8LkPmBHhMAM9S9JEzZE31Y+9yuSwtKyWajvWyYRi60dCFT8jw+FxtnRWbUeiTiG7WLiCUYAhivAYSVB/xCQ2VdjymKeaT5JvQpm4aMrSGVlCDpkXOVf0zQY7uxEh7IFMGNDYBZhFsgCKUIgKR8jjwm+r5aRPc7B2mgLCIpgk7WP8dJEQWKKYzFGqsqKxAd3rEI+1qXSLo+ATGGcMLdCtpMgMQMeU+RRFe3WAmyBcyJR+/smLihwuWIfg3Y7nUd7EK6PqR7nh4jBj/PzPbndcmyhOIM9Sao3m2fMFw/QatoG5Z997a7wN9OiV+M4ew67wBtR33x/qQrFtufWzyonf6+NTFGPzudd11/7b9u+d612HiP9eCf/q/bjJ6e5FeRd06uRjfGHTqPlfI9QsEnfUfa/Hw9jKZPy4vPAAjs3PWq1y4ljd7f1i3h3+8x8bz9K496NzicgdUHhb2xTVbD66ox+2neRL5XXN85a/f2ndo/as7GIa2PejHqWc8e/b07upsGVzzmAXl5PqJuHZUz4KH5mdNuzXsGwtJCLLRG4K8WEp6+J7SE/MC/Gd5kRYcalHu6sykRjGOCFdbcpeUFicTAoRDRwxzszaMXrdSdWs927NrnUa5a1QrRrXRMHtG2zbbvUKDNigOILqURFjmkiq74c/PAGHiMERClGoLmsEJYuoPET3AgeKTgTgclDA0pELFzWpokrH1BiZTOjbBIhrxxdwYvRuhqtxSfkfu0nbEUbqv3faedg8QxDOMpMBLhjNBccZFM+ZgkfHYLC1AiaBMXAGpVGGnbNlVneFkFiMJVU9omMWoNJvM8tbobPNf1gBkuXXQHeYn79vCDr8VPRA+IZYOTNbSQWKO6MglVCkK+bbgsrlbcBG+nYVYHjDRUJ5iuEGy/+mTJ5IgW5KIil7d4NUscG/dT97+daf+Ayj9sB/bROEC76QtblNxQQj5aBXTnIPSvJQtFlk+v7qUxlSE14VCmnqAYCb07X1Ip4jo2xD6SdfLFvVB5q19H1/GJyTggKNEsE3Jlye8LQLE5NvCF+dkderDZS+l6BtHK37M5sbiCSIR//hKgQ6UfsJ8L/6WNA0/x3Uk1k4eUad4UHBMxnIlL5L3b0gBqQiLhfLRdDf4sQDHku8bt03eYuGCTaOMo++/KFLSmiqAkGaE+56aG3ZlNsfJ32fI+XT6EiaX8o+7ecW+vZuf+zeBELwEqFtf/N/OGs7pApEqnwA5lqa6Ek9NkZyMd2T9A+ARZXdrnlWrdWxjV9kN1/3k8l4lrS/mr5adnh6eh9a/</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463386943</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35C6F8D96B92E05305991F0A81AF</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>role</con:name><con:value>nodeIdRTL</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:${#Project#nodeidRTLCS}</con:value></con:property></con:properties><con:tearDownScript>if(context.expand( '${#Project#runTeardown}' )=='true')
	{
	log.info("Executing TearDown for Suite '" + testSuite.getName() + "'");
	
	for ( testCaseResult in runner.results )
	{
	   currentTestCaseName = testCaseResult.getTestCase().name;  
	   currentTestCase = testCaseResult.getTestCase(); 
	   log.info("Current TestCase : '"+ currentTestCaseName + "'");
	   log.info("Current TestCase Status : '" + testCaseResult.getStatus().toString() + "'");
	   
	   if ( testCaseResult.getStatus().toString() == 'FAILED' )
	   {
	      log.info("Re-executing failed TC");
	      def currentRunnerTC = currentTestCase.run(null, false);
	      log.info("Status on re-execution : '" + currentRunnerTC.status + "'");
	   }
	}
	log.info("Execution of TearDown for Suite '" + testSuite.getName() + "' Completed" );
}</con:tearDownScript><con:reportParameters/></con:testSuite><con:testSuite name="AccountDelete_FUNC_CS_P2" id="22b1be1a-c122-422a-9c12-38c0037b153d"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02001_AccountDelete_FUNC_CS_Deleting_an_account_which_is_pending_P1" searchProperties="true" id="01915057-7e2c-4d5e-bc2c-6d109fc8cae8"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="abed8d9d-f73e-47f8-9ea0-778c22e812ec"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="f89bf2f0-3143-4df9-b18b-a34b2fad087d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="7ddde416-b59e-4725-8cb5-92948ccde754"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Update Account Status" id="632bad43-3213-4aff-85d4-dbe71fbb7b09"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","pending");
myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Retailer_CS" id="b82f1eec-6275-4860-8f0a-3c5682ee65fd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="1f16cad8-4a59-48a4-af2b-2eca4d657ea8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="636e95ce-2e04-4081-bc9d-487cac7a3b1a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35BA2A8637A0E05307991F0A50EB</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CC83CB37A2E05307991F0A444C:CD93551F"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35BA2A8537A0E05307991F0A50EB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35BA2A8537A0E05307991F0A50EB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B4F4EF379CE05307991F0A189A</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B4F4EF379CE05307991F0A189A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+o4EH7vr4jSx1WIE0IhUUFKuZxS6GWBXrYvleM44NPEhtjh0l+/diAUKO1yVkJCnoxnvrn4m7nkMIltz+ccp4IwqnVbdf3NCaFtR0FoXFTdwHAi2zLghW0btWoQBOXAAq4d6VqX8wx3KReQirpuA8sxQM2w3JFV8RzXq4CSWwWvuvaEUy5NS5US0LVlElPu5W7repZSj0FOuEdhgrknkDf0b/ue1PRggUlvXK5R5g7TxkSIqWeaqBRihOMYlRBLzEtzT+cy5N6QjCkUWYo3PkNe1zd3F4tFaVEusXRs2gAAE7im1Ak5GZ/rjbPiMg67NGLrcxNSRgmCMfmACtQtFhMWan48ZikRk+Qb05ZpAWXawEtkIMuh57r56SBHd6KlPZAphwafQKswNsARTjFFWHscdOv6+WkVXN8dpZDyiKUJPzj/GSRM5zhmUxwavIisQHe6xSPpalxi5HUpijNO5vhOtckUIsy1hxRHZNknXDZfyLW8/NqSyx8pugyjPynLpbmLVUI3j2SnRcaYi/9Ts916ra08wTjDjfvBzXP6KPrBr+dl5XGYDRepDeKP1sMDqOcQdpXXoLbl3pwPm3XbW5tLvevFe+LevtDW5AMzh47+uXArSxret+1+txpOHkGaVchrPLQuXsTvm+tALIObzmjx1MbVpDa4I3dlG5R75Nq5CM+u2cjHV2LxHtWeqqtfVm01vnuYgKfZvEn9mfmreZ8mQ7fT7/U+mtH78yRp/9USI9fJeq/N1eMV/3viR1nHjzu9K/MM1JJepR8M3v2gz24r4H3Urn/GtBvDvrCghGEW/MZIFEfVHt2W1pH1guJnelESEhpRrupNFUdxganQG+qWohYvkwREQk8Wc30GoNMuV66cjtPulKtusw0qZVB1XasDfKvm+gUHrVEcQGwyGhHlS7Hsun9+BogSj2Ma4tSYswxNMNd/sNiCAmpdOpCPg1GOR0yxuMWcWRhklpiOLUHIan4xiyy44Lp2x8Q9vU/9SOB0n7pre9Q9wIhMCVb8rhqcyw7nQuZiBueZiK3SHJYozuQESBUJe7ZTq5icJNMYK6RmwsIsxqXpZJpnxuTrf9uAiOfSQXuUP7xv4zr8VqRA6oREKXAVyxWWZcRHZpBTBPJtwLa1G3Bh3s9Cot6XzKdICVoj2f/02SaqP7Y9IiN6aw7frAL3Vv3k619vmj+AMg/zsXUUzsmO22KYyvkg2aNRVHMGS7NSNp9nef2qihlTad6UBGmZQ4wySW+rEXvH1NyaME+aLlvUB5638n18mZjQoYACJ7LbtPx4wmoxxFytFl35TJan7i17LmXeBF6KY7JmLDcQhfjHJQV5SOlJ8YP8W7A0/CzXEVs7fmSccp8QhI7VSc2R1TdNgZg0SyTxsXTX+DEDx5zvC7dJ3mIRspuCTODvv2iK0eo6RIhlVHRbei7YZdkcp1hNsfep9MVMzuSb0bzk347ml9v+UPJdAvWtLvlvZYPk7YKwrjaAHEtdX8pNUzqn4x1W3wA8Quy+7dcq5aoPdom9AtpX2wTuRdL4Iv4q2cnp4Xto/As=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdbk6q6En73V1iuR8sBFEGsmakKFxUV71dedmEIiHKTgKC/fgcdXTprZp3Z50nT6XR/faHz5RUbnlttAoxRFDuBX1Tlt9I/sGbxNGfAikGzVoU1BLoiWAhVWM40eMusV2lGKBVVjBOk+jg2/PitRGS1Ci1UGHrGMM1ao1nnXlimqpeKCxRhYpqovNClYua5Pm5e3L6VkshvBgZ2cNM3PISbMWxOgdZvEs2mccNUen+9orw4jN63cRw2KQq+mAgi14UvMPCoV+pJ59XEzalj+0acROjDp4nfSh9n0zR9SWsvQWRTVZqmKVqgiI6JHftX6b1wO4xM1beC61oy/MB3oOE6ZyMHpaF4G5hF4NpB5MRb7xvTDMXQuekKymAFMqz/q0T9dnBB90NLTyAjbFTw1mBuxibIQhHyISrOJ+pb6dfPKng9O4sMH1tB5OFP6/8GCflH5AYhMiv4FtkN3c8tfpGu91cEm6oP3QQ7RzTI2yQ0IMLFUYQsJ+s7mDSfiYuX8hczfOswBP9LSV6pR5wENvVFZmTHRjj+f+r1WKurlYXhJujd3Az9NIrj2AyrDb5BeccumC5lmtHttwuER+UrqHupP9afG/XeVx+HgH6QAEWFHW+43wWCyLOzATQyqC43IyFgww6KDHleXfBhnwnP7GFSV5aOMRqMeQLMtI6Gmkq4fPYtY68VOlun7ojlyBsmPWdxpgd+bX5QyhvHX/P9APM06YFso8/XEh+zHD0x1Ho2yDY0lyJFreKyARJ1vOLHOsesCo59ED3KmdTrKdAXYuZt12+/Y3qMIY+rh06XIPP/qzotyEZs3BdSPiks8nnG6F1TVaksSxJAkg1SVQS2KvbPYCDa+8N277SFlBbBeN4CMjhpE5DK9lpejMc9JTUXC1dfqK2WqE3YtAPWcoFsyEq2kPVVlzaWeriutmh9KormahJsat3Q7OzTzhYOtJmWDmbqSdsp2WCm0MuLzM7I+qztNGY4m9cKy50oaBMlldOLR1lJtwN9OQnXcyGFZ2WsAbYNmLkibbXOzFswsDbZwp3S18D+Ihe3mrRYaJkyA6OCaA8WJLaZ1NJD6JnhxnO3D8Y7xPjMbC9Om7ab6Gdlp0lKW5oe2lN1U5PHShdM1vPNcrE3lq1jAXYGYHPzSEpsrILU1hupPF53e4Gubo9wAMaKKI4BSRcNNLXdBUFbBBoLnOws7UQukMxWSnWruFAW3Da3OjmHFTbatGswjQaz7i+50YGTFb+s95LNbqttV61huTc1j3MhFs5rfCwfOcNhYBZa45XSiXuZ1RlPC5uRnK1gp2zaXco9C61I47sgOp+2rmZP4iU3xKeNY1lLcTVkXd5ytdoktFwrPOHyLBjvI5oTUa1KrU/HXlwAtiYC0N7Nd+JYExt5Uk01Ha810QAtJU7AeVeNe9XFods5unBdA0HWWw53+4/CmHKqiFQ6VkhbKYWGDMy8CJ3pXGntwFy07Ui0lZY4hjIYr9Veuib5mneI8uc8ti55tBURKDUdcEKnUJvTQjyMpywLTr4491vCVjtkS5PzaP6AlP50ELKphgeWry+DveY50TxKpvNeb9DPNrOkvd+RWWXR096xpheU4z4EzqA32+7lQDZG4Xodh2UfRjBWQ09Ts/NQx7uGs/HobrnOiCNahnx17m3SedtQ9F5kT5leZ+KParxQwIl16njlXSNdlmdTLuRNybfk04nSowUdgKAlTOoHM6tW99t52udSqwv2G6M6yFxBPAlKT5/BdDLuLadeuV6oH/t9jz7PKHYQDtNpO2WV8bhcM8VZZ4bDyFknDTuLhr5ZXRsxd9TpBeeE7l6oJvsZG9YWtkeKNTqaIa+NCmN2BXXP5kPYpSbUESi81Vfbp83ZOIfeEF4H6OfpcBde5wf1OFmeRs+NdExJtyIY35b5BaTKxRa5FYz47wQmlzhmxbqoNsOcBeEY+XHpPT+Vk5dmQiiOYzbJlXFdKxzNKTItiVydkxotUaFZmmnRgOYFgZZ4+cZyrig+QZQC33JyXzmPu95SfwcIvSZGvomiyjFI4Bbh0l8s5vkqqv6EXL+Bj9EsIDyRVoSayHMyy9JyQ6ySvmbrXJ0XW4pYbzE8VyoOgnjoDyNgxSh65ojsE0ecIOiEDsqJZH6bYnKd4pik5GAck9hlXo7Gi48SQjWjnO01q2yjTmHHC12UA6a8wExc9BJuw0uCKHz9rVYMiC/SiTL7R51Kl5v+2xA/792yQXRMJ1fAeTwiIhVFXxBe9hbM90Hzj0HfzIPEdPILnaQ2jhx4RfK89btj8la5twuJ6gb5rvlZ8GSV+hzQ3ZF5dOC95+/PAcImCd94v5XkYLwcXpLjMbkUgc+5VETMUwxF89QUwYQQotMs2COfupugfsRF76g/eb7Ln/El8dafxuR79kjLFC/LHzxEpgjnDxGVtHz201fOk0uStxhl8VcyySXvlRzxX580sAlzPSIekZ80iMzf5frC1oMfEmc+wBzfzlc58zx90xQwIGYdMsSC6NH4Vwa+cv4svCf5jiUm3bRJYvT9TjGfTm8lA8Ig8WNVLl0EjxPzgjM+haj5W+kPMxfu90HmM/wtmV9p/SmZXZ5Ruus6/1u54lzaBSJyCjsXLG+ljLxLiXPffpjQHwD/GNKAURhRAIKkgE9DunVP4FMk73+I/5Q85PTz9/D+Lw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463390102</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B4F4F0379CE05307991F0A189A</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>99c61175-ca6e-4fe9-95b0-5f3d02f2072d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f670f80b-66f5-4521-ab74-f93f00d8ec73</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02003_AccountDelete_FUNC_CS_Deleting_an_account_when_user_is_not_active_P1" searchProperties="true" id="fbe83cc7-1e2b-4005-a7c7-dfdee34550fd"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="datasource" name="User_Status" id="91fbcd9f-2e93-4771-8e59-1e4d7858798e"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">forcedeleted&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">suspended&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">pending&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">other&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked:tou&lt;/con:entry></row></con:configuration></con:dataSource><con:property>Status</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="76222da2-bba1-4799-8f37-e80502387631"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="5f50f150-d3ef-4255-9604-5b0ce8affbb5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="e195b081-7276-40fb-8077-075dee783c29"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Update User Status" id="01d042f5-5e0d-436b-8929-0db18ce5a004"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def status = context.expand( '${User_Status#Status}' )

myTC.setPropertyValue("Status",status);
myTC.setPropertyValue("USER_OID",tC.getPropertyValue("USER_OID1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Retailer_CS" id="f4850cb3-71ef-47b6-9772-2eb644d1d133"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="aa04bda1-d8c1-4cd1-8a56-e3d99e731e33"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="b809654c-821e-4069-bad1-9c13ac604179"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

def status = context.expand( '${User_Status#Status}' )

		myTC.setPropertyValue("USER_STATUS",status);
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="05cec81f-0c13-4c36-b1f4-10d4a9e1c5af"><con:settings/><con:config><dataSourceStep>User_Status</dataSourceStep><targetStep>Establish Test Case Properties</targetStep></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CCD73037A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CE614737A4E05307991F0A2173:AB80C32B"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CCD72F37A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CCD72F37A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35BA2AC337A0E05307991F0A50EB</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35BA2AC337A0E05307991F0A50EB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZZc+I4EH6fX+FyHreMD25XoIpw7HoGAgEm10tKkRtQYktgyeb49SuZmACBLLOpVFFqt7q/PvR1X3MUBo7b4BwiQRjVvFZNfyk5yC8VwTfA9y2jUCwio2KVwShZUMRlu4zKJdA1j/MYPMoFoqKmO5ZdMKyKYVfHdtEtWq5t5exS6VnX7iHi0rRUyVm6tgoDyt3UbU2PI+oyxAl3KQqBuwK7o0av60pNF2WY9Pr1FmXqMKrPhJi7polzPmAIApzDLDSvzQOda5+7IzKlSMQRfPj0eU3/uLtcLnPLfI5FU9OxLMu0qqbU8TmZXun1H9ll8D06YdtzE1FGCUYB2SAFqgdixnytEUxZRMQsPGPaNm1LmTZghQ1sF+iVbn46SNFdaOkAZMSRwWfIzowNYQIRUAza76FX068uq+D27jhClE9YFPKj859BAppAwObSJc8iy9BdbvFEuurXgF2P4iDmJIFb1SZzhIFrgwgmZNUlXDafz7W0/NqKy3+SdRngPynLtbmPVUI3T2SnRabAxf+p2X69tlbuURBD/a5t3z5Vfzrr5w5uVVjFeUgm/cUdevuH11II+8pbULtyf5yPm3XXWx+Xohluv9v0Hsq9xV/Twf1bozRKnLBbKv66iQvjpw3eVJ8fWiR+3OBlMHFmr2+z9e3g1+gJFTzEBhg2rcW9HXRN5/3HsBD0yfzxdVCorESXs8nM7LSbd+9Pj9HP13WFrZ5+QyKq+Y1Ttn3aJ72WGL57cb/XGD5bCRqRfCd646bT7grvR5eu/75r9MnrQ6VbSthzNGa1z5j2YzgUZpQwil/fAIvsqNrDa2kdWS8kvqcXJSG+MUlV3bniKC6ACr2ubilqcWNJQMR3ZTG3Z8vqtPPFm4bTaObz5YbVtop5q1yt2h2rUbTaNxkHbVEcQWwyOiHKl2LZbf98DxCHLgfqQ2QkLMYz4Po3FltIIM2jQ/k4GOUgs6i/YLzB72+oukbEtxfMckIrnlTFQtdumejTftSYCIgOmbtywNxDwGROQNG76m8uG5wLmYoFSmIR2LkE5SjEcgBEioNdp1ApmpyE8wAUUDNkfhxAbj6bp4kx+fbXMRDmqXTYHqfv7mxYx9+yDEgdnygFrmK5AVlFODGCrCyQswE79n7AmflG7BP1vGQ6RUTwFsnhp88uUe2xaxEZ0Utz9GJnuHfqF1//etP8BpR5nI+dIz8he26zWSrHgySPelbNBcotcnGSxGn9yooYI2nelPxomyPAsWS39Zi9AzV3JsyLhssO9ZHnnfwQXyxmdCSQgFB2m5YeL9gsRsDVZuHJV7K6dG05cCnzJmAlTsmagVxAFOJvdxTsYqUnxQP5s2SR/1muE7b2/Mg45TohCJ2qkxoj6zNNgZk0SyTvsWjf+CkDp5wfCndJ3mERspteYwHnv2iK0Go6wpjFVHgtPRXsk2yKU6zn4H4qfTGTEvnHZF7xs5P5sdcdSboLkb7TJf+tbJC0XbDcS6V+iqWmr+SiKZ3T6R6pfwD8yuvNZqvsdCSvV/Z5/Ub+7RJ4EEn9i/irZC+nx++h/i8=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463409440</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35BA2AC437A0E05307991F0A50EB</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>99c61175-ca6e-4fe9-95b0-5f3d02f2072d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9c263e60-96bd-4c9c-9c64-ad6f469cfc89</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ce1f47c6-8e3d-4c44-9320-d57e0cc4e097</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>91fbcd9f-2e93-4771-8e59-1e4d7858798e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02004_AccountDelete_FUNC_CS_Deleting_an_account_when_user_is_Basic_P1" searchProperties="true" id="e28f00b0-426d-4aab-a513-3e93c1e0e279"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="5c5a190c-eaf1-42e0-8cc6-109055c42c9e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="8cb8128e-bb17-4525-b989-141a36d0584c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )


log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="0be5c7af-4773-465b-a5d0-41a64406c2d3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));


tC.setPropertyValue("LegalGuardian","");

//required for Child user Create

//tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID_FAU1"));
//tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call Adult BAU Create" id="9a8641e5-a9f6-4f9a-8881-202c73d01a65"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )

log.info country;

def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");


def myTS = tP.getTestSuiteByName("User_Create_API")



myTC.setPropertyValue("Country",country);
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="ab628a1f-cf19-4492-9adb-a8f001acc242"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Retailer_CS" id="76a91f21-0c08-45b5-b2f6-84e1a7c549bc"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="43be1c63-4627-45be-b26f-efd12f8b5b0f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="9d700602-4cb3-48b2-82a9-39ebb4d067a5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CC6D776B80E05305991F0A0CC0</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35B511BC6B7CE05305991F0A6AA3:C9D74F98"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CC6D766B80E05305991F0A0CC0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CC6D766B80E05305991F0A0CC0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B47956379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FE35B48E506B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B47956379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FE35B48E506B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+o4EH7vr4jSx1XIBUIgKkhcT3O29AKcdk9fKteZgNvECbETKL9+7dBQoLTLWQkJeTKe+ebib+aCoSi03A5jkHISU8Xrt9Snuu1bNq6amhEEjlazAktrPptVrWo5VtCoOdgPfFXxGMvAo4wjyluqZZg1zWhoZnNq2q5tuGa1Ypr1R1W5h5QJ00KlYqjKKgopcwu3LTVLqRsjRphLUQTM5diddEZXrtB0UYlJbV9sUBYO0/ac88TVdVzxAUMY4gqOI/1C39O58Jk7ITOKeJbCu0+ftdT3u8vlsrKsVuJ0pluGYehGUxc6PiOzc7V9Vl4G36NBvDn3EI0pwSgkayRBjYDPY1/phLM4JXwefWHa1E1DmtZghTVs1ui5qn84KNCdaGkPZMqQxubILI2NIYAUKAbl19hrqeenVXBzd5oiyoI4jdjB+c8gAc0hjBPwNVZGVqI73eKRdLUvALsexWHGSA7Xsk0ShIEptykEZHVFmGg+nylF+ZUVEz9SdhngPynLhb6LVUDXj2SnT2bA+P+p2W69NlbuUZhB+1eyGDXv0fzmte5NXyju6ZPbJIpu736zVgFhV3kDalvu9/Nhs2576/3S79HKZ/37y0V3du/MuyH3iGMH9uDV/+k9k4cfQ9SxSH+yyMOX7vVoYHfvfjpRfPsjIpd318/T/nA5u4W/n9HDaPR45vxYX/ovg4eU1f1x7bH69nDZDVYPlHfTYUOf1S8Xo2tMeSNPBrnZR04Gzc56Gl1dOcHspRk+5n+NGr2ktvKglp6hoHo5GQ9Gwzyyav66ueCj1kdMuzHsC0tKmGTPL4B5eZTt4fWVoagX4t/Ti5QQXwsKVTeRHMU4UK625S1JLW4mCIj4rijm5mwYw0HV7tacpl2vOs3OwLCrhtNsmkOj0+wNjJKDNigOIPZiGhDpS7Lspn++B4gjlwH1IdXyOMNzYOo3FvuII8WjY/E4YspgGgsWx+lryANirfN61Xxdrtcz2wgIz9eqch3zG3qTdgIO6T51N/aoewyYJAQkv8sGZ6LDGRe5WKA846FZyVGFQiYmQCpJ2LVqDVtnJEpCkEj1KPazECrJPCkyo7PNv6UhzArpeDAtHt6XcR1+K1MgdHwiFZiMpQuijHBkBhllIF8GbJm7AZfmO5lP5PsS+eQpwRsk+58+2kT2x7ZHRERPvcmTWeLeqp98/fNN/RtQ+mE+to78nOy4LYepmA+CPdplNReosqhkeZ4V9XMkM6bCvC4I0tQngDNBb2/T+BWovjWhnzRdtqgPPG/l+/gyPqcTjjhEotuU4njCajEBJlcLTzyT1al7y55LkTcOK35M1gvFBiIRf7ukYBdLPSG+FX/LOP0I/JitHT8iTrFPcEJn8iTnyNsXTYFjYZYI4ovTXePHDBxzvi/cJnmLhYtues44fP1FkYzWUhHGcUa511cLwS7LFjj5WwLuh9InMwWTv4/mFftyNP8zupoIvouQutUl/62skaJdMKhyAyiwtNSV2DSFczrbYfV3gJ+Jvder9516vdswCmK3N8Ru9HpbYt+PpP1J/Fmyk9PD99D+Fw==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+o4EH7vr4jSx1XIBUIgKkhcT3O29AKcdk9fKteZgNvECbETKL9+7dBQoLTLWQkJeTKe+ebib+aCoSi03A5jkHISU8Xrt9Snuu1bNq6amhEEjlazAktrPptVrWo5VtCoOdgPfFXxGMvAo4wjyluqZZg1zWhoZnNq2q5tuGa1Ypr1R1W5h5QJ00KlYqjKKgopcwu3LTVLqRsjRphLUQTM5diddEZXrtB0UYlJbV9sUBYO0/ac88TVdVzxAUMY4gqOI/1C39O58Jk7ITOKeJbCu0+ftdT3u8vlsrKsVuJ0pluGYehGUxc6PiOzc7V9Vl4G36NBvDn3EI0pwSgkayRBjYDPY1/phLM4JXwefWHa1E1DmtZghTVs1ui5qn84KNCdaGkPZMqQxubILI2NIYAUKAbl19hrqeenVXBzd5oiyoI4jdjB+c8gAc0hjBPwNVZGVqI73eKRdLUvALsexWHGSA7Xsk0ShIEptykEZHVFmGg+nylF+ZUVEz9SdhngPynLhb6LVUDXj2SnT2bA+P+p2W69NlbuUZhB+1eyGDXv0fzmte5NXyju6ZPbJIpu736zVgFhV3kDalvu9/Nhs2576/3S79HKZ/37y0V3du/MuyH3iGMH9uDV/+k9k4cfQ9SxSH+yyMOX7vVoYHfvfjpRfPsjIpd318/T/nA5u4W/n9HDaPR45vxYX/ovg4eU1f1x7bH69nDZDVYPlHfTYUOf1S8Xo2tMeSNPBrnZR04Gzc56Gl1dOcHspRk+5n+NGr2ktvKglp6hoHo5GQ9Gwzyyav66ueCj1kdMuzHsC0tKmGTPL4B5eZTt4fWVoagX4t/Ti5QQXwsKVTeRHMU4UK625S1JLW4mCIj4rijm5mwYw0HV7tacpl2vOs3OwLCrhtNsmkOj0+wNjJKDNigOIPZiGhDpS7Lspn++B4gjlwH1IdXyOMNzYOo3FvuII8WjY/E4YspgGgsWx+lryANirfN61Xxdrtcz2wgIz9eqch3zG3qTdgIO6T51N/aoewyYJAQkv8sGZ6LDGRe5WKA846FZyVGFQiYmQCpJ2LVqDVtnJEpCkEj1KPazECrJPCkyo7PNv6UhzArpeDAtHt6XcR1+K1MgdHwiFZiMpQuijHBkBhllIF8GbJm7AZfmO5lP5PsS+eQpwRsk+58+2kT2x7ZHRERPvcmTWeLeqp98/fNN/RtQ+mE+to78nOy4LYepmA+CPdplNReosqhkeZ4V9XMkM6bCvC4I0tQngDNBb2/T+BWovjWhnzRdtqgPPG/l+/gyPqcTjjhEotuU4njCajEBJlcLTzyT1al7y55LkTcOK35M1gvFBiIRf7ukYBdLPSG+FX/LOP0I/JitHT8iTrFPcEJn8iTnyNsXTYFjYZYI4ovTXePHDBxzvi/cJnmLhYtues44fP1FkYzWUhHGcUa511cLwS7LFjj5WwLuh9InMwWTv4/mFftyNP8zupoIvouQutUl/62skaJdMKhyAyiwtNSV2DSFczrbYfV3gJ+Jvder9516vdswCmK3N8Ru9HpbYt+PpP1J/Fmyk9PD99D+Fw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZZb+o6EH7vr4jSxypkIUASFSQIcBpOl8NS2tuXynUccJvYNHZY+uuvHRoKFHo5V0JCnoxnvln8zVwykMSW12QMpRxTogTtuvrs1CwEbNvRLMeuarZTrmkvllvWyq5bs0IrMpwXR1UCxjIUEMYB4XXVMkxbMxzNdEdmxasYnlkpmbb7pCpjlDJhWqiUDFVZJjFhXu62rmYp8ShgmHkEJIh5HHrD5s21JzQ9UGBSG5drlLnDtDHlfObpOiyFCKI4hiVIE/1S39G5DJk3xBMCeJaiT58hq6ufdxeLRWlRLtF0oluGYeiGqwudkOHJudo4Ky6jMCARXZ99QCjBEMT4A0hQN4hPaag04wlNMZ8mR0ybumlI0xpaQg2aNjlX9S8HOboTLe2ATBnQ2BSYhbEBilCKCETK/SCoq+enVXB9d5QCwiKaJmzv/HeQEJmjmM5QqLEisgLd6RYPpKtxiaAXEBhnDM/RrWyTGYCIKX9SFOHlNWai+UKm5OVXlkz8cNFlCP5NWS71bawCun4gO208QYz/n5pt12ttZQziDDX8i06kV+ftMXmqPsbd94teNyHdlkFxv55D2FZeg9qU+/O836yb3vq8RAersvv2cmHPZ/3pk1Ubu7VFdB0te1PbvKKjj492vxL8onSZYkhhf3JdG7cv7PDh4rX3Oh9VL+7813Y2Gt4uKEzPWm9PZvT7HqUhHQa8O1o8ZK+Pod3sPbRd8v6WPY6v7kdWb+CanK1a5X9wlPoTbFxd40FyZ7Z6v27sq85d3Aow9s/MFuusysseaffZ1GSu33fqXzFtx7ArLChhmL28IsiLo2yPoK10Rb0A/5lepASHWpSrejPJUYwjwtWGvCWpxcsEAeHQE8Vcnw2j2ylXWrbTqRjVVq3ZMSplo+K6ZtdodjrlVsFBaxR7EH1KIix9SZZd98/PAGHiMURClGpzmsEpYuoPFtuAAyUgA/E4KGFoRAWLU+vNJO+IEfjBJk4ingtlZPkBVeWW8jtylzYjjtJd5nZ2mHuAIJ5hJOld9jcTDc64SMU7mGc8NktzUCIoEwMglRzsWbZT0RlOZjGSQPWEhlmMSrPpLE+Mztb/lgYgy6WDzih/d0fD2v9WZEDohFgqMBlLS0SWogMjyCgCORqwZW4HXJhvZiGWz0ukk4snsUay++mrS2R7bFpERPTsD5/NAvdG/eTr32/qP4DS9/OxcRTO8ZbbYpaK8SDIo1FU8x2U3kvZfJ7l9atJYkyFeV3wo6kPEcwEu61G9A0RfWNCP2m4bFDved7Id/FlfEqGHHCUiG5T8uMJm8UQMblZBOKVLE9dW3ZcirxxtOSHZH4sFhCJ+McdBXpQ6gnxH/G3oGn4Va4Dtrb8iDjFOsExmciTHCOrI00BqTCLBe/RdNv4IQOHnO8KN0neYOGim14yjo5/USSh1VUAIc0ID9pqLtgm2RwnX82Q96X0zUxO5J+TecmOTubHm+uhoLsEqBtd/N/KGs7bBSJVLgA5lrq6FIumcE4mW6T+CfA7r/t+tV2rVluOsc3rhu8bmwTuRNL4Jv4u2crp/nto/As=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AccountDelete_user20130918_1379459446852</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463412417</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20140819_1408463414465</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B47957379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>00FE35B48E516B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b44627d5-7732-472b-b74e-aeac81a3f1ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02005_AccountDelete_FUNC_CS_Deleting_an_account_when_user_is_Controlled_P1" searchProperties="true" id="eaadda5d-aae7-4822-9a1d-786a85ed6904"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="4bd7e690-e107-4c8c-a275-14b0093b2c15"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="d05a22db-a7e7-4871-a9e4-9ccfbb2fd637"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="c5851b26-ea9e-424d-8262-0caf7c5836ae"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));


tC.setPropertyValue("LegalGuardian","");

//required for Child user Create

//tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID_FAU1"));
//tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call Adult SAU Create" id="bc43e58a-b654-4403-85f6-8129b3a59b3e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )

log.info country;

def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");


def myTS = tP.getTestSuiteByName("User_Create_API")


myTC.setPropertyValue("Country",country);
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="c63f612e-da80-43e7-8d92-f3f37b6270e7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Retailer_CS" id="dfab5fa4-66ba-4dd3-b47d-e9496a9cef82"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="55544a93-7013-41cd-933f-2812dc8aad25"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="e0f9f31b-7713-4b2b-b613-343da01ba8a2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CDBAF6379EE05307991F0A9FE6</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35BF56FB6B96E05305991F0A65D7:C4B21F06"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CDBAF5379EE05307991F0A9FE6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CDBAF5379EE05307991F0A9FE6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35BEA1816B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FE35BEDCAD6B8AE05305991F0ABD1F</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35BEA1816B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FE35BEDCAD6B8AE05305991F0ABD1F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj0chCYRCooIUAmzZLdCF3l9WxnHA28RObSdAf/2xQ0OB0h72SEjIk/HMNxd/MxccJHHV8zlHTGBKtEG3pf8GjagZ2U7DcBwEDKdac4xZ1aoZVWsWzsIaqDqzUNcGnGdoQLgARLT0qmU7htU0bPfGrnt1y7MbFdeuPenaHWJcmpYqFUvXVklMuFe4bekZIx4FHHOPgARxT0Bv6g+vPKnpgRKT3r7YoCwcsvZCiNQzTVgJEURxDCuQJuaFuadzEXJviucEiIyhN58hb+lvd5fLZWVZq1A2N6uWZZmWa0qdkOP5N719Vl5G4YBEdHMOAKEEQxDjV6BADZFY0FDz4zllWCyST0zbpm0p0wZaQQPaDvmmm+8OCnQnWtoDyTgw+ALYpbEJihBDBCLtdjJo6d9Oq+Dm7g0DhEeUJfzg/HeQEMlRTFMUGryMrER3usUj6WpfIOgNCIwzjnM0Um2SAoi4ds1QhFdXmMvmC7lWlF9bcfnDZZch+DdluTB3sUro5pHsdPEccfF/arZbr42VOxBnqF1Lsqdr2wpHdno+mZm4i9wRnjEQ/OCtAsKu8gbUttxv58Nm3fbW26Xx42sQ+2lefayGf7L7dEiHK2d9d8+i5+Hd9/piZYGlZdXXY3D5SjrR05o+2PcPE2cZTNyey53LxvJH+HQ9bvwYT8/6kfVnbo06/eCc5Wa3Fz6PBj9D3xo9TbPHoJn5t6Of6a0j6OWdn3d/mXTywobmc2K9BMvz56XfGAfrX5Puq2t3rs6a/fP19zv7n4dFENUvgytKYOs9pt0Y9oUlJUyz2R8ERXlU7THoan1ZLyC+phclwaERFapeqjiKC0SE3la3FLV4mSQgHHqymJuzZfV7tXqn59tN+7zTdHpWvWbVXdfuW37f79RLDtqgOIAYUBJh5Uux7KZ/vgYIE48jEiJm5DSDC8T1Lyx2gQDagEzk46CEoxsqWdwWszWuN3LiuDOXpyxmUb6EDbTQtREVYzJmfiQQ26fu5h51TxDEKUaK31WDc9nhXMhcvIA8E7FdyUGFoExOAKZI2Ks6zbrJcZLGSCE1ExpmMaqki7TIjMk3/1UDQF5IJ72b4uF9GtfhtzIFUifESoGrWDpIlhEdmUFWGcinAVft3YBL834WYvW+ZD4Fw3CDZP/Te5uo/tj2iIzodzD9bZe4t+onX/940/wClHmYj62jMMc7bsthKueDZI92Wc0XUHmpZHmeFfVrKGZk0rwpCdI2pwhmkt7WN/QZEXNrwjxpumxRH3jeyvfxZWJBpgIIlMhu04rjCavFFHG1WgzkM1mdurfsuZR5E2gljsmCWG4gCvGXSwr0oNKT4mv5t6TsPfBjtnb8yDjlPiEwmauTmiPrT5oCUmkWS+KjbNf4MQPHnO8Lt0neYhGym2aZQJ9/0RSjtXQAIc2IGHT1QrDLsgVOsU6R9670wUzB5G+jecU/Hc0Pw6up5LsE6Ftd/N/KBi7aBSJdbQAFlpa+kpumdE7mO6z+BvAjsQfdjt+v1xpuryD2xobY3X7vfJvAvUjaH8QfJTs5PXwP7X8B</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj0chCYRCooIUAmzZLdCF3l9WxnHA28RObSdAf/2xQ0OB0h72SEjIk/HMNxd/MxccJHHV8zlHTGBKtEG3pf8GjagZ2U7DcBwEDKdac4xZ1aoZVWsWzsIaqDqzUNcGnGdoQLgARLT0qmU7htU0bPfGrnt1y7MbFdeuPenaHWJcmpYqFUvXVklMuFe4bekZIx4FHHOPgARxT0Bv6g+vPKnpgRKT3r7YoCwcsvZCiNQzTVgJEURxDCuQJuaFuadzEXJviucEiIyhN58hb+lvd5fLZWVZq1A2N6uWZZmWa0qdkOP5N719Vl5G4YBEdHMOAKEEQxDjV6BADZFY0FDz4zllWCyST0zbpm0p0wZaQQPaDvmmm+8OCnQnWtoDyTgw+ALYpbEJihBDBCLtdjJo6d9Oq+Dm7g0DhEeUJfzg/HeQEMlRTFMUGryMrER3usUj6WpfIOgNCIwzjnM0Um2SAoi4ds1QhFdXmMvmC7lWlF9bcfnDZZch+DdluTB3sUro5pHsdPEccfF/arZbr42VOxBnqF1Lsqdr2wpHdno+mZm4i9wRnjEQ/OCtAsKu8gbUttxv58Nm3fbW26Xx42sQ+2lefayGf7L7dEiHK2d9d8+i5+Hd9/piZYGlZdXXY3D5SjrR05o+2PcPE2cZTNyey53LxvJH+HQ9bvwYT8/6kfVnbo06/eCc5Wa3Fz6PBj9D3xo9TbPHoJn5t6Of6a0j6OWdn3d/mXTywobmc2K9BMvz56XfGAfrX5Puq2t3rs6a/fP19zv7n4dFENUvgytKYOs9pt0Y9oUlJUyz2R8ERXlU7THoan1ZLyC+phclwaERFapeqjiKC0SE3la3FLV4mSQgHHqymJuzZfV7tXqn59tN+7zTdHpWvWbVXdfuW37f79RLDtqgOIAYUBJh5Uux7KZ/vgYIE48jEiJm5DSDC8T1Lyx2gQDagEzk46CEoxsqWdwWszWuN3LiuDOXpyxmUb6EDbTQtREVYzJmfiQQ26fu5h51TxDEKUaK31WDc9nhXMhcvIA8E7FdyUGFoExOAKZI2Ks6zbrJcZLGSCE1ExpmMaqki7TIjMk3/1UDQF5IJ72b4uF9GtfhtzIFUifESoGrWDpIlhEdmUFWGcinAVft3YBL834WYvW+ZD4Fw3CDZP/Te5uo/tj2iIzodzD9bZe4t+onX/940/wClHmYj62jMMc7bsthKueDZI92Wc0XUHmpZHmeFfVrKGZk0rwpCdI2pwhmkt7WN/QZEXNrwjxpumxRH3jeyvfxZWJBpgIIlMhu04rjCavFFHG1WgzkM1mdurfsuZR5E2gljsmCWG4gCvGXSwr0oNKT4mv5t6TsPfBjtnb8yDjlPiEwmauTmiPrT5oCUmkWS+KjbNf4MQPHnO8Lt0neYhGym2aZQJ9/0RSjtXQAIc2IGHT1QrDLsgVOsU6R9670wUzB5G+jecU/Hc0Pw6up5LsE6Ftd/N/KBi7aBSJdbQAFlpa+kpumdE7mO6z+BvAjsQfdjt+v1xpuryD2xobY3X7vfJvAvUjaH8QfJTs5PXwP7X8B</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH1chFwIkUUECAnvQlm4LlKV9WRlnAC+JA7EDob/+2KGhQGkPeyQk5Ml45puLv5kbhqLQ8pqMQcJJTJWeX1d/4yqUbbNmaq5RszXbMafatOpYWjWwgzIgw7FNpCo9xlLoUcYR5XXVMkxbMxzNdEdmxasYnumWXNt+VpUxJEyYFiolQ1WyKKTMy93W1TShXowYYR5FETCPY2/Y7N96QtNDBSa1cbNHmTtMGgvOV56u41IAGMIQl3Ac6Tf6ic5NwLwhmVPE0wRefQasrr7e3W63pW25FCdz3TIMQzdcXegEjMy/qo0vxWUIenQW789tRGNKMArJC5Kg+sAXcaA0w3mcEL6IPjBt6qYhTWuQYQ2bNv2q6m8OcnRXWjoBmTCksQUyC2MDmEECFIPyOOjV1a/XVXB/d5QgymZxErGz899BArqBMF5BoLEisgLd9RYvpKtxA9jrURymjGzgTrbJCmFgyn0CM5LdEiaaL2BKXn4lY+JHii4D/DdludGPsQro+oXs+GQOjP+fmh3Xa29ljMIUGosn3HEfoVv71hzOBms+euqtIew9jRxWzyEcK+9BHcr9ej5v1kNvvV56QI/4xfj1qC9wZfls/Cn/Mv55Tu5ryzGLv9md+4d+4s7jjRNGUXk3thDK3Ls/6Nm2kl2r6g5W45cHq3v/Y2qMQ+dLOlr6lE+NbAi7du05cq1te9JNrAn3ydjqr/9ZTbK+X4m7/P52uV77k8Ey0hfRbLLIvvdfHn58X85738p0y57KD1/sauJud/7G2t5lrcXktjOc199iOo7hVFhQwjCd/gHMi6Nsj56vdEW9EP+cXqSEBNosV/VWkqMYB8rVhrwlqcVLBQGRwBPF3J8No9spV1odv930qy2n2TEqZaPiumbXaLZ8s1tw0B7FGcR2TGdE+pIsu++fzwHiyGNAA0i0TZziBTD1E4s+4kjp0YF4HDFlMIoFi5vGKrSd6dSJzcrGdExnvqXrioM3tqrcxfwn/Zk0ZxySU+52Trh7AJisCEiClx3ORIszLpKxRpuUh2Zpg0oUUjECEsnCnmU7FZ2RaBWChKpHcZCGUFotVnlqdLb/tzSEWS4ddEb5y/swsPNvRQ6ETkCkApOxtEDUES4MIaMI5MOALfM44MJ8Mw2IfGAioTwheI/k9NNbn8gGOTSJiOh3e/jbLHAf1K++/v6m/gko/TwfB0fBhhy5LaapGBCCPhpFNdeotC6lm02a168mqTER5nXBkKY+BJwKftuN4iVQ/WBCv2q8HFCfeT7IT/GlfEGHHHGIRLcp+fGK3WIITO4WPfFOsmsXlxOXIm8cMn5J1g7FCiIRf7qlYA9LPSG+F3/bOAneynXB1pEfEadYKDihc3mSg2T3QVPgWJglgvni5Nj4JQOXnJ8KD0k+YOGim6Yph4+/KJLS6irCOE4p7/lqLjim2Rwn363Ae1N6Zyan8tfZnLEPZ/OkfzsUhBch9aBL/ltZI3m7YFDlCpBjqauZWDWFczo/ovVXgO+Zve23mt1KueZ2cmav7Znd7XaqhwSeRNJ4J34vOcrp+Xto/As=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AccountDelete_user20130918_1379459446852</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463417170</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20140819_1408463419236</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35BEA1826B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>00FE35BEDCAE6B8AE05305991F0ABD1F</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5da56a8d-11f7-4984-99b2-aa2ad88ae0d1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02006_AccountDelete_FUNC_CS_Deleting_an_account_when_user_is_Full_P1" searchProperties="true" id="7c873849-baec-4ef3-ad85-51eee88f622a"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="14def52a-3ce5-4b84-9573-116eee68c2b2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="c22aac62-21af-449f-b92c-add5a38c836e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="810da880-d329-48f5-8b36-d89755d9b8d6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Retailer_CS" id="65e26eac-03c5-4abb-b595-427b786d3042"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="faabcb41-abd4-4d41-ac46-0184fdc45738"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="2d12f59a-8d77-4635-b213-eb7d738cadb1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CCD75F37A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35BEA19C6B84E05305991F0AFAB5:3278FD87"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CCD75E37A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CCD75E37A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35CE615937A4E05307991F0A2173</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35CE615937A4E05307991F0A2173</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+o6EP7ur+jUjw70DSx0hBkEPKceOCpFr/rFCelScmzT0qQF/PU3KRYB0cu5DjNOtpvdZ3efPMkFQ1FoOh3GIOUkporba6kvVlOvo6lRq9ioZldq4Dcrkwn4lYmJwLBqSLdsQ1VcxjJwKeOI8pZq6sJfb1SM5tioO3XdMc3qecN+VpUHSJkILVyquqoso5Ayp0jbUrOUOjFihDkURcAcjh2vMxw4wtNBJSa1fbFGWSRM2zPOE0fTcNUHDGGIqziOtAttx+fCZ45HAop4lsJ7Tp+11Pe9i8WiurCqcRpopq7rmt7UhI/PSHCqtk/KzeC7dBqv111EY0owCskbkqCGwGexr3TCIE4Jn0VfhDY0Q5ehK7DEFWzU6KmqfSQo0B0ZaQdkylCFzZBRBhvBFFKgGJT7kdtST4+b4HrvOEWUTeM0Ynvrv4MENIcwTkQOVlZWojs+4oF2tS8AOy7FYcZIDr8lTRKEgSm3KUzJckCYIJ/PlGL8ypKJHylZBvhvxnKhbWMV0LUD3emRABj/PzPbntc6ygMKM2hPFoO4V/N+9m7PLDb+M10l58/33bPXEWu0CgjbzmtQm3G/r/fJuuHW+6Z0eD+OMtfS50+LUGMJ97p/vO4kSENTa3jDy8XDxH9LgmeD3dgLeLt77dc1NEBnM11rTH/4V3q3OTK7y8f8qfZ20hzp3rK3mj3mFP0cxEniL8zr6+Hl7Z35NPhh369m819WdP2YPzwa839uV7TZy3U3i6e1fJANQ1dPjSga+Yl/Hg1OrLtfc9vi/U6A7+qNoRXCsPVR03YNu8ZSErxs8gcwL5eSHm5PuRLzQvx7eZEW4lemhauTSI1iHChX23KXlBYnEwJEfEcMc73W9au+Ve/2z41607I7tb5et3S72TSu9I5p2FapQWsUexC7MZ0SmUuq7Jo/3wPEkcOA+pBW8jjDM2DqNxF7iCPFpSNxOGLKYBwLFX9FeMVCCKLVAgw2WdqBbzbCtyBQld8xv6E3aWfKId2V7saOdI8Ak4SA1HdJcCYYzrjoxRzlGQ+Nao6qFDJxA6RShB2z1qhrjERJCBKpFsV+FkI1mSVFZwTz1h2qIMwK66g/Lg7el3XtfytbIHx8Ih2YrOUSxBjhwB1klIV8WbBpbBdchu9kPpHnS/STpwSvkex++qCJ5MeGI6Kil673YpS4N+5Hb/+8U/sGlLbfj00iPydbacvLVNwPQj3a5TTnqDqvZnmeFfOzpTKmIrwmBNLQPMCZkLfVOH4Fqm1CaEfdLhvUe5k39l18GZ9RjyMOkWCbUiyPeFp4wOTTwhXHZHnsu2UnpegbhyU/ZOuG4gUiEX/7SMEOln7CfCv+LeLU/xjXgVhbeUSd4j3BCQ3kSt4jqy9IgWMRlgjhi9Pt4IcCHEq+a9w0eYOFCzZNMg5ff1GkorVUhHGcUe721MKwrbIFTr5KwPlw+hSmUPL3q3nJvryaH4cDT+hdhNSNL/lv5wop6IJBlS+AAktLXYqXpkhOgy1Vfwd4QNi7PbveF8Le2Bb2S/G3aeBOJe1P5s+WrZ7un4f2vw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463422021</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35CE615A37A4E05307991F0A2173</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c50d7050-ce98-470c-8b41-102eb3901cde</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02007_AccountDelete_FUNC_CS_Deleting_an_account_already_deleted_P1" searchProperties="true" id="d49fa174-dccf-4ced-9b55-6b0a977e2f81"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="37c0496e-c39d-46b8-bf70-e243d3a41ddd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="e59a38c3-52b0-4ebc-9b95-ff22f25e6f85"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="2fd15a55-931f-41e2-bc2e-c6deec0a8293"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="datasource" name="Account_Status" id="06695085-5696-4583-94dc-98be8da8664d"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">deleted</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">ACCT_ALREADY_DELETED</con:entry></xml-fragment>]]></row><row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">forcedeleted</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">SPL_CS_ALLOWED_ACCT</con:entry></xml-fragment>]]></row></con:configuration></con:dataSource><con:property>Status</con:property><con:property>Expected_Result</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="093f1a51-84f3-4a57-a542-a2675c044f5f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def status = context.expand( '${Account_Status#Status}' )
myTC.setPropertyValue("Status",status);
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Retailer_CS" id="b29d844f-503f-40e2-8877-859548f3d862"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="e918da09-a5ae-4547-a9fb-dd3fcf885919"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def expected_Result = context.expand( '${Account_Status#Expected_Result}' )


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete",expected_Result);

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="17161404-b97d-4393-9a82-6583f887aef9"><con:settings/><con:config><dataSourceStep>Account_Status</dataSourceStep><targetStep>Set Account Status</targetStep></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35BEDCC56B8AE05305991F0ABD1F</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35C6F92E6B92E05305991F0A81AF:44D90846"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35BEDCC46B8AE05305991F0ABD1F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35BEDCC46B8AE05305991F0ABD1F</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B42E8D3798E05307991F0A5105</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B42E8D3798E05307991F0A5105</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH6uQCwRIVJAogbNZUbpLoNvTl5VxJmCaOBA7QPvr1w4NBUp72CMhIU/GM99c/M1cM5TEltthDDJOUqr4Xkv9jexpA1XroBkhcrQaDpHmTJugWaYzxXZk2Y1aQ1V8xnLwKeOI8pZqGWZNM5qa6YxN27UN16pXjIb1qCr3kDFhWqhUDFXZJjFlbuG2peYZdVPECHMpSoC5HLtB53bgCk0XlZjU9vUOZeEwa885X7q6jishYIhjXMFpol/rRzrXIXMDMqOI5xm8+gxZS329u9lsKptqJc1mumUYhm44utAJGZl9VdtfyssQ+jRKd+cuoiklGMXkBUlQt8Dnaah04lmaET5PPjBt6qYhTWuwxRo2a/Srqr85KNBdaOkIZMaQxubILI2NIIIMKAZlMvJb6tfLKri7O84QZVGaJezk/HeQgK4hTpcQaqyMrER3ucUz6WpfA3Z9iuOckTUMZZssEQam/MggItsBYaL5QqYU5Ve2TPxI2WWA/6Ys1/ohVgFdP5Mdj8yA8f9Ts8N67azcoziH9nPiNYfewl942f1PI7lfm3c4HdrZVTRrFRAOlXeg9uV+PZ826763Xi+ttv2HwUsv/+fReLjbNKvf65N/54ufaLK6CkaPD/7YGdegR/DEehpug0n9qRuOsjga6OtfP8bfRhuif6PP45dRQ8/mX/rx9maNr/TID+rrCFUf6/0lv51NSG9gj2u44TujRjSjL3h49XgVVEcBi7orP517CcO3DxuHAH8Z2Y93/NfP+y+T77g/iYf25Ha6qMZeMEC11ltMhzEcC0tKCPLpAjAvj7I9fE/pi3oh/jm9SAkJtahQdZeSoxgHytW2vCWpxc0FAZHQFcXcnQ2j36vaNzWr1/SqDafZM+yq0XAcs290bNOwSw7aoTiB2E1pRKQvybK7/vkcIE5cBjSETFunOZ4DUz+x6CGOFJ+OxONIKYNxKljcgoWF6ttp8lxLzKbhRE98gSJnNVOVYcrv6F3WiThkx9TdPKLuEWCyJCD5XTY4Ex3OuMjFCq1zHpuVNapQyMUEyCQJu1ataeuMJMsYJFI9ScM8hspyviwyo7Pdv6UhzArpqDcuHt6HcZ1+K1MgdEIiFZiM5QZEGeHMDDLLQD4M2DIPAy7Nd/KQyPcl8skzgndIjj+9tYnsj32PiIh+d4PfZol7r37x9fc39U9A6af52DsK1+TAbTlMxXwQ7NEuq7lClVUlX6/zon4NyYyZMK8LgjT1AHAu6O15nD4B1fcm9Iumyx71iee9/Bhfzuc04IhDIrpNKY4XrBYBMLla+OKZbC/dW45cirxx2PJzsm4sNhCJ+NMlBbtY6gnxD/G3SbPwrVxnbB34EXGKfYITOpMnOUeeP2gKnAqzRBBfmh0aP2fgnPNj4T7JeyxcdNM05/DxF0UyWktFGKc55b6nFoJDli1w8ucluG9K78wUTP46mrfsw9H8cDsIBN8lSN3rkv9W1kjRLhhUuQEUWFrqVmyawjmdHbD6K8AzxN7zut1a/abZKYjd3hH7jWf29wk8iqT9TvxecpDT0/fQ/gM=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463425206</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B42E8E3798E05307991F0A5105</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9aba8db9-b07b-47b4-b23b-478559f4cc48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>06695085-5696-4583-94dc-98be8da8664d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02008_AccountDelete_FUNC_CS_Deleting_an_account_when_Account_Blocked_and_User_Pending_P1" searchProperties="true" id="10699d04-c492-47dc-a93d-8d9061c5d69e"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="6e5bd1bf-8582-45a5-8c83-110928a60bca"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="403c56b4-3063-4cc1-bc8a-d3d2e96d0bd4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="74c5388e-a2f8-4910-a770-b4b5da253b30"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="fdf06715-5055-4608-9ea0-e8196ab0a8b3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set User Status" id="3391cec0-ef30-4874-8ca2-903c5ad58b17"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","pending");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Retailer_CS" id="e4ae11ac-9d3e-4072-9f75-63d32b9fc56f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="549bdabb-1510-4034-bef7-ec7db127c19b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="c4ebc7ed-1f81-42ef-91b9-e7626290f352"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","pending");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35BA2AFB37A0E05307991F0A50EB</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35B47981379AE05307991F0A9CE0:23E50FDD"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35BA2AFA37A0E05307991F0A50EB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35BA2AFA37A0E05307991F0A50EB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35BF570D6B96E05305991F0A65D7</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35BF570D6B96E05305991F0A65D7</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH1HIBUIgKkjhdjZLy/YA7en2ZeU6E3CbOGnsQLq//tihoUBpD3skJOTJeOabi7+ZC4biyHI9xiDjJKGKP+yqv8xOu222WqFmdBoNrfmAA+0hQEgLAgg7yOlgC1qq4jOWg08ZR5R3Vcswm5rR1szOwrRd23CtTt1qOveqcgsZE6aFSt1QlSKOKHNLt101z6ibIEaYS1EMzOXYnXtXl67QdFGFSe1dbFGWDrPeivPU1XVcDwBDFOE6TmL9Qj/QuQiYOydLiniewavPgHXV17ubzaa+adSTbKlbhmHoRkcXOgEjy69q70t1GQKfhsn2PEA0oQSjiPxGEtQV8FUSKF60TDLCV/EHpk3dNKRpDQqsYbNJv6r6m4MS3ZmWDkBmDGlshczK2AxCyIBiUG5mflf9el4Ft3cXGaIsTLKYHZ3/DBLQNURJCoHGqsgqdOdbPJGu3gVg16c4yhlZw1S2SYowMOU6g5AUl4SJ5guYUpZfKZj4karLAP9JWS70fawCun4iO0OyBMb/T83267W1couiHHrtcW2w6t+Z/nTkIdu5/75IzX8WRdsOvG4JYV95C2pX7tfzcbPueuv1EtQGw2/T+HHEURvmjRurGMVr39443/qw/ns88oiemS1r0I/9/srXE/36vmM916bm9K7501gUm2V7Gdqdu1nuPX2ZT8y09mzdTtpP68srq90Ih5Nw8nD9/fGvde2hM0ETY9Z8HNtZ3v+2GLRWNSddLAp2NbUbLag9zx5NK/gd9rOnn2HwZf3i3EymN1T3fhtX13orvfG6bzHtx3AorChhnj88AubVUbaHP1TGol6If04vUkICLSxV3VRyFONAudqTtyS1uLkgIBK4opjbs2GMRw27P7YdY9jqd1ojw24Ydqdjjg2vZQ+dioO2KI4gDhIaEulLsuy2fz4HiGOXAQ0g09ZJjlfA1E8sDhFHik9n4nEklMEikSzONq1oiZpOWLxQE5OWY+IgXrbbgapME/6D/si8kEN2yN3tA+6eASYpAUnwssOZaHHGRTKe0TrnkVlfozqFXIyATLKwazXbts5InEYgoepxEuQR1NNVWqZGZ9t/S0OYldLZaFG+vA8DO/5W5UDoBEQqMBlLH0Qd4cQQMqtAPgzYMvcDrsx7eUDkAxMJ5RnBWySHn976RDbIrklERL8G819mhXunfvb19zf1T0Dpx/nYOQrWZM9tNU3FgBD00auq+Yzqz/V8vc7L+jmSGjNhXhcMaepzwLngt5dF8gTiiVYm9LPGyw71keed/BBfzld0zhGHWHSbUh7P2C3mwORu4Yt3Upy7uBy4FHnjUPBTskEkVhCJ+NMtBbtY6gnxtfjbJFnwVq4Ttvb8iDjFQsEJXcqTHCQvHzQFToRZIpgvyfaNnzJwyvmhcJfkHRYuuukh5/DxF0VSWldFGCc55f5QLQX7NFvi5C8puG9K78yUVP46mwv24Wy+u7qcC8KLkbrTJf+trJGyXTCocgUosXTVQqyawjld7tH6K8ATzO5Z3thrOJ5RMruzZXbbGPV3CTyIpPdO/F6yl9Pj99D7Fw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463428530</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35BF570E6B96E05305991F0A65D7</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>103fa1bf-6ea6-446c-944d-a4dd944d76a8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02009_AccountDelete_FUNC_CS_Deleting_an_account_when_Account_Blocked_and_User_Suspended_P1" searchProperties="true" id="69972659-18f3-4a68-bd37-76e0b58db64e"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="e4245165-5fae-495d-8417-033762fec52c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="59666e73-2b3c-4a92-bd69-e86f4c4d90e6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="ce34afa1-ac54-4cbf-b7c0-683ae1ce0831"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="543e3e84-83e0-448c-b432-6931e5d7ad89"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set User Status" id="187bda65-20b6-436d-bbdc-f6f28bb71304"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","suspended");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Retailer_CS" id="c04b1535-bdde-4096-906b-afeb61613a2e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="69a47cb2-bf12-4b19-a10e-e285ad10e87c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="f447ceb1-71f3-45f5-8cb6-f091b6c22210"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","suspended");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CC6DA86B80E05305991F0A0CC0</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35B42EA93798E05307991F0A5105:E860E32F"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CC6DA76B80E05305991F0A0CC0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CC6DA76B80E05305991F0A0CC0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35BA2B0837A0E05307991F0A50EB</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35BA2B0837A0E05307991F0A50EB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH6uQC0mBqCAlXHazp+225dJuX1bGGcA0sdPYCXR//XFCQ4HSHvZISMiT8cw3F38zFxzFkeV6nEMqCKNK0Gurv62G3TqfWqHWclBLs7ERagimMw01mnXbxhZYdkNVAs4zCCgXiIq2ahmmrRlNzWyNTMd1DLdu1VqW/agqE0i5NC1VaoaqrOOIcrd021azlLoMccJdimLgrsDu0Lu6dKWmiypMaudig7J0mHYWQiSuruNaCBiiCNcwi/ULfU/nIuTukMwpElkKrz5D3lZf765Wq9qqXmPpXLcMw9CNli51Qk7mX9XOl+oyhAGdsc25iyijBKOI/EEFqCsQCxYqXjRnKRGL+APTpm4ahWkN1ljDpk2/qvqbgxLdiZb2QKYcaXyBzMrYHcwgBYpBGd8FbfXraRXc3B2liPIZS2N+cP47SEBziFgCocaryCp0p1s8kq7OBWA3oDjKOMnhumiTBGHgyk0KM7K+JFw2X8iVsvzKmssfqboM8N+U5ULfxSqh60ey0yNz4OL/1Gy3XhsrExRl0PHH59fP19PezTipd8Xj07zX/2UO/HjiBO0Swq7yBtS23K/nw2bd9tbrpcc+g/zpNo2XY+fx8mwyTsY3o9XirD/17BfcevrnHthslN+fPVw9hPX7ZpisLn9ky6S38mbQ/QZnfLWePP2YO4P69Mt3I//hsbP75pIYYz8Yec54qF/9GV6OWlHP+5Y+xg80sJ+Gy4HvJ8/21PFuu7Rhfz//Nbji9+PlorVOb9c/zWy28L9Y329f6vFZjPr+5GY1nZj+vP0W024M+8KKEobZdAlYVMeiPYKeMpD1QuJzeikkJNRmpaqbFBzFBVChdopbBbW4mSQgErqymJuzYQz6dcf3LN9o1hue0TecutFotcyB4TlG3684aIPiAGKX0RkpfBUsu+mfzwHi2OVAQ0i1nGV4AVz9xGIPCaQE9E4+DkY5jJhkcXMaL8M8d6aGdd6MF/WFYLn9YjFJ3ddM/KQ/U28mIN2n7uYedd8BJgmBgt+LBueyw7mQuXhGeSYis5ajGoVMToC0IGHXspuOzkmcRFAg1WMWZhHUkkVSZkbnm39LQ5iX0rv+qHx4H8Z1+K1KgdQJSaHAi1h8kGWEIzPIqgL5MGDL3A24Mu9lISnel8ynSAneINn/9NYmRX9se0RG9Ls7/G1WuLfqJ19/f1P/BJR+mI+tozAnO26rYSrng2SPTlXNZ1R7rmV5npX1axTMmErzuiRIUx8CziS9vYzYE1B9a0I/abpsUR943sr38WViQYcCCYhltynl8YTVYgi8WC0C+UzWp+4tey5l3gSsxTFZN5IbSIH40yUFu7jQk+Ib+bdiafhWriO2dvzIOOU+IQidF6dijrx80BSYSbNEEh9Ld40fM3DM+b5wm+QtFiG7aZoJ+PiLUjBaW0UYs4yKoKeWgl2WLXGKlwTcN6V3Zkomfx3Na/7haH64uhxKvouRutUl/62skbJdMKjFBlBiaatruWlK53S+w+qvAN8Te7d73vMa535zQ+zOhtiNbtfYJnAvks478XvJTk4P30PnXw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVfXkuq6En3nKyj2I8U4EkzNTJUcAAMmmfxyyshyACec4euPDAMbZs/sO+c+gVqt7tXBraXXSHMdug2iCIWx7XtlWXyr/EM2aKizFFPjds16jUVQq7VYg6ohrlFvci1GJxFbKctRlCDZi2LNi98qNIn1Sa5GNecU265TbbL+wjTq20p5icIIm8YqL2SlnLuOF7Uvbt8qSei1fS2yo7anuShqx7CtAmXYxppt7Yap8v56RXlxGL5bcRy0CQK+6Agix4Ev0HeJV+JJ51WP2qptelqchOjDpx69VT7OZln2kjEvfmgSNEmSBMkRWEePbPNX5b10O4x02TP861rQPN+zoebYZ60ApaDY8vUycEw/tGPL/cY0RVBkYbqGcliDFOv9qhC/HVzQ/dDSE8gw0mqRpVE3YzNkoBB5EJUXM/mt8utnFbyenYeaFxl+6Eaf1v8NEvJS5PgB0mvRLbIbup9b/CJd768ItmUPOklkp2hUtEmgQRSVJyEy7HxoR7j59Kh8KX85j24dhuB/Kckr8YgTwya+yIxomyiK/596PdbqamWpOQl6t1o5HPSthDa6q5lY7x/5xenITBciD94uEB6Vr6Dupf5Yf27Ue199HBL9lDzxOW+ezbE9GgHmJLnmJB2hqX6Y1VOKRzonpKtO0NnO2ON5HBPQW4TqMXUpLrGo40A7o6aZLSiaVUtwMvaXwt53/Qmot4bjMNcFnqRGLY2RW0sbTlhgu9XZpo9kWo9nyi7s0rwn9A122jMEjRKWFHkKd/Oqu9mWCD9pVM0GMfa31WadDSzPfPsd02MMRVwDdLoEWfxf10lO1GLtvhCKSWHgzzNG74osC1VREAASTJDJPDBlfngGI948HK2D3eUykgfTRQeI4KTMQCaaG3E5nQ6kTF8une1S7nR4ZcZmPbARS3hDlPKluF33SW21DTZ0h9yqPK+vZ/6O6Qd675D1LDhS5ko2mssnZS/lo7lEri4yM8frs7JXqPF8wZRWe55TZlImZhePopRZo+1qFmwWXAbP0lQBbBdQC0mwlN7cXVKQmVlwLw0VcLjIeUsRlksll+ZgUuLN0RLHNhc62wC6erBzHevBeA8bn+vd5WnXdZLtWdorgtQV1GNXlXeMOJX6YLZZ7FbLg7bqpCXYG4HdzaNdt7W1n5nbViZON/2Bv5WtFI7AVOL5KcDpIoEid/vA7/JAwQXPz8Keb/iC3smIPh2VqpzTbaxP9nEdaV3S0ahWi9oMV43JsSFKXnU7SHZ7S7HWnXF1oOrpgou58yZKq2lDsymYB8Z0LfXiQW70pmppNxHzNexVdbNPOGeuEyrNPgjPJ8tRzFm8aoyj0842jBW/HrNO03AUZhYYjhGcourcnx5CssEjhiY2p3QQl4Cp8AB094s9P1X4VpFUXc6mG4XXQEeKE3De0/GAXh77vdSBGwb4+WA13h8+CqOLmcQT2VTCbSWVWiLQiyL01IXU2YMFb5ohb0odfgpFMN3Ig2yD87XoYeXPeexc8mhKPJCYLWhwvRKzILl4HKssC04ev/A6nKUc85XecMnmEUlDdRSwmRKNDG+78g+Ka4eLMFEXg8FomO/mSfewx7PKINVBymxLUnoIgD0azK2D6IvaJNhs4qDqwRDGcuAqcn4eb6N9y965ZL9ap/gJKcImvXB32aKrSdtBaKrUoDfzJkyTK0WJceq51X0rW1XnaiNo6oJniKcTsQ2XpA/8DjerH/Wcpg/WIhs2MqMPDjuNHuUOx584abCdw2w2HaxUt1ov1dPh0CXPc4IdBeNM7WasNJ1WGZ2f9+ZRENqbpGXm4djT6Y0WN9ItuWzYgXPg6OQwZwNmabq4WJNUD5rKpDRl13Drms0A9okZkQKpaQzl7ml31s6BO4bXAfp5OtyF1/lBPE6Wp9FzIx0q7lYE49uyuIBksdzBt4IW/53AFBJbrxkX1XZQsKAoRl5ceS9OFeSlnWCKY+ttfGVc11KDazQ69UaLFZpA6rASyZJUhwRkneNIttW4sZwrik8QBd8z7MJXweOut9TfAUK3HSFPR2Et9RNooajyF4tFvsqyN8PXr+9FaO5jntjqNCSOYzmaYZtNhmuRDC1QVAu3DckKlMRVyiM/HnvjEBgxCp85YvOJI84QtAMbFUSyuE0jfJ1GMU7JUUuT2KFeUu3FQwmmmmHB9to026oTke0GDioAE66vJw56CazgkiAiuv7SNQ1GF+lMmv8jq8Llpv82xM97t2xgHd0uFKIiHh7hiqI/CC/Zrt+C+TZomnwM+mYeJLpdXOg4tXFowyuS563fHVO0yr1dcFQ3yHfNz4Inq8TngO6O9NSG956/Pwcwm8R84/1WkqP2cnxJ0jS5FKFZcKkQmycogmwSKoIJJkSnuX9AHnE3QfyIi95Rf/J8lz/jS2LLU2P8Pbu4ZcqX5Q8eIiqKioeIjFs+/+kr58klzluM8vgrmeDg90qB+K9PGtiGhR4WT/BP5of673J9YevBD46zGGC2ZxargnmevmkK6GOzNh5ifvho/CsDXzl/Ft6TfMcS427aJTH6fqdcTKe3igahn3ixLFYugseJecEZnwLU/q30h5kL9/sg83n0LZlfK0MVzy5Xq9x17f+tXLMv7QIRPhXZFyxvlRy/S7Fzz3yY0B8AvxjSPMe3yBZNc89DmmPuCXyK5P0P8Z+Sh5x+/h7e/wU=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463432210</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35BA2B0937A0E05307991F0A50EB</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3a6a101e-b8b5-4b4e-822d-43ede0a34abd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02010_AccountDelete_FUNC_CS_Deleting_an_account_when_Account_Blocked_and_User_Blocked_P1" searchProperties="true" id="a72a789f-66d5-4fc3-b66b-a662ac401a11"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="a5c1d934-7c0b-4f55-90b8-09ba2e41c410"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="02e43289-b9d0-48d3-b88d-6ce3813d7d06"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="89be6447-d063-45b4-91ca-1fca24581e55"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="90fb971b-0236-4370-8708-45ff875f32d4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set User Status" id="b8ba88f9-f231-471f-b3df-a3fe173f8410"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Retailer_CS" id="c346ce66-8299-4c0d-96d5-c392c7ddae14"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="c5b41ea5-627b-4012-afb5-4c0ddd64efa2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="f4ff8e67-cae1-447b-ad5c-d041d863edb2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","blocked");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CE618737A4E05307991F0A2173</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35BEA1BE6B84E05305991F0AFAB5:362669F6"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CE618637A4E05307991F0A2173</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CE618637A4E05307991F0A2173</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B47989379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B47989379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZZb+o6EH7vr4jSx6OQjS1RQaIsJbqlC6HQc14q1xnAJXFo7LD01187NBQo9HKuhIQ8Gc98s/ibuWIoCi23wRgknMRU8Vo19cWwiuMgKJY0hIKqVgTD0l6tckUbm0HRKsF4bJplVfEYS8GjjCPKa6plmEXNqGqmMzBLbslw7XKhYpf+qMoQEiZMC5WCoSqrKKTMzdzW1DShbowYYS5FETCXY9dv9G5doemiHJNav9qgzBwm9Snnc1fXcSEADGGICziO9Ct9T+cqYK5PJhTxNIFPnwGrqZ93l8tlYWkX4mSiW4Zh6IajC52AkcmlWr/IL0Pg0XG8OTcRjSnBKCQfSILqAZ/GgdIIJ3FC+DQ6YdrUTUOa1mCFNWwW6aWqfznI0J1paQ9kwpDGpsjMjfVhDAlQDMpT36upl+dVcHN3kCDKxnESsYPz30ECuoAwnkOgsTyyHN35Fo+kq34F2PUoDlNGFnAn22SOMDDlIYExWd0SJpovYEpWfmXFxI/kXQb4b8pype9iFdD1I9lpkQkw/n9qtluvjZUhClOo0+kTJ82pzfudhw5aXS8Cu/PWGg78xayWQdhV3oDalvvzfNis2976vDS5e64UUYzm90/PkUOHH9XZYlI03vzixKnaY+Mf57lcqg67La9aHpWtOzsSFz8aFX5v3/52IGT929KvaY9hfxZfhL3uTffpyQvujdGj8RZ5a+Y1qn2j9efGuumaDa93zaJRL/y9erzvBjBqvDVHj4Hj+9cPv9YfNi13rUG/Oyu10Hp4YTSt4TLEt+nzdCSel16O2rWvmHZj2BfmlOCnr2+AeX6U7eG1lI6oF+I/04uUkEAbZ6ruXHIU40C5Wpe3JLW4qSAgEriimJuzYXTadum6WHGqjl1xGm2jZBsVxzE7RsNpto2cgzYoDiA2Yzom0pdk2U3//AwQRy4DGkCiLeIUT4GpP1hsIY4Uj/bF44gpg0EsWHw+s5idLt/4rFpK8SQMrXK6tiysKncxv6f3SWPMIdln7uoec/cBkzkBSe+yv5locMZFKt7RIuWhWVigAoVUDIBEcrBrFaslnZFoHoIEqkdxkIZQmE/nWWJ0tvm3NIRZJu23B9m7OxnW4bc8A0InIFKByViuQVQRjowgKw/kZMCWuRtwbr6RBkQ+L5FOnhC8QbL/6atLZHtsW0RE9NL0X8wc91b97Ovfb+o/gNIP87F1FCzIjtt8lorxIMijnlfzHRXeC+likWb1q0hiTIR5XfCjqfuAU8Fu60E8A6pvTehnDZct6gPPW/k+vpRPqc8Rh0h0m5Idz9gsfGBys/DEK1mdu7bsuRR547Dix2TNUCwgEvGPOwp2sdQT4gfxt4yT4KtcR2zt+BFxinWCEzqRJzlG1ieaAsfCLBG8Fye7xo8ZOOZ8X7hN8hYLF930mnI4/UWRhFZTEcZxSrnXUjPBLslmOPl6Du6X0jczGZF/TuYVOzmZn3u3vqC7CKlbXfLfyhrJ2gWDKheADEtNXYlFUzinkx1S/wT4ndeb7bJZLduVRnGX1y2zYm8TuBdJ/Zv4u2Qnp4fvof4v</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463436001</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B4798A379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>367d7234-7241-4d7b-a8af-4949aaee6044</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02011_AccountDelete_FUNC_CS_Deleting_an_account_when_Account_Blocked_and_User_forcedeleted_P1" searchProperties="true" id="7d5eed1d-815d-4820-b41a-2e52f4f539b0"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="41be78d0-0779-43c0-94e1-13aba8f3f82b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="08374165-39aa-4f17-b873-52ce3e82b686"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="0285b2f8-de3e-4597-a949-564592a9387d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="d28a03a4-6358-43bb-985b-c00bb7bd99b0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set User Status" id="adc4dbec-165b-433e-ba0b-19f226b6b16a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","forcedeleted");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Retailer_CS" id="e6f13cc0-9591-49d1-b1a1-8f43dd34ba38"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="6e2db595-938e-4fcc-8a68-fd41c766d5ec"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="057bfd24-21e7-42e9-9981-da82b4ef5faa"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","forcedeleted");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35B48E886B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CDBB2E379EE05307991F0A9FE6:47CF60A"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B48E876B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B48E876B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35BA2B2337A0E05307991F0A50EB</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35BA2B2337A0E05307991F0A50EB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH6vgJBAuUUEKhVK2FzjQrrZ9WbnOBLwkTogdSPvrjx0aCpT2sEdCQp6MZ765+Js55zgKbdfjHFJBY6YNe239t91oBpZpNg1SIw2jZrUsA9eeW4ZD/KqDHTOoQ03XhpxnMGRcYCbaum1aNUNesVr3luM6plszK7ZVf9K1n5ByaVqqVExdy6OQcbdw29azlLkx5pS7DEfAXUHcqXd740pNF5eY9M75BmXhMO3MhUhchEjFBwJhSCokjtA52tM597k7pTOGRZbCm0+ft/W3u+v1urKuVuJ0hmzTNJHZQlLH53T2Xe98Ky+DP2RBvDlfYBYzSnBIX7ECdQtiHvuaF87ilIp59IlpC1mmMm1ATgxi1dh3Hb07KNCdaGkPZMqxwefYKo1NIIAUGAHtYTJs699Pq+Dm7n2KGQ/iNOIH57+DBGwFYZyAb/AyshLd6RaPpKtzDsQdMhJmnK7gTrVJgglwbZxCQPMbymXz+Vwryq/lXP5o2WVA/qYs52gXq4SOjmSnR2fAxf+p2W69NlZ+4jCDDooSJ58Fg/jiauEnqzy57vVZPh4tx167gLCrvAG1Lffb+bBZt731dml05VN+TW6usqeMXVq34+tF7/LxV9d6nJrWP8F81fJfb85IS/Tr2d1s0bp6ZuNRNkA1jwX1xcsqf/y5IGfBUzJ4ePkWPtzP/TsMHgzYDx8tcnMYh+P5c2M5qttTz/lz9gs1H5/G3bPa9TK4ebSji9awOamDfT0aVG3nip1VF4M0NhcpfIMBX0OY1Veof8YfguUErdvvMe3GsC8sKWGaPf8BIsqjao9hT7uU9cLia3pREuobQaHqJoqjuAAm9I66pajFzSQBUd+VxdycTfOyX3W6nt21q9WGZ/ZNp2o2Wi3r0vQcs98tOWiD4gDiRcwCqnwplt30z9cASeRyYD6kxirOyBy4/oXFHhZYG7KJfBwx43AfSxZ/hWzNX6EhrHVIXmKHklb4bFtY1+5iMWKj1AsEpPvM3dxj7gkQmlBQ9K76m8sG50KmYolXmQitygpXGGRyAKSKg1271nQQp1ESggKKotjPQqgk86RIDOKbf9vAhBfSSf++eHefhnX4rcyA1PGpUuAqli7IKsKREVQtA/k0YNvaDbg072U+Vc9LplOklGyQ7H967xLVHtsWkRH9vpj+tkrcW/WTr3+8ib4AhQ7zsXXkr+iO23KWyvEgyaNTVnOJK8tKtlplRf0aihhTaR5JfrTQFEgm2e3lPl4AQ1sT6KThskV94Hkr38eXiTmbCiwgkt2mFccTNospcLVZDOUryU9dW/ZcyrwJyMUx2UUoFxCF+MsdhbhE6UnxWP6t49R/L9cRWzt+ZJxynRCUzdRJjZGXT5qCxNIslbwXp7vGjxk45nxfuE3yFouQ3fScCfj8i6YIra1jQuKMiWFPLwS7JFvgFC8JuO9KH8wURP42mXP+6WT+dXszlXQXYX2rS/9b2aBFuxDQ1QJQYGnruVw0pXM22yH1N4BHeL3W7Dcb9W7DK3jd2fB6v1/d8vp+JJ0P4o+SnZwevofOvw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463439513</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35BA2B2437A0E05307991F0A50EB</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1ef77446-3aac-40aa-b9d1-b638a115d3e6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02012_AccountDelete_FUNC_CS_Deleting_an_account_when_Account_Blocked_and_User_other_P1" searchProperties="true" id="e176bc0b-3569-43b9-bd30-87c8d312bc70"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="4a02af64-6680-4153-b083-6d221f220401"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="584e462f-90ec-476d-b189-d2e250c662da"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="4ca21866-6a16-422d-9e76-553f8ecbdd43"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="ee338274-7dfc-4507-97f0-ea51449fe49d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set User Status" id="d82a5f56-6470-44ae-afcd-5ff9eaca6ef5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","other");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Retailer_CS" id="61e363b8-330c-4432-8a6d-f3d2381ea11b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="e59007a5-ca5a-4932-b61f-baeb40ad1e1d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="7ddc1e9e-8f44-48f5-a0c0-439b0d0711e0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","other");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35B42EB93798E05307991F0A5105</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CC6DCB6B80E05305991F0A0CC0:C01B47E8"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B42EB83798E05307991F0A5105</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B42EB83798E05307991F0A5105</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B511ED6B7CE05305991F0A6AA3</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B511ED6B7CE05305991F0A6AA3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH6uQBAiQqCABLb1Q+gW03e5L5ToDGBIn9QfQ/fXXDg0FSnvZKyEhT8YzZ2aOj33KURwVgybnwARJqNE9q5vPRR+wXwuR5VcBW2WoelYNxr7lQVjyx6HvvaCaaXQ5l9ClXCAq6mbRccuWU7Ncf+R6gecE5VLBqzi/TeMBGFehlUvBMY1VHFEeZGnrpmQ0SBAnPKAoBh4IHAybV/1AeQYox2Q2Ttcos4SsMRUiDWwbF0LAEEW4gJPYPrV3fE5DHgzJhCIhGbznDHndfN+7XC4Ly1IhYRO76DiO7fi28gk5mfw0Gz/yzRB26ThZr9uIJpRgFJE/SIO6AjFNQqMZTRJGxDT+IrRru44ObcEKW9gt05+m/ZEgQ3dkpB2QjCOLT5GbBxvAGBhQDMb9oFs3fx43wfXeEUOUjxMW873130ECuoAoSSG0eF5Zju74iAfa1TgFHHQpjiQnC7jWNEkRBm7cMhiTVZ9wRb6QG9n4jRVXP5KzDPDfjOXU3saqoNsHunNGJsDF/5nZ9rzWUR5QJKHh31XnL73u5R1j8+sT/HYxGTzVpmnvpbOsZxC2ndegNuN+X++TdcOt901tTOblx5nsvtJKSRbb8QqcHjphlw/9me8MeHIz915vhHy689ms0kyd/vmgt7x3H+bzJxe3Bnd/yByNohu4krc/XFZpPQIrY169+N3rd3B1xDqXT/cXF340gU6F3yNefhBTmRafBpWT6eNkGU16rfnN/d20+Dh6W1Xn4uri10zE5PLHn8vBaw/6yeXMB/rP4+18mdQ/atquYdeYS8JQvswAi3yp6dE9MzpqXkh8Ly/aQkJrnLkGqdYoLoAKs6F3aWkJpBIgEgZqmOu143TOS17Lc93zs0qr2j53vJLj+b7bcZqVZrOUa9AaxR7EdkLHROfSKrvmz/cAcRxwoCEwa5FIPAVufhPxDAlkdOlAHY6EchglSsXdeRpF40gxg5RDV8pxpSYr09mSjk3jOhE39IY1xwLYrnbXdrR7AJikBLTAa4ZzRXEuVDNe0UKKyC0sUIGCVFcA0yocFMs1z+YkTiPQUO04CWUEhXSaZq2x+fq/aCHMM+vgfJSdvC8L2/+W90D5hEQ7cF1LC9Qc4cAlVMoL+bLgortdcB6+KUOiD5hqqGAEr5HsfvrgiSbIhiSqouf28NnNcW/cj97+eaf9DSh7vx+bROGCbKXNb1N1QSj5aOTTfEWF14JcLGQ2v6qWRqbC20ohXXsIWCp9exslc6D2JoR91PWyQb2XeWPfxSfFlA4FEhArthnZ8oi3xRC4flt01TlZHftw2Ump+iZgJQ7Z2pF6gmjE375ScIC1nzLfqr9lwsKPcR2ItZVH1akeFILQiV7pi+TtC1LgRIUlSvkSth38UIBDyXeNmyZvsAjFphcp4Osvhpa0uokwTiQV3TMzM2zLbIZTvKUQfDh9CpNJ+fvdvOJf3s2/rvpDJXgxMje+5L+dLZLRBYOpnwAZlrq5Uk9NlZxOtmT9HeABZS8Xz1u1UtWvZcpeXSu75zrepoE7lTQ+mT9btnq6fx4a/wI=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVfXkuq6En3nKyj2I8U4EkzNTJUcAAMmmfxyyshyACec4euPDAMbZs/sO+c+gVqt7tXBraXXSHMdug2iCIWx7XtlWXyr/EM2aKizFFPjds16jUVQq7VYg6ohrlFvci1GJxFbKctRlCDZi2LNi98qNIn1Sa5GNecU265TbbL+wjTq20p5icIIm8YqL2SlnLuOF7Uvbt8qSei1fS2yo7anuShqx7CtAmXYxppt7Yap8v56RXlxGL5bcRy0CQK+6Agix4Ev0HeJV+JJ51WP2qptelqchOjDpx69VT7OZln2kjEvfmgSNEmSBMkRWEePbPNX5b10O4x02TP861rQPN+zoebYZ60ApaDY8vUycEw/tGPL/cY0RVBkYbqGcliDFOv9qhC/HVzQ/dDSE8gw0mqRpVE3YzNkoBB5EJUXM/mt8utnFbyenYeaFxl+6Eaf1v8NEvJS5PgB0mvRLbIbup9b/CJd768ItmUPOklkp2hUtEmgQRSVJyEy7HxoR7j59Kh8KX85j24dhuB/Kckr8YgTwya+yIxomyiK/596PdbqamWpOQl6t1o5HPSthDa6q5lY7x/5xenITBciD94uEB6Vr6Dupf5Yf27Ue199HBL9lDzxOW+ezbE9GgHmJLnmJB2hqX6Y1VOKRzonpKtO0NnO2ON5HBPQW4TqMXUpLrGo40A7o6aZLSiaVUtwMvaXwt53/Qmot4bjMNcFnqRGLY2RW0sbTlhgu9XZpo9kWo9nyi7s0rwn9A122jMEjRKWFHkKd/Oqu9mWCD9pVM0GMfa31WadDSzPfPsd02MMRVwDdLoEWfxf10lO1GLtvhCKSWHgzzNG74osC1VREAASTJDJPDBlfngGI948HK2D3eUykgfTRQeI4KTMQCaaG3E5nQ6kTF8une1S7nR4ZcZmPbARS3hDlPKluF33SW21DTZ0h9yqPK+vZ/6O6Qd675D1LDhS5ko2mssnZS/lo7lEri4yM8frs7JXqPF8wZRWe55TZlImZhePopRZo+1qFmwWXAbP0lQBbBdQC0mwlN7cXVKQmVlwLw0VcLjIeUsRlksll+ZgUuLN0RLHNhc62wC6erBzHevBeA8bn+vd5WnXdZLtWdorgtQV1GNXlXeMOJX6YLZZ7FbLg7bqpCXYG4HdzaNdt7W1n5nbViZON/2Bv5WtFI7AVOL5KcDpIoEid/vA7/JAwQXPz8Keb/iC3smIPh2VqpzTbaxP9nEdaV3S0ahWi9oMV43JsSFKXnU7SHZ7S7HWnXF1oOrpgou58yZKq2lDsymYB8Z0LfXiQW70pmppNxHzNexVdbNPOGeuEyrNPgjPJ8tRzFm8aoyj0842jBW/HrNO03AUZhYYjhGcourcnx5CssEjhiY2p3QQl4Cp8AB094s9P1X4VpFUXc6mG4XXQEeKE3De0/GAXh77vdSBGwb4+WA13h8+CqOLmcQT2VTCbSWVWiLQiyL01IXU2YMFb5ohb0odfgpFMN3Ig2yD87XoYeXPeexc8mhKPJCYLWhwvRKzILl4HKssC04ev/A6nKUc85XecMnmEUlDdRSwmRKNDG+78g+Ka4eLMFEXg8FomO/mSfewx7PKINVBymxLUnoIgD0azK2D6IvaJNhs4qDqwRDGcuAqcn4eb6N9y965ZL9ap/gJKcImvXB32aKrSdtBaKrUoDfzJkyTK0WJceq51X0rW1XnaiNo6oJniKcTsQ2XpA/8DjerH/Wcpg/WIhs2MqMPDjuNHuUOx584abCdw2w2HaxUt1ov1dPh0CXPc4IdBeNM7WasNJ1WGZ2f9+ZRENqbpGXm4djT6Y0WN9ItuWzYgXPg6OQwZwNmabq4WJNUD5rKpDRl13Drms0A9okZkQKpaQzl7ml31s6BO4bXAfp5OtyF1/lBPE6Wp9FzIx0q7lYE49uyuIBksdzBt4IW/53AFBJbrxkX1XZQsKAoRl5ceS9OFeSlnWCKY+ttfGVc11KDazQ69UaLFZpA6rASyZJUhwRkneNIttW4sZwrik8QBd8z7MJXweOut9TfAUK3HSFPR2Et9RNooajyF4tFvsqyN8PXr+9FaO5jntjqNCSOYzmaYZtNhmuRDC1QVAu3DckKlMRVyiM/HnvjEBgxCp85YvOJI84QtAMbFUSyuE0jfJ1GMU7JUUuT2KFeUu3FQwmmmmHB9to026oTke0GDioAE66vJw56CazgkiAiuv7SNQ1GF+lMmv8jq8Llpv82xM97t2xgHd0uFKIiHh7hiqI/CC/Zrt+C+TZomnwM+mYeJLpdXOg4tXFowyuS563fHVO0yr1dcFQ3yHfNz4Inq8TngO6O9NSG956/Pwcwm8R84/1WkqP2cnxJ0jS5FKFZcKkQmycogmwSKoIJJkSnuX9AHnE3QfyIi95Rf/J8lz/jS2LLU2P8Pbu4ZcqX5Q8eIiqKioeIjFs+/+kr58klzluM8vgrmeDg90qB+K9PGtiGhR4WT/BP5of673J9YevBD46zGGC2ZxargnmevmkK6GOzNh5ifvho/CsDXzl/Ft6TfMcS427aJTH6fqdcTKe3igahn3ixLFYugseJecEZnwLU/q30h5kL9/sg83n0LZlfK0MVzy5Xq9x17f+tXLMv7QIRPhXZFyxvlRy/S7Fzz3yY0B8AvxjSPMe3yBZNc89DmmPuCXyK5P0P8Z+Sh5x+/h7e/wU=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463442788</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B511EE6B7CE05305991F0A6AA3</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67796f5b-7200-4ddf-94c3-915bf1e05658</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02013_AccountDelete_FUNC_CS_Deleting_an_account_when_Account_Blocked_and_User_blocked:tou_P1" searchProperties="true" id="cbe47553-4716-4c83-95f8-8ef94256ffab"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="ea36d380-fdba-4043-b981-569d01ae70d6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="e315768e-6237-407c-bea0-e145f5fa0493"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="55cfb6ad-628c-42b7-9149-6c4a5d10cbd0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="e6c8a885-eafa-437c-95cd-f6690512545f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set User Status" id="d19aaed8-3951-4ef3-b89e-6d2f222360f2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked:tou");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Retailer_CS" id="76ced5ec-166c-4fb3-8fbd-9b64d1cea324"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="4ad332fe-748a-4445-9172-eb6d29617738"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="46fae562-ce9b-40af-97ab-5388780d688d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","blocked:tou");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35BEA1CE6B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CCBC6A37A6E05307991F0A9C25:1F83AF1"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35BEA1CD6B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35BEA1CD6B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35BF573E6B96E05305991F0A65D7</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35BF573E6B96E05305991F0A65D7</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4jxljG2wCnsCMw0frlqS5QNrCS0fIa6PElokk85FffyUTEyAkl96ZzBCtV7tnd4+OdMVRmlQ9n3NggmRUC7ot/U9ku5fRzAajCrWZ4QAGo2nJ/9x6Y4YdJ7KalqtrAec5BJQLREVLr1q2Y1gNw26ObddzLc+pV5o1a6prP4FxGVq6VCxdW6cJ5V6RtqXnjHoZ4oR7FKXAPYG9kX8z8KSnh0pMevtqi7JIyNpzIRaeaeJKKIElCa7gLDWvzAOfq5B7IxJTJHIGLzlD3tJf9q5Wq8qqVslYbFYtyzKtpil9Qk7iz3r7U7kZwoBG2XbdQTSjBKOEPCMF6gbEPAs1P4kzRsQ8fSe0bdqWCm3AGhvYduhn3XxNUKA7M9IBSMaRwefILoMNIQIGFIN2Pwxa+ufzJrjdO2aI8ihjKT9a/x0koEtIsgWEBi8rK9GdH/FEu9pXgL2A4iTnZAm3iiYLhIFrdwwish4QLskXcq0Yv7bm8o+ULAP8N2O5MvexSujmie50SQxc/J+Z7c9rG+UnSnJodxYXX5gI7+zHVTcafH3cCAQjcn8z+7JqFRD2nbegduN+WR+Tdcetl02rWjK7mMqak+n9arwcNjeLvoniznfH/Od+PBx/DZ1nFv+aVx8mwbLxI7eeu9lPv9H77UJ10rywBxNnOq0P17/sCD7hze16OLOdye2kSaKmtUEDAn4n6XZntUmaU3RnpVE6rQfxajBbNR7N/oQ/ojR4SDvTbyjJbkz2NXqoiYH/NPgUf1vE16njN770vz9frNyO32u91rRfw6GxlIRRPnsALMqlokfQ1fpyXkh8LC/KQkIjKly9hdIoLoAKva12KWnxcilAJPTkMLdry+r3au51372s9erXzXrPcmuW22zafcuvu93LUoO2KI4gdjIaEZVLqeyWPx8DxKnHgYbAjGWW4zlw/YOIXSSQFtChPBwZ5TDOpIrbCF+y5RMWJLJmjs1rz8kzRyGLde02Ez/oD+ZHAtihdDcOpHsImCwIKH1XBOeS4VzIXjyhZS4Su7JEFQq5vAGYEmGv6jRck5N0kYBCaqZZmCdQWcwXRWdMvv2tGgjzwjrsjYuD925dx9/KFkifkCgHrmq5BjlGOHEH1cpC3i24au8XXIb385Co8yX7KRjBWySHn15povix44is6E9n9Mcuce/cz97+dqf5ASjzuB+7ROGS7KUtL1N5P0j1aJfTfEKVp0q+XObF/C6VMjIZ3pQCaZsjwLmUt804ewRq7kKYZ90uO9RHmXf2Q3y5mNORQAJSyTatWJ7xtBgBV0+LQB6T9bnvloOUsm8C1uKUrZPIF4hC/OEjBXtY+UnznfxZZSx8HdeJWHt5ZJ3yPSEIjdVK3SObd0iBMxmWSOHL2H7wUwFOJT807pq8wyIkm2a5gPe/aErRWjrCOMupCLp6YdhX2QKn2CzAe3V6E6ZQ8perec3fvZp/3wxGUu9SpO98yX87G6SgCwZdvQAKLC19LV+aMjmN91T9BeAJYe/5dqdbv244+8Le969fuXxQSfuN+a1lr6fH56H9Lw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVfXkuq6En3nKyj2I8U4EkzNTJUcAAMmmfxyyshyACec4euPDAMbZs/sO+c+gVqt7tXBraXXSHMdug2iCIWx7XtlWXyr/EM2aKizFFPjds16jUVQq7VYg6ohrlFvci1GJxFbKctRlCDZi2LNi98qNIn1Sa5GNecU265TbbL+wjTq20p5icIIm8YqL2SlnLuOF7Uvbt8qSei1fS2yo7anuShqx7CtAmXYxppt7Yap8v56RXlxGL5bcRy0CQK+6Agix4Ev0HeJV+JJ51WP2qptelqchOjDpx69VT7OZln2kjEvfmgSNEmSBMkRWEePbPNX5b10O4x02TP861rQPN+zoebYZ60ApaDY8vUycEw/tGPL/cY0RVBkYbqGcliDFOv9qhC/HVzQ/dDSE8gw0mqRpVE3YzNkoBB5EJUXM/mt8utnFbyenYeaFxl+6Eaf1v8NEvJS5PgB0mvRLbIbup9b/CJd768ItmUPOklkp2hUtEmgQRSVJyEy7HxoR7j59Kh8KX85j24dhuB/Kckr8YgTwya+yIxomyiK/596PdbqamWpOQl6t1o5HPSthDa6q5lY7x/5xenITBciD94uEB6Vr6Dupf5Yf27Ue199HBL9lDzxOW+ezbE9GgHmJLnmJB2hqX6Y1VOKRzonpKtO0NnO2ON5HBPQW4TqMXUpLrGo40A7o6aZLSiaVUtwMvaXwt53/Qmot4bjMNcFnqRGLY2RW0sbTlhgu9XZpo9kWo9nyi7s0rwn9A122jMEjRKWFHkKd/Oqu9mWCD9pVM0GMfa31WadDSzPfPsd02MMRVwDdLoEWfxf10lO1GLtvhCKSWHgzzNG74osC1VREAASTJDJPDBlfngGI948HK2D3eUykgfTRQeI4KTMQCaaG3E5nQ6kTF8une1S7nR4ZcZmPbARS3hDlPKluF33SW21DTZ0h9yqPK+vZ/6O6Qd675D1LDhS5ko2mssnZS/lo7lEri4yM8frs7JXqPF8wZRWe55TZlImZhePopRZo+1qFmwWXAbP0lQBbBdQC0mwlN7cXVKQmVlwLw0VcLjIeUsRlksll+ZgUuLN0RLHNhc62wC6erBzHevBeA8bn+vd5WnXdZLtWdorgtQV1GNXlXeMOJX6YLZZ7FbLg7bqpCXYG4HdzaNdt7W1n5nbViZON/2Bv5WtFI7AVOL5KcDpIoEid/vA7/JAwQXPz8Keb/iC3smIPh2VqpzTbaxP9nEdaV3S0ahWi9oMV43JsSFKXnU7SHZ7S7HWnXF1oOrpgou58yZKq2lDsymYB8Z0LfXiQW70pmppNxHzNexVdbNPOGeuEyrNPgjPJ8tRzFm8aoyj0842jBW/HrNO03AUZhYYjhGcourcnx5CssEjhiY2p3QQl4Cp8AB094s9P1X4VpFUXc6mG4XXQEeKE3De0/GAXh77vdSBGwb4+WA13h8+CqOLmcQT2VTCbSWVWiLQiyL01IXU2YMFb5ohb0odfgpFMN3Ig2yD87XoYeXPeexc8mhKPJCYLWhwvRKzILl4HKssC04ev/A6nKUc85XecMnmEUlDdRSwmRKNDG+78g+Ka4eLMFEXg8FomO/mSfewx7PKINVBymxLUnoIgD0azK2D6IvaJNhs4qDqwRDGcuAqcn4eb6N9y965ZL9ap/gJKcImvXB32aKrSdtBaKrUoDfzJkyTK0WJceq51X0rW1XnaiNo6oJniKcTsQ2XpA/8DjerH/Wcpg/WIhs2MqMPDjuNHuUOx584abCdw2w2HaxUt1ov1dPh0CXPc4IdBeNM7WasNJ1WGZ2f9+ZRENqbpGXm4djT6Y0WN9ItuWzYgXPg6OQwZwNmabq4WJNUD5rKpDRl13Drms0A9okZkQKpaQzl7ml31s6BO4bXAfp5OtyF1/lBPE6Wp9FzIx0q7lYE49uyuIBksdzBt4IW/53AFBJbrxkX1XZQsKAoRl5ceS9OFeSlnWCKY+ttfGVc11KDazQ69UaLFZpA6rASyZJUhwRkneNIttW4sZwrik8QBd8z7MJXweOut9TfAUK3HSFPR2Et9RNooajyF4tFvsqyN8PXr+9FaO5jntjqNCSOYzmaYZtNhmuRDC1QVAu3DckKlMRVyiM/HnvjEBgxCp85YvOJI84QtAMbFUSyuE0jfJ1GMU7JUUuT2KFeUu3FQwmmmmHB9to026oTke0GDioAE66vJw56CazgkiAiuv7SNQ1GF+lMmv8jq8Llpv82xM97t2xgHd0uFKIiHh7hiqI/CC/Zrt+C+TZomnwM+mYeJLpdXOg4tXFowyuS563fHVO0yr1dcFQ3yHfNz4Inq8TngO6O9NSG956/Pwcwm8R84/1WkqP2cnxJ0jS5FKFZcKkQmycogmwSKoIJJkSnuX9AHnE3QfyIi95Rf/J8lz/jS2LLU2P8Pbu4ZcqX5Q8eIiqKioeIjFs+/+kr58klzluM8vgrmeDg90qB+K9PGtiGhR4WT/BP5of673J9YevBD46zGGC2ZxargnmevmkK6GOzNh5ifvho/CsDXzl/Ft6TfMcS427aJTH6fqdcTKe3igahn3ixLFYugseJecEZnwLU/q30h5kL9/sg83n0LZlfK0MVzy5Xq9x17f+tXLMv7QIRPhXZFyxvlRy/S7Fzz3yY0B8AvxjSPMe3yBZNc89DmmPuCXyK5P0P8Z+Sh5x+/h7e/wU=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463446214</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35BF573F6B96E05305991F0A65D7</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>884bceae-9009-4b41-917e-af6669273de8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02014_AccountDelete_FUNC_CS_Deleting_an_account_No_ManageAccountConsent_Policy_P1" searchProperties="true" id="b7193d47-9ea3-4d8f-979c-efd8b412f07d"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="78fd1a55-1f51-4641-b538-735dd5da82f5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="9ed2c67b-c949-4c8c-9424-e546f9eeee94"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="9697cd5b-8051-4d72-a1ec-5eb35e0e4911"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Update MAC Policy" id="6f0683cc-f0aa-4bf3-bd4b-a2dc893e2b08"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_Policy_Status")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","deleted");
myTC.setPropertyValue("Policy","105");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));
myTC.setPropertyValue("UserName",tC.getPropertyValue("UserName1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Retailer_CS" id="8178ab0f-04bb-4aa1-bdf7-8aebd40a8ef8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="63ba9f48-3785-43e7-91d1-fe466d700f8c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","NO_MNG_ACC_CNST");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CDBB3E379EE05307991F0A9FE6</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35B3E1EF6B78E05305991F0ABA86:92549D49"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CDBB3D379EE05307991F0A9FE6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CDBB3D379EE05307991F0A9FE6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35CCD7A437A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35CCD7A437A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4jx0j2+AAnsAMt7TMyYVyS5uXjpDXoNSWiSQbp7/+SCYmQEgOPQwzjJbV7re7nz7pUuA4cv2OEMAlTZgx7LfMX1WvAfWFc2Hh0HGtWt3xrIVbIxaEF4ADwFAD1zSGQqQwZEJiJlumazs1y25YTnPqeL5nq2/Fq1UfTGMOXKjQyqVim0YeR0z4RdqWmXLmJ1hQ4TMcg/Al8Sedm2tfefq4xGS2L7coi4S8vZJy7SNEKgEQiCJSIUmMLtGBz2Ug/AldMixTDi85A9EyX/ZuNpvKplpJ+BK5tm0ju4mUTyDo8rPZ/lRuhmDIwmS77mGWMEpwRP9gDeoG5CoJjE60TDiVq/id0A5ybB3agpxYxKmxzyZ6TVCgOzPSAUgusCVW2CmDjSEEDoyAMRsPW+bn8ya43TvlmIkw4bE4Wv8dJGAZRMkaAkuUlZXozo94ol3tSyD+kJEoFTSDW02TNSYgjBGHkObXVCjyBcIoxm/kQn1pyTIgfzOWS7SPVUFHJ7rTp0sQ8v/MbH9e2yhzHKXQ9roz1J+Jh+vFH3ishQ062ODnxTieZ99bBYR95y2o3bhf1sdk3XHrZVO3EaI46c1crz96Wk0nwdPXm+THl1mzF07u63cwko+NL98fHgaD+iLH/Jv89g8X9/dBms3SWy/tXCFvGU7DBppv6Kf5SLir5X0T3c073+Lr/JHeB/HoZyfK3IeUyJsGe1SHUs4Ws+5mNO4NrrOru2bAf6Y/B9OcszAL+dcp6SJq//7xaTJYrnv3+TyQ8WrucrayReu1pv0aDo2lJEzSxSMQWS41PYZ940rNC8uP5UVbaGCFhau/1holJDBptvUuLS1+qgSIBr4a5nZt21eDqtfr9eudWrXeaQxsr2rXm03nyu501afUoC2KI4i9hIVU59Iqu+XPxwBJ7AtgAXArS1KyAmF+ELGPJTaGbKwOR8IETBOl4s5FdkFqj03G/+QbZ+lWk+eFt+FOemEat4m8Y3e8E0rgh9rdONDuMRC6pqAFXjNcKIoLqZrxhLNURk4lwxUGqboCuFZh3601PCRovI5AQ1WkC9IIKuvVumgNEttf18JEFNbxYFqcvHcLO/6v7IHyCah2ELqWLqg5wolLqFYW8m7BrrNfcBm+kwZUHzDVUMkp2SI5/OuVJ5ogO5Koin71Jr+cEvfO/eztb3eiD0Ch437sEgUZ3Utb3qbqglDy0S6n+YQrT5U0y9JifnUtjVyFR0ohHTQBkip9e54mv4GhXQh01vWyQ32UeWc/xJfKFZtILCFWbDOK5RlviwkI/bYYqnOSn/twOUip+iYhl6dsvUg9QTTiD18pxCfaT5lH6meT8OB1XCdi7eVRdaoHhaRsqVf6Inl+hxQkUWGpUr6E7wc/FeBU8kPjrsk7LFKxaZFKeP8fQ0tay8SEJCmTw75ZGPZltsApn9fgvzq9CVNI+cvdnIt37+YfN9cTJXgxNne+9L+dLVrQhYCpnwAFlpaZq6emSs6We7L+AvCEsve73Wq/Wm8O9pW9eTW42DXwoJL2G/Nby15Pj89D+18=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463449831</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35CCD7A537A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b948c6c1-8581-4ed1-b753-d988b4da9c10</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02015_AccountDelete_FUNC_CS_Deleting_an_account_which_is_suspended_P1" searchProperties="true" id="e2b040dd-430d-4a1e-8daa-1d849c3c2bc3"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="75ecfa84-9bdc-4ec1-9a62-1878ab759f5e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="90c1e9fb-d769-4b16-8b22-764f6d1a90e2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="329eacfc-7547-46ee-b757-4d02e72cd996"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="6b661b05-1092-49b0-8123-a0fda02b5396"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","suspended");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Retailer_CS" id="7470be9f-36fb-4e5d-bf20-cd8c6f128fe4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="09e67bd0-bcae-4621-848d-051e74c3ef81"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SPL_CS_ALLOWED_ACCT");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35BA2B4937A0E05307991F0A50EB</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35B479B0379AE05307991F0A9CE0:2378E467"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35BA2B4837A0E05307991F0A50EB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35BA2B4837A0E05307991F0A50EB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B48EAE6B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B48EAE6B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSRxSSECA0Kkjh0m62pTdot6cvK+NMwNvETmMHaH/9sUNDgdIe9khIyJPxzDcXfzOnHCVxzfM5h0wQRrWg39Z/203bak6arjFx602jHrXqxkkLwHCsltVwQ1RzrYmuBZznEFAuEBVtvWbZdcNqGfbJ2G54DctrONWm03zStQfIuDQtVaqWri2TmHKvcNvW84x6DHHCPYoS4J7A3sgfXnpS00MlJr1zukJZOMw6MyFSzzRxNQQMcYyrmCXmqbmlcxpyb0SmFIk8g3efIW/r73cXi0V14VRZNjVrlmWZ1okpdUJOpsd656i8DGFAI7Y69xBllGAUkzekQA1BzFio+fGUZUTMki9M26ZtKdMGLLGB7To91s0PBwW6Ay1tgcw4MvgM2aWxO4ggA4pBu78L2vrxYRVc3R1niPKIZQnfOf8dJKBziFkKocHLyEp0h1vck67OKWAvoDjOOZnDlWqTFGHg2k0GEVleEi6bL+RaUX5tyeWPlF0G+G/KcmpuYpXQzT3Z6ZMpcPF/arZZr5WVBxTn0Gm6rWf6ZOHZ2XWjcn97Vemz+/Taml9H/7QLCJvKK1Drcr+fd5t13Vvvl3yMzxZ+k94+IitovDwsnHl/+hya7NYmdARwUb8muPKLv933euzx7Pzp8o08mXm9S8eV5MYXiwsLxo3cbV0Gt0dL3h8m0IWrc+RUzn+Mm+myPuJRPp3Okm4+HdvnTksg9344RE+sEsYRJb304jlCAekOsZtWkv6P7oLRq6T566gZ13v28+UDM3/e/LybkO5jq/0R02YM28KSEkb55A9gUR5VewR97UzWC4nv6UVJSGhEhaqXKo7iAqjQO+qWohYvlwREQk8Wc3W2rLOB0+jWWwN/0Oy6/sBqOFbj5MQ+s/zBwOmWHLRCsQOxx2hElC/Fsqv++R4gTjwONITMmLMcz4Dr31jsI4G0gN7Jx8EohzFTLO60Evz6guLk+Y9luxmJJi9zJ2Mu0rUrJq7pdeZHArJt7m5tcfcdYJISUASvOpzLFudCJuMFzXMR29U5qlLI5QjIFAt7tXqrYXKSpDEoqGbCwjyGajpLi9SYfPVfMxDmhfRuMC5e3peB7X4rcyB1QqIUuIqlC7KOsGcI1ctAvgy4Zm8GXJr385CoByYTKjKCV0i2P330iWqQdZPIiH73Rr/tEvda/eDrn2+a34Ayd/OxdhTOyYbbcprKASHpo1NW8wVVX6r5fJ4X9XMVNWbSvCkZ0jZHgHPJb69j9gzUXJswDxova9Q7ntfybXy5mNGRQAIS2W1acTxgtxgBV7tFIN/J8tDFZculzJuApdgn68VyBVGIv91SsIeVnhTfyL8Fy8KPcu2xteFHxikXCkHoVJ3UIHn9oikwk2aJZD6WbRrfZ2Cf823hOslrLEJ20yQX8PUXTVFaW0cYs5yKoK8Xgk2aLXCK1xS8D6VPZgoqf5/NS/7lbH4cXo4k4SVIX+uS/1Y2SNEuGHS1AhRY2vpSrprSOZ1u0Po7wD3M7tckuTuubxXM7q6YvWEN1sy+HUnnk/izZCOnu++h8y8=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463452847</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B48EAF6B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53e21657-2911-4ad4-a8b5-fc4bba541055</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02016_AccountDelete_FUNC_CS_Deleting_an_account_which_is_blocked_P1" searchProperties="true" id="64b4fcbb-418b-444a-9249-09fb0a72bda8"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="07a4624a-2633-4ce7-a0f9-ecfac1a48444"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="ed18e71c-04b6-4f92-8267-0f8baca196c7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="84b03257-1984-4b4e-9572-31edef6edb72"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="2b77616e-a468-4bd9-aba2-d37babf00793"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Retailer_CS" id="9c52891d-e1d5-4a12-bcba-de9f987a4ccb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="c3f9ee83-0057-4843-a9f8-9d6488783674"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="123fe13a-11be-4308-971f-97f13d6fe467"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CC843E37A2E05307991F0A444C</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CC6DE36B80E05305991F0A0CC0:5EA695A"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CC843D37A2E05307991F0A444C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CC843D37A2E05307991F0A444C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B56D446B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B56D446B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+o6EP7ur+jUj2dK+spLR5gpBc/hKqigHo9fnJimEG0TbNKC/vqbFIuA6OXcGWaYbDe7z77k2T3hME1sP+AcZ4Iwqg16bf3Ba+BWy4sahv3o1A23jiKjFXuO0XSgDR+hE6G6rWsDznM8oFxAKtq6bVquYTYNq3Vteb5n+l691nDNe127xRmXpqVKzdS1ZZpQ7pdu23qeUZ9BTrhPYYq5L5A/CYbnvtT0YYVJ75ysUJYOs85MiLkPAKpFGOEkQTXEUnACtnROIu5PyJRCkWf43WfE2/r73cViUVs4NZZNgW2aJjBbQOpEnEyP9c5RdRlHAxqz1TmElFGCYELeoAI1xGLGIi1IpiwjYpZ+YdoClqlMG3iJDGS59FgHHw5KdAda2gKZcWjwGbQqY2Mc4wxThLWb8aCtHx9WwdXd6wxSHrMs5Tvnv4OEaYETNseRwavIKnSHW9yTrs4JRv6AoiTnpMAj1SZziDDXLjMck+U54bL5Iq6V5deWXP5I1WUY/U1ZTsAmVgkd7MlOj0wxF/+nZpv1Wlm5hUmOO94FirM4c+6eukP3HL7FMPrDrgGBz6xdQthUXoFal/v9vNus6956v5Tn1o/TAARWOp4sGv+MHHd4GbfIkMQ5tUdFqw//NGcEOGjcheQnM5fjonne817Nrj25/BXcBWEfeUlQgLyZHYVW/62bmumZObuPbn7Dm9FVGA1v88uYDhuPT9Mivyt+/nqdmTAenKVvPRDy1x+mfXb1OO/+Doh5ZzoXbgH4zVnPOVpcJs3CjuajOGL3yyvn+Ym1P2LajGFbWFHCJH98wkhUR9Ueg552KusFxff0oiQkMuJS1Z8rjuICU6F31C1FLX4uCYhEvizm6myap33H63r1nuvWu41+3/Qc02u1rFMzCHtho+KgFYodiCGjMVG+FMuu+ud7gCj1OaYRzoyC5WiGuf6NxR4UUBvQsXwcjHJ8zSSLWx6xn+Gi2ah7C9trCFIkxXNz7rzp2oiJC3qRBbHA2TZ1N7eoe4wRmROs+F01OJcdzoXMxQsscpFYtQLWKM7lBMgUCfu22/QAJ+k8wQopSFmUJ7g2n83LzAC++rcNiHgpHfevy4f3ZVy736oUSJ2IKAWuYuliWUa8Zwa5VSBfBmxbmwFX5oM8Iup9yXyKjKAVku1PH22i+mPdIzKih3DyYFW41+oHX/98E3wDCuzmY+0oKsiG22qYyvkg2aNTVfMF1l5qeVHkZf0aihkzaR5IgrTABKNc0tvrNXvGFKxNgIOmyxr1jue1fBtfLmZ0IqDAqew2rTwesFpMMFerxUA+k+Whe8uWS5k3gZdinyxM5AaiEH+7pCAfKT0pvpR/C5ZFH+XaY2vDj4xT7hOC0Kk6qTny+kVTICbNEkl8LNs0vs/APufbwnWS11iE7KbHXOCvv2iK0do6RIjlVAx6einYZNkSp3idY/9D6ZOZksnfR/OSfzma74bnE8l3KdTXuuS/lQ1StgvCutoASixtfSk3TemcTjdY/R3gZ2IPw6br9JxGYJfE3lgRu+u64TqBW5F0Pok/SzZyuvseOv8C</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463455948</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B56D456B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f1d334d9-845e-4bab-b073-a66657cc23ae</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02017_AccountDelete_FUNC_CS_Deleting_an_account_which_is_archived_P1" searchProperties="true" id="dc9b39a9-5d31-4692-a366-219b02ed919f"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="a1c78130-fc93-44ef-88cf-61ed8f8a9aef"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="2d6e5046-64ca-49ef-9fd2-94c690c1b247"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="edc83ef5-1e8c-4c3b-a7c7-4eb6d96eaf02"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="2f9548df-911e-461b-a6f6-4be82c384813"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","archived");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Retailer_CS" id="ff8cfb37-22d6-498a-9b4d-5cb323d9f0b1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="7b7cc72f-6280-47e8-a0e7-99b703dd5ce1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="c4a24469-1933-4e2b-9d65-26896609dc26"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35B4F59C379CE05307991F0A189A</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CCBC8037A6E05307991F0A9C25:195388F0"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B4F59B379CE05307991F0A189A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B4F59B379CE05307991F0A189A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35BEA1F56B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35BEA1F56B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdj9o6EH3vr4jSx6uQhBA+ogUJFmhD2S/Cttu+VMYZwN3EYWMbAr/+2oGwwLJ76ZUiRZ6MZ87MnBz7iqE4KnttxiDlJKGa323qvxu1sBwiZBk1p46MCqqD0bDC0EC1qgOTes2xGhNd8xkT4FPGEeVNvWzZFcOqG3ZjbLuea3uWVbIc95eufYeUydDSpWTpWhZHlHl52qYuUuoliBHmURQD8zj2gvbN0JOeHiow6a2rLco8Ydqac77wTBOXQsAQRbiEk9i8Mo98rkLmBWRGERcp7HKGrKnv9q5Wq9LKKSXpzCxblmVaDVP6hIzMPuutT8VmCH06Tbbra0QTSjCKyAYpUDfA50motaNZkhI+j98JbZu2pUIbkGED2xX6WTdfE+ToLox0BDJlyGBzZBfBRjCFFCgG7XHkN/XPl01wu3ecIsqmSRqzk/XfQQK6hChZQGiworIC3eURz7SrdQXY8ymOBCNLuFU0WSAMTLtPYUqyIWGSfCHT8vFrGZMPKVgG+G/GcmUeYpXQzTPd6ZIZMP5/ZnY4r22U7ygS0Opbw2e+ua90B/GvSjjZfLWDoXC+9UcP9WYO4dB5C2o/7t36lKx7bu02fUtWFvn5OLwTE3H7Jbn/4jvr6qzWs7NuKhJrKqpDF7LvnaC/XlS74b3//OPm8cGKfji/2pvxw7o7SDduvesMbjZfP6UwuRcP3cZjNuj9GTtBLYzhblTtDH4ETwMrYi9P3RglIUOVXjA30cO3YY+5f6LbARIk6yyfNzZzn6KX6tD/2f5UJ4tgPfDdrLycxH7Nrv3z2Hyt6bCGY2MhCYGY/AHMi6Wih9/V+nJeiH8sL8pCQmOau3oLpVGMA+V6S+1S0uIJKUAk9OQwt2vL6vcct9Nr23232qlXepbrWG6jYfetdr/dcQsN2qI4gXid0ClRuZTKbvnzMUAcewxoCKmxTASeA9M/iNhFHGk+HcmfI6EMxolUcbrh9em6WlnXJyJdZUTGYuu4EerabcLv6F3annJIj5W7fqTcI8BkQUDJu+I3kwRnXLbiBS0Fj+zSEpUoCHkApEqDvXKl7pqMxIsIFFAzTkIRQWkxX+SNMdn2XTYQZrl11Bvn/927ZZ1+KzogfUKiHJiqpQNyivDmCLLksyvk3YLL9mHBRfi2CIn6vWQ7eUrwFsnxp1eWKHrsKSIr+n0d/LYL3Hv3i7e/3Wl+AMo87cc+UbgkB2mLs1QeD1I8WsU0X1DppSSWS5HPr6aEMZXhTamPthkAFlLd1uPkGai5D2FedLjsUZ9k3tuP8Qk+pwFHHGLJNi1fXnCzCICpm4UvmZ1dem05Sin7xiHj52zXkbyAKMQf3lGwh5WfNN/L1ypJw9dxnYl1kEfWKa8TnNCZWqljZP0OKXAiwxKpe0l6GPxcgHPJj437Ju+xcMmmieDw/hdNCVpTRxgngnK/q+eGQ5HNcfL1ArxXpzdhciHfncwZe/dkfroZBlLuYqTvfcl/OxskpwsGXV0AcixNPZMXTZmczg5EfQfwjK5X+m6j49Qa17mu17a6btcb7X0DjyppvTG/tRz09PR/aP0L</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463459265</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35BEA1F66B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cd14f869-bc8f-4f65-9ecc-2fdca351a5dd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02018_AccountDelete_FUNC_CS_Deleting_an_account_which_is_other_P1" searchProperties="true" id="36daef44-5b8f-4a12-b663-26d1d7b36fdd"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="5ef98a5e-4b67-4d0c-9821-363eeee996ed"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="d8df9aad-b212-44d9-b80f-e41ecf6d951d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="79a67075-1a19-4ee4-b03b-c2553a2c95a7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="bf14f6e6-0f3c-42e7-94d4-c71cf78edeac"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","other");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Retailer_CS" id="4b122c36-9d51-47da-a788-e6eb3f1fb278"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="5f1ad86c-c874-4a52-a492-c4593f40f16d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SPL_CS_ALLOWED_ACCT");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" disabled="true" id="491e62cd-7cd9-4181-8b58-3f46c0903fc2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CC845A37A2E05307991F0A444C</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35B5121D6B7CE05305991F0A6AA3:F544A1ED"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CC845937A2E05307991F0A444C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CC845937A2E05307991F0A444C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B4F5A9379CE05307991F0A189A</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B4F5A9379CE05307991F0A189A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj1VIAqSEqCBRLj3ZLVAa2rJ9qYzjELeJHWIH6P76YwdCgUIPeyQk5Ml45puLv5lrBuKo7LQYQynHlChup6G+goptGVe1imZWjIpWLRt1rV6ZXmlVE5pXwJxaAQxUxWUsQy5hHBDeUMuGWdUMWzPrY9NyLNMxKqWaZbyoyhNKmTAtVEqGqqziiDAnd9tQs5Q4FDDMHAJixBwOHa/Vv3OEpgMKTGrzeo0yd5g2Q84TR9dhyUcQRREsQRrr1/qezrXPHA/PCOBZijY+fdZQN3eXy2VpWSnRdKaXDcPQjboudHyGZxdq80dxGfkuCej63AaEEgxBhP8ACaqPeEh9pRXNaIp5GJ8wbeqmIU1raAU1aFbJhap/OsjRnWlpD2TKgMZCYBbGHlCAUkQgUh4f3IZ6cV4F13fHKSAsoGnMDs5/BwmRBYpognyNFZEV6M63eCRdzWsEHZfAKGN4gQayTRIAEVPuUxTg1R1movl8puTlV1ZM/HDRZQj+TVmu9V2sArp+JDsdPEOM/5+a7dZrbeUJRBlq3o6m+DG9vJnSN9vmSWYwHdp3vwzyYjRyCLvKa1Dbcm/Oh8267a3NJTCC8OkquAyfKvUBI6Pbyf3vF7313HVrEzy+vbGtm9HweWb8Mt0+faHjFoRg+kYXxMePvaQ6H/XCauBm7nwx7/5IyvHvySJ5uB3e/LyM7NXIa02T8HI5+Ylr+qDPwsn9MEonqLeMRjU/mFpJjOPuHX7/J50+171h2Vu1xRsdPI/R4of32P9zy8FA9yYsuLoHg8574zOm3Rj2hQUleNn0DUFeHGV7uB2lJ+oF+Pf0IiXY14Jc1UkkRzGOCFeb8pakFicTBIR9RxRzfTaMXrdi3VR7VqteqdXbXcOqGLV63ewZLdOutwoOWqM4gNimJMDSl2TZdf98DxDGDkPER6m2oBkMEVO/sdgBHCgueRCPgxKGxlSwOC/HldkSZKCeJqFthh9UOLqyqaoMKB+SYdoKOEr3mdveY+4HBHGCkaR32d9MNDjjIhVzsMh4ZJYWoERQJgZAKjnYKVdtS2c4TiIkgeox9bMIlZIwyROjs/V/WQOQ5dKH7jh/dyfDOvxWZEDo+FgqMBnLDRJVRF9GkOFYRSAnAy6buwEX5luZj+XzEunkKYZrJPufPrtEtse2RUREr23v1Sxwb9XPvv71pv4NKP0wH1tH/gLvuC1mqRgPgjyaRTXnoDQvZYtFltevJokxFeZ1wY+m7iGYCXb7GNN3RPStCf2s4bJFfeB5K9/Hl/GQeBxwFItuU/LjGZuFh5jcLFzxSlbnri17LkXeOFrxY7J2JBYQifjbHQU6UOoJ8b34W9LU/yzXEVs7fkScYp3gmMzkSY6RjxNNAakwiwXv0XTX+DEDx5zvC7dJ3mLhopumGUenvyiS0BoqgJBmhLsdNRfskmyOk38kyPlU+mImJ/LNZF6xk5N50r/zBN3FQN3q4v9W1nDeLhCpcgHIsTTUlVg0hXMy2yH1DcCvvN5u21VL8HqrvMvr1Wq1vU3gXiTNL+Kvkp2cHr6H5r8=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdbk6q6En73V1iuR8sBFEGsmakKFxUV71dedmEIiHKTgKC/fgcdXTprZp3Z50nT6XR/faHz5RUbnlttAoxRFDuBX1Tlt9I/sGbxNGfAikGzVoU1BLoiWAhVWM40eMusV2lGKBVVjBOk+jg2/PitRGS1Ci1UGHrGMM1ao1nnXlimqpeKCxRhYpqovNClYua5Pm5e3L6VkshvBgZ2cNM3PISbMWxOgdZvEs2mccNUen+9orw4jN63cRw2KQq+mAgi14UvMPCoV+pJ59XEzalj+0acROjDp4nfSh9n0zR9SWsvQWRTVZqmKVqgiI6JHftX6b1wO4xM1beC61oy/MB3oOE6ZyMHpaF4G5hF4NpB5MRb7xvTDMXQuekKymAFMqz/q0T9dnBB90NLTyAjbFTw1mBuxibIQhHyISrOJ+pb6dfPKng9O4sMH1tB5OFP6/8GCflH5AYhMiv4FtkN3c8tfpGu91cEm6oP3QQ7RzTI2yQ0IMLFUYQsJ+s7mDSfiYuX8hczfOswBP9LSV6pR5wENvVFZmTHRjj+f+r1WKurlYXhJujd3Az9NIrj2AyrDb5BeccumC5lmtHttwuER+UrqHupP9afG/XeVx+HgH6QAEWFHW+43wWCyLOzATQyqC43IyFgww6KDHleXfBhnwnP7GFSV5aOMRqMeQLMtI6Gmkq4fPYtY68VOlun7ojlyBsmPWdxpgd+bX5QyhvHX/P9APM06YFso8/XEh+zHD0x1Ho2yDY0lyJFreKyARJ1vOLHOsesCo59ED3KmdTrKdAXYuZt12+/Y3qMIY+rh06XIPP/qzotyEZs3BdSPiks8nnG6F1TVaksSxJAkg1SVQS2KvbPYCDa+8N277SFlBbBeN4CMjhpE5DK9lpejMc9JTUXC1dfqK2WqE3YtAPWcoFsyEq2kPVVlzaWeriutmh9KormahJsat3Q7OzTzhYOtJmWDmbqSdsp2WCm0MuLzM7I+qztNGY4m9cKy50oaBMlldOLR1lJtwN9OQnXcyGFZ2WsAbYNmLkibbXOzFswsDbZwp3S18D+Ihe3mrRYaJkyA6OCaA8WJLaZ1NJD6JnhxnO3D8Y7xPjMbC9Om7ab6Gdlp0lKW5oe2lN1U5PHShdM1vPNcrE3lq1jAXYGYHPzSEpsrILU1hupPF53e4Gubo9wAMaKKI4BSRcNNLXdBUFbBBoLnOws7UQukMxWSnWruFAW3Da3OjmHFTbatGswjQaz7i+50YGTFb+s95LNbqttV61huTc1j3MhFs5rfCwfOcNhYBZa45XSiXuZ1RlPC5uRnK1gp2zaXco9C61I47sgOp+2rmZP4iU3xKeNY1lLcTVkXd5ytdoktFwrPOHyLBjvI5oTUa1KrU/HXlwAtiYC0N7Nd+JYExt5Uk01Ha810QAtJU7AeVeNe9XFods5unBdA0HWWw53+4/CmHKqiFQ6VkhbKYWGDMy8CJ3pXGntwFy07Ui0lZY4hjIYr9Veuib5mneI8uc8ti55tBURKDUdcEKnUJvTQjyMpywLTr4491vCVjtkS5PzaP6AlP50ELKphgeWry+DveY50TxKpvNeb9DPNrOkvd+RWWXR096xpheU4z4EzqA32+7lQDZG4Xodh2UfRjBWQ09Ts/NQx7uGs/HobrnOiCNahnx17m3SedtQ9F5kT5leZ+KParxQwIl16njlXSNdlmdTLuRNybfk04nSowUdgKAlTOoHM6tW99t52udSqwv2G6M6yFxBPAlKT5/BdDLuLadeuV6oH/t9jz7PKHYQDtNpO2WV8bhcM8VZZ4bDyFknDTuLhr5ZXRsxd9TpBeeE7l6oJvsZG9YWtkeKNTqaIa+NCmN2BXXP5kPYpSbUESi81Vfbp83ZOIfeEF4H6OfpcBde5wf1OFmeRs+NdExJtyIY35b5BaTKxRa5FYz47wQmlzhmxbqoNsOcBeEY+XHpPT+Vk5dmQiiOYzbJlXFdKxzNKTItiVydkxotUaFZmmnRgOYFgZZ4+cZyrig+QZQC33JyXzmPu95SfwcIvSZGvomiyjFI4Bbh0l8s5vkqqv6EXL+Bj9EsIDyRVoSayHMyy9JyQ6ySvmbrXJ0XW4pYbzE8VyoOgnjoDyNgxSh65ojsE0ecIOiEDsqJZH6bYnKd4pik5GAck9hlXo7Gi48SQjWjnO01q2yjTmHHC12UA6a8wExc9BJuw0uCKHz9rVYMiC/SiTL7R51Kl5v+2xA/792yQXRMJ1fAeTwiIhVFXxBe9hbM90Hzj0HfzIPEdPILnaQ2jhx4RfK89btj8la5twuJ6gb5rvlZ8GSV+hzQ3ZF5dOC95+/PAcImCd94v5XkYLwcXpLjMbkUgc+5VETMUwxF89QUwYQQotMs2COfupugfsRF76g/eb7Ln/El8dafxuR79kjLFC/LHzxEpgjnDxGVtHz201fOk0uStxhl8VcyySXvlRzxX580sAlzPSIekZ80iMzf5frC1oMfEmc+wBzfzlc58zx90xQwIGYdMsSC6NH4Vwa+cv4svCf5jiUm3bRJYvT9TjGfTm8lA8Ig8WNVLl0EjxPzgjM+haj5W+kPMxfu90HmM/wtmV9p/SmZXZ5Ruus6/1u54lzaBSJyCjsXLG+ljLxLiXPffpjQHwD/GNKAURhRAIKkgE9DunVP4FMk73+I/5Q85PTz9/D+Lw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463463024</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B4F5AA379CE05307991F0A189A</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5e6679db-772f-499a-b063-80c4e4839f6e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>role</con:name><con:value>nodeIdRTL</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:${#Project#nodeidRTLCS}</con:value></con:property><con:property><con:name>role_CS</con:name><con:value>nodeIdRTLCS</con:value></con:property></con:properties><con:tearDownScript>if(context.expand( '${#Project#runTeardown}' )=='true')
	{
	log.info("Executing TearDown for Suite '" + testSuite.getName() + "'");
	
	for ( testCaseResult in runner.results )
	{
	   currentTestCaseName = testCaseResult.getTestCase().name;  
	   currentTestCase = testCaseResult.getTestCase(); 
	   log.info("Current TestCase : '"+ currentTestCaseName + "'");
	   log.info("Current TestCase Status : '" + testCaseResult.getStatus().toString() + "'");
	   
	   if ( testCaseResult.getStatus().toString() == 'FAILED' )
	   {
	      log.info("Re-executing failed TC");
	      def currentRunnerTC = currentTestCase.run(null, false);
	      log.info("Status on re-execution : '" + currentRunnerTC.status + "'");
	   }
	}
	log.info("Execution of TearDown for Suite '" + testSuite.getName() + "' Completed" );
}</con:tearDownScript><con:reportParameters/></con:testSuite><con:testSuite name="AccountDelete_FUNC_Portal_P2" id="3c010641-1e88-4c4e-913b-2f4d2efcdf93"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02001_AccountDelete_FUNC_NonCS_Deleting_an_account_which_is_pending_P1" searchProperties="true" id="ccbd740a-073c-4f41-ad84-76cbf14401e5"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="5fc6cf7e-bdb7-4374-89ab-2a5058af8572"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="40f4ff51-1488-4ee1-ab01-33614a2d63e5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="18d102f0-692f-49c1-9fbb-919e3ff5f88c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Update Account Status" id="b319331f-e846-4b74-8e40-279511055f3e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","pending");
myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="d5d71f1e-af33-40d5-9bc9-9bc045ec5a2e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","ACCT_INACTIVE");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" disabled="true" id="f4c2ac93-758c-4fe4-8db8-5eb20d93637f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","active");
		myTC.setPropertyValue("ACCOUNT_STATUS","pending");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35B56D6F6B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35BEA20D6B84E05305991F0AFAB5:BF8FC526"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B56D6E6B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B56D6E6B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35BF57756B96E05305991F0A65D7</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35BF57756B96E05305991F0A65D7</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+I4FH2fX4Eyj1VIDCSBqCABATYztNOFdjr0ZeU6F/A0cULsQOivXzs0FCjtdlaqRH1zfe65Hz72JcdRWHO7nEMqaMwqvtfW/mnMkR00cFNvBkFdb8zlf61HgnSH2HYN0CMC09EqPucZ+IwLzERbq5mooZtNHbVukeVayDXtqtNoPGiVn5ByCS1dqqZWyaOQcbcI29aylLkx5pS7DEfAXUHcafdq7EpPF5ectM7ljmURMO0shUhcwyDVAAiEIamSODIujSOfy4C7U7pgWGQpvMQMeFt72bvZbKqbejVOF0bNNE3DbBnSJ+B08VXrfCk3Q+Czebxb9zGLGSU4pM9YkboCsYyDSjdcxCkVy+gdaGQgU0HrkBOdoAb7qhmvAQp2n0Q6IplyrPMlRiXYBOaQAiNQuZv4be3r5zq423ubYsbncRrxk/WfUQK2hjBOINB5mVnJ7vOIZ8rVuQTi+oyEGadruFZjkmACvHKTwpzmY8rl8AW8UrS/knP5R8spA/Inbbk0DrlK6saZ6nh0AVz8n54d9muH8hOHGXRqk5W9WTpbe5gOYJEL8pygYNvEXn/WLigcOu9I7dv9sj4d1v1svWy6TVe/aSP3Hh7G23iIgy5d/731kHfdSm/q3+6SSU385nbYfxqy/PsIBavEG0XB03hcv3OYNZvBenYlPOitftzSL9Zz1rq44I3FbDiaxxuIzG/3s+dr3x8/18Q0eB773Zup0RPmFev7181R3d9eDO7p9wG5yGyr/jRb3KORI34h48H50uuGy8lf0GSjZvNqNLx/vOu2X3M6zOHYWErCNHv8DUSUSzUevlcZyn5h8bG8KAsN9Hnh6iZKo7gAJrSO2qWkxc2kANHAlc3crU1zOKhbvaHlOJbda9kD06qbVquFhmbXtjyn1KAdixOK/ZjNqYqlVHY3Px8TJJHLgQWQ6us4I0vg2geIHha44rOJPBwx43AbSxVHMcqCpuDzVSu3EYlWeSieGo4tpApfx+IH+5F25wLSY+1uHmn3BAhNKCiBVxPO5YhzIYuxwutMhKi6xlUGmbwCUqXCbq3RtAxOoyQERdWI4iALoZosk6I0Bt/91nRMeGGlnCRxKnCIigP4bn6n38pSSJ+AKgeuUuqBbCe8uYtM1yrzeTfvGjrMu4TvZgFV50zWVaSU7Jgcf3odFzUn+1nZJ0Y4Krnvt/whxBkA4wN+xmlp9vGCNT2IXt6v8sqQgtIp+7vC1VU1W6+zoqOOEstUwhtSM5ExBZJJxdvexk/AjD2E8akLZ8/6JPLefswvE0s2FVhAJOevUiw/8dqYAlevDV+enPyzT5mjkLJuAnJxztYP5aNEMf7w3UJcovyk+Ub+bOI0eG3XGayDODJP+cQQlC3USl0t23dmg8QSlkotjNND8HMA54IfG/dF3nMRcpoeMwHvf6kokWtrmJA4Y8L3tMJwKLwFT7FNwH11egNTiPvLbZ3zd2/rX1fjqZTACGt7X/rfzjotxoWAph4FBZe2lsvHpwzOFgdC/0LwjNZbtmcP7J4zONT6vtd/neWjTDpvzG8tBzU9PQ+dfwE=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdbk6q6En73V1iuR8sBFEGsmakKFxUV71dedmEIiHKTgKC/fgcdXTprZp3Z50nT6XR/faHz5RUbnlttAoxRFDuBX1Tlt9I/sGbxNGfAikGzVoU1BLoiWAhVWM40eMusV2lGKBVVjBOk+jg2/PitRGS1Ci1UGHrGMM1ao1nnXlimqpeKCxRhYpqovNClYua5Pm5e3L6VkshvBgZ2cNM3PISbMWxOgdZvEs2mccNUen+9orw4jN63cRw2KQq+mAgi14UvMPCoV+pJ59XEzalj+0acROjDp4nfSh9n0zR9SWsvQWRTVZqmKVqgiI6JHftX6b1wO4xM1beC61oy/MB3oOE6ZyMHpaF4G5hF4NpB5MRb7xvTDMXQuekKymAFMqz/q0T9dnBB90NLTyAjbFTw1mBuxibIQhHyISrOJ+pb6dfPKng9O4sMH1tB5OFP6/8GCflH5AYhMiv4FtkN3c8tfpGu91cEm6oP3QQ7RzTI2yQ0IMLFUYQsJ+s7mDSfiYuX8hczfOswBP9LSV6pR5wENvVFZmTHRjj+f+r1WKurlYXhJujd3Az9NIrj2AyrDb5BeccumC5lmtHttwuER+UrqHupP9afG/XeVx+HgH6QAEWFHW+43wWCyLOzATQyqC43IyFgww6KDHleXfBhnwnP7GFSV5aOMRqMeQLMtI6Gmkq4fPYtY68VOlun7ojlyBsmPWdxpgd+bX5QyhvHX/P9APM06YFso8/XEh+zHD0x1Ho2yDY0lyJFreKyARJ1vOLHOsesCo59ED3KmdTrKdAXYuZt12+/Y3qMIY+rh06XIPP/qzotyEZs3BdSPiks8nnG6F1TVaksSxJAkg1SVQS2KvbPYCDa+8N277SFlBbBeN4CMjhpE5DK9lpejMc9JTUXC1dfqK2WqE3YtAPWcoFsyEq2kPVVlzaWeriutmh9KormahJsat3Q7OzTzhYOtJmWDmbqSdsp2WCm0MuLzM7I+qztNGY4m9cKy50oaBMlldOLR1lJtwN9OQnXcyGFZ2WsAbYNmLkibbXOzFswsDbZwp3S18D+Ihe3mrRYaJkyA6OCaA8WJLaZ1NJD6JnhxnO3D8Y7xPjMbC9Om7ab6Gdlp0lKW5oe2lN1U5PHShdM1vPNcrE3lq1jAXYGYHPzSEpsrILU1hupPF53e4Gubo9wAMaKKI4BSRcNNLXdBUFbBBoLnOws7UQukMxWSnWruFAW3Da3OjmHFTbatGswjQaz7i+50YGTFb+s95LNbqttV61huTc1j3MhFs5rfCwfOcNhYBZa45XSiXuZ1RlPC5uRnK1gp2zaXco9C61I47sgOp+2rmZP4iU3xKeNY1lLcTVkXd5ytdoktFwrPOHyLBjvI5oTUa1KrU/HXlwAtiYC0N7Nd+JYExt5Uk01Ha810QAtJU7AeVeNe9XFods5unBdA0HWWw53+4/CmHKqiFQ6VkhbKYWGDMy8CJ3pXGntwFy07Ui0lZY4hjIYr9Veuib5mneI8uc8ti55tBURKDUdcEKnUJvTQjyMpywLTr4491vCVjtkS5PzaP6AlP50ELKphgeWry+DveY50TxKpvNeb9DPNrOkvd+RWWXR096xpheU4z4EzqA32+7lQDZG4Xodh2UfRjBWQ09Ts/NQx7uGs/HobrnOiCNahnx17m3SedtQ9F5kT5leZ+KParxQwIl16njlXSNdlmdTLuRNybfk04nSowUdgKAlTOoHM6tW99t52udSqwv2G6M6yFxBPAlKT5/BdDLuLadeuV6oH/t9jz7PKHYQDtNpO2WV8bhcM8VZZ4bDyFknDTuLhr5ZXRsxd9TpBeeE7l6oJvsZG9YWtkeKNTqaIa+NCmN2BXXP5kPYpSbUESi81Vfbp83ZOIfeEF4H6OfpcBde5wf1OFmeRs+NdExJtyIY35b5BaTKxRa5FYz47wQmlzhmxbqoNsOcBeEY+XHpPT+Vk5dmQiiOYzbJlXFdKxzNKTItiVydkxotUaFZmmnRgOYFgZZ4+cZyrig+QZQC33JyXzmPu95SfwcIvSZGvomiyjFI4Bbh0l8s5vkqqv6EXL+Bj9EsIDyRVoSayHMyy9JyQ6ySvmbrXJ0XW4pYbzE8VyoOgnjoDyNgxSh65ojsE0ecIOiEDsqJZH6bYnKd4pik5GAck9hlXo7Gi48SQjWjnO01q2yjTmHHC12UA6a8wExc9BJuw0uCKHz9rVYMiC/SiTL7R51Kl5v+2xA/792yQXRMJ1fAeTwiIhVFXxBe9hbM90Hzj0HfzIPEdPILnaQ2jhx4RfK89btj8la5twuJ6gb5rvlZ8GSV+hzQ3ZF5dOC95+/PAcImCd94v5XkYLwcXpLjMbkUgc+5VETMUwxF89QUwYQQotMs2COfupugfsRF76g/eb7Ln/El8dafxuR79kjLFC/LHzxEpgjnDxGVtHz201fOk0uStxhl8VcyySXvlRzxX580sAlzPSIekZ80iMzf5frC1oMfEmc+wBzfzlc58zx90xQwIGYdMsSC6NH4Vwa+cv4svCf5jiUm3bRJYvT9TjGfTm8lA8Ig8WNVLl0EjxPzgjM+haj5W+kPMxfu90HmM/wtmV9p/SmZXZ5Ruus6/1u54lzaBSJyCjsXLG+ljLxLiXPffpjQHwD/GNKAURhRAIKkgE9DunVP4FMk73+I/5Q85PTz9/D+Lw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463466057</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35BF57766B96E05305991F0A65D7</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>99c61175-ca6e-4fe9-95b0-5f3d02f2072d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02003_AccountDelete_FUNC_NonCS_Deleting_an_account_when_user_is_not_active_P1_UV-340" searchProperties="true" id="d6bda426-bca5-46b3-b6a0-2b0c9b85aed3" disabled="true"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="datasource" name="User_Status" id="132671e8-e327-4e6f-ae1b-4941ecae221b"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">forcedeleted&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">suspended&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">pending&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">other&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked:tou&lt;/con:entry></row></con:configuration></con:dataSource><con:property>Status</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="a987a21d-518e-4fca-8cff-1af7ff72a0cd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="05d6d5d0-5ba3-4095-9666-389962e89389"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="4962b027-578f-4f90-995e-3f486b7962e3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Update User Status" id="093ea082-d917-4d09-9b73-f2009f0aaabb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def status = context.expand( '${User_Status#Status}' )

myTC.setPropertyValue("Status",status);
myTC.setPropertyValue("USER_OID",tC.getPropertyValue("USER_OID1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="c27d5e5e-b1d9-4d6d-b64a-7fffc2b13e11"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","USER_INACTIVE");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" disabled="true" id="88da0370-ab2f-4196-8514-6f6ced8087a8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","active");
		myTC.setPropertyValue("ACCOUNT_STATUS","active");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="a561ac8a-2537-46d7-970c-b60ec2b41092"><con:settings/><con:config><dataSourceStep>User_Status</dataSourceStep><targetStep>Establish Test Case Properties</targetStep></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CC6DF86B80E05305991F0A0CC0</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CCD7E537A8E05307991F0ABBBB:88FD884A"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CC6DF76B80E05305991F0A0CC0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CC6DF76B80E05305991F0A0CC0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B56D856B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B56D856B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdc9o4FH3vr/C4jx3jDzAxnsAM4LDrNCEppGnalx0hX0CpLRlLNoRfv5KJHSAkm+4MM4yur84990NHOucoiR2/zzlkgjCqhUFX/8dtzueW07QMF3c8o9XCYHgIIcOaddBZezZH2HN0LeQ8h5Bygajo6o5ltwzLM+zOne36ru07zYZjO7907R4yLqGlS8PStU0SU+6XYbt6nlGfIU64T1EC3BfYn/avr3zp6aOKk94737EsA2a9pRCpb5q4EQGGOMYNzBLz3DzwOY+4PyULikSewXPMiHf1573r9bqxbjZYtjAdy7JMq2NKn4iTxWe996naDFFI52y3HiLKKMEoJlukSF2DWLJI68cLlhGxTN6Atk3bUtAGbLCB7Rb9rJsvAUp2H0Q6IJlxZPAlsiuwCcwhA4pB+z4Ju/rnj3Vwt/cuQ5TPWZbwo/WfUQJaQMxSiAxeZVax+zjiiXL1zgH7IcVxzkkBYzUmKcLAtdsM5mRzRbgcvohrZfu1DZc/Uk0Z4D9py7m5z1VSN09UJyAL4OL/9Gy/XzuUexTn0AuDX9MvZgf1wX4Iv6Lmb5akefCjmN173ZLCvvOOVN3u5/XxsNaz9bzpzlps+WXEbvt5kA0u8a/7a1iPt+GsPYQfrekl8zzMLxl2f64215desroYJAUah49ZSvv9Of39NLjsrB/HfMzsT8XkAomf/ZG9WqB26D0sR8mcbOP11Bo3hzeiNVzfOKGbkivxECP0F5ptRzMvMMcTshj9CHDzK/02+fa9L1rib/dT9uVGfPkZmePOWeEmaPu0DLsvOe3ncGisJGGazx4Bi2qpxiMMtJHsFxLvy4uykMiYl65+qjSKC6BC76ldSlr8XAoQiXzZzN3askYXTXfgtgPPbQ/OLi4st2m5nY49svrDYHhWadCOxRHFIaNzomIpld3Nz/sEceJzoBFkRsFyvASuv4MYIIG0kE7k4WCUwx1TKk7aKcSb1WMnAafDt8TORLLNCl0bM3FDb7L+XEB2qNzegXJPAJOUgJJ3Nd9cDjgXshQrVOQithsFalDI5QWQKQ32nZbnmpwkaQyKqJmwKI+hkS7TsjAm3/07BsK8tBKOU5YJFNvl8Xszu+NvVSGkT0SUA1cpDUA2E07cRHaVz5t5O/Z+3hV8P4+IOmWyqiIjeMfk8NPLsKgpqSelTgxzu+Jeb/lDiBMA5jv8zOPS1PGiguxFr25XeWFIOelV/V2hxqqRF0VedvRMSWUm4U2pmLY5BZxLvXu6Y7+BmjWE+aHrpmZ9FLm2H/LLxZJOBRKQyPnTyuUH3hpT4OqtEcpzs/noQ+YgpKybgI04ZRvG8kmiGL/7asE+Vn7SfCv/1iyLXtp1AmsvjsxTPjAEoQu1UhfL0xuzgZmEJVIJWbYPfgrgVPBDY13kmouQ0zTLBbz9RVMS19URxiynIgz00rAvuyVP8ZSC/+L0CqaU9ue7esPfvKsfrq+mUgATpNe+5L+dDVKOCwZdPQlKLl19I5+eMjhd7Mn8M8HXSj8ctoPRWXvgWftKbw2HVl3Ag0x6r8yvLXs1PT4PvX8B</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463482487</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B56D866B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>99c61175-ca6e-4fe9-95b0-5f3d02f2072d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9c263e60-96bd-4c9c-9c64-ad6f469cfc89</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>132671e8-e327-4e6f-ae1b-4941ecae221b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02004_AccountDelete_FUNC_NonCS_Deleting_an_account_when_user_is_Basic_P1" searchProperties="true" id="f8b2cd4d-0e28-424d-bf6c-3c65e73f043f"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="916f3099-3b1b-4c18-9ab7-4c9b76f5dc8a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="e6365f60-42d2-48a7-abff-9bb7c72835a9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="8c28dbcd-2714-4a29-837d-87441484017f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));


tC.setPropertyValue("LegalGuardian","");

//required for Child user Create

//tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID_FAU1"));
//tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call Adult BAU Create" id="453739ef-7314-4e61-911f-017187486d03"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )

log.info country;

def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

myTC.setPropertyValue("Country",country);
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="99adb5c3-a9c1-4607-b71c-85f8d80cb831"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="73f52fb5-cb49-4944-828b-989d7b5bad20"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","USER_NOT_PERMIT");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" disabled="true" id="dced0b71-8a9a-4ac5-b658-465dfc170a96"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","active");
		myTC.setPropertyValue("ACCOUNT_STATUS","active");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CEC7486B94E05305991F0A1B73</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CDBB93379EE05307991F0A9FE6:9407A174"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CEC7476B94E05305991F0A1B73</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CEC7476B94E05305991F0A1B73</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B479E7379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FE35BEDD476B8AE05305991F0ABD1F</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B479E7379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FE35BEDD476B8AE05305991F0ABD1F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I4FH6fXxFlHlchFwIhUUHilg4dmOkA7VxeVsZxgjuJHWInpPvr1w5NCpR2OyshIZ8cf+c7F3/2FQNJbHlDxlDGMSXKbNJX/zY7phNYG0PbmAbU7B6yNeBskNbtOMgybNgNg42qzBjL0YwwDgjvq5Zh2prR00x3bXa8julZnVbH7v1SlXuUMQEtXFqGqpRJTJhXhe2reUY8ChhmHgEJYh6H3mq4mHvC0wM1J3VwdWBZBcwGW85TT9dhK0AQxTFsQZroV/qJz1XAvBWOCOB5hp5iBqyvPu3d7/etfbtFs0i3DMPQDVcXPgHD0Ud18KHejIIZCelhPQaEEgxBjP8BktQC8S0NlGEc0QzzbfIKtKmbhoTWUAk1aNrko6o/B6jYvRPphGTGgMa2wKzBlihEGSIQKXfLWV/9+L4OHvauM0BYSLOEna3/jBIiBYppigKN1ZnV7N6PeKFcgysEvRmBcc5wgb7IMUkBREy5zVCIyzlmYvgCplTtV0omfrieMgT/pC1X+jFXQV2/UJ0JjhDj/6dnx/06oNyDOEcDd36ThYU/xTAYXaeP7TF0R98mw08FnfYrCsfOB1JNu5/W58PazNbTJhYU9ux7j1mrHf16jT//0neThf7t/u7nXXc5d3o9f2re+Z+vEVtkfnBnjoj9PVqXvp9Gk7l9PS5/pT7YmQ/+ssw/tO31js7WJR7exKMC/nQf5v7N47eNST+jW3EiI2sbR+OffI4X3Vi3/vIXUbt9Pcm3yx+2eX+f/06CVRih/W3ngX8IuVmwL+vSbc/B/rprfxpP+885HedwaqwlYZVvHhDk9VKOx2yi+KJfgL8tL9KCAy2sXL1UahTjiHB1IHdJafFyIUA48EQzD2vD8Kftzsh23KnTdtzh1Oi0Dcd1Td8YuuOpUWvQgcUZxTElIZaxpMoe5udtgjDxGCIByrSC5nCLmPoG4gRwoMzIUhwOShhaU6HiKXfDMNyWmzghges61h50DbdTqMoXyr+Sr9kw5Cg7Ve7eiXIvEcQpRlLe5XwzMeCMi1LsQJHz2GwVoEVQLi6ATGqwZ9m9js5wksZIEtUTGuQxaqXbtCqMzg7/lgYgq6yYwZRmHMRmdfxeze78W10I4RNg6cBkSiMkmoku3ERmnc+reVvmcd41/DAPsDxloqo8w/DA5PTT87DIKWkmpUkMMrPm3mz5Q4gLAPob/PTz0jTxggIfRa9vV3FhCDkZ1P3dgdaulRdFXnXUkVKZCXhdKKaprxDMhd49rulvRPQGQn/XddOwPovc2E/55XxLVhxwlIj5U6rlO94aK8TkW2Mmzk353ofMSUhRN45Kfsk2jsWTRDJ+89UCPSj9hPlW/O1pFjy36wLWURyRp3hgcEwiuZIXy+MrswGpgMVCCWl2DH4J4FLwU2NT5IYLF9O0yTl6/YsiJa6vAghpTvhsolaGY9mtePLHFHnPTi9gKml/uqtL9upd/WMxXwkBTIDa+OL/dtZwNS4QqfJJUHHpq6V4eorgJDqS+SeCL5V+PB07ttMduXal9J2D0psjp90U8CSTwQvzS8tRTc/Pw+Bf</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I4FH6fXxFlHlchFwIhUUHilg4dmOkA7VxeVsZxgjuJHWInpPvr1w5NCpR2OyshIZ8cf+c7F3/2FQNJbHlDxlDGMSXKbNJX/zY7phNYG0PbmAbU7B6yNeBskNbtOMgybNgNg42qzBjL0YwwDgjvq5Zh2prR00x3bXa8julZnVbH7v1SlXuUMQEtXFqGqpRJTJhXhe2reUY8ChhmHgEJYh6H3mq4mHvC0wM1J3VwdWBZBcwGW85TT9dhK0AQxTFsQZroV/qJz1XAvBWOCOB5hp5iBqyvPu3d7/etfbtFs0i3DMPQDVcXPgHD0Ud18KHejIIZCelhPQaEEgxBjP8BktQC8S0NlGEc0QzzbfIKtKmbhoTWUAk1aNrko6o/B6jYvRPphGTGgMa2wKzBlihEGSIQKXfLWV/9+L4OHvauM0BYSLOEna3/jBIiBYppigKN1ZnV7N6PeKFcgysEvRmBcc5wgb7IMUkBREy5zVCIyzlmYvgCplTtV0omfrieMgT/pC1X+jFXQV2/UJ0JjhDj/6dnx/06oNyDOEcDd36ThYU/xTAYXaeP7TF0R98mw08FnfYrCsfOB1JNu5/W58PazNbTJhYU9ux7j1mrHf16jT//0neThf7t/u7nXXc5d3o9f2re+Z+vEVtkfnBnjoj9PVqXvp9Gk7l9PS5/pT7YmQ/+ssw/tO31js7WJR7exKMC/nQf5v7N47eNST+jW3EiI2sbR+OffI4X3Vi3/vIXUbt9Pcm3yx+2eX+f/06CVRih/W3ngX8IuVmwL+vSbc/B/rprfxpP+885HedwaqwlYZVvHhDk9VKOx2yi+KJfgL8tL9KCAy2sXL1UahTjiHB1IHdJafFyIUA48EQzD2vD8Kftzsh23KnTdtzh1Oi0Dcd1Td8YuuOpUWvQgcUZxTElIZaxpMoe5udtgjDxGCIByrSC5nCLmPoG4gRwoMzIUhwOShhaU6HiKXfDMNyWmzghges61h50DbdTqMoXyr+Sr9kw5Cg7Ve7eiXIvEcQpRlLe5XwzMeCMi1LsQJHz2GwVoEVQLi6ATGqwZ9m9js5wksZIEtUTGuQxaqXbtCqMzg7/lgYgq6yYwZRmHMRmdfxeze78W10I4RNg6cBkSiMkmoku3ERmnc+reVvmcd41/DAPsDxloqo8w/DA5PTT87DIKWkmpUkMMrPm3mz5Q4gLAPob/PTz0jTxggIfRa9vV3FhCDkZ1P3dgdaulRdFXnXUkVKZCXhdKKaprxDMhd49rulvRPQGQn/XddOwPovc2E/55XxLVhxwlIj5U6rlO94aK8TkW2Mmzk353ofMSUhRN45Kfsk2jsWTRDJ+89UCPSj9hPlW/O1pFjy36wLWURyRp3hgcEwiuZIXy+MrswGpgMVCCWl2DH4J4FLwU2NT5IYLF9O0yTl6/YsiJa6vAghpTvhsolaGY9mtePLHFHnPTi9gKml/uqtL9upd/WMxXwkBTIDa+OL/dtZwNS4QqfJJUHHpq6V4eorgJDqS+SeCL5V+PB07ttMduXal9J2D0psjp90U8CSTwQvzS8tRTc/Pw+Bf</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbU+o6FH7fv6JTH53SCyDQEWa4yUFRPMJmqy9nQrqAaJuUJEXw15+k2AqIHj0zzDBZXfnWty75knOBotDzm0IAl4RRo9+pm/9UoVYqOahszYpOzSrBFFvTWg1ZFafi4en0DCOvahp9IRLoUyERlXXTc9yS5VQttzZ2y37Z9b1KoVgrPprGBLhQ0Mql4JjGOgqp8NOwdTPh1GdIEOFTFIHwJfZHzeuBrzx9lHEyG+dblmlA3lhIGfu2jQsBYAhDXMAsss/tPZ/zQPgjMqdIJhzeYgaibr7tfXl5KbwUC4zPbc9xHNup2conEGR+YjZ+ZZsh6NMZ267biDJKMArJK9KkrkEuWGA0wznjRC6iT6Bd23U0tAVrbGG3RE9M+z1Ayu6bSHskuUCWWCA3A7uDGXCgGIzfd/26efK9Dm73jjmiYsZ4JA7WP6MEdAUhiyGwRJZZxu77iEfK1TgH7PcpDhNBVnCjxyRGGIRxy2FG1gMi1PAFwkjbb6yF+pFsygD/pC3n9i5XRd0+Up0OmYOQ/6dnu/3aokxQmEBDxg/3cTdeXSI0GXiL4XIei2LonV7+9Xc9pbDrvCWVt/ttfTis+Wy9bRrzp6v2cLqGCZmdtjen8R9yW2IPk8XsjAhyDVd22X65qqD2w/No3GuK3jIqdYvDESlVH73oFCokmIru5vV+9jr/xftDuzV67M/H0W+0RLAZtFuDmsu7yNu08DqudnoymVd77uS06N31Hsa9iwmiveTSe6zhyuXw6Wx5Kx5b8eDP09Ov9vKWn96g7lKMKpvededyyurvOe3msG/MJGGUTJ8Ay2ypx6PfMS5Uv5D8Wl60hQTWLHX1Y61RQgKVZkPv0tLiJ0qASOCrZm7XjnPRLZZb3U6nVDlrVZtdp1x0yrWae+E0Wx33ItOgLYsDim1GZ0TH0iq7nZ+vCeLIF0AD4NaKJXgBwvwCsYMkMvr0Th0ORgWMmVJxtuHJUpT4eo7L7rSyjMjT89kzWZ6Zxg2TQzrkzZkEvi/d1T3pvgNMYgJa3/WACzXhQqpaLNEqkaFbWKEChUTdAFyLsO+VqmVbkCgOQTO1IxYkIRTiRZxWxhbbf89CWKRWInDMuEShm56/T9M7/JZVQvkERDsInVILVDfhyFXkZvl8mrfn7uadwTeTgOhjpsoqOcFbJvuf3qdFj0k+KnliWLgZ93zLDyGOANhf8LMPS5PHC1ZkJ3p2vaobQ+lJI+vvEhWWhWS1StKOVrRWcgVvK8l07RHgRAneZsyegdo5hP2t+yZnfRA5t+/zS+SCjiSSEKn5M9LlNx4bIxD6sdFXB2f93ZfMXkhVNwlreczWDtWbRDP+8tmCfaz9lPlW/b0wHry36wjWThyVp3phSELneqVvls0ns4GZgiVKChnfBT8GcCz4vjEvcs5FqmmaJhI+/2JojaubCGOWUNnvmKlhV3dTnnITg//u9AEm1fa3y3otPr2s768HI6WAETJzX/LfzhZJxwWDqd8EKZe6uVZvTxWcznd0/o3gR6lvd9sVLfW10q7Uu61KMS/gXiaND+aPlp2aHp6Hxr8=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AccountDelete_user20130918_1379459446852</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463484879</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20140819_1408463486634</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B479E8379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>00FE35BEDD486B8AE05305991F0ABD1F</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02005_AccountDelete_FUNC_NonCS_Deleting_an_account_when_user_is_Controlled_P1" searchProperties="true" id="0789b0bb-4ca8-41b3-a146-62d875277a26"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="71307d97-a642-4441-ac07-1021142feedf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="52b07b15-0b58-4a56-8922-7aef1ebc294c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="ca0f54ff-bc1b-48e7-96fd-58a81ee22a0f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));


tC.setPropertyValue("LegalGuardian","");

//required for Child user Create

//tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID_FAU1"));
//tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call Adult SAU Create" id="a39fc33b-69cc-4539-a374-de7dce84dfab"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )

log.info country;

def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");

myTC.setPropertyValue("Country",country);
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="2e8beee7-0e3d-4100-85eb-2b7fad174cfd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="a4f2ed25-4ea2-4b2f-bfab-a1db3a5c2134"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","USER_NOT_PERMIT");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" disabled="true" id="8d94f89b-6861-48a2-b72d-62822a3191ff"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","active");
		myTC.setPropertyValue("ACCOUNT_STATUS","active");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35B42F253798E05307991F0A5105</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CEC7566B94E05305991F0A1B73:9ED60D55"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B42F243798E05307991F0A5105</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B42F243798E05307991F0A5105</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35CDBB96379EE05307991F0A9FE6</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FE35B479FF379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35CDBB96379EE05307991F0A9FE6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FE35B479FF379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdU+o6FH0/v6JTH53SD4rQDjCDAopHQUU9ji93YrpbIm1amhTq+fU3KbYCohfvDDNMdnfWXvsjK2kzFIWW22MMUk5iqoz6HfWfRrNZdwzb1qymhzXbQS8acnzQwPIs22ghp+4ZqjJiLIMRZRxR3lEtw7Q1o6WZzr3ZcBumazk1xzSfVeURUiaghUtN7MqjkDK3CNtRs5S6MWKEuRRFwFyO3Wnv+soVni4qOand9pplETDtzjhPXF3HNQ8whCGu4TjS2/qWT9tj7pQEFPEshfeYHuuo73tXq1VtVa/FaaBbhmHohqMLH4+R4Ejt/io3gzeifrxenyEaU4JRSP4iSeoa+Cz2lF4YxCnhs+gLaFM3DQmtQY41bNr0SNU/AhTsDkTaIpkypLEZMkuwO/AhBYpBebgbddSjwzq43nufIsr8OI3YzvpnlIAuIYwT8DRWZlayOxxxT7m6bcDuiOIwY2QJYzkmCcLAlJsUfJJfESaGz2NK0X4lZ+JHyikD/JO2tPVNroK6vqc6fRIA4/+nZ5v9WqM8ojCD7rE9Xhz/xc9jA/L56s/kwQmC66iXXF6xTkFh03lNqmr3+3p3WKvZet+U4+vmycxHE3gYJL7fJE/Hy+P4Koxfx5fBypkPT1uXQ/QwG4/Dm9H4nN9MXn19cTE8b/nn4+TcJ+zkz6MZzS9a/f4vfXB5f/dqm0/6hM7z/tXEs42L2Hm+Pcsf/Ow3oPn0ckbq01vU/P08CNPIa+CnwKKtRn57vng8TuanJ8bFZPhoBPjXjcHnb8smu/ZwPZiC49BV5yOnzRy2jaUkTLOXV8C8XMrxGPWVoegX4t/Li7QQT/MLVzeRGsU4UK525S4pLW4mBIh4rmjmem0Yw0G9cdY/PXVO6k1nMDAadaPpOObQ6DnDwUmpQWsWOxTPYuoTGUuq7Hp+vieII5cB9SDVlnGGZ8DUbxD7iCNlRO/E4Ygpg/tYqHh9Hs4jAKv5mnDTfpnhF4pPgLwuVGUc8wmdpD2fQ7ot3a0t6b4DTBICUt/lgDMx4YyLWizQMuOhWVuiGoVM3ACpFGHXslsNnZEoCUEy1aPYy0KoJbOkqIzO1v+WhjArrIThJE45Cs3i/H2Z3u63shLCxyPSgcmUTkF0E/ZcRWaZz5d5W+Zm3iV8L/OIPGairDwleM1k+9PHtMgxqUalSgwzs+RebfkhxB4A/Rt++m5pqnjekmxEL69XcWMIPemW/V2g2qKWLZdZ0dGm1MpUwOtCMk19CjgTgvd2H8+B6hWEftB9U7HeiVzZt/llfEanHHGIxPwpxfKAx8YUmHxsjMTByQ99yWyFFHXjkPN9trNQvEkk42+fLdjF0k+Yb8TfKk69j3btwdqII/IULwxOaCBX8mZ5+2I2cCxgiZDCON0E3wewL/i2sSpyxYWLaXrJOHz9RZEa11ERxnFG+aivFoZN3S148rcE3A+nTzCFtr9f1jn78rJ+ur6aCgWMkFr5kv921kgxLhhU+SYouHTUXLw9RXAabOj8O8HPUn9qW0PLFlLf2pT6hmk0qgJuZdL9ZP5s2ajp7nno/gs=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdU+o6FH0/v6JTH53SD4rQDjCDAopHQUU9ji93YrpbIm1amhTq+fU3KbYCohfvDDNMdnfWXvsjK2kzFIWW22MMUk5iqoz6HfWfRrNZdwzb1qymhzXbQS8acnzQwPIs22ghp+4ZqjJiLIMRZRxR3lEtw7Q1o6WZzr3ZcBumazk1xzSfVeURUiaghUtN7MqjkDK3CNtRs5S6MWKEuRRFwFyO3Wnv+soVni4qOand9pplETDtzjhPXF3HNQ8whCGu4TjS2/qWT9tj7pQEFPEshfeYHuuo73tXq1VtVa/FaaBbhmHohqMLH4+R4Ejt/io3gzeifrxenyEaU4JRSP4iSeoa+Cz2lF4YxCnhs+gLaFM3DQmtQY41bNr0SNU/AhTsDkTaIpkypLEZMkuwO/AhBYpBebgbddSjwzq43nufIsr8OI3YzvpnlIAuIYwT8DRWZlayOxxxT7m6bcDuiOIwY2QJYzkmCcLAlJsUfJJfESaGz2NK0X4lZ+JHyikD/JO2tPVNroK6vqc6fRIA4/+nZ5v9WqM8ojCD7rE9Xhz/xc9jA/L56s/kwQmC66iXXF6xTkFh03lNqmr3+3p3WKvZet+U4+vmycxHE3gYJL7fJE/Hy+P4Koxfx5fBypkPT1uXQ/QwG4/Dm9H4nN9MXn19cTE8b/nn4+TcJ+zkz6MZzS9a/f4vfXB5f/dqm0/6hM7z/tXEs42L2Hm+Pcsf/Ow3oPn0ckbq01vU/P08CNPIa+CnwKKtRn57vng8TuanJ8bFZPhoBPjXjcHnb8smu/ZwPZiC49BV5yOnzRy2jaUkTLOXV8C8XMrxGPWVoegX4t/Li7QQT/MLVzeRGsU4UK525S4pLW4mBIh4rmjmem0Yw0G9cdY/PXVO6k1nMDAadaPpOObQ6DnDwUmpQWsWOxTPYuoTGUuq7Hp+vieII5cB9SDVlnGGZ8DUbxD7iCNlRO/E4Ygpg/tYqHh9Hs4jAKv5mnDTfpnhF4pPgLwuVGUc8wmdpD2fQ7ot3a0t6b4DTBICUt/lgDMx4YyLWizQMuOhWVuiGoVM3ACpFGHXslsNnZEoCUEy1aPYy0KoJbOkqIzO1v+WhjArrIThJE45Cs3i/H2Z3u63shLCxyPSgcmUTkF0E/ZcRWaZz5d5W+Zm3iV8L/OIPGairDwleM1k+9PHtMgxqUalSgwzs+RebfkhxB4A/Rt++m5pqnjekmxEL69XcWMIPemW/V2g2qKWLZdZ0dGm1MpUwOtCMk19CjgTgvd2H8+B6hWEftB9U7HeiVzZt/llfEanHHGIxPwpxfKAx8YUmHxsjMTByQ99yWyFFHXjkPN9trNQvEkk42+fLdjF0k+Yb8TfKk69j3btwdqII/IULwxOaCBX8mZ5+2I2cCxgiZDCON0E3wewL/i2sSpyxYWLaXrJOHz9RZEa11ERxnFG+aivFoZN3S148rcE3A+nTzCFtr9f1jn78rJ+ur6aCgWMkFr5kv921kgxLhhU+SYouHTUXLw9RXAabOj8O8HPUn9qW0PLFlLf2pT6hmk0qgJuZdL9ZP5s2ajp7nno/gs=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbU+o6FH7fv6JTH/eUXgCBjjCDXLQq6AZ0jr6cCUmgwTatSVouv34nxVZA9OCZYYbJ6sq3vnXJl1xwEAaO2+YcM0Eiqnndpv6vfW7DsmUBo4ZqNaPSqCOjXkZl49yuzaYQ1G1g2brmcZ5gj3IBqGjqjmVXDKtu2I2JXXWrtlu2S+dW40XXnjDjElq6lCxdW4UB5W4WtqknjLoR4IS7FISYuwK64/bgzpWeLsg56a2LLcssIGv5QsSuacISwhAHASzBKDQvzD2fC8TdMZlTIBKG32Mi3tTf9y6Xy9KyXIrY3HQsyzKthil9ECfzM731K9+MkUdn0XbdATSiBIKAbIAiNcDCj5DWDuYRI8IPv4C2TdtS0AZeQQPaFXqmmx8BMnYnIu2RZBwY3Ad2DjbCM8wwhVh7HHlN/ey0Dm73ThigfBaxkB+sf0YJ0xQHUYyRwfPMcnanIx4pV+sCQ9ejMEg4SfFQjUkMIObaA8MzsrojXA4f4lrWfm3F5Y/kU4bhT9pyYe5yldTNI9Xpkjnm4v/0bLdfW5QnECS4dTOMa74zQnVUHlYGj6Ldc7w/nef54mnQzCjsOm9JFe1+Xx8OazFb75tGz+VlLJ7rrBZM/jzMF5s6+n2bDqYP4e31A3mcrP05ejHD9HXzeDe5v2nXnp6v+M3tomxN0HAR3Y66KaotkLUZJle/4Etn0/G7MN4Mmb24Yc51/7JeRS8s9jfBI12T1dX5st3o1b1wfp14leRhce5HfvwW9njQu7lDv/vJ4yqtvM6n9q/z9Xg6jDfcIVcp7qSV5TNsfuS0m8O+MZeEcTJdYCjypRoPr6v1Zb+A+F5elIUgY5a5urHSKC4wFXpL7VLS4iZSgAhyZTO3a8vq98rVy0qt0e+Xa412z6qWrVqjYfetdqPTs3IN2rI4oNiJ6IyoWEplt/PzPUEYuhxThJmRRgn0Mde/QewCATSPjuThiCjHk0ip+JtoEF9iOOnCQYvKtBL4BBMopXsYiXt6z9ozgdm+dNf3pHuEIYkJVvquBpzLCedC1uINpIkI7FIKShQn8gZgSoRdp1KvmpyEcYAVUzOMUBLgUuzHWWVMvv13DAB5ZiUcxhETILCz8/dleoff8kpIH0SUA1cpXWLZTXzkKnLyfL7M27F3887h2wki6pjJsgpG4JbJ/qePaVFjUoxKkRjkds692PJDiCMA5jf8zMPSFPFQSnai59ervDGknrTy/r6B0lspSdMk62hNaSWT8KaUTNscY5hIwVtPoldMzQLCPOm+KVgfRC7s+/wS4dOxAAKHcv60bHnCY2OMuXpsePLgrE59yeyFlHUTeCWO2TqBfJMoxt8+W6ALlZ80P8i/ZcTQR7uOYO3EkXnKF4YgdK5W6mZZfzEbMJKwREphxHbBjwEcC75vLIpccBFymqaJwF9/0ZTGNXUAYZRQ4XX1zLCruxlPsY6x++H0CSbT9vfLesW/vKz/GdyNpQKGQC98yX87GyQbF4h19SbIuDT1lXx7yuB0vqPz7wSPSb3TdypS6uu7Ul+1rWpRwL1MWp/Mny07NT08D62/</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AccountDelete_user20130918_1379459446852</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463489185</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20140819_1408463490950</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35CDBB97379EE05307991F0A9FE6</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>00FE35B47A00379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02006_AccountDelete_FUNC_NonCS_Deleting_an_account_when_user_is_Full_P1" searchProperties="true" id="24bacf99-a791-4279-bbf8-467d5000ab9b"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="ebca1f32-daa6-467b-bb51-396fe6907025"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="501f2c68-a25a-4c5f-a54c-3bd1a509c651"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="d7df8f27-6414-45a6-87b0-d5de8e0b1245"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="1771c679-192e-49c3-972f-a893a2ba119f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="65b3f5fa-1c19-429d-b7f6-8f3d0896b044"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CCBCB437A6E05307991F0A9C25</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CC848437A2E05307991F0A444C:8937B041"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CCBCB337A6E05307991F0A9C25</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CCBCB337A6E05307991F0A9C25</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35CEC7596B94E05305991F0A1B73</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35CEC7596B94E05305991F0A1B73</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbZcuI6EH2fr6A8z8YLmMUVqGIJiZmsmGQy83JLlhvQxJYcSwYzX38lEzvAkNzMraKKUrt1+vSiI51xFEe2O+AcUkEYrXnjnvZPBzmm1WjaOgrCQG86QaAHQdDU7aZjtVoBBgiRVvM4z8CjXCAqepptWk3d7OhWd245rmO5jUa902791GqPkHIJLV3qplbL44hytwjb07KUugxxwl2KYuCuwK4/uL5ypaeLSk5a/2zHsgiY9ldCJK5h4HoIGKII1zGLjTPjwOcs5K5PlhSJLIXXmCHvaa97N5tNfdOos3Rp2KZpGmbXkD4hJ8uvWv9LuRlCjy7Ybj1ClFGCUUR+I0XqGsSKhbVBtGQpEav4HWjLsEwFrUOOdWw16VfNeAtQsPsk0gHJlCOdr5BVgs1gASlQDLWHmdfTvn6ug7u98xRRvmBpzI/Wf0cJ6BoilkCo8zKzkt3nEU+Uq38G2PUojjJO1nCjxiRBGHjtLoUFya8Il8MX8lrR/lrO5Y+UUwb4b9pyZuxzldSNE9UZkyVw8X96tt+vHcojijLot30f+ZuQi+23i8l2cj8N0VCk4eNdwnoFhX3nHamq3a/r42GtZut105r+vpy8XN3iSXJrb3A2nvHphdU2I3ge+NNtJ/Aehg10a4ru5MZZW+f+UzhaPs7D+7wbd+IYPfjmc/Q8f7n8IcSX1eTR+3259Rer/I5P7/1pfp9MbnIWrXO/eX/j5ZPN9m6RW99bL9PwJrF+NI35xeQyGHvff2b3Tzb1ru8epsuGv356+BKLTXc4+x5Fi+FsLIKLFG96bznt53BoLCXBz4JfgEW5VOPhjWsT2S8kPpYXZSGhvihc3URpFBdAhdZXu5S0uJkUIBK6spm7tWlOzhvO6HzUdrqtYbd5bjoN0+l2rYk5sIbtRqlBOxZHFEeMLoiKpVR2Nz8fE8Sxy4GGkOprluEVcO0DxDESqObRmTwcjHKYM6niVqf1bG9/kaQpGIN4SyOW2yAcKd03TNzS23SwEJAeSnfnQLpngElCQOm7GnAuJ5wLWYsXtM5EZNXXqE4hkzdAqkTYtZsdx+AkTiJQTI2YhVkE9WSVFJUx+O5fqhLmhZVwnLBUoMgqzt+76R1/KyshfUKiHLhKaQiym3DiKrLLfN7N27b28y7hB1lI1DGTZRUpwTsmh5/epkWNSTUqVWKYWyX3astfQpwAMD7gZxyXpooXrsle9PJ6lTeG1JN+2d8XVH+pZ+t1VnS0rbQylfCGlEzL8AFnUvC2c/YM1KggjE/dNxXro8iV/ZBfJlbUF0hALOevViw/8djwgavHhicPTv7Zl8xBSFk3Abk4ZRtF8k2iGH/4bMEuVn7SfCf/NiwN39p1AmsvjsxTvjAEoUu1UjfL9p3ZwEzCEimFLN0HPwVwKvihsSpyxUXIaQoyAe9/qSmN62kIY5ZR4Y21wrCvuwVPsU3AfXP6A6bQ9tfLOufvXtZP11e+VMAYaZUv+W9nnRTjgkFTb4KCS0/L5dtTBqfLPZ1/JXhC6kfD0bDRaA9ahdS3d1LfHdlOVcCDTPp/mP+07NX0+Dz0/wU=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463493265</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35CEC75A6B94E05305991F0A1B73</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02007_AccountDelete_FUNC_NonCS_Deleting_an_account_already_deleted_P1" searchProperties="true" id="1093dba4-f17d-467e-81b8-f11a168fe1b7"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="d101bfb7-1514-4a7a-9e0f-c296adcae0a5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="021d4090-196b-472e-a97e-1f6349c0bd28"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="3d51ca74-c828-471a-9c6a-e030051dd83a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="datasource" name="Account_Status" id="956b5a30-2865-427c-a903-10242cecfaeb"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">deleted&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">forcedeleted&lt;/con:entry></row></con:configuration></con:dataSource><con:property>Status</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="9f6411ae-1d49-431a-8ee3-5d18bd804a7d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def status = context.expand( '${Account_Status#Status}' )
myTC.setPropertyValue("Status",status);
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="9a16d164-a623-4d2d-b809-d9d4f0d5e8c5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","ACCT_INACTIVE");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="d9823c70-a0d4-408c-8339-45758b72823c"><con:settings/><con:config><dataSourceStep>Account_Status</dataSourceStep><targetStep>Set Account Status</targetStep></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CEC76E6B94E05305991F0A1B73</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CC848737A2E05307991F0A444C:D7F63E5F"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CEC76D6B94E05305991F0A1B73</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CEC76D6B94E05305991F0A1B73</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B3E2376B78E05305991F0ABA86</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B3E2376B78E05305991F0ABA86</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVfZcuq6En3nKyj2I0U8MJpKUiVjGwyYyWZ8OWVkeQBPWJ7g649MAptkJ/vm3CdQq9W9enBr6Rnrnst2AcYoip3AL8vCS+UfRLfqOmzAGtsxG7VGxzBqHU5v1zgE60yDZli9qVfKMsYJkn0c6378UmFppl6juRrT1phGt0l3G+2nVpPZVcorFGFimqg80ZVy7rk+7l7dvlSSyO8GOnZw19c9hLsx7KpAGXeJZle/Yaq8Pr+hvDqMXu04DrsUBZ8MBJHrwicYeNQz9UHn2cBd1bF8PU4i9O7TwC+V97NZlj1l9acgsiiWpmmK5iiiY2DH+lV5Ld0OI0P2zeBt3dP9wHeg7joXvQCloNgOjDJwrSByYtv7xjRDMXRhuoZyWINMw/9VoX47uKL7oaUPICOs17CtMzdjC2SiCPkQlZcL+aXy62cVfDurRbqPzSDy8Kf1f4OE/BS5QYiMGr5FdkP3c4tfpOv1GcGu7EM3wU6KJkWbhDpEuDyLkOnkYweT5jNw+Vr+co5vHYbgfynJM/WIk8CmvsiM4FgIx/9PvR5r9WZlpbsJerUYWvA3KqWIUtVbz9YiC4bT6fnE042XK4RH5TdQ91K/rz836r2v3g9dxpe0NT4N2alKj4YdwEKt2hK3dKjZuu1JSgiC4coMLpch6RLB8Zo5OJ2nHdnYyGPbE4f6aZDK6wm0mwEu0Sa9hb3UwlZ7JYcjESnHYMq218ESdc5ImvbxIZc6/enpGNStU7CTD8P6xFZH64wKpsfmqKOyk3PWaHHDVCpt1GGfb8GwHch1VZrpUm/58jumxxiKuEbofA2y+L9p0pygx/p90SsmhUk+zxi9KrLcqwq9HkA9C2QyDyyZH1/AhLeOJ/vo9LmM5sF8KQEBnJUFyARrK6zm85GYGauVu1vJksQri0Y2AFuhRDYEMV8Ju82Q1te7cMtK9E7leWOzCPb1YWgMjtnAhhNFU7KJJp+Vg5hPNJFeX2VWTtYX5aAwU21ZL60PPKcsxEzIrh4FMbMnu/Ui3C65DF7EuQIafcAsxZ6tDDRvxcD6woYHcayA41XO20pvtVJyUQOzEm9NViQ2rSftQugZ4d5z7QfjA2JcM/qr877vJruLeFB6Yr+nnvqqvK8Lc3EIFtvlfr066mspLcHBBOxvHp2mo2+CzNp1MmG+HY5IGe0UTsBc5Pk5IOmigSL3hyDo80BpACe/9A58K+gZUkYNWVyqcm6/tTk7pw3W+7SrM50Osx2vW7NTSxD96m6U7A+2Ym+kaXWkGumSi7nLFqfVtKU7DMxDc74RB/EoNwdztbSfCfkGDqqGNaTcCydFSnsIosvZdhVrEa9bU3zeO6a55jfThts2XaW+CE3XDM+4qgXzY0S3eFRnqe05HcUlYCk8AP3D8sDPFb5TJNWQs/lW4XUgiXECLgc2HrGr03CQunBbB0E+Wk8Px/fCGEIm8lQ2F0lbiaWOAIyiCAN1KUoHsOQtK+ItUeLnUADzrTzKtiRfywFR/pxH6ZpHS+SBWN+BFjco1Zc0F09jtdEAZ59f+hJnK6d8bbQ8un1C4lidhI1MwRPT362Do+I50TJK1OVoNBnney3pHw9kVpm0Okrru5KYHkPgTEaafRQCQZ+F220cVn0YwVgOPUXOL9MdPnScvUcPq02Gn9ECbLNLb58t+7q4G0WWyowGC39Wb3MlnJjngVc9dLJ1VVNbYdvo+aZwPlO7aEUHIJC4RfNk5Cx7tJfZuJWZQ3Dc6+wkdzn+zImjnQazxXy0Vr1qs9RMx2OPvmhUYxJOM7WfNcT5vFo3eG2g4TBytknHyqOpb7BbPW6lO3rVckL3yLHJUWuE9ZXlkWLNUiNsK7PSvLGBO89qh3BILagUiG1zLPfP+4t+Cb0pfBugn6fDXfg2P6jHyfJh9NxIh0q6FcH4tiwuIFkoS+RW0OO/E5hC4hg186raDQsWhGPkx5XX4lRBXroJoTiO0SVXxttabHGtltTkOV4CHZblRJrc1RIN6CbH0Q2ufmM5byg+QewFvukUvgoe93ZL/R0g9LoY+QaKammQQBvhyl8sFvkqy/6CXL+Bj5EWEJ4oNTsczdebTI+hm7TYbgkdQRDYZrsnSR2p06yUJ0E89acRMGMUfeSI7Q8ccYGgEzqoIJLFbYrJdYpjkpKTniaxyzyl+pOPEkI1o4LtddlGp0lhxwtdVACmvMBIXPQU2uE1QRR++2VrOsRX6ULU/pHV3vWm/zbEz3u3bBAdwykUcBEPj0hF0ReEt34L5tugWfox6Jt5kBhOcaGT1MaRA9+QfNz63TFFq9zbpYiqp/7D3HDf1X98/M+T1F9AUZ/zcXdkpM6D2xtzJ2SU0JXXW0VP+tPpKUnT5FrDdkHFImKeYii6TakIJoRPnbXgiHzqboL6EZW9o/7k+S7/iC+JbV+NyTjwSMeVr8sfvGNUhIt3jEy+mPynj6QPLkneYpTHX8l6LnnuFIj/+iKCXVjoEfGM/GRBZPwu1xe2HvyQOIv55/hWsSqI6/mbpoABMeuQGRhEj8a/MvCV84/Ce5LvWGLSTfskRt/vlIvh9lLRIQwSP5aFylXwOHCvOONziLq/lf4wc6WO72+BHH/7FtgoY5WMPk+v3HWd/61cc67tAhE5hZ0rlpdKTp61xLlvPQz4d4Bfz/gO/bcZ/zGS1z/Ef0oecvr5e3j9Fw==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU+o6FH7fv6JTH/eUXoAWOsIMiJduUbkq+nImpqGE3SbYpKX4609SbAVEj54ZZpisrnzrW5d8ySkDUWi5HcZQzDElitdrqf9YvlG1q6ChwSZwtJoN51rjuWlrTg2Zvu3DGnSgqniMJcgjjAPCW6plmDXNaGhmc2LW3brpVu1KrWY9qco9ipmAFi4VQ1WyKCTMzcO21CQmLgUMM5eACDGXQ3fcuem7wtMFBSe1fbplmQeM2wvOV66uw4qPIApDWIE00k/1PZ9Tn7ljHBDAkxi9xfRZS33bu16vK+tqhcaBbhmGoRtNXfj4DAcnavtXsRn5HpnT7foMEEowBCF+BZLUDeIL6iudMKAx5ovoE2hTNw0JraEMatCskRNVfw+Qs/sm0h7JmAGNLYBZgI3QHMWIQKRMR15LPfleB7d7JzEgbE7jiB2sf0YJkRSFdIV8jRWZFey+j3ikXO1TBF2PwDBhOEW3ckxWACKmDGI0x1kfMzF8PlPy9isZEz9cTBmCP2nLqb7LVVDXj1SnhwPE+P/p2W6/tij3IExQe+Doy8EVhSOeGsPkfICGqUGtJgOvnVZOYdd5S6ps99v6cFjL2XrbdH0fPVyaVnTjdNfDzbJZG0/4w29bnw3tKy90cBiE5utFNu3O7P504s0e7MHFxe+5NXAu+3wV6ZmFn/ifWTdk0frXEHeMXvp0i0csutkEmynLFoPZNL7KMruR1u57T/3OonqZTMEduU6D8exh1b+7Cx89axLql7fj5TUYsUFKp5j4vx6X9+CRNIPLcLgxsmj8cFtrvee0m8O+sZCEcfK8RJAXSzkeXk+5EP0C/Gt5kRbsa/Pc1V1JjWIcEa625S4pLW4iBAj7rmjmdm0YF+fVerd6blUdu+s0zo161ag3m+aF0el2GnahQVsWBxTPKJljGUuq7HZ+viYII5ch4qNYS2kCF4ipXyD2AAeKR0bicFDC0IQKFV9X00adOmmjGfkmWM7N4G9zaeBgoSq3lN+Ru7gz5yjel+7GnnSPEMQrjKS+ywFnYsIZF7V4AWnCQ7OSggpBibgBYinCrlVr1HWGo1WIJFM9on4Sospqscoro7Ptv6UByHIrZnBFYw5CMz9/n6Z3+K2ohPDxsXRgMqUuEt1ER64iq8jn07wtczfvAr6T+FgeM1FWHmO4ZbL/6X1a5JiUo1ImBplZcC+3/BDiCID+BT/9sDRlPD/FO9GL61XcGEJP2kV/X0DlpZKkaZJ31JFaGQt4XUimqY8RTITgbSb0LyJ6CaF/674pWR9ELu37/BK+IGMOOIrE/Cn58huPjTFi8rHhiYOTffclsxdS1I2jjB+znYXiTSIZf/lsgS6UfsI8EH9rGvvv7TqCtRNH5CleGByTQK7kzbL5ZDYgFbBYSCGNd8GPARwLvm8si1xy4WKanhOOPv+iSI1rqQBCmhDu9dTcsKu7OU++WSH33ekDTK7tb5d1xj69rGc3/bFQwAiopS/+b2cN5+MCkSrfBDmXlpqJt6cIToIdnX8j+FHqz87PHLtnd5u1Xak3u061LOBeJu0P5o+WnZoenof2vw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463495752</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B3E2386B78E05305991F0ABA86</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02008_AccountDelete_FUNC_NonCS_Deleting_an_account_when_Account_Blocked_and_User_Pending_P1" searchProperties="true" id="6664d5f5-d65f-4653-8475-d2667017d76c"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="2a89dadb-285d-4817-8491-deae8939a826"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="a1d5733d-0185-495c-80ea-79270d8380a8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="67af59d5-c610-4c18-93c7-4d2f48f67209"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="065ccac4-c378-4ee2-a481-0cc0e29e4c45"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set User Status" id="f134b2fa-7ac0-4079-8b59-d81a90ce3eb0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","pending");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="49162815-df7d-43a6-8b35-ef0e2b7fc57f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","ACCT_INACTIVE");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35B48F036B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35BEDD656B8AE05305991F0ABD1F:DB83EECE"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B48F026B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B48F026B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B42F363798E05307991F0A5105</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B42F363798E05307991F0A5105</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU+o6FH73V3Tq457SG5XSEWZQxF23goB4OS9nQrqAaJuWJgX01++k0AqIHj0zzDBZXfnWty75klOGotDyWoxByklMFb/dUP+dBOPAdapYQ/YYtKozdjXXmNQ0xzYmlmNAcGIhVfEZy8CnjCPKG6plmFXNcDWzfmc6nmN6dr1imyf/qMo9pExAC5eKoSqrKKTMy8M21CylXowYYR5FETCPY2/Yurn2hKeHCk5q83TNMg+YNmecJ56u40oAGMIQV3Ac6af6js9pwLwhmVLEsxQ2MQPWUDd7l8tlZWlX4nSqW4Zh6EZdFz4BI9NjtXlUbIbAp5N4vT5HNKYEo5C8IUnqBvgsDpRWOI1TwmfRJ9CmbhoSWoMV1rBZpceq/h4gZ/dNpB2SKUMamyGzABvABFKgGJTRwG+ox9/r4HrvXYoom8RpxPbWP6MEdAFhnECgsSKzgt33EQ+Uq3kK2PMpDjNGFtCVY5IgDEy5TWFCVteEieELmJK3X1kx8SPFlAH+SVtO9W2ugrp+oDptMgXG/0/Ptvu1RrlHYQbNq258Gc5stpz1x1ErGY2NYfi4uHqhy2Ujp7DtvCZVtnuz3h/WcrY2m8jLH3JXS+zXx9H8afHQgZuH4eL+sk4Hvwau3wu6zzz6PewG1bhTRf7o7sTtuUkvfLlOWm+Xc6Nru/3Z777TMZB+dRS6dfeK8LfJn+DWv9Cfzm078d+wcf7Lvfazi37fHa+iDKweg0XtYeSMrPGgxedn8/vsxR7oYcuIHni/PrGHw+ejB9yeOZitoDNmV/S2RvFT4z2n7Rx2jYUkDLPxM2BeLOV4+G2lI/qF+NfyIi0k0Ca5q5dIjWIcKFebcpeUFi8TAkQCTzRzvTaMzoXtnFWtjn1i1+ruhSGOU61eNztGyzENp9CgNYs9iucxnRAZS6rsen6+JogjjwENINUWcYZnwNQvENuII8WnA3E4YsrgLhYqbo7587SOTdfMmGUmGNXt6SoFC81VpRvzHu2lrQmHdFe73R3tHgAmCQEp8HLCmRhxxkUx5miR8dCsLFCFQiaugFSqsGdVXUdnJEpCkFT1KA6yECrJLMlLo7P1v6UhzHIrYTiJU45CMz+An+a3/60ohfAJiHRgMqUzEO2EA3eRVeTzad6WuZ13Ad/KAiLPmagrTwleM9n99D4uck7KWSkTw8wsuJdbfghxAED/gp++X5oyXrAgW9GL+1VcGUJQmkV/56gyr2SLRZZ3tCbFMhXwutBMUx8CzoTivd7FL0D1EkL/1oVTst6LXNp3+WV8RocccYjE/Cn58huvjSEw+drwxclZffcpsxNS1I3Dih+ynYfiUSIZf/luwR6WfsJ8K/6WcRq8t+sA1lYckad4YnBCp3Ilr5bXT2YDxwKWCC2M023wQwCHgu8ayyKXXLiYpnHG4fMvihS5hoowjjPK/baaG7aFN+fJXxPw3p0+wOTivrmtV+zT2/rx5nooJDBCaulL/ttZI/m4YFDloyDn0lBX4vEpgtPpltBvCB7SerdjWCdntVau9c5a6y8u7LOygDuZND+YP1q2arp/Hpp/AQ==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463498567</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B42F373798E05307991F0A5105</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02009_AccountDelete_FUNC_NonCS_Deleting_an_account_when_Account_Blocked_and_User_Suspended_P1" searchProperties="true" id="223c56e5-55b2-4603-8b70-a2a194843ccb"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="54e0b181-1f56-4ec5-be86-b24722b3874a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="5c1e9798-4d2e-425e-8501-8b7072c82eb4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="29753d2d-e00a-455b-b00f-317be4b31945"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="64c5c778-ef2d-499e-b7d1-b2e873f63b91"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set User Status" id="92fd6405-cad1-4ee6-bd27-0169d084b0a5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","suspended");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="34043361-b5b7-4174-8691-64d475f3aa9f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","ACCT_INACTIVE");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CC849037A2E05307991F0A444C</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35B512456B7CE05305991F0A6AA3:BFB8F977"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CC848F37A2E05307991F0A444C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CC848F37A2E05307991F0A444C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35BEA2316B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35BEA2316B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4jSx6PgXLlEBSncOmlpSwml074cGceAh8SmsQN0vn6c0KRAaU97JCTkne2117542eccxpHpepzjRBBGFb/bVP9t1IwpDPWGVgsNS7OrZl2DNcfSzOrM1E3bDu0GVhWf8xT7lAtIRVM1dcPW9LpmNMaG4zqGa5sVQ68/qcoEJ1xCS5eKrirbOKLczcM21TShLoOccJfCGHNXIDfwrgeu9HRhwUltne9Y5gGT1kKIlQsAqoQY4ShCFcRicA4OfM5D7gZkTqFIE/waM+RN9XXvZrOpbKwKS+bA1HUd6A0gfUJO5mdq60exGYc+nbHdugMpowTBiPyBGalrLBYsVLxozhIiFvEH0AYw9Axaw1ukIcOmZyp4C5Cz+yLSAcmEQ40voFGAjfAMJ5girNyP/KZ69rUO7vaOE0j5jCUxP1p/jxKmaxyxFQ41XmRWsPs64olytc4xcn2KopSTNb7JxmQFEebKMMEzsh0QLocv5ErefmXL5Y8UU4bRd9pyDva5SurgRHW6ZI65+D892+/XDmUCoxS3GndJYzRsNAZL+2L452lxf7ucGMHikkZ+M6ew77wjVbb7dX08rOVsvW56qlfH866zeQDTEceP6wXCw/a4h8Av5270eNHrD6qQdH6SSf3mCpHBfHPVG72MWBDe15hzNZ35IB4+BM/t8HZo/bjivfHD2liMHqcvPPBBe7x8dtahze/75vJhyS4fAfHGVxe+E00ePORXvRjpw8fNMgkm//DA8u693rrWH3dnA/ZjNPZiNvmZTO+evHv/8vbputd8y2k/h0NjIQlBOv2NkSiW2Xj4XaUv+wXF5/KSWUiozXJXd5VpFBeYCrWV7cqkxU2lAJHQlc3crXW937Ocds8zLaParts93bF0p9Ew+rrX99pOoUE7FkcUO4zOSBYrU9nd/HxOEMUuxzTEibZmKVpgrn6C2IUCKj4dycPBKMdjJlX8N4yqK8uKoDGrhmKV8JS8kGpqqcoNE7f0NvFmAieHyl0/UO4RRmRFcCbv2XxzOeBcyFI8w3UqIqOyhhWKU3kBJJkGu6ZddwAn8SrCGVEQszCNcGW1WOWFAXz3b2oQ8dxKOFqxRMDIyI/fh9kdfysKIX1CkjnwLKU2ls3EJ24iq8jnw7xNYz/vAt5LQ5KdMllVkRC0Y3L46W1YsikpJ6VMDHGj4F5u+SbECQDwCT9wXJoyXrgme9GL21VeGFJOWkV/n2HluZKu12ne0VomlYmEB1IxDRBglEq9exmzJaaghABfum5K1keRS/shv1QsaCCgwLGcPyVffuGtEWCevTV8eW62X33IHISUdRN4K07ZOpF8kmSMP321IBdlftI8lH8bloRv7TqBtRdH5ikfGILQebbKLpaXD2YDMQlLpBKyZB/8FMCp4IfGssglFyGnaZoK/PEXJZO4pgoRYikVflfNDfuym/MULyvsvjm9g8ml/fWu3vIP7+pf14NACmAM1dKX/LezRvJxQfKlKv1zLk11K5+eMjid78n8K8H3St/p1O1636p5Zq70tZ3S27bdKQt4kEnrnfm9Za+mx+eh9Rc=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463501381</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35BEA2326B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02010_AccountDelete_FUNC_NonCS_Deleting_an_account_when_Account_Blocked_and_User_Blocked_P1" searchProperties="true" id="f4f3f627-1d11-4092-84eb-4214a6d76549"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="e040d96e-a160-4bf0-a0f8-4f20ff1efdae"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="a5c459d2-e12d-4e31-861a-50c0e3d67938"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="b9a7b6fa-ac68-4d86-94bb-1d28fa615159"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="e22eec28-e560-4884-8747-8500df28b9b9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set User Status" id="68970b84-5555-4b42-ade6-6df3296aba45"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="b65589fc-751c-4e58-aa37-e75ee7cbe160"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","ACCT_INACTIVE");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35B48F136B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CEC77A6B94E05305991F0A1B73:6209A96D"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B48F126B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B48F126B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B47A21379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B47A21379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+I4FH2fXxFlHkchX6aQqCDRQlfZtrRTaKfTl5VxbsBtYqexA3R+/dqhSYGh3c5KSMg31+ee++FjHwucpV44EAIKSTkzomHP/AfPEPZxt2u1PYIshIPECo5QYDkz5LeRj52uF5tGJEQJERMSM9kzPcdFltO13GDqtsO2GyLUClD3wTTuoBAKWrm0HNNYZykTYRW2Z5YFCzkWVIQMZyBCScLJ4PIiVJ4hrjmZ/eMNyypg0V9ImYe2TVoxEEhT0iI8s4/tHZ/jWIQTOmdYlgW8xoxFz3zdu1qtWiu/xYu57TmOYzuBrXxiQedfzf6XejPEEUv4Zn2KGWeU4JT+wprUJcgFj41BOucFlYvsHWjXdh0NbcGaWMRF7KtpvwWo2H0SaYdkIbAlFtitwW4ggQIYAeP2JuqZXz/Xwc3eaYGZSHiRib31n1ECtoSU5xBbos6sZvd5xAPl6h8DCSNG0lLQJYz1mOSYgDCuC0jo+oIKNXyxMKr2G2uhfrSeMiB/0pZje5urom4fqM6QzkHI/9Oz7X5tUO5wWkK/wzCM0/P0+3J8xnlw3h63n8H5Bv511KsobDtvSDXtfl3vD2szW6+bfqJ8OnoSI3L318q/lScuIvdXGCdjb+WPr8cvlzZZ8KP2JLnv/ExmDnef7n+lCH2f+EtJgpNH99Lz04fhLRz9DV+cvJT3NCCzYHz9Pere5kIcuacvP1Ak4x+IPNzJgRg/XnmTebbGEfop0VV3ODhHs+cRWpXT++VFssg6cf7Xj+nNl4e7Izxfn59989qnMco6HRb13nLazmHXWEvCpJw9ApH1Uo9HNDTOVL+w/FhetIXGVlK5hrnWKCGBSbOvd2lpCUslQDQOVTM3a8c5G/ntE9QZeK7fCQYjp+07nSBwz5xBcDpyag3asNijeMpZQnUsrbKb+fmYIMlCASyGwlrykixAmB8gDrHERsRu1OHgTMCUKxV/RO6SPJF1kuDYLcTKf1nzJCNiZhpjLq/YVTFIJBS70t3dke4bIDSnoPVdD7hQEy6kqsUzXpYydVtL3GJQqhug0CIceqjbtgXN8hQ0UzvjcZlCK1/kVWVssfn3LExEZaWC5LyQOHWr8/duevvf6koon5hqB6FTOgHVTThwFfl1Pu/m7bnbedfwgzKm+pipssqCkg2T3U9v06LHpBmVJjEi3Jp7s+UPIQ4A2B/ws/dL08SLl3Qren29qhtD6Um/7u8zbj23yuWyrDra0VpZKHhbSaZrT4CUSvBepvwJmN1A2J+6bxrWe5Eb+y6/Ui7YRGIJmZo/o1p+4rExAaEfG5E6OOvPvmR2Qqq6SVjLQ7bTVL1JNOMPny0kJNpPma/V34oXb4kfwtqKo/JULwxJ2Vyv9M3y8s5sEK5gqZJCXmyDHwI4FHzX2BS54SLVNM1KCe9/MbTG9UxMCC+ZjIZmZdjW3YqnfMkhfHP6DabS9tfLei3evazvLy8mSgEzbDa+9L+dLVqNCwFTvwkqLj1zrd6eKjibb+n8K8FDUt89c72jk85G6tsbqR+N/JOmgDuZ9H8z/27Zqun+eej/Cw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463504208</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B47A22379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02011_AccountDelete_FUNC_NonCS_Deleting_an_account_when_Account_Blocked_and_User_forcedeleted_P1" searchProperties="true" id="b451125c-c24b-4427-abc0-7338f8eb7275"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="51a3afc6-008a-420f-b2a9-732a64cc23fa"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="4b0cc715-32ed-415e-99a7-302f5dc4585d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="145df712-c453-4669-81d8-f49df2915d62"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="97bc6aec-f10c-4af7-9157-55462613bf90"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set User Status" id="d3204f62-1d92-49ad-956f-7801c7067417"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","forcedeleted");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="1b9d097c-d68e-49b3-ace0-5ea009b69359"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","ACCT_INACTIVE");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CC6E256B80E05305991F0A0CC0</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35B56DAF6B7EE05305991F0ACDC7:5A3A58BC"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CC6E246B80E05305991F0A0CC0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CC6E246B80E05305991F0A0CC0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35CCD7FC37A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35CCD7FC37A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU+o6FH73V3Tqo1PaAOXSEWYq6D7so6CAl+3LmZiuQrRNoEm5+OtPUmwFRI8exxkmqyvf+tYlX3IqcByVPV8ISCTlzOh1W+Y/VVKBJriu9VRxG1a1iZoWrqG65QZuBYhbDaCOTKMnRAo9JiRmsmWWHVS1nIaFmmPkei7yqvVSs1x7NI07SISCVi4lxzRWccSEl4VtmWnCPI4FFR7DMQhPEm/kX116ytPDOSezfbphmQVM2lMpZ55tk1IABKKIlAiP7VN7x+c0EN6IThiWaQJvMQPRMt/2LpfL0rJS4snELjuOYztNW/kEgk6OzfZRvhmCHgv5Zt3BjDNKcERfsSZ1BXLKA8OPJjyhchp/Ao1s5GhoC1bEIqjKjk37PUDG7ptIOyQTgS0xxSgHG0IICTACxu2w1zKPv9fBzd5xgpkIeRKLvfXPKAFbQMRnEFgizyxn933EA+VqnwLxeoxEqaAL6OsxmWECwrhOIKSrSyrU8AXCyNpvrIT6p/mUAflJW07tba6Kun2gOl06ASH/T8+2+7VBucNRCu3X8Vndjh+uiH83/HN+coJxFzG/8eyEopVR2HbekCra/bbeH9Zitt42dUd8jdnit/hrdFsjg2l8PVwOfr86/cZ6GAynPpo/D6kM70dzZ3z5OFgFLh9C8+7mJsJLO32mjbPB4P6qhvvVG3Lk/OGV+fK2F0Z3/cfr11+DX0H4OPB59Ny/H4/Zy7BOgV9XLy/Xf9fQfSNp9Lv3N/5F42Xx+NJ8rMopffBHtXkgZleVo4DNXsNJ30Und/XO9ao2FDet95y2c9g15pIwSp+egch8qcej1zUuVL+w/FpetIUGVpi5ejOtUUICk2Zb79LS4qVKgGjgqWZu1o5zcV5xO51u/aJTqfuNc8etOPVmE104/pn6yzVow2KPYoezkOpYWmU38/M1QRJ7AlgAibXgKZmCML9A7GKJjR4bqsPBmYAxVyqOKsv4ubqMVmUUuggtaWXNFpG7kmAafS4HbJD4oYRkV7sbO9o9BEJnFLTA6wkXasSFVMWY40UqI1Ra4BKDVF0BiVZhr1xtuLag8SwCTdWOeZBGUJpNZ1lpbLH5LVuYiMxKBZnxROIIZQfw0/z2v+WlUD4B1Q5Cp3QGqp1w4C6q5Pl8mncZbeedw/tpQPU5U3WVCSUbJruf3sdFz0kxK0ViRKCce7HlhxAHAOwv+Nn7pSniBQu6FT2/X9WVoQSlnfd3jkvzUrpYpFlH61osEwVvK81E9ghIqhRvPeYvwOwCwv7WhVOw3otc2Hf5pXLKRhJLiNX8GdnyG6+NEQj92uipk7P67lNmJ6Sqm4SVPGTrROpRohl/+W4hHtF+ynytfpY8Cd7bdQBrK47KUz0xJGUTvdJXy/qT2SBcwVKlhTzZBj8EcCj4rrEocsFFqml6SiV8/sXQItcyMSE8ZbLXNTPDtvBmPOV6Bt670weYTNzfbuuV+PS2fri6HCkJjLFZ+NL/drZoNi5E6Z3yz7i0zJV6fKrgbLIl9G8ED2l97bxcrZ01nEzr3Y3WO52OUxRwJ5P2B/NHy1ZN989D+18=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463507191</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35CCD7FD37A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02012_AccountDelete_FUNC_NonCS_Deleting_an_account_when_Account_Blocked_and_User_other_P1" searchProperties="true" id="3734d21e-966a-4cba-8431-ec9bb6394268"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="bdd8233a-8deb-4f95-8efd-79ab77d5c1c6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="0a0b3adc-9a10-4cf3-8d07-91560ca93f43"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="08a4313a-569c-4bb2-8e47-c78a64722df2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="a24eda80-0d8d-4b8e-bae8-ed69f7670afd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set User Status" id="b187c0fc-6e54-45ed-a2e0-f2ec370b7599"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","other");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="beb38ee1-e9ab-45e6-9f8d-63cbde70fa24"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","ACCT_INACTIVE");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35B4F606379CE05307991F0A189A</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35BEA24A6B84E05305991F0AFAB5:71EE6AED"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B4F605379CE05307991F0A189A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B4F605379CE05307991F0A189A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35CDBBB7379EE05307991F0A9FE6</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35CDBBB7379EE05307991F0A9FE6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZZb+I6FH6fXxFlHkeQhT0qSKx30mWKoKDpvFwZ5wTcSexgOyz99WOHJgVKeztXQkI+Of7OdxZ/9pVAceR6XSGAS8Ko4Q/a5r+VGoRO3YVSpdpwSlV3AaVWaDslhJ2wgtyW3ag6puELkYJPhURUtk3Xdqolu1lyWg9Ozas5Xs0uN53aL9OYAxcKWrmUbdPYxREVXha2baacegwJIjyKYhCexN60e3frKU8P5ZzMztWBZRaQd1ZSJp5l4XIAGKIIlzGLrSvrxOcqEN6ULCmSKYeXmIFomy97t9tteVspM760XNu2LbtlKZ9AkOVXs/Ml3wyBT0N2WPcRZZRgFJFnpEndgVyxwOhGS8aJXMXvQDuWY2voEuxwCTtV+tW0XgNk7D6JdEKSC1QSK+TkYBMIgQPFYMwmftv8+rkOHvY+cERFyHgsztZ/RwnoBiKWQFASeWY5u88jXihX5wqw51McpYJs4IcekwRhEMaYQ0h2t0So4QuEkbXf2An1I/mUAf6btlxZx1wVdetCdQZkCUL+n54d9+uAMkdRCp3FTcR/Jo3KOOY3zOp9X7AZ61P2iK9ZO6Nw7HwgVbT7ZX0+rMVsvWzC35ztrPdr8ezTHysSLMeT/qK+/jm/v+YP17L/Ddigmz7X94/Tyf6+Vp8/xv7A+j51qzdja+aP5v+Ek8VtvZVid0C+3N/0QxjDtD5MmrfXazd+DBmMp+P9E64nt9tN0Jith3zGn77zvrjhcylnwbD+q1mf3jT6i7tH8tj1n8iyMkxZ7cvc3y6avbugNnfu6P4p9kfd9mtOxzmcGnNJmKaLJ8AyX+rx8AfGSPULyY/lRVtIUAozVy/RGiUkUGl29C4tLV6qBIgEnmrmYW3bo2Gl1h/0er1GpdEaDu1axW60Ws7I7rZGw3quQQcWZxT7jIZEx9Iqe5ifjwni2BNAA+ClDUvxCoT5AeIASWT4dKIOB6MCHphS8R1PCIF1JDat1FnvfrtojZlT4cI0fjB5T+95N5TAT6W7eSLdE8AkIaD1XQ+4UBMupKrFGm1SGTnlDSpTSNUNwLUIe261WbMEiZMINFMrZkEaQTlZJVllLHH4d5UMicxKBE4YlyhysvP3bnrn3/JKKJ+AaAehU+qB6iZcuIqqeT7v5u06x3nn8N00IPqYqbJKTvCByemn12nRY1KMSpEYFk7OvdjylxAXAKwP+FnnpSniBRtyFD2/XtWNofSkk/d3jcrrcrrZpFlHG1oruYK3lGQ61hRwqgRv/8B+A7UKCOtT903B+ixyYT/ll8oVnUokIVbzZ2TLTzw2piD0Y8NXB2f32ZfMSUhVNwk7ecnWj9SbRDP+8NmCPaz9lHms/raMB6/tuoB1FEflqV4YktClXumbZf/ObGCmYImSQsaPwS8BXAp+aiyKXHCRapoWqYT3vxha49omwpilVPoDMzMc627GU+4T8F6d3sBk2v5yWe/Eu5f1z7vbqVLAGJmFL/lv5xLJxgWDqd8EGZe2uVNvTxWcLo90/oXgW6nvVUd1pfGNVv9Y6p1mq1sU8CSTzhvzW8tRTc/PQ+cP</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463510043</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35CDBBB8379EE05307991F0A9FE6</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02013_AccountDelete_FUNC_NonCS_Deleting_an_account_when_Account_Blocked_and_User_blocked:tou_P1" searchProperties="true" id="89a2a3da-f7f5-4fe3-b4d5-9ded0819c129"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="0c46aa13-9c1c-40f8-af7a-c5114b6debb9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="8b634e71-8e67-4bcd-8bc2-db2c0a0a4aa6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="caf9a496-f61b-4276-bb3d-16f47cf6291b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="7d7420cd-b820-4624-a38b-ed847402284b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set User Status" id="45e6a664-91fd-46ae-a0c2-99d293f69ca9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked:tou");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="43cabf17-3b05-4888-bedc-b764796577a3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","ACCT_INACTIVE");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CEC7836B94E05305991F0A1B73</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35BEA24C6B84E05305991F0AFAB5:6F21C06B"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CEC7826B94E05305991F0A1B73</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CEC7826B94E05305991F0A1B73</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B47A39379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B47A39379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+I4FH2fXxFlnkMSQviIChKFMpuWDt3SMjN9WRnnBjwkNrWdQPvr1w5NCpR2OyshId9cn3vuh499JlCa1IO+EMAlYdQIh13zn06zFTsYY2vugms1Oh622g0fW34UO3MUeXUPwDRCITIIqZCIyq5Zd9yG5bQtt3Pn+oHvBr5X63jug2nMgAsFrVxqjmls04SKoAjbNTNOA4YEEQFFKYhA4mDavx4HyjNAJSezd7ZjWQTkvaWU68C2cS0CDEmCa5il9pl94HMWiWBKFhTJjMNLzEh0zZe9m82mtvFqjC/suuM4ttOxlU8kyOKr2ftSboYopDHbrQeIMkowSsgz0qSuQS5ZZPSTBeNELtN3oF3bdTS0BVtsYbdBv5r2a4CC3SeRDkhygSyxRG4JdgsxcKAYjPvbsGt+/VwHd3vvOKIiZjwVR+s/owQ0h4StIbJEmVnJ7vOIJ8rVOwMchBQnmSA5fNdjskYYhHHDISbbMRFq+CJhFO03tkL9SDllgP+kLWf2PldF3T5RnSFZgJD/p2f7/dqhzFCSQc/9uVx8e0qXNFyNKL7K/56PnvKrH3yInG5BYd95R6pq98v6eFir2XrZdDnwRjPPGWIRLh/W9Dvx7b/aF3P/fjVAo9l2jHxn+jzPfzUmV5OBvMKPEF9lE/d+Bs+jGKXPuftzOPvGfHzfHH8ZP2OepPNNs515/cl5zO3ZeOM1h87NdDpaPvjt5jY+X8wfV5f5b9rsDz1Y3W2u6xNnlfjx9WUj/D1wb1qLBCZX7Ev7gfTb6Xg0c34Nby7F8w+70X3NaT+HQ2MpCdNs/huwLJd6PMKhMVL9QvJjedEWEllx4RqstUYJCVSaPb1LS0uQKQEiUaCauVs7zujC888brb7X8Vqd/oXje06r03FHTr8zuHBKDdqxOKI4YDQmOpZW2d38fEwQp4EAGgG3cpbhJQjzA8QhksgI6a06HIwKuGNKxd1FytuIZtumz6i7bicZWqxW0ue+aXxnckInvB9L4Ifa3T7Q7lvAZE1AC7yecKFGXEhVjEeUZzJxazmqUcjUFcC1Cgf1Rtu3BUnXCWiqdsqiLIHaerkuSmOL3X/dQlgUViLwmnGJErc4gO/md/ytLIXyiYh2EDqlc1DthBN3UaPM59286+5+3iV8P4uIPmeqrpITvGNy+Ol1XPScVLNSJYaFW3KvtvwhxAkA+wN+9nFpqnhRTvail/erujKUoPTK/j6i2mMty/Os6GhLiyVX8LbSTNeeAs6U4j3dsRVQu4KwP3XhVKyPIlf2Q36ZXNKpRBJSNX9GsfzEa2MKQr82QnVytp99yhyEVHWTsJWnbINEPUo04w/fLTjA2k+Zb9TfhvHotV0nsPbiqDzVE0MSutArfbU8vTMbmClYorSQ8X3wUwCngh8aqyJXXKSapnkm4f0vhha5rokwZhmV4dAsDPvCW/CUT2sIXp3ewBTi/nJbb8W7t/XP6/FUSWCKzMqX/LezRYpxweqtqvwLLl1zqx6fKjhd7An9C8G3Wj+4GLTa9eZ5p1Fovb/Teve85VUFPMik98b81rJX0+Pz0PsX</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463513215</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B47A3A379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02014_AccountDelete_FUNC_NonCS_Deleting_an_account_No_ManageAccountConsent_Policy_P1" searchProperties="true" id="07918703-a7f8-4109-992e-d7bca2d0ab23"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="2cccc4f7-1f28-4f8a-b00b-83f8ee86b6f0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="ea2686cd-8549-4265-a84b-793ab1a74d1d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="47b223ee-64c7-4598-b593-e97e0b3d3bc8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Update MAC Policy" id="4d7fad2a-f696-496f-8714-a712aa616581"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_Policy_Status")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","deleted");
myTC.setPropertyValue("Policy","105");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));
myTC.setPropertyValue("UserName",tC.getPropertyValue("UserName1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="0bef8166-cc79-4c3a-aaf4-373660a7b542"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35B4F617379CE05307991F0A189A</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CCBCCD37A6E05307991F0A9C25:50D1B0D"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B4F616379CE05307991F0A189A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B4F616379CE05307991F0A189A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35BEDD726B8AE05305991F0ABD1F</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35BEDD726B8AE05305991F0ABD1F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdc9o4FH3vr/C4jzvGH2AMnsAMwaShDaQLaZP2ZUeWL6DElqgkO5Bfv5KJHaAkm+4MM4yur84990NHOhMoS71wIARwSRg1xlHP/AfHgeu347bVCeKu1WpjZHUgji3sN9sBxjF4TWQaYyFyGFMhEZU903PcluV0LLd74/qh74Z+uxF02j9N4ztwoaCVS8MxjU2WUhGWYXtmzmnIkCAipCgDEUoczgeTq1B5hqjiZPbPdizLgLy/knId2jZuJIAhTXEDs8w+sw98zhIRzsmSIplzeI6ZiJ75vPfx8bHx2GwwvrQ9x3Fsp2srn0SQ5Uez/6HaDMmYLthuPUSUUYJRSp6QJjUBuWKJMUiXjBO5yl6Bdm3X0dAWbLCF3Rb9aNovAUp270Q6IMkFssQKuRXYDBbAgWIwvs3GPfPj+zq423vDERULxjNxtP4zSkALSNkaEktUmVXs3o94olz9M8DhmOI0F6SAqR6TNcIgjK8cFmRzRYQavkQYZfuNjVA/Uk0Z4D9py5m9z1VRt09UJyJLEPL/9Gy/XzuU7yjNoX+7fVieT2Z2nlyvYPm0vI7QJWt/G3fopFdS2Hfekarb/bw+HtZ6tp43SehO/nang+Ui9m/XQ8Z4E182md3uiqi9utx6UTO6AR49jC5+jO74NL6Ot/xuioJkdj/2IS8+rRKM4vupM9l+EIVY5OPZp2EyGz2mly0V9q/gp8xuoTm9C7yFdzVtPo2Cu2L9GTmXvFkMHyIRC8avf/yI6Yp0Z7df4c4fyvjh5kPmsy0Jnvx7++q8++XLPfrs9F5y2s/h0FhJwjyP7wHLaqnHYxwZF6pfSL4tL9pCEmtRuoZrrVFCApVmX+/S0hLmSoBIEqpm7taOczFq+uejKAq89nlnMHL8puN3u+6FMziP3ItKg3YsjigOGV0QHUur7G5+3iaIs1AATYBbBcvxCoT5BmKEJDLGdKYOB6MCbphScQHCxUWOngJcuI6HsO/lns9bgWlMmbym13ywkMAPpbtzIN0zwGRNQOu7HnChJlxIVYtfqMhl6jYK1KCQqxuAaxEOvVbHtwXJ1ilopnbGkjyFxnq1Litji92/ZyEsSisReM24RKlbnr9X0zv+VlVC+SREOwid0jmobsKJq6hV5fNq3p67n3cFP8gToo+ZKqvkBO+YHH56mRY9JvWo1Ilh4Vbc6y1/CHECwH6Dn31cmjpeUpC96NX1qm4MpSf9qr+/UONXIy+KvOxooLWSK3hbSaZrzwHnSvC2N+wBqF1D2O+6b2rWR5Fr+yG/XK7oXCIJmZo/o1y+47ExB6EfG2N1cDbvfckchFR1k7CRp2zDVL1JNOM3ny04xNpPmb+qv0fGk5d2ncDai6PyVC8MSehSr/TNsn1lNrCS8IQoKWR8H/wUwKngh8a6yDUXqaYpziW8/sXQGtczEcYsp3IcmaVhX3dLnnK7hvDF6TeYUtufL+uNePWyvptczZUCZsisfcl/O1ukHBcMpn4TlFx65ka9PVVwutzT+WeCJ6S+ddF2282gOyylPthJvdvpDuoCHmTS/838u2Wvpsfnof8v</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463516087</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35BEDD736B8AE05305991F0ABD1F</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02015_AccountDelete_FUNC_NonCS_Deleting_an_account_which_is_suspended_P1" searchProperties="true" id="3bb647d5-ac78-4ba8-a60b-39d435431a2f"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="70c229d1-7301-43e2-ac1f-25b9f0d9d9eb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="da6a5a0c-3568-43d7-a8c0-6b43a476a07d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="5d68d936-a199-4a07-93f8-2cebdf995e38"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="da986ffb-046e-4fd4-9690-37ed5a1a480f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","suspended");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="9fb08d38-087f-46a5-a262-26a6968e4234"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","ACCT_INACTIVE");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CEC7916B94E05305991F0A1B73</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35C6F9AC6B92E05305991F0A81AF:DC759008"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CEC7906B94E05305991F0A1B73</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CEC7906B94E05305991F0A1B73</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B3E26A6B78E05305991F0ABA86</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B3E26A6B78E05305991F0ABA86</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I4FH6fXxFlHkchFwiUqCCFW5VZmLbAtN2+rIxzALeJE2wHQn/92qGhQGm3sxIS8snxd75z8WdfchRHjudzDkyQhGpBr6X/M3cs17KdplFrzuZGDVu2MZs1Q6PRANeeuw1cQ6GuBZxnEFAuEBUt3bHsmmFdGHZzaruea3tus9Jwqo+6dgeMS2jpUrF0LY8jyr0ibEvPGPUSxAn3KIqBewJ7E3809KSnh0pOevtyx7IIyNpLIVLPNHElBAxRhCs4ic1L88jnMuTehCwoEhmD15ghb+mvezebTWVTrSRsYTqWZZlW05Q+ISeL73r7W7kZwoDOk926i2hCCUYReUGK1AjEMgk1P1okjIhl/AG0bdqWgjYgxwa2a/S7br4FKNh9EemIJOPI4Etkl2BjmAMDikH7PQ5a+vevdXC3d8oQ5fOExfxk/WeUgK4hSlIIDV5mVrL7OuKZcrUvAXsBxVHGyRp+qTFJEQau3TCYk3xIuBy+kGtF+7Wcyx8ppwzwn7Tl0jzkKqmbZ6rTIwvg4v/07LBfO5Q7FGXQJv374OV20Ai2j9NwGz/cYH+2FJaPbL9VUDh03pHat/t1fTqs+9l63XT7gmvj7eIafv+w7M3Nr/Vzj238q8ko4nY2q96zUf0pZ1fTTbXbGS/6N3Z1GPz4+8mFmXlHYwK3uLacTe6DVT4bfctW6eND2F8t83rgDp8Hj7+T4c97c5Jep+PnaJoOsnr4woeZFTvbu/zh/udqGK9GvU3gd24fM9pb+u7FsLsMVuPG4Jt1lVevqPMXmW5qw+dg4eJ+6y2nwxyOjaUkTLLZE2BRLtV4BD1tIPuFxOfyoiwkNOaFq5cqjeICqNDbapeSFi+TAkRCTzZzt7asQb/qdqp9p+7XO42LvuVWLbfZtAeW3/Ev6qUG7VicUOwmdE5ULKWyu/n5nCCOPQ40BGaskwwvgeufIPaQQFpAx/JwJJTDNJEqblv1OX3KxUuzMY/loY/Zopo4aFFluvYrEdf0mvlzAexYuy+OtHsMmKQElMCrCedyxLmQxVihdSYiu7JGFQqZvAKYUmHPqV24JidxGoGiasZJmEVQSZdpURqT7/4dA2FeWAnHacIEiuziAH6Y3+m3shTSJyTKgauUOiDbCWfuolqZz4d5O/Zh3iW8n4VEnTNZV8EI3jE5/vQ2LmpO9rOyTwxzu+S+3/KHEGcAzE/4mael2ccL1+Qgenm/yitDCkq77O8KVVaVbL3Oio42lFgyCW9KzbTNCeBMKt52mjwDNfcQ5pcunD3rk8h7+zG/TCzpRCABsZw/rVh+4bUxAa5eG4E8OflXnzJHIWXdBOTinK0byUeJYvzpuwV7WPlJ84382yTsLfFzWAdxZJ7yiSEIXaiVulq2H8wGTiQskVqYsEPwcwDngh8b90XecxFymmaZgI+/aErkWjrCOMmoCHp6YTgU3oKn2KbgvTm9gynE/fW2zvmHt/XDaDiREhgjfe9L/tvZIMW4YNDVo6Dg0tJz+fiUweniQOhfCb7X+m6/22ha9U6zdqj1dqdR3RfwKJP2O/N7y0FNT89D+18=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463519045</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B3E26B6B78E05305991F0ABA86</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02016_AccountDelete_FUNC_NonCS_Deleting_an_account_which_is_blocked_P1" searchProperties="true" id="372287a3-bb10-447e-b80f-becd612988f7"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="29f7da59-111f-47e7-ae9c-91f156469acf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="7b5a4f7a-7480-489d-9d41-7a7bbd67b6f4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="286c26ba-c3f3-47d0-a4b7-0961f6e41e55"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="d5f539d1-531d-4fd0-a71d-5af8ce9d388a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="ec1bbb70-356d-405d-8790-af0560bfaafd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","ACCT_INACTIVE");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35BA2BB137A0E05307991F0A50EB</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35C6F9AE6B92E05305991F0A81AF:EAB8C0F1"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35BA2BB037A0E05307991F0A50EB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35BA2BB037A0E05307991F0A50EB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35CCD81737A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35CCD81737A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcto6FH3vV3jcx47xBYzBA8wQyMUpJQkkTdKXM0LeBjW2bCyZ4H79kQx2gJAcejKZYbS9tfbaFy2pw1AUWm6fMUg5ianiDbvqP227jsBBSJs5rUBrzHBTm+F6XQssuw1Nx2g4TltVPMYy8CjjiPKuahlmQzNamtm+N23XtlzDqtmW/UtVfkLKBLRwqRmqso5CytwibFfNUurGiBHmUhQBczl2p/0fI1d4uqjkpPY6G5ZFwLS34DxxdR3XfMAQhriG40jv6Hs+HZ+5UzKniGcpbGP6rKtu976+vtZe67U4neuWYRi60daFj8/I/Kva+1JuBt+jQbxZDxCNKcEoJH+QJPUD+CL2lX44j1PCF9EH0KZuGhJagzXWsNmgX1X9LUDB7kSkPZIpQxpbILMEm0AAKVAMysPE66pfT+vgZu99iigL4jRiB+u/owR0BWGcgK+xMrOS3emIR8rV6wB2PYrDjJEVjOWYJAgDU25TCMh6RJgYPp8pRfuVNRP/pJwywH/Tlo6+y1VQ149UZ0jmwPj/6dluvzYoP1GYQe+62fh2nkX5z9Fvfpuv7gJ02fIn45dV/a5bUNh13pCq2r1dHw5rNVvbTSOWjJ1psroi+txLbo3nJ9rG+GYd/qbjy8c8J9f9/uj5ZQH9lt2czKLru0b0+GSMcX5nZ3bzeZh/M5LG92FTH8OXl/UkubeDwferid8Ofw0845XlD2dLezBttoIHSnJmPD05WesWwzBKluvFYhyMh9dZuy5k5qlvXDwS3XSa3vD74ssDfrwctPLx1U2YtOsX48ntc/ctp90c9o2lJEyz2W/AvFzK8fCGyoXoF+Kfy4u0EF8LClc3kRrFOFCu9uQuKS1uJgSI+K5o5mZtGBfndXswGLZMp+70W+eGXTecdtu8MPpn4q/UoA2LA4qDmAZExpIqu5mfzwniyGVAfUi1VZzhBTD1E8Qh4kjx6EQcjpgyuI+Fis+SFJZ5bMGfJFn/yWeWw+mMLRNVGcf8ht6k/YBDuq/crT3lngAmCQEp73K+mRhwxkUplmiV8dCsrVCNQiYugFRqsGs1WrbOSJSEIInqUexnIdSSRVIURmebX0tDmBVWwnASpxyFZnH8Pszu8FtZCOHjE+nAZEpnIJoJ724iU6S0zefDvC1zN+8Svp/5RJ4yUVWeErxhsv/pbVjklFSTUiWGmVlyr7b8JcQRAP0Tfvphaap4/orsRC9vV3FhCDnplf1dotqylq1WWdFRR0plKuB1oZimPgWcCb3L7+MXoHoFoZ903VSsDyJX9n1+GV/QKUccIjF/SrE84a0xBSbfGp44N+tTHzJ7IUXdOKz5MdsgFE8SyfjTVwt2sfQT5lvx8xqn/lu7jmDtxBF5igcGJ3QuV/JiyT+YDRwLWCKUME53wY8BHAu+b6yKXHHhYppmGYePvyhS4roqwjjOKPeGamHYld2CJ88TcN+c3sEU0r69q9fsw7v66cdoKgQwQmrlS/7bWSPFuGBQ5ZOg4NJV1+LpKYLT+Y7Mbwm+V/qzvnV2ZgilN3aV3jbOK6Xfz6T3zvzeslPTw/PQ+xc=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463521783</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35CCD81837A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02017_AccountDelete_FUNC_NonCS_Deleting_an_account_which_is_archived_P1" searchProperties="true" id="c8742ee3-5f7a-4304-80ae-3509dd41b14c"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="9a8ee3ac-6bfb-494b-bb22-985d04d3abe6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="78a82af5-bd96-4ec9-9a58-b80cf719576f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="0c76f59a-fd3c-415a-837a-18846f33da22"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="812c11ef-ff66-45f5-af42-c439342fb117"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","archived");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="a43afc3b-3650-40b2-aa32-a34a4f65797a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","ACCT_INACTIVE");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CC84AE37A2E05307991F0A444C</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35C6F9B06B92E05305991F0A81AF:31F1F1EC"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CC84AD37A2E05307991F0A444C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CC84AD37A2E05307991F0A444C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35CDBBD2379EE05307991F0A9FE6</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35CDBBD2379EE05307991F0A9FE6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo4FH0/XxGlj6OQC/eoIFFoac4BeknLtH0ZGWcHXBKHxk4g/fqxQ5MCpZ12JCTkne2117542acMhYFl9xiDmJOIKs6go/7jtWdgeB5oDQ9MrWYZWJtV6y3NR42mgWDmN726qjiMJeBQxhHlHdUyzJpmtDSzfWfW7bplG/WK0TCfVGUKMRPQwqViqMomDCiz87AdNYmpHSFGmE1RCMzm2HZ745EtPG1UcFK7p1uWecC4u+B8Zes6rniAIQhwBUehfqrv+Zx6zHbJnCKexPAW02Md9W3ver2urKuVKJ7rlmEYutHWhY/HyPxE7f4qNoPnUD/arvuIRpRgFJBXJEmNgS8iT+kF8ygmfBF+Am3qpiGhNdhgDZs1eqLq7wFydt9E2iMZM6SxBTILsFvwIQaKQbm/dTrqyfc6uN17FyPK/CgO2cH6Z5SAphBEK/A0VmRWsPs+4pFydU8B2w7FQcJIChM5JiuEgSnXMfhkMyJMDJ/HlLz9yoaJHymmDPBP2nKq73IV1PUj1RmQOTD+f3q2268tyhQFCXQpGMOJ9/zXZnrz+868afF4ZrKrGokf152cwq7zllTZ7rf14bCWs/W2CSaNq/Gg/nSRXayjyT30pyvy+opcx30djoyHa4s7f8+ih9eacY2y2iS+Xwfekx6i2dAank2d0TybTNxq7ODLl9Evly0bjeXsuZYl94PNH/aML9NHfuXfZv7TU51Ms/FTGmXD180cT3pjfYKCVuM37w+Ho8CdAKCGdeNaC9LMILj8lU6y2QBGi/vHm/Gzu1o+T5ed95x2c9g3FpLgJrNnwLxYyvFwBsqF6BfiX8uLtBBP83NXeyU1inGgXO3KXVJa7EQIEPFs0czt2jAuzqv1/uDsbGBVm+3zc6NeNZrttnlh9NoX541Cg7YsDij2I+oTGUuq7HZ+viaIQ5sB9SDW0ijBC2DqF4gDxJHi0FtxOCLK4C4SKm6ay9APoZou/SxMk2bVq2MyQ7O5qkwifkWv4p7PId6X7taedN8CJisCUt/lgDMx4YyLWrygNOGBWUlRhUIiboBYirBt1Vp1nZFwFYBkqoeRlwRQWS1WeWV0tv23NIRZbiUMr6KYo8DMz9+n6R1+KyohfDwiHZhM6QxEN+HDVWTa9SKfT/O2zN28C/he4hF5zERZeUzwlsn+p/dpkWNSjkqZGGZmwb3c8kOIIwD6F/z0w9KU8byU7EQvrldxYwg96Rb9fUGVl0qSpkne0abUyljA60IyTd0FnAjBy+6iJVC9hNC/dd+UrA8il/Z9fglfUJcjDqGYPyVffuOx4QKTjw1HHJzNd18yeyFF3Ths+DFbPxBvEsn4y2cLtrH0E+Zr8beOYu+9XUewduKIPMULgxM6lyt5s2SfzAaOBCwRUhjFu+DHAI4F3zeWRS65cDFNs4TD518UqXEdFWEcJZQ7AzU37OpuzpNnK7DfnT7A5Nr+dllv2KeX9cN45AoFDJFa+pL/dtZIPi4YVPkmyLl01I14e4rgdL6j828Ej0h9v1XrDarNnrUr9bVarV8WcC+T7gfzR8tOTQ/PQ/df</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463524494</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35CDBBD3379EE05307991F0A9FE6</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02018_AccountDelete_FUNC_NonCS_Deleting_an_account_which_is_other_P1" searchProperties="true" id="7a3f109d-9be5-4600-b5ab-dea7a2ec7393"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="76df247e-61fa-4474-a041-2e54dd3b66d8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="ea0f9a42-a5f7-4494-b75d-fba1c20016b6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="7c9b60e0-23e7-41fb-a20b-6063053ae6d6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="7fb6e8e7-74df-4224-9b92-830eac4afe90"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","other");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="773886b8-13c0-4be4-ac1e-4f2081b8f474"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","ACCT_INACTIVE");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CEC7A56B94E05305991F0A1B73</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CE61FF37A4E05307991F0A2173:13BE8EE4"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CEC7A46B94E05305991F0A1B73</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CEC7A46B94E05305991F0A1B73</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B56DC26B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B56DC26B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo4FH0/XxGlj0chFwiXqCCloZ2DBtoeoND2ZWScHTBNnBA7XM7Xjx2aFCjttCMhIe9sr732xcu+ZCgKLcdlDFJOYqr0um31n3odAGw006oYalptVq1qTcsEzW5hH+pGrRYEgar0GMugRxlHlLdVyzBrmtHUzNbYtB3bcoxGpdU0nlVlAikT0MKlYqjKNgopc/KwbTVLqRMjRphDUQTM4dgZuYO+IzwdVHBSO5d7lnnAtLPgPHF0HVd8wBCGuILjSL/Uj3wufeaMyJwinqXwGtNnbfV172azqWyqlTid65ZhGLrR0oWPz8j8Qu38KDaD36NBvF97iMaUYBSSP0iSGgBfxL7ihvM4JXwRfQBt6qYhoTXYYg2bNXqh6m8BcnZfRDoimTKksQUyC7AhBJACxaA8DHtt9eJrHdzvHaeIsiBOI3ay/h4loGsI4wR8jRWZFey+jnimXJ1LwE6P4jBjZA23ckwShIEp9ykEZNsnTAyfz5S8/cqWiR8ppgzwd9pyqR9yFdT1M9Xpkjkw/n96dtivPcoEhRl0+g+6MXDtFekNRmwyGVsvyye4393ZltHOKRw670mV7X5dnw5rOVuvm6Jm42U4DUZ/fntJYPdc/yG4W0yWaJ0y5j35bm0wwXWEpyv6p//I+956Ml5Nfun2TTT96TbMftj7+9ev4fQnRo2bH/2nGQ6fuzhM0vtt00tWte59dTf83dCnbvw7MzfdLsZza1o3QrP7MB7+9XhbHUQv48dkuZoaxvXz+u5uSiK7Zd9uf7wMh1nDnafovkWeqs/eqmW033I6zOHYWEjCKJstAfNiKcej11VuRL8Q/1xepIX4WpC7OonUKMaBcrUjd0lpcTIhQMR3RDP3a8O4ua7aV3a961n1q8b1tWFXDbvVMm8M1+t6jUKD9ixOKHoxDYiMJVV2Pz+fE8SRw4D6kGrrOMMLYOoniF3EkdKjQ3E4YspgHAsVN2freLkjG5qSGd6t4iZepkuLV1eqchvzO3qXugGH9Fi6m0fSPQRMEgJS3+WAMzHhjItarNA646FZWaMKhUzcAKkUYceqNW2dkSgJQTLVo9jPQqgkiySvjM72/5aGMMuthOEkTjkKzfz8fZje6beiEsLHJ9KByZSuQHQT3l1FpmMX+XyYt2Ue5l3Au5lP5DETZeUpwXsmx5/epkWOSTkqZWKYmQX3css3Ic4A6J/w009LU8bz1+QgenG9ihtD6Emn6O8KVVaVbL3O8o42pFamAl4XkmnqI8CZELzdOH4BqpcQ+pfum5L1SeTSfswv4ws64ohDJOZPyZdfeGyMgMnHRk8cnO1XXzJHIUXdOGz5OZsXijeJZPzpswU7WPoJ873428Sp/9auM1gHcUSe4oXBCZ3LlbxZdh/MBo4FLBFSGKeH4OcAzgU/NpZFLrlwMU2zjMPHXxSpcW0VYRxnlPe6am441N2cJ98l4Lw5vYPJtf31st6yDy/rx0F/JBQwQmrpS/7bWSP5uGBQ5Zsg59JWt+LtKYLT+YHOvxJ8L/Xetddwa/WrVu1Q6s2rRrUs4FEmnXfm95aDmp6eh86/</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463526972</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B56DC36B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>role</con:name><con:value>nodeIdportal</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:${#Project#nodeIdportalCS}</con:value></con:property></con:properties><con:tearDownScript>if(context.expand( '${#Project#runTeardown}' )=='true')
	{
	log.info("Executing TearDown for Suite '" + testSuite.getName() + "'");
	
	for ( testCaseResult in runner.results )
	{
	   currentTestCaseName = testCaseResult.getTestCase().name;  
	   currentTestCase = testCaseResult.getTestCase(); 
	   log.info("Current TestCase : '"+ currentTestCaseName + "'");
	   log.info("Current TestCase Status : '" + testCaseResult.getStatus().toString() + "'");
	   
	   if ( testCaseResult.getStatus().toString() == 'FAILED' )
	   {
	      log.info("Re-executing failed TC");
	      def currentRunnerTC = currentTestCase.run(null, false);
	      log.info("Status on re-execution : '" + currentRunnerTC.status + "'");
	   }
	}
	log.info("Execution of TearDown for Suite '" + testSuite.getName() + "' Completed" );
}</con:tearDownScript><con:reportParameters/></con:testSuite><con:testSuite name="AccountDelete_FUNC_PortalCS_P1" id="d80cefda-0002-4ce6-93f0-a20c4763945c"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02001_AccountDelete_FUNC_CS_Deleting_an_account_which_is_pending_P1" searchProperties="true" id="1be33f82-5215-4f94-b42e-7ac87b1a5a33"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="38f55ac3-7d5f-40fd-b54d-22dfb7eec96f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="8d917687-4aaf-4cd1-b6e8-bbe76e6b45de"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="15b38ee5-c115-4738-b4c4-101f342367f2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Update Account Status" id="cd0fd48f-68ab-44bd-a73c-b3dde346ae78"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","pending");
myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Portal_CS" id="6db7dce0-123b-47a1-8b33-f903ecfb3e7e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="edae5f41-7157-4a7a-bf6b-24cb8124fc1a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="7ea85e79-eb8f-4cb7-a8ea-30e4cb4c6e6a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CC84BE37A2E05307991F0A444C</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CE620137A4E05307991F0A2173:B877AC8B"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CC84BD37A2E05307991F0A444C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CC84BD37A2E05307991F0A444C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B42F5A3798E05307991F0A5105</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B42F5A3798E05307991F0A5105</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVfZcuq6En3nKyj2I0U8MJpKUiVjGwyYyWZ8OWVkeQBPWJ7g649MAptkJ/vm3CdQq9W9enBr6Rnrnst2AcYoip3AL8vCS+UfRLfqOmzAGtsxG7VGxzBqHU5v1zgE60yDZli9qVfKMsYJkn0c6378UmFppl6juRrT1phGt0l3G+2nVpPZVcorFGFimqg80ZVy7rk+7l7dvlSSyO8GOnZw19c9hLsx7KpAGXeJZle/Yaq8Pr+hvDqMXu04DrsUBZ8MBJHrwicYeNQz9UHn2cBd1bF8PU4i9O7TwC+V97NZlj1l9acgsiiWpmmK5iiiY2DH+lV5Ld0OI0P2zeBt3dP9wHeg7joXvQCloNgOjDJwrSByYtv7xjRDMXRhuoZyWINMw/9VoX47uKL7oaUPICOs17CtMzdjC2SiCPkQlZcL+aXy62cVfDurRbqPzSDy8Kf1f4OE/BS5QYiMGr5FdkP3c4tfpOv1GcGu7EM3wU6KJkWbhDpEuDyLkOnkYweT5jNw+Vr+co5vHYbgfynJM/WIk8CmvsiM4FgIx/9PvR5r9WZlpbsJerUYWvA3KqWIUtVbz9YiC4bT6fnE042XK4RH5TdQ91K/rz836r2v3g9dxpe0NT4N2alKj4YdwEKt2hK3dKjZuu1JSgiC4coMLpch6RLB8Zo5OJ2nHdnYyGPbE4f6aZDK6wm0mwEu0Sa9hb3UwlZ7JYcjESnHYMq218ESdc5ImvbxIZc6/enpGNStU7CTD8P6xFZH64wKpsfmqKOyk3PWaHHDVCpt1GGfb8GwHch1VZrpUm/58jumxxiKuEbofA2y+L9p0pygx/p90SsmhUk+zxi9KrLcqwq9HkA9C2QyDyyZH1/AhLeOJ/vo9LmM5sF8KQEBnJUFyARrK6zm85GYGauVu1vJksQri0Y2AFuhRDYEMV8Ju82Q1te7cMtK9E7leWOzCPb1YWgMjtnAhhNFU7KJJp+Vg5hPNJFeX2VWTtYX5aAwU21ZL60PPKcsxEzIrh4FMbMnu/Ui3C65DF7EuQIafcAsxZ6tDDRvxcD6woYHcayA41XO20pvtVJyUQOzEm9NViQ2rSftQugZ4d5z7QfjA2JcM/qr877vJruLeFB6Yr+nnvqqvK8Lc3EIFtvlfr066mspLcHBBOxvHp2mo2+CzNp1MmG+HY5IGe0UTsBc5Pk5IOmigSL3hyDo80BpACe/9A58K+gZUkYNWVyqcm6/tTk7pw3W+7SrM50Osx2vW7NTSxD96m6U7A+2Ym+kaXWkGumSi7nLFqfVtKU7DMxDc74RB/EoNwdztbSfCfkGDqqGNaTcCydFSnsIosvZdhVrEa9bU3zeO6a55jfThts2XaW+CE3XDM+4qgXzY0S3eFRnqe05HcUlYCk8AP3D8sDPFb5TJNWQs/lW4XUgiXECLgc2HrGr03CQunBbB0E+Wk8Px/fCGEIm8lQ2F0lbiaWOAIyiCAN1KUoHsOQtK+ItUeLnUADzrTzKtiRfywFR/pxH6ZpHS+SBWN+BFjco1Zc0F09jtdEAZ59f+hJnK6d8bbQ8un1C4lidhI1MwRPT362Do+I50TJK1OVoNBnney3pHw9kVpm0Okrru5KYHkPgTEaafRQCQZ+F220cVn0YwVgOPUXOL9MdPnScvUcPq02Gn9ECbLNLb58t+7q4G0WWyowGC39Wb3MlnJjngVc9dLJ1VVNbYdvo+aZwPlO7aEUHIJC4RfNk5Cx7tJfZuJWZQ3Dc6+wkdzn+zImjnQazxXy0Vr1qs9RMx2OPvmhUYxJOM7WfNcT5vFo3eG2g4TBytknHyqOpb7BbPW6lO3rVckL3yLHJUWuE9ZXlkWLNUiNsK7PSvLGBO89qh3BILagUiG1zLPfP+4t+Cb0pfBugn6fDXfg2P6jHyfJh9NxIh0q6FcH4tiwuIFkoS+RW0OO/E5hC4hg186raDQsWhGPkx5XX4lRBXroJoTiO0SVXxttabHGtltTkOV4CHZblRJrc1RIN6CbH0Q2ufmM5byg+QewFvukUvgoe93ZL/R0g9LoY+QaKammQQBvhyl8sFvkqy/6CXL+Bj5EWEJ4oNTsczdebTI+hm7TYbgkdQRDYZrsnSR2p06yUJ0E89acRMGMUfeSI7Q8ccYGgEzqoIJLFbYrJdYpjkpKTniaxyzyl+pOPEkI1o4LtddlGp0lhxwtdVACmvMBIXPQU2uE1QRR++2VrOsRX6ULU/pHV3vWm/zbEz3u3bBAdwykUcBEPj0hF0ReEt34L5tugWfox6Jt5kBhOcaGT1MaRA9+QfNz63TFFq9zbpYiqp/7D3HDf1X98/M+T1F9AUZ/zcXdkpM6D2xtzJ2SU0JXXW0VP+tPpKUnT5FrDdkHFImKeYii6TakIJoRPnbXgiHzqboL6EZW9o/7k+S7/iC+JbV+NyTjwSMeVr8sfvGNUhIt3jEy+mPynj6QPLkneYpTHX8l6LnnuFIj/+iKCXVjoEfGM/GRBZPwu1xe2HvyQOIv55/hWsSqI6/mbpoABMeuQGRhEj8a/MvCV84/Ce5LvWGLSTfskRt/vlIvh9lLRIQwSP5aFylXwOHCvOONziLq/lf4wc6WO72+BHH/7FtgoY5WMPk+v3HWd/61cc67tAhE5hZ0rlpdKTp61xLlvPQz4d4Bfz/gO/bcZ/zGS1z/Ef0oecvr5e3j9Fw==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZZb/I6EH3/fkWUPlYhC2GLChIF+jUUugBdX66MMwS3iRNiB2h//bVDkwKlve2VkJAn4zNnFh/7hKEwsJw2Y5BwElHF7TbVf8wqtmdVo655GHmajbGlNXAZa9XytDGb1iomGDVVcRlLwaWMI8qbqmWYtia2mI2JWXEqlmMapWrNeFKVO0iYgBYuJUNV1mFAmZOFbappQp0IMcIcikJgDsfOuD0cOMLTQTkntXWyYZkFTFpzzmNH13HJAwxBgEs4CvUTfcfnxGPOmPgU8TSB95gea6rve1erVWlVLkWJr1uGYehGQxc+HiP+kdr6k28Gz6WzaLPuIBpRglFA3pAkNQQ+jzylHfhRQvg8/ALa1E1DQmuwxho2bXqk6h8BMnY/RNohmTCksTkyc7ARzCABikG5HblN9ehnHdzsnSSIslmUhGxv/TtKQJcQRDF4Gsszy9n9HPFAuVongB2X4iBlZAmXckxihIEp1wnMyHpAmBg+jylZ+5U1Ez+STxng37TlRN/mKqjrB6rTJT4w/n96tt2vDcodClJoDY5R6C4m1dE8HAXmyyNMTs8v+6vV5Q1rZhS2nTekina/r/eHtZit903s4mY6ebqyrD67Gbi9QW/m29WX48f+69jVaWMa3y1GD/wq8q/14LlvDCGYtsvX3v2ku+it/ft+35tVb2fxyB72Rn/uq09oONLHg1E4Pe2cP5aDh9u/YFTO77sVtnys0yB6m5PjwOzYnf7k8XIc35Hh6u8iuHBXbaT7j4uqPYZ4ULuYvv55umlPDYsfm71+RG7PU6/Dmh85beewa8wlYZxOnwHzfCnHw+0qZ6JfiH8vL9JCPG2WuTqx1CjGgXK1JXdJaXFSIUDEc0QzN2vDOOuVK6e2dVZpl2uNes+olI1ao2GeGe2KaVRyDdqw2KPYieiMyFhSZTfz8z1BHDoMqAeJtoxSPAemfoPYRRwpLh2JwxFRBpNIqPib9WzEuFKvvry9mKxaS/yU+VW8elOVy4hf0aukPeOQ7Ep3fUe6R4BJTEDquxxwJiaccVGLBVqmPDBLS1SikIobIJEi7Fh2vaIzEsYBSKZ6GHlpAKV4HmeV0dnm39IQZpmVMBxHCUeBmZ2/L9Pb/5ZXQvh4RDowmdIpiG7CgavIyPP5Mm/L3M47h2+nHpHHTJSVJwRvmOx++pgWOSbFqBSJYWbm3Istv4Q4AKB/w0/fL00Rz1uSrej59SpuDKEnrby/C1RalNLlMs06WpNamQh4XUimqY8Bp0LwXifRC1C9gNB/dN8UrPciF/Zdfimf0zFHHEIxf0q2/MFjYwxMPjZccXDWP33J7IQUdeOw5odsnUC8SSTjb58t2MHST5ivxd8qSryPdh3A2ooj8hQvDE6oL1fyZnn9YjZwJGCJkMIo2QY/BHAo+K6xKHLBhYtpmqYcvv6iSI1rqgjjKKXc7aqZYVt3M578NQbnw+kTTKbt75f1mn15WT8MB2OhgCFSC1/y384aycYFgyrfBBmXproWb08RnPpbOv9O8LPUdzp1+7RbrrWtbam3bbtTFHAnk9Yn82fLVk33z0PrXw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463529974</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B42F5B3798E05307991F0A5105</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>99c61175-ca6e-4fe9-95b0-5f3d02f2072d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f670f80b-66f5-4521-ab74-f93f00d8ec73</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02003_AccountDelete_FUNC_CS_Deleting_an_account_when_user_is_not_active_P1" searchProperties="true" id="8316f460-1f30-43ec-a228-6f0eeab2c073"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="datasource" name="User_Status" id="e96c7f80-cbc8-4552-ad23-581d298933ad"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">forcedeleted&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">suspended&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">pending&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">other&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked:tou&lt;/con:entry></row></con:configuration></con:dataSource><con:property>Status</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="22c41963-7f90-4e2c-8d6f-61ab105ecdaf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="948498ad-aaec-4c4a-b621-d0183f5f8b6f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="1c25144c-906f-4ff5-9449-1673bee6e55f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Update User Status" id="f9c77291-589d-4906-9456-868b991178c4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def status = context.expand( '${User_Status#Status}' )

myTC.setPropertyValue("Status",status);
myTC.setPropertyValue("USER_OID",tC.getPropertyValue("USER_OID1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Portal_CS" id="3ade22fc-a827-4055-90e6-9f2f9984a09e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="e3170380-e3c5-4121-b9eb-6f3b4dd0a517"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="0cb03465-a040-4cfd-8a67-5e6855bfa499"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

def status = context.expand( '${User_Status#Status}' )

		myTC.setPropertyValue("USER_STATUS",status);
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="db808221-8bd7-4afb-9960-7fd56164d6ef"><con:settings/><con:config><dataSourceStep>User_Status</dataSourceStep><targetStep>Establish Test Case Properties</targetStep></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CE622537A4E05307991F0A2173</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35B47A60379AE05307991F0A9CE0:4003B87B"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CE622437A4E05307991F0A2173</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CE622437A4E05307991F0A2173</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B5126D6B7CE05305991F0A6AA3</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B5126D6B7CE05305991F0A6AA3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo4FH0/XxGlj1XInUtUkLid03ToZaCn7enLyDgbME0csB2g/fqxQ5MCpZ12JCTkne2117542WccJbETtDkHJkhKtbDX1P9xUOQ40WRsgG+NDQ8cZIwnUcOoY8/G7rjqY6uuayHnGYSUC0RFU3cs2zOsumE3bm0/8J3AqVdcy3nUtTtgXEJLl4qla5skpjzIwzb1jNEgRZzwgKIEeCBwMGpfDgLpGaCCk94627LMA7LWTIhFYJq4EgGGOMYVnCbmmbnncxbxYESmFImMwWvMiDf1173r9bqydispm5qOZVmm1TClT8TJ9ERv/Sg2QxTSSbpddxFNKcEoJi9IkboEMUsjrR1PU0bELPkA2jZtS0EbsMEGtj16optvAXJ2X0TaI8k4MvgM2QXYECbAgGLQfg/Dpn7ytQ5u994yRPkkZQk/WH+PEtAVxOkCIoMXmRXsvo54pFytM8BBSHGccbKCKzUmC4SBazcMJmQzIFwOX8S1vP3ahssfKaYM8HfacmbucpXUzSPV6ZEpcPF/erbbry3KHYozaJ1fXFidp2mjzkanp+d3i/voZSUSd7i8CJs5hV3nLamy3a/rw2EtZ+t1k3jAccdq9LE1aNeH5tz2zMs7p+89Zqe/6850voz9m+fLl6fLTuPcnc8bcz4duNVJ79e00xfsmnjpOYNzO8Gz+vjHxa/u9e2N++eePgzpYn7xvHa8+q3Xu+/f2f6gHt4/zv5ybzY3qz/D0DzF1St+z7L1I00TC/H1xfPp9T0dsyvP7M39H7WnbnfjrjqNbPz3uT9JBv0/zbecdnPYNxaSMMrGc8CiWKrxCHvaT9kvJD6XF2UhkTHJXYOF0igugAq9pXYpaQkyKUAkCmQzt2vL+tl3/Y5vO9VetVPr9i3ftfxGw/5ptavttlto0JbFAcVuSidExVIqu52fzwniJOBAI2DGKs3wDLj+CWIPCaSFdCgPR0o53KZSxcGxl8tZ6sezxpyOI29S27y8vNhzXbtKxTW9Zu2JALav3PU95R4CJgsCSt7VfHM54FzIUizRKhOxXVmhCoVMXgBMaXAg58A3OUkWMSiiZpJGWQyVxWyRF8bk23/HQJjnVsLxImUCxXZ+/D7M7vBbUQjpExHlwFVKHZDNhCM3kV3k82Hejr2bdwHfziKiTpmsqmAEb5nsf3obFjUl5aSUiWFuF9zLLd+EOAJgfsLPPCxNGS9akZ3oxe0qLwwpJ62iv0tUWVay1SrLO1pTUskkvCkV0zZHgDOpd8+36RNQs4Qwv3TdlKwPIpf2fX6ZmNGRQAISOX9avvzCW2MEXL01QnluNl99yOyFlHUTsBHHbN1YPkkU409fLTjAyk+ab+TfOmXRW7uOYO3EkXnKB4YgdKpW6mJ5/mA2cCphiVTClO2CHwM4FnzfWBa55CLkNI0zAR9/0ZTENXWEcZpREfb03LAruzlP8byA4M3pHUwu7a939YZ/eFc/XA5GUgATpJe+5L+dDZKPCwZdPQlyLk19I5+eMjid7sj8K8H3St/tVx3Hc2ttL1f62lbpHbtWKv1+Jq135veWnZoenofWvw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463547424</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B5126E6B7CE05305991F0A6AA3</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>99c61175-ca6e-4fe9-95b0-5f3d02f2072d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9c263e60-96bd-4c9c-9c64-ad6f469cfc89</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ce1f47c6-8e3d-4c44-9320-d57e0cc4e097</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e96c7f80-cbc8-4552-ad23-581d298933ad</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02004_AccountDelete_FUNC_CS_Deleting_an_account_when_user_is_Basic_P1" searchProperties="true" id="99607811-3a4c-4241-bc0d-16d42beba049"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="483f0e41-a2a8-411c-a5b0-75ec0be46cce"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="ac26d711-f3f5-427f-9698-e7be7e29c7ab"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )


log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="835489e9-57d8-42f6-bb17-8b71f4430ebb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));


tC.setPropertyValue("LegalGuardian","");

//required for Child user Create

//tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID_FAU1"));
//tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call Adult BAU Create" id="bfd826aa-5742-46bf-92b2-127dc2895235"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )

log.info country;

def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");


def myTS = tP.getTestSuiteByName("User_Create_API")



myTC.setPropertyValue("Country",country);
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="03bb4604-4de2-4a69-ac28-0e7c68f03912"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Portal_CS" id="3ac1dc89-01fa-4453-8772-569e079cd309"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="d1a1b310-073b-4894-ac32-51786ad8b6ed"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="9fef2b98-ef94-49bb-8c88-ed43aab1e215"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35B512826B7CE05305991F0A6AA3</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35B3E2A26B78E05305991F0ABA86:326966E9"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B512816B7CE05305991F0A6AA3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B512816B7CE05305991F0A6AA3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35CDBBF9379EE05307991F0A9FE6</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FE35C6F9D96B92E05305991F0A81AF</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35CDBBF9379EE05307991F0A9FE6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FE35C6F9D96B92E05305991F0A81AF</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuI6FH3vV0Tpc0gc7hEgQYEOpxfawnQ6fTlybZO4k9hgO1z69WOHJgVKe9ojISHvbK+99sXLbkmYxH7QlZIIRTmzRv22/W+97uMn0PCdpxpuOJW6N3MaT17Tgc2qB8EM45pfs62RlCkZMakgU23b90DF8RoOaE5BNaj6QRmUyl7t0bbuiZAaWruUPNtaJzGTQRa2baeCBRxKKgMGEyIDhYJJ9+oy0J4BzDnZndaWZRZQdCKl5oHrohImiMQxKiGeuC13z6eFZTChIYMqFeQ1JpZt+3XvarUqrcolLkLX9zzP9Zqu9sGShqd25yTfTPCIzfh2fQYZZxTBmL5AQ+qKqIhjqxuHXFAVJR9AAxd4Btoha+QgUGGntvsWIGP3RaQ9kkJCR0YQ5GB3ZEYEYYhYP+9Gbfv0ax3c7p0KyOSMi0QerL9HibAlifmcYEfmmeXsvo54pFydFkHBiKE4lXRJrs2YzCEi0roRZEbXl1Tq4cPSytpvraX+0XzKCPpOW1ruLldN3T1SnT4NiVT/p2e7/dqi3MM4JZ0yk6Ho/nq8HT9ED/V12AAbJRfT8fM/YTujsOu8JVW0+3V9OKzFbL1uggs5RVB0vWblcdP88Tg49+M+OK+s6JI9391hzZH4Eft1OwgfRc+vXUL8cjuMfdVYXV6MxGYhwCR+qgGqKvKk/BMn19c342W0Hg2q8VAN2Mv9cgpZj1HvNySDmqqq6Q+eykV/9XsIzlH32T8bo+f7KEz8Pk+TST/iF42b8xU4WaqXl8aigUM4Q8nFtDa8CNtvOe3msG/MJWGSPj0TpPKlGY9R3xrqfkH1ubwYC8XOLHMN5kajpCJM2R2zy0hLkGoBojjQzdyuPW84KFfP+r3esFmuNwcDr1r26s0mGHrd5nBQyzVoy+KA4hlnM2piGZXdzs/nBFESSMIwEc6Spygi0v4EsQ8VtEbsTh8OziSZcq3i8I9YbKIVL5fBXFQX4R/sJyG2rWuuxmwsujNFxL5uN/Z0+44gOqfEiLuZbqnHWypdiAVcpioGpSUsMZJq+RdGgQO/0qi6kibzmBiabsJxGpPSPJpnZXHl9t93IJKZlUo050LBGGSH78PcDr/lZdA+mBoHaVLqEd1KcuQe8vN8PszbB7t55/DdFFNzxnRNlaBoy2T/09uomBkp5qRIDEmQcy+2fBPiCID7CT/3sDRFPLykO9Hzu1VfF1pMOnl/F7C0KKXLZZp1tG6EUmh4V+slcCcEpVrtNlP+hzC3gHC/dNkUrA8iF/Z9fqmK2ERBRRI9f1a2/MJLY0KkeWmM9KlZf/UZsxdS102RtTpmO4v1g8Qw/vTNggJk/LT5Rv+tuMBv7TqCtRNH56mfF4qy0KzMtbL5YDYQ17BU6yAXu+DHAI4F3zcWRS64KD1NT6kiH3+xjMC1bYgQT5ka9e3MsCu6GU+1mZPgzekdTCbsrzf1Wn54Uz9cXU60/CXQLnzpfzs7NBsXRGzzIMi4tO21fnjq4CzcEflXgu91vlcFfgPUevWzTOerW52vdbvlooB7mXTemd9bdmp6eB46fwE=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuI6FH3vV0Tpc0gc7hEgQYEOpxfawnQ6fTlybZO4k9hgO1z69WOHJgVKe9ojISHvbK+99sXLbkmYxH7QlZIIRTmzRv22/W+97uMn0PCdpxpuOJW6N3MaT17Tgc2qB8EM45pfs62RlCkZMakgU23b90DF8RoOaE5BNaj6QRmUyl7t0bbuiZAaWruUPNtaJzGTQRa2baeCBRxKKgMGEyIDhYJJ9+oy0J4BzDnZndaWZRZQdCKl5oHrohImiMQxKiGeuC13z6eFZTChIYMqFeQ1JpZt+3XvarUqrcolLkLX9zzP9Zqu9sGShqd25yTfTPCIzfh2fQYZZxTBmL5AQ+qKqIhjqxuHXFAVJR9AAxd4Btoha+QgUGGntvsWIGP3RaQ9kkJCR0YQ5GB3ZEYEYYhYP+9Gbfv0ax3c7p0KyOSMi0QerL9HibAlifmcYEfmmeXsvo54pFydFkHBiKE4lXRJrs2YzCEi0roRZEbXl1Tq4cPSytpvraX+0XzKCPpOW1ruLldN3T1SnT4NiVT/p2e7/dqi3MM4JZ0yk6Ho/nq8HT9ED/V12AAbJRfT8fM/YTujsOu8JVW0+3V9OKzFbL1uggs5RVB0vWblcdP88Tg49+M+OK+s6JI9391hzZH4Eft1OwgfRc+vXUL8cjuMfdVYXV6MxGYhwCR+qgGqKvKk/BMn19c342W0Hg2q8VAN2Mv9cgpZj1HvNySDmqqq6Q+eykV/9XsIzlH32T8bo+f7KEz8Pk+TST/iF42b8xU4WaqXl8aigUM4Q8nFtDa8CNtvOe3msG/MJWGSPj0TpPKlGY9R3xrqfkH1ubwYC8XOLHMN5kajpCJM2R2zy0hLkGoBojjQzdyuPW84KFfP+r3esFmuNwcDr1r26s0mGHrd5nBQyzVoy+KA4hlnM2piGZXdzs/nBFESSMIwEc6Spygi0v4EsQ8VtEbsTh8OziSZcq3i8I9YbKIVL5fBXFQX4R/sJyG2rWuuxmwsujNFxL5uN/Z0+44gOqfEiLuZbqnHWypdiAVcpioGpSUsMZJq+RdGgQO/0qi6kibzmBiabsJxGpPSPJpnZXHl9t93IJKZlUo050LBGGSH78PcDr/lZdA+mBoHaVLqEd1KcuQe8vN8PszbB7t55/DdFFNzxnRNlaBoy2T/09uomBkp5qRIDEmQcy+2fBPiCID7CT/3sDRFPLykO9Hzu1VfF1pMOnl/F7C0KKXLZZp1tG6EUmh4V+slcCcEpVrtNlP+hzC3gHC/dNkUrA8iF/Z9fqmK2ERBRRI9f1a2/MJLY0KkeWmM9KlZf/UZsxdS102RtTpmO4v1g8Qw/vTNggJk/LT5Rv+tuMBv7TqCtRNH56mfF4qy0KzMtbL5YDYQ17BU6yAXu+DHAI4F3zcWRS64KD1NT6kiH3+xjMC1bYgQT5ka9e3MsCu6GU+1mZPgzekdTCbsrzf1Wn54Uz9cXU60/CXQLnzpfzs7NBsXRGzzIMi4tO21fnjq4CzcEflXgu91vlcFfgPUevWzTOerW52vdbvlooB7mXTemd9bdmp6eB46fwE=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj6OQGwESFSQuZYYOTDulndvLkXE24Daxqe2kwNcfOzQpUNrTORIS8s722mtfvOwzgdLEi7pCAJeEUWM0aJv/BA3PC+dxYPlBo2XVcbNuteat2Kq3/AYKIZzNAExjJEQGIyokorJteo5bt5yW5YY3bhAFXuT7NccP/pjGD+BCQSuXmmMa6zShIirCts2M04ghQUREUQoikjiadifjSHlGqORkds52LIuAvLOUchXZNq7FgCFJcA2z1D6zD3zOYhFNyYIimXF4ihmLtvm09/Hxsfbo1xhf2J7jOLYT2sonFmTx0ex8KDdDPKJztlv3EWWUYJSQLdKkJiCXLDa6yYJxIpfpK9Cu7Toa2oI1trBbpx9N+zlAwe6dSAckuUCWWCK3BLuGOXCgGIzb61Hb/Pi+Du723nBExZzxVByt/44S0BwStoLYEmVmJbv3I54oV+cMcDSiOMkEyeGbHpMVwiCMKw5zsh4ToYYvFkbRfmMt1I+UUwb4b9pyZu9zVdTtE9UZkAUI+X96tt+vHcoPlGTQcRd/PsVi/NPn594NV7ifJ1+djCS09btdUNh33pGq2v20Ph7WaraeNm0nrDFZXAWzbS/37DpA+PtL3mM/562Hu+WX3MP3ctjzFk33ApHRWPweXN9vbj+jtPHdu/2VX15Akvf5D5xdfPNnH1bTy/H3yWbFt9u7aXPbgOn1r22SygX9/GB78/730WX357lnrzd3dNMYz8Yt2eRO8+vdp8s0aYY+fJXzwD/PszWZfOhdBVfx8JbGnzx6fhX2g+19+zmn/RwOjaUkTLPZHWBZLvV4jAbGUPULybflRVtIbM0L12ilNUpIoNLs6F1aWqJMCRCJI9XM3dpxhud+0G8Mw0HY6IXeuRP4ThCG7tDpttzusNSgHYsjin1G50TH0iq7m5+3CeI0EkBj4FbOMrwEYb6BOEASGSN6rQ4HowJumFbxNVNTBJwHj8j149k9IjOfbqRnGt+YvKSXvDuXwA+lu3Ug3deAyYqA1nc94EJNuJCqFg8oz2Ti1nJUo5CpG4BrEY68eiuwBUlXCWimdsriLIHaarkqKmOL3b9nISwKKxF4xbhEiVucv1fTO/5WVkL5xEQ7CJ1SD1Q34cRV5JX5vJq35+7nXcJ3s5joY6bKKjnBOyaHn56nRY9JNSpVYli4Jfdqy19CnACw3+BnH5emihfnZC96eb2qG0PpSafs7wOqPdSyPM+Kjja1VnIFbyvJdO0p4EwJ3uaG3QO1Kwj7XfdNxfoocmU/5JfJJZ1KJCFV82cUy3c8NqYg9GNjpA7O+r0vmYOQqm4S1vKUrZ+oN4lm/OazBUdY+ynzlfp7ZDx+btcJrL04Kk/1wpCELvRK3yybV2YDMwVLlBQyvg9+CuBU8ENjVeSKi1TTNMskvP7F0BrXNhHGLKNyNDALw77uFjzlZgXRs9MLmELbny7rtXj1sv41GU+VAqbIrHzJfztbpBgXrJ6qyr/g0jbX6u2pgtPFns4/EXwp9b3A9Vpuo9fs70t9o9v1qwIeZNJ5YX5p2avp8Xno/As=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AccountDelete_user20130918_1379459446852</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463550518</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20140819_1408463552279</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35CDBBFA379EE05307991F0A9FE6</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>00FE35C6F9DA6B92E05305991F0A81AF</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b44627d5-7732-472b-b74e-aeac81a3f1ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02005_AccountDelete_FUNC_CS_Deleting_an_account_when_user_is_Controlled_P1" searchProperties="true" id="1285fe2e-a9bd-4686-a83c-f872fa5a7f1b"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="22c08a22-0deb-46a8-987b-16cf30a44449"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="7b504c15-eb85-4ab0-8dcd-fd64d2c15083"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="09904976-2f98-4630-8df9-151e283f29d0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));


tC.setPropertyValue("LegalGuardian","");

//required for Child user Create

//tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID_FAU1"));
//tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call Adult SAU Create" id="a00c8235-a1f5-40f4-a8bf-03aa99c01b5b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )

log.info country;

def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");


def myTS = tP.getTestSuiteByName("User_Create_API")


myTC.setPropertyValue("Country",country);
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="6c868b5b-5a90-460a-97fb-e56b16ed2ff1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Portal_CS" id="a84d01b8-e5b2-4b7a-8cdf-1efaa8326315"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="ad744b88-2d8e-423b-9ffa-7bc694a567fb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="cfecbe80-26a8-4572-985a-1cd851f86467"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CE623B37A4E05307991F0A2173</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35B56DF36B7EE05305991F0ACDC7:FD6C9AC7"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CE623A37A4E05307991F0A2173</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CE623A37A4E05307991F0A2173</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35BEDDAD6B8AE05305991F0ABD1F</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FE35CC84E137A2E05307991F0A444C</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35BEDDAD6B8AE05305991F0ABD1F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FE35CC84E137A2E05307991F0A444C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbbuo4FH0/XxGlj6OQBMItKkhc2/T0Du1AX0bG2YBPEzvETkj79WOHhgKlnXYkJOSd7bXXvnjZpxyFQdntcA6xIIxqXr+l/9O0Go5lz5EBNswMB6pgzGqVpuE0/ZqNm42aDRVd8zhPwKNcICpaetmyHcNqGHZzbFfdatmtVEv1euNJ1x4h5hJaupQsXcvCgHI3D9vSk5i6DHHCXYpC4K7A7qhzdelKTxcVnPT26YZlHjBuL4WIXNPEJR8wBAEuYRaap+aez6nP3RFZUCSSGN5i+rylv+1dr9eldaXE4oVZtizLtJqm9PE5WZzo7V/FZvA9OmebdQ9RRglGAXlFitQViCXztU6wYDERy/ATaNu0LQVtQIYNbDv0RDffA+Tsvom0RzLmyOBLZBdg9zCHGCgG7eHea+kn3+vgZu84RpTPWRzyg/XPKAFNIWAR+AYvMivYfR/xSLnap4Bdj+Ig4SSFazUmEcLAtdsY5iS7JFwOn8+1vP1axuWPFFMG+CdtOTV3uUrq5pHq9MkCuPg/Pdvt1wblEQUJtLtQW1WZeDofZ7A6n9YnzvkZb6zq3ZtBK6ew67whtW332/pwWLez9bZpcQYX9s0o+LvXHQ/gxko7l6/O891wNBwszSh8qCWQXt9PZndisn5dXUzw2DT/SrPa4/RxVA+m3i2z137jwrfis+Wvu8V58yHK6vVw6vnVpLGyMspSdnd97lRexOuN9/ySpS/3UfO82ptYE7EaRE/O+uFx+hvfTpy7Ye82nAlxtUDCvvy1bsCtZ03xA7l6Hqyrv8PpuvWe024O+8ZCEkbJ7A9gUSzVeHh9bSj7hcTX8qIsxDfmuasbKY3iAqjQ22qXkhY3kQJEfFc2c7O2rOGgUu0O+v1Ov9ZtdAZWtWJVm017aHW6fXtYaNCGxQHFHqNzomIpld3Mz9cEcehyoD7ERsoSvASuf4HYRwJpHr2Xh4NRDmOmVDyrv76WY8eBPwTKeB1wsWCNaKZr10zc0Ju4MxcQ7yt3Y0+57wGTiICSdzXfXA44F7IUK5QmIrBLKSpRSOQFECsNdstOo2pyEkYBKKJmyPwkgFK0jPLCmHzzXzYQ5rmVcByxWKDAzo/fp9kdfisKIX18ohy4SqkLsplw5CYqF/l8mnfZ3s27gO8kPlGnTFZVxARvmOx/eh8WNSXbSdkmhrldcN9u+SHEEQDzC37mYWm28fyU7EQvbld5YUg5aRf9XaHSqpSkaZJ3tK6kMpbwplRM2xwBTqTevYzZM1BzC2F+67rZsj6IvLXv80vEko4EEhDK+dPy5TfeGiPg6q3hyXOTffchsxdS1k1AJo7ZeoF8kijGX75asIuVnzTfyr81i/33dh3B2okj85QPDEHoQq3UxfLyyWxgJmGJVEIW74IfAzgWfN+4LfKWi5DTNEsEfP5FUxLX0hHGLKHC6+u5YVd2c57iJQL33ekDTC7tb3d1xj+9qydXlyMpgCHSt77kv50Nko8LBl09CXIuLT2TT08ZnC52ZP6N4Eel7w1q5UqnUu84udLXN0pftuvvs7yXSfuD+aNlp6aH56H9Lw==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo4FH0/XxGlj6OQBMItKkhc2/T0Du1AX0bG2YBPEzvETkj79WOHhgKlnXYkJOSd7bXXvnjZpxyFQdntcA6xIIxqXr+l/9O0Go5lz5EBNswMB6pgzGqVpuE0/ZqNm42aDRVd8zhPwKNcICpaetmyHcNqGHZzbFfdatmtVEv1euNJ1x4h5hJaupQsXcvCgHI3D9vSk5i6DHHCXYpC4K7A7qhzdelKTxcVnPT26YZlHjBuL4WIXNPEJR8wBAEuYRaap+aez6nP3RFZUCSSGN5i+rylv+1dr9eldaXE4oVZtizLtJqm9PE5WZzo7V/FZvA9OmebdQ9RRglGAXlFitQViCXztU6wYDERy/ATaNu0LQVtQIYNbDv0RDffA+Tsvom0RzLmyOBLZBdg9zCHGCgG7eHea+kn3+vgZu84RpTPWRzyg/XPKAFNIWAR+AYvMivYfR/xSLnap4Bdj+Ig4SSFazUmEcLAtdsY5iS7JFwOn8+1vP1axuWPFFMG+CdtOTV3uUrq5pHq9MkCuPg/Pdvt1wblEQUJtLtQW1WZeDofZ7A6n9YnzvkZb6zq3ZtBK6ew67whtW332/pwWLez9bZpcQYX9s0o+LvXHQ/gxko7l6/O891wNBwszSh8qCWQXt9PZndisn5dXUzw2DT/SrPa4/RxVA+m3i2z137jwrfis+Wvu8V58yHK6vVw6vnVpLGyMspSdnd97lRexOuN9/ySpS/3UfO82ptYE7EaRE/O+uFx+hvfTpy7Ye82nAlxtUDCvvy1bsCtZ03xA7l6Hqyrv8PpuvWe024O+8ZCEkbJ7A9gUSzVeHh9bSj7hcTX8qIsxDfmuasbKY3iAqjQ22qXkhY3kQJEfFc2c7O2rOGgUu0O+v1Ov9ZtdAZWtWJVm017aHW6fXtYaNCGxQHFHqNzomIpld3Mz9cEcehyoD7ERsoSvASuf4HYRwJpHr2Xh4NRDmOmVDyrv76WY8eBPwTKeB1wsWCNaKZr10zc0Ju4MxcQ7yt3Y0+57wGTiICSdzXfXA44F7IUK5QmIrBLKSpRSOQFECsNdstOo2pyEkYBKKJmyPwkgFK0jPLCmHzzXzYQ5rmVcByxWKDAzo/fp9kdfisKIX18ohy4SqkLsplw5CYqF/l8mnfZ3s27gO8kPlGnTFZVxARvmOx/eh8WNSXbSdkmhrldcN9u+SHEEQDzC37mYWm28fyU7EQvbld5YUg5aRf9XaHSqpSkaZJ3tK6kMpbwplRM2xwBTqTevYzZM1BzC2F+67rZsj6IvLXv80vEko4EEhDK+dPy5TfeGiPg6q3hyXOTffchsxdS1k1AJo7ZeoF8kijGX75asIuVnzTfyr81i/33dh3B2okj85QPDEHoQq3UxfLyyWxgJmGJVEIW74IfAzgWfN+4LfKWi5DTNEsEfP5FUxLX0hHGLKHC6+u5YVd2c57iJQL33ekDTC7tb3d1xj+9qydXlyMpgCHSt77kv50Nko8LBl09CXIuLT2TT08ZnC52ZP6N4Eel7w1q5UqnUu84udLXN0pftuvvs7yXSfuD+aNlp6aH56H9Lw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj6Pg3LhFBYmBtpMOLRQ69PJy5DoG3CZ2sB0u/fpjhyYFSns6R0JC3tlee+2Ll30iYBK7QUcIzCVh1Ah7LfOfetTwUL0xtWwX1Szfe3QsOK0jy/Uc+OjDWvURuaYRCpHhkAoJqWyZru34lt2wnOaNUw2qbuDVK57nPJjGBHOhoJVLxTaNdRJTEeRhW2bGacCgICKgMMEikCgYdy77gfIMYMHJbJ9sWeYBeXsuZRoAgCoRRjiOUQWxBJyAPZ+TSARjMqNQZhy/xoxEy3zdu1qtKiuvwvgMuLZtA7sJlE8kyOy72f5WbMZRSKdsu+5CyihBMCYvUJO6xHLOIqMTzxgncp58AO0Ax9bQFl4jCzk+/W6CtwA5uy8i7ZHkAlpiDp0CbISnmGOKsPFnFLbM71/r4HbvDYdUTBlPxMH67yhhusQxS3FkiSKzgt3XEY+Uq32CURBSFGeCLPGVHpMUIiyMIcdTsu4ToYYvEkbefmMt1I8UU4bR37TlBOxyVdTBker0yAwL+X96ttuvLcoExhlu9wF4avwYbGoN//7lKbmp19DV6aK3Obf9Vk5h13lLqmz36/pwWMvZet3022l2RtmPdHklrn8OGO0MpLd+Dm8vr++qt8Mrpwfum2vR7zygBeLemnPwEOGQLWbPgz71X+bz+vmkNpkMutc34bfN8MxfjB5+/Zj+9q/jCx/azerwT2iv0K/aeTQKx3CSDqNbUa3ad5MquN/MRud3F+7FsDt8CQdu8+w8vaPg58O1c/nn2/3woWNvNl0a+f2rAXk6vxCtt5x2c9g3FpIwzh6fMJLFUo9H2DPOVL+g/FxetIVE1jR3DVKtUUJiKs223qWlJciUAJEoUM3crm377NSrdrsN/9Tx6h331K56dr3ZdM7sju/73UKDtiwOKHYZnRIdS6vsdn4+J4iSQGAaYW4tWYbmWJifIPaghEZIR+pwMCrwDVMq7i5n2TObYoHoyuHNNFtH1fnMTjamccXkgA54Zyox35fuxp50jzAiKcFa3/WACzXhQqpaLOAyk7FTWcIKxZm6AbgW4cD1G1UgSJLGWDMFCYuyGFfSeZpXBojtv2tBJHIrEShlXMLYyc/fh+kdfisqoXwioh2ETuknVt3ER64it8jnw7xdZzfvAr6TRUQfM1VWyQnaMtn/9DYtekzKUSkTQ8IpuJdb/hLiCAD4hB84LE0ZL1qSnejF9apuDKUn7aK/C1hZVLLlMss7WtdayRU8UJLpgDFGmRK8zQ17xhSUEOBL903J+iByad/nl8k5HUsocaLmz8iXX3hsjLHQj41QHZz1V18yeyFV3SRey2O2bqzeJJrxp88WFCDtp8xD9bdiPHpr1xGsnTgqT/XCkITO9ErfLJsPZgMxBUuUFDK+C34M4FjwfWNZ5JKLVNP0mEn88RdDa1zLhAixjMqwZ+aGXd3NecpNioM3p3cwuba/XtZr8eFlfXfZHysFTKBZ+pL/drZIPi4Im/pNkHNpmWv19lTB6WxH518JHpH605rrdZTU+7tS7zp1ryzgXibtd+b3lp2aHp6H9r8=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AccountDelete_user20130918_1379459446852</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463555061</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20140819_1408463556730</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35BEDDAE6B8AE05305991F0ABD1F</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>00FE35CC84E237A2E05307991F0A444C</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5da56a8d-11f7-4984-99b2-aa2ad88ae0d1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02006_AccountDelete_FUNC_CS_Deleting_an_account_when_user_is_Full_P1" searchProperties="true" id="5113f945-c5a5-44c4-bffb-09245137818c"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="e5e3e575-4ddc-44ac-afa9-3bc369b27958"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="3fd7bc37-eed7-49d8-bb0e-2c61a172266c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="b1629b8c-4425-40a1-9063-2a47d37c8ffd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Portal_CS" id="291137c3-1699-45ef-9753-1987f0c77cc8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="d359591a-b6e6-4ea0-86b2-4a86fec72e7e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="7bc6ff6b-bf31-4da4-ac36-b1974abc2d58"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CE624837A4E05307991F0A2173</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CEC7CF6B94E05305991F0A1B73:72DA0E3C"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CE624737A4E05307991F0A2173</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CE624737A4E05307991F0A2173</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35BEA2826B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35BEA2826B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZZb+o4FH6/vyJKH6uQhT0qSFDSmdD1Frrdl5FxTsBtYofYYemvHzs0KVDaaUdCQj45/s53Fn/2CUdx5Lg9ziEVhFHNH3T0f1qhhSbNtm1YjXbNqAUWGK1JExuTBg6tsGU5YbOhaz7nGfiUC0RFR3csu2ZYLcNuj+26W3fcmlVx7OYfXbuHlEto6VKxdG0VR5S7ediOnqXUZYgT7lIUA3cFdke9ywtXerqo4KR3TzYs84BpdyZE4pomrgSAIYpwBbPYPDF3fE4C7o7IlCKRpfAWM+Ad/W3vcrmsLKsVlk5Nx7Is02qb0ifgZHqkd38VmyHwacg261NEGSUYReQVKVKXIGYs0HrRlKVEzOJPoG3TthS0AStsYLtGj3TzPUDO7ptIOyRTjgw+Q3YBdgshpEAxaHe3fkc/+l4HN3vHKaI8ZGnM99Y/owR0ARFLIDB4kVnB7vuIB8rVPQHs+hRHGScLuFJjkiAMXLtJISSrC8Ll8AVcy9uvrbj8kWLKAP+kLSfmNldJ3TxQnQGZAhf/p2fb/dqg3KMog654OGPV04HltYaPo8ssJjdW3Vk3jq+GViensO28IVW2+229P6zlbL1tWtyk9fUjWTePB/3w4WmBWH9w9bwesgf8NPP+mvc9/3K9+B325uf3f+pX1QfvImxUn8T44mU+MoXpXfedh5u/75zWy/qXB3N2Ve/fkyReDMY1fh2v2ngyPL2ucnwXmtMsvBljv+HVhsMgSo+zpwlcPon+aj1rvj47/O7+bP7c92MiHtutX95vz7MewvnEPufD28ZwfO513nPazmHXWEjCKJs8AxbFUo2HP9DOZL+Q+FpelIUERpi7uonSKC6ACr2rdilpcTMpQCRwZTM3a8s686r1vtdzWk6j36p5Vr1q1dtt+8zqnfX69UKDNiz2KJ4yGhIVS6nsZn6+JohjlwMNIDUWLMMz4PoXiAMkkObTW3k4GOUwZlLF7WWjFYXR64vjgJ2wBM2XUfBSn1Ndu2Liml6nvVBAuivdrR3pvgVMEgJK39WAcznhXMhazNEiE5FdWaAKhUzeAKkSYdepteomJ3ESgWJqxizIIqgksySvjMk3/46BMM+thOOEpQJFdn7+Pk1v/1tRCekTEOXAVUp9kN2EA1dRtcjn07wdezvvAr6XBUQdM1lWkRK8YbL76X1a1JiUo1ImhrldcC+3/BDiAID5BT9zvzRlvGBBtqIX16u8MaSedIv+zlFlXskWiyzvaFNpZSrhTSmZtjkCnEnBW4/ZC1CzhDC/dd+UrPcil/ZdfpmY0ZFAAmI5f1q+/MZjYwRcPTZ8eXBW333J7ISUdROwEodsp5F8kyjGXz5bsIuVnzTfyL8lS4P3dh3A2ooj85QvDEHoVK3UzbL+ZDYwk7BESiFLt8EPARwKvmssi1xyEXKaJpmAz79oSuM6OsKYZVT4Az03bOtuzlOsE3DfnT7A5Nr+dlmv+KeX9ePlxUgqYIz00pf8t7NB8nHBoKs3Qc6lo6/k21MGp9MtnX8j+FHqT72GU2tWm72N1Dc3Ui8HrVoWcCeT7gfzR8tWTffPQ/df</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdbk6q6En73V1iuR8sBFEGsmakKFxUV71dedmEIiHKTgKC/fgcdXTprZp3Z50nT6XR/faHz5RUbnlttAoxRFDuBX1Tlt9I/sGbxNGfAikGzVoU1BLoiWAhVWM40eMusV2lGKBVVjBOk+jg2/PitRGS1Ci1UGHrGMM1ao1nnXlimqpeKCxRhYpqovNClYua5Pm5e3L6VkshvBgZ2cNM3PISbMWxOgdZvEs2mccNUen+9orw4jN63cRw2KQq+mAgi14UvMPCoV+pJ59XEzalj+0acROjDp4nfSh9n0zR9SWsvQWRTVZqmKVqgiI6JHftX6b1wO4xM1beC61oy/MB3oOE6ZyMHpaF4G5hF4NpB5MRb7xvTDMXQuekKymAFMqz/q0T9dnBB90NLTyAjbFTw1mBuxibIQhHyISrOJ+pb6dfPKng9O4sMH1tB5OFP6/8GCflH5AYhMiv4FtkN3c8tfpGu91cEm6oP3QQ7RzTI2yQ0IMLFUYQsJ+s7mDSfiYuX8hczfOswBP9LSV6pR5wENvVFZmTHRjj+f+r1WKurlYXhJujd3Az9NIrj2AyrDb5BeccumC5lmtHttwuER+UrqHupP9afG/XeVx+HgH6QAEWFHW+43wWCyLOzATQyqC43IyFgww6KDHleXfBhnwnP7GFSV5aOMRqMeQLMtI6Gmkq4fPYtY68VOlun7ojlyBsmPWdxpgd+bX5QyhvHX/P9APM06YFso8/XEh+zHD0x1Ho2yDY0lyJFreKyARJ1vOLHOsesCo59ED3KmdTrKdAXYuZt12+/Y3qMIY+rh06XIPP/qzotyEZs3BdSPiks8nnG6F1TVaksSxJAkg1SVQS2KvbPYCDa+8N277SFlBbBeN4CMjhpE5DK9lpejMc9JTUXC1dfqK2WqE3YtAPWcoFsyEq2kPVVlzaWeriutmh9KormahJsat3Q7OzTzhYOtJmWDmbqSdsp2WCm0MuLzM7I+qztNGY4m9cKy50oaBMlldOLR1lJtwN9OQnXcyGFZ2WsAbYNmLkibbXOzFswsDbZwp3S18D+Ihe3mrRYaJkyA6OCaA8WJLaZ1NJD6JnhxnO3D8Y7xPjMbC9Om7ab6Gdlp0lKW5oe2lN1U5PHShdM1vPNcrE3lq1jAXYGYHPzSEpsrILU1hupPF53e4Gubo9wAMaKKI4BSRcNNLXdBUFbBBoLnOws7UQukMxWSnWruFAW3Da3OjmHFTbatGswjQaz7i+50YGTFb+s95LNbqttV61huTc1j3MhFs5rfCwfOcNhYBZa45XSiXuZ1RlPC5uRnK1gp2zaXco9C61I47sgOp+2rmZP4iU3xKeNY1lLcTVkXd5ytdoktFwrPOHyLBjvI5oTUa1KrU/HXlwAtiYC0N7Nd+JYExt5Uk01Ha810QAtJU7AeVeNe9XFods5unBdA0HWWw53+4/CmHKqiFQ6VkhbKYWGDMy8CJ3pXGntwFy07Ui0lZY4hjIYr9Veuib5mneI8uc8ti55tBURKDUdcEKnUJvTQjyMpywLTr4491vCVjtkS5PzaP6AlP50ELKphgeWry+DveY50TxKpvNeb9DPNrOkvd+RWWXR096xpheU4z4EzqA32+7lQDZG4Xodh2UfRjBWQ09Ts/NQx7uGs/HobrnOiCNahnx17m3SedtQ9F5kT5leZ+KParxQwIl16njlXSNdlmdTLuRNybfk04nSowUdgKAlTOoHM6tW99t52udSqwv2G6M6yFxBPAlKT5/BdDLuLadeuV6oH/t9jz7PKHYQDtNpO2WV8bhcM8VZZ4bDyFknDTuLhr5ZXRsxd9TpBeeE7l6oJvsZG9YWtkeKNTqaIa+NCmN2BXXP5kPYpSbUESi81Vfbp83ZOIfeEF4H6OfpcBde5wf1OFmeRs+NdExJtyIY35b5BaTKxRa5FYz47wQmlzhmxbqoNsOcBeEY+XHpPT+Vk5dmQiiOYzbJlXFdKxzNKTItiVydkxotUaFZmmnRgOYFgZZ4+cZyrig+QZQC33JyXzmPu95SfwcIvSZGvomiyjFI4Bbh0l8s5vkqqv6EXL+Bj9EsIDyRVoSayHMyy9JyQ6ySvmbrXJ0XW4pYbzE8VyoOgnjoDyNgxSh65ojsE0ecIOiEDsqJZH6bYnKd4pik5GAck9hlXo7Gi48SQjWjnO01q2yjTmHHC12UA6a8wExc9BJuw0uCKHz9rVYMiC/SiTL7R51Kl5v+2xA/792yQXRMJ1fAeTwiIhVFXxBe9hbM90Hzj0HfzIPEdPILnaQ2jhx4RfK89btj8la5twuJ6gb5rvlZ8GSV+hzQ3ZF5dOC95+/PAcImCd94v5XkYLwcXpLjMbkUgc+5VETMUwxF89QUwYQQotMs2COfupugfsRF76g/eb7Ln/El8dafxuR79kjLFC/LHzxEpgjnDxGVtHz201fOk0uStxhl8VcyySXvlRzxX580sAlzPSIekZ80iMzf5frC1oMfEmc+wBzfzlc58zx90xQwIGYdMsSC6NH4Vwa+cv4svCf5jiUm3bRJYvT9TjGfTm8lA8Ig8WNVLl0EjxPzgjM+haj5W+kPMxfu90HmM/wtmV9p/SmZXZ5Ruus6/1u54lzaBSJyCjsXLG+ljLxLiXPffpjQHwD/GNKAURhRAIKkgE9DunVP4FMk73+I/5Q85PTz9/D+Lw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463559422</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35BEA2836B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c50d7050-ce98-470c-8b41-102eb3901cde</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02007_AccountDelete_FUNC_CS_Deleting_an_account_already_deleted_P1" searchProperties="true" id="0f88d852-4e2e-483a-8930-b9f52fed47b0"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="bf960560-44a9-4fd3-aaef-d04354e9c29f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="dd39d699-4275-49b8-81d5-24ec01461cdc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="ee610e8f-e1fa-4ea1-a776-58abbbb15653"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="datasource" name="Account_Status" id="2e4c9e0e-47a6-419b-b78f-a0ce56c77d9e"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">deleted&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">forcedeleted&lt;/con:entry></row></con:configuration></con:dataSource><con:property>Status</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="46ed3b4d-4591-448a-8a48-43e94456f76a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def status = context.expand( '${Account_Status#Status}' )
myTC.setPropertyValue("Status",status);
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Portal_CS" id="a357eb35-9b3f-4899-b321-d11ee28e6eef"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="073b10fe-0e5e-4616-8bd7-c5b69b144f1a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","ACCT_ALREADY_DELETED");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="9e30a986-c276-49a4-b847-b0e7b399b3c2"><con:settings/><con:config><dataSourceStep>Account_Status</dataSourceStep><targetStep>Set Account Status</targetStep></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35BEA2976B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CDBC18379EE05307991F0A9FE6:F6BD18EE"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35BEA2966B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35BEA2966B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B47A6C379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B47A6C379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbU+o6FH73V3Tqo1PSK5eOMFMQ3BxlywbUrS9nQrqAHNoUmhRw//qTFIuA6NEz48hkdeVb37rkSy45jiPbDziHVNCEad2ruv63hysT4o6rRsWW/9yx4xi45oWGZ1fKjue5DmBP17qcZ9BlXGAm6rptWq5hVg2rNrI837N91ymZrvOsaw+QcgktXUqmrm3iiHE/D1vXs5T5CeaU+wzHwH1B/GHQu/Wlp48LTnrjcssyD5g2ZkIsfIRIKQQCUURKJInRJTrwuQy5P6RThkWWwmvMkNf1173r9bq0dkpJOkW2aZrIrCHpE3I6PdcbZ8VmCLtskmzXLcwSRgmO6B+sSPVAzJJQC6JpklIxiz+AtpBlKmgDNsQglsvOdfQWIGf3RaQDkinHBp9hqwAbwARSYAS0+0G3rp9/rYPbvaMUMz5J0pgfrb9HCdgKomQBocGLzAp2X0c8Ua7GJRC/y0iUcbqCn2pMFpgA1/opTOjmlnI5fCHX8vZrGy7/aDFlQL7Tlku0z1VSRyeqc0WnwMX/6dl+v7YoDzjKoEFu1sP7EFbVv0bX7Xn3Osj4aBhN71rIrOcU9p23pHbtfl0fD+tutl43/bpZTq35svk0frm4e4iRc9V+7EE45qPgdvBQHl1cXN+4L8G8ddFitd/z54ySGc6qthz1p/4gG3U6D/NeH3Hnx7R/tnl0osdJEpO+aK+bMKogPLuhHnoqr8rwR9ww2+HurxZfw71o9mtT2mvPMbqLnisvP6KLnuh5o81m8Bg68a1z9jzp2G61XBuI0XOwnoXXlNffctrP4dBYSMIwG/8DRBRLNR7dK60j+4XF5/KiLDQ0Jrmrv1AaxQUwoTfULiUtfiYFiIa+bOZ2bZqdtuM13UpQbjmVWtA2Pces1GpWxwxqrbZZaNCWxRHFVsImVMVSKrudn88JktjnwEJIjVWSkRlw/RPEKyyw1mUDeTgSxmGUSBUPp2xOWTJzV8v1mC4TJ5zNbQ+Irv1MxB27S4OJgPRQuasHyj0AQhcUlLyr+eZywLmQpVjiVSYiq7TCJQaZvABSpcG+7KSHOI0XESiiKE7CLILSYrbIC4P49tc2MOG5lXKySFKBIys/fh9md/ytKIT0Caly4CqlJshmwombyCny+TBv29rPu4APspCqUyarKlJKtkwOP70Ni5qS3aTsEiPcKrjvtnwT4gQA+oQfOi7NLl64onvRi9tVXhhSThpFf5e4tCxlq1WWd7SipDKV8EgqpoWGQDKpdy+jZA4M7SDQl66bHeujyDv7Ib9MzNhQYAGxnD8tX37hrTEErt4aXXluNl99yByElHUTsBGnbK1IPkkU409fLcQnyk+a+/JnnaThW7tOYO3FkXnKB4agbKpW6mJ5+WA2SCJhqVTCJN0HPwVwKvihcVfkHRchp2mcCfj4i6Ykrq5jQpKMie6Vnhv2ZTfnKV4W4L85vYPJpf31rt7wD+/q373boRTAGOs7X/rfzgbNx4WArp4EOZe6vpFPTxmcTfdk/pXgCaVvB3atXG5W3Vzpva3Sd4Lm2ywfZNJ4Z35v2avp8Xlo/As=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463562280</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B47A6D379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9aba8db9-b07b-47b4-b23b-478559f4cc48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02008_AccountDelete_FUNC_CS_Deleting_an_account_when_Account_Blocked_and_User_Pending_P1" searchProperties="true" id="130a167b-7e5b-4d1d-8fb5-133abc41c7d9"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="da06c075-835c-4545-9b25-c097357bff3d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="fe511136-e726-497d-ad6b-68c4c0c85380"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="1dae9270-f1d4-4789-ba4a-c41bd1e4aa3e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="07105da4-1e65-4e7d-976a-9aa4993c43e4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set User Status" id="9cc25ad3-8f7c-4a61-ba3f-fe937dc39ca2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","pending");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Portal_CS" id="fb4fd261-9452-40e2-b312-2e74c5e3c194"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="da837ba0-1173-456b-a18e-b05da1e2ce68"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="23d65157-cc8a-4dda-af36-46380546bc29"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","pending");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35B48F756B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35B4F64B379CE05307991F0A189A:A25DF429"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B48F746B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B48F746B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B512A16B7CE05305991F0A6AA3</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B512A16B7CE05305991F0A6AA3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+I6FP7ur+h0PzqlL7RYOsIMCtytoq4UveqXOzENJbttUpK0oL/+JsVWYNHr3hlmmJyePOc5L3mSUw6y1AkGnCMmMCVaOOzp/wDL9yzb6xjIdTzD9f220X12XQN6vjP35n48d551LeS8QCHhAhDR0x3Ldg3LN+zuzPYCzwncTsv2rCddu0eMS2jp0rJ0bZ2lhAdV2J5eMBJQwDEPCMgQDwQMosHVJJCeAag56f3TDcsqIOsvhMgD04StGEGUprAFaWaemjs+pzEPIpwQIAqG3mLGvKe/7V2tVq1Vu0VZYjqWZZlW15Q+McfJN71/VG9GcUjmdLM+B4QSDEGKX4EidYXEgsbaIE0ow2KRfQBtm7aloA20hga0XfJNN98DVOy+iLRDknFg8AWwa7ApmiOGCETa3TTs6d++1sHN3hkDhM8py/je+s8oIVKilOYoNnidWc3u64gHytU/RTAICUwLjkt0rcYkBxBx7QdDc7yeYC6HL+Za1X5tzeUP11OG4J+05dTc5iqpmweqM8QJ4uL/9Gy7XxuUe5AWqO86ZEbxzYiAhd927m/z+GEUHpuToe/2KgrbzhtSTbvf1vvD2szW2yac2Hh8Gd+edyejwXnn0c58x2PRKLFW2UM5Oe4kl5ML9/7uIqOTG/u2MyYX7OHKvTCPbWv8iNav9+btd7pma3i9Orq/XT0MV/Pnv06eFu51dBf+/NuJoidYDPMTwQDPimgyeKJZ3nm8OA7bT+1OAuh0ev09vp2vZmcvS28WrS6vXxO/nRxNyu7lrDMj5eXohz11Z+3lXe89p+0cdo21JETF808ERb1U4xEOtbHsFxCfy4uy4NiYV65BrjSKC0SE3le7lLQEhRQgHAeymZu1ZY1Hbe/Ms52B3Tk7OR9ZXtvyul17bA06g0G71qANiz2K55TMsYqlVHYzP58ThFnAEYkRM0pawAXi+ieIQyCAFpKpPByUcDSjUsXt5JcVL0788qdjlZ24ZF0LrVLhLHXtmoobcsMGc4HYrnT7O9I9RRDnGCl9VwPO5YRzIWuxBGUhUrtVghZBhbwBmBLhwHF9z+Q4y1OkmJoZjYsUtfJFXlXG5Jt/xwCQV1bMYU6ZAKldnb8P09v/VldC+sRYOXCV0hmS3UQHrqJ2nc+HeTv2dt41/KCIsTpmsqyCYbhhsvvpfVrUmDSj0iQGuV1zb7b8IcQBAPMTfuZ+aZp4cYm3otfXq7wxpJ706/4uQWvZKsqyqDp6orSSSXhTSqZtRggWUvBeZvQXImYDYX7pvmlY70Vu7Lv8CrEgkQACZXL+tGr5hcdGhLh6bITy4Ky/+pLZCSnrJtBaHLKdp/JNohh/+myBAVR+0vxD/q0oi9/bdQBrK47MU74wBCaJWqmb5eWD2YBUwmIphZRtgx8COBR819gUueEi5DQ9FwJ9/EVTGtfTAYS0ICIc6pVhW3crnuIlR8G7028wlba/XdZr/uFl/XA1iaQCZkBvfPF/Oxu4GheIdPUmqLj09LV8e8rgJNnS+TeCB6Te9ccnrpT6wbbUj0bts6aAO5n0fzP/btmq6f556P8L</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463565436</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B512A26B7CE05305991F0A6AA3</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>103fa1bf-6ea6-446c-944d-a4dd944d76a8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02009_AccountDelete_FUNC_CS_Deleting_an_account_when_Account_Blocked_and_User_Suspended_P1" searchProperties="true" id="ea87a2d1-e6d4-4e0c-bd73-595cc56ce69f"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="31a15bee-d8fd-4159-891b-58a2c2854fea"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="458f5d35-d946-468f-bf29-2b411ca5fb5a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="ece6e5d1-6cc2-42ca-9c54-7fdf3d5e7820"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="a054adfa-a800-4865-9d14-a4c99a62753d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set User Status" id="0eee40ca-97c9-4086-a7c8-3fff3604f43b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","suspended");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Portal_CS" id="4ee342e6-12ec-47bb-b047-17913ac953dd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="7c1adcf6-8215-45b6-81f6-1ef0d9fd1c70"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="45ace3cc-9832-4a63-96a2-e2feb46b6c14"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","suspended");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35B512B66B7CE05305991F0A6AA3</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35B42FA53798E05307991F0A5105:76BDDB03"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B512B56B7CE05305991F0A6AA3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B512B56B7CE05305991F0A6AA3</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B3E2AD6B78E05305991F0ABA86</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B3E2AD6B78E05305991F0ABA86</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+I6FP6+v6JTPzqlL1BoO8IMiGhhdRUUd/1yJ6YHmrVNapNC9dfftNgKLHrdO8MMk9OT5zznJU9ywlEcWV6fc0gFYVTxh131H2x08KJpdjTbNVtay110NMdxLQ1bLpiW7ZjtwFEVn/MMfMoFoqKrWoZ0NRzNdG9N27Mtr+U2mu32g6rMIeUSWro0DFXJ44hyrwzbVbOUegxxwj2KYuCewN6sf/ndk54eqjipvZMNyzJg2guFSDxdx40AMEQRbmAW6yf6js9JwL0ZWVIkshTeYga8q77tXa/XjXWzwdKlbhmGoRuuLn0CTpZHau9btRkCny7YZn2KKKMEo4i8ooLUJYiQBUo/WrKUiDD+ANrUTaOA1iDHGjZb9EjV3wOU7L6ItEMy5UjjITIrsCksIAWKQbmb+l316Gsd3Oy9TRHlC5bGfG/9d5SAriBiCQQarzKr2H0d8UC5eieAPZ/iKONkBVfFmCQIA1euU1iQ/DvhcvgCrpTtV3Iuf6SaMsB/05YTfZurpK4fqM6QLIGL/9Oz7X5tUOYoyqB3jIM2uqHNO/+sNRDhL35/Rdrh8Tw4N7olhW3nDam63W/r/WGtZ+tt0+T5ujNmN6PjTm7LyXi4i17793fTeNKGxyD+YT6Ew0niTC7G/rg10u/X+WR8PrDnfDpYh6v260s+fQhXRu7Gk/PgWzKadubzsTmaPllXRqfVumNn90+I+vDK87vnp5E7vnDmrXMHXBz+5KfOmA5uxqdJdtGxmvqv3za2zOOLwfRy9gjfjvn5RDfOB/H06SZv26OpzrrvOW3nsGusJGGWPf4GLKplMR7+UBnJfiHxubwUFhJoi9LVSwqN4gKoUHvFrkJavEwKEAk82czN2jBGZ0170Dyz+sP2oOOcGXbTsF3XHBn9Qd9pVxq0YbFH8ZTRBSliFSq7mZ/PCeLY40ADSLUVy3AIXP0EcYgEUnw6lYeDUQ63TKp4gMWKvZiWa7M8SG2UIpMby/ajqlwx8YP+SPsLAemucjs7yj0FTBIChbwX883lgHMhS/GMVpmIzMYKNShk8gJICw32rJZj65zESQQFUT1mQRZBIwmTsjA63/xbGsK8tBKOE5YKFJnl8fswu/1vVSGkT0AKB16kNADZTDhwEzWrfD7M2zK3867g+1lAilMmqypSgjdMdj+9D0sxJfWk1Ilhblbc6y1/CXEAQP+En75fmjpesCJb0avbVV4YUk56VX+fUeO5ka1WWdnRTiGVqYTXpWKa+gxwJvXu5ZY9AdVrCP1L103Nei9ybd/ll4mQzgQSEMv5U8rlF94aM+DFW8OX5yb/6kNmJ6Ssm4BcHLKdRvJJUjD+9NWCPVz4SfO1/FuzNHhv1wGsrTgyT/nAEIQui1Vxsbx8MBuYSVgilZCl2+CHAA4F3zXWRa65CDlNj5mAj78ohcR1VYQxy6jwh2pp2Jbdkqd4ScB7d/oDppT2t7s65x/e1T8vv8+kAMZIrX3JfztrpBwXDGrxJCi5dNVcPj1lcLrckvk3ggeU3jatgS2V/nRb6dv9frMu4E4mvT/Mf1q2arp/Hnr/Ag==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463568662</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B3E2AE6B78E05305991F0ABA86</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3a6a101e-b8b5-4b4e-822d-43ede0a34abd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02010_AccountDelete_FUNC_CS_Deleting_an_account_when_Account_Blocked_and_User_Blocked_P1" searchProperties="true" id="f0ffd97b-c84e-423a-a29a-35236238914a"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="58eabe51-3ebc-49e9-b0fa-6b0ccd6620b1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="8b0087a1-c429-4061-9058-9365bc5f9356"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="68ee3146-a29e-41c1-8dc3-37499ce5cedb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="54993ab9-2b35-49b4-a097-0ee356a94674"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set User Status" id="b91303a6-6512-4bd1-a42a-7abdb6411da5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Portal_CS" id="f2fd86b2-e7a3-460b-ae21-b05901c9f2b2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="334a790a-eb70-48f1-9207-d01577b6b690"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="4022110d-7a39-4397-8458-6dbddeb151cf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","blocked");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35B3E2C26B78E05305991F0ABA86</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CCBD1A37A6E05307991F0A9C25:665BDC1D"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B3E2C16B78E05305991F0ABA86</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B3E2C16B78E05305991F0ABA86</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35CE625737A4E05307991F0A2173</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35CE625737A4E05307991F0A2173</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj6OQCwmBqCBRaDnplYG2w/TlyDgbcJs4qe0A7dePHZoUKO3pHAkJeWd77bUvXvYRR0nsBF3OgQmSUi3st/V/cavlTl0bDKvuu4ZruchALadhTKOG5U4j3/Pqnq6FnOcQUi4QFW3dsWzXsJqG3bqxvcBzAq9es3z/XtfugHEJLV1qlq6tk5jyoAjb1nNGgxRxwgOKEuCBwMG4e3kRSM8AlZz0ztGGZRGQdRZCZIFp4loEGOIY13CamEfmjs9RxIMxmVMkcgavMSPe1l/3rlar2qpeS9ncdCzLMq2WKX0iTubf9c63cjNEIZ2lm3UP0ZQSjGLyghSpSxCLNNK68TxlRCySD6Bt07YUtAFrbGDbpd918y1Awe6LSDskGUcGXyC7BBvBDBhQDNrtKGzr37/Wwc3eG4Yon6Us4Xvrv6MEdAlxmkFk8DKzkt3XEQ+Uq3MEOAgpjnNOlnClxiRDGLg2ZDAj6wvC5fBFXCvar625/JFyygD/TVuOzG2ukrp5oDp9Mgcu/k/Ptvu1QblDcQ6dqd24j8OB8GbnV8+X7McvOhrGQ3LlPszbBYVt5w2pqt2v6/1hrWbrddNgfm7B4+38cfIDFmcsoqtB/AsGt43fDUckydod3od3jSbpz6Kh27rvTYj5k7XGI9PvTcaj4/uX8V1TTK306Tecf7upTxNiPae35CGkZ4tZ8/z2uPHS5ZP19cvpqj6Ifk4fWff67p+z86GT0AewrO4g46PTF/9sNOleniyefP8R9R9HV9Nvo94AZb3+mE5O7n4Nrh7Gmdt+y2k7h11jKQnjfPoAWJRLNR5hXzuV/ULic3lRFhIZs8I1yJRGcQFU6B21S0lLkEsBIlEgm7lZW9bpSd3rnTQcz6/7XffE8uqW32rZp1bXsf16qUEbFnsUeymdERVLqexmfj4niJOAA42AGcs0xwvg+ieIfSSQFtKRPBwp5XCTShW3aU4xWxL/oRk3bDvNF0ni5Yu1Pde1q1Rc02vWnQlgu9rd3NHuEWCSEVACryacyxHnQhbjCS1zEdu1JapRyOUVwJQKB47b9ExOkiwGRdVM0iiPoZYtsqI0Jt/8OwbCvLASjrOUCRTbxQH8ML/9b2UppE9ElANXKR2DbCccuIvcMp8P83bs7bxL+G4eEXXOZF0FI3jDZPfT27ioOalmpUoMc7vkXm35S4gDAOYn/Mz90lTxoiXZil7er/LKkILSKfv7hGpPtXy5zIuO+kosmYQ3pWba5hhwLhXv+SZ9BGpWEOaXLpyK9V7kyr7LLxcLOhZIQCLnTyuWX3htjIGr10YoT876q0+ZnZCybgLW4pCtF8tHiWL86bsFB1j5SfNQ/q1SFr216wDWVhyZp3xiCELnaqWulucPZgOnEpZILUzZNvghgEPBd41VkSsuQk7TNBfw8RdNiVxbRxinORVhXy8M28Jb8BTPGQRvTu9gCnF/va3X/MPbenJ5MZYSmCC98iX/7WyQYlww6OpRUHBp62v5+JTB6XxL6F8Jvtf64/qJ07Mbx36z0Hpvo/XH3WajKuBOJp135veWrZrun4fOHw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463572295</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35CE625837A4E05307991F0A2173</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>367d7234-7241-4d7b-a8af-4949aaee6044</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02011_AccountDelete_FUNC_CS_Deleting_an_account_when_Account_Blocked_and_User_forcedeleted_P1" searchProperties="true" id="acc41d4a-f5ca-4b36-b8b5-7dd21c733511"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="8f1570b0-e3a7-4463-8d7f-675ba1658aee"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="5f0d9803-01b0-4e59-b1eb-8cb6816efbd8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="0d0d33a6-a2b9-46c5-8efa-859136c05037"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="ee163065-cf79-436f-87da-0a62f33055ce"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set User Status" id="6ae1b465-33bc-493f-8bc1-546195839ac8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","forcedeleted");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Portal_CS" id="258bb9a2-0cc9-4111-9c4f-237fffb745e3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="2a774d08-7b77-4f13-8836-0f06bf4cc09e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="f65d6014-b8dc-431d-9127-1589787949a4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","forcedeleted");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CE626C37A4E05307991F0A2173</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35BA2BFA37A0E05307991F0A50EB:9D96C025"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CE626B37A4E05307991F0A2173</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CE626B37A4E05307991F0A2173</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35CEC7DA6B94E05305991F0A1B73</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35CEC7DA6B94E05305991F0A1B73</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVfZcuq6En3nKyj2I0U8MJpKUiVjGwyYyWZ8OWVkeQBPWJ7g649MAptkJ/vm3CdQq9W9enBr6Rnrnst2AcYoip3AL8vCS+UfRLfqOmzAGtsxG7VGxzBqHU5v1zgE60yDZli9qVfKMsYJkn0c6378UmFppl6juRrT1phGt0l3G+2nVpPZVcorFGFimqg80ZVy7rk+7l7dvlSSyO8GOnZw19c9hLsx7KpAGXeJZle/Yaq8Pr+hvDqMXu04DrsUBZ8MBJHrwicYeNQz9UHn2cBd1bF8PU4i9O7TwC+V97NZlj1l9acgsiiWpmmK5iiiY2DH+lV5Ld0OI0P2zeBt3dP9wHeg7joXvQCloNgOjDJwrSByYtv7xjRDMXRhuoZyWINMw/9VoX47uKL7oaUPICOs17CtMzdjC2SiCPkQlZcL+aXy62cVfDurRbqPzSDy8Kf1f4OE/BS5QYiMGr5FdkP3c4tfpOv1GcGu7EM3wU6KJkWbhDpEuDyLkOnkYweT5jNw+Vr+co5vHYbgfynJM/WIk8CmvsiM4FgIx/9PvR5r9WZlpbsJerUYWvA3KqWIUtVbz9YiC4bT6fnE042XK4RH5TdQ91K/rz836r2v3g9dxpe0NT4N2alKj4YdwEKt2hK3dKjZuu1JSgiC4coMLpch6RLB8Zo5OJ2nHdnYyGPbE4f6aZDK6wm0mwEu0Sa9hb3UwlZ7JYcjESnHYMq218ESdc5ImvbxIZc6/enpGNStU7CTD8P6xFZH64wKpsfmqKOyk3PWaHHDVCpt1GGfb8GwHch1VZrpUm/58jumxxiKuEbofA2y+L9p0pygx/p90SsmhUk+zxi9KrLcqwq9HkA9C2QyDyyZH1/AhLeOJ/vo9LmM5sF8KQEBnJUFyARrK6zm85GYGauVu1vJksQri0Y2AFuhRDYEMV8Ju82Q1te7cMtK9E7leWOzCPb1YWgMjtnAhhNFU7KJJp+Vg5hPNJFeX2VWTtYX5aAwU21ZL60PPKcsxEzIrh4FMbMnu/Ui3C65DF7EuQIafcAsxZ6tDDRvxcD6woYHcayA41XO20pvtVJyUQOzEm9NViQ2rSftQugZ4d5z7QfjA2JcM/qr877vJruLeFB6Yr+nnvqqvK8Lc3EIFtvlfr066mspLcHBBOxvHp2mo2+CzNp1MmG+HY5IGe0UTsBc5Pk5IOmigSL3hyDo80BpACe/9A58K+gZUkYNWVyqcm6/tTk7pw3W+7SrM50Osx2vW7NTSxD96m6U7A+2Ym+kaXWkGumSi7nLFqfVtKU7DMxDc74RB/EoNwdztbSfCfkGDqqGNaTcCydFSnsIosvZdhVrEa9bU3zeO6a55jfThts2XaW+CE3XDM+4qgXzY0S3eFRnqe05HcUlYCk8AP3D8sDPFb5TJNWQs/lW4XUgiXECLgc2HrGr03CQunBbB0E+Wk8Px/fCGEIm8lQ2F0lbiaWOAIyiCAN1KUoHsOQtK+ItUeLnUADzrTzKtiRfywFR/pxH6ZpHS+SBWN+BFjco1Zc0F09jtdEAZ59f+hJnK6d8bbQ8un1C4lidhI1MwRPT362Do+I50TJK1OVoNBnney3pHw9kVpm0Okrru5KYHkPgTEaafRQCQZ+F220cVn0YwVgOPUXOL9MdPnScvUcPq02Gn9ECbLNLb58t+7q4G0WWyowGC39Wb3MlnJjngVc9dLJ1VVNbYdvo+aZwPlO7aEUHIJC4RfNk5Cx7tJfZuJWZQ3Dc6+wkdzn+zImjnQazxXy0Vr1qs9RMx2OPvmhUYxJOM7WfNcT5vFo3eG2g4TBytknHyqOpb7BbPW6lO3rVckL3yLHJUWuE9ZXlkWLNUiNsK7PSvLGBO89qh3BILagUiG1zLPfP+4t+Cb0pfBugn6fDXfg2P6jHyfJh9NxIh0q6FcH4tiwuIFkoS+RW0OO/E5hC4hg186raDQsWhGPkx5XX4lRBXroJoTiO0SVXxttabHGtltTkOV4CHZblRJrc1RIN6CbH0Q2ufmM5byg+QewFvukUvgoe93ZL/R0g9LoY+QaKammQQBvhyl8sFvkqy/6CXL+Bj5EWEJ4oNTsczdebTI+hm7TYbgkdQRDYZrsnSR2p06yUJ0E89acRMGMUfeSI7Q8ccYGgEzqoIJLFbYrJdYpjkpKTniaxyzyl+pOPEkI1o4LtddlGp0lhxwtdVACmvMBIXPQU2uE1QRR++2VrOsRX6ULU/pHV3vWm/zbEz3u3bBAdwykUcBEPj0hF0ReEt34L5tugWfox6Jt5kBhOcaGT1MaRA9+QfNz63TFFq9zbpYiqp/7D3HDf1X98/M+T1F9AUZ/zcXdkpM6D2xtzJ2SU0JXXW0VP+tPpKUnT5FrDdkHFImKeYii6TakIJoRPnbXgiHzqboL6EZW9o/7k+S7/iC+JbV+NyTjwSMeVr8sfvGNUhIt3jEy+mPynj6QPLkneYpTHX8l6LnnuFIj/+iKCXVjoEfGM/GRBZPwu1xe2HvyQOIv55/hWsSqI6/mbpoABMeuQGRhEj8a/MvCV84/Ce5LvWGLSTfskRt/vlIvh9lLRIQwSP5aFylXwOHCvOONziLq/lf4wc6WO72+BHH/7FtgoY5WMPk+v3HWd/61cc67tAhE5hZ0rlpdKTp61xLlvPQz4d4Bfz/gO/bcZ/zGS1z/Ef0oecvr5e3j9Fw==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0TpYxVygXCJACkU2Jtu2lLo6e3lyDgDcZs4aexAytdvOxAKlPa0R0JCnozXrLl42U2GwsByXMYg4SSiyqDbUv+dAa5VqzVbsyo10CpljLSG4dW1Cq4jA2MToQaoyoCxFAaUcUR5S7UMs6IZdc1s3Jq2Y1uOXS3ZZuNJVe4gYQJauJQMVcnCgDInD9tS04Q6EWKEORSFwByOnYl7OXSEp4MKTmq7uWaZB0zaPuexo+u45AGGIMAlHIV6U9/zaXrMmZA5RTxNYBPTYy11s3e5XJaW5VKUzHXLMAzdaOjCx2Nkfqq2T4rN4A3oLFqvzxGNKMEoICskSV0C9yNPcYN5lBDuh59Am7ppSGgNMqxhs0JPVf09QM7um0h7JBOGNOYjswAbwwwSoBiUf8aDlnr6vQ6u994miLJZlITsYP0zSkAXEEQxeBorMivYfR/xSLnaTcDOgOIgZWQBV3JMYoSBKaMEZiQbEiaGz2NK3n4lY+JHiikD/JO2NPVdroK6fqQ6XTIHxv9Pz3b7tUa5Q0EKba9Hspfs1XtJ/1D86EdPF/OVf3a5oMGylVPYdV6T2rZ7sz4c1u1sbTZ1q1CtIIPW76aM3gw85D+j+/HzqHyHzUfiusN+/Gg/dq+TWsO+SLovT93KOcO19Np1b3p4+FS/SFfzJ9RjXfPixE3/3D8HAf396yLwO09mZ/B4TatpfHff79Su/H4PrUYv0zN33Ju7d6PVTdzrZbFRzaa/0CiYVm5+T+6NRhXG4cNIP3mA176NLm99OpyBP7POJm7rPafdHPaNhSRM0ukzYF4s5XgMukpf9Avxr+VFWoinzXJXJ5YaxThQrrblLiktTioEiHiOaOZ6bRj9Xtk+753Xum6106j0DLts2I2G2Tdcs1MrFxq0ZnFA8TyiMyJjSZVdz8/XBHHoMKAeJNoiSrEPTP0CsYs4UgZ0LA5HRBncRkLFzbhurTAN7dobtRrlbJER5E+zt7mqXEX8ml4n7oxDsi/d9T3pHgMmMQGp73LAmZhwxkUtXtEi5YFZWqAShVTcAIkUYceq1G2dkTAOQDLVw8hLAyjFfpxXRmfrf0tDmOVWwnAcJRwFZn7+Pk3v8FtRCeHjEenAZEodEN2EI1dRpcjn07wtczfvAt5NPSKPmSgrTwheM9n/9D4tcky2o7JNDDOz4L7d8kOIIwD6F/z0w9Js43kLshO9uF7FjSH0pF309xWVXkvpYpHmHa1JrUwEvC4k09QngFMheG+30QtQfQuhf+u+2bI+iLy17/NLuU8nHHEIxfwp+fIbj40JMPnYGIiDk333JbMXUtSNQ8aP2c4D8SaRjL98tmAHSz9hHom/ZZR47+06grUTR+QpXhic0LlcyZvl7ZPZwJGAJUIKo2QX/BjAseD7xm2Rt1y4mKZpyuHzL4rUuJaKMI5SygddNTfs6m7Ok7/F4Lw7fYDJtX1zWWfs08v64XI4EQoYInXrS/7bWSP5uGDxVBX+OZeWmom3pwhO5zs6vyF4TOqrVrVTrrlrqa+tpd4y36V+P5P2B/NHy05ND89D+y8=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463575728</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35CEC7DB6B94E05305991F0A1B73</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1ef77446-3aac-40aa-b9d1-b638a115d3e6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02012_AccountDelete_FUNC_CS_Deleting_an_account_when_Account_Blocked_and_User_other_P1" searchProperties="true" id="3259c34f-56d0-4e2b-867f-04c18f341048"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="8de5513f-fcdb-4816-a236-fa63af3f7cb6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="b7a1a3d1-eafd-497c-94e7-463fdbf71bed"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="63ad79ec-0920-47f3-b9ba-9b7281a8e050"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="b969a5ea-b647-4de4-97ea-ab7e10e829c4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set User Status" id="22b959ae-3118-4fb6-914f-adafe3035f13"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","other");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Portal_CS" id="d0c60462-28ce-430f-8f91-b8f8faf0f30a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="d21df3d2-6d0d-4ea0-9ff0-329628697b3a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="797d8bdc-5adb-4826-b5b6-8a9ee887a920"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","other");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CEC7EF6B94E05305991F0A1B73</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CC6E716B80E05305991F0A0CC0:971C7711"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CEC7EE6B94E05305991F0A1B73</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CEC7EE6B94E05305991F0A1B73</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35CC851437A2E05307991F0A444C</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35CC851437A2E05307991F0A444C</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc6o6FH7vr2Do4x6EKFRkqjNsL63V2lp7fzkTQ5C0EDQJavvrT4KFqtv2dJ8ZZ5wsVr71rUu+5JTDJK56PueYCZJSrd9p6v+4lmM5AQQGcKehYYeNqdEIMDIaLsIgCO1qderoWp/zDPcpF5CKpl61gG1YrgEat8DxnKrnNCp113rWtXvMuISWLhVL19ZJTLmXh23qGaNeCjnhHoUJ5p5A3sS/HHrS04MFJ711umGZB2StSIi5Z5qoIinhOEYVlCbmqbnjcxpwb0JmFIqM4Y+YAW/qH3tXq1VlVaukbGZWLcsyrYYpfQJOZsd666jYjIM+DdPNug1pSgmCMXmHitQlFlEaaH48SxkRUfIFNDCBpaANvEYGAjY91s3PADm7HyLtkGQcGjyCoAC7wSFmmCKs3d30m/rxzzq42XvLIOVhyhK+t/47SpgucZzOcWDwIrOC3c8RD5SrdYqR16cozjhZ4pEakzlEmGvXDIdkPSRcDl/Atbz92prLHymmDKO/acupuc1VUjcPVKdDZpiL/9Oz7X5tUO5hnOHWbPFQH12a5+Hg8W4GrqYX9cWol7r8rPvUzClsO29Ile3+WO8PazlbH5vO7vynweIcLkA9SM6uEWX9CzAidIAfrgYXZ2OIL5wztn6furf+sjeI/V4yBlHycILw8KXzlpp18GvVAbPGw6/+UTZ6HA7sR9MdWierxVOtPf711J4Phvd+7/lqdCsWsyoIa9lj9D48v2zfO+NXl4XW8/Ugq56MnwMhQvflZmhNzkF3fPSyvn9BjzcR8aPucOXH73Dc/MxpO4ddYyEJk2z6gpEolmo8+h2tJ/sFxffyoiwkMMLc1ZsrjeICU6G31C4lLV4mBYgEnmzmZm1ZvW7NabddB9i1ul/tWk7NqjcaoGf5tm23Cw3asNij2E5pSFQspbKb+fmeIEo8jmmAmbFMMxRhrn+D2IECan16Iw9HSjm+TaWKA944WaO30LEDS5DoDb/GaRZRxnRtlIoresX8UGC2K93ujnTfYETmBCt9VwPO5YRzIWuxgMtMxKCyhBWKM3kDMCXCXtV2HZOTZB5jxdRM0iCLcWUezfPKmHzzXzUg4rmVcDRPmYAxyM/fl+ntfysqIX0Cohy4Suk3lt3EB64iu8jny7yrYDvvAt7PAqKOmSyrYARtmOx++pwWNSblqJSJIQ4K7uWWv4Q4AGB+w8/cL00ZL1iSrejF9SpvDKknraK/C1hZVLLlMss7WldaySS8KSUTmBOMMil4b7fpK6ZmCWH+6L4pWe9FLu27/DIR0YmAAidy/rR8+YPHxgRz9djoy4Oz/ulLZiekrJvAa3HI1o7lm0Qx/vbZgjyk/KT5Wv6tUhZ8tusA1lYcmad8YQhCZ2qlbpa3L2YDpRKWSClM2Tb4IYBDwXeNZZFLLkJO0zQT+OsvmtK4pg4RSjMq+h09N2zrbs5TvM2x9+n0B0yu7R+X9Zp/eVk/Xg4nUgETqJe+5L+dDZKPC8K6ehPkXJr6Wr49ZXA629L5D4IHpL7brne7J78bdi71zkbqwe96rSzgTiatP8x/WrZqun8eWv8C</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVfXkuq6En3nKyj2I8U4EkzNTJUcAAMmmfxyyshyACec4euPDAMbZs/sO+c+gVqt7tXBraXXSHMdug2iCIWx7XtlWXyr/EM2aKizFFPjds16jUVQq7VYg6ohrlFvci1GJxFbKctRlCDZi2LNi98qNIn1Sa5GNecU265TbbL+wjTq20p5icIIm8YqL2SlnLuOF7Uvbt8qSei1fS2yo7anuShqx7CtAmXYxppt7Yap8v56RXlxGL5bcRy0CQK+6Agix4Ev0HeJV+JJ51WP2qptelqchOjDpx69VT7OZln2kjEvfmgSNEmSBMkRWEePbPNX5b10O4x02TP861rQPN+zoebYZ60ApaDY8vUycEw/tGPL/cY0RVBkYbqGcliDFOv9qhC/HVzQ/dDSE8gw0mqRpVE3YzNkoBB5EJUXM/mt8utnFbyenYeaFxl+6Eaf1v8NEvJS5PgB0mvRLbIbup9b/CJd768ItmUPOklkp2hUtEmgQRSVJyEy7HxoR7j59Kh8KX85j24dhuB/Kckr8YgTwya+yIxomyiK/596PdbqamWpOQl6t1o5HPSthDa6q5lY7x/5xenITBciD94uEB6Vr6Dupf5Yf27Ue199HBL9lDzxOW+ezbE9GgHmJLnmJB2hqX6Y1VOKRzonpKtO0NnO2ON5HBPQW4TqMXUpLrGo40A7o6aZLSiaVUtwMvaXwt53/Qmot4bjMNcFnqRGLY2RW0sbTlhgu9XZpo9kWo9nyi7s0rwn9A122jMEjRKWFHkKd/Oqu9mWCD9pVM0GMfa31WadDSzPfPsd02MMRVwDdLoEWfxf10lO1GLtvhCKSWHgzzNG74osC1VREAASTJDJPDBlfngGI948HK2D3eUykgfTRQeI4KTMQCaaG3E5nQ6kTF8une1S7nR4ZcZmPbARS3hDlPKluF33SW21DTZ0h9yqPK+vZ/6O6Qd675D1LDhS5ko2mssnZS/lo7lEri4yM8frs7JXqPF8wZRWe55TZlImZhePopRZo+1qFmwWXAbP0lQBbBdQC0mwlN7cXVKQmVlwLw0VcLjIeUsRlksll+ZgUuLN0RLHNhc62wC6erBzHevBeA8bn+vd5WnXdZLtWdorgtQV1GNXlXeMOJX6YLZZ7FbLg7bqpCXYG4HdzaNdt7W1n5nbViZON/2Bv5WtFI7AVOL5KcDpIoEid/vA7/JAwQXPz8Keb/iC3smIPh2VqpzTbaxP9nEdaV3S0ahWi9oMV43JsSFKXnU7SHZ7S7HWnXF1oOrpgou58yZKq2lDsymYB8Z0LfXiQW70pmppNxHzNexVdbNPOGeuEyrNPgjPJ8tRzFm8aoyj0842jBW/HrNO03AUZhYYjhGcourcnx5CssEjhiY2p3QQl4Cp8AB094s9P1X4VpFUXc6mG4XXQEeKE3De0/GAXh77vdSBGwb4+WA13h8+CqOLmcQT2VTCbSWVWiLQiyL01IXU2YMFb5ohb0odfgpFMN3Ig2yD87XoYeXPeexc8mhKPJCYLWhwvRKzILl4HKssC04ev/A6nKUc85XecMnmEUlDdRSwmRKNDG+78g+Ka4eLMFEXg8FomO/mSfewx7PKINVBymxLUnoIgD0azK2D6IvaJNhs4qDqwRDGcuAqcn4eb6N9y965ZL9ap/gJKcImvXB32aKrSdtBaKrUoDfzJkyTK0WJceq51X0rW1XnaiNo6oJniKcTsQ2XpA/8DjerH/Wcpg/WIhs2MqMPDjuNHuUOx584abCdw2w2HaxUt1ov1dPh0CXPc4IdBeNM7WasNJ1WGZ2f9+ZRENqbpGXm4djT6Y0WN9ItuWzYgXPg6OQwZwNmabq4WJNUD5rKpDRl13Drms0A9okZkQKpaQzl7ml31s6BO4bXAfp5OtyF1/lBPE6Wp9FzIx0q7lYE49uyuIBksdzBt4IW/53AFBJbrxkX1XZQsKAoRl5ceS9OFeSlnWCKY+ttfGVc11KDazQ69UaLFZpA6rASyZJUhwRkneNIttW4sZwrik8QBd8z7MJXweOut9TfAUK3HSFPR2Et9RNooajyF4tFvsqyN8PXr+9FaO5jntjqNCSOYzmaYZtNhmuRDC1QVAu3DckKlMRVyiM/HnvjEBgxCp85YvOJI84QtAMbFUSyuE0jfJ1GMU7JUUuT2KFeUu3FQwmmmmHB9to026oTke0GDioAE66vJw56CazgkiAiuv7SNQ1GF+lMmv8jq8Llpv82xM97t2xgHd0uFKIiHh7hiqI/CC/Zrt+C+TZomnwM+mYeJLpdXOg4tXFowyuS563fHVO0yr1dcFQ3yHfNz4Inq8TngO6O9NSG956/Pwcwm8R84/1WkqP2cnxJ0jS5FKFZcKkQmycogmwSKoIJJkSnuX9AHnE3QfyIi95Rf/J8lz/jS2LLU2P8Pbu4ZcqX5Q8eIiqKioeIjFs+/+kr58klzluM8vgrmeDg90qB+K9PGtiGhR4WT/BP5of673J9YevBD46zGGC2ZxargnmevmkK6GOzNh5ifvho/CsDXzl/Ft6TfMcS427aJTH6fqdcTKe3igahn3ixLFYugseJecEZnwLU/q30h5kL9/sg83n0LZlfK0MVzy5Xq9x17f+tXLMv7QIRPhXZFyxvlRy/S7Fzz3yY0B8AvxjSPMe3yBZNc89DmmPuCXyK5P0P8Z+Sh5x+/h7e/wU=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463579044</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35CC851537A2E05307991F0A444C</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67796f5b-7200-4ddf-94c3-915bf1e05658</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02013_AccountDelete_FUNC_CS_Deleting_an_account_when_Account_Blocked_and_User_blocked:tou_P1" searchProperties="true" id="277b2af9-7d6d-468d-959a-2dc252e4fafa"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="63ccb6fe-d36b-4537-8619-06e9f7d825da"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="ce4117d8-cb4d-4060-8234-9c48653cb9ad"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="11498b4a-fe83-4f8b-a1cd-32b258b99913"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="49e4b9b3-6de1-432d-8ef2-6a78bcbffc96"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set User Status" id="679b97d2-b512-41e5-b20d-02ff2d2419cf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked:tou");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Portal_CS" id="bf69a83a-70fd-4f3d-8db5-7bd86984d302"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="1f180736-6306-4208-8dde-1fc39dd22777"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="7032fcb3-75dd-43b4-b35b-c1db1658bbfa"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","blocked:tou");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CC852937A2E05307991F0A444C</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35B47A8E379AE05307991F0A9CE0:9F4C15D0"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CC852837A2E05307991F0A444C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CC852837A2E05307991F0A444C</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35BEDDD56B8AE05305991F0ABD1F</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35BEDDD56B8AE05305991F0ABD1F</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I4FH6fXxFlHkchcbhHBYlL2aalV9i225eVsQ/gmcQJsRPC/PpxAkmB0m67EhLyyfF3vnPxZ58J7Hu20xMCIskCrrnDjv4vpnYDQbVp0KqFjRrMwJi1LMuwazPUajZoq9mc65orRAwuFxJz2dFtC9UMq2Wg9hTVnXrVsexKq1570bVHiISCVi4VS9dS3+PCycN29DjiToAFEw7HPghHEmfSux47ytPBBSe9e7ZlmQeMukspQ8c0SYUCAc8jFRL45pl54HNGhTNhC45lHMEuJhUdfbd3vV5X1tVKEC1M27Is02qbyocKtviud78Vm4G6fB5s1wPMA84I9thvnJG6BrkMqNbzFkHE5NJ/BxqZyMqgDUiJQVCNf9fN1wA5u08iHZCMBDbEEqMC7AHmEAEnoP394Hb075/r4HbvNMJczIPIF0frr1ECnoAXhEANUWRWsPs84olydc+AOC4nXixYAjfZmISYgNDuIpizdMyEGj4qtLz9WirUjxVTBuQrbTkz97kq6uaJ6gzZAoT8Pz3b79cW5RF7MXQfev2ny8k/yEpMuggvLtrNRW+5SsbiPOjkFPadt6TKdu/Wx8NaztZu022SPnn2T291nyJk83Nk90fRVfPxYX2/hrrX8p7vB+OZ6Y+upjdPzxfhdfBiMet61ZxdXc39m40fsfPJ72qa1ofyWyjvZpftq/b9iNJkfPc4bNCLKaELeEHjX/SpMbJnqXWFfvz1u+c+tuercHqL2j+aI7d9O7l5njzaT+lm/DOuBcvU/gY9e31J+o3be9qU6zR06X3nNaf9HA6NhSRM4tlPILJYZuPhDrWR6heWH8tLZmHUmOeuTphplJDApd7NdmXS4sRKgBh1VDO3a8sanVfr/fPhcFhv9Fu9c6tetertNhpZvf4QjQoN2rI4ojgI+JxlsTKV3c7PxwSJ7wjgFCIjCWKyBKF/gDjEEmsuf1CHI+ACpoFScbRsoUVDblLMklkY/UIb6dF5XZ1L7SaQt/w26s0lRIfS3TqQ7gcgLGSQ6Xs24EJNuJCqFiucxNJDlQRXOMTqBogyEXbsWqtuCuaHHmRMTT+gsQeVcBnmlTHF9t82MBG5lQkSBpHEHsrP37vpHX8rKqF8KMscRJZSH1Q34c1VZKvfLp9387bRft4FfC+mLDtmqqwyYmTL5PDT67RkY1KOSpkYEajgXm75IsQJAPMDfuZxacp4NGF70YvrVd0YSk+6RX9XuLKqxEkS5x1tZloZKXhTSSYyJ0BiJXibafALuFlCmJ+6b0rWR5FL+yG/WC75RGIJvpo/LV9+4rExAZE9Nlx1cNLPvmQOQqq6SUjlKdvAU2+SjPGHzxbikMxPme/U3zqI6Gu7TmDtxVF5qheGZHyRrbKbZfPObJBAwTIlhUG0D34K4FTwQ2NZ5JKLVNM0iyW8/0XLNK6jY0KCmEt3qOeGfd3NecpNCM6r0xuYXNt3l3Uq3r2sn6/HE6WAPtZLX/bfzgbLx4UovVP+OZeOnqq3pwrOF3s6vyP4VuoHg1bdblWbPTuX+uZW6mu12qAs4EEm3Tfmt5a9mh6fh+4f</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463582152</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35BEDDD66B8AE05305991F0ABD1F</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>884bceae-9009-4b41-917e-af6669273de8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02014_AccountDelete_FUNC_CS_Deleting_an_account_No_ManageAccountConsent_Policy_P1" searchProperties="true" id="cae19e8c-93d0-46d2-91bc-259c8c253993"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="87024cff-963f-4bef-b83a-32b052b33f2e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="311fc7ba-1cd6-4f82-b017-855081bc6d73"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="f0e63516-9c1b-4367-ae8e-2aa685dda9d1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Update MAC Policy" id="021a1077-e7ff-4021-a262-d8fb904f426a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_Policy_Status")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","deleted");
myTC.setPropertyValue("Policy","105");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));
myTC.setPropertyValue("UserName",tC.getPropertyValue("UserName1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Portal_CS" id="aab1838b-2c90-4737-b162-5fc4755885fa"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="79bf7d31-f948-4069-88e7-1997878b16d4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="5cad35ad-fa97-4cc0-9f23-206612b44e45"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CE628337A4E05307991F0A2173</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35BF581F6B96E05305991F0A65D7:4DF42D33"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CE628237A4E05307991F0A2173</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CE628237A4E05307991F0A2173</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B4F65D379CE05307991F0A189A</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B4F65D379CE05307991F0A189A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbcuI4EH2fr3A5j1PGFzA2rkAVATLrCblsyGYmedkScgOa2JKxZAP5+pFM7AAh2cxWpUKp3Tp9+qIjnXKUxE7Q5xwyQRjVwmFX/9fBntVB2DX8lvzXatltY+o3wXCcaDqdRtj2LaxrIec5hJQLREVXdyy7ZVi+YXfubDdwm4HlNjq+86hr95BxCS1dGpaurZOY8qAM29XzjAYMccIDihLggcDBpH85DqRngCpOeu90y7IMmPUWQqSBaeJGBBjiGDcwS8xTc8/nNOLBhMwpEnkGLzEj3tVf9q5Wq8aq2WDZ3HQsyzKtjil9Ik7mJ3rvS7UZopDO2HY9QJRRglFMnpEidQliwSKtH89ZRsQieQfaNm1LQRuwxga2W/REN18DlOw+ibRHMuPI4AtkV2C3MIMMKAbtn9uwq598roPbvXcZonzGsoQfrP+MEtACYpZCZPAqs4rd5xGPlKt3CjgIKY5zTgq4UmOSIgxcu8lgRtZjwuXwRVwr26+tufwj1ZQB/pO2nJq7XCV180h1hmQOXPyfnu32a4tyj+IcepNx0t5kw8H9N+oxr/8txrPpDfetJ+vvbklh13lLqm73y/pwWOvZetn062faZ6v5ZZhtwuI8enxIBukA2oOL1e3NpdcyF18frpveKHfHK/eC+aNmWICAx3Vn+Ozgq2/X/WizaX9tD811/vSlmUQPZ+yvs9h5DEP6I5qgYrmIHTq+vqCXfuSk7tKyabi8Xi1b2UM/9h7Ofow8wc3h/fc4/z5C48EYPZs/pilLvwx+4vtx4VzNYHLhD0bFAs27rznt5rBvrCRhkk9/ARbVUo1HONTOZb+Q+FhelIVExqx0DVKlUVwAFXpP7VLSEuRSgEgUyGZu15Z1Pmq6Z63ztjtsep3ByHKbltfp2OdW3/Y7/UqDtiwOKA4YnREVS6nsdn4+JoiTgAONIDMKluMFcP0DxCESSAvprTwcjHK4Y1LF7dnmWXS8JcRPy/yp7cbUQ/Fz8UvXrpi4ptdZfyYg21duf0+5bwGTlICSdzXfXA44F7IUS1TkIrYbBWpQyOUFkCkNDpyW75qcJGkMiqiZsCiPoZEu0rIwJt/+OgbCvLQSjlOWCRTb5fF7N7vDb1UhpE9ElANXKZ2BbCa8uYmcwK3yeTdvx97Nu4Lv5xFRp0xWVWQEb5nsf3odFjUl9aTUiWFuV9zrLX8IcQTA/ICfeViaOl5UkJ3o1e0qLwwpJ72qv0vUWDbyosjLjnpKKjMJb0rFtM0J4Fzq3eaOPQE1awjzU9dNzfogcm3f55eLBZ0IJCCR86eVy0+8NSbA1VsjlOdm/dmHzF5IWTcBa3HMNojlk0Qx/vDVggOs/KT5Rv6sWBa9tusI1k4cmad8YAhC52qlLpbNO7OBmYQlUglZtgt+DOBY8H1jXeSai5DTNM0FvP9FUxLX1RHGLKciHOqlYVd2S55ik0Lw6vQGppT2l7t6zd+9q39ejidSABOk177kv50NUo4LBl09CUouXX0tn54yOJ3vyPwLwbdKPxi1Hd9pev3WrtI7ttesC7iXSe+N+a1lp6aH56H3Gw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463585344</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B4F65E379CE05307991F0A189A</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b948c6c1-8581-4ed1-b753-d988b4da9c10</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02015_AccountDelete_FUNC_CS_Deleting_an_account_which_is_suspended_P1" searchProperties="true" id="5e6ab365-640d-446d-b9e2-2a47e3fb3ed0"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="bafcc4a5-f461-4c71-8014-e6fe9acf3bc2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="bee2f2bb-e267-44c5-8906-470b0e9b9ac6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="90a7a985-95f9-4c6e-8278-b139e5763400"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="71a4544c-9938-4ce1-a998-0fa4bd6344fe"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","suspended");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Portal_CS" id="1efed46a-2361-4836-916b-0f04db4855eb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="ca7d0eaf-0d56-4d86-9e73-5068ff37c852"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="9025e10e-44e8-4068-beda-4899b5561123"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35B4F672379CE05307991F0A189A</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35B42FB73798E05307991F0A5105:ED32AF42"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B4F671379CE05307991F0A189A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B4F671379CE05307991F0A189A</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B48F956B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B48F956B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuI6FH3vV0SZx1HIjZQQFaSUSyed0nag02n7cmRsA6aJE2yHS7/+2KFJgdKezpGQkHe211774mWfcZDEThByjpkgKdWibkv/x52AUw83HQOeug2jjoBr+F4dGsD3LOSP4cQHUNciznMcUS4AFS3dsey6YfmG3byzvcBzA6tZcx3/SdfuMeMSWrrULF1bJzHlQRG2peeMBinghAcUJJgHAgajcHAVSM8AlJz09tmWZRGQtWdCZIFpwhrCEMcxrME0Mc/MPZ8zxIMRmVIgcoZfYyLe0l/3rlar2sqtpWxqOpZlmVbTlD6Ik+k3vX1SbsYoopN0u+4AmlICQUxegCI1wGKWIi2MpykjYpZ8AG2btqWgDbyGBrTr9JtuvgUo2H0RaY8k48DgM2CXYEM8wQxTiLXfw6ilf/taB7d77xigfJKyhB+s/44SpkscpxlGBi8zK9l9HfFIudpnGAYRhXHOyRJfqzHJAMRcu2V4QtZXhMvhQ1wr2q+tufyRcsow/Ju2nJm7XCV180h1umSKufg/Pdvt1xblHsQ5brP+PEwfcPwrth+m6cVvstrEjR58Ws6sVkFh13lLqmr36/pwWKvZet20WDjgd9z4ORsPPOT4sWT5a5Us1x7irt95sfrPebZ+JC+P3tXVfVy/DN1573YVzlyQJX0UnvYeNhmI+eT+GuGTNHKIOX/uDB7p4+Vm018z4cyti+EPNLwY0f53Z7N+9Af+Y//hh/tyXb+ae/nPKLoeLuyGbd92bP9JmB32/Q9cPN2fQHPMvncv/wzGTpyZ3k03DltvOe3msG8sJWGUj+cYinKpxiPqan3ZLyA+lxdlIciYFK5BpjSKC0yF3la7lLQEuRQgggLZzO3asvo91zuv+/2md3reCHuW51pes2n3rbDXc89LDdqyOKDYSemEqFhKZbfz8zlBmAQcU4SZsUxzOMNc/wSxCwTQIjqUhyOlHN+lUsVtgJrOHIzRaYMsBHKYtXxu5M94oWvXqbihNyycCMz2pdvfk+4hhiQjWOm7GnAuJ5wLWYsFWOYitmtLUKM4lzcAUyIcOHXfMzlJshgrpmaSojzGtWyWFZUx+fbfMQDkhZVwmKVMgNguzt+H6R1+KyshfRBRDlyldI5lN/G7q8gJvDKfD/N27N28S/gwR0QdM1lWwQjcMtn/9DYtakyqUakSg9wuuVdb/hLiCID5CT/zsDRVPLQkO9HL61XeGFJP2mV/F6C2qOXLZV50tKG0kkl4U0qmbY4wzKXgbe7SZ0zNCsL80n1TsT6IXNn3+eViRkcCCJzI+dOK5RceGyPM1WMjkgdn/dWXzF5IWTeB1+KYrRPLN4li/OmzBQZQ+UnzrfxbpQy9tesI1k4cmad8YQhCp2qlbpbNB7MBUwlLpBSmbBf8GMCx4PvGqsgVFyGnaZwL/PEXTWlcSwcQpjkVUVcvDLu6W/AUmwwHb07vYAptf72s1/zDy/phcDWSCpgAvfIl/+1skGJcINbVm6Dg0tLX8u0pg9Ppjs6/Ejwm9f3Thu02mp1C6htbqbf9ZlgVcC+T9jvze8tOTQ/PQ/tf</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463588550</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B48F966B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53e21657-2911-4ad4-a8b5-fc4bba541055</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02016_AccountDelete_FUNC_CS_Deleting_an_account_which_is_blocked_P1" searchProperties="true" id="ca97a1bb-8ce3-44be-a738-c2dc53af5bd5"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="b58999e7-87c8-4313-93bf-d8aee53a32de"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="f0ae77fa-9ea7-4132-a40f-2f4ab7d0e39f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="af47db27-6c85-4c4a-998c-b3c04f5102d1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="ab727c0b-7690-4668-98cb-85e251a0fad1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Portal_CS" id="dcd6cd37-e163-4ccc-b5c4-d5fe75cc73e9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="7663f41a-ac7f-4d5d-8827-a35e2af6d555"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="1a536c0a-0a66-4313-9785-6347e27b0397"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35B56E0E6B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35C6FA116B92E05305991F0A81AF:D606092C"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B56E0D6B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B56E0D6B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35CCBD2C37A6E05307991F0A9C25</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35CCBD2C37A6E05307991F0A9C25</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+I4FH2fXxFlHlchHxQIUUGiod1SQdsBptPOy8o4N2BInGA7kPbXrx2aFCjtdlZCQr65PvfcDx/7nKM4crwe58AESag26Hf0fwLXaaOZ6xqNmTMzzhoYGTO3ZRtn9bYNZ7O2Y9dDXRtwnsGAcoGo6OiOZZ8ZlmvY7and8Bp1z3Zqtuv81rUHYFxCS5eapWt5HFHuFWE7esaolyBOuEdRDNwT2Jv0RkNPenqo5KR3z3csi4CsuxAi9UwT1wLAEEW4hpPYPDcPfM4D7k3InCKRMXiNGfCO/rp3u93WtvVawuamY1mWabVN6RNwMv+ud7+VmyEY0DDZrX1EE0owisgLUqRGIBZJoPWiecKIWMQfQNumbSloA3JsYPuMftfNtwAFuy8iHZBkHBl8gewSbAwhMKAYtJ/jQUf//rUO7vZOGaI8TFjMj9Z/RgnoBqIkhcDgZWYlu68jnihX9xywN6A4yjjZwK0akxRh4No9g5DkQ8Ll8AVcK9qv5Vz+SDllgP+kLefmPldJ3TxRnT6ZAxf/p2f7/dqhPKAog2769Ps6N2c/7m7M6Ib0B3Vur/us+bgxnzoFhX3nHamq3a/r42GtZut10+p+NAovAQ9vfDSc+mN4CsLpaJqm8+u8kT82h9Obp6fg8u5h3KQZ/jVdie3q1+Oy2RpOZhfuZM3c26h+99CzM1t8M69+PieT0ajB/N/XY/QXm2eX4epxO73djOp89GNirTfE34RPgwyF/XDJ4uYSyJiMh/PVMEzSbf0qm9l/h81bEn17eHjphzfQa7r16DpcuMvVqPOW034Oh8ZSEibZbAlYlEs1HoO+diX7hcTn8qIsJDDCwtVLlUZxAVToXbVLSYuXSQEigSebuVtb1tVlveH7F33Hr7d6zUurUbda7bZ9ZfXavtMoNWjH4oiin9CQqFhKZXfz8zlBHHscaADM2CQZXgDXP0HsI4G0AR3Lw5FQDtNEqvgsdJc4z3JG46CVBy9Lvmht8xnWtdtE3NE71gsFsEPldg+UewyYpASUvKv55nLAuZClWKNNJiK7tkE1Cpm8AJjSYM85cxsmJ3EagSJqxkmQRVBLF2lRGJPv/h0DYV5YCcdpwgSK7OL4fZjd8beyENInIMqBq5QuQDYTTtxEVpnPh3k79n7eJXwvC4g6ZbKqghG8Y3L46W1Y1JRUk1Ilhrldcq+2/CHECQDzE37mcWmqeMGG7EUvb1d5YUg56Zb9XaPaupZtNlnR0ZaSSibhTamYtjkBnEm9e54mK6BmBWF+6bqpWB9FruyH/DKxoBOBBMRy/rRi+YW3xgS4emsM5LnJv/qQOQgp6yYgF6dsfiSfJIrxp68W7GHlJ8338m+bsOCtXSew9uLIPOUDQxA6Vyt1sTx/MBs4kbBEKmHC9sFPAZwKfmisilxxEXKaZpmAj79oSuI6OsI4yagY9PXCsC+7BU/xnIL35vQOppD217s65x/e1Y+j4UQKYIz0ypf8t7NBinHBoKsnQcGlo+fy6SmD0/mezL8SfK/0Fw0p8f3mReuyUPrGTun9vt+qCniQSfed+b1lr6bH56H7Lw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463591561</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35CCBD2D37A6E05307991F0A9C25</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f1d334d9-845e-4bab-b073-a66657cc23ae</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02017_AccountDelete_FUNC_CS_Deleting_an_account_which_is_archived_P1" searchProperties="true" id="3ccf357f-8315-4b86-a23b-9d887e533f49"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="3dff9b9f-ffa3-4173-ab8e-8b5119006c79"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="bc120b62-c4cf-48ed-bb66-9f23e1fbf27e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="f8b35fd2-2dac-4eb8-98ea-4734ba25ab7a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="4a4a824c-c727-4181-8ba5-7e89db4a07bd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","archived");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Portal_CS" id="8e4c1331-25ce-4c0b-80a0-4da62b207b96"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="d3531a2a-ba9e-4ac8-b503-cba7718d3f1d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="0a8a6bcb-f7bb-4195-bb80-804dc463ccf9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CCBD4137A6E05307991F0A9C25</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35B3E2E06B78E05305991F0ABA86:8196E06D"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CCBD4037A6E05307991F0A9C25</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CCBD4037A6E05307991F0A9C25</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35BA2C0A37A0E05307991F0A50EB</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35BA2C0A37A0E05307991F0A50EB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+I6FP6+v6LT/eiUtIUC7QgzFXTtLqhDcXX9cqekKY2UpCRpRX/9TYpFQPS6d4YZJqcnz3nOS57klEfLzPZ8zhETmBItGPb0f9ym24LNCBqzdpwYLWvWNCKIukYTJa5jt5tJYjm6FnBeoIBwERHR023Tahlm17DcqeV4TtOznIbtWg+69hsxLqGlS8PUtfUyI9yrwvb0ghGPRhxzj0RLxD0BvdAfjzzp6UU1J71/umFZBWT9VIjcAwA2YgRRlsEGpEtwCvZ8TmPuhXhOIlEw9Boz5j39de/T01PjqdmgbA5s0zSB6QLpE3M8/673v9WbURyQhG7Wg4hQgmGU4ZdIkRojkdJY87M5ZVikyw+gLWCZCtpAa2hAq0W+6+AtQMXui0h7JBmPDJ5GVg02QQliiECk3U6Cnv79ax3c7J2yiPCEsiU/WP8dJURKlNEcxQavM6vZfR3xSLn6pwh6AYFZwXGJrtSY5DIVrt0wlOD1CHM5fDHXqvZray5/uJ4yBP+mLadgl6ukDo5UZ4jniIv/07Pdfm1QfkdZgfqPzUl7NHxcjS46abvdncyTfGRnD61g7vcqCrvOG1Lbdr+uD4d1O1uvm0gI6E3nfBGsAA3X0PefBcxS+uv5yZ1erkd0fHcOR+H9n0U5NfFvMBivu/4P18+H9q/2/YkpztIZPpn46XDykH5b3QaDl7DJQnB5cXfjPkz/AGbe/hg4V5fXFy9XCzLy7+6Wfxb3j3P3ajX8OR2lt4sbp3g4v/rl3JF4nJc2S2fZD3Fy9219ezk2Z9ePi5MQ//SxfzngvbecdnPYN9aSEBazRwRFvVTjEQy1C9mvSHwuL8qCYyOpXL1caRQXiAi9r3YpafEKKUA49mQzN2vTvDhvOme+PTD9Zsc3z02naXZc17owfcc8P6s1aMPigOKAkgSrWEplN/PzOUG49DgiMWJGSQuYIq5/gjiMRKQFZCIPByUcTalUcSufWc9duup0EkotJ150HFKW7GVW6toVFdfkmvmJQGxfu7t72j1BEOcYKYFXE87liHMhi7GKykJkVqOMGgQV8gpgSoU9u9V1AMfLPEOKKljSuMhQI0/zqjSAb/5tKUa8smIOc8pElFnVAfwwv8NvdSmkT4yVA1cpnSHZTnTkLjLrfD7M27Z2867h/SLG6pzJugqG4YbJ/qe3cVFzsp2VbWKQWzX37Za/hDgCAD7hBw5Ls40Xl3gnen2/yitDCkq/7u8qaqwaRVkWVUc7SiyZhAdSMy0QIlhIxXue0gUiYAsBvnThbFkfRN7a9/kVIiWhiARayvnTquUXXhsh4uq1EciTs/7qU2YvpKybQGtxzDbI5KNEMf703QI9qPyk+Ub+PVEWv7XrCNZOHJmnfGIITOZqpa6W5w9mA1IJi6UWUrYLfgzgWPB947bIWy5CTtOsEOjjL5oSuZ4eQUgLIoKhXhl2hbfiKZ5z5L05vYOpxP31tl7zD2/r+/EolBK4jPStL/5vZwNX4wKRrh4FFZeevpaPTxmczHeE/pXge60fDM6GLVNqfXtX692B/TbLe5n035nfW3Zqenge+v8C</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463594546</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35BA2C0B37A0E05307991F0A50EB</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cd14f869-bc8f-4f65-9ecc-2fdca351a5dd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02018_AccountDelete_FUNC_CS_Deleting_an_account_which_is_other_P1" searchProperties="true" id="a32f5b2f-9af8-4a68-9e9b-feebad0a1c5c"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="d23ae23c-2e7a-450b-b6c1-933a59019afa"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",tS.getPropertyValue("audience"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="ac1affca-2754-49d7-b7c2-bf41a732299f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="a25129f0-811e-4eb7-b3cb-89119b5dcec2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="3eb2e2af-d4bc-4a1a-9481-6ce1a5cf4367"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","other");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node Portal_CS" id="b25fd3d6-cc8a-4d85-b32f-a9476723eb7d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="4b3dd9c6-8fa2-4002-ac0f-502da093865c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="c7afd9fa-b81e-48a8-859c-7ac2d0855500"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35BA2C1F37A0E05307991F0A50EB</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_043f976d-7680-4855-a008-a06c0343546a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35BEDDEE6B8AE05305991F0ABD1F:10FC7578"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35BA2C1E37A0E05307991F0A50EB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35BA2C1E37A0E05307991F0A50EB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B47A9C379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E5F89A132CF625E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B47A9C379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E6966F5684C7AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuI6FH2fr4gyj1VwwiWBqCClBdoM9DLQmen05cg4G3CbOGnsQJivP3ZoUmBoT3skJOSd7bXXvnjZpxxHYd31OIdU0Jhpfr+r/+OA03Bms5Zh2g4xmnMyMzo2JkYjaNbNzrwZBGDrms95Bj7jAjPR1eum1TTMtmF17qyW22q4VrvWaLYfdO0npFxCS5eaqWt5FDLuFmG7epYyN8accpfhCLgriDv1rsau9HRxyUnvnW5ZFgHT3lKIxEWI1AIgEIakRuIInaI9n9OAu1O6YFhkKbzEDHhXf9m7Xq9r60YtTheobpomMjtI+gScLr7qvS/lZgh8No+363PMYkYJDukfrEhdgVjGgeaFizilYhm9AW0hy1TQBuTEIFaTfdXRa4CC3QeR9kimHBt8ia0SbAJzSIER0H5M/K7+9WMd3O69SzHj8ziN+MH6c5SArSCMEwgMXmZWsvs44pFy9U6BuD4jYcbpCq7VmCSYANduU5jTfEy5HL6Aa0X7tZzLHy2nDMhn2nKKdrlK6uhIdfp0AVz8n57t9muL8hOHGfQ6D+O+mLXDZvqUDxkb3Y/QxeWkHn6f/egWFHadt6Sqdr+sD4e1mq2XTcntw2hw9vNhdZXbfjDE1yF1OiN28eg8Dy7973ebcR/bFxFzpldBfodGvv9rmP9wYusEX46nfGid1SexPbV/L0jnywX9bfYvpye4HV7cPJt8jfo32dnJxJ7yxoXtPT5m49FzsrmaL8nm+smzQ9tErfs/XkbM9BZdBt54dH3+bSSb2Aq/JBm27cGY/0J52wJvMbQX3decdnPYN5aSMM1mj0BEuVTj4fe1oewXFu/Li7LQwJgXrm6iNIoLYELvqV1KWtxMChANXNnM7do0h4NG66zpeJ3zhtPxBmarYTqdjjU0pWVglhq0ZXFA8Txmc6piKZXdzs/7BEnkcmABpMYqzsgSuP4OYh8LrPlsIg9HzDjcxUrFG6v0MdtEkBLbyh/zvLHekGYWhLp2HYsbdpN6cwHpvnS396R7AoQmFJS+qwHncsK5kLV4xqtMhFZthWsMMnkDpEqE3Xqz3UKcRkkIiimK4iALoZYsk6IyiG//6wYmvLBSTpI4FTi0ivP3ZnqH38pKSJ+AKgeuUjoD2U04chWZZT5v5l23dvMu4b0soOqYybKKlJItk/1Pr9OixqQalSoxwq2Se7XlkxBHANA7/NBhaap4wYruRC+vV3ljSD3plf19xrXnWrZaZUVHHaWVqYRHUjItNAWSScHb3MVPwFAFgT5031SsDyJX9n1+mViyqcACIjl/WrH8wGNjClw9Nnx5cPKPvmT2Qsq6CcjFMdt5KN8kivG7zxbiEuUnzbfybx2nwWu7jmDtxJF5yheGoGyhVupm2bwxGySWsFRKYZzugh8DOBZ831gVueIi5DTNMgFvf9GUxnV1TEicMeH39cKwq7sFT7FJwH11+gum0PaXyzrnb17W91fjqVTACOuVL/1vZ4MW40JAV2+CgktXz+XbUwZnix2dfyF4ROq9+rk1aDieuSv1LXNwVhVwL5PeX+a/LTs1PTwPvX8B</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdbk6q6En73V1iuR8sBFEGsmakKFxUV71dedmEIiHKTgKC/fgcdXTprZp3Z50nT6XR/faHz5RUbnlttAoxRFDuBX1Tlt9I/sGbxNGfAikGzVoU1BLoiWAhVWM40eMusV2lGKBVVjBOk+jg2/PitRGS1Ci1UGHrGMM1ao1nnXlimqpeKCxRhYpqovNClYua5Pm5e3L6VkshvBgZ2cNM3PISbMWxOgdZvEs2mccNUen+9orw4jN63cRw2KQq+mAgi14UvMPCoV+pJ59XEzalj+0acROjDp4nfSh9n0zR9SWsvQWRTVZqmKVqgiI6JHftX6b1wO4xM1beC61oy/MB3oOE6ZyMHpaF4G5hF4NpB5MRb7xvTDMXQuekKymAFMqz/q0T9dnBB90NLTyAjbFTw1mBuxibIQhHyISrOJ+pb6dfPKng9O4sMH1tB5OFP6/8GCflH5AYhMiv4FtkN3c8tfpGu91cEm6oP3QQ7RzTI2yQ0IMLFUYQsJ+s7mDSfiYuX8hczfOswBP9LSV6pR5wENvVFZmTHRjj+f+r1WKurlYXhJujd3Az9NIrj2AyrDb5BeccumC5lmtHttwuER+UrqHupP9afG/XeVx+HgH6QAEWFHW+43wWCyLOzATQyqC43IyFgww6KDHleXfBhnwnP7GFSV5aOMRqMeQLMtI6Gmkq4fPYtY68VOlun7ojlyBsmPWdxpgd+bX5QyhvHX/P9APM06YFso8/XEh+zHD0x1Ho2yDY0lyJFreKyARJ1vOLHOsesCo59ED3KmdTrKdAXYuZt12+/Y3qMIY+rh06XIPP/qzotyEZs3BdSPiks8nnG6F1TVaksSxJAkg1SVQS2KvbPYCDa+8N277SFlBbBeN4CMjhpE5DK9lpejMc9JTUXC1dfqK2WqE3YtAPWcoFsyEq2kPVVlzaWeriutmh9KormahJsat3Q7OzTzhYOtJmWDmbqSdsp2WCm0MuLzM7I+qztNGY4m9cKy50oaBMlldOLR1lJtwN9OQnXcyGFZ2WsAbYNmLkibbXOzFswsDbZwp3S18D+Ihe3mrRYaJkyA6OCaA8WJLaZ1NJD6JnhxnO3D8Y7xPjMbC9Om7ab6Gdlp0lKW5oe2lN1U5PHShdM1vPNcrE3lq1jAXYGYHPzSEpsrILU1hupPF53e4Gubo9wAMaKKI4BSRcNNLXdBUFbBBoLnOws7UQukMxWSnWruFAW3Da3OjmHFTbatGswjQaz7i+50YGTFb+s95LNbqttV61huTc1j3MhFs5rfCwfOcNhYBZa45XSiXuZ1RlPC5uRnK1gp2zaXco9C61I47sgOp+2rmZP4iU3xKeNY1lLcTVkXd5ytdoktFwrPOHyLBjvI5oTUa1KrU/HXlwAtiYC0N7Nd+JYExt5Uk01Ha810QAtJU7AeVeNe9XFods5unBdA0HWWw53+4/CmHKqiFQ6VkhbKYWGDMy8CJ3pXGntwFy07Ui0lZY4hjIYr9Veuib5mneI8uc8ti55tBURKDUdcEKnUJvTQjyMpywLTr4491vCVjtkS5PzaP6AlP50ELKphgeWry+DveY50TxKpvNeb9DPNrOkvd+RWWXR096xpheU4z4EzqA32+7lQDZG4Xodh2UfRjBWQ09Ts/NQx7uGs/HobrnOiCNahnx17m3SedtQ9F5kT5leZ+KParxQwIl16njlXSNdlmdTLuRNybfk04nSowUdgKAlTOoHM6tW99t52udSqwv2G6M6yFxBPAlKT5/BdDLuLadeuV6oH/t9jz7PKHYQDtNpO2WV8bhcM8VZZ4bDyFknDTuLhr5ZXRsxd9TpBeeE7l6oJvsZG9YWtkeKNTqaIa+NCmN2BXXP5kPYpSbUESi81Vfbp83ZOIfeEF4H6OfpcBde5wf1OFmeRs+NdExJtyIY35b5BaTKxRa5FYz47wQmlzhmxbqoNsOcBeEY+XHpPT+Vk5dmQiiOYzbJlXFdKxzNKTItiVydkxotUaFZmmnRgOYFgZZ4+cZyrig+QZQC33JyXzmPu95SfwcIvSZGvomiyjFI4Bbh0l8s5vkqqv6EXL+Bj9EsIDyRVoSayHMyy9JyQ6ySvmbrXJ0XW4pYbzE8VyoOgnjoDyNgxSh65ojsE0ecIOiEDsqJZH6bYnKd4pik5GAck9hlXo7Gi48SQjWjnO01q2yjTmHHC12UA6a8wExc9BJuw0uCKHz9rVYMiC/SiTL7R51Kl5v+2xA/792yQXRMJ1fAeTwiIhVFXxBe9hbM90Hzj0HfzIPEdPILnaQ2jhx4RfK89btj8la5twuJ6gb5rvlZ8GSV+hzQ3ZF5dOC95+/PAcImCd94v5XkYLwcXpLjMbkUgc+5VETMUwxF89QUwYQQotMs2COfupugfsRF76g/eb7Ln/El8dafxuR79kjLFC/LHzxEpgjnDxGVtHz201fOk0uStxhl8VcyySXvlRzxX580sAlzPSIekZ80iMzf5frC1oMfEmc+wBzfzlc58zx90xQwIGYdMsSC6NH4Vwa+cv4svCf5jiUm3bRJYvT9TjGfTm8lA8Ig8WNVLl0EjxPzgjM+haj5W+kPMxfu90HmM/wtmV9p/SmZXZ5Ruus6/1u54lzaBSJyCjsXLG+ljLxLiXPffpjQHwD/GNKAURhRAIKkgE9DunVP4FMk73+I/5Q85PTz9/D+Lw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_20130916_1379281926451</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463597654</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B47A9D379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5e6679db-772f-499a-b063-80c4e4839f6e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>role</con:name><con:value>nodeIdportal</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:${#Project#nodeIdportalCS}</con:value></con:property><con:property><con:name>role_CS</con:name><con:value>nodeIdportalCS</con:value></con:property></con:properties><con:tearDownScript>if(context.expand( '${#Project#runTeardown}' )=='true')
	{
	log.info("Executing TearDown for Suite '" + testSuite.getName() + "'");
	
	for ( testCaseResult in runner.results )
	{
	   currentTestCaseName = testCaseResult.getTestCase().name;  
	   currentTestCase = testCaseResult.getTestCase(); 
	   log.info("Current TestCase : '"+ currentTestCaseName + "'");
	   log.info("Current TestCase Status : '" + testCaseResult.getStatus().toString() + "'");
	   
	   if ( testCaseResult.getStatus().toString() == 'FAILED' )
	   {
	      log.info("Re-executing failed TC");
	      def currentRunnerTC = currentTestCase.run(null, false);
	      log.info("Status on re-execution : '" + currentRunnerTC.status + "'");
	   }
	}
	log.info("Execution of TearDown for Suite '" + testSuite.getName() + "' Completed" );
}</con:tearDownScript><con:reportParameters/></con:testSuite><con:testSuite name="AccountDelete_FUNC_SPLCS_P2" id="ab2b6851-4566-4c9b-8f25-17b24e35aaac"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02001_AccountDelete_FUNC_CS_Deleting_an_account_which_is_pending_P1" searchProperties="true" id="1edf7cbb-9b0a-4bac-92cc-ed7c73d88b39"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="33dd350a-a35e-44fb-8c58-a13617dca50a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",null);




</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="625c9c86-593c-4e47-80de-ffa1aa9784a4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("UserName",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="5807b903-1d27-4b37-9c47-5ec7a4dbaefc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Update Account Status" id="7d181df1-9659-4276-913f-e08f2babac2a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","pending");
myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DECE_CS" id="2738666b-7d36-4f1b-a04c-4c0cbf410ada"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS API with DECE_customersupport" id="e5b56f2f-da50-4396-a598-68462c5a5751"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());


def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER2",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID2",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL2",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID2",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL2",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="43817797-20e2-4de7-83f8-98aa7d761a86"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL2"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="894f041b-12fc-4b90-a7d0-2fc68de6a464"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35B56E266B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_c748ca98-3b88-4c16-ab25-b5044e84ba02</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_c748ca98-3b88-4c16-ab25-b5044e84ba02</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35B48FAF6B7AE05305991F0AEE3B:92FC6BBB"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B56E226B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E763CEDB3F0BFFCEE0401F0A07991BDA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B56E226B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E763CEDB3F0BFFCEE0401F0A07991BDA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FE35B4F685379CE05307991F0A189A</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B4F688379CE05307991F0A189A</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FE35B4F685379CE05307991F0A189A</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FE35B4F685379CE05307991F0A189A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B4F688379CE05307991F0A189A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FE35B4F685379CE05307991F0A189A</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdb+o4EH2/vyJKH1chCZASooKUQlul3wtsW+7LyjgT4pI4YDtA76+/diApUNrtXQkJeTKeOTNzfOwzjtKk7vmcAxMko1rQ7+j/4lbTxajtGo2J6xpNbJ8aaFJ3jIljNZvgNifIqutawHkOAeUCUdHR65bdNCzXsNsj2/Gchldv1By7+VPXnoBxGVq61CxdW6cJ5V6RtqPnjHoZ4oR7FKXAPYG9oX9360lPD5WY9O7ZBmWRkHVjIeaeaeJaCBiSBNdwlppn5p7PWci9IZlSJHIG25wh7+jbvavVqrZq1DI2NeuWZZlW25Q+ISfTE737o9wMYUCjbLPuIZpRglFCfiEF6g5EnIWan0wzRkScfhLaNm1LhTZgjQ1sN+mJbr4nKNB9M9IeSMaRwWNkl8EGEAEDikH7ZxB09JPvTXCzd8QQ5VHGUn6w/jNIQJeQZHMIDV5WVqL7fsQj7eqeAfYCipOckyXcK5rMEQauPTKIyPqWcEm+kGvF+LU1lz9Ssgzwn4zlzNzFKqGbR7rTJ1Pg4v/MbHdemyhPKMmhm+Rj8spaftTo+WTxwK+uH9qvo9tx1Ms6BYRd5w2oatzb9SFZK25tN61Ww8nsKr16GQ8WrenIyUIGz2awRDGZza7dG/RgXyzdxSB69l+sRji6H+bxsxOPZ+1rF9kA6fPNuP2asJectH80ns/jYOKuF6E1Iv2n67lJ5vZr/BhMYIheTtfjp9nPZr1Nsvto/Hhxjls3ph1NB38NRk84vHcD51d/7bfspOnGf//wJxOZIbXu2ess7ftXaRB03mvarWHfWErCMJ+8AhblUtEj6GuXcl5IfC0vykJCIypcvbnSKC6ACr2rdilp8XIpQCT05DA3a8u6vGg4583LU9dptNq9C8tpWK122760fNtt+6UGbVAcQOxlNCIql1LZDX++BohTjwMNgRnLLMcxcP2LiH0kkBbQgTwcGeUwyqSKn4pQRBNrFeZxYk8bfLGMpmyR5wtdu8/EA31gfiSA7Uu3uyfdA8BkTkDpuyI4lwznQvZigZa5SOzaEtUo5PIGYEqEvXrTdUxO0nkCCqmZZmGeQG0ez4vOmHzzXzcQ5oW1aCvmxeH7tLbDb2UbpE9IlANX9ZyDHCUcuYfsspjjRdetg/uqDO/nIVFnTPZUMII3SPY/vVNFcaTiybaqEnblfWjYi2weFlUlC5cEV4Svbmop9FIGuuVYFqi2qOXLZV4MoqUkjsnwplQ62xwCzqVOvY2yGVCzCmF+65qoUB9kruz7+HIR06FAAlJJG61YfuONMASu3giB5Pv6uw+QvZSybwLW4pitl8inhEL85WsDe1j5SfOj/FtlLHwf15FYO3lknfJhIAidqpW6EN4+IQbOZFgiFSxju8GPBTiWfN9YNbnCIiSbJrmAz79oSpo6OsI4y6kI+nph2JXLAqd4m4P37vQhTCHJ2zt2zT+9Y1/ubodSuFKkV77kv50NUtAFg66u8gJLR1/LJ6NMTqc78rwFeEShndOLev30vHVRKLSzUehev9eqGrhXSfeD+aNlp6eH56H7Gw==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH1chHxASooJE+dimpbttodtuX66MMxBvEwdsJw399dcJTQqU9navhIQ8Gc+cmTk+9glHcWR5fc6BCZJQxR921X8c1A7cVnuhAYCltUzsaPNms6O12tCag9GxF22sKj7nKfiUC0RFV7UMs6UZrmZ2Zqbt2U3PMhstx3hQlV/AuAwtXRqGquRxRLlXpu2qKaNegjjhHkUxcE9gb9q/nHjS00MVJrV3skVZJmS9UIiVp+u4EQCGKMINnMT6ib7ncxJwb0qWFImUwUvOgHfVl71PT0+Np2YjYUvdMgxDNzq69Ak4WX5Ve1+qzRD4dJFs1wNEE0owisgzKkBdggiTQOlHy4QREcbvhDZ10yhCa5BjDZst+lXVXxOU6D4ZaQ8k40jjITKrYDewAAYUg3J743fVr5+b4HbvjCHKFwmL+cH67yABzSBKVhBovKqsQvf5iEfa1TsB7PkURyknGfwoaLJCGLhyxWBB8gnhknwBV8rxKzmXP1KxDPDfjOVE38UqoetHujMkS+Di/8xsd17bKL9QlELvT5p/X1ysV9HTpXHu3qST5+WZ24dfk9vrbglh13kLqh73y/qQrDW3Xjb1HefbnfU4SaJpOI9C+/ckvCWTObnGfzazvOObt86j7o++Oc/GNzSi+cM9niUtPBmvHfPZYZsHZl1kxnrZ7J/dfcmiZta8yrLo/vx85ut+NAhP483mnsxtc9VPfq7v2t/HV3F48RCedkK2zkj77EHX72zeds9cH07zfnzGyHxB0PWXi2f4zb5fLvOhvejg+2T82+2+1rRbw76xkoRpOv8DWFTLgh7+UBnLeSHxsbwUFhJoi9LVWxUaxQVQofaKXYW0eKkUIBJ4cpjbtWGMR037tDVuu27T6QxGht00nE7HHBt90+30Kw3aojiAOEjoghS5CpXd8udjgDj2ONAAmJYlKQ6Bqx9EHCKBFJ/eyMORUA6zRKr4EkePmTl/RLmFwQpdKp5tRjpcVX4k4if9yfoLAWxfud095b4BTFYECnkv+M0lwbmQrVijLBWR2chQg0IqLwBWaLBntVxb5yReRVAA1eMkSCNorMJV2Ridb/8tDWFeWm9Gs/LcvVvW4beqA9InIIUDL2o5BTlFOHIFmVUh7xZsmbsFV+H7aUCK4yXbKRjBWyT7n15ZUtCjpoisqIJcex4a9qLqhwXViYKM4Jrn9QUt9V2e/l41jjVqrBtplqXlAJxC2ZgMr0uBM/Up4FTK02aWPALV6xD6p26HGvVB5tq+jy8VIZ0KJCCWdFHK5SeeBlPgxdPAlzTPP/vu2Esp+yYgF8dsg0i+IArEHz4ysIcLP2m+kn9PCQtex3Uk1k4eWad8DwhCl8WquAc275ACJzIskcKVsN3gxwIcS75vrJtcYxGSTfNUwPtflEKRuirCOEmp8IdqadhVyRKn2KzAe3V6E6ZU4perNefvXq33l5Op1KsYqbUv+W9njZR0waAWN3iJpavm8qUok9Pljiq/ADwizHZ7ZNntU2dUCrO9FebBcODUDdyrpPfG/Nay09PD89D7Fw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdb+o4EH2/vyJKH1chCZASooKUQlul3wtsW+7LyjgT4pI4YDtA76+/diApUNrtXQkJeTKeOTNzfOwzjtKk7vmcAxMko1rQ7+j/4lbTxajtGo2J6xpNbJ8aaFJ3jIljNZvgNifIqutawHkOAeUCUdHR65bdNCzXsNsj2/Gchldv1By7+VPXnoBxGVq61CxdW6cJ5V6RtqPnjHoZ4oR7FKXAPYG9oX9360lPD5WY9O7ZBmWRkHVjIeaeaeJaCBiSBNdwlppn5p7PWci9IZlSJHIG25wh7+jbvavVqrZq1DI2NeuWZZlW25Q+ISfTE737o9wMYUCjbLPuIZpRglFCfiEF6g5EnIWan0wzRkScfhLaNm1LhTZgjQ1sN+mJbr4nKNB9M9IeSMaRwWNkl8EGEAEDikH7ZxB09JPvTXCzd8QQ5VHGUn6w/jNIQJeQZHMIDV5WVqL7fsQj7eqeAfYCipOckyXcK5rMEQauPTKIyPqWcEm+kGvF+LU1lz9Ssgzwn4zlzNzFKqGbR7rTJ1Pg4v/MbHdemyhPKMmhm+Rj8spaftTo+WTxwK+uH9qvo9tx1Ms6BYRd5w2oatzb9SFZK25tN61Ww8nsKr16GQ8WrenIyUIGz2awRDGZza7dG/RgXyzdxSB69l+sRji6H+bxsxOPZ+1rF9kA6fPNuP2asJectH80ns/jYOKuF6E1Iv2n67lJ5vZr/BhMYIheTtfjp9nPZr1Nsvto/Hhxjls3ph1NB38NRk84vHcD51d/7bfspOnGf//wJxOZIbXu2ess7ftXaRB03mvarWHfWErCMJ+8AhblUtEj6GuXcl5IfC0vykJCIypcvbnSKC6ACr2rdilp8XIpQCT05DA3a8u6vGg4583LU9dptNq9C8tpWK122760fNtt+6UGbVAcQOxlNCIql1LZDX++BohTjwMNgRnLLMcxcP2LiH0kkBbQgTwcGeUwyqSKn4pQRBNrFeZxYk8bfLGMpmyR5wtdu8/EA31gfiSA7Uu3uyfdA8BkTkDpuyI4lwznQvZigZa5SOzaEtUo5PIGYEqEvXrTdUxO0nkCCqmZZmGeQG0ez4vOmHzzXzcQ5oW1aCvmxeH7tLbDb2UbpE9IlANX9ZyDHCUcuYfsspjjRdetg/uqDO/nIVFnTPZUMII3SPY/vVNFcaTiybaqEnblfWjYi2weFlUlC5cEV4Svbmop9FIGuuVYFqi2qOXLZV4MoqUkjsnwplQ62xwCzqVOvY2yGVCzCmF+65qoUB9kruz7+HIR06FAAlJJG61YfuONMASu3giB5Pv6uw+QvZSybwLW4pitl8inhEL85WsDe1j5SfOj/FtlLHwf15FYO3lknfJhIAidqpW6EN4+IQbOZFgiFSxju8GPBTiWfN9YNbnCIiSbJrmAz79oSpo6OsI4y6kI+nph2JXLAqd4m4P37vQhTCHJ2zt2zT+9Y1/ubodSuFKkV77kv50NUtAFg66u8gJLR1/LJ6NMTqc78rwFeEShndOLev30vHVRKLSzUehev9eqGrhXSfeD+aNlp6eH56H7Gw==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_firstuser20140819_1408463600709</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463600709</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B4F689379CE05307991F0A189A</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID2</con:name><con:value>00FE35B56E226B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL2</con:name><con:value>urn:dece:accountid:org:dece:00FE35B56E226B7EE05305991F0ACDC7</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>99c61175-ca6e-4fe9-95b0-5f3d02f2072d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f670f80b-66f5-4521-ab74-f93f00d8ec73</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02003_AccountDelete_FUNC_CS_Deleting_an_account_when_user_is_not_active_P1" searchProperties="true" id="d1f9d79a-7dfc-40cd-8ee4-f82b0cb581fc"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="datasource" name="User_Status" id="a4a596c7-de44-47bb-95d4-cf1f9cd11e58"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">forcedeleted&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">suspended&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">pending&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">other&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked:tou&lt;/con:entry></row></con:configuration></con:dataSource><con:property>Status</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="c9d310c6-db7c-4a9f-92bd-bc74b6b9aa0b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="5428dd0d-4afd-47bb-801f-23d03f0257e4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("UserName",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="08d814d1-4922-4223-ab3b-f622dadac699"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DECE_CS" id="08106bcb-b974-46dc-8367-3aa6dd965ed1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS API with DECE_customersupport" id="d7e8ab09-7302-4161-8ea2-4de35118ddd3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());


def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER2",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID2",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL2",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID2",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL2",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config></con:testStep><con:testStep type="groovy" name="Update User Status" id="1f1f8461-5360-4ba6-9e01-faf0c0d0dec4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def status = context.expand( '${User_Status#Status}' )

myTC.setPropertyValue("Status",status);
myTC.setPropertyValue("USER_OID",tC.getPropertyValue("user_oid1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="a5c85055-1b0f-499a-9749-1dddaaac0948"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL2"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="de60a0d5-fade-419b-a123-50505732dc34"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

def status = context.expand( '${User_Status#Status}' )

		myTC.setPropertyValue("USER_STATUS",status);
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="f1b340a9-fdfe-4a0c-bd04-90f1fc2f13e3"><con:settings/><con:config><dataSourceStep>User_Status</dataSourceStep><targetStep>Establish Test Case Properties</targetStep></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35B47AC4379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_a7ca60a7-cf7e-4b81-850c-1483fd8e802a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_a7ca60a7-cf7e-4b81-850c-1483fd8e802a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CC855337A2E05307991F0A444C:B61CBE16"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B47AC0379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B47AC0379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FE35B48FC26B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B48FC56B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FE35B48FC26B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FE35B48FC26B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B48FC56B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FE35B48FC26B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtU+o6EP5+fkWnfmRKU15LR5hBlLEeVARBj1/uxHQp0TaFJuXFX3+TQisgejl3hhkm283us7tPnuSc4zAoOW3OIRY0Ypp72dT/wXWCawjXDTKpg1F5tS3DriJiWBW7PPFssFEJ65rLeQIu4wIz0dRLyKoYyDasxqNVdaplp1IpolrjRdfGEHMZWroUka6twoBxJ03b1JOYORHmlDsMh8AdQZxh+7bnSE8HZ5j01vkGZZowbk2FmDmmSYoeEAgCUiRRaJ6bez7nHneG1GdYJDFsc3q8qW/3LpfL4rJcjGLfLCGETNQwpY/HqX+mt35lm8Fz2STarDuYRYwSHNAPrEDdgphGntYO/CimYhp+E9oyLaRCG7AiBrEq7Ew3PxOk6E6MtAcy5tjgU2xlwQYwgRgYAW00cJv62WkT3Ox9jDHjkygO+cH67yABW0AQzcAzeFZZhu70iEfa1ToH4riMBAmnC7hTNJlhAlzrxzChqx7lknwe19LxaysufzRjGZC/Gcu5uYtVQjePdOeS+sDF/5nZ7rw2UcY4SKCFGu1nxFDt2aw9tKehXx50Ptpjcl+bo2YKYdd5Ayof93Z9SNacW9tNt/68W33+g1fLht8lrhXcRV7YaTSuiaAv/eHirjMiXLixNaIBD19GLAh/jx+6tHNzV/f71y/t3luh8BR0w6T/9Cvx333cE2A//UlWhbcOGz6It4+ZWwj7c/RcpuzxsYArQsDNqB+UVrfxsLKU/ZqvP6gfjC+e7JoF44ULhZJv/rp4G4c36DoYjBblgt+zWC9qfta0W8O+MZOEYfL6BkRkS0UP91Lrynlh8bO8KAv1jEnq6syURnEBTOgttUtJi5NIAaKeI4e5WSPUvSpXLyp2t1OqXdTbV6haRtVGw+qi9tVV+SLToA2KA4idiE2oyqVUdsOfnwGS0OHAPIiNRZSQKXD9h4iXWGDNZQN5OCLG4TGSKs7D2uuai6D87sH0zRcU7Pd12PjQtbtI3LP7uD0REO8rt72n3AMgdEZBybviN5cE50K2Yo4XiQis4gIXGSTyAoiVBjulil01OQ1nASigZhh5SQDF2XSWNsbkm/+SgQlPrWlXCU/P3relHX7LuiB9PKocuKrnAuQk4cg1VM6KOV50CR1cV1n4duJRdcRkS0VMyQbJ/qdPpiiK5DTZVpXBzr0PDXuRzcOi8mTegpKc7/lFLXVeqkArG8scF+fFZLFI0kHUlcLFMrwphc4yh0ASKVPrx+gdmJmHME+6JXLUB5lz+z6+REzZUGABoaSNli5PeCIMgasngivpvjr1/bGXUvZNwEocs3UC+ZJQiH98bBCHKD9p7su/ZRR7n+M6Emsnj6xTvgsEZb5aqftg/Q0xSCTDUilgUbwb/FiAY8n3jXmTcyxCsuk1EfD9F00pU1PHhEQJE+6lnhp21TLFKdYzcD6dvoRJFXl7xa74t1fs821vKHUrxHruS//b2aApXQjo6iZPsTT1lXwxyuTM31HnLcBjAl1vd1C53tgIdH0j0I3OFcobuFdJ64v5q2Wnp4fnofUv</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0TpYxVy4xoBEoWWzW5pKdAbL0euMxC3iQ2xA3R//bEDSYHSnu4jISFPxjNrZpaXXecoCh2vxTnEgjCq9ToN/R8LW8VKqVI0sFWeGkXHqRjVUq1kwNR+qdaQhcvlqq71OE+gR7lAVDR0x7KLhlU17NrYLnkl1ys6hWK5ONG1B4i5DC1dCpauraOQci9N29CTmHoMccI9iiLgnsDeqNW/9qSnhzJMerO+QZkmjJuBEHPPNHHBBwxhiAuYRWbd3POp+9wbkRlFIolhm9PnDX27d7VaFVZugcUz07Esy7RqpvTxOZmd6s2TbDP4PTplm3UbUUYJRiH5gxSoPoiA+VornLGYiCD6IrRt2pYKbcAaG9gu0lPd/EiQovthpD2QMUcGD5CdBRvCFGKgGLT7Ya+hn/5sgpu94xhRPmVxxA/WfwcJ6BJCNgff4FllGbqfRzzSrmYdsNejOEw4WcKNoskcYeDaIIYpWV8TLsnncy0dv7bm8kcylgH+m7HUzV2sErp5pDsdMgMu/s/Mdue1ifKAwgSadufpjA2e+/27SfnletZNkldx86tVPjffGimEXecNqHzc2/UhWXNubTdF1iMfd0e363Z4+0JNYV1ehA9v75PpY7D2z+GKy2bIHxvNBxS/3rH3VYRcZ2iXFmeLiXk/eOq59mQZsM7ZIDjpsmc2ow7udofjyePTb/zr0uo7iwhdQfcm9h8D9uR2r9yH0aXE3PWXr6WR+/bQqt5XAESt2k5mb/EMJsv+aopOZr/9yD57bvW7d8tu+XZ87bQaHzXt1rBvzCRhlLy8AhbZUtGj19Eu5byQ+F5elIX4xjR19eZKo7gAKvSm2qWkxUukABHfk8PcrC3ZN7d0Xqxetkvl80rrwiq5VqlWsy+t1sWFe55p0AbFAcQ2o1OicimV3fDne4A48jhQH2JjyRIcANe/idhBAmk9OpSHg1EOYyZVfO2DCN9WSRjzwH4NqoG9fgmLC+Lo2g0Tt/Q2bk0FxPvSXd2T7iFgMieg9F0RnEuGcyF7sUDLRIR2YYkKFBJ5A8RKhD2nWC2ZnETzEBRSM2J+EkJhHszTzph88+8YCPPUOrwYpwfvy7oOv2UtkD4+UQ5c1XIOcoxw5A5ys0K+LNixdwvOwrcSn6jzJfspYoI3SPY/fdBE8SPniKwog5x7Hhr2opqHBeWJ/CXBOdHzG1oKvDz+zWwcC1RYFJLlMkkHUFHSFsvwplQ42xwBTqQ+vY/ZG1AzD2H+6HrIUR9kzu37+BIR0JFAAiJJFy1d/uBtMAKu3gY9yfP1Tx8eeyll3wSsxTFbO5RPCIX421cG9rDyk+aB/Fux2P8Y15FYO3lknfJBIAidqZW6CN6/IAVmMiyRysXi3eDHAhxLvm/Mm5xjEZJNL4mAr79oSpIaOsKYJVT0Onpq2JXJFKd4n4P34fQpTCrF27t1zb+8W5/61yMpWBHSc1/y384GSemCQVdXeIqloa/lU1Emp7MdWd4CPKbMlVbbdSu1jTJXNspca19YeQP3Kml+Mn+27PT08Dw0/wU=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZtU+o6EP5+fkWnfmRKU15LR5hBlLEeVARBj1/uxHQp0TaFJuXFX3+TQisgejl3hhkm283us7tPnuSc4zAoOW3OIRY0Ypp72dT/wXWCawjXDTKpg1F5tS3DriJiWBW7PPFssFEJ65rLeQIu4wIz0dRLyKoYyDasxqNVdaplp1IpolrjRdfGEHMZWroUka6twoBxJ03b1JOYORHmlDsMh8AdQZxh+7bnSE8HZ5j01vkGZZowbk2FmDmmSYoeEAgCUiRRaJ6bez7nHneG1GdYJDFsc3q8qW/3LpfL4rJcjGLfLCGETNQwpY/HqX+mt35lm8Fz2STarDuYRYwSHNAPrEDdgphGntYO/CimYhp+E9oyLaRCG7AiBrEq7Ew3PxOk6E6MtAcy5tjgU2xlwQYwgRgYAW00cJv62WkT3Ox9jDHjkygO+cH67yABW0AQzcAzeFZZhu70iEfa1ToH4riMBAmnC7hTNJlhAlzrxzChqx7lknwe19LxaysufzRjGZC/Gcu5uYtVQjePdOeS+sDF/5nZ7rw2UcY4SKCFGu1nxFDt2aw9tKehXx50Ptpjcl+bo2YKYdd5Ayof93Z9SNacW9tNt/68W33+g1fLht8lrhXcRV7YaTSuiaAv/eHirjMiXLixNaIBD19GLAh/jx+6tHNzV/f71y/t3luh8BR0w6T/9Cvx333cE2A//UlWhbcOGz6It4+ZWwj7c/RcpuzxsYArQsDNqB+UVrfxsLKU/ZqvP6gfjC+e7JoF44ULhZJv/rp4G4c36DoYjBblgt+zWC9qfta0W8O+MZOEYfL6BkRkS0UP91Lrynlh8bO8KAv1jEnq6syURnEBTOgttUtJi5NIAaKeI4e5WSPUvSpXLyp2t1OqXdTbV6haRtVGw+qi9tVV+SLToA2KA4idiE2oyqVUdsOfnwGS0OHAPIiNRZSQKXD9h4iXWGDNZQN5OCLG4TGSKs7D2uuai6D87sH0zRcU7Pd12PjQtbtI3LP7uD0REO8rt72n3AMgdEZBybviN5cE50K2Yo4XiQis4gIXGSTyAoiVBjulil01OQ1nASigZhh5SQDF2XSWNsbkm/+SgQlPrWlXCU/P3relHX7LuiB9PKocuKrnAuQk4cg1VM6KOV50CR1cV1n4duJRdcRkS0VMyQbJ/qdPpiiK5DTZVpXBzr0PDXuRzcOi8mTegpKc7/lFLXVeqkArG8scF+fFZLFI0kHUlcLFMrwphc4yh0ASKVPrx+gdmJmHME+6JXLUB5lz+z6+REzZUGABoaSNli5PeCIMgasngivpvjr1/bGXUvZNwEocs3UC+ZJQiH98bBCHKD9p7su/ZRR7n+M6Emsnj6xTvgsEZb5aqftg/Q0xSCTDUilgUbwb/FiAY8n3jXmTcyxCsuk1EfD9F00pU1PHhEQJE+6lnhp21TLFKdYzcD6dvoRJFXl7xa74t1fs821vKHUrxHruS//b2aApXQjo6iZPsTT1lXwxyuTM31HnLcBjAl1vd1C53tgIdH0j0I3OFcobuFdJ64v5q2Wnp4fnofUv</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_firstuser20140819_1408463621872</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463621872</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B48FC66B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID2</con:name><con:value>00FE35B47AC0379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL2</con:name><con:value>urn:dece:accountid:org:dece:00FE35B47AC0379AE05307991F0A9CE0</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>99c61175-ca6e-4fe9-95b0-5f3d02f2072d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9c263e60-96bd-4c9c-9c64-ad6f469cfc89</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ce1f47c6-8e3d-4c44-9320-d57e0cc4e097</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a4a596c7-de44-47bb-95d4-cf1f9cd11e58</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d7e8ab09-7302-4161-8ea2-4de35118ddd3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1f1f8461-5360-4ba6-9e01-faf0c0d0dec4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02004_AccountDelete_FUNC_CS_Deleting_an_account_when_user_is_Basic_P1" searchProperties="true" id="8dced46e-5985-4b7c-adf9-5ddcf3c24528"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="d3c5f2ae-2d7e-4213-9fa8-9a32229c0e54"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="7cd6c166-2e67-4380-909d-c1fcdb7fa2ce"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )


log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("UserName",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult BAU" id="edd95672-ff37-4527-a7a5-ab34c26b1b16"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","basic");
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));


tC.setPropertyValue("LegalGuardian","");

//required for Child user Create

//tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID_FAU1"));
//tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call Adult BAU Create" id="739c8611-5f3c-49b6-901e-29848db9893d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )

log.info country;

def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");


def myTS = tP.getTestSuiteByName("User_Create_API")



myTC.setPropertyValue("Country",country);
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="83a8887f-9355-4af1-acf4-da31f0e822ad"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DECE_CS" id="f05719d1-e992-49ce-b92f-5b0306bebfeb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS API with DECE_customersupport" id="78bd9501-1745-4aa7-92e6-101b1476962e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());


def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER3",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID2",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL2",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID3",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL3",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="1a5a30ca-0b70-46b8-9453-98cd9441453c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL2"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="a96a41dd-bfb4-4767-9812-126e1e13f761"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CEC8376B94E05305991F0A1B73</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_02bcf1dc-03f2-498c-8b56-7be1fcabce57</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_02bcf1dc-03f2-498c-8b56-7be1fcabce57</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35B56E5C6B7EE05305991F0ACDC7:4B1A8A95"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CEC8336B94E05305991F0A1B73</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CEC8336B94E05305991F0A1B73</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FE35CC6E9E6B80E05305991F0A0CC0</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35CC6EA16B80E05305991F0A0CC0</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FE35B513146B7CE05305991F0A6AA3</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">00FE35CC6E9E6B80E05305991F0A0CC0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FE35CC6E9E6B80E05305991F0A0CC0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35CC6EA16B80E05305991F0A0CC0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FE35B513146B7CE05305991F0A6AA3</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:00FE35CC6E9E6B80E05305991F0A0CC0</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EH2fr3B5HlPGNy7GFajilqxnIJkEJsnsy5aQ26DEyCDJYPL1KxnsAEOyma2iilK71X26++hIlxwtYsfvcA5MkIRqQb+l/2M5UxzZITYsN3KMatPDhjet1Y3GFOwIoymGWkPXAs5TCCgXiIqW7lh21bA8w25O7Jpfc/2qV/Ec729dewDGZWjpUrF0LVvElPt52paeMuoniBPuU7QA7gvsjzujoS89fVRg0tuXO5R5QtaeC7H0TRNXQsAQx7iCk4V5aR75XIbcH5MZRSJlsM8Z8pa+37vZbCobt5KwmelYlmVaTVP6hJzMvurtL8VmCAMaJbt1D9GEEoxi8ooUqBGIeRJqnXiWMCLmi3dC26ZtqdAGZNjAdpV+1c23BDm6T0Y6Ask4Mvgc2UWwe4iAAcWg/bwPWvrXz01wt3fCEOVRwhb8ZP1nkICuIU6WEBq8qKxA9/mIZ9rVvgTsBxTHKSdruFE0WSIMXPvBICLZkHBJvpBr+fi1jMsfKVgG+E/GcmkeYpXQzTPd6ZMZcPF/ZnY4r12UBxSn0H5+ufa8FN9dXWzsx6vG/PZhFPZQI8bOoJVDOHTegSrHvV+fkrXk1n7TY+a5j93HLBu49lVEuu5fd9veK+sPJ+647oya6bQTTJio3TSuRyibf9+Qm039PuJbe+ZcN8B+2N59az4NCTQfX79s66+1zO4Pp+GjF9wOTfrUeZnTfje7Xt12L2bfVs/BvO/0Ltbz19EdGfetn9v+cDztzp3a66CRLrNf2+Dl4fn7bZiyL84vuIBJw3NZs/70YHegu2m91XRYw7GxkIRxOn0GLIqlokfQ167kvJD4WF6UhYRGlLv6S6VRXAAVelvtUtLip1KASOjLYe7WlnU1cGu9Xn3QHNS7njWwaq5VazbtK6tj9XpWoUE7FCcQewmNiMqlVHbHn48B4oXPgYbAjHWS4jlw/YOIfSSQFtB7eTgSymGSSBVP5FGfriPurqK6PWVJyKpp/XllO7p2k4hbess6kQB2LN3ekXTfAyZLAkrfFcG5ZDgXshcrtE5FbFfWqEIhlTcAUyLsO1WvZnKyWMagkJqLJExjqCzny7wzJt/9OwbCPLfmbcU8P3zv1nb6rWiD9AmJcuCqni7IUcKZe8gtijlftGOd3FdF+E4aEnXGZE8FI3iH5PjTG1UUR0qe7KsqYJfep4ajyOZpUWWycE1wSfjyppZCL2WgXYxlhSqrSrpep/kgGkrimAxvSqWzzTHgVOrUdpK8ADXLEOanrokS9Unm0n6MLxVzOhZIwELSRsuXn3gjjIGrN0Ig+Z599gFylFL2TUAmztl6sXxKKMQfvjawj5WfNP+Qf5uEhW/jOhPrII+sUz4MBKEztVIXwvYdYuBEhiVSwRJ2GPxcgHPJj41lk0ssQrJpmgp4/4umpKmlI4yTlIqgr+eGQ7nMcYrtEvw3p9/C5JK8v2Mz/u4d+zQajqVwLZBe+pL/djZIThcMurrKcywtPZNPRpmczg7keQ/wjEIPep7r1rvN6qFC292GWzbwqJL2b+bfLQc9PT0P7X8B</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGljygk4ZpEBYlbd9mFXgi9vhwZZyBuEyfEDpf++mOHJgVKe7pHQkKejGe+mfn82ecMhUHF6TAGCScRVYb9lvqP51m2ZdfnGkIVT6uZtZlmN5CteahetUwMljkDVRkylsKQMo4ob6kVw6xphqWZ9tSsO/WqU6uXm4b5pCp3kDARWriUDVXZhAFlTpa2paYJdSLECHMoCoE5HDtuZzxyhKeDckxq+3yHMkuYtH3OY0fXcdkDDEGAyzgK9XP9wOfcY45LFhTxNIG3nB5rqW971+t1eV0tR8lCrxiGoRu2Lnw8RhZnavtHvhm8IZ1Hu3UP0YgSjALyiiSoMXA/8pROsIgSwv3wk9CmbhoytAYbrGGzRs9U/T1Bhu6bkQ5AJgxpzEdmHmwCc0iAYlBuJ8OWeva9Ce72ThNE2TxKQna0/jtIQFcQRDF4Gssry9F9P+KJdrXPATtDioOUkRVcSprECANTrhOYk82IMEE+jynZ+JUNEz+Sswzw34zlXN/HKqDrJ7rTJwtg/P/MbH9euyh3KEihvR7563t3ZEEiJtioNF6ua7/R4OHx0TJaGYR95x2oYtxv62OyFtx629RfPNrjRmlJHtxSejPddPUVQw/3SW9882zDUym8Ka0unvQAW+vf9fjWvjQX4fpnoz8ZhX9+eq9xUJpha7iYG5vZ8kfTvLwbwf0I+X18ZV8Hvt+Y37iTzfym5P4ZX99ekJd12vzVLLnJr5dgaxvTwQ0MXkvRZNx9XTefml6CYrLqXfq+/YM8kNsrDuN7N9wG48dOFw1b7zXt13BozCXBTWfPgHm+lPQY9pULMS/Ev5YXaSGeNs9cnVhqFONAudqWu6S0OKkQIOI5Ypi7tWFcDKr1Xq8x6JiNrmUMjHrVqNu2eWF0jF7PyDVoh+IIYi+icyJzSZXd8edrgDh0GFAPEm0VpdgHpn4RsY84UoZ0Ig5HRBlMI6HiZhRuPV7dLnDleW5WZuY69sPXpelHqnIZ8St6lXTmHJJD7bYOtHsCmMQEpMBLhjNBccZFM5ZolfLALK9QmUIqroBEqrBTqVl1nZEwDkBC1cPISwMox36ctUZnu/+KhjDLrJPBNDt5nxZ2/C3vgfDxiHRgspYuiDnCiUuomhfyacEVc7/gPHwn9Yg8YKKhPCF4h+Tw0ztPJEEKkoiKcsiF57HhIKp+XFCRyFsRXDC9uKKFwovz387HsUTlZTldrdJsAE2pbYkIrwuJM3UXcCoEajuNXoDqRQj9W/dDgfooc2E/xJdyn7occQgFXZRs+Y3HgQtMPg6Gguib7748DlKKvnHY8FO2XiDeEBLxl88M7GDpJ8zX4m8dJd77uE7E2ssj6hQvAk7oQq7kTbD9hBQ4EmGJkK4o2Q9+KsCp5IfGoskFFi7YNEs5fP5FkZrUUhHGUUr5sK9mhn2dzHDybQzOu9OHMJkWv12uG/bp5fowHrlCsUKkFr7kv501ktEFi6el8M+wtNSNeCuK5HSxp8tvAE9I86BnVRuNrl3bl2az26wWDTyopP3B/NGy19Pj89D+Fw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj1XIjQQSFSRuXXF62S7Qnt2+HLnOJLhNnBA7NOXXHzs0KVDa0z0SEvJkPPPNzOfPPmMoiS1/wBjknKRUmY576j9GGIS25QZaYLXbWtsFS+s62NFC026jwO4YXcNTlSljBUwp44jynmoZZlszuprpLUzHd2y/3Wk5jnWvKneQMxFauLQMVSmTmDK/SttTi5z6KWKE+RQlwHyO/fng6tIXnj6qMan9sy3KKmHeX3Ke+bqOWwFgiGPcwmmin+l7PmcB8+ckoogXObzmDFhPfd37/PzcerZbaR7plmEYuuHpwidgJPqm9k/qzRBMaZhu1yNEU0owiskGSVBXwJdpoAziKM0JXyYfhDZ105ChNSixhs02/abqbwkqdF+MtAcyZ0hjS2TWwWYQQg4Ug3I7m/bUb1+b4HbvIkeUhWmesIP1n0ECuoY4zSDQWF1Zje7rEY+0q38G2J9SHBeMrOFa0iRDGJhyk0NIykvCBPkCplTjV0omfqRmGeA/GcuZvotVQNePdGdMImD8/8xsd17bKHcoLqA/GJ9ydmFerYKf5WmI5gxH62tGbrunRq+CsOu8BdWM+3V9SNaGW6+bVt7dTbnkePFsZ+tf1vdujpPbqMOH509lmH8PHydXrmeDhddjwjdRoJ+jmalH986CXQSz1dI0V7f5wHjKN9PxyUWxKV/G3trKF4ubheE+pN4m+h6bE/r3RXB5Tzc3P6LTp5iwW1i53fmjeZn8PvWuLqJNlqanj+1o9ruY/0Tu6GmDTl4m0PlrZHVcY+iygt6FJeu91bRbw76xloR58fAImNdLSY/pWDkX80L8c3mRFhJoYeXqZ1KjGAfK1b7cJaXFL4QAkcAXw9yuDeN8YjtDx7TNtjvsjCaGYxuO55nnxsAdDOxag7YoDiCOUhoSmUuq7JY/nwPEic+ABpBr67TAS2DqJxHHiCNlSmficKSUwSIVKm46j6X56HmrzH1YrTIvdDZW1ysgU5XrlP+gP/JByCHfl+7unnTPAJOMgNR3SXAmGM646MUKrQsem601alEoxA2QSxH2rXbX0RlJshgkUj1JgyKGVrbMqs7obPtvaQizyjqbLKqD92Fdh9/qFgifgEgHJmsZghgjHLmD7LqQDwu2zN2C6/CDIiDyfIl+8pzgLZL9T280kfxoOCIqqiE3noeGvaj6YUFNomBNcEP05oYWAi+Of78exwq1Vq1ivS6qAXSktOUivC4UztTngAuhTy+L9Amo3oTQv3Q9NKgPMjf2fXwFX9I5RxwSQRelWn7hbTAHJt8GU8Hz8qsPj72Uom8cSn7MNorFE0Ii/vSVgX0s/YT5Rvw9p3nwNq4jsXbyiDrFg4ATGsmVvAhePiAFTkVYIpQrzXeDHwtwLPm+sWlyg4ULNj0UHD7+okhJ6qkI47SgfDpWK8OuTFY4+UsG/pvTuzCVFL/erSX78G79dXU5F4KVILXxJf/trJGKLhhUeYVXWHpqKZ6KIjmNdmT5FeB7ZR5NRl3bdYdee1eZzWGnUeb9SvrvzO8tOz09PA/9fwE=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVbbcuI4EH2fr3B5HlPGNy7GFajilqxnIJkEJsnsy5aQ26DEyCDJYPL1KxnsAEOyma2iilK71X26++hIlxwtYsfvcA5MkIRqQb+l/2M5UxzZITYsN3KMatPDhjet1Y3GFOwIoymGWkPXAs5TCCgXiIqW7lh21bA8w25O7Jpfc/2qV/Ec729dewDGZWjpUrF0LVvElPt52paeMuoniBPuU7QA7gvsjzujoS89fVRg0tuXO5R5QtaeC7H0TRNXQsAQx7iCk4V5aR75XIbcH5MZRSJlsM8Z8pa+37vZbCobt5KwmelYlmVaTVP6hJzMvurtL8VmCAMaJbt1D9GEEoxi8ooUqBGIeRJqnXiWMCLmi3dC26ZtqdAGZNjAdpV+1c23BDm6T0Y6Ask4Mvgc2UWwe4iAAcWg/bwPWvrXz01wt3fCEOVRwhb8ZP1nkICuIU6WEBq8qKxA9/mIZ9rVvgTsBxTHKSdruFE0WSIMXPvBICLZkHBJvpBr+fi1jMsfKVgG+E/GcmkeYpXQzTPd6ZMZcPF/ZnY4r12UBxSn0H5+ufa8FN9dXWzsx6vG/PZhFPZQI8bOoJVDOHTegSrHvV+fkrXk1n7TY+a5j93HLBu49lVEuu5fd9veK+sPJ+647oya6bQTTJio3TSuRyibf9+Qm039PuJbe+ZcN8B+2N59az4NCTQfX79s66+1zO4Pp+GjF9wOTfrUeZnTfje7Xt12L2bfVs/BvO/0Ltbz19EdGfetn9v+cDztzp3a66CRLrNf2+Dl4fn7bZiyL84vuIBJw3NZs/70YHegu2m91XRYw7GxkIRxOn0GLIqlokfQ167kvJD4WF6UhYRGlLv6S6VRXAAVelvtUtLip1KASOjLYe7WlnU1cGu9Xn3QHNS7njWwaq5VazbtK6tj9XpWoUE7FCcQewmNiMqlVHbHn48B4oXPgYbAjHWS4jlw/YOIfSSQFtB7eTgSymGSSBVP5FGfriPurqK6PWVJyKpp/XllO7p2k4hbess6kQB2LN3ekXTfAyZLAkrfFcG5ZDgXshcrtE5FbFfWqEIhlTcAUyLsO1WvZnKyWMagkJqLJExjqCzny7wzJt/9OwbCPLfmbcU8P3zv1nb6rWiD9AmJcuCqni7IUcKZe8gtijlftGOd3FdF+E4aEnXGZE8FI3iH5PjTG1UUR0qe7KsqYJfep4ajyOZpUWWycE1wSfjyppZCL2WgXYxlhSqrSrpep/kgGkrimAxvSqWzzTHgVOrUdpK8ADXLEOanrokS9Unm0n6MLxVzOhZIwELSRsuXn3gjjIGrN0Ig+Z599gFylFL2TUAmztl6sXxKKMQfvjawj5WfNP+Qf5uEhW/jOhPrII+sUz4MBKEztVIXwvYdYuBEhiVSwRJ2GPxcgHPJj41lk0ssQrJpmgp4/4umpKmlI4yTlIqgr+eGQ7nMcYrtEvw3p9/C5JK8v2Mz/u4d+zQajqVwLZBe+pL/djZIThcMurrKcywtPZNPRpmczg7keQ/wjEIPep7r1rvN6qFC292GWzbwqJL2b+bfLQc9PT0P7X8B</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_firstuser20140819_1408463625127</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463625127</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20140819_1408463626898</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35CC6EA26B80E05305991F0A0CC0</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>00FE35B513156B7CE05305991F0A6AA3</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID2</con:name><con:value>00FE35CEC8336B94E05305991F0A1B73</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL2</con:name><con:value>urn:dece:accountid:org:dece:00FE35CEC8336B94E05305991F0A1B73</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b44627d5-7732-472b-b74e-aeac81a3f1ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>78bd9501-1745-4aa7-92e6-101b1476962e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02005_AccountDelete_FUNC_CS_Deleting_an_account_when_user_is_Controlled_P1" searchProperties="true" id="8c54c7b9-364d-4589-874d-168432253eb6"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="05473610-6eb9-4e99-9011-56d1d1aed87b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="cedfcf08-2215-4242-b7cd-72ac6a540578"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("UserName",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for Adult SAU" id="9a2cb265-6948-4ab8-80f5-4ff66bdfea6a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");
tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","standard");
tC.setPropertyValue("MeetsAgeOfMajority","false");

tC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));


tC.setPropertyValue("LegalGuardian","");

//required for Child user Create

//tC.setPropertyValue("CLG_NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID_FAU1"));
//tC.setPropertyValue("LegalGuardian","&lt;LegalGuardian>urn:dece:userid:org:dece:\${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian>");



</script></con:config></con:testStep><con:testStep type="groovy" name="Call Adult SAU Create" id="68d6fe9d-f5b8-41fa-853b-a77eabd8b77a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )

log.info country;

def myTC = tP.getTestSuiteByName("User_Create_API").getTestCaseByName("User_Create_STS_Policies");


def myTS = tP.getTestSuiteByName("User_Create_API")


myTC.setPropertyValue("Country",country);
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;


tC.setPropertyValue("SAML_USER2",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("NODE_USER_ID2",myTC.getPropertyValue("NODE_USER_ID"));
tC.setPropertyValue("NODE_USER_ID_FULL2",myTC.getPropertyValue("NODE_USER_ID_FULL"));
tC.setPropertyValue("UserName2",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid2",myTC.getPropertyValue("user_oid"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="0aeaad44-c7da-4490-865f-fd684c9af5a2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DECE_CS" id="59dc7201-8655-4b3c-8729-3acb51a063bb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS API with DECE_customersupport" id="8c11e7ca-2b56-4a03-aa40-eeee7485d570"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());


def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER3",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID2",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL2",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID3",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL3",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="228b70bb-fbff-4fac-a33c-2d3256afbf5d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER3"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL2"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="1370f520-6408-4c53-8cad-40ad940fa2f1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35BEA2FD6B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_081cd42e-4407-4f0a-a396-7120d10a006b</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_081cd42e-4407-4f0a-a396-7120d10a006b</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CE62D237A4E05307991F0A2173:D3220E8E"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35BEA2F96B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35BEA2F96B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FE35C6FA526B92E05305991F0A81AF</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35C6FA556B92E05305991F0A81AF</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FE35CCBDA037A6E05307991F0A9C25</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">00FE35C6FA526B92E05305991F0A81AF</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FE35C6FA526B92E05305991F0A81AF</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35C6FA556B92E05305991F0A81AF</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FE35CCBDA037A6E05307991F0A9C25</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:00FE35C6FA526B92E05305991F0A81AF</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>standard</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdb+o4EH2/vyLKfaxCnEAKRAUpfC2525Z7Ce1t+7IyjgPuBjuNnQD99WsHkgKl3e5KSMiT8cyZmeNjX3G4im3X4xyngjCq+YOO/hdoWShs2NhoNEDTaEQAGrDevjSalg1CC0AALue65nOeYZ9yAano6DawGgZoGVZ7ZjmuU3edRs0B9Sddu8cpl6GlSw3o2mYVU+4WaTt6llKXQU64S+EKc1cgN/Burl3p6cISk9692qEsEqbdpRCJa5qoFmKE4xjVEFuZV+aRz1XI3YAsKBRZivc5Q97R93vX63VtXa+xdGHaAAATtE3pE3Ky+K53v5WbcejTiO3WfUgZJQjG5BUqUDdYLFmoefGCpUQsVx+EtkwLqNAG3iADWQ36XTffEhTovhjpCGTKocGX0CqDTXGEU0wR1u6mfkf//rUJ7vbOUkh5xNIVP1n/N0iY5jhmCQ4NXlZWovt6xDPt6l5h5PoUxRknOb5VNEkgwlz7meKIbK4Jl+QLuVaMX9tw+SMlyzD6L2O5Mg+xSujmme4MyAJz8X9mdjivXZR7GGe4i/KHACYXdw/95w0IouHMD5rbW8/6IVqdAsKh8w5UNe79+pSsFbf2mx7uvXAbpa1wO5g8jx9e7x+fMjTNx4/NWdS8wEmdiPB3vlkO8vHdxATJML4b0EdzDKe3ZPQwYuYvlLCbp+Bx4iTfbnqj+e/67+A6yF6mvcf+fLb9cxb6P5684a9x+vp8x3umw3/+eLl5fplfW0O+GiWzceTUL8NlAvoX4wnIJ3M8CvzB9bc/nPbF43byFPS3zez+6TUg685bTYc1HBtLSQiy+TNGolwqevgDbSTnBcXn8qIsJDSiwtVNlEZxganQu2qXkhY3kwJEQlcOc7cGYDSsO/3LkefYl722PQROHTjttjUCXsvyRqUG7VCcQOwzGhGVS6nsjj+fA0Qrl2Ma4tTIWYaWmOufRBxAATWfTuXhYJTjGZMqbkXRqpXTTUqb2zVbxDmzmZ3N41DXbpmY0EnqRQKnx9LdOpLuKUYkIVjpuyI4lwznQvbiBeaZiK1aDmsUZ/IGSJUIu3aj5ZicrJIYK6TmioVZjGvJMik6Y/Ldv21AxAtr0VbEi8P3YW2n38o2SJ+QKAeu6ulhOUp85h5qlMWcL9oGJ/dVGd7LQqLOmOypSAnaITn+9EYVxZGKJ/uqStiV96nhKLJ5WlSVLMwJqghf3dRS6KUMdMuxvMDaSy3L86wYRFNJXCrDm1LpLDPAKJM6tZ2xvzE1qxDml66JCvVJ5sp+jC8TSxoIKPBK0kYrll94IwSYqzeCL/m++eoD5Cil7JvAG3HO1o/lU0Ih/vS1gVyk/KT5p/xbszR8G9eZWAd5ZJ3yYSAIXaiVuhC2HxADMRmWSAVj6WHwcwHOJT82Vk2usAjJpnkm8MdfNCVNHR0ixDIq/IFeGA7lssAptgl235zehSkkeX/HbviHd+zDzXUghWsF9cqX/LuzQQq6IKyrq7zA0tE38skok9PFgTzvAb5X6N7Qs0fty16rcajQI6/nVA08qqT7zvzectDT0/PQ/Qc=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0TpYxVygXCJClIKTZveC23VfV6OjGOIN4kdYieBfv22Q5MCpT3dR0JCnoxn1swsL/uUgTiyHJcxlHJMieKP+uq/XcvuTkEAtU63OdVaRqep9QC0tKYFTNsGZqs9NVXFZyxDPmEcEN5XLcNsaUZXM3tPpu3YTcc2Gr12+x9VeUEpE6GFS8NQlVUcEeaUaftqlhKHAoaZQ0CMmMOhM3Fvbxzh6YAKkzo43aAsE6aDkPPE0XXYCBBEUQQbkMb6qb7jcxowZ4LnBPAsRe85A9ZX3/cWRdEomg2aznXLMAzd6OnCJ2B4fqwOjqrNKPDJjG7WQ0AowRBE+A1IULeIhzRQ3GhOU8zD+IvQpm4aMrSGVlCDZoscq/pHghLdDyPtgEwZ0FgIzCrYGM1QighEyvPY76vHP5vgZu9TCgib0TRme+u/g4RIjiKaoEBjVWUVup9HPNCuwSmCjk9glDGcoztJkwRAxJSHFM3w6gYzQb6AKeX4lRUTP1yxDMG/Gcupvo1VQNcPdGeE54jx/zOz7XltoryAKEOD4OSOmU0Pnrvr2WvxttYvCr9oPQA4gv0SwrbzBlQ97vf1Pllrbr1vyk6A/za9aN6OfDhuTx6b5zdBES9eb+PLk8XZ9GRoeZ2X69Xzo1cU7tXydrKY302e8UOE73teGD+//XrMV6Ooje7aV0fuVTqb+s8XnavlSzgZPq9PlpMxuUIe9lNw2QmpuVhfZkX8C3vzO6TrKMSx/YpJooPi5pq2pquELPNW+xGmr0fz4jpeItMm8zYNr2iax4v+R03bNewaK0mYZNPfCPJqKenhjxRPzAvw7+VFWnCgzUpXJ5EaxTgiXB3IXVJanEwIEA4cMczN2jC886Y9bHuubbfPeta5YTcNu9czPcPtmq5XadAGxR7EISUzLHNJld3w53uAMHYYIgFKtZxmMERM/SbiCHCg+GQsDgclDD1RoeK/4TKZt3IKwjwwg06Y9dKEwkXPUpU7yu/JferOOEp3pbu7I91jBHGCkdR3SXAmGM646MUS5BmPzEYOGgRl4gZIpQg7Vqtr6wzHSYQkUj2mQRahRhImZWd0tvm3NABZaR2fP5UH78u69r9VLRA+AZYOTNZyhsQY0YE7qFUV8mXBlrldcBXezQIsz5foJ08x3CDZ/fRBE8mPmiOiogpy7blv2Imq7xdUJwpyDGui1ze0EHhx/AfVOJagsWxkeZ6VA+hIaUtFeF0onKlPEMyEPq2f6AIRvQ6h/+h6qFHvZa7tu/gyHpIJBxzFgi5KufzB22CCmHwb+ILnq58+PHZSir5xtOKHbMNIPCEk4m9fGdCB0k+YH8RfQdPgY1wHYm3lEXWKBwHHZC5X8iJYf0EKSEVYLJSLptvBDwU4lHzXWDe5xsIFm6YZR19/UaQk9VUAIc0I90dqadiWyRInXyfI+XD6FKaU4ve7dcW+vFtfb28mQrBioNa++L+dNVzSBSJVXuEllr66Ek9FkZzMt2T5HeBnZT47dy1v2D7rtraV2XPP7LqBO5UMPpk/W7Z6un8eBn8A</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EH3PV7icx5TxDQdwBarMLUuGTBJgmE1etoTcGE1s2Vgyl/n6lUzsACFZZquoMmq3u093Hx3phqEotFyPMUg5iaky6DbVf65RFeZ1x9Ac8U+rOlZdm/mOrTlVZIHdgFodZqoyYCyDAWUcUd5ULcOsakZdMxsT03EdW/wqZsN6UZUppEyEFi4VQ1U2UUiZm6dtqllK3RgxwlyKImAux+7Yux+6wtNFBSa1dbNDmSdMWwvOE1fXccUHDGGIKziO9Bv9wOfGZ+6YBBTxLIW3nD5rqm/frtfrytquxGmgW4Zh6EZDFz4+I8Gl2rooPgZ/QOfxbt1BNKYEo5D8RhLUPfBF7CteGMQp4Yvok9CmbhoytAYbrGGzSi9V/T1Bju7MSAcgU4Y0tkBmEWwEc0iBYlB+jAZN9fK8Ce6+naSIsnmcRuxo/WeQgK4gjBPwNVZUVqA7P+KJdrVuALsDisOMkRV8lzRJEAamPKYwJ5shYYJ8PlPy8SsbJn6kYBngPxnLjb6PVUDXT3SnSwJg/P/MbH9euyhTFGbQupqOttlm7o2GHdNj3zZk9jrGIX7o9Z6bOYR95x2octxv62Oyltx6+yiYBrOr4XO0tJe3yW3G77pT/0d6+7TotH1m9pLa423tOXz17OCbtZxG+q/46i/Ao9fa05BeP/RpQx9iitrV2kuyuphdOXOWVc2fHlrbk+E9e5w0DGJNjNdVdUb73Nze/py/GM9Pz23skTCzX/y27W0mvXp9MBqOrbsBRdfhlDDvjl2kr/A0p3bVWevjh+dpV98azfea9ms4NBaSMM5mvwDzYinpMegqfTEvxL+WF2khvjbPXd1EahTjQLnakl9JaXEzIUDEd8Uwd2vD6Pdsp9Npdz3DrnnXPcOxjVqjYfYNr9GxnEKDdiiOIHZiOicyl1TZHX++BogjlwH1IdVWcYYXwNQvInYRR8qAjsTmiCmDSSxUvBZvnU24DswAsQZepWmwjYOEZqryPeYP9CH15hzSQ+WuHyj3CDBJCEh5l/xmguCMi1Ys0SrjoVlZoQqFTBwAqdRg16rWHZ2RKAlBAtWj2M9CqCSLJG+MznZPS0OY5dZRb5Lvu0/LOn5XdED4+EQ6MFlLG8QU4cQRVC0K+bRgy9wvuAjvZT6R20u0k6cE75AcvnpniaRHSRFRUQG59Dw2HETVjwsqE/krgkuelwe00Hex+1vFOJaosqxkq1WWD6AmlS0V4XUhcKY+BpwJedpO4legehlCP+t0KFEfZS7th/gyvqBjjjhEgi5KvjzjajAGJq8GA0Hzzbn3joOUom8cNvyUrROKG4RE/OUlA7tY+gnzo3is49R/H9eJWHt5RJ3iPsAJDeRKngPbT0iBYxGWCOGK0/3gpwKcSn5oLJtcYuGCTbOMw+dvFKlITRVhHGeUD7pqbthXyRwn3ybgvjt9CJMr8dvRumGfHq1/3w/HQq8ipJa+5L+dNZLTBYMqT/AcS1PdiJuiSE6DPVV+A/hRmNs9z+p3rtv1ai7Mzk6Y+167FObDSlofzB8tez093g+tfwE=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVZdb+o4EH2/vyLKfaxCnEAKRAUpfC2525Z7Ce1t+7IyjgPuBjuNnQD99WsHkgKl3e5KSMiT8cyZmeNjX3G4im3X4xyngjCq+YOO/hdoWShs2NhoNEDTaEQAGrDevjSalg1CC0AALue65nOeYZ9yAano6DawGgZoGVZ7ZjmuU3edRs0B9Sddu8cpl6GlSw3o2mYVU+4WaTt6llKXQU64S+EKc1cgN/Burl3p6cISk9692qEsEqbdpRCJa5qoFmKE4xjVEFuZV+aRz1XI3YAsKBRZivc5Q97R93vX63VtXa+xdGHaAAATtE3pE3Ky+K53v5WbcejTiO3WfUgZJQjG5BUqUDdYLFmoefGCpUQsVx+EtkwLqNAG3iADWQ36XTffEhTovhjpCGTKocGX0CqDTXGEU0wR1u6mfkf//rUJ7vbOUkh5xNIVP1n/N0iY5jhmCQ4NXlZWovt6xDPt6l5h5PoUxRknOb5VNEkgwlz7meKIbK4Jl+QLuVaMX9tw+SMlyzD6L2O5Mg+xSujmme4MyAJz8X9mdjivXZR7GGe4i/KHACYXdw/95w0IouHMD5rbW8/6IVqdAsKh8w5UNe79+pSsFbf2mx7uvXAbpa1wO5g8jx9e7x+fMjTNx4/NWdS8wEmdiPB3vlkO8vHdxATJML4b0EdzDKe3ZPQwYuYvlLCbp+Bx4iTfbnqj+e/67+A6yF6mvcf+fLb9cxb6P5684a9x+vp8x3umw3/+eLl5fplfW0O+GiWzceTUL8NlAvoX4wnIJ3M8CvzB9bc/nPbF43byFPS3zez+6TUg685bTYc1HBtLSQiy+TNGolwqevgDbSTnBcXn8qIsJDSiwtVNlEZxganQu2qXkhY3kwJEQlcOc7cGYDSsO/3LkefYl722PQROHTjttjUCXsvyRqUG7VCcQOwzGhGVS6nsjj+fA0Qrl2Ma4tTIWYaWmOufRBxAATWfTuXhYJTjGZMqbkXRqpXTTUqb2zVbxDmzmZ3N41DXbpmY0EnqRQKnx9LdOpLuKUYkIVjpuyI4lwznQvbiBeaZiK1aDmsUZ/IGSJUIu3aj5ZicrJIYK6TmioVZjGvJMik6Y/Ldv21AxAtr0VbEi8P3YW2n38o2SJ+QKAeu6ulhOUp85h5qlMWcL9oGJ/dVGd7LQqLOmOypSAnaITn+9EYVxZGKJ/uqStiV96nhKLJ5WlSVLMwJqghf3dRS6KUMdMuxvMDaSy3L86wYRFNJXCrDm1LpLDPAKJM6tZ2xvzE1qxDml66JCvVJ5sp+jC8TSxoIKPBK0kYrll94IwSYqzeCL/m++eoD5Cil7JvAG3HO1o/lU0Ih/vS1gVyk/KT5p/xbszR8G9eZWAd5ZJ3yYSAIXaiVuhC2HxADMRmWSAVj6WHwcwHOJT82Vk2usAjJpnkm8MdfNCVNHR0ixDIq/IFeGA7lssAptgl235zehSkkeX/HbviHd+zDzXUghWsF9cqX/LuzQQq6IKyrq7zA0tE38skok9PFgTzvAb5X6N7Qs0fty16rcajQI6/nVA08qqT7zvzectDT0/PQ/Qc=</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_firstuser20140819_1408463630037</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463630037</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20140819_1408463632453</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35C6FA566B92E05305991F0A81AF</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>00FE35CCBDA137A6E05307991F0A9C25</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID2</con:name><con:value>00FE35BEA2F96B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL2</con:name><con:value>urn:dece:accountid:org:dece:00FE35BEA2F96B84E05305991F0AFAB5</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5da56a8d-11f7-4984-99b2-aa2ad88ae0d1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8c11e7ca-2b56-4a03-aa40-eeee7485d570</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02006_AccountDelete_FUNC_CS_Deleting_an_account_when_user_is_Full_P1" searchProperties="true" id="43981f38-c9d0-4cae-bcee-bee74f14bd5b"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="f83c51ec-db9b-4ce3-b461-9850776f1787"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="37ecd077-768a-470f-b282-b48ca3e1d5c8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("UserName",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="50583a37-adf5-4ee7-a098-9dda4d12af25"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DECE_CS" id="28caf610-a0b9-497c-8f5f-3c5cec26db36"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS API with DECE_customersupport" id="1d145d80-e8fb-4742-a3d3-101b90013888"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());


def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER2",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID2",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL2",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID2",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL2",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="3e14367f-9034-4c28-872e-9722cc9d87e3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL2"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="31187076-4658-4539-aff0-0d1c111953fc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35CDBC83379EE05307991F0A9FE6</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_e7457399-5f7f-428b-8dd6-a4a61dadb703</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_e7457399-5f7f-428b-8dd6-a4a61dadb703</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35BF58606B96E05305991F0A65D7:742E873"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35CDBC7F379EE05307991F0A9FE6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35CDBC7F379EE05307991F0A9FE6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FE35CCD8AF37A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35CCD8B237A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FE35CCD8AF37A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FE35CCD8AF37A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35CCD8B237A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FE35CCD8AF37A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EH2fr3B5HqeML5ibK1BFuGyY3Agk2dm8bAm5DZrYkpFkIPn6kQx2gCHZzFJUudRudZ/uPj7SmUBJ7AVdIYBLwqgx6rfNf6Hh1xrVVsuqRY3I8r3mzGqGYd1CPqq7IQpnDadqGiMhMhhRIRGVbdNzXN9ympbbundrQa0a1BqVlu8+mcYjcKFCK5eKYxqbJKYiyNO2zYzTgCFBREBRAiKQOJh2r68C5RmgApPZOduizBPyzkLKNLBtXAkBQxzjCmaJfWYf+JyFIpiSOUUy47DLGYq2udu7Xq8r62qF8bntOY5jOy1b+YSCzL+anS/FZghHNGLbdQ9RRglGMXlFGtQ1yAULjW48Z5zIRfJOaNd2HR3agg22sOvTr6b9liBH98lIByC5QJZYILcINoEIOFAMxsNk1Da/fm6C2733HFERMZ6Io/WfQQK6gpilEFqiqKxA9/mIJ9rVOQMcjCiOM0FWcKNpkiIMwhhziMjmighFvlAY+fiNjVB/UrAM8J+M5czex6qg2ye60ydzEPL/zGx/XtsojyjOoMPJlEehE7JvIHzJvbFs/TMWl8vFLWvnEPadt6DKce/Wx2QtubXbNJrPNpsJXJM0SrFffRo2m758GH+/a81uphN0NX4gDC2+icvXKrn3xj+GNz9mGb+46Nr9v1uvK7v38Dj9Nv6rPrzreV9sP/Ol5+FV3XFuH5KflDzfTZtZttw8SUh7q5fn9CZx0944rUbj4QzGd5cXKW8+Pfcvw59Xg+fL1O2K/vLi+2B59aU3e7RfpD14eFxNevT8ybu8br/VtF/DobGQhGk2+wlYFktNj1HfGKp5IfmxvGgLCa0odw1SrVFCApVmR+/S0hJkSoBIGKhhbteOMxxUa71ev9kdVhvd5sCpVZ1Gq+UOne65+hUatEVxBLHHaER0Lq2yW/58DBAngQAaArdWLMMLEOYHEftIImNEJ+rjYFTAPVMq7qbPc8kWYl2P63WXoCiO1rgu/QSZxg2Tt/SWdyMJ/FC7mwfaPQFMUgJa4DXDhaK4kKoZS7TKZOxWVqhCIVNHANcqHHh+s2YLkqQxaKh2wsIshkq6SPPW2GL79CyERW7N+4pF/vW9W9zxu6IPyick2kHoes5BzRJOHER+Uczpoj3n6MAqwnezkOiPTDVVcoK3SA5fvXFFk6Qkyq6qAnbpfWw4iGwfF1UmC1cEl4wvj2ql9EoHOsVYlqiyrGSrVZYPoqE1jqvwtpI6154CzpRQvdyzZ6B2GcL+1DlRoj7KXNoP8WVyQacSSUgUbYx8+YlLwhSEviSMFOE3n72BHKRUfZOwkadsvVjdJTTiD68bOMDaT5nH6rFmPHwb14lYe3lUnepmIAmd65U+EV7eIQZmKixREsb4fvBTAU4lPzSWTS6xSMWmWSbh/TeG1qa2iTBmGZWjvpkb9vUyxylfUgjenH4Lk2vy7pDdiHcP2R/XV1OlXFpwCl/y384WyemCwdRneY6lbW7UnVElp/M9fd4BPCHR/fNeQ0l0a7Av0a3hoF428KCSzm/m3y17PT3+Hjq/AA==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtU+o6EP7ur+jUj07pGxXoCDNQ9NyqIAJHvefLnZCmNNompUkLnl9/k2IrIHo913GGyXaz++zukye5YCCJLbfPGMo4pkTxh131H3NhwjB0oOZYdlNrAuBoi4VhaYZtnBvtjr2AQUdVfMZy5BPGAeFd1TLMpma0NbMzNx3XsV3nvGE6xi9VeUAZE6GFS8NQlU0SE+aWabtqnhGXAoaZS0CCmMuhO+uPbl3h6YIKk9q72KIsE2a9iPPU1XXYCBBEcQwbkCb6hb7ncxEwd4aXBPA8Q285A9ZV3/au1+vG2m7QbKlbhmHoRkcXPgHDy1O1d1JtRoFPQrpde4BQgiGI8W8gQY0Qj2ig9OMlzTCPkk9Cm7ppyNAa2kANmk1yqurvCUp034y0BzJjQGMRMKtgUxSiDBGIlJ9Tv6uefm+C273zDBAW0ixhB+s/g4RIgWKaokBjVWUVuu9HPNKu3gWCrk9gnDNcoLGkSQogYsokQyHe3GImyBcwpRy/smHiH1csQ/BPxnKh72IV0PUj3RniJWL8/8xsd17bKA8gzlHvgTvG82Ka9tcj9JQNCrryfj08ZHdnnHZLCLvOW1D1uN/Wh2StufW2aTYMRuu7Gxr/gH/NzyO7WNxcF51Vyxjw+2H/8ckyk6V3G16RyeQxTIfhqJOtjUkT5U47vWbjczDMqR4k6Hk6uT65m6IzxxvYg1Z0v8arIHxiE9tcks38MjmjY2sZ+/l1EcEz74c+zm9uRo9e5BUDZr8+JcV1i73cM9xvj19evN/kBP5t5Qvbtzo/+fPzZroKmN99r2m3hn1jJQmzfPGMIK+Wkh7+ULkS8wL8a3mRFhxoYenqplKjGEeEqz25S0qLmwsBwoErhrldG8bVpe143rA9sOxWv31pOLbR6nTMK6M/EH+VBm1RHED0KAmxzCVVdsufrwHCxGWIBCjTCprDCDH1i4hDwIHik6k4HJQwNKdCxV+XMU9TZjadIlo7IN0U6/YqisXpGFN+R+6yfshRtq/c7T3lniKIU4ykvEt+M0FwxkUrVqDIeWw2CtAgKBcXQCY12LWabUdnOEljJIHqCQ3yGDXSKC0bo7Ptr6UByErr9HJenrtPyzr8VnVA+ARYOjBZywCJKaIjV1CzKuTTgi1zt+AqfD8PsDxeop08w3CLZP/TO0skPWqKiIoqyLXnoWEvqn5YUJ0oKDCseV5f0ELfxenvVeNYgcaqkRdFXg6gJZUtE+F1IXCmPkMwF/L0OqcviOh1CP1bt0ON+iBzbd/Hl/OIzDjgKBF0UcrlN54GM8Tk08AXNN98992xl1L0jaMNP2bzYvGCkIi/fGRAF0o/YZ6InzXNgvdxHYm1k0fUKd4DHJOlXMl74PUTUkAqwmIhXDTbDX4swLHk+8a6yTUWLti0yDn6/IsiFamrAghpTrg/VEvDrkqWOPlritx3pw9hSiV+u1o37NOr9Wl0OxN6lQC19sX/7azhki4QqfIGL7F01Y14KYrkZLmjym8AjwjzcOC1hTB3LneFuXN1eV43cK+S3gfzR8tOTw/PQ+9f</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EH2fr3B5HqeML5ibK1BFuGyY3Agk2dm8bAm5DZrYkpFkIPn6kQx2gCHZzFJUudRudZ/uPj7SmUBJ7AVdIYBLwqgx6rfNf6Hh1xrVVsuqRY3I8r3mzGqGYd1CPqq7IQpnDadqGiMhMhhRIRGVbdNzXN9ympbbundrQa0a1BqVlu8+mcYjcKFCK5eKYxqbJKYiyNO2zYzTgCFBREBRAiKQOJh2r68C5RmgApPZOduizBPyzkLKNLBtXAkBQxzjCmaJfWYf+JyFIpiSOUUy47DLGYq2udu7Xq8r62qF8bntOY5jOy1b+YSCzL+anS/FZghHNGLbdQ9RRglGMXlFGtQ1yAULjW48Z5zIRfJOaNd2HR3agg22sOvTr6b9liBH98lIByC5QJZYILcINoEIOFAMxsNk1Da/fm6C2733HFERMZ6Io/WfQQK6gpilEFqiqKxA9/mIJ9rVOQMcjCiOM0FWcKNpkiIMwhhziMjmighFvlAY+fiNjVB/UrAM8J+M5czex6qg2ye60ydzEPL/zGx/XtsojyjOoMPJlEehE7JvIHzJvbFs/TMWl8vFLWvnEPadt6DKce/Wx2QtubXbNJrPNpsJXJM0SrFffRo2m758GH+/a81uphN0NX4gDC2+icvXKrn3xj+GNz9mGb+46Nr9v1uvK7v38Dj9Nv6rPrzreV9sP/Ol5+FV3XFuH5KflDzfTZtZttw8SUh7q5fn9CZx0944rUbj4QzGd5cXKW8+Pfcvw59Xg+fL1O2K/vLi+2B59aU3e7RfpD14eFxNevT8ybu8br/VtF/DobGQhGk2+wlYFktNj1HfGKp5IfmxvGgLCa0odw1SrVFCApVmR+/S0hJkSoBIGKhhbteOMxxUa71ev9kdVhvd5sCpVZ1Gq+UOne65+hUatEVxBLHHaER0Lq2yW/58DBAngQAaArdWLMMLEOYHEftIImNEJ+rjYFTAPVMq7qbPc8kWYl2P63WXoCiO1rgu/QSZxg2Tt/SWdyMJ/FC7mwfaPQFMUgJa4DXDhaK4kKoZS7TKZOxWVqhCIVNHANcqHHh+s2YLkqQxaKh2wsIshkq6SPPW2GL79CyERW7N+4pF/vW9W9zxu6IPyick2kHoes5BzRJOHER+Uczpoj3n6MAqwnezkOiPTDVVcoK3SA5fvXFFk6Qkyq6qAnbpfWw4iGwfF1UmC1cEl4wvj2ql9EoHOsVYlqiyrGSrVZYPoqE1jqvwtpI6154CzpRQvdyzZ6B2GcL+1DlRoj7KXNoP8WVyQacSSUgUbYx8+YlLwhSEviSMFOE3n72BHKRUfZOwkadsvVjdJTTiD68bOMDaT5nH6rFmPHwb14lYe3lUnepmIAmd65U+EV7eIQZmKixREsb4fvBTAU4lPzSWTS6xSMWmWSbh/TeG1qa2iTBmGZWjvpkb9vUyxylfUgjenH4Lk2vy7pDdiHcP2R/XV1OlXFpwCl/y384WyemCwdRneY6lbW7UnVElp/M9fd4BPCHR/fNeQ0l0a7Av0a3hoF428KCSzm/m3y17PT3+Hjq/AA==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_firstuser20140819_1408463635540</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463635540</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35CCD8B337A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID2</con:name><con:value>00FE35CDBC7F379EE05307991F0A9FE6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL2</con:name><con:value>urn:dece:accountid:org:dece:00FE35CDBC7F379EE05307991F0A9FE6</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c50d7050-ce98-470c-8b41-102eb3901cde</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1d145d80-e8fb-4742-a3d3-101b90013888</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02007_AccountDelete_FUNC_CS_Deleting_an_account_already_deleted_P1" searchProperties="true" id="3edc8647-4190-4162-910f-213a8e1f7623"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="5995e46d-6d88-46a7-bf9d-bb3706310d59"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="f54ac4be-1ce8-4d25-93d0-9a70121dbdb9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("UserName",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="430919e3-9dfb-47c1-8ebe-ecd3bceb7467"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DECE_CS" id="9d664e44-d32d-47eb-82ed-9f9b740a793e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS API with DECE_customersupport" id="f386c64c-32cc-4c93-9216-926eedc4f2f6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());


def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER2",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID2",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL2",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID2",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL2",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config></con:testStep><con:testStep type="datasource" name="Account_Status" id="535214ba-238c-4eaa-b4f6-993720a03fb4"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">deleted&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">forcedeleted&lt;/con:entry></row></con:configuration></con:dataSource><con:property>Status</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="83c27049-108d-4eb6-84c1-7b25cfcf178b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def status = context.expand( '${Account_Status#Status}' )
myTC.setPropertyValue("Status",status);
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="b919c030-25c8-4f60-aae1-e880b53add23"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL2"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","ACCT_ALREADY_DELETED");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="e237f670-c1de-45a6-9dfd-112be6a4afca"><con:settings/><con:config><dataSourceStep>Account_Status</dataSourceStep><targetStep>Set Account Status</targetStep></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35C6FA766B92E05305991F0A81AF</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_336ec721-8371-4cfc-8d1e-7fbe4e181930</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_336ec721-8371-4cfc-8d1e-7fbe4e181930</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35BA2C4C37A0E05307991F0A50EB:485F5456"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35C6FA726B92E05305991F0A81AF</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35C6FA726B92E05305991F0A81AF</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FE35B3E3396B78E05305991F0ABA86</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B3E33C6B78E05305991F0ABA86</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FE35B3E3396B78E05305991F0ABA86</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FE35B3E3396B78E05305991F0ABA86</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B3E33C6B78E05305991F0ABA86</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FE35B3E3396B78E05305991F0ABA86</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxGlj1VIAgRIBEhQ+sGWUgpsl/blyjhD8DZxqO3w0V9/7UBSoLS3eyUk5Ml45szM8bHrHEVh0WtxDkyQmGrdTkP/p1SqAK4WbaNWqtpGGc+wUfNtMKqzKZTBrtluydK1LucJdCkXiIqGXrTssmHVDNsd247nlD3LLpSt2rOuPQLjMrR0Kchd6yik3EvTNvSEUS9GnHCPogi4J7A3at31POnpoQyT3qxvUaYJWXMuxMIzTVzwAUMY4gKOI7NuHvjUfe6NSECRSBjscvq8oe/2rlarwqpUiFlgFi3LMi3XlD4+J8GZ3vyRbQa/S2fxdn2BaEwJRiF5QwrUHYh57GutMIgZEfPok9C2aVsqtAFrbGC7TM908z1Biu6bkQ5AMo4MPkd2FmwIM2BAMWi/ht2Gfva9CW73jhmifBaziB+t/w4S0CWE8QJ8g2eVZei+H/FEu5p1wF6X4jDhZAl9RZMFwsC1AYMZWfcIl+TzuZaOX1tz+SMZywD/zVjq5j5WCd080Z0OCYCL/zOz/XltozyiMIHmJMBj/Bz0evPydHVfqd25tWHUD8n5c9BIIew7b0Hl496tj8mac2u3aRUKPnSs2aBbXf7prsbw9lARzxVCbn6/3Q5o/2r6dH1zmdx23HPOb/l6zAMzqLKBc756eG23XTa172Z3Ld5+YvMfE/9lXb2G/uvgZ9J3LbcdJTdu8AA/E/zYKa4m+KkcOyhqm/gtQL1wMqXsYtLa/Lrtj+9Hr0F0Pf/tTHrnUC0y+8cCoXWPmoPZyBqEpU34Bq3Ge037NRwaM0kYJdM/gEW2VPTodrQrOS8kvpYXZSG+MUtdvYXSKC6ACr2pdilp8RIpQMT35DC3a8u6uiw57dJlqeRW2tXapeWULMd17Sur1W7VKpkGbVEcQbyI6YyoXEplt/z5GiCOPA7UB2Ys4wTPgetfROwggbQuHcrDEVMO41iquE0WsbOyrM2aTTc2tpET4w1eMudF1/qxuKf3rDUTwA61u3ag3UPAZEFACbxiOJcU50I24xUtExHahSUqUEjkFcCUCnvFcs0xOYkWISioZhT7SQiFxXyRtsbk2/+igTBPrWlfMU9P36fFHX/L+iB9fKIcuKqnDXKW8OEiKnlOVszpoovW0YWVhW8lPlGHTDZVMIK3SA4/vXNFkSQnyq6qDHbufWw4iGweF5Un85cE54zPr2qp9FIHmtlYXlHhtZAsl0k6iKrSOCbDm1LqbHMEOJFCtRnHL0DNPIT5rXsiR32UObcf4kvEnI4EEhBJ2mjp8huPhBFw9UjoSsKvv/sCOUgp+yZgLU7ZLkL5llCIv3xuYA8rP2keyL9VzPz3cZ2ItZdH1ilfBoLQQK3UjbD5hBg4lmGJlLCY7Qc/FeBU8kNj3uQci5BsmiYCPv+iKW1q6AjjOKGi29FTw75epjjFZgHeu9OHMKkm7y7ZNf/0kp3c9UZSuSKk577kv50NktIFg67u8hRLQ1/LN6NMToM9fd4B/CjRF5WrVrVYabvFfYmu2a2rvIEHlTQ/mD9a9np6fB6a/wI=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZtc6o6EP7eX8FwPiOgosJUZ/Clt7S2ttJzbm+/3EnDImkhKAm+/fqTYKFqbW/PnXHGybLZfXb3yZOcM5TEdcdlDDJOUqp4w676rwkofA7rLS1o1tta06yD1mmYodYJURs1QxMZoa0qHmM5eJRxRHlXrRtmUzM6mmk/mJZjNRzLrrXsxpOq/IKMidDCpWaoyjqJKXOKtF01z6iTIkaYQ1ECzOHY8d2bsSM8HVRiUnvnO5RFwqwXcT53dB3XAsAQx7iG00Q/1w98zgPm+GRGEc8zeMsZsK76tne1WtVWjVqazfS6YRi6YevCJ2Bk9kPtnZWbIfBomO7WA0RTSjCKyRZJUDfAozRQ3HiWZoRHySehTd00ZGgN1ljDZpP+UPX3BAW6b0Y6AJkxpLEImWWwKYSQAcWg/Jx6XfXH9ya42/uQIcrCNEvY0frPIAFdQpzOIdBYWVmJ7vsRT7Srdw7Y8SiOc0aWcCtpMkcYmHKXQUjWY8IE+QKmFONX1kz8SMkywH8ylnN9H6uArp/ozpDMgPH/M7P9ee2i/EJxDj19MbxMNgsYbn5u7wbTsTvYUrz12uHfo24BYd95B6oa99v6mKwVt942BR3/6v55mpsvlK3yZP2qezfu7bhjze6R708eLuGfzXX8iPXNBrVCuI6Ggyz9654luRU9+ePGZLyxbsmv5M7Nt2f55GoxurUuh9NwEXmr8eMTv7JuX4JksArXyeTxMlrZr09X/tWin4RuC/hkYLcpy+5HyXOE/Ks0HvRnQ1Kf1O35mT19vL+LPXN97es3ho0uEOu+17Rfw6GxlAQ/f34BzMulpIc3VC7EvBD/Wl6khQRaWLg6c6lRjAPlak/uktLi5EKASOCIYe7WhnExalj9xqjRGLT67c7IsBqGZdvmheH23U6r1KAdiiOIg5SGROaSKrvjz9cAceIwoAFk2jLNcQRM/SLiEHGkeHQqDkdKGTykUsXzJrJJsubbbdJoN18N20qjVquDVeU25RM6ydyQQ3Yo3Z0D6Z4CJnMCUt8lwZlgOOOiFwu0zHls1paoRiEXN0AmRdipNzuWzkgyj0Ei1ZM0yGOozaN50Rmd7f7rGsKssE5HD8XB+7Su429lC4RPQKQDk7X0QYwRTtxBzbKQTwuum/sFl+HdPCDyfIl+8ozgHZLDT+80kfyoOCIqKiFXnseGg6j6cUFVomBJcEX06oYWAi+Of68cxwLVFrV8ucyLAbSltGUivC4UztR9wLnQp81D+gpUr0Lo37oeKtRHmSv7Ib6cR9TniEMi6KIUy2+8DXxg8m3gCZ6vv/vwOEgp+sZhzU/ZBrF4QkjEX74ysIOlnzDfib9VmgXv4zoRay+PqFM8CDihM7mSF8HmE1LgVIQlQrnSbD/4qQCnkh8aqyZXWLhg03PO4fMvipSkroowTnPKvaFaGPZlssDJN3Nw3p0+hCmk+O1uXbNP79bHm7EvBCtBauVL/ttZIwVdMKjyCi+wdNW1eCqK5HS2J8tvAD8q86B14batVt+u7ytzx3QvqgYeVNL7YP5o2evp8Xno/QY=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxGlj1VIAgRIBEhQ+sGWUgpsl/blyjhD8DZxqO3w0V9/7UBSoLS3eyUk5Ml45szM8bHrHEVh0WtxDkyQmGrdTkP/p1SqAK4WbaNWqtpGGc+wUfNtMKqzKZTBrtluydK1LucJdCkXiIqGXrTssmHVDNsd247nlD3LLpSt2rOuPQLjMrR0Kchd6yik3EvTNvSEUS9GnHCPogi4J7A3at31POnpoQyT3qxvUaYJWXMuxMIzTVzwAUMY4gKOI7NuHvjUfe6NSECRSBjscvq8oe/2rlarwqpUiFlgFi3LMi3XlD4+J8GZ3vyRbQa/S2fxdn2BaEwJRiF5QwrUHYh57GutMIgZEfPok9C2aVsqtAFrbGC7TM908z1Biu6bkQ5AMo4MPkd2FmwIM2BAMWi/ht2Gfva9CW73jhmifBaziB+t/w4S0CWE8QJ8g2eVZei+H/FEu5p1wF6X4jDhZAl9RZMFwsC1AYMZWfcIl+TzuZaOX1tz+SMZywD/zVjq5j5WCd080Z0OCYCL/zOz/XltozyiMIHmJMBj/Bz0evPydHVfqd25tWHUD8n5c9BIIew7b0Hl496tj8mac2u3aRUKPnSs2aBbXf7prsbw9lARzxVCbn6/3Q5o/2r6dH1zmdx23HPOb/l6zAMzqLKBc756eG23XTa172Z3Ld5+YvMfE/9lXb2G/uvgZ9J3LbcdJTdu8AA/E/zYKa4m+KkcOyhqm/gtQL1wMqXsYtLa/Lrtj+9Hr0F0Pf/tTHrnUC0y+8cCoXWPmoPZyBqEpU34Bq3Ge037NRwaM0kYJdM/gEW2VPTodrQrOS8kvpYXZSG+MUtdvYXSKC6ACr2pdilp8RIpQMT35DC3a8u6uiw57dJlqeRW2tXapeWULMd17Sur1W7VKpkGbVEcQbyI6YyoXEplt/z5GiCOPA7UB2Ys4wTPgetfROwggbQuHcrDEVMO41iquE0WsbOyrM2aTTc2tpET4w1eMudF1/qxuKf3rDUTwA61u3ag3UPAZEFACbxiOJcU50I24xUtExHahSUqUEjkFcCUCnvFcs0xOYkWISioZhT7SQiFxXyRtsbk2/+igTBPrWlfMU9P36fFHX/L+iB9fKIcuKqnDXKW8OEiKnlOVszpoovW0YWVhW8lPlGHTDZVMIK3SA4/vXNFkSQnyq6qDHbufWw4iGweF5Un85cE54zPr2qp9FIHmtlYXlHhtZAsl0k6iKrSOCbDm1LqbHMEOJFCtRnHL0DNPIT5rXsiR32UObcf4kvEnI4EEhBJ2mjp8huPhBFw9UjoSsKvv/sCOUgp+yZgLU7ZLkL5llCIv3xuYA8rP2keyL9VzPz3cZ2ItZdH1ilfBoLQQK3UjbD5hBg4lmGJlLCY7Qc/FeBU8kNj3uQci5BsmiYCPv+iKW1q6AjjOKGi29FTw75epjjFZgHeu9OHMKkm7y7ZNf/0kp3c9UZSuSKk577kv50NktIFg67u8hRLQ1/LN6NMToM9fd4B/CjRF5WrVrVYabvFfYmu2a2rvIEHlTQ/mD9a9np6fB6a/wI=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_firstuser20140819_1408463638991</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463638991</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B3E33D6B78E05305991F0ABA86</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID2</con:name><con:value>00FE35C6FA726B92E05305991F0A81AF</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL2</con:name><con:value>urn:dece:accountid:org:dece:00FE35C6FA726B92E05305991F0A81AF</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9aba8db9-b07b-47b4-b23b-478559f4cc48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f386c64c-32cc-4c93-9216-926eedc4f2f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9d664e44-d32d-47eb-82ed-9f9b740a793e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02008_AccountDelete_FUNC_CS_Deleting_an_account_when_Account_Blocked_and_User_Pending_P1" searchProperties="true" id="72968d56-7dcf-41e3-94cc-e2d423b4bb29"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="bd59393c-90fc-49f3-8b89-5f71efc4a092"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="da24b20f-f1a2-4df9-b9f0-9b285c87224a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("UserName",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="ba3ac65b-7ad5-4566-ba72-90ce5a787c76"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DECE_CS" id="09d4d30d-15f3-4746-ace2-94db863a90bb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS API with DECE_customersupport" id="fb96ae2a-96f7-4320-a5eb-fa142aebbc40"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());


def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER2",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID2",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL2",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID2",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL2",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="8f49a20c-d168-42cb-a9fd-03bed5dfa619"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set User Status" id="974e312a-931e-4151-92d0-11217d33ea84"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","pending");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="bbcc1254-c1a2-4828-91f1-3aa0da025120"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL2"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="35437c76-3df4-4b9e-8f43-b5eeaeead2b1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","pending");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35B48FF16B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_0f5e92ca-5697-446f-9d83-583497f98015</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_0f5e92ca-5697-446f-9d83-583497f98015</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35B47AEE379AE05307991F0A9CE0:22876156"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B48FED6B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B48FED6B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FE35CCD8CE37A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35CCD8D137A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FE35CCD8CE37A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FE35CCD8CE37A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35CCD8D137A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FE35CCD8CE37A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdc6pIEH2/v4LiPqYQUFCgolXGj1vuTWKMSTbJy9Y4NDgJDIQZlOTX7wwKUWOyuWtZRU3T0326+3BmThmKo6bXZwwyThKqTIZd9R8jsMFtYqTZbbejWVY70FzfaWm207LcTuA6hmmryoSxHCaUcUR5V20apqUZjma6N6bt2ZZn2I22aT6qyh1kTIQWLg1DVYo4oswr03bVPKNeghhhHkUxMI9jb96/OPeEp4cqTGrvdIOyTJj1lpynnq7jhg8Yogg3cBLrp/qez6nPvDkJKeJ5BtucPuuq273r9bqxbjWSLNSbhmHohqsLH5+R8Kfa+1FtBn9Cg2SzHiCaUIJRRN6QBHUBfJn4Sj8Kk4zwZfxJaFM3DRlagwJr2LToT1V/T1Ci+2akPZAZQxpbIrMKdg0BZEAxKLfXk67683sT3Oy9yRBlQZLF7GD9Z5CAriBKUvA1VlVWoft+xCPt6p0C9iYURzkjK7iUNEkRBqZcZRCQ4pwwQT6fKeX4lYKJP6lYBvhPxnKq72IV0PUj3RmSEBj/PzPbndcmyh2Kcui5GZrCrzd6fjJG986aOet5dEWv2Dp+6JYQdp03oOpxb9eHZK25td105QbODN9F04fZsuhP7pzh2VXrXrdvFsb9sFUEvw3Lpa+3F+Oxu76JL88W7m1gheHs7ckiv57C2+A5PzdPJlOePD7/YIuThR3G+K+T1lP6+yXl61X7NyPtEVm83b9dwgObruaDzt2o83d/FoSd5DG71tvOxSy+GPB2MXL5y/0Yfl0bl7P4Rzh7oslsSmnr+S6/nKWLzOq+17Rbw76xkoR5vngCzKulpMdkqIzFvBD/Wl6khfhaULp6qdQoxoFytSd3SWnxciFAxPfEMDdrwxiPWvZgMHQGo1an74wMu2V0XNccG/0z8as0aIPiAOIgoQGRuaTKbvjzNUAcewyoD5m2SnK8BKZ+EXGIOFIm9Fp8HAllcJMIFTd9uwibC6vAb85rkEJgOe3WepWvVeUy4VM6zfoBh2xfup096b4GTFICUt8lwZlgOOOiFy9olfPIbKxQg0IuToBMirDXtBxbZyROI5BI9Tjx8wga6TItO6OzzbOpIcxKa9lWzMqP79PaDt9VbRA+PpEOTNZzBmKU8OEcanl2VczxopvGwXlVhe/nPpHfmOgpzwjeINl/9U4VyZGaJ9uqKti196FhL7J+WFSdzF8RXBO+PqmF0AsZ6FVjeUGNl0a+WuXlIDpS4jIRXhdKZ+pzwLnQqdeb5BmoXofQv3VM1KgPMtf2fXw5X9I5RxxiQRulXH7jjjAHJu8IE8H34rsXkL2Uom8cCn7MNojEVUIi/vK2gT0s/YT5SjzWSea/j+tIrJ08ok5xMeCEhnIlD4TXT4iBExGWCAVLst3gxwIcS75vrJtcY+GCTYucw+dvFClNXRVhnOSUT4ZqadiVyxInf03Be3f6EKaU5O0ZW7BPz9j7i/O5EK4YqbUv+W9njZR0waDKo7zE0lULcWUUyWm4I89bgB8V+sxyxqNh+6zTLxXa3ij0aNSqFXq/kt4H80fLTk8Pv4fevw==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH1chVwpEBSnlsuIUShe66GxfjlxnkrhN7CR2gO6vP04gKdDL6R4UCXkymflm5vNnX3KUxJbrcQ65IIwq01Ff/SewfRP8dk+zLcfRHAcFGsJ+R+s+QODbVhc5HVNVppwXMKVcICr6qmWYjmZ0NbN3Z7bdtuMadqvba9+ryhpyLkNLl5ahKrskptyt0vbVIqcuQ5xwl6IEuCuwu/LmM1d6uqjGpA4u9yirhPkgEiJ1dR23fMAQx7iFWaJf6ic+lz53VySkSBQ5HHL6vK8evt1ut62t3WJ5qFuGYehGT5c+PifhV3Xwpf4Y/CkN2H49RJRRglFMfqMS1BxExHzFi0OWExEl74Q2ddMoQ2uwwxo2HfpV1V8SVOg+GekEZM6RxiNk1sGWEEAOFIPyczntq18/N8H9t3c5ojxgecLP1n8GCegGYpaCr/G6shrd5yO+0a7BJWB3SnFccLKBm5ImKcLAldscArKbES7J53OlGr+y4/IhNcsA/8lYLvVjrBK6/kZ3RiQELv7PzI7ntY+yRnEBgwizjjf73rlmjoETybJifgE6Z+kN61cQjp33oJpxH9bnZG24dfhoZdHhjKB0IuYT/m39tF0PVz+GP25Gi5/j0ThbXFwbXno32mG97Wy6N9vMeXiOimyShr3d8N4IGbBgy2bXz/dP3pfH7S/j2UmvsjlEo7/Wt5aZZ5vQjsOr7mh9m3j5wviVfYuWxuI6tbuWt1z8Lq6X6+DHzLOT+xU36PcNoB60HxZ/fcmiOIweH6ZRkKU5nfPwG+u/1HRcw6mxloRV8fAIWNTLkh7TkTKR80LiY3kpLcTXgsrVTUuN4gKoUAflV6W0uIUUIOK7cpj7tWFMxnZ7OBx1R6bd8bpjo20bnV7PnBjelfzVGrRHcQZxyGhAylylyu758zFAnLgcqA+5tmEFjoCrH0QcIYGUKV3KzcEohzsmVdykFzh7fMrabGf9NsOs+5TayZOZUUtVbphY0EXuBQLyU+3unmj3EjBJCZQCXzKcS4pzIZuRoU0hYrO1QS0KhTwC8lKFXcvptnVOkjSGEqqeML+IoZVGadUane//LSlGvLIux3fVznu3sPN3dQ+kj09KB17WcgVyjvDqELLlcyjk3YIt87jgOrxX+KTcYLKhIid4j+T01QtPSoI0JJEV1ZAbz3PDSVT9vKAmkb8huGF6c0RLhZf7f1CPI0OtrFVsNkU1gE6pbbkMr0uJM/UV4EIK1PMdewKqNyH0T50PDeqzzI39FF8hIroSSEAi6aJUy09cDlbAy8vBVBJ999mbx0lK2TcBO/GWbRjLO0SJ+MNrBnZx6SfNt/Jvy3L/ZVxvxDrKI+uUNwJBaFiuypPg+R1SYCbDEildLD8O/laAt5KfGpsmN1iEZNNDIeD9N0qpSX0VYcwKKqYjtTIc62SFUzyn4L44vQpTafHhcN3xdw/Xv+ezlVSsBKmNL/lvZ41UdMGglmd4haWv7uRdUSan4ZEuHwC+luYrpzuZGBdXHa+S5vZemsdju5Hm00oGr8yvLUc9Pd8Pg38B</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdc6pIEH2/v4LiPqYQUFCgolXGj1vuTWKMSTbJy9Y4NDgJDIQZlOTX7wwKUWOyuWtZRU3T0326+3BmThmKo6bXZwwyThKqTIZd9R8jsMFtYqTZbbejWVY70FzfaWm207LcTuA6hmmryoSxHCaUcUR5V20apqUZjma6N6bt2ZZn2I22aT6qyh1kTIQWLg1DVYo4oswr03bVPKNeghhhHkUxMI9jb96/OPeEp4cqTGrvdIOyTJj1lpynnq7jhg8Yogg3cBLrp/qez6nPvDkJKeJ5BtucPuuq273r9bqxbjWSLNSbhmHohqsLH5+R8Kfa+1FtBn9Cg2SzHiCaUIJRRN6QBHUBfJn4Sj8Kk4zwZfxJaFM3DRlagwJr2LToT1V/T1Ci+2akPZAZQxpbIrMKdg0BZEAxKLfXk67683sT3Oy9yRBlQZLF7GD9Z5CAriBKUvA1VlVWoft+xCPt6p0C9iYURzkjK7iUNEkRBqZcZRCQ4pwwQT6fKeX4lYKJP6lYBvhPxnKq72IV0PUj3RmSEBj/PzPbndcmyh2Kcui5GZrCrzd6fjJG986aOet5dEWv2Dp+6JYQdp03oOpxb9eHZK25td105QbODN9F04fZsuhP7pzh2VXrXrdvFsb9sFUEvw3Lpa+3F+Oxu76JL88W7m1gheHs7ckiv57C2+A5PzdPJlOePD7/YIuThR3G+K+T1lP6+yXl61X7NyPtEVm83b9dwgObruaDzt2o83d/FoSd5DG71tvOxSy+GPB2MXL5y/0Yfl0bl7P4Rzh7oslsSmnr+S6/nKWLzOq+17Rbw76xkoR5vngCzKulpMdkqIzFvBD/Wl6khfhaULp6qdQoxoFytSd3SWnxciFAxPfEMDdrwxiPWvZgMHQGo1an74wMu2V0XNccG/0z8as0aIPiAOIgoQGRuaTKbvjzNUAcewyoD5m2SnK8BKZ+EXGIOFIm9Fp8HAllcJMIFTd9uwibC6vAb85rkEJgOe3WepWvVeUy4VM6zfoBh2xfup096b4GTFICUt8lwZlgOOOiFy9olfPIbKxQg0IuToBMirDXtBxbZyROI5BI9Tjx8wga6TItO6OzzbOpIcxKa9lWzMqP79PaDt9VbRA+PpEOTNZzBmKU8OEcanl2VczxopvGwXlVhe/nPpHfmOgpzwjeINl/9U4VyZGaJ9uqKti196FhL7J+WFSdzF8RXBO+PqmF0AsZ6FVjeUGNl0a+WuXlIDpS4jIRXhdKZ+pzwLnQqdeb5BmoXofQv3VM1KgPMtf2fXw5X9I5RxxiQRulXH7jjjAHJu8IE8H34rsXkL2Uom8cCn7MNojEVUIi/vK2gT0s/YT5SjzWSea/j+tIrJ08ok5xMeCEhnIlD4TXT4iBExGWCAVLst3gxwIcS75vrJtcY+GCTYucw+dvFClNXRVhnOSUT4ZqadiVyxInf03Be3f6EKaU5O0ZW7BPz9j7i/O5EK4YqbUv+W9njZR0waDKo7zE0lULcWUUyWm4I89bgB8V+sxyxqNh+6zTLxXa3ij0aNSqFXq/kt4H80fLTk8Pv4fevw==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_firstuser20140819_1408463643179</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463643179</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35CCD8D237A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID2</con:name><con:value>00FE35B48FED6B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL2</con:name><con:value>urn:dece:accountid:org:dece:00FE35B48FED6B7AE05305991F0AEE3B</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>103fa1bf-6ea6-446c-944d-a4dd944d76a8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fb96ae2a-96f7-4320-a5eb-fa142aebbc40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>09d4d30d-15f3-4746-ace2-94db863a90bb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02009_AccountDelete_FUNC_CS_Deleting_an_account_when_Account_Blocked_and_User_Suspended_P1" searchProperties="true" id="081a6c59-4da5-4e39-9947-039ee9ed71ba"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="31f3a2ff-d923-46d4-8826-c3ee0a7c165d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="687d53f9-4913-48ee-81a6-6bf6e46aec8d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("UserName",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="f5372cbc-fd5d-4453-b3a2-99bc092f7d81"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DECE_CS" id="b20a7865-7fa4-430e-a3d9-3ee95c71eaa4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS API with DECE_customersupport" id="c77875ab-84c2-4f9b-b42f-344ac907aff7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());


def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER2",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID2",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL2",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID2",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL2",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="4b6f5d18-1574-49a4-8b37-e8e72dd1f662"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set User Status" id="c853aa8f-6b3c-41aa-8bc6-b39523b547c2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","suspended");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="bc1db7d3-bf1a-41b3-8228-fd21c14e3dc9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL2"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="80e8797d-764e-4315-9a96-d408e6ef50be"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","suspended");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35B490006B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_56eb858d-3f62-46bb-9915-98aac3967e8c</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_56eb858d-3f62-46bb-9915-98aac3967e8c</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CC857437A2E05307991F0A444C:CACB2A8C"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B48FFC6B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B48FFC6B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FE35B42FFC3798E05307991F0A5105</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35B42FFF3798E05307991F0A5105</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FE35B42FFC3798E05307991F0A5105</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FE35B42FFC3798E05307991F0A5105</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35B42FFF3798E05307991F0A5105</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FE35B42FFC3798E05307991F0A5105</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxGlj6vgBAgfUUEipaVsoWWBdrt9uTLOAG6Dk8ZOCPvrrx1ICpT2dq+EhDwZz5yZOT72Occrv+x0OIdI0IBp/W5L/8euwaxhNzyjMq+VjWptNjOaTcs2mg2MSaVZq0OD6Fqf8xj6jAvMREsvm1bVMBuG1ZxatmNXHcssmfXqk649QMRlaOlSMnUtXfmMO1nalh5HzAkwp9xheAXcEcSZdIYDR3o6OMekt8+3KLOEUXspROggREoeEPB9UiLBCp2jA59zjzsTumBYxBHscnq8pe/2rtfr0rpSCqIFKpumicwmkj4ep4szvf0t3wxen82D7foCs4BRgn36BytQQxDLwNM6/iKIqFiuPghtIctUoQ1IiUGsKjvT0VuCDN0XIx2AjDg2+BJbebAxzCECRkC7H/db+tnXJrjdO40w4/MgWvGj9d9BApaAH4TgGTyvLEf39Ygn2tU+B+L0GfFjThO4VTQJMQGujSKY03RAuSSfx7Vs/FrK5Y/mLAPyN2M5R/tYJXR0ojtdugAu/s/M9ue1jfKA/Rjawyq+G0OVCNvr/zateu35xXsZjsYzGrQyCPvOW1DFuHfrY7IW3NptmsTD8gPtIbfc6y3csPuT3Vdf7yM7msZPYdMaQA9drx+n7oM96eHnjntVX/waTC5/YLQRj7fJaOT9eAjC7vrXwE2+zch17eZxYw2b1Q0MkvA3vV6j+84yhuTncPRy/TBacvvpzk1rPrwsbzc3jN+y+dOw+dgQT67nfu/UFj00vWf33cm37vP6dfLcHPdS9+a7QIPl07D1VtN+DYfGXBIm8ewZiMiXih79rnYl54XF5/KiLNQz5pmrEyqN4gKY0Ntql5IWJ5YCRD1HDnO7Ns2ry4rtVstXVxeVerNxadoVsy7P1ZXZsS3TzjVoi+II4kXA5lTlUiq75c/nAMnK4cA8iIwkiMkSuP5JxC4WWOuzsTwcAeMwDaSKW/wlXXokrcxnfJPWaTxL4mp5YTd17TYQd+wu6swFRIfS3TiQ7jEQGlJQ+q4IziXDuZC9eMVJLHyrlOASg1jeAJESYadcbdiI01Xog0KKVoEX+1AKl2HWGcS3/2UDE55Zs7YSnh2+D2s7/pa3Qfp4VDlwVY8LcpRw4h4y82JOF102j+6rPHwn9qg6Y7KnIqJki+Tw0xtVFEcKnuyqymEX3seGg8jouKgimZdQUhC+uKml0EsZaOdjecWl11KcJHE2iLqSuEiGR1LpLDQBEkud2kyDF2CoCIG+dE0UqI8yF/ZDfLFYsonAAlaSNlq2/MIbYQJcvRH6ku/pVx8gByll3wSk4pTtwpdPCYX409cGcYjyk+aR/FsHkfc2rhOx9vLIOuXDQFC2UCt1IWw+IAYJZFgqFSyI9oOfCnAq+aGxaHKBRUg2zWIBH3/RlDS1dExIEDPR7+qZYV8uM5xiE4Lz5vQuTCbJuzs25R/esY/DwUQK1wrrhS/9b2eDZnQhoKurPMPS0lP5ZJTJ2WJPnncATyl0Qyp0za13MoW2twp9eVlxiwYeVNJ+Z35v2evp8Xlo/ws=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4jx1jG9vBeAIzEODW03wV0pD25Y6QF6zWlsCSjdNfX8nEDhCSm94ZZhitV7tnd4+OdM5RmrSDAeeQCcKoFo56+r+O5585CIHhQgcbrh21DeQ7YPiR07aXS9xdLHxdCznPIaRcICp6etuyXcPyDbt7Z3uB5waW33Jd74eu3UPGZWjp0rJ0rUwTyoMqbU/PMxowxAkPKEqBBwIHs8HVZSA9A1Rj0vvnO5RVwqwfC7EOTBO3IsCQJLiFWWqemwc+5xEPZmRFkcgzeMoZ8Z7+tHe73ba2TotlK7NtWZZpdU3pE3Gy+qj3P9SbIQrpku3WF4gySjBKyG+kQF2BiFmkDZIVy4iI01dC26ZtqdAGlNjAtks/6uZzggrdOyMdgMw4MniM7DrYFJaQAcWgfZuGPf3j+ya423uXIcqXLEv50frvIAEtIGFriAxeV1aje3/EE+3qnwMOQoqTnJMCrhVN1ggD124zWJLyknBJvohr1fi1kssfqVkG+G/Gcm7uY5XQzRPdGZEVcPF/ZrY/r12Ue5Tk0B9tLv34cjGJQ9z26dxzsW13uON+9ge9CsK+8w5UM+6n9TFZG249bQL88/77dD70l5NfMDE/295m5J11ktu5fT9ZWPPN4Ib528HDt69fh8hf3c+deJj+k1B7uEmHRXv7JWefvHVY3A6v5x8+fRn/6FijxzAqnLPF9CL2Bw/0Iv758Ph72v1yg0Xn62ju3mx+W1dobM9Nm4VL72JafiJ4Ulyl5XbB/avlPPO+x/YHh1lht8zp4mHErn3HL7rb3nNN+zUcGmtJmOWLn4BFvVT0CEfaRM4LibflRVlIZCwr12CtNIoLoELvq11KWoJcChCJAjnM3dqyJmPHG7rtyWTidLr+2PIcq9Pt2hNr4NmWV2vQDsURxAtGl0TlUiq748/bAHEacKARZEbBchwD19+IOEICaSGdysPBKIc7JlX8EWye+O7aisouKTtrp02w721LXbtm4obeZIOlgOxQuf0D5Z4CJmsCSt4Vv7kkOBeyFRtU5CKxWwVqUcjlBZApDQ7aru+ZnKTrBBRQM2VRnkBrHa+rxph89y+lCPPKOh3fVefu1bKOv9UdkD4RUQ5c1TIEOUV4cQU5gVcX8mrBbXu/4Dr8II+IOl6ynSIjeIfk8NMzSxQ9GorIimrIjeex4SCqeVxQkygqCG543lzQUt/l6e/X49ig1qaVF0VeDaCjlC2T4U0pcLY5A5xLeXq8Y7+Amk0I8123Q4P6KHNjP8SXi5jOBBKQSrpo1fIdT4MZcPU0CCXNy/e+Ow5Syr4JKMUp20UiXxAK8ZuPDBxg5SfNt/Jvy7LoeVwnYu3lkXXK94AgdKVW6h54fIUUmMmwRAoXy/aDnwpwKvmhsWlyg0VINi1yAa9/0ZQi9XSEMcupCEd6ZdhXyQqneFxD8Oz0IkylxE9Xa8lfvVofri5nUq9SpDe+5L+dDVLRBYOubvAKS08v5UtRJqerPVV+AnhKmH0pzGfDzqASZm8nzOOxM2waeFBJ/4X5pWWvp8fnof8H</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxGlj6vgBAgfUUEipaVsoWWBdrt9uTLOAG6Dk8ZOCPvrrx1ICpT2dq+EhDwZz5yZOT72Occrv+x0OIdI0IBp/W5L/8euwaxhNzyjMq+VjWptNjOaTcs2mg2MSaVZq0OD6Fqf8xj6jAvMREsvm1bVMBuG1ZxatmNXHcssmfXqk649QMRlaOlSMnUtXfmMO1nalh5HzAkwp9xheAXcEcSZdIYDR3o6OMekt8+3KLOEUXspROggREoeEPB9UiLBCp2jA59zjzsTumBYxBHscnq8pe/2rtfr0rpSCqIFKpumicwmkj4ep4szvf0t3wxen82D7foCs4BRgn36BytQQxDLwNM6/iKIqFiuPghtIctUoQ1IiUGsKjvT0VuCDN0XIx2AjDg2+BJbebAxzCECRkC7H/db+tnXJrjdO40w4/MgWvGj9d9BApaAH4TgGTyvLEf39Ygn2tU+B+L0GfFjThO4VTQJMQGujSKY03RAuSSfx7Vs/FrK5Y/mLAPyN2M5R/tYJXR0ojtdugAu/s/M9ue1jfKA/Rjawyq+G0OVCNvr/zateu35xXsZjsYzGrQyCPvOW1DFuHfrY7IW3NptmsTD8gPtIbfc6y3csPuT3Vdf7yM7msZPYdMaQA9drx+n7oM96eHnjntVX/waTC5/YLQRj7fJaOT9eAjC7vrXwE2+zch17eZxYw2b1Q0MkvA3vV6j+84yhuTncPRy/TBacvvpzk1rPrwsbzc3jN+y+dOw+dgQT67nfu/UFj00vWf33cm37vP6dfLcHPdS9+a7QIPl07D1VtN+DYfGXBIm8ewZiMiXih79rnYl54XF5/KiLNQz5pmrEyqN4gKY0Ntql5IWJ5YCRD1HDnO7Ns2ry4rtVstXVxeVerNxadoVsy7P1ZXZsS3TzjVoi+II4kXA5lTlUiq75c/nAMnK4cA8iIwkiMkSuP5JxC4WWOuzsTwcAeMwDaSKW/wlXXokrcxnfJPWaTxL4mp5YTd17TYQd+wu6swFRIfS3TiQ7jEQGlJQ+q4IziXDuZC9eMVJLHyrlOASg1jeAJESYadcbdiI01Xog0KKVoEX+1AKl2HWGcS3/2UDE55Zs7YSnh2+D2s7/pa3Qfp4VDlwVY8LcpRw4h4y82JOF102j+6rPHwn9qg6Y7KnIqJki+Tw0xtVFEcKnuyqymEX3seGg8jouKgimZdQUhC+uKml0EsZaOdjecWl11KcJHE2iLqSuEiGR1LpLDQBEkud2kyDF2CoCIG+dE0UqI8yF/ZDfLFYsonAAlaSNlq2/MIbYQJcvRH6ku/pVx8gByll3wSk4pTtwpdPCYX409cGcYjyk+aR/FsHkfc2rhOx9vLIOuXDQFC2UCt1IWw+IAYJZFgqFSyI9oOfCnAq+aGxaHKBRUg2zWIBH3/RlDS1dExIEDPR7+qZYV8uM5xiE4Lz5vQuTCbJuzs25R/esY/DwUQK1wrrhS/9b2eDZnQhoKurPMPS0lP5ZJTJ2WJPnncATyl0Qyp0za13MoW2twp9eVlxiwYeVNJ+Z35v2evp8Xlo/ws=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_firstuser20140819_1408463647180</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463647180</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35B430003798E05307991F0A5105</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID2</con:name><con:value>00FE35B48FFC6B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL2</con:name><con:value>urn:dece:accountid:org:dece:00FE35B48FFC6B7AE05305991F0AEE3B</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3a6a101e-b8b5-4b4e-822d-43ede0a34abd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c77875ab-84c2-4f9b-b42f-344ac907aff7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4b6f5d18-1574-49a4-8b37-e8e72dd1f662</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c853aa8f-6b3c-41aa-8bc6-b39523b547c2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02010_AccountDelete_FUNC_CS_Deleting_an_account_when_Account_Blocked_and_User_Blocked_P1" searchProperties="true" id="09e80576-8037-4511-a281-189c81328c1b"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="74eef26b-fd8c-472d-9d88-f93c186f7a46"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="36c4629b-fd92-44ad-9395-a051f2307b98"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("UserName",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="2639f02c-48f2-453d-9639-5a842b2e85a0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DECE_CS" id="1cb188b4-c789-4591-a731-937c79890065"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS API with DECE_customersupport" id="b730ed41-9a43-4973-9e05-1cc0f3111ff2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());


def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER2",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID2",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL2",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID2",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL2",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="968f939c-ba14-4534-bc41-4743e668fa65"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set User Status" id="483a852d-b5ef-416a-b71e-dc91bcfdb781"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="c6c98187-c975-4745-8dc6-7c559c9f6508"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL2"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="c761c060-b321-41d6-a53b-3bc296cb9939"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","blocked");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35B4900F6B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_37acdcab-3a10-4c4a-86a9-8cbe947926e5</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_37acdcab-3a10-4c4a-86a9-8cbe947926e5</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35BF586C6B96E05305991F0A65D7:B38812AA"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B4900B6B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B4900B6B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FE35BEA3206B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35BEA3236B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FE35BEA3206B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FE35BEA3206B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35BEA3236B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FE35BEA3206B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH6uQK7eoIEEp3bSFUmDRnr4cuc4EXBInjR0u/fVrB5ICS3u6R0JCnoxnvpn5/NmXDEWh5XYYg5STmCper6X+a9cR9jF61mxkGpqDHaQ1aqipNfAzNJ1606pBVVU8xjLwKOOI8pZqGaajGQ3NbE7Nqlt1XNOu1G3rSVVmkDIRWrhUDFXZRCFlbp62pWYpdWPECHMpioC5HLuTzuDeFZ4uKjCp7csdyjxh2l5wnri6jis+YAhDXMFxpF/qRz6XPnMnZE4Rz1LY5/RZS93vXa/XlbVdidO5bhmGoRtNXfj4jMy/q+1vxWbwPRrEu/UVojElGIXkDUlQA+CL2Fc64TxOCV9EH4Q2ddOQoTXYYA2bDv2u6u8JcnRfjHQEMmVIYwtkFsHGEEAKFIPyc+y11O9fm+Bu7zRFlAVxGrGT9d9BArqCME7A11hRWYHu6xHPtKt9Cdj1KA4zRlYwlDRJEAamjFIIyOaeMEE+nyn5+JUNEz9SsAzw34zlUj/EKqDrZ7rTI3Ng/P/M7HBeuygzFGbQHm5/ornjjfrOFerWh7YXW9GPW3gcJj9bOYRD5x2octz79SlZS27tN8H25nFQr/2yp73J6LnLu9P57H5oW1fwGm2bPB3/WmdPS8P4520Y2MHixoRs0+wt32r6/aI2xEb15sHRg3qyDOv82+09tS620ZuHrgY9Wotmb7Z3t7yLRk/Uue08xqFRGw0SqzsbDqaNx5cAYri4c2bzlPi360wfXWz6veDpR6ce98ffelifzSPnhYynzXr3cdMfea33mg5rODYWkjDJnl8A82Ip6eH1lL6YF+Kfy4u0EF8Lclc3kRrFOFCutuUuKS1uJgSI+K4Y5m5tGP1ru9q97tiWUes2nGujahvVZtPsG51+p1stNGiH4gTiVUwDInNJld3x53OAOHIZUB9SbRVneAFM/SRiD3GkeHQsDkdMGUxjoeJmsvQDG2e1+pa8mE3qVMn8ZUloIrR7GPMH+pB2Ag7psXY3jrR7DJgkBKTAS4YzQXHGRTNe0SrjoVlZoQqFTFwBqVRh13IaVZ2RKAlBQtWj2M9CqCSLJG+Nznb/loYwy615XzHLT9+HxZ1+K/ogfHwiHZispwtilnDmIjKKYs4XbRknF1YRvpP5RB4y0VSeErxDcvzpnSuSJCVR9lUVsEvvU8NRZP20qDKZvyK4ZHx5VQulFzrQLsbyiiqvlWy1yvJB1KXGpSK8LqTO1CeAMyFU22m8BKqXIfQv3RMl6pPMpf0YX8YXdMIRh0jQRsmXX3gkTIDJR4InCL/56gvkKKXoG4cNP2e7CsVbQiL+9LmBXSz9hHkk/tZx6r+P60ysgzyiTvEy4ITO5UreCNsPiIFjEZYICYvTw+DnApxLfmwsm1xi4YJNzxmHj78oUptaKsI4zij3empuONTLHCffJuC+O/0RJtfk/SW7YR9esr8G9xOhXBFSS1/y384ayemCQZV3eY6lpW7Em1Ekp/MDfd4DPCPRTtMwurVuvXMo0dfXdrds4FEl7T/Mf1oOenp6Htq/AQ==</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdc9o6EH3vr/C4jxljma+AJzADAVo3ECimpOnLHSGvQYktO5JsaH79lU3sACW56Z1hhtF6tXt29+hIVwKHQdXuCQFc0ohpzqCj/1MjlmeB1zTaGK2Mut9GRrvdsowmqtbqq6rlW5ega44QCThMSMxkR68iq26glmG1F1bDbtRtq1pB1cYvXVsCFyq0cqkgXduFARN2nrajJ5zZERZU2AyHIGxJbLc3GdvK08YFJr17tUeZJ+TdjZSxbZqk4gGBICAVEoXmlXnkc+UJ26VrhmXC4SWnJzr6y97tdlvZ1ioRX5tVhJCJ2qby8QRdf9a7n4rN4DnMj/bra8wiRgkO6DPOQE1AbiJP6wXriFO5Cd8IbZkWykIbsCMGserss26+JsjRfTDSEUgusCE22CqCzcEHDoyA9mPudPTPH5vgfu+CYyb8iIfiZP13kIClEEQxeIYoKivQfTzimXZ1r4DYDiNBImgKtxlNYkxAaDMOPt2NqVDk84SWj1/bCfWjBcuA/M1YrsxDrAq6eaY7A7oGIf/PzA7ntY+yxEEC3R/DxrMj+yP+E+pogq9DP3DTh7vZbHTfySEcOu9BleN+WZ+SteTWy6bvrslRup21kn5/Pr/h6fJ7KFYPcja9uBunuOltll+26HtwP1lyctNcovnFpC9+ifGW7CL/Fi/jy+ldc2h685vZp1k6vFnefRktvq12JCCberMeT+Jme3o99h+XU6AX08WT29pR93I1QI5H0ehmfj11H79+ZTd87D3P73+G3BptB7H76X7Yxk3iPD1uL3zyDPfDcdR5remwhmNjIQlusnoAIotlRg9noI3UvLB8X14yC/UMP3e140yjhAQm9W62K5MWO1ECRD1bDXO/Rmg0rDX6w16tWmv2W/UhatRQo922Rqg36vUbhQbtUZxAvI6YT7Ncmcru+fM+QBLaApgH3EijhGxA6O9EHGCJNYfN1eGImIBFpFTcqotdCwkPPdfY5mETiQbbPDF/+6xrt5Gcsinv+RL4sXS3jqR7DoTGFDJ9zwguFMOFVL14wmkiA6uS4gqDRN0APBNhu1pvNUxBwziADKkZRl4SQCXexHlnTLH/rxqYiNw6Hy7yg/dmXaffihYoH49mDiKrpQ9qjHDmDkJFIW8WXLUOCy7C9xKPZudL9VNySvZIjj+90iTjR8kRVVEBufQ8NRxFNU8LKhN5KSUl0csbWgm8Ov7dYhxPuPJUSdI0yQdwmUkbV+FNpXCW6QJJlD79XkSPwMwyhPmh66FEfZK5tB/jS+SGuRJLCBVdtHz5gbeBCyJ7GziK57uPPjyOUqq+SdjJc7brQD0hMsTvvjKITTI/ZZ6pv23EvddxnYl1kEfVqR4EkrJ1tsougt9vkIJEKixVyhXxw+DnApxLfmwsm1xikYpNq0TC21+0TJI6OiYkSph0BnpuOJTJHKf8HYP96vRHmFyKX+7WnXjzbv05GbtKsEKsl770v50NmtOFqJel8s+xdPSdeiqq5Gx9IMsvAM8oc72N0LDZv+wdKvNwWOuXDTyqpPuH+U/LQU9Pz0P3Xw==</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH6uQK7eoIEEp3bSFUmDRnr4cuc4EXBInjR0u/fVrB5ICS3u6R0JCnoxnvpn5/NmXDEWh5XYYg5STmCper6X+a9cR9jF61mxkGpqDHaQ1aqipNfAzNJ1606pBVVU8xjLwKOOI8pZqGaajGQ3NbE7Nqlt1XNOu1G3rSVVmkDIRWrhUDFXZRCFlbp62pWYpdWPECHMpioC5HLuTzuDeFZ4uKjCp7csdyjxh2l5wnri6jis+YAhDXMFxpF/qRz6XPnMnZE4Rz1LY5/RZS93vXa/XlbVdidO5bhmGoRtNXfj4jMy/q+1vxWbwPRrEu/UVojElGIXkDUlQA+CL2Fc64TxOCV9EH4Q2ddOQoTXYYA2bDv2u6u8JcnRfjHQEMmVIYwtkFsHGEEAKFIPyc+y11O9fm+Bu7zRFlAVxGrGT9d9BArqCME7A11hRWYHu6xHPtKt9Cdj1KA4zRlYwlDRJEAamjFIIyOaeMEE+nyn5+JUNEz9SsAzw34zlUj/EKqDrZ7rTI3Ng/P/M7HBeuygzFGbQHm5/ornjjfrOFerWh7YXW9GPW3gcJj9bOYRD5x2octz79SlZS27tN8H25nFQr/2yp73J6LnLu9P57H5oW1fwGm2bPB3/WmdPS8P4520Y2MHixoRs0+wt32r6/aI2xEb15sHRg3qyDOv82+09tS620ZuHrgY9Wotmb7Z3t7yLRk/Uue08xqFRGw0SqzsbDqaNx5cAYri4c2bzlPi360wfXWz6veDpR6ce98ffelifzSPnhYynzXr3cdMfea33mg5rODYWkjDJnl8A82Ip6eH1lL6YF+Kfy4u0EF8Lclc3kRrFOFCutuUuKS1uJgSI+K4Y5m5tGP1ru9q97tiWUes2nGujahvVZtPsG51+p1stNGiH4gTiVUwDInNJld3x53OAOHIZUB9SbRVneAFM/SRiD3GkeHQsDkdMGUxjoeJmsvQDG2e1+pa8mE3qVMn8ZUloIrR7GPMH+pB2Ag7psXY3jrR7DJgkBKTAS4YzQXHGRTNe0SrjoVlZoQqFTFwBqVRh13IaVZ2RKAlBQtWj2M9CqCSLJG+Nznb/loYwy615XzHLT9+HxZ1+K/ogfHwiHZispwtilnDmIjKKYs4XbRknF1YRvpP5RB4y0VSeErxDcvzpnSuSJCVR9lUVsEvvU8NRZP20qDKZvyK4ZHx5VQulFzrQLsbyiiqvlWy1yvJB1KXGpSK8LqTO1CeAMyFU22m8BKqXIfQv3RMl6pPMpf0YX8YXdMIRh0jQRsmXX3gkTIDJR4InCL/56gvkKKXoG4cNP2e7CsVbQiL+9LmBXSz9hHkk/tZx6r+P60ysgzyiTvEy4ITO5UreCNsPiIFjEZYICYvTw+DnApxLfmwsm1xi4YJNzxmHj78oUptaKsI4zij3empuONTLHCffJuC+O/0RJtfk/SW7YR9esr8G9xOhXBFSS1/y384ayemCQZV3eY6lpW7Em1Ekp/MDfd4DPCPRTtMwurVuvXMo0dfXdrds4FEl7T/Mf1oOenp6Htq/AQ==</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=nVdbk6q6En73V1iuR8sBFEGsmakKFxUV71dedmEIiHKTgKC/fgcdXTprZp3Z50nT6XR/faHz5RUbnlttAoxRFDuBX1Tlt9I/sGbxNGfAikGzVoU1BLoiWAhVWM40eMusV2lGKBVVjBOk+jg2/PitRGS1Ci1UGHrGMM1ao1nnXlimqpeKCxRhYpqovNClYua5Pm5e3L6VkshvBgZ2cNM3PISbMWxOgdZvEs2mccNUen+9orw4jN63cRw2KQq+mAgi14UvMPCoV+pJ59XEzalj+0acROjDp4nfSh9n0zR9SWsvQWRTVZqmKVqgiI6JHftX6b1wO4xM1beC61oy/MB3oOE6ZyMHpaF4G5hF4NpB5MRb7xvTDMXQuekKymAFMqz/q0T9dnBB90NLTyAjbFTw1mBuxibIQhHyISrOJ+pb6dfPKng9O4sMH1tB5OFP6/8GCflH5AYhMiv4FtkN3c8tfpGu91cEm6oP3QQ7RzTI2yQ0IMLFUYQsJ+s7mDSfiYuX8hczfOswBP9LSV6pR5wENvVFZmTHRjj+f+r1WKurlYXhJujd3Az9NIrj2AyrDb5BeccumC5lmtHttwuER+UrqHupP9afG/XeVx+HgH6QAEWFHW+43wWCyLOzATQyqC43IyFgww6KDHleXfBhnwnP7GFSV5aOMRqMeQLMtI6Gmkq4fPYtY68VOlun7ojlyBsmPWdxpgd+bX5QyhvHX/P9APM06YFso8/XEh+zHD0x1Ho2yDY0lyJFreKyARJ1vOLHOsesCo59ED3KmdTrKdAXYuZt12+/Y3qMIY+rh06XIPP/qzotyEZs3BdSPiks8nnG6F1TVaksSxJAkg1SVQS2KvbPYCDa+8N277SFlBbBeN4CMjhpE5DK9lpejMc9JTUXC1dfqK2WqE3YtAPWcoFsyEq2kPVVlzaWeriutmh9KormahJsat3Q7OzTzhYOtJmWDmbqSdsp2WCm0MuLzM7I+qztNGY4m9cKy50oaBMlldOLR1lJtwN9OQnXcyGFZ2WsAbYNmLkibbXOzFswsDbZwp3S18D+Ihe3mrRYaJkyA6OCaA8WJLaZ1NJD6JnhxnO3D8Y7xPjMbC9Om7ab6Gdlp0lKW5oe2lN1U5PHShdM1vPNcrE3lq1jAXYGYHPzSEpsrILU1hupPF53e4Gubo9wAMaKKI4BSRcNNLXdBUFbBBoLnOws7UQukMxWSnWruFAW3Da3OjmHFTbatGswjQaz7i+50YGTFb+s95LNbqttV61huTc1j3MhFs5rfCwfOcNhYBZa45XSiXuZ1RlPC5uRnK1gp2zaXco9C61I47sgOp+2rmZP4iU3xKeNY1lLcTVkXd5ytdoktFwrPOHyLBjvI5oTUa1KrU/HXlwAtiYC0N7Nd+JYExt5Uk01Ha810QAtJU7AeVeNe9XFods5unBdA0HWWw53+4/CmHKqiFQ6VkhbKYWGDMy8CJ3pXGntwFy07Ui0lZY4hjIYr9Veuib5mneI8uc8ti55tBURKDUdcEKnUJvTQjyMpywLTr4491vCVjtkS5PzaP6AlP50ELKphgeWry+DveY50TxKpvNeb9DPNrOkvd+RWWXR096xpheU4z4EzqA32+7lQDZG4Xodh2UfRjBWQ09Ts/NQx7uGs/HobrnOiCNahnx17m3SedtQ9F5kT5leZ+KParxQwIl16njlXSNdlmdTLuRNybfk04nSowUdgKAlTOoHM6tW99t52udSqwv2G6M6yFxBPAlKT5/BdDLuLadeuV6oH/t9jz7PKHYQDtNpO2WV8bhcM8VZZ4bDyFknDTuLhr5ZXRsxd9TpBeeE7l6oJvsZG9YWtkeKNTqaIa+NCmN2BXXP5kPYpSbUESi81Vfbp83ZOIfeEF4H6OfpcBde5wf1OFmeRs+NdExJtyIY35b5BaTKxRa5FYz47wQmlzhmxbqoNsOcBeEY+XHpPT+Vk5dmQiiOYzbJlXFdKxzNKTItiVydkxotUaFZmmnRgOYFgZZ4+cZyrig+QZQC33JyXzmPu95SfwcIvSZGvomiyjFI4Bbh0l8s5vkqqv6EXL+Bj9EsIDyRVoSayHMyy9JyQ6ySvmbrXJ0XW4pYbzE8VyoOgnjoDyNgxSh65ojsE0ecIOiEDsqJZH6bYnKd4pik5GAck9hlXo7Gi48SQjWjnO01q2yjTmHHC12UA6a8wExc9BJuw0uCKHz9rVYMiC/SiTL7R51Kl5v+2xA/792yQXRMJ1fAeTwiIhVFXxBe9hbM90Hzj0HfzIPEdPILnaQ2jhx4RfK89btj8la5twuJ6gb5rvlZ8GSV+hzQ3ZF5dOC95+/PAcImCd94v5XkYLwcXpLjMbkUgc+5VETMUwxF89QUwYQQotMs2COfupugfsRF76g/eb7Ln/El8dafxuR79kjLFC/LHzxEpgjnDxGVtHz201fOk0uStxhl8VcyySXvlRzxX580sAlzPSIekZ80iMzf5frC1oMfEmc+wBzfzlc58zx90xQwIGYdMsSC6NH4Vwa+cv4svCf5jiUm3bRJYvT9TjGfTm8lA8Ig8WNVLl0EjxPzgjM+haj5W+kPMxfu90HmM/wtmV9p/SmZXZ5Ruus6/1u54lzaBSJyCjsXLG+ljLxLiXPffpjQHwD/GNKAURhRAIKkgE9DunVP4FMk73+I/5Q85PTz9/D+Lw==</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_firstuser20140819_1408463651414</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463651414</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35BEA3246B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID2</con:name><con:value>00FE35B4900B6B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL2</con:name><con:value>urn:dece:accountid:org:dece:00FE35B4900B6B7AE05305991F0AEE3B</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>367d7234-7241-4d7b-a8af-4949aaee6044</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b730ed41-9a43-4973-9e05-1cc0f3111ff2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>483a852d-b5ef-416a-b71e-dc91bcfdb781</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>968f939c-ba14-4534-bc41-4743e668fa65</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02011_AccountDelete_FUNC_CS_Deleting_an_account_when_Account_Blocked_and_User_forcedeleted_P1" searchProperties="true" id="3a448c92-53c7-4d73-acb4-75f34a656aed"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="c985e3a4-ff14-453e-967e-4d8c2067708e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="957d96c5-8181-4a3e-9d71-788f3e64e14c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("UserName",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="23fa0e57-1e51-4911-8e97-78e0f717ba74"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DECE_CS" id="773ee5ce-469e-4fc5-9e36-25dc78d0fa76"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS API with DECE_customersupport" id="5fa62e9a-fd57-459d-9d3b-eca7ac522651"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());


def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER2",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID2",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL2",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID2",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL2",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="2382f646-14e4-47d5-95e4-3e0d2427dfff"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set User Status" id="3c8a9d97-5c06-4cc3-b572-c156b89b4a85"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","forcedeleted");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="4c835f10-8077-4cd0-9594-925a0d10113e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL2"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="39507a71-3459-441f-bd6c-d2359893e010"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","forcedeleted");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35B47B01379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_a8f97d1a-e171-4a66-8430-7883e6d98035</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_a8f97d1a-e171-4a66-8430-7883e6d98035</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CDBCA7379EE05307991F0A9FE6:DDF4927"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B47AFD379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B47AFD379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FE35C6FA926B92E05305991F0A81AF</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35C6FA956B92E05305991F0A81AF</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FE35C6FA926B92E05305991F0A81AF</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FE35C6FA926B92E05305991F0A81AF</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35C6FA956B92E05305991F0A81AF</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FE35C6FA926B92E05305991F0A81AF</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH1chH3yERAUplLKbUqAtvb3tvly5zpC4TZw0doD21187kBQo7e1eCQl5Mp45M3N87BOGkthyPcYg5ySlij/sqf+g7sKxAxNpYNqm1kKdjtZtNQ3N7nab0AmcrtFsq4rPWAE+ZRxR3lMtw2xpRlcznRuz7bZbrmk3Ws3Wb1W5hZyJ0MKlYajKOokpc8u0PbXIqZsiRphLUQLM5dide5MLV3i6qMKk9k82KMuEeT/iPHN1HTcCwBDHuIHTRD/R93xOAubOSUgRL3LY5gxYT93uXa1WjVWzkeahbhmGoRuOLnwCRsLvav9btRkCny7SzfoU0ZQSjGLyiiSoCfAoDRQvDtOc8Cj5ILSpm4YMrcEaa9hs0e+q/pagRPfFSHsgc4Y0FiGzCnYNC8iBYlD+uvZ76vevTXCz9yZHlC3SPGEH6z+DBHQJcZpBoLGqsgrd1yMeaVf/BLDrUxwXjCxhKmmSIQxMucxhQdYXhAnyBUwpx6+smfiRimWA/2QsJ/ouVgFdP9KdIQmB8f8zs915baLcoriAPqYTwx8P+cPl4Ok1udevxveD7p1+Z9t+r4Sw67wBVY97uz4ka82t7SY8++V1HuLZ9Odv60cxIiyf3LTun0LzYvpzmk0f7dffr1Y7vc+xf34Bd3jszDskWy2sGK1u9Ucvizp2OBtfEX98/Q3hsP00Or+ckvSVJ+SeBH97uCA/llm4IvxmCrNXmrQvb1/8X16U03tqWKEThfogG4CziKLk52345F2ms4uH828heQ6iCT3zrodXP8aDiYGM3ltNuzXsGytJmBcPj4B5tZT08IfKSMwL8c/lRVpIoC1KVzeTGsU4UK725S4pLW4hBIgErhjmZm0Yo7Nm+7Qz8hyrM3CsM6PdNNqOY44Mr2t6o0qDNigOIJ6mdEFkLqmyG/58DhAnLgMaQK4t0wJHwNRPIg4RR4pPr8XhSCmDm1So+CqLmG23H5eryDRXC/LUWj1a0Uu0VJVpymd0lnsLDvm+dHf3pPsaMMkISH2XBGeC4YyLXjyjZcFjs7FEDQqFuAFyKcKu1eq2dUaSLAaJVE/SoIihkUVZ2Rmdbf4tDWFWWsu2YlYevg9rO/xWtUH4BEQ6MFnPAMQo4cg9ZFTFHC/aMg7uqyq8VwREnjHRU54TvEGy/+mNKpIjNU+2VVWwa+9Dw15k/bCoOlmwJLgmfH1TC6EXMtCvxvKMGs+NYrksykHYUuJyEV4XSmfqc8CF0KmXm/QJqF6H0L90TdSoDzLX9n18BY/onCMOiaCNUi6/8EaYA5NvBF/wff3VB8heStE3Dmt+zHYai6eERPzpawO7WPoJ86X4W6V58DauI7F28og6xcOAExrKlbwQXj4gBk5FWCIULM13gx8LcCz5vrFuco2FCzY9FBw+/qJIaeqpCOO0oNwfqqVhVy5LnPwlA/fN6V2YUpK3d+yafXjH3k0u5kK4EqTWvuS/nTVS0gWDKq/yEktPXYsno0hOwx153gJ8r9CDlu2Nhk3b8UqFtjcK7ZyeGXUD9yrpvzO/t+z09PA89P8F</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3vr4iyj1chHxA+ooJEoexmt7S9QLttX65cZwLeTWyInRD49dcOTQqU9navhIQ8Gc+cmTk+9jlHceR4fc4hEYRRzR929X9ablhv1p/bRttysNGAdstoN8PACBxsP9dbgWODo2s+5yn4lAtERVd3LLthWG3D7sxs13Mbnu3W2lb7SdfuIeEytHSpWbqWxxHlXpG2q6cJ9RjihHsUxcA9gb1pf3zlSU8PlZj03vkOZZEw6S2EWHqmiWsBYIgiXMMsNs/NA5/zgHtTMqdIpAm85Ax4V3/Zu16va+t6jSVz07Esy7Q6pvQJOJl/0Xtn5WYIfBqy3XqAKKMEo4hskQI1BrFggdaP5iwhYhG/E9o2bUuFNiDHBrYb9ItuviYo0H0y0gHIhCODL5BdBptACAlQDNrdxO/qXz43wd3eWYIoD1kS86P1n0ECmkHElhAYvKysRPf5iCfa1TsH7PkURyknGVwrmiwRBq7dJhCS/IpwSb6Aa8X4tZzLHylZBvhPxnJu7mOV0M0T3RmSOXDxf2a2P69dlHsUpdCLW9n1ln19nF/nedMerdsLhEQwXDc2VreAsO+8A1WN+2V9TNaKWy+b+Ibd0d+sfpV9G49b1mTYcjr3yVNzMXdvv36j02R620+Dnw3bn5F5MMqoGPuTwfbHXXMQkrv6JnvatNl4a2/z9fyscUeiO7bFV5PMb/jpKJuvw3Tx132YTWb38exn+uMmfrh3If+9dv6euNYia33//kgeZ0N09bx6ePi5RsHF063Y0lX/zF2km/5yNHmw80Q0xvlghruvNe3XcGgsJWGaPv8CLMqlooc/1EZyXkh8LC/KQgIjLFy9pdIoLoAKvad2KWnxUilAJPDkMHdryxpd1t1Bc9TvuM2LjnNpuXXL7XTskdVv2/1RqUE7FEcQB4yGROVSKrvjz8cAcexxoAEkRsZSvACufxBxiATSfDqRh4NRDjMmVXy1+mWD5SSNnOfNEBCzmzxbr6RyXzNxQ2+SfiggOVTu9oFyTwCTJQEl74rfXBKcC9mKFcpSEdm1DNUopPICSJQGe06j7ZqcxMsIFFAzZkEaQW25WBaNMfnu3zEQ5oV1cjkrzt27ZR1/KzsgfQKiHLiq5QLkFOHEFWSVhbxbsGPvF1yGl4eBqOMl2ykSgndIDj+9skTRo6KIrKiEXHkeGw6imscFVYmCjOCK59UFLfVdnv5eOY4Vqq1qaZalxQBaStkSGd6UAmebU8CplKfNjP0GalYhzE/dDhXqo8yV/RBfKhZ0KpCAWNJFK5afeBpMgaungS9pnn/23XGQUvZNQC5O2QaRfEEoxB8+MrCHlZ8038q/NUuC13GdiLWXR9Yp3wOC0LlaqXtg8w4pMJNhiRQuluwHPxXgVPJDY9XkCouQbHpOBbz/RVOK1NURxiylwh/qhWFfJQucYrME79XpTZhCiV+u1py/e7U+jK+mUq9ipFe+5L+dDVLQBYOubvACS1fP5UtRJqfzPVV+AfhWmC8arQvLqrc6/UKYWzth7gwuraqBB5X03pjfWvZ6enweev8C</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH1chH3yERAUplLKbUqAtvb3tvly5zpC4TZw0doD21187kBQo7e1eCQl5Mp45M3N87BOGkthyPcYg5ySlij/sqf+g7sKxAxNpYNqm1kKdjtZtNQ3N7nab0AmcrtFsq4rPWAE+ZRxR3lMtw2xpRlcznRuz7bZbrmk3Ws3Wb1W5hZyJ0MKlYajKOokpc8u0PbXIqZsiRphLUQLM5dide5MLV3i6qMKk9k82KMuEeT/iPHN1HTcCwBDHuIHTRD/R93xOAubOSUgRL3LY5gxYT93uXa1WjVWzkeahbhmGoRuOLnwCRsLvav9btRkCny7SzfoU0ZQSjGLyiiSoCfAoDRQvDtOc8Cj5ILSpm4YMrcEaa9hs0e+q/pagRPfFSHsgc4Y0FiGzCnYNC8iBYlD+uvZ76vevTXCz9yZHlC3SPGEH6z+DBHQJcZpBoLGqsgrd1yMeaVf/BLDrUxwXjCxhKmmSIQxMucxhQdYXhAnyBUwpx6+smfiRimWA/2QsJ/ouVgFdP9KdIQmB8f8zs915baLcoriAPqYTwx8P+cPl4Ok1udevxveD7p1+Z9t+r4Sw67wBVY97uz4ka82t7SY8++V1HuLZ9Odv60cxIiyf3LTun0LzYvpzmk0f7dffr1Y7vc+xf34Bd3jszDskWy2sGK1u9Ucvizp2OBtfEX98/Q3hsP00Or+ckvSVJ+SeBH97uCA/llm4IvxmCrNXmrQvb1/8X16U03tqWKEThfogG4CziKLk52345F2ms4uH828heQ6iCT3zrodXP8aDiYGM3ltNuzXsGytJmBcPj4B5tZT08IfKSMwL8c/lRVpIoC1KVzeTGsU4UK725S4pLW4hBIgErhjmZm0Yo7Nm+7Qz8hyrM3CsM6PdNNqOY44Mr2t6o0qDNigOIJ6mdEFkLqmyG/58DhAnLgMaQK4t0wJHwNRPIg4RR4pPr8XhSCmDm1So+CqLmG23H5eryDRXC/LUWj1a0Uu0VJVpymd0lnsLDvm+dHf3pPsaMMkISH2XBGeC4YyLXjyjZcFjs7FEDQqFuAFyKcKu1eq2dUaSLAaJVE/SoIihkUVZ2Rmdbf4tDWFWWsu2YlYevg9rO/xWtUH4BEQ6MFnPAMQo4cg9ZFTFHC/aMg7uqyq8VwREnjHRU54TvEGy/+mNKpIjNU+2VVWwa+9Dw15k/bCoOlmwJLgmfH1TC6EXMtCvxvKMGs+NYrksykHYUuJyEV4XSmfqc8CF0KmXm/QJqF6H0L90TdSoDzLX9n18BY/onCMOiaCNUi6/8EaYA5NvBF/wff3VB8heStE3Dmt+zHYai6eERPzpawO7WPoJ86X4W6V58DauI7F28og6xcOAExrKlbwQXj4gBk5FWCIULM13gx8LcCz5vrFuco2FCzY9FBw+/qJIaeqpCOO0oNwfqqVhVy5LnPwlA/fN6V2YUpK3d+yafXjH3k0u5kK4EqTWvuS/nTVS0gWDKq/yEktPXYsno0hOwx153gJ8r9CDlu2Nhk3b8UqFtjcK7ZyeGXUD9yrpvzO/t+z09PA89P8F</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_firstuser20140819_1408463655136</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463655136</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35C6FA966B92E05305991F0A81AF</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID2</con:name><con:value>00FE35B47AFD379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL2</con:name><con:value>urn:dece:accountid:org:dece:00FE35B47AFD379AE05307991F0A9CE0</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1ef77446-3aac-40aa-b9d1-b638a115d3e6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5fa62e9a-fd57-459d-9d3b-eca7ac522651</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2382f646-14e4-47d5-95e4-3e0d2427dfff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3c8a9d97-5c06-4cc3-b572-c156b89b4a85</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02012_AccountDelete_FUNC_CS_Deleting_an_account_when_Account_Blocked_and_User_other_P1" searchProperties="true" id="ebe46976-126e-47fa-94fd-8beb7571baf7"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="180b5d97-1e15-4feb-8cbe-95cf5e1a77e5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="d90bc8c8-7f62-4a15-a2f8-2ac1f0acf327"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("UserName",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="af03aff8-4868-4db1-b4eb-6db7095f78b9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DECE_CS" id="3dc5cbb5-5fae-4446-a8b5-a0469e7509e4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS API with DECE_customersupport" id="0542a010-5c58-4f1e-b10d-654c05a7ec29"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());


def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER2",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID2",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL2",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID2",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL2",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="183b8519-c26e-4d22-9c3d-963e2362fe3a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set User Status" id="d6d7f9f5-3201-40cb-9af3-03d2601fe581"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","other");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="39d42def-d314-49bd-b4a6-de6b992163d5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL2"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="ae0dbade-d402-4f56-bf8d-c91122024bf3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","other");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35B56E7D6B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_2e4f0948-bd4f-4490-9669-fc8e766c1d17</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_2e4f0948-bd4f-4490-9669-fc8e766c1d17</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CCD8EF37A8E05307991F0ABBBB:77152E04"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B56E796B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B56E796B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FE35CE62E737A4E05307991F0A2173</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35CE62EA37A4E05307991F0A2173</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FE35CE62E737A4E05307991F0A2173</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FE35CE62E737A4E05307991F0A2173</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35CE62EA37A4E05307991F0A2173</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FE35CE62E737A4E05307991F0A2173</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj6uQC+EWARK3tvRGS9oeti9HxpmA28SB2IF0f/3agYRLaU/3SEjIk/HMNzOfP7vJUBhYTocxiDmJqDLst9R/LbB9o2HXtaln+5ptNwytUa02NB/XoVatYtMza6oyZCyBIWUcUd5SLcO0NaOumY1Hs+JUbMcyS6Zlv6jKM8RMhBYuJUNV0jCgzMnSttQkpk6EGGEORSEwh2PH7dzeOMLTQTkmtd3coMwSxu055wtH13HJAwxBgEs4CvWmfuDT9JjjkhlFPIlhm9NjLXW7d71el9blUhTPdMswDN1o6MLHY2R2prZ/5JvBG1I/2qx7iEaUYBSQ30iCugU+jzylE8yimPB5+EloUzcNGVqDFGvYtOmZqu8SZOi+GekAZMyQxubIzIONwYcYKAblaTxsqWffm+Bm72OMKPOjOGRH67+DBHQFQbQAT2N5ZTm670c80a52E7AzpDhIGFnBnaTJAmFgyn0MPklvCBPk85iSjV9JmfiRnGWA/2YsTX0fq4Cun+hOn8yA8f8zs/15baI8oyCB9uv1ZJoaL8+1l/Xda8OK1ww9jJfhY9mqtzII+84bUMW4t+tjshbc2m5i516/v+K36dOtNfYZGCNyTa6e7BmtP131JtPLrns3m6XT8Q266JXvk1o9ubx+QItJ0L287L65vYsL1k+w7rurxY+rSxrXvdHDvMvGbqgnV3pYHa3Kae/RCCm+ftW7z4OLif7QWy/7P93L6fJmOQnvf197FaiYUbh+v/u5fLDqv9Z81PjhTRfnxvr9n+dJ+OYHnu1e/Grtatqv4dCYS4KbTF8B83wp6THsK+diXoh/LS/SQjzNz1ydhdQoxoFytS13SWlxEiFAxHPEMDdrwzgflCu9QdUa1Mq1jj0wKmWj1miY50bHMmvlXIM2KI4g9iLqE5lLquyGP18DxKHDgHoQa6sowXNg6hcR+4gjZUjH4nBElMFjJFS8uvTjMIwDY/5aL4vznq69sm1OsarcRXxER3HH5xAfKnf9QLnHgMmCgJR3yW8mCM64aMUSrRIemKUVKlFIxAUQSw12LLte0RkJFwFIoHoYeUkApcV8kTVGZ5t/S0OYZdasq5hlZ+/T0o6/5V0QPh6RDkzW0wUxSThxDZl5MaeLtoyj6yoP30k8Io+YaCmPCd4gOfy0Y4qkSEGTbVU57ML72HAQWT8uqkjmrQgu+F5c1ELnhQq087EsUWlZSlarJBtETSpcLMLrQuhM3QWcCJl6f4zegOpFCP1bt0SB+ihzYT/El/A5dTniEAraKNnyG08EF5h8IgwF3dPvvj8OUoq+cUj5KVsvEC8JifjLxwZ2sPQT5nvxt45ibzeuE7H28og6xbuAEzqTK3kfvH9CDByJsEQIWBTvBz8V4FTyQ2PR5AILF2yaJhw+/6JIZWqpCOMooXzYVzPDvlpmOPn7Apyd04cwmSJvr9iUfXrFTm5vXKFbIVILX/LfzhrJ6IJBlTd5hqWlpuLFKJLT2Z46bwF+FOhupTqoNard2iAT6MpGoHv93o7LB5W0P5g/WvZ6enwe2n8A</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZRU+o6EH73V3R6Hp3SFloLHWGmAipnVI6AnqMvd0K6hWibYJMW8NffpNgKiF7PnWGGyXaz++3uly855SiJ637AOaSCMKoNem39nxOn1YxsJzTqHnYMx0G2gZqubbgRajl203GscKprA84zGFAuEBVtvW7ZjmE1Dbs1sV3fdXy7VXOt5qOu3UPKZWjpUrN0bZXElPtF2raepdRniBPuU5QA9wX2x8H1lS89fVRi0junG5RFwrQzF2LhmyauhYAhjnENs8Q8NXd8TkPuj8mMIpGl8JYz5G39be9yuawtGzWWzsy6ZVmm1TKlT8jJ7IfeOSo3QzigEdusu4gySjCKyStSoK5BzFmoBfGMpUTMk09C26ZtqdAGrLCBbYf+0M33BAW6b0baAZlyZPA5sstgI4ggBYpBuxsN2vqP701ws3eSIsojliZ8b/13kIDmELMFhAYvKyvRfT/igXZ1TgH7A4rjjJMcbhRNFggD136lEJHVFeGSfCHXivFrKy5/pGQZ4L8Zy6m5jVVCNw90p0dmwMX/mdn2vDZR7lGcQcfhw9Xwdji+nEK49G4vFqvpuvH7cpRNB+0CwrbzBlQ17rf1Plkrbr1t+vPwU3SfoIvD52HfuXUnTwuCIzOIJifNev2RRT8fZ15ok+OH/PV2nT+hgJ05XvKckUaGml1v7V7w2Lm4/3V8nR9NzN7DY+93ECK2didh3k2fj7ObdHrfEvO7JBvxSXAZuMvZvXUxHDdvcJ/Pr4JHG1kRcx+PYXDlPbk96+L2Mpq+Hp3fTXI7mqbew8vrdSKs4xun/V7Tdg27xlISxtn0CbAol4oeg552LueFxNfyoiwkNKLC1V8ojeICqNA7apeSFj+TAkRCXw5zs7as837D7fZP6v2g4QVO33Ibltdq2edWULe9RqlBGxR7ELuMRkTlUiq74c/XAHHic6AhpEbOMjwHrn8RsYcE0gZ0JA8HoxwmTKq4PWP11ZTx7BWsRmP2DPZzfJKvuRThGyaGdJgGkYB0V7qbO9I9AkwWBJS+K4JzyXAuZC9eUJ6J2K7lqEYhkzdAqkTYrztN1+QkWcSgkJoJC7MYaov5ouiMyTf/dQNhXlhH/Ulx8D6ta/9b2QLpExLlwFUtZyDHCAfuIKss5NOC6/Z2wWX4IAuJOl+ynyIleINk99M7TRQ/Ko7IikrIlee+YSequV9QlSjMCa6IXt3QUuDl8e+U43hBtZdaludZMQBPSVsqw5tS4WxzDDiT+rSesGegZhXC/Nb1UKHey1zZd/FlYk7HAglIJF20YvmNt8EYuHobDCTPV999eOyklH0TsBKHbN1YPiEU4i9fGdjHyk+af8m/JUvD93EdiLWVR9YpHwSC0JlaqYtg/QkpMJNhiVQulm4HPxTgUPJdY9XkCouQbJpmAj7/oilJausIY5ZRMejphWFbJgucYr0A/93pQ5hCit/u1hX/9G79c301loKVIL3yJf/tbJCCLhh0dYUXWNr6Sj4VZXI625LlN4AflfnMPel73ZMzr18os7tR5m6v61UN3Kmk88H80bLV0/3z0PkX</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj6uQC+EWARK3tvRGS9oeti9HxpmA28SB2IF0f/3agYRLaU/3SEjIk/HMNzOfP7vJUBhYTocxiDmJqDLst9R/LbB9o2HXtaln+5ptNwytUa02NB/XoVatYtMza6oyZCyBIWUcUd5SLcO0NaOumY1Hs+JUbMcyS6Zlv6jKM8RMhBYuJUNV0jCgzMnSttQkpk6EGGEORSEwh2PH7dzeOMLTQTkmtd3coMwSxu055wtH13HJAwxBgEs4CvWmfuDT9JjjkhlFPIlhm9NjLXW7d71el9blUhTPdMswDN1o6MLHY2R2prZ/5JvBG1I/2qx7iEaUYBSQ30iCugU+jzylE8yimPB5+EloUzcNGVqDFGvYtOmZqu8SZOi+GekAZMyQxubIzIONwYcYKAblaTxsqWffm+Bm72OMKPOjOGRH67+DBHQFQbQAT2N5ZTm670c80a52E7AzpDhIGFnBnaTJAmFgyn0MPklvCBPk85iSjV9JmfiRnGWA/2YsTX0fq4Cun+hOn8yA8f8zs/15baI8oyCB9uv1ZJoaL8+1l/Xda8OK1ww9jJfhY9mqtzII+84bUMW4t+tjshbc2m5i516/v+K36dOtNfYZGCNyTa6e7BmtP131JtPLrns3m6XT8Q266JXvk1o9ubx+QItJ0L287L65vYsL1k+w7rurxY+rSxrXvdHDvMvGbqgnV3pYHa3Kae/RCCm+ftW7z4OLif7QWy/7P93L6fJmOQnvf197FaiYUbh+v/u5fLDqv9Z81PjhTRfnxvr9n+dJ+OYHnu1e/Grtatqv4dCYS4KbTF8B83wp6THsK+diXoh/LS/SQjzNz1ydhdQoxoFytS13SWlxEiFAxHPEMDdrwzgflCu9QdUa1Mq1jj0wKmWj1miY50bHMmvlXIM2KI4g9iLqE5lLquyGP18DxKHDgHoQa6sowXNg6hcR+4gjZUjH4nBElMFjJFS8uvTjMIwDY/5aL4vznq69sm1OsarcRXxER3HH5xAfKnf9QLnHgMmCgJR3yW8mCM64aMUSrRIemKUVKlFIxAUQSw12LLte0RkJFwFIoHoYeUkApcV8kTVGZ5t/S0OYZdasq5hlZ+/T0o6/5V0QPh6RDkzW0wUxSThxDZl5MaeLtoyj6yoP30k8Io+YaCmPCd4gOfy0Y4qkSEGTbVU57ML72HAQWT8uqkjmrQgu+F5c1ELnhQq087EsUWlZSlarJBtETSpcLMLrQuhM3QWcCJl6f4zegOpFCP1bt0SB+ihzYT/El/A5dTniEAraKNnyG08EF5h8IgwF3dPvvj8OUoq+cUj5KVsvEC8JifjLxwZ2sPQT5nvxt45ibzeuE7H28og6xbuAEzqTK3kfvH9CDByJsEQIWBTvBz8V4FTyQ2PR5AILF2yaJhw+/6JIZWqpCOMooXzYVzPDvlpmOPn7Apyd04cwmSJvr9iUfXrFTm5vXKFbIVILX/LfzhrJ6IJBlTd5hqWlpuLFKJLT2Z46bwF+FOhupTqoNard2iAT6MpGoHv93o7LB5W0P5g/WvZ6enwe2n8A</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_firstuser20140819_1408463658894</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463658894</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35CE62EB37A4E05307991F0A2173</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID2</con:name><con:value>00FE35B56E796B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL2</con:name><con:value>urn:dece:accountid:org:dece:00FE35B56E796B7EE05305991F0ACDC7</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67796f5b-7200-4ddf-94c3-915bf1e05658</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0542a010-5c58-4f1e-b10d-654c05a7ec29</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>183b8519-c26e-4d22-9c3d-963e2362fe3a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d6d7f9f5-3201-40cb-9af3-03d2601fe581</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02013_AccountDelete_FUNC_CS_Deleting_an_account_when_Account_Blocked_and_User_blocked:tou_P1" searchProperties="true" id="d7b53d55-518a-43a1-bc83-98b9a6e5d388"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="ac1ccaeb-8961-4964-9e47-736c9b06660e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="8488b3aa-5cb4-4d5a-8697-eefd8aaa9707"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("UserName",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="0fd95707-1d8d-445a-a10f-84a2c9d2401c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DECE_CS" id="f71aae11-afb1-43ed-b556-7572f952b214"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS API with DECE_customersupport" id="a0729ca3-dc3a-48ed-b6e8-702ee927419b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());


def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER2",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID2",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL2",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID2",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL2",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="cc1f411a-bc9d-4bd3-aee0-504077f95a08"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set User Status" id="09ce5097-b4dd-448d-aadc-a436a3935193"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_UserStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked:tou");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="34062678-f39d-48a6-b994-656144ddbe8b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL2"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="0a1b638d-e78c-4a25-9959-0f6ca86e3ed4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","blocked:tou");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35B56E8C6B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_1207b044-44fe-4a77-aaaf-8c6fe672af77</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_1207b044-44fe-4a77-aaaf-8c6fe672af77</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35B4F6F3379CE05307991F0A189A:F101F322"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B56E886B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B56E886B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FE35CEC86B6B94E05305991F0A1B73</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35CEC86E6B94E05305991F0A1B73</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FE35CEC86B6B94E05305991F0A1B73</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FE35CEC86B6B94E05305991F0A1B73</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35CEC86E6B94E05305991F0A1B73</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FE35CEC86B6B94E05305991F0A1B73</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSx1VIwi0QARK3brOU0nLpafty5DoTcDdxQuxw6a9fO5AUKO3pHgkJeTKe+Wbm82c3GAr8ot1mDGJOQqo4vab6r1k0rBejXNbKZQ+0MrIsDSHkaTVc9aBqFZFnWariMJaAQxlHlDfVomGWNaOmmfWpWbErZbtYLlg141lVHiBmIrRwKRiqsgl8yuw0bVNNYmqHiBFmUxQAszm2J+3hjS08bZRhUluNHco0YdxacB7Zuo4LLmDwfVzAYaA39COfhsvsCZlTxJMY9jld1lT3e9frdWFdKoTxXC8ahqEbdV34uIzML9XWRbYZXId64W7dRTSkBCOfvCEJagh8EbpK25+HMeGL4JPQpm4aMrQGG6xhs0wvVf09QYrum5GOQMYMaWyBzCzYGDyIgWJQZmOnqV5+b4K7vdMYUeaFccBO1n8HCegK/DACV2NZZRm670c8065WA7DtUOwnjKzgVtIkQhiYcheDRzY3hAnyuUxJx69smPiRjGWA/2YsDf0Qq4Cun+lOj8yB8f8zs8N57aI8ID+Blv/P/Od1mz+XRv2n24fOyus+t+ePs75PWDOFcOi8A5WPe78+JWvOrf2mRXthDa0ZKXVn7mCzfFpON2ODenN4HNaCQd/dWqvJfD2dXHul5Hn5fPWoT+4YKU6fRr/uBusw7s4GT8n9eBHf/YwvBj/eNsb61R9dLx+Se8vbRonvkCFZLgPvqkJuF3V92B2Ot9TxwRz8HpXF0XEfbme++fKLraN2rTOahQOnXn16QxcsGpvFH08e7vdWj/fXle3LvPle02ENx8ZMEibJyytgni0lPZyeciXmhfjX8iItxNW81NWOpEYxDpSrLblLSoudCAEiri2GuVsbxlW/VOn2u7Vqp9qpl/tGpWRU6nXzymibHauUadAOxQnEbkg9InNJld3x52uAOLAZUBdibRUmeAFM/SJiD3GkOHQsDkdIGUxDoeLW6zZ4MQyPx8xiVhVKphuVMEGqchvyER3FbY9DfKzctSPlHgMmEQEp75LfTBCccdGKJVol3DcLK1SgkIgLIJYaLPbVKjojQeSDBKoHoZv4UIgWUdoYne3+ixrCLLWmXcUsPXuflnb6LeuC8HGJdGCyng6IScKZa8jMijlfdNE4ua6y8O3EJfKIiZbymOAdkuNP70yRFMlpsq8qg517nxqOIuunReXJ3BXBOd/zi1rovFCBVjaWJSosC8lqlaSDsKTCxSK8LoTO1CeAEyFT22n4G6ieh9C/dUvkqE8y5/ZjfAlf0AlHHAJBGyVdfuOJMAEmnwiOoPvmu++Po5Sibxw2/Jyt64uXhET85WMD21j6CfOd+BOa576P60ysgzyiTvEu4ITO5UreB9tPiIFDEZYIAQvjw+DnApxLfmzMm5xj4YJNLwmHz78oUpmaKsI4TCh3empqOFTLFCffRmC/O30Ikyry/ordsE+v2MfhzUToVoDU3Jf8t7NGUrpgUOVNnmJpqhvxYhTJ6fxAnfcAPwp0p1Lt14REW/1Dge72uu9cPqqk9cH80XLQ09Pz0PoD</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3vV0Tp41bIBcIlKkjcqqa7pS1QdtuXI9cZwG2wQ+xw6dcfOzQpUOhhHwkJeTKeWTOzvOwLjmah4zU5h1gQRjW/U9f/cUvotepYtlGqVctGKSg5Rq0cjA3s1lzsuDYCVNQ1n/MEfMoFoqKuS/eSYVUNuza0Xc8teU6xYFuVF10bQcxlaOlSsHRtNQsp99K0dT2JqccQJ9yjaAbcE9gbNG9vPOnpoQyT3rjYoEwTxo2pEJFnmrgQAIYwxAXMZuaFueNzEXBvQCYUiSSGz5wBr+ufe5fLZWFZLLB4YjqWZZlWzZQ+ASeTc71xlm2GwKdjtlm3EWWUYBSSD6RA3YKYskBrhhMWEzGdHQltm7alQhuwwga2S/RcN78SpOhOjLQDMubI4FNkZ8H6MIYYKAbtse/X9fPTJrjZO4wR5WMWz/je+u8gAV1AyCIIDJ5VlqE7PeKBdjUuAHs+xWHCyQJ6iiYRwsC1+xjGZHVDuCRfwLV0/NqKyx/JWAb4b8ZyYW5jldDNA93pkAlw8X9mtj2vTZQRChNo/Ooyy6QPwvdD9wqz6I3g1lvnsUZ+83oKYdt5Ayof9+d6n6w5tz43vcTN60k4Gjp3o7vOfUfiSgZWx8LOSy16XAEpN218dXP/8NEbt8gHfRrN17V2b/nkiu7ly7V4Rv0oee8iXOzD6sz3fWT33oH1+qPm4xyuH25E5y56LbJfo0GLXdvXQXG5soJ2ezIfvz2vn8N53HpOlsOo9CdZNqOZM6JV/tqPO1eXZ3+iK7y6tjm0XwbtaPI4XfL6V03bNewaM0kYJK9vgEW2VPTwO9qlnBcSP8uLspDAGKeuXqQ0igugQm+oXUpavEQKEAk8OczN2rIuu0W33W1Xy91yq1bqWm7Rcms1+9Jq2q1KMdOgDYo9iG1Gx0TlUiq74c/PAPHM40ADiI0FS/AUuP5DxA4SSPNpXx4ORjkMmVRx256L13UYVCtiOrXtxP6Y1gIcwYejaz0m7uhd3BwLiHe1u7qj3X3AJCKgBF4xnEuKcyGbMUeLRIR2YYEKFBJ5BcRKhT2nVHVNTmZRCAqqOWNBEkIhmkZpa0y++XcMhHlq7XeH6ck7Wtj+t6wH0icgyoGrWlog5wgHLiE7K+RowY69XXAWvpkERB0w2VARE7xBsvvpiyeKIDlJZEUZ5Nxz37AT1dwvKE8ULAjOmZ5f0VLh5flvZOOYo8K8kCwWSTqAitK2WIY3pcTZ5gBwIgVqPWTvQM08hHnS/ZCj3suc23fxJWJKBwIJmEm6aOnyhMfBALh6HPiS6KtTXx47KWXfBKzEIVs7lG8IhfjHZwb2sPKT5nv5t2Rx8DWuA7G28sg65YtAEDpRK3UTrI+QAjMZlkjpYvF28EMBDiXfNeZNzrEIyabXRMDxL5rSpLqOMGYJFX5HTw3bOpniFOsIvC+nb2FSLf68XFf86OX6dHszkIo1Q3ruS/7b2SApXTDo6g5PsdT1lXwryuR0sqXLnwC/S3PLLXerrXKr0t2W5nanXckbuFNJ45v5u2Wrp/vnofEv</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4jSx1VIwi0QARK3brOU0nLpafty5DoTcDdxQuxw6a9fO5AUKO3pHgkJeTKe+Wbm82c3GAr8ot1mDGJOQqo4vab6r1k0rBejXNbKZQ+0MrIsDSHkaTVc9aBqFZFnWariMJaAQxlHlDfVomGWNaOmmfWpWbErZbtYLlg141lVHiBmIrRwKRiqsgl8yuw0bVNNYmqHiBFmUxQAszm2J+3hjS08bZRhUluNHco0YdxacB7Zuo4LLmDwfVzAYaA39COfhsvsCZlTxJMY9jld1lT3e9frdWFdKoTxXC8ahqEbdV34uIzML9XWRbYZXId64W7dRTSkBCOfvCEJagh8EbpK25+HMeGL4JPQpm4aMrQGG6xhs0wvVf09QYrum5GOQMYMaWyBzCzYGDyIgWJQZmOnqV5+b4K7vdMYUeaFccBO1n8HCegK/DACV2NZZRm670c8065WA7DtUOwnjKzgVtIkQhiYcheDRzY3hAnyuUxJx69smPiRjGWA/2YsDf0Qq4Cun+lOj8yB8f8zs8N57aI8ID+Blv/P/Od1mz+XRv2n24fOyus+t+ePs75PWDOFcOi8A5WPe78+JWvOrf2mRXthDa0ZKXVn7mCzfFpON2ODenN4HNaCQd/dWqvJfD2dXHul5Hn5fPWoT+4YKU6fRr/uBusw7s4GT8n9eBHf/YwvBj/eNsb61R9dLx+Se8vbRonvkCFZLgPvqkJuF3V92B2Ot9TxwRz8HpXF0XEfbme++fKLraN2rTOahQOnXn16QxcsGpvFH08e7vdWj/fXle3LvPle02ENx8ZMEibJyytgni0lPZyeciXmhfjX8iItxNW81NWOpEYxDpSrLblLSoudCAEiri2GuVsbxlW/VOn2u7Vqp9qpl/tGpWRU6nXzymibHauUadAOxQnEbkg9InNJld3x52uAOLAZUBdibRUmeAFM/SJiD3GkOHQsDkdIGUxDoeLW6zZ4MQyPx8xiVhVKphuVMEGqchvyER3FbY9DfKzctSPlHgMmEQEp75LfTBCccdGKJVol3DcLK1SgkIgLIJYaLPbVKjojQeSDBKoHoZv4UIgWUdoYne3+ixrCLLWmXcUsPXuflnb6LeuC8HGJdGCyng6IScKZa8jMijlfdNE4ua6y8O3EJfKIiZbymOAdkuNP70yRFMlpsq8qg517nxqOIuunReXJ3BXBOd/zi1rovFCBVjaWJSosC8lqlaSDsKTCxSK8LoTO1CeAEyFT22n4G6ieh9C/dUvkqE8y5/ZjfAlf0AlHHAJBGyVdfuOJMAEmnwiOoPvmu++Po5Sibxw2/Jyt64uXhET85WMD21j6CfOd+BOa576P60ysgzyiTvEu4ITO5UreB9tPiIFDEZYIAQvjw+DnApxLfmzMm5xj4YJNLwmHz78oUpmaKsI4TCh3empqOFTLFCffRmC/O30Ikyry/ordsE+v2MfhzUToVoDU3Jf8t7NGUrpgUOVNnmJpqhvxYhTJ6fxAnfcAPwp0p1Lt14REW/1Dge72uu9cPqqk9cH80XLQ09Pz0PoD</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_firstuser20140819_1408463662494</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463662494</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35CEC86F6B94E05305991F0A1B73</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID2</con:name><con:value>00FE35B56E886B7EE05305991F0ACDC7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL2</con:name><con:value>urn:dece:accountid:org:dece:00FE35B56E886B7EE05305991F0ACDC7</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>884bceae-9009-4b41-917e-af6669273de8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a0729ca3-dc3a-48ed-b6e8-702ee927419b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f71aae11-afb1-43ed-b556-7572f952b214</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02014_AccountDelete_FUNC_CS_Deleting_an_account_No_ManageAccountConsent_Policy_P1" searchProperties="true" id="bd873c79-8201-4322-b8d5-5d8a912c7320"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="0ee7101a-7b61-42c4-a578-a2fdfbbe8369"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="096cc4d3-3f1c-4391-82f5-44e887bebfc9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("UserName",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="8f6fc8cb-a750-42ad-ba38-e842e80609a1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DECE_CS" id="3554ab87-8061-41a8-a497-13ae1d1c106a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS API with DECE_customersupport" id="8d3d417c-7846-403a-bad0-25f5d74b61b8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());


def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER2",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID2",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL2",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID2",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL2",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config></con:testStep><con:testStep type="groovy" name="Update MAC Policy" id="e30e7eda-8411-42f9-b61d-3d16f5b40d92"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_Policy_Status")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","deleted");
myTC.setPropertyValue("Policy","105");
myTC.setPropertyValue("User_OID",tC.getPropertyValue("user_oid1"));
myTC.setPropertyValue("UserName",tC.getPropertyValue("UserName1"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="0863f63d-6e32-4ead-a612-044eff8dd0a9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL2"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="d3a5c0bb-4455-434d-bf14-6f6546cab276"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35B4903A6B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_2f92a396-41eb-41f0-9946-f841296eca45</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_2f92a396-41eb-41f0-9946-f841296eca45</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CC6EE26B80E05305991F0A0CC0:1CCF105B"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B490366B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B490366B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FE35BEA3436B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35BEA3466B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FE35BEA3436B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FE35BEA3436B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35BEA3466B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FE35BEA3436B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH1HIJwGighQKrWhh2wJ3v16uXGcC3ps4aeyEtL/+2oGkwNLe7pUQkSfjmTMzJ8e+YCiOLM9nDDJOEqpMxwP1byvsW8juu5pjwqP4Cw2t33dcLew5ptV3ASOnoypTxnKYUsYR5QPVMkxHM3qa2V+ZHa/jeFav7fbMn6ryFTImQguXtqEqZRxR5lVpB2qeUS9BjDCPohiYx7G39OczT3h6qMakDi92KKuE2XDDeerpOm4HgCGKcBsnsX6hH/lcBMxbkjVFPM9gnzNgA3W/d7vdtrd2O8nWumUYhm70deETMLL+rA4/1ZshmNIw2a0vEU0owSgiL0iCmgPfJIHiR+skI3wTvxHa1E1DhtagxBo2HfpZ1V8TVOg+GOkIZMaQxjbIrIMtIIQMKAblr8V0oH7+2AR3e1cZoixMspidrP8MEtACoiSFQGN1ZTW6j0c8067hBWBvSnGUM1LAF0mTFGFgyn0GISlnhAnyBUypxq+UTPxIzTLAfzKWC/0Qq4Cun+nOmKyB8f8zs8N57aJ8RVEOw57zTNxSf+rYt3ete+PBvkZpufWd7sYfVBAOnXegmnHv16dkbbi13xQXJONWOZrk1zdOa9NqPbn3P+b3o2BzmTkzu/xiomubhSX51hpHl2SxeAlnTjHKf37Prr/9yPW7Vnqjx7PHEMzFp+veMtXj2+TWAT9ddW+/LvvTXw94FTzYaUbJRL/PusZ4Oy5u1jeTqOya3+bT+byYrFloLvPWD/cBfGu5Tp5ct/VpvolmU/7z0dl0ty/b1a3YNHit6bCGY2MtCcv88RdgXi8lPaZj5UrMC/H35UVaSKCFlauXSo1iHChXh3KXlBYvFwJEAk8Mc7c2jKuJ3RlNfNux3VHPmRgd2+j0++aV4V/5o06tQTsUJxAvExoSmUuq7I4/7wPEsceABpBpRZLjDTD1nYhjxJEypQvxcSSUwSoRKh4mz3a345IYF/9YL7YLv4zA6FuOqnxJ+B29y/yQQ3as3L0j5V4AJikBKe+S30wQnHHRiidU5Dwy2wVqU8jFAZBJDfYsp9fRGYnTCCRQPU6CPIJ2ukmrxuhs97Q0hFllrbqKWfXtvVna6bu6C8InINKByXpGICYJZ44hsy7mfNGWcXJc1eH9PCDyExMt5RnBOyTHr16ZIinS0GRfVQ278T41HEXWT4tqkgUFwQ3fm4Na6LxQgWE9lifUfmrnRZFXg+hKhctEeF0InakvAedCpp5XyT9A9SaE/qFTokF9krmxH+PL+YYuOeIQC9oo1fIDV4QlMHlFmAq6lx+9fxylFH3jUPJztstI3CQk4ncvG9jD0k+Y78Vjm2TB67jOxDrII+oU9wJO6Fqu5Hnw/AYxcCLCEiFgSXYY/FyAc8mPjU2TGyxcsOkx5/D2G0Uq00BFGCc55dOxWhkO1bLCyZ9T8F6dfgtTKfL+iC3Zm0fs9/lsKXQrRmrjS/7bWSMVXTCo8iSvsAzUUtwYRXK6PlDnPcAzAu30Ddt1R13/UKAnE3vUNPCokuFv5t8tBz09/R6G/wI=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxGlj1VIAoGSqCBBKd30g7bA0qovV8YZgkuwaexAyq+/dmhSoLSXvRIS8mQ8c2bm+NjnHM2jstfiHGJBGNX8TkP/Z4IhGI+duoExYMMJLMtAZbtuBDCuWqjmuBPX1jWf8wR8ygWioqGXLdsxrLphu0O76lUdr3xWsmz7RddGEHMZWrqULF1L5xHlXpa2oScx9RjihHsUzYF7AnuD1t2tJz09lGPSm+cblFnCuDkVYuGZJi4FgCGKcAmzuXlu7vicB9wbkJAikcTwkTPgDf1j72q1Kq0qJRaHZtmyLNNyTekTcBKe6M1f+WYIfDphm/UFoowSjCKyRgrUHYgpC7RWFLKYiOn8m9C2aVsqtAEpNrDt0BPd/EyQoTsy0g7ImCODT5GdB+vDBGKgGLQ/fb+hnxw3wc3eYYwon7B4zvfWfwcJ6BIitoDA4HllObrjIx5oV/McsOdTHCWcLKGnaLJAGLj2EMOEpLeES/IFXMvGr6Vc/kjOMsB/M5ZzcxurhG4e6E6HhMDF/5nZ9rw2UUYoSqD5NAqcuygad8bBuluZ+P16N2Jul0e9sJFB2HbegCrG/bHeJ2vBrY9N7+bFSy/yX4ftu1d8tiLs+VUksDCvT38vWsn9cJm2eac3HdeSaxb0nRcWVqq38ePrC79/mF2t36+vu4lbGY5FZPJfN9cXrw/1P/2u6Y/E6dNTr/V7lbqn69MnMXhe33RsdDPp9DqPs+eu27IhHYfuYD0drblzW+un+HF2HZGH8CG+mtVrv6rOW3QLPWsW+7Q/ersiPavxWdN2DbvGXBIGyfgVsMiXih5+R+vKeSHxs7woCwmMSebqLZRGcQFU6E21S0mLl0gBIoEnh7lZW1b3slJtX7YqTq3WrjuXVrViVV3X7lqtbqtdzTVog2IP4gWjE6JyKZXd8OdngHjucaABxMaSJXgKXP8hYgcJpMkWysPBKIchkypu46kLU6CzWlij5SqajWmc1JNwpWs9Ju7pfdyaCIh3pbu+I919wGRBQOm7IjiXDOdC9uINLRMR2aUlKlFI5A0QKxH2yk69anIyX0SgkJpzFiQRlBbTRdYZk2/+ywbCPLP2L4fZwfu2rv1veQukT0CUA1e1tEGOEQ7cQXZeyLcFl+3tgvPwrSQg6nzJfoqY4A2S3U+fNFH8KDgiK8ohF577hp2o5n5BRaJgSXBB9OKGlgIvj38zH8cbKr2VkuUyyQZwpqQtluFNqXC2OQCcSH16H7IZULMIYR51PRSo9zIX9l18iZjSgUAC5pIuWrY84m0wAK7eBr7keXrsw2MnpeybgFQcsl1E8gmhEP/4ysAeVn7S/CD/ViwOPsd1INZWHlmnfBAIQkO1UhfB+zekwEyGJVK5WLwd/FCAQ8l3jUWTCyxCsmmcCPj+i6YkqaEjjFlChd/RM8O2TGY4xfsCvE+nL2EyKf64W1P+7d36fHc7kII1R3rhS/7b2SAZXTDo6grPsDT0VD4VZXIabsnyB8ADyuy4VsWttc9a28p8eVlpFw3cqaT5xfzVstXT/fPQ/Bc=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH1HIJwGighQKrWhh2wJ3v16uXGcC3ps4aeyEtL/+2oGkwNLe7pUQkSfjmTMzJ8e+YCiOLM9nDDJOEqpMxwP1byvsW8juu5pjwqP4Cw2t33dcLew5ptV3ASOnoypTxnKYUsYR5QPVMkxHM3qa2V+ZHa/jeFav7fbMn6ryFTImQguXtqEqZRxR5lVpB2qeUS9BjDCPohiYx7G39OczT3h6qMakDi92KKuE2XDDeerpOm4HgCGKcBsnsX6hH/lcBMxbkjVFPM9gnzNgA3W/d7vdtrd2O8nWumUYhm70deETMLL+rA4/1ZshmNIw2a0vEU0owSgiL0iCmgPfJIHiR+skI3wTvxHa1E1DhtagxBo2HfpZ1V8TVOg+GOkIZMaQxjbIrIMtIIQMKAblr8V0oH7+2AR3e1cZoixMspidrP8MEtACoiSFQGN1ZTW6j0c8067hBWBvSnGUM1LAF0mTFGFgyn0GISlnhAnyBUypxq+UTPxIzTLAfzKWC/0Qq4Cun+nOmKyB8f8zs8N57aJ8RVEOw57zTNxSf+rYt3ete+PBvkZpufWd7sYfVBAOnXegmnHv16dkbbi13xQXJONWOZrk1zdOa9NqPbn3P+b3o2BzmTkzu/xiomubhSX51hpHl2SxeAlnTjHKf37Prr/9yPW7Vnqjx7PHEMzFp+veMtXj2+TWAT9ddW+/LvvTXw94FTzYaUbJRL/PusZ4Oy5u1jeTqOya3+bT+byYrFloLvPWD/cBfGu5Tp5ct/VpvolmU/7z0dl0ty/b1a3YNHit6bCGY2MtCcv88RdgXi8lPaZj5UrMC/H35UVaSKCFlauXSo1iHChXh3KXlBYvFwJEAk8Mc7c2jKuJ3RlNfNux3VHPmRgd2+j0++aV4V/5o06tQTsUJxAvExoSmUuq7I4/7wPEsceABpBpRZLjDTD1nYhjxJEypQvxcSSUwSoRKh4mz3a345IYF/9YL7YLv4zA6FuOqnxJ+B29y/yQQ3as3L0j5V4AJikBKe+S30wQnHHRiidU5Dwy2wVqU8jFAZBJDfYsp9fRGYnTCCRQPU6CPIJ2ukmrxuhs97Q0hFllrbqKWfXtvVna6bu6C8InINKByXpGICYJZ44hsy7mfNGWcXJc1eH9PCDyExMt5RnBOyTHr16ZIinS0GRfVQ278T41HEXWT4tqkgUFwQ3fm4Na6LxQgWE9lifUfmrnRZFXg+hKhctEeF0InakvAedCpp5XyT9A9SaE/qFTokF9krmxH+PL+YYuOeIQC9oo1fIDV4QlMHlFmAq6lx+9fxylFH3jUPJztstI3CQk4ncvG9jD0k+Y78Vjm2TB67jOxDrII+oU9wJO6Fqu5Hnw/AYxcCLCEiFgSXYY/FyAc8mPjU2TGyxcsOkx5/D2G0Uq00BFGCc55dOxWhkO1bLCyZ9T8F6dfgtTKfL+iC3Zm0fs9/lsKXQrRmrjS/7bWSMVXTCo8iSvsAzUUtwYRXK6PlDnPcAzAu30Ddt1R13/UKAnE3vUNPCokuFv5t8tBz09/R6G/wI=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_firstuser20140819_1408463666389</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463666389</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35BEA3476B84E05305991F0AFAB5</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID2</con:name><con:value>00FE35B490366B7AE05305991F0AEE3B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL2</con:name><con:value>urn:dece:accountid:org:dece:00FE35B490366B7AE05305991F0AEE3B</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b948c6c1-8581-4ed1-b753-d988b4da9c10</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8d3d417c-7846-403a-bad0-25f5d74b61b8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e30e7eda-8411-42f9-b61d-3d16f5b40d92</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02015_AccountDelete_FUNC_CS_Deleting_an_account_which_is_suspended_P1" searchProperties="true" id="6045b6e7-febe-4d82-a6bb-2f2a97112b8a"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="4b0c2f3c-3ed6-41fe-b7aa-d0fc3f12b1d2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="5d657c75-f456-45c9-8d7a-109ccf30f98b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("UserName",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="2c97ebf6-7638-48bc-b0fd-086f9da84a7a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DECE_CS" id="86c66ea7-0f64-4df3-abdb-4509f582c921"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS API with DECE_customersupport" id="3e547787-1c67-44f1-8222-075c64836e4b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());


def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER2",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID2",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL2",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID2",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL2",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="a5fcc0b1-d902-49c5-9c1e-4f4e14cd5ca5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","suspended");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="e608ed61-f3a4-4161-9ab5-de8dd81c2c32"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL2"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="2349f8d8-3a67-49fa-a92d-1e279ac75d7f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35B430283798E05307991F0A5105</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_740e221b-d1b3-4278-8dae-c6eb3164c247</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_740e221b-d1b3-4278-8dae-c6eb3164c247</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CE630737A4E05307991F0A2173:1A2C2901"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B430243798E05307991F0A5105</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B430243798E05307991F0A5105</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FE35CCBDD637A6E05307991F0A9C25</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35CCBDD937A6E05307991F0A9C25</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FE35CCBDD637A6E05307991F0A9C25</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FE35CCBDD637A6E05307991F0A9C25</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35CCBDD937A6E05307991F0A9C25</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FE35CCBDD637A6E05307991F0A9C25</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj1XIFQhRQeLSrtLdXilVy8uR6wzgbmKH2OHSX3/sQFKgtKd7JCTkyXjmm5nPn33GURI7QZdzyARhVAsHbf2fpmeB49gvRmS/uIbnNH3DjxAYuAEvrt3wsOM1dS3kPIeQcoGoaOuOZXuG5Rt268GuB3UvcJ2a2/LHuvYIGZehpUvN0rVVElMeFGnbep7RgCFOeEBRAjwQOBh2r34H0jNAJSa9c7ZBWSTMOjMh0sA0cS0CDHGMa5gl5pm553MW8WBIphSJPINtzoi39e3e5XJZW7o1lk1Nx7Is02qZ0ifiZHqid36UmyEK6YRt1n1EGSUYxeQNKVBXIGYs0rrxlGVEzJJPQtumbanQBqywgW2Pnujme4IC3Tcj7YHMODL4DNllsHuYQAYUgza6D9v6yfcmuNn7kCHKJyxL+MH67yABXUDMUogMXlZWovt+xCPt6pwBDkKK45yTBVwrmqQIA9duM5iQ1W/CJfkirhXj11Zc/kjJMsB/M5YzcxerhG4e6c6ATIGL/zOz3XltojyiOIdOI7+7HVEfPS2zmXU3+uUuTh9HIy80+1ftAsKu8wZUNe7t+pCsFbe2m4TNbmbR9Xzd69+MFrPB6dxZO7k5eh67q8s3Sabx5ciKbe+cwDU83z9MyIWfsq4/iVMfkpXZDa9QqzX+c0kun39Eb62Fz+hjHT2Qx/MlJxPv7rIvxtZPq/UrHj7Nk1c/avzxL82LYfw2HjTCXuw0n5569s3Phn9649W9oZk/rZtXffPH67CXvj1m8zx+xhf343r8i7ffa9qtYd9YSsIwf3kFLMqlokc40C7kvJD4Wl6UhUTGpHANUqVRXAAVekftUtIS5FKASBTIYW7WlnVx7tb7/d5g0HCb3ca5VXetZqtlX1jdVt+plxq0QXEAsc/ohKhcSmU3/PkaIE4CDjSCzFiwHM+A619EHCCBtJDey8PBKIcHJlXcTnK2bKzSuIHIwmY4niRufb22X2e6ds3EDb3JuhMB2b52+3vafQ+YpASUwCuGc0lxLmQz5miRi9iuLVCNQi6vgEypcOB4ft3kJEljUFDNhEV5DLV0lhatMfnm3zEQ5oW16Cvmxen7tLjDb2UfpE9ElANX9fRAzhKOXEROWczxoh3r4MIqw3fziKhDJpsqMoI3SPY/vXNFkaQiyraqEnblfWjYi2weFlUlixYEV4yvrmqp9FIHOuVY5qg2r+WLRV4Moqk0LpPhTSl1tjkEnEuhWj+wP0DNKoT5rXuiQn2QubLv48vFjA4FEpBI2mjF8huPhCFw9UgIJeFX332B7KWUfROwEsds/Vi+JRTiL58bOMDKT5pv5d+SZdH7uI7E2skj65QvA0HoVK3UjbD+hBiYybBEShjLdoMfC3As+b6xanKFRUg2veQCPv+iKW1q6whjllMRDvTCsKuXBU6xTiF4d/oQptDk7SW74p9esk9Xv4dSuRKkV77kv50NUtAFg67u8gJLW1/JN6NMTqc7+rwF+FGie55rOZ7bbPm7El23rUqi9yvpfDB/tOz09PA8dP4F</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbRbuI6EH3fr4iyzyEJgUKiggQBtlmV3RYo3e3LlXEG4m5iQ+wE2q+/dmhSoLS3eyUk5Ml45szM8bEvOUriutfjHFJBGNWCQUf/x263LpZOo25gC8Bo2Mg22q2FZaAwXCwu3KZz0VroWsB5BgHlAlHR0euW3TCstmG7M7vpNRueY9Valvuga3NIuQwtXWqWru2SmHKvSNvRs5R6DHHCPYoS4J7A3rQ3vvakp4dKTHr3co+ySJh2IyHWnmniWggY4hjXMEvMS/PI5zLk3pSsKBJZCi85Q97RX/Zut9va1qmxdGXWLcsyLdeUPiEnq69690u5GcKALtl+7SPKKMEoJs9IgRqDiFio9eIVS4mIkndC26ZtqdAG7LCB7Qb9qpuvCQp0n4x0BDLlyOARsstgE1hCChSDdjcJOvrXz01wv3eWIsqXLE34yfrvIAHNIWZrCA1eVlai+3zEM+3qXgL2AorjjJMcfiiarBEGrt2ksCS7a8Il+UKuFePXdlz+SMkywH8zlkvzEKuEbp7pzoCsgIv/M7PDee2jzFGcQbcOw/n3h+Dx9zJ6HA2eGvUFHcJ22Jhe4U4B4dB5D6oa98v6lKwVt142/U7vb8axz9ztzJ3fbW6S1O7zWeA/8VG+8sd+JljrYfTI27NNiq7o8gk/oOutGblDOha3I8f2v8+DkdNcZlP2xbm/bg/h1+2tP+Fz/09vHspUz79GA391d232d9v7x8ndfZY4kO9+OKzBn3t2fLG5xU2y+baLAv/qIn9mk9t53G9/+dZr9qMI49vx7M6OlubVM++81nRYw7GxlIRptngELMqlokcw0EZyXkh8LC/KQkJjWbh6a6VRXAAVelftUtLiZVKASOjJYe7XljUaOk3f7w8GrtPqXQytpmO1XNceWT3XrzdLDdqjOIHoM7okKpdS2T1/PgaIE48DDSE1cpbhCLj+QcQBEkgL6EQeDkY5zJhUcUB1yHM3cXbr3E6e2wtmQ7OB2UrXfjDxk/5Me0sB6bF0t4+kewKYrAkofVcE55LhXMhebFCeidiu5ahGIZM3QKpE2Ks32k2Tk2Qdg0JqJizMYqito3XRGZPv/+sGwrywToaz4uC9W9fpt7IF0ickyoGrWvogxwhn7qB6Wci7Bdftw4LL8L0sJOp8yX6KlOA9kuNPrzRR/Kg4IisqIVeep4ajqOZpQVWiMCe4Inp1Q0uBl8e/W45jg2qbWpbnWTGAlpK2VIY3pcLZ5hRwJvXpacb+ADWrEOanrocK9Unmyn6MLxMRnQokIJF00YrlJ94GU+DqbRBInu8++/A4Sin7JmAnztn8WD4hFOIPXxnYw8pPmm/k35al4eu4zsQ6yCPrlA8CQehKrdRF8PQOKTCTYYlULpYeBj8X4FzyY2PV5AqLkGxaZALe/6IpSeroCGOWUREM9MJwKJMFTvG0Bu/V6U2YQopf7tYdf/du/TW+nkrBSpBe+ZL/djZIQRcMurrCCywdfSefijI5XR3I8gvAt8rcbzhWveW03PahMjdtq1Lm40q6b8xvLQc9PT0P3X8B</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj1XIFQhRQeLSrtLdXilVy8uR6wzgbmKH2OHSX3/sQFKgtKd7JCTkyXjmm5nPn33GURI7QZdzyARhVAsHbf2fpmeB49gvRmS/uIbnNH3DjxAYuAEvrt3wsOM1dS3kPIeQcoGoaOuOZXuG5Rt268GuB3UvcJ2a2/LHuvYIGZehpUvN0rVVElMeFGnbep7RgCFOeEBRAjwQOBh2r34H0jNAJSa9c7ZBWSTMOjMh0sA0cS0CDHGMa5gl5pm553MW8WBIphSJPINtzoi39e3e5XJZW7o1lk1Nx7Is02qZ0ifiZHqid36UmyEK6YRt1n1EGSUYxeQNKVBXIGYs0rrxlGVEzJJPQtumbanQBqywgW2Pnujme4IC3Tcj7YHMODL4DNllsHuYQAYUgza6D9v6yfcmuNn7kCHKJyxL+MH67yABXUDMUogMXlZWovt+xCPt6pwBDkKK45yTBVwrmqQIA9duM5iQ1W/CJfkirhXj11Zc/kjJMsB/M5YzcxerhG4e6c6ATIGL/zOz3XltojyiOIdOI7+7HVEfPS2zmXU3+uUuTh9HIy80+1ftAsKu8wZUNe7t+pCsFbe2m4TNbmbR9Xzd69+MFrPB6dxZO7k5eh67q8s3Sabx5ciKbe+cwDU83z9MyIWfsq4/iVMfkpXZDa9QqzX+c0kun39Eb62Fz+hjHT2Qx/MlJxPv7rIvxtZPq/UrHj7Nk1c/avzxL82LYfw2HjTCXuw0n5569s3Phn9649W9oZk/rZtXffPH67CXvj1m8zx+xhf343r8i7ffa9qtYd9YSsIwf3kFLMqlokc40C7kvJD4Wl6UhUTGpHANUqVRXAAVekftUtIS5FKASBTIYW7WlnVx7tb7/d5g0HCb3ca5VXetZqtlX1jdVt+plxq0QXEAsc/ohKhcSmU3/PkaIE4CDjSCzFiwHM+A619EHCCBtJDey8PBKIcHJlXcTnK2bKzSuIHIwmY4niRufb22X2e6ds3EDb3JuhMB2b52+3vafQ+YpASUwCuGc0lxLmQz5miRi9iuLVCNQi6vgEypcOB4ft3kJEljUFDNhEV5DLV0lhatMfnm3zEQ5oW16Cvmxen7tLjDb2UfpE9ElANX9fRAzhKOXEROWczxoh3r4MIqw3fziKhDJpsqMoI3SPY/vXNFkaQiyraqEnblfWjYi2weFlUlixYEV4yvrmqp9FIHOuVY5qg2r+WLRV4Moqk0LpPhTSl1tjkEnEuhWj+wP0DNKoT5rXuiQn2QubLv48vFjA4FEpBI2mjF8huPhCFw9UgIJeFX332B7KWUfROwEsds/Vi+JRTiL58bOMDKT5pv5d+SZdH7uI7E2skj65QvA0HoVK3UjbD+hBiYybBEShjLdoMfC3As+b6xanKFRUg2veQCPv+iKW1q6whjllMRDvTCsKuXBU6xTiF4d/oQptDk7SW74p9esk9Xv4dSuRKkV77kv50NUtAFg67u8gJLW1/JN6NMTqc7+rwF+FGie55rOZ7bbPm7El23rUqi9yvpfDB/tOz09PA8dP4F</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_firstuser20140819_1408463669929</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463669929</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35CCBDDA37A6E05307991F0A9C25</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID2</con:name><con:value>00FE35B430243798E05307991F0A5105</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL2</con:name><con:value>urn:dece:accountid:org:dece:00FE35B430243798E05307991F0A5105</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53e21657-2911-4ad4-a8b5-fc4bba541055</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3e547787-1c67-44f1-8222-075c64836e4b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a5fcc0b1-d902-49c5-9c1e-4f4e14cd5ca5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02016_AccountDelete_FUNC_CS_Deleting_an_account_which_is_blocked_P1" searchProperties="true" id="a79d9ff5-bd93-4f3e-a02e-2bcfb6a40141"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="ec4671af-d116-4e43-869a-5ef00cb6abd3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="ba0ad4a1-ed51-41e4-9651-b1c3c319e548"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("UserName",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="92e1e285-9e8d-4725-a750-5f92b1480b98"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DECE_CS" id="a877164c-988b-45be-a31a-8a9267a2b007"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS API with DECE_customersupport" id="b7512ed6-8b1f-49c5-b735-c42011c48fbc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());


def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER2",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID2",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL2",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID2",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL2",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="6ce7b7f5-850d-47df-83a3-7cb0e7328779"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","blocked");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="29e7840f-44cc-43b6-9c2c-8f9d6eb9aaa2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL2"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="a3ca9543-8ac5-404e-aac1-fb6b4037bc30"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35B47B3B379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_2e602dd9-26f4-4a8a-9773-493bcac7696a</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_2e602dd9-26f4-4a8a-9773-493bcac7696a</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35BF587E6B96E05305991F0A65D7:AB776B5"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B47B37379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B47B37379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FE35BA2C9637A0E05307991F0A50EB</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35BA2C9937A0E05307991F0A50EB</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FE35BA2C9637A0E05307991F0A50EB</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FE35BA2C9637A0E05307991F0A50EB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35BA2C9937A0E05307991F0A50EB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FE35BA2C9637A0E05307991F0A50EB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EH2fr3B5HreMb9zsClRxS+JJQrKBeJJ52RJSA0qMDJaMSb5+JYMdYEg2s1VUUWq3uk93Hx3pjKNF5PgdziERNGZa0G/p/zhQtxxCPMOpT6tGFTWR4TUarlH13AlGuFH36kjXAs5TCBgXiImW7lh21bCahu2N7Zpfq/pureLV3V+6FkLCZWjpUrF0bbOIGPfztC09TZgfI065z9ACuC+wP+rcXPvS00cFJr19tkWZJ0zacyGWvmniCgEMUYQrOF6YZ+aBzxnh/ojOGBJpAruchLf03d4syyqZW4mTmelYlmVanil9CKez73r7W7EZSMCm8XbdQyxmFKOIviEF6gbEPCZaJ5rFCRXzxQehbdO2VGgDNtjAdpV91833BDm6L0Y6AJlwZPA5sotg9zCFBBgG7eE+aOnfvzbB7d5xghifxsmCH63/DBKwNUTxEojBi8oKdF+PeKJd7TPAfsBwlHK6hqGiyRJh4NpdAlO6uaZcko9wLR+/tuHyRwuWAf6TsZyZ+1gldPNEd/p0Blz8n5ntz2sbJURRCu2nSd3s/LAuL6eLy2iKzPHk8ab5tKo+NR9aOYR95y2octy79TFZS27tNoXQI6LJx7eP/X7698PL1dtb2IS/lherUKwm46YgYZoR8/JtvAmCEbnohkH2HLpgbXqhxzaDDnnuuc0bQshg+M0NB1l6PnPSGgkHTdbNHlmd/hwGqww1wLlYX3lds5dN7x8atU5CVvG8654/iruhO47NX7G5Sry3WnMEtHrx+vPbMBzaDF39vH0KrzOrn05wtfVe034Nh8ZCEkbp5BmwKJaKHkFfO5fzQuJzeVEWSoxp7uovlUZxAUzobbVLSYufSgGixJfD3K4t63zg1rodpyeFrdGxBlbNtRqeZ59bnZo16BYatEVxBLEXsylVuZTKbvnzOUC88DkwAomxjlM8B65/ErGPBNICdi8PR8w4jGOp4rZYRvVZNYW0Tla2DTGtode31wy96NowFrfsNulMBSSH2t080O57wHRJQQm8YjiXFOdCNmOF1qmI7MoaVRik8gpIlAr7TrVZMzldLCNQUM1FTNIIKsv5Mm+Nybf/joEwz615XzHPT9+HxR1/K/ogfQhVDlzV0wU5SzhxETlFMaeLdqyjC6sI30kJVYdMNlUkFG+RHH5654oiSUmUXVUF7NL72HAQ2TwuqkxG1hSXjC+vaqn0UgfaxVhWqLKqpOt1mg+ioTQukeFNKXW2OQKcSqF6HccvwMwyhPmle6JEfZS5tB/iS8WcjQQSsJC00fLlFx4JI+DqkRBIwm+++gI5SCn7JmAjTtl6kXxLKMSfPjewj5WfNN/JvyxOyPu4TsTayyPrlC8DQdlMrdSN8PoBMXAsw1IpYXGyH/xUgFPJD41lk0ssQrJpkgr4+IumtKmlI4zjlImgr+eGfb3McYrXJfjvTr+FyTV5d8lu+IeX7OPN9Ugq1wLppS/9b2eD5nTBoKu7PMfS0jfyzSiTs9mePu8AnpDoaqPrNtyG19mXaK83sMoGHlTS/s38u2Wvp8fnof0v</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxFlH6uQhO9EBSl87dIFWqDb2+7LletMwG1iQ+xA6K9fOzQpsLS3eyUk5Ml45szM8bEvOYrCsutxDrEgjGrDXkv/F+x6zQmQYzSccs2o+o2ygcC2DT94DJxKuVbxHUfXhpwnMKRcICpaetmyq4bVNGzn1q65tapbqZaqteYvXbuDmMvQ0qVk6VoahZS7WdqWnsTUZYgT7lIUAXcFdufeeORKTxflmPT25R5lljBuL4VYuaaJSz5gCENcwiwyL80jn0ufu3OyoEgkMbzm9HlLf9273W5L20qJxQuzbFmWaTmm9PE5WXzV21/yzeAPacD26y6ijBKMQvKCFKgxiCXzNS9csJiIZfROaNu0LRXagBQb2K7Sr7r5liBD98lIRyBjjgy+RHYebAYBxEAxaD9nw5b+9XMT3O+9jRHlAYsjfrL+O0hANxCyFfgGzyvL0X0+4pl2tS8Bu0OKw4STDUwUTVYIA9duYghIOiJcks/nWjZ+LeXyR3KWAf6bsVyah1gldPNMd3pkAVz8n5kdzmsf5Q6FCbSrPWsF7Ff4fY123FpdELH40Ru8MPqCWxmEQ+c9qGLcr+tTshbcet30eAPedfPW48PGevHsm9vu+ErcP9STIL26qy5J35r493wyDcY+naaJOft+5zXM+bQ7u3ic1dnF9udoTJ8665vUI1+m0429JNNpA3/7Vkf3zUFSeXgcLV/Cl8316p/ncn9y8wP3tkkjGvcmzfqg2pzf1NG8Y5aZ5XRYVPccbzqYhLtkFH9ZB83RVepZvk+udmy6eAgXrbeaDms4NuaSME8enwCLfKnoMexpAzkvJD6WF2UhvhFkru5KaRQXQIXeVruUtLiJFCDiu3KY+7VlDfqVWscrdx2n0vCsvlWrWA3HsQeWV7P6nVyD9ihOIHYZDYjKpVR2z5+PAeLI5UB9iI0NS/ASuP5BxB4SSBvSmTwcjHK4ZVLFE7Ek+OnpZUOj5vMuiptJiuKwWte1CRPX9Dr2AgHxsXI3j5R7BpisCCh5V/zmkuBcyFas0SYRoV3aoBKFRF4AsdJgt1xt1kxOolUICqgZMT8JobRarrLGmHz/L6UI88w6699m5+7dsk6/5R2QPj5RDlzV0gE5RThzBZXzQt4tuGwfFpyH9xKfqOMl2yligvdIjj+9sUTRo6CIrCiHXHieGo6imqcFFYn8DcEFz4sLWuq7PP3tfBxrVFqXks0myQbQUMoWy/CmFDjbnANOpDztbtkzULMIYX7qdihQn2Qu7Mf4JNnoXCABkaSLli0/8TSYA1dPg6GkefrZd8dRStk3Aak4Z+uG8gWhEH/4yMAuVn7SfCP/tiz238Z1JtZBHlmnfA8IQhdqpe6B3TukwEyGJVK4WHwY/FyAc8mPjUWTCyxCsukxEfD+F00pUktHGLOEimFPzwyHKpnhFLsVuG9Of4TJlPj1ak35u1fr/Xg0l3oVIb3wJf/tbJCMLhh0dYNnWFp6Kl+KMjldHKjyK8AzwlxtdCpepeF4h8LsdPtW0cCjStp/mP+0HPT09Dy0fwM=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EH2fr3B5HreMb9zsClRxS+JJQrKBeJJ52RJSA0qMDJaMSb5+JYMdYEg2s1VUUWq3uk93Hx3pjKNF5PgdziERNGZa0G/p/zhQtxxCPMOpT6tGFTWR4TUarlH13AlGuFH36kjXAs5TCBgXiImW7lh21bCahu2N7Zpfq/pureLV3V+6FkLCZWjpUrF0bbOIGPfztC09TZgfI065z9ACuC+wP+rcXPvS00cFJr19tkWZJ0zacyGWvmniCgEMUYQrOF6YZ+aBzxnh/ojOGBJpAruchLf03d4syyqZW4mTmelYlmVanil9CKez73r7W7EZSMCm8XbdQyxmFKOIviEF6gbEPCZaJ5rFCRXzxQehbdO2VGgDNtjAdpV91833BDm6L0Y6AJlwZPA5sotg9zCFBBgG7eE+aOnfvzbB7d5xghifxsmCH63/DBKwNUTxEojBi8oKdF+PeKJd7TPAfsBwlHK6hqGiyRJh4NpdAlO6uaZcko9wLR+/tuHyRwuWAf6TsZyZ+1gldPNEd/p0Blz8n5ntz2sbJURRCu2nSd3s/LAuL6eLy2iKzPHk8ab5tKo+NR9aOYR95y2octy79TFZS27tNoXQI6LJx7eP/X7698PL1dtb2IS/lherUKwm46YgYZoR8/JtvAmCEbnohkH2HLpgbXqhxzaDDnnuuc0bQshg+M0NB1l6PnPSGgkHTdbNHlmd/hwGqww1wLlYX3lds5dN7x8atU5CVvG8654/iruhO47NX7G5Sry3WnMEtHrx+vPbMBzaDF39vH0KrzOrn05wtfVe034Nh8ZCEkbp5BmwKJaKHkFfO5fzQuJzeVEWSoxp7uovlUZxAUzobbVLSYufSgGixJfD3K4t63zg1rodpyeFrdGxBlbNtRqeZ59bnZo16BYatEVxBLEXsylVuZTKbvnzOUC88DkwAomxjlM8B65/ErGPBNICdi8PR8w4jGOp4rZYRvVZNYW0Tla2DTGtode31wy96NowFrfsNulMBSSH2t080O57wHRJQQm8YjiXFOdCNmOF1qmI7MoaVRik8gpIlAr7TrVZMzldLCNQUM1FTNIIKsv5Mm+Nybf/joEwz615XzHPT9+HxR1/K/ogfQhVDlzV0wU5SzhxETlFMaeLdqyjC6sI30kJVYdMNlUkFG+RHH5654oiSUmUXVUF7NL72HAQ2TwuqkxG1hSXjC+vaqn0UgfaxVhWqLKqpOt1mg+ioTQukeFNKXW2OQKcSqF6HccvwMwyhPmle6JEfZS5tB/iS8WcjQQSsJC00fLlFx4JI+DqkRBIwm+++gI5SCn7JmAjTtl6kXxLKMSfPjewj5WfNN/JvyxOyPu4TsTayyPrlC8DQdlMrdSN8PoBMXAsw1IpYXGyH/xUgFPJD41lk0ssQrJpkgr4+IumtKmlI4zjlImgr+eGfb3McYrXJfjvTr+FyTV5d8lu+IeX7OPN9Ugq1wLppS/9b2eD5nTBoKu7PMfS0jfyzSiTs9mePu8AnpDoaqPrNtyG19mXaK83sMoGHlTS/s38u2Wvp8fnof0v</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_firstuser20140819_1408463673772</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463673772</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35BA2C9A37A0E05307991F0A50EB</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID2</con:name><con:value>00FE35B47B37379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL2</con:name><con:value>urn:dece:accountid:org:dece:00FE35B47B37379AE05307991F0A9CE0</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f1d334d9-845e-4bab-b073-a66657cc23ae</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b7512ed6-8b1f-49c5-b735-c42011c48fbc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a877164c-988b-45be-a31a-8a9267a2b007</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6ce7b7f5-850d-47df-83a3-7cb0e7328779</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02017_AccountDelete_FUNC_CS_Deleting_an_account_which_is_archived_P1" searchProperties="true" id="861afbd2-8145-45ca-a562-9731648d1ae6"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="6b9db124-6372-49f2-908b-282ad0381a16"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="8658623a-f32a-48b5-9eba-48819a36d05e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("UserName",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="302c574d-f9c3-4182-a8b9-78db8be84ecd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DECE_CS" id="d8549dde-845b-4aa7-9721-470d9783b634"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS API with DECE_customersupport" id="76019b6c-e065-4b53-89c6-2f485b6eec86"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());


def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER2",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID2",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL2",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID2",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL2",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="bf3039c2-d110-4a0a-b87b-27829410e1be"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","archived");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="ea24019e-9d9f-4d61-801b-27508d32b558"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL2"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="40bdb9fe-1cff-4811-8d48-ce186fe81f67"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35B47B4A379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_0409d0f5-0d6d-43fc-b406-2ff59d20d052</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_0409d0f5-0d6d-43fc-b406-2ff59d20d052</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35CEC8906B94E05305991F0A1B73:9956D52C"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B47B46379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B47B46379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FE35CCD90837A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35CCD90B37A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FE35CCD90837A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FE35CCD90837A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35CCD90B37A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FE35CCD90837A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVbbcuI4EH3PV7g8j1PG8oWAXYEqwmVCbmSByWTzsqXIDWiwZWLJxsnXr2SwA4RkM5tKFaV2q/t099GRzjiOQtvvcA6JoDHThr2W/g9ykRegWd1AwWlguM6MGE8uOjXs2azuBTYKUN3WtSHnKQwZF5iJlm4jyzVQ07C8qVX3667veDW3gR517R4SLkNLlxrStTwKGfeLtC09TZgfY065z3AE3BfEn3Rurn3p6eMSk94+26AsEibthRAr3zRJLQACYUhqJI7MM3PP5yzg/oTOGRZpAtucAW/p273r9bq2dmpxMjdthJCJPFP6BJzOv+ntk3IzBEM2izfrLmYxowSH9BUrUDcgFnGgdcJ5nFCxiD4IbZkWUqENyIlBLJd90823BAW6L0baA5lwbPAFtspgY5hBAoyA9nM8bOnfvjbBzd5pghmfxUnED9Z/BglYBmG8gsDgZWUluq9HPNKu9hkQf8hImHKawa2iyQoT4NpdAjOaX1MuyRdwrRi/lnP5T0uWAfmTsZyZu1gldPNId3p0Dlz8n5ntzmsT5R6HKbRfJ1fUevnhLgd5UE9/efSmw5/45TK65a0Cwq7zBlQ17u36kKwVt7abfmexbd31z08fwEOQXfRp03rI6f1ieWPB3VUIFw83ayDfO3W4Jg3ScR4XS7fuBg+ujVlw93x1+8gGXs6yyfz5JJTncvS07DnjhknS+7wxEi/OudN/RM/p7zvyF+t/b4jB0FvkURC/jrveetKcJiN7cjmlo6xD++7qb2v+K7qv/xicXKQv4x/3A3e6+Lmyl7/C0SVpvdW0W8O+sZSESfr0G4gol4oew542kPPC4nN5URYaGLPC1V8pjeICmNDbapeSFj+VAkQDXw5zs0Zo0Hfq3W7PQ02n0Wn2Ud1BDc+zBqhzLv9KDdqgOIDYjdmMqlxKZTf8+RwgiXwOLIDEyOKULIDrn0TsYYG1IRvLwxEzDtNYqjh9PfXoiomm54DlzXB2OndsStxM125jMWKjpDMTkOxLd3NPusdA6IqC0ndFcC4ZzoXsxTPOUhFatQzXGKTyBkiUCPu226ybnEarEBRSM4qDNITaarEqOmPyza9tYMILa9FWwovD92Fth9/KNkifgCoHruo5BzlKOHIP2WUxx4u20cF9VYbvpAFVZ0z2VCSUbJDsf3qjiuJIxZNtVSXsyvvQsBfZPCyqShZklFSEr25qKfRSBtrlWJ5x7bmWZllaDKKhJC6R4U2pdJY5AZJKnXqZxktgZhXC/NI1UaE+yFzZ9/GlYsEmAguIJG20YvmFN8IEuHojDCXf868+QPZSyr4JyMUxWzeUTwmF+NPXBvGJ8pPmO/mzjpPgbVxHYu3kkXXKh4GgbK5W6kJ4+YAYJJZhqVSwONkNfizAseT7xqrJFRYh2fSUCvj4i6akqaVjQuKUiWFPLwy7clngFC8r8N+c3oUpJHl7x+b8wzv24eZ6IoUrwnrlS//b2aAFXQjo6iovsLT0XD4ZZXI235HnLcD3Cn3uNs7dU6fhdXYV2uv2UdXAvUra78zvLTs9PTwP7X8B</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbc9o6EH7vr/C4jx3jCxeDJzDDLSlt0iSYpmlfzgh5ASW2ZCzZmPz6I5nYAUJy0pPJDKP1avfb3U+fdMZRFDpen3NIBGFUm4y6+j8OmuPWPHCNJgbHaLQdy0BWe2G4dZgvmu1WE7dcXZtwnsKEcoGo6OqOZTcMq23YnZnd9JoNr+7W2m7rj67dQcJlaOlSs3Qtj0LKvSJtV08T6jHECfcoioB7Ant+/+rSk54eKjHpvbMdyiJh0lsJEXumiWsBYAhDXMMsMs/MA5+zgHs+WVIk0gSecwa8qz/v3Ww2tU29xpKl6ViWZVodU/oEnCw/671P5WYIJnTBdushoowSjELyhBSoKxArFmj9cMkSIlbRG6Ft07ZUaANybGC7QT/r5kuCAt0HIx2ATDgy+ArZZbApLCABikH7OZ109c8fm+Bu7yxBlC9YEvGj9d9BAppByGIIDF5WVqL7eMQT7eqdAfYmFIcpJxn8UDSJEQau3SSwIPkl4ZJ8AdeK8Ws5l/+kZBngvxnLmbmPVUI3T3RnRJbAxf+Z2f68dlHuUJhC7zZdd76O/oRXf7Y/XXrd8VvjbdgCK4OrbgFh33kHqhr38/qYrBW3njdtIf/Wbvav8tu1b4u27deDXJZkO41tsCAbdp627sd1xw9n1zFcz/vxk7Vg4+byKXm8XN7eXjw0Vr+nvv/9dvP726fzi2Czci63PG313fuf0yD7NvjC7EW/vl2ng988z37drW7IL07j1fDxa9xYfnn0U/GFzGa3l3N2f9durS+Si6fZzR36FFL7ATt37eyHxWhnKq79cfelpv0aDo2lJPjp/AGwKJeKHpORdi6LQ+J9eVEWEhiLwtWLlUZxAVToPbVLSYuXSgEigSeHuVtb1vm43hwORx1rUHf77bHVrFtup2OfW/2B/Cs1aIfiCOKQ0QVRuZTK7vjzPkAceRxoAImRsRSvgOvvRBwhgbQJncrDwSiHGZMqHoVyY7RlAcrW7iPCWfYQNvIg0LUfTFzT66S/EJAcKnf7QLmngElMQMm74jeXBOdCtmKNslSEdi1DNQqpvAASpcGe02g3TU6iOAQF1IxYkIZQi1dx0RiT734dA2FeWKfjWXHu3izr+FvZAekTEOXAVS0DkFOEE1eQUxbyZsGOvV9wGb6fBkQdL9lOkRC8Q3L46YUlih4VRWRFJeTK89hwENU8LqhKFGQEVzyvLmip7/L098pxrFFtXUuzLC0G4CplS2R4UwqcbfqAUylP2xl7BGpWIcwP3Q4V6qPMlf0QXypW1BdIQCTpohXLDzwNfODqaTCRNM8/+u44SCn7JiAXp2zDUL4gFOJ3HxnYw8pPmm/kz4Ylwcu4TsTayyPrlO8BQehSrdQ9sH2DFJjJsEQKF0v2g58KcCr5obFqcoVFSDbNUwFvf9GUInV1hDFLqZiM9MKwr5IFTrGNwXtxehWmUOLnqzXnb16t91eXvtSrCOmVL/lvZ4MUdMGgqxu8wNLVc/lSlMnpck+VnwG+FuZBwx00OnW3098X5s5wbFUNPKik98r82rLX0+Pz0PsX</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVbbcuI4EH3PV7g8j1PG8oWAXYEqwmVCbmSByWTzsqXIDWiwZWLJxsnXr2SwA4RkM5tKFaV2q/t099GRzjiOQtvvcA6JoDHThr2W/g9ykRegWd1AwWlguM6MGE8uOjXs2azuBTYKUN3WtSHnKQwZF5iJlm4jyzVQ07C8qVX3667veDW3gR517R4SLkNLlxrStTwKGfeLtC09TZgfY065z3AE3BfEn3Rurn3p6eMSk94+26AsEibthRAr3zRJLQACYUhqJI7MM3PP5yzg/oTOGRZpAtucAW/p273r9bq2dmpxMjdthJCJPFP6BJzOv+ntk3IzBEM2izfrLmYxowSH9BUrUDcgFnGgdcJ5nFCxiD4IbZkWUqENyIlBLJd90823BAW6L0baA5lwbPAFtspgY5hBAoyA9nM8bOnfvjbBzd5pghmfxUnED9Z/BglYBmG8gsDgZWUluq9HPNKu9hkQf8hImHKawa2iyQoT4NpdAjOaX1MuyRdwrRi/lnP5T0uWAfmTsZyZu1gldPNId3p0Dlz8n5ntzmsT5R6HKbRfJ1fUevnhLgd5UE9/efSmw5/45TK65a0Cwq7zBlQ17u36kKwVt7abfmexbd31z08fwEOQXfRp03rI6f1ieWPB3VUIFw83ayDfO3W4Jg3ScR4XS7fuBg+ujVlw93x1+8gGXs6yyfz5JJTncvS07DnjhknS+7wxEi/OudN/RM/p7zvyF+t/b4jB0FvkURC/jrveetKcJiN7cjmlo6xD++7qb2v+K7qv/xicXKQv4x/3A3e6+Lmyl7/C0SVpvdW0W8O+sZSESfr0G4gol4oew542kPPC4nN5URYaGLPC1V8pjeICmNDbapeSFj+VAkQDXw5zs0Zo0Hfq3W7PQ02n0Wn2Ud1BDc+zBqhzLv9KDdqgOIDYjdmMqlxKZTf8+RwgiXwOLIDEyOKULIDrn0TsYYG1IRvLwxEzDtNYqjh9PfXoiomm54DlzXB2OndsStxM125jMWKjpDMTkOxLd3NPusdA6IqC0ndFcC4ZzoXsxTPOUhFatQzXGKTyBkiUCPu226ybnEarEBRSM4qDNITaarEqOmPyza9tYMILa9FWwovD92Fth9/KNkifgCoHruo5BzlKOHIP2WUxx4u20cF9VYbvpAFVZ0z2VCSUbJDsf3qjiuJIxZNtVSXsyvvQsBfZPCyqShZklFSEr25qKfRSBtrlWJ5x7bmWZllaDKKhJC6R4U2pdJY5AZJKnXqZxktgZhXC/NI1UaE+yFzZ9/GlYsEmAguIJG20YvmFN8IEuHojDCXf868+QPZSyr4JyMUxWzeUTwmF+NPXBvGJ8pPmO/mzjpPgbVxHYu3kkXXKh4GgbK5W6kJ4+YAYJJZhqVSwONkNfizAseT7xqrJFRYh2fSUCvj4i6akqaVjQuKUiWFPLwy7clngFC8r8N+c3oUpJHl7x+b8wzv24eZ6IoUrwnrlS//b2aAFXQjo6iovsLT0XD4ZZXI235HnLcD3Cn3uNs7dU6fhdXYV2uv2UdXAvUra78zvLTs9PTwP7X8B</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_firstuser20140819_1408463677293</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463677293</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35CCD90C37A8E05307991F0ABBBB</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID2</con:name><con:value>00FE35B47B46379AE05307991F0A9CE0</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL2</con:name><con:value>urn:dece:accountid:org:dece:00FE35B47B46379AE05307991F0A9CE0</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cd14f869-bc8f-4f65-9ecc-2fdca351a5dd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76019b6c-e065-4b53-89c6-2f485b6eec86</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bf3039c2-d110-4a0a-b87b-27829410e1be</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_02018_AccountDelete_FUNC_CS_Deleting_an_account_which_is_other_P1" searchProperties="true" id="aed1c8de-ffcc-453d-a4ce-500f16d81cfa"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\praveen.dantuluri\Desktop</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="d1eb38cc-b019-4be1-a4a0-d05cd66fac10"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));
tP.setPropertyValue("audience",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite" id="90094fcf-a53e-44c8-b900-e03bf0231b74"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());



def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("UserName",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="73ee45b4-026e-4a0f-a451-5532e8ce14f8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DECE_CS" id="9edb81ae-8075-46f4-9b33-e2110eda4f1b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role_CS")));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS API with DECE_customersupport" id="b4d1ef62-7c1d-4c17-87f6-c512e57df987"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());


def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER2",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID2",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL2",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID2",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL2",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Account Status" id="4126e182-565f-461d-a547-fe3f0271adeb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Update_AccStatus")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("Status","other");
myTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="e0e63c2a-c086-4950-a7da-583a45564442"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER2"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL2"));
myTC.setPropertyValue("ETag",tC.getPropertyValue("ETag"));

myTC.setPropertyValue("ResponseTypeAccountDelete","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Account_Delete_DB_Validations" id="6a8f8f41-b178-4050-835f-0a1507dc545d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

     	def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_DB_Validation")

		myTC.setPropertyValue("tName",tC.getName());
		myTC.setPropertyValue("sName",tS.getName());
		
		myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID1"));
		myTC.setPropertyValue("ACCOUNT_OID",tC.getPropertyValue("ACCOUNT_OID"));

		myTC.setPropertyValue("USER_STATUS","active");
		myTC.setPropertyValue("USER_SAML_STATUS","deleted");
		myTC.setPropertyValue("ACCOUNT_STATUS","deleted");
		
		def runnerTC = myTC.run( null , false );
		
		assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20130910_120827</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>00FE35B3E37C6B78E05305991F0ABA86</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-09-11</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_835bd447-a0bf-4c8c-9c69-9cf41d0a0fa0</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_835bd447-a0bf-4c8c-9c69-9cf41d0a0fa0</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-09-08</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E62A7D81AB87588DE0401F0A07997D69</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35B4F706379CE05307991F0A189A:FAD85FBB"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35B3E3786B78E05305991F0ABA86</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35B3E3786B78E05305991F0ABA86</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:E66F8BAF81CF768BE0401F0A059972BA</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>00FE35CCBDF437A6E05307991F0A9C25</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35CCBDF737A6E05307991F0A9C25</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>00FE35CCBDF437A6E05307991F0A9C25</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:00FE35CCBDF437A6E05307991F0A9C25</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35CCBDF737A6E05307991F0A9C25</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:00FE35CCBDF437A6E05307991F0A9C25</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn:dece:userid:org:dece:E606E1436C334EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZtc6o6EP5+fgVDP3YQUFBk1BkV28s5tW++dc6XOzEETcXEkqDYX38SFKrW9nrujCOTZbP77O7DkzQYWEZlt80YijmmRPG9pvqvU7GngWXVNGBMQ82CDtTqsFoXf6FlBgYwQmCois9YgnzCOCC8qZYN09IMRzPrQ9N2bcu1yiXHsH6ryhjFTIQWLiWxK11GhLlZ2qaaxMSlgGHmErBEzOXQHbT7d67wdEGOSW01diizhHFrzvnK1XVYChBEUQRLkC71hn7k0wiYO8AzAngSo33OgDXV/d7NZlPaVEo0nullwzB0o64Ln4Dh2ZXa+pFvRoFPQrpbdwGhBEMQ4XcgQfURn9NAaUczGmM+X34R2tRNQ4bWUAo1aFrkStU/EmToLox0BDJmQGNzYObBnlGIYkQgUkbPflO9umyCu73DGBAW0njJTtZ/BwmRNYroCgUayyvL0V0e8Uy7Wg0EXZ/AKGF4je4lTVYAIqY8xijE6R1mgnwBU7LxKykTP5yzDMG/GUtDP8QqoOtnuuPhGWL8/8zscF67KGMQJagVgOFk7b3URi//PFWni8X9AHQCKxqYdr+ZQTh03oEqxr1fn5K14NZ+U8+/HRJOrHbX2/zu9CaLIJ37i7v3gTMKO9fb1/E9uV6sZkN6HXZmi5W/ub9ZJNxHERt7fs9bb8KoQnsvt/3+xP7h3S7G86e6t7jdjrbdn6veS8W83S7GXjpcT17bbd16WDg/wfVklE4HldHd06/HMk+cyEjJ8KEPmBO3O+kmfgrta/NHt5LWu169/KsTDTfhFkweaPOjpsMajo25JAyS6SuCPF9KevieciPmBfj38iItONDCzNVdSY1iHBGutuQuKS1uIgQIB64Y5m5tGDe9it3tdrwbq1JrV3uGXTFq9bp5Y7Tr3bKda9AOxQnELiUhlrmkyu748z1AuHQZIgGKtTVN4Bwx9ZuIHuBA8cmz+DgoYWhIhYqbwKbJdgbM+iusv69tVuXvpmUZiarcU/5AHuJ2yFF8LN3OkXQ/I4hXGEl9lwRnguGMi168gXXCI7O0BiWCEnECxFKE3bLl2DrDy1WEJFJ9SYMkQqXVfJV1Rme7Z1kDkGXWrK2QZR/fl7WdvsvbIHwCLB2YrKeDxCjRmXOokhdzvuiycXJe5eHbSYDlNyZ6ymMMd0iOX31QRXKk4Mm+qhx24X1qOIqsnxZVJAvWGBaEL05qIfRCBlr5WN5A6a2UrNdJNoialLhYhNeF0pn6AMFE6NR2SBeI6EUI/aJjokB9krmwH+NL+JwMOOBoKWijZMsL7ggDxOQdwRd8Ty+9gBylFH3jKOXnbN1IXCUk4m9vG9CF0k+YH8VjQ+PgY1xnYh3kEXWKiwHHZCZX8kDYfkEMSEVYLBSMxofBzwU4l/zYWDS5wMIFm6YJR1+/UaQ0NVUAIU0I9z01MxzKZYaTb1fI/XD6FCaT5P0Zm7Ivz9iX/t1ACNcSqIUv/m9nDWd0gUiVR3mGpamm4sookpPZgTzvAX5W6E6lV6k51U7NyRTa3il0p+1UiwYeVdL6ZP5sOejp6ffQ+gM=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3vr4jSRxTyRUqIChKft2zLthvY7t6+XLnOJLhNnDR2gPbXXzs0KVDa270SEvJkPHNm5vjY5wwlseX1GYOck5Qq01FX/SdstyxsB6bm3Hew1joLkea2HdBaJjiWi1G7hVxVmTJWwJQyjijvqpZhtjTD1czOwnQ8p+W1zKZtOHeqcgs5E6GFS9NQlU0SU+aVabtqkVMvRYwwj6IEmMexN+/Prjzh6aEKk9o736IsE+a9JeeZp+u4GQCGOMZNnCb6ub7ncx4wb04iiniRw2vOgHXV173r9bq5tptpHumWYRi60dGFT8BIdKr2TqrNEExpmG7XQ0RTSjCKyQuSoGbAl2mg9OMozQlfJh+ENnXTkKE12GANmy16qupvCUp0X4y0BzJnSGNLZFbBfAghB4pB+elPu+rp1ya43bvIEWVhmifsYP1nkICuIE4zCDRWVVah+3rEI+3qnQP2phTHBSMr+C5pkiEMTLnJISSbK8IE+QKmlONXNkz8SMUywH8ylnN9F6uArh/pzohEwPj/mdnuvLZRblFcQC+7urTtRxh9jy13Zg6fJksjGCT9u/vf624JYdd5C6oe9+v6kKw1t1434XXacnwClyy6v7iMrItGw/1V2NYP/6JRXAX90Irzmft42/72OBty31/E/TNAz6toME7c2/FdeLGYD3PdH9s0OWFsScbF7CH48W2x0TP778vJc3pNHoPr8c3Zxa94mt8VYerQjA/X5OGC+HeNVTG85avGi2OYlyif+pd/wYvZvl1uTvqk8fBtIhJHjdZTeNOI/J/dt5p2a9g3VpIwL+4fAPNqKekxHSkTMS/EP5cXaSGBFpauXiY1inGgXO3JXVJavEIIEAk8Mczt2jAmY9sZDgejSdtu98/GhmMb7U7HnBj9ztByKg3aojiAOExpSGQuqbJb/nwOECceAxpArq3SAi+BqZ9EHCGOlCn1xeFIKYNFKlTc5IbJ7sModUNxNLOXaBkuV0HaCVXle8qv6XXeDznk+9Lt7km3D5hkBKS+S4IzwXDGRS+e0KrgsdlcoSaFQtwAuRRhz2q5js5IksUgkepJGhQxNLNlVnZGZ9t/S0OYlVZ/vCgP3od1HX6rWiB8AiIdmKxlAGKMcOQOsqtCPizYMncLrsL3i4DI8yX6yXOCt0j2P73RRPKj5oioqIJcex4a9qLqhwXViYIVwTXR6xtaCLw4/r1qHE+o+dQsVquiHEBbSlsuwutC4Ux9DrgQ+vS8SB+B6nUI/UvXQ436IHNt38dX8CWdc8QhEXRRyuUX3gZzYPJtMBU833z14bGXUvSNw4Yfsw1j8YSQiD99ZWAPSz9hvhF/6zQP3sZ1JNZOHlGneBBwQiO5khfB8wekwKkIS4Rypflu8GMBjiXfN9ZNrrFwwab7gsPHXxQpSV0VYZwWlE9HamnYlckSJ3/OwHtzehemlOLXu3XDPrxbf8+u5kKwEqTWvuS/nTVS0gWDKq/wEktX3YinokhOox1ZfgX4XpkH9thuD84GbbdUZmerzIO+e1Y3cK+S3jvze8tOTw/PQ+9f</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=nVZtc6o6EP5+fgVDP3YQUFBk1BkV28s5tW++dc6XOzEETcXEkqDYX38SFKrW9nrujCOTZbP77O7DkzQYWEZlt80YijmmRPG9pvqvU7GngWXVNGBMQ82CDtTqsFoXf6FlBgYwQmCois9YgnzCOCC8qZYN09IMRzPrQ9N2bcu1yiXHsH6ryhjFTIQWLiWxK11GhLlZ2qaaxMSlgGHmErBEzOXQHbT7d67wdEGOSW01diizhHFrzvnK1XVYChBEUQRLkC71hn7k0wiYO8AzAngSo33OgDXV/d7NZlPaVEo0nullwzB0o64Ln4Dh2ZXa+pFvRoFPQrpbdwGhBEMQ4XcgQfURn9NAaUczGmM+X34R2tRNQ4bWUAo1aFrkStU/EmToLox0BDJmQGNzYObBnlGIYkQgUkbPflO9umyCu73DGBAW0njJTtZ/BwmRNYroCgUayyvL0V0e8Uy7Wg0EXZ/AKGF4je4lTVYAIqY8xijE6R1mgnwBU7LxKykTP5yzDMG/GUtDP8QqoOtnuuPhGWL8/8zscF67KGMQJagVgOFk7b3URi//PFWni8X9AHQCKxqYdr+ZQTh03oEqxr1fn5K14NZ+U8+/HRJOrHbX2/zu9CaLIJ37i7v3gTMKO9fb1/E9uV6sZkN6HXZmi5W/ub9ZJNxHERt7fs9bb8KoQnsvt/3+xP7h3S7G86e6t7jdjrbdn6veS8W83S7GXjpcT17bbd16WDg/wfVklE4HldHd06/HMk+cyEjJ8KEPmBO3O+kmfgrta/NHt5LWu169/KsTDTfhFkweaPOjpsMajo25JAyS6SuCPF9KevieciPmBfj38iItONDCzNVdSY1iHBGutuQuKS1uIgQIB64Y5m5tGDe9it3tdrwbq1JrV3uGXTFq9bp5Y7Tr3bKda9AOxQnELiUhlrmkyu748z1AuHQZIgGKtTVN4Bwx9ZuIHuBA8cmz+DgoYWhIhYqbwKbJdgbM+iusv69tVuXvpmUZiarcU/5AHuJ2yFF8LN3OkXQ/I4hXGEl9lwRnguGMi168gXXCI7O0BiWCEnECxFKE3bLl2DrDy1WEJFJ9SYMkQqXVfJV1Rme7Z1kDkGXWrK2QZR/fl7WdvsvbIHwCLB2YrKeDxCjRmXOokhdzvuiycXJe5eHbSYDlNyZ6ymMMd0iOX31QRXKk4Mm+qhx24X1qOIqsnxZVJAvWGBaEL05qIfRCBlr5WN5A6a2UrNdJNoialLhYhNeF0pn6AMFE6NR2SBeI6EUI/aJjokB9krmwH+NL+JwMOOBoKWijZMsL7ggDxOQdwRd8Ty+9gBylFH3jKOXnbN1IXCUk4m9vG9CF0k+YH8VjQ+PgY1xnYh3kEXWKiwHHZCZX8kDYfkEMSEVYLBSMxofBzwU4l/zYWDS5wMIFm6YJR1+/UaQ0NVUAIU0I9z01MxzKZYaTb1fI/XD6FCaT5P0Zm7Ivz9iX/t1ACNcSqIUv/m9nDWd0gUiVR3mGpamm4sookpPZgTzvAX5W6E6lV6k51U7NyRTa3il0p+1UiwYeVdL6ZP5sOejp6ffQ+gM=</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>usercreate20130916_03152</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>AcountDelete_firstuser20140819_1408463680690</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463680690</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>AcountDelete_20130917_1379429630173</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>usercreate20130910_050856</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value>E5F89A132CF725E7E0401F0A05994EB8</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35CCBDF837A6E05307991F0A9C25</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E6966F5684C8AEF4E0401F0A05990486</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E606E1436C344EFFE0401F0A07997AA1</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-09-14</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value/></con:property><con:property><con:name>NODE_ACCOUNT_ID2</con:name><con:value>00FE35B3E3786B78E05305991F0ABA86</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL2</con:name><con:value>urn:dece:accountid:org:dece:00FE35B3E3786B78E05305991F0ABA86</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>07a35292-2f12-4d2a-a92a-a0b65bdbc9ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c3f50659-e8c6-48c9-9915-d543e76d0ea4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a977d015-a310-447c-9587-4c159dd48726</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d1b6f945-91db-4c15-9219-c46012fb0a77</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cebd615b-d6b8-45a3-9877-e91c6c1c075e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d865d88b-2427-4777-b180-d9db3d841b2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9983631-b1a7-47a4-842f-78cc3f2efe0e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>039bb038-d262-404c-bbb9-1dbbe084f0d6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5e6679db-772f-499a-b063-80c4e4839f6e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b4d1ef62-7c1d-4c17-87f6-c512e57df987</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4126e182-565f-461d-a547-fe3f0271adeb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>role</con:name><con:value>nodeIdRTL</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>audience</con:name><con:value/></con:property><con:property><con:name>role_CS</con:name><con:value>nodeIdDECECS</con:value></con:property></con:properties><con:setupScript/><con:tearDownScript>if(context.expand( '${#Project#runTeardown}' )=='true')
	{
	log.info("Executing TearDown for Suite '" + testSuite.getName() + "'");
	
	for ( testCaseResult in runner.results )
	{
	   currentTestCaseName = testCaseResult.getTestCase().name;  
	   currentTestCase = testCaseResult.getTestCase(); 
	   log.info("Current TestCase : '"+ currentTestCaseName + "'");
	   log.info("Current TestCase Status : '" + testCaseResult.getStatus().toString() + "'");
	   
	   if ( testCaseResult.getStatus().toString() == 'FAILED' )
	   {
	      log.info("Re-executing failed TC");
	      def currentRunnerTC = currentTestCase.run(null, false);
	      log.info("Status on re-execution : '" + currentRunnerTC.status + "'");
	   }
	}
	log.info("Execution of TearDown for Suite '" + testSuite.getName() + "' Completed" );
}</con:tearDownScript><con:reportParameters/></con:testSuite><con:testSuite name="AccountDelete_Method"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_01002_AccountDelete_PYLD_Delete_an_account_with_No_Account_id_P2" searchProperties="true" id="f8aac307-a862-4225-9830-75da8b5884f9"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeidRTL"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();



def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL","urn:dece:accountid:org:dece:");
myTC.setPropertyValue("ETag","*");

myTC.setPropertyValue("ResponseTypeAccountDelete","ACC_NOT_MATCH_TOKEN");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdc6JKEH3fX0GRxxQCCopUtAq/btibr1U3u5uXWzg0MgnMEGZQzK+/MxiMuiY3e6ussqbp6T7dfebMXLAgTZquxxjkHFOi+KOe+k/YdMJWaHc0cKy2Zlmho3Vtw9HMjhUsWtCKDLBVxWesAJ8wHhDeU5uGaWlGW2s250bbNUzXajXsrvWgKveQMxFauDQMVSnThDC3SttTi5y4NGCYuSRIgbkcuTPv+soVnm5QY1L7F1uUVcK8H3OeubqOGiEgSBLUQDTVL/QDn4uQuTO8JAEvcnjNGbKe+rp3vV431q0GzZd60zAM3ejqwidkeHmm9r/UmyH0SUS362FAKMEoSPBLIEFdA49pqHjJkuaYx+k7oU3dNGRoDUqkIdMiZ6r+lqBC98lIByBzFmgsDsw62BQiyIEgUL5P/Z569rkJbvfO84CwiOYpO1r/GSQgK0hoBqHG6spqdJ+PeKJd/QtArk9QUjC8ghtJkyxAwJS7HCJcXmEmyBcypRq/UjLxwzXLAP3JWC70fawCun6iOyO8BMb/z8z257WNch8kBfQRbz3QqO19G9GbO5ObG9r9+W3w+AsurV4FYd95C2o37tf1MVl33Hrd5HnO5vn2ynGafBSa95Oflwt8vnnyHv6ekvGm9C+XN+OHsvVXTu2mF10u71boKZt8zdbmr+hhbsPj3WzuLV6ayfISvmy+w6JdRkP8w5p+DZ+Tq3N9kFrxeOXF/jl9sW8Xv6bTbD5I/XIyWEyvX6ylcbOejGOzpGnsTNubx2I28s/v7fDyC7rrbgZ6TIwf18a5Z14Xj0bvrab9Gg6NtSTMisUjIF4vJT38kTIR8wr4x/IiLTjUosrVzaRGMQ6Eq325S0qLWwgBwqErhrldT4btjmUPO51x17Adrzs2LMOcGJ7R6XbtztiuNWiL4gjikJIIy1xSZbf8+RggSl0GJIRcW9ECxcDUDyKOAh4oPpmKw0EJgzkVKm7aqzbA2onTrJ23njYr52UBEeIdVbmh/Jbc5l7EIT+U7u6BdE8B4QyD1HdJcCYYzrjoxXOwKnhiNlZBg0AhboBcirDbtBxbZzjNEpBI9ZSGRQKNLM6qzuhs+9/UAsQq63Q8rw7eu3Udf6tbIHxCLB2YrGUAYoxw4g5q1YW8W7DZ3C+4Du8VIZbnS/ST5xhtkRx+eqOJ5MeOI6KiGvLO89hwEFU/LmiXKFxhtCP67oYWAi+Of78ex3PQeG4Uq1VRDaAjpS0X4XWhcKY+A1QIfdrM6RMQfRdC/9T1sEN9lHlnP8RX8JjMeMAhFXRRquUn3gYzYPJt4Auel599eBykFH3jUPJTtmEinhAS8YevDOQi6SfMd+JvTfPwbVwnYu3lEXWKBwHHZClX8iLYvEMKREVYLJSL5vvBTwU4lfzQuGvyDgsXbFoUHN7/okhJ6qkBQrQg3B+plWFfJiucfJOB++b0W5hKil/v1pK9e7f+vL6aCcFKA3Xni//bWcMVXRCo8gqvsPTUUjwVRXKy3JPlV4DHymxaLdOwLGdgj4f7ytwedN+4fFBJ/zfz75a9nh6fh/6/</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>FC6714310449B5ECE0401F0A07996B95</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>FC6714310448B5ECE0401F0A07996B95</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC6714310448B5ECE0401F0A07996B95</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC6745C77E9058A9E0401F0A079957E5</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC6745C77E9058A9E0401F0A079957E5</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140622_1403416902834</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC6745C77E9158A9E0401F0A079957E5</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"FC6745CCB1042D8AE0401F0A079957EA:365DEC26"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>33eac14b-7ca6-4951-bcd3-6d5324a532e0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8547684e-42f1-49ea-bedd-c62dbc0a4c03</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_01000_AccountDelete_PYLD_Delete_an_account_with_invalid_account_id_P1_UV-135" searchProperties="true" id="97faabd6-d3f4-4394-936d-7db120fd4de3" disabled="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeidRTL"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Call AccountGet" id="33eac14b-7ca6-4951-bcd3-6d5324a532e0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

myTC.setPropertyValue("ResponseTypeAccountGet","SUCCESS");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="datasource" name="Acc_ID_Data"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">12345&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">urn:dece:accountid:org:dece:900103&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">urn:dece:accountid:org:dece:xyz&lt;/con:entry></row></con:configuration></con:dataSource><con:property>AccID</con:property><con:startRow/><con:endRow/><con:trimValues>false</con:trimValues><con:entitizeValues>false</con:entitizeValues><con:restartOnRun>true</con:restartOnRun><con:expandProperties>false</con:expandProperties></con:config></con:testStep><con:testStep type="groovy" name="Call Account Delete" id="8547684e-42f1-49ea-bedd-c62dbc0a4c03"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def accID = context.expand( '${Acc_ID_Data#AccID}' )


def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",accID);
myTC.setPropertyValue("ETag","*");

myTC.setPropertyValue("ResponseTypeAccountDelete","ACC_NOT_MATCH_TOKEN");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="datasourceloop" name="Loop"><con:settings/><con:config><dataSourceStep>Acc_ID_Data</dataSourceStep><targetStep>Call Account Delete</targetStep></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3fXxGlj1shCRAuUUGiUFp2aUuBXl+OjDOAaWKH2KGBrz92aFKgtKf7SEjIk/HMmpnlZZ9yFPhFt8U5RIIwqvU6Df2ferVse84UGTCxi0a5Wq8YNXuCjKoHtl2pObg6cXStx3kMPcoFoqKhFy27bFg1w66Pbcd1ym65XKhVrBdde4CIy9DSpWDpWhL4lLtp2oYeR9RliBPuUhQAdwV2R63rvis9XZRh0punW5Rpwqg5FyJ0TRMXPMDg+7iAWWCemns+px53R2RGkYgjeM/p8Yb+vvft7a3wViqwaGYWLcsyrbopfTxOZid681e2GbwenbLtuo0oowQjn2yQAnUNYs48reXPWETEPPgitG3algptQIINbJfpiW5+JEjR/TDSHsiII4PPkZ0FG8IUIqAYtPthr6Gf/GyC273jCFE+ZVHAD9Z/BwnoCnwWgmfwrLIM3c8jHmlX8xSw26PYjzlZwY2iSYgwcG0QwZQkfcIl+TyupePXEi5/JGMZ4L8Zy6m5i1VCN490p0NmwMX/mdnuvLZRHpAfQ3OJfVQfJuO7hwu4uKo+TmvJ8OJp/HJHrxsphF3nLah83O/rQ7Lm3HrfNDO71gw5/ZvK85+XwN50B7O6bQWXv5dxeVoqPjNvfUs3tEjCJek7V0O6wLdWeBPWw1Jrslj0LRi/zO/IfOA8nf1Khqb53A4HrxA+BvjxbvhYnZ4tbv2oFSa1WLTXZGMLfPkyaC07nucvSqP6mLHwwXy6JQ+Ws4IX7z768zCqXf2u/Bos6f2Gk+nlvDQJXslzHN03PmrarWHfmEnCKJ4sAItsqejR62hdOS8kvpcXZSGeMU1d3VBpFBdAhd5Uu5S0uLEUIOK5cpjbtWV1z0tOu10571YrZzXr3HJKllOv212rZbXbVqZBWxQHENuMTonKpVR2y5/vAeLA5UA9iIwVi/EcuP5NxA4SSOvRoTwcjHIYM6niMz4hSQB+wGi08dbwtpjz9Wb9qms3TNzS26g1FRDtK3dtT7mHgElIQMm74jeXBOdCtmKJVrHw7cIKFSjE8gKIlAa7xXLNMTkJQh8UUDNgXuxDIZyHaWNMvv0vGgjz1Do8H6fn7suyDr9lHZA+HlEOXNVyBnKKcOQKKmWFfFlw0d4tOAvfij2ijpdsp4gI3iLZ//TBEkWPnCKyogxy7nlo2ItqHhaUJ/JWBOc8zy9oqe/y9DezcSxRYVmIV6s4HUBVKVskw5tS4GxzBDiW8rQes1egZh7C/NHtkKM+yJzb9/HFYk5HAgkIJF20dPmDp8EIuHoa9CTNk5++O/ZSyr4JSMQxW9uXLwiF+NtHBnax8pPmgfx7Y5H3Ma4jsXbyyDrle0AQOlMrdQ+svyAFZjIskcLFot3gxwIcS75vzJucYxGSTZNYwNdfNKVIDR1hzGIqeh09NeyqZIpTrENwP5w+hUmV+P1qTfiXV+vTdX8k9SpAeu5L/tvZICldMOjqBk+xNPREvhRlcjrbUeV3gJ+F+azr1Op25axe2RXmitOp5g3cq6T5yfzZstPTw/PQ/Bc=</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>00FE35BF58926B96E05305991F0A65D7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>00FE35BF58916B96E05305991F0A65D7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:00FE35BF58916B96E05305991F0A65D7</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>00FE35CC6EF76B80E05305991F0A0CC0</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:00FE35CC6EF76B80E05305991F0A0CC0</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140819_1408463684009</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>00FE35CC6EF86B80E05305991F0A0CC0</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"00FE35BEA36D6B84E05305991F0AFAB5:EA4CB01"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>33eac14b-7ca6-4951-bcd3-6d5324a532e0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8547684e-42f1-49ea-bedd-c62dbc0a4c03</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_03001_AccountDelete_MTHD_API_Invocation_with_GET_method_P2" searchProperties="true" id="53cebd31-3557-4fbe-8739-ef09b4d13818"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeidRTL"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Pem" id="83b1074a-e619-481c-b3e7-05ac36e08bb9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 
import soapUIUtils.soapUIUtils;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
//def certPath = groovyUtils.projectPath

//Set fileKeyStorePath value 
//log.info "certPath: "+certPath;
//tP.setPropertyValue("certPath",""+certPath);

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")

myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("AccountGet_POST");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="AccountDelete_Get"><con:settings/><con:config service="Account" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}" methodName="Get" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AccountDelete_Get" mediaType="application/xml" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML_USER1}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVbbbuo6EH3fXxGlj1XIhVuIChIlpaU3ugu9vhwZxyFuE5vaDoT99ccOJAVKe9hHQkKejGfWzCwv+4SDJHa8LueICUyJNvDb+j9VO6xXYWgbzYnrGrWgZhuubblG2HSaLnBdqxpAXRtwnqIB4QIQ0dYdy64ZVsNwnLHV8Czbq7mVptN61bVHxLgMLV0qlq5lSUy4l6dt6ykjHgUcc4+ABHFPQG/Uvbn2pKcHCkx652SFMk/IOpEQM880YSVAEMUxrECamCfmls9JwL0RnhIgUobWOQPe1td7F4tFZVGtUDY1HcuyTKtlSp+A4+mR3vlVbEbBgIR0te4BQgmGIMZ/gAJ1g0REA60bTynDIkq+CW2btqVCGyiDBrRr5Eg3PxPk6A6MtAWScWDwCNhFsHsUIoYIRNrD/aCtHx02wdXeMQOEh5QlfGf9d5AQmaOYzlBg8KKyAt3hEfe0q3OCoDcgME45nqNbRZMZgIhrdwyFOLvGXJIv4Fo+fi3j8ocLliH4N2M5MTexSujmnu74eIq4+D8z25zXKsojiFPUOW9d92n8mrw9XWXzYeP5+sK9uqu3zNYf2s4hbDqvQJXjXq93yVpya70pMN+W2dKe8Oj5KlrwyfkLoxeTJ/6C+8cWcYbj3nEPh4LCfrp8cy4jcOt2o4foqvoq3l/Mpd0Lk7H927p0yYv/a04ewh4ciqndmk9EHQ/PHo9fs/ury1pDNh3Z0+zF99m0mo3GdRI+ug+JdZXVfBb5waJ5PHKT7vvvDIF+/RnCXw6YxoHDxseN84unIcZNcdP+rGmzhm1jIQmjdPKGoCiWih4DX+vLeQHxs7woCw6MMHf1ZkqjuEBE6B21S0mLl0oBwoEnh7la93uNpl1tNXy35zv1rn9m1Sy7b3WtZqvVOG3ZhQatUOxA7FESYpVLqeyKPz8DhInHEQkQM+Y0hRHi+g8RfSCANiD38nBQwtGYShW3GSbvLcEoTJoftTSZT7PURe8B17VbKoZkyLqhQGxbultb0n2PIJ5hpPRdEZxLhnMhe/EB5qmI7cocVAhK5Q3AlAh7Ts2tmxwnsxgppGZCgzRGlVk0yztj8tW/YwDIc+v92Tg/eN/WtfutaIH0CbBy4KqWUyTHiPbcQdWikG8Ltp3Ngovw3TTA6nzJfgqG4QrJ9qdPmih+lByRFRWQS89dw1ZUc7egMlEwx7AkenlDS4GXx79TjOMDVD4q6Xye5gNoKmljMrwpFc42RwimUp+WY/qOiFmGMA+6HkrUO5lL+za+VERkJIBAiaSLli8PeBuMEFdvg4HkeXbow2MrpeybQJnYZ+vF8gmhEP/4yoAeVH7SfCf/FpQFn+PaE2sjj6xTPggEJlO1UhfB8htSQCrDYqlclG0G3xdgX/JtY9nkEouQbJqkAn3/RVOS1NYBhDQlYuDruWFTJnOcYjlD3qfTlzC5FK/v1ox/e7c+31yPpGAlQC998X87GzinC0S6usJzLG09k09FmZxMN2R5DXBXmWtdu+qf9qtdu9bYUmanWS8buFVJ54v5q2Wjp7vnofMv</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>FC674A13DBF4A146E0401F0A07996275</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>FC674A13DBF3A146E0401F0A07996275</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC674A13DBF3A146E0401F0A07996275</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC671396D8CD25ADE0401F0A07996B91</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC671396D8CD25ADE0401F0A07996B91</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140622_1403416907651</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC671396D8CE25ADE0401F0A07996B91</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"EB3785D9525F1D73E0401F0A079952D7:60D8B783"</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/RET_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>33eac14b-7ca6-4951-bcd3-6d5324a532e0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8547684e-42f1-49ea-bedd-c62dbc0a4c03</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>83b1074a-e619-481c-b3e7-05ac36e08bb9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_03002_AccountDelete_MTHD_API_Invocation_with_PUT_method_P2" searchProperties="true" id="bd7db6ae-38e9-4eaf-9637-c73d2efb6b02"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeidRTL"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Pem"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 
import soapUIUtils.soapUIUtils;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
//def certPath = groovyUtils.projectPath

//Set fileKeyStorePath value 
//log.info "certPath: "+certPath;
//tP.setPropertyValue("certPath",""+certPath);

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")

myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("AccountGet_POST");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="AccoutnDelete_PUT"><con:settings/><con:config service="Account" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}" methodName="PUT" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AccoutnDelete_PUT" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#TestCase#SAML_USER1}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7vr4iyj6uQSxMoUUGiXLa0pReg3e6+HLnOBAyJHWIbQn/9cUJDgaU93SMhIU/GM9/MfP7sc47iyPFbnEMqCKNav9PQ//FOnaplB67hWQEYbhDUjToKLMOtuzbU7BCcU0/X+pxL6FMuEBUN3bFs17CqhuOMrapv2b7nVFzX+61rT5ByFVq5VCxdy+KIcr9I29BlSn2GOOE+RTFwX2B/1Brc+MrTRyUmvXm+QVkkTJtTIRLfNHElAAxRhCuYxea5uedzHnB/RCYUCZnCW86AN/S3vavVqrI6rbB0YjqWZZlW3VQ+ASeTb3rzpNwMQZ+GbLNuI8oowSgirygHNQAxZYHWiiYsJWIafxDaNm0rD21Ahg1su/Sbbr4nKNB9MdIeyJQjg0+RXQYbQggpUAza47Df0L99bYKbveMUUR6yNOYH67+DBHQJEUsgMHhZWYnu6xGPtKt5DtjvUxxJTpZwm9MkQRi4dp9CSLIbwhX5Aq4V49cyrn6kZBngvxnLubmLVUE3j3SnQybAxf+Z2e68NlGeUCShuUhPQ0F+PM/imRe/9nHIpLxKruXPcNUoIOw6b0Btx/22PiTrlltvm2ZuQq5Y+ngmem7Nlb2JqN47Wftl7tzFj+kPQq/mw4eLB5nN1y+hkPKaMXEWzn+Fz6+sbj7JUxuTi9dZZ76edU5W3eef3cXNNMyuv2fx/Rlznl9ns0mbhpc1uk6uTfi+bE3HnnlJzjrhozWJwkH1ZlVHN7x2O1j15rPB1Xj58rvde5iduMM5liAfsjs7expcLtbVX433mnZr2DeWkjCSLzPAolzm9Oh3tJ6aFxKfy0tuIYERFq5+kmsUF0CF3sx35dLiSyVAJPDVMDfrXrtas91T23Kr3oXXbXct17J7Vsuq1evVi7pXatAGxQHENqMhyXPlKrvhz+cAcexzoAGkxpJJPAWufxKxgwTS+nSoDgejHMZMqbgtXD4PU75ez+JXSOeLJOLB0kqqunbLxB29S1uhgHRfuut70j0ETBICub7nBOeK4VyoXizQUorIrixRhYJUN0Cai7DvuGeeyUmcRJAjNWMWyAgqyTQpOmPyzb9jIMwL67A7Lg7eh3UdfitboHwCkjvwvJYLUGOEI3eQWxbyYcG2s1twGb4lA5KfL9VPkRK8QbL/6Z0mOT+2HFEVlZC3noeGvajmYUHbRMGS4C3Rtze0Enh1/JvlOBaosqjI5VIWA6jl0paq8KZSONscAZZKn9ZjNgdqbkOYX7oetqgPMm/t+/ikmNKRQAJiRRetWH7hbTACnr8N+orn2VcfHnspVd8EZOKYrR2pJ0SO+NNXBvZx7qfM9+pvxdLgfVxHYu3kUXWqB4EgdJKv8otg/QEpMFNhiVIulu4GPxbgWPJ947bJWyxCselFCvj4i5ZLUkNHGDNJRb+jF4ZdmSxwinUC/rvTH2EKKX67WzP+4d36PLgZKcGKkb71Jf/tbJCCLhj0/AovsDT0TD0VVXI62ZHlN4CHyux67Vqtq2T4rFXfVWav1n3n8l4lzT/Mf1p2enp4Hpr/Ag==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>FC6745C77EBA58A9E0401F0A079957E5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>FC6745C77EB958A9E0401F0A079957E5</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC6745C77EB958A9E0401F0A079957E5</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC6714310465B5ECE0401F0A07996B95</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC6714310465B5ECE0401F0A07996B95</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140622_1403416911782</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC6714310466B5ECE0401F0A07996B95</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"EB3785D9525F1D73E0401F0A079952D7:60D8B783"</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/RET_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>33eac14b-7ca6-4951-bcd3-6d5324a532e0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8547684e-42f1-49ea-bedd-c62dbc0a4c03</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>83b1074a-e619-481c-b3e7-05ac36e08bb9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_03003_AccountDelete_MTHD_API_Invocation_with_POST_method_P2" searchProperties="true" id="0a94f968-2392-463e-844a-d42de3f73a3f"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeidRTL"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Pem"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 
import soapUIUtils.soapUIUtils;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
//def certPath = groovyUtils.projectPath

//Set fileKeyStorePath value 
//log.info "certPath: "+certPath;
//tP.setPropertyValue("certPath",""+certPath);

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")

myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("AccountDelete_POST");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="AccountDelete_POST"><con:settings/><con:config service="Account" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AccountDelete_POST" mediaType="application/xml" postQueryString="false" sslKeystore="RET_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML_USER1}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxGlj6uQCwFKVJC4lG5W0AvQdrcvR8aZgLuJDbGTpv31xw5NCpT2dI9UiXoynvlm5vNnn3EUR47X4xwSQRjV/GFH/6eBwQlxOzAs+Z/hYtsy2qenC6PpNuttG9v1ptvSNZ/zFHzKBaKiozuW7RpW03CcudX0LNtrNGsty3nQtTtIuAwtXWqWruVxRLlXpO3oaUI9hjjhHkUxcE9gb9abjD3p6aESk94926IsEibdlRBrzzRxLQAMUYRrmMXmmbnncxZwb0aWFIk0gdecAe/or3ufnp5qT/UaS5amY1mWabVN6RNwsjzRu9/KzRD4NGTb9QBRRglGEXlBCtQExIoFWi9asoSIVfxBaNu0LRXagBwb2HbpiW6+JSjQfTHSHsiEI4OvkF0Gm0IICVAM2u3U7+gnX5vgdu88QZSHLIn5wfrvIAHNIGJrCAxeVlai+3rEI+3qngH2fIqjlJMMLhVN1ggD164TCEk+JlySL+BaMX4t5/KPlCwD/DdjOTN3sUro5pHuDMkSuPg/M9ud1zbKHYpS6FJ638ITB/3KpjfLrLdZhuu8N7u8mg9wp4Cw67wFVY37dX1I1opbr5to31qOzXw4Mn/8affy/uCZh/VrHCGMrtKLzWq0uXYXc/Nh9nh51/6Bf9/T3FxdOEHUeLEGN/y+DlfWjQmWk27otwnasOD3wkXTwbrvJ8+L4f3wvMFieyAebr7/bP1ZXY1HF05of7+1Ll42KcPs4ZbBA7117/qPdtQ4z8d3L84LbvV/f8shvKZT5/5x1J/8+u6P/czvvNW0W8O+sZSEWbp4BCzKpaKHP9RGcl5IfC4vykICIyxcvbXSKC6ACr2rdilp8VIpQCTw5DC369Gg2XJ7tttv9IanrUb93HIte2T1rFa73XRa/VKDtigOIA4YDYnKpVR2y5/PAeLY40ADSIyMpXgFXP8k4hAJpPl0Kg8HoxzmTKq4HTubpL2McWjThU3o8+Mqo2KFs1TXLpm4oldJLxSQ7Gt3e0+7p4DJmoASeMVwLinOhWzGBmWpiOxahmoUUnkFJEqFPcc9bZicxOsIFFQzZkEaQW29WhetMfn21zEQ5oV1ej4vTt6HhR1+K3sgfQKiHLiqpQ9yjnDkEnLLQj4s2HZ2Cy7D99KAqAMmGyoSgrdI9j+98UQRpCKJrKiEXHkeGvaimocFVYmCjOCK6dUVLRVenv9uOY4Nqm1qaZalxQBaStsSGd6UEmebM8CpFKjnOfsD1KxCmF+6HyrUB5kr+z6+VKzoTCABsaSLViy/8DiYAVePA18SPf/qy2MvpeybgFwcsw0i+YZQiD99ZmAPKz9pvpY/TywJ3sZ1JNZOHlmnfBEIQpdqpW6C5w9IgZkMS6R0sWQ3+LEAx5LvG6smV1iEZNMiFfDxF01pUkdHGLOUCn+oF4ZdnSxwiuc1eG9O78IUWvx6ueb8w8v112Q8k4oVI73yJf/tbJCCLhh0dYcXWDp6Lt+KMjld7ujyK8BDaW4Mm4477NX7/eZgV5rtvvXG5b1Kuu/M7y07PT08D91/AQ==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>FC675D624DA4BB6CE0401F0A07991B07</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>FC675D624DA3BB6CE0401F0A07991B07</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC675D624DA3BB6CE0401F0A07991B07</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC674A14B5AD8753E0401F0A0799627B</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC674A14B5AD8753E0401F0A0799627B</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140622_1403416915514</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC674A14B5AE8753E0401F0A0799627B</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"EB3785D9525F1D73E0401F0A079952D7:60D8B783"</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/RET_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>33eac14b-7ca6-4951-bcd3-6d5324a532e0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8547684e-42f1-49ea-bedd-c62dbc0a4c03</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>83b1074a-e619-481c-b3e7-05ac36e08bb9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_03004_AccountDelete_MTHD_API_Invocation_with_HEAD_method_P2" searchProperties="true" id="c6d8ae28-201d-4d0f-b734-1705e6379423"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeidRTL"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Call First_User_Create TestSuite"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def country = context.expand( '${#TestSuite#Country}' )
def nodeid = context.expand( '${#TestCase#nodeid}' )

log.info country;

def myTS = tP.getTestSuiteByName("First_User_Create");

myTS.setPropertyValue("Country",country);
myTS.setPropertyValue("nodeid",nodeid);
myTS.setPropertyValue("tName",tC.getName());
myTS.setPropertyValue("sName",tS.getName());

def runnerTS = myTS.run( null , false );

assert runnerTS.status == Status.FINISHED;
def myTC = tP.getTestSuiteByName("First_User_Create").getTestCaseByName("Account_Create_Firsrt_User_Create_STS_Policies");

tC.setPropertyValue("SAML_USER1",myTC.getPropertyValue("SAML"));
tC.setPropertyValue("ACCOUNT_OID",myTC.getPropertyValue("ACCOUNT_OID"))
tC.setPropertyValue("NODE_ACCOUNT_ID",myTC.getPropertyValue("NODE_ACCOUNT_ID1"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",myTC.getPropertyValue("NODE_ACCOUNT_ID_FULL1"));
tC.setPropertyValue("NODE_USER_ID1",myTC.getPropertyValue("NODE_USER_ID1"));
tC.setPropertyValue("NODE_USER_ID_FULL1",myTC.getPropertyValue("NODE_USER_ID_FULL1"));
tC.setPropertyValue("UserName1",myTC.getPropertyValue("UserName"));
tC.setPropertyValue("user_oid1",myTC.getPropertyValue("user_oid1"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Pem"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 
import soapUIUtils.soapUIUtils;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
//def certPath = groovyUtils.projectPath

//Set fileKeyStorePath value 
//log.info "certPath: "+certPath;
//tP.setPropertyValue("certPath",""+certPath);

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("CommonTestSteps").getTestCaseByName("SetPem")

myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("AccountGet_POST");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="AccountDelete_HEAD"><con:settings/><con:config service="Account" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}" methodName="HEAD" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AccountDelete_HEAD" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML_USER1}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZdb+I6EH3fXxGlj1XIFyQkKkgUWpYVZfcWuqX35cp1JuA2sSF2Au2vv3ZoUqAft3ulStST8cyZmeNjn3GUJk7Y4xwyQRjVRoOO/o8dtDFyA8/wAycwmq4HhvynbdheGzsR9j1wXV0bcZ7DiHKBqOjojmU3DcszHGdmeaHlhJbVaLfbf+vab8i4DC1dGpaubdOE8rBM29HzjIYMccJDilLgocDhtHc1DqVniCpMevdsh7JMmHWXQqxC08SNCDAkCW5glppn5oHPWcTDKVlQJPIMXnJGvKO/7N1sNo2N22DZwnQsyzKtwJQ+ESeLE737rdoM0YjGbLfuI8oowSghz0iBugKxZJHWSxYsI2KZfhDaNm1LhTZgiw1sN+mJbr4mKNF9MdIByIwjgy+RXQW7hhgyoBi0m+tRRz/52gR3e2cZojxmWcqP1n8GCWgBCVtBZPCqsgrd1yO+067uGeBwRHGSc1LARNFkhTBw7VcGMdmOCZfki7hWjl/bcvlHKpYB/pOxnJn7WCV0853uDMgCuPg/M9uf1y7Kb5Tk0L2Zkc16e2f53tAesf789ELENPCDPB51Sgj7zjtQ9bhf1sdkrbn1sina9uJ5/rAIXHb5V3tss/ltcv/7B06Gj2P3OxnYiSj828lmOF6f+hmazoX7OB0TE6dPd+et4Nkd8jhoe89rPjW/FQ926kxbIv1eBLP0du4vebGhGC2/z73TlTc7/zH175KL55/RnZi0neuNxfPWMxCvueZZ/3TiBZPTHzfMP5+47rfb4ePc7ZvDIbk63556UfyEO6817ddwaKwkYZrfPwAW1VLRYzTQLuW8kPhcXpSFREZcuoYrpVFcABV6V+1S0hLmUoBIFMph7taXfc9v9mx30HdaPbvpXVhNy760epYfBJ7jtyoN2qE4gthnNCYql1LZHX8+B4jTkAONIDMKluMlcP2TiAMkkDai1/JwMMphxqSKe9xfFr6VOQ/JMk4clK7FI7XIva5NmPhJf2a9WEB2qNzBgXJfAyYrAkreFb+5JDgXshVrVOQisRsFalDI5QWQKQ0OnWa7ZXKSrhJQQM2URXkCjdVyVTbG5Ltfx0CYl9bri1l57j4s6/hb1QHpExHlwFUt5yCnCG+uIDtsVYV8WLDt7Bdche/lEVHHS7ZTZATvkBx+emWJokdNEVlRBbn2PDYcRDWPC6oTRQXBNc/rC1rquzz93Woca9RYN/KiyMsB+ErZMhnelAJnm1PAuZSnpxl7BGrWIcwv3Q416qPMtf0QXy6WdCqQgFTSRSuXX3gaTIGrp8FI0nz71XfHQUrZNwFb8Z6tn8gXhEL86SMDh1j5SfMv+bNhWfQ6rndi7eWRdcr3gCB0oVbqHnj6gBSYybBEChfL9oO/F+C95IfGusk1FiHZdJ8L+PiLphSpoyOMWU7FaKCXhn2VLHGKpxWEr05vwpRK/HK1bvmHV+v8ajyVepUivfYl/+1skJIuGHR1g5dYOvpWvhRlcrrYU+UXgG+E2W/1L9pOa9Bs+7UwtwLJH8uuG3hQSfeN+a1lr6fH56H7Lw==</con:value></con:property><con:property><con:name>ACCOUNT_OID</con:name><con:value>FC67475CE826D487E0401F0A05992901</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>FC67475CE825D487E0401F0A05992901</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:FC67475CE825D487E0401F0A05992901</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>FC674A13DC25A146E0401F0A07996275</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:FC674A13DC25A146E0401F0A07996275</con:value></con:property><con:property><con:name>UserName1</con:name><con:value>AcountDelete_firstuser20140622_1403416919946</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>FC674A13DC26A146E0401F0A07996275</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"EB3785D9525F1D73E0401F0A079952D7:60D8B783"</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/RET_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>33eac14b-7ca6-4951-bcd3-6d5324a532e0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8547684e-42f1-49ea-bedd-c62dbc0a4c03</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>83b1074a-e619-481c-b3e7-05ac36e08bb9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>role</con:name><con:value>nodeIdRTL</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:RET_CS_1</con:value></con:property></con:properties><con:tearDownScript>if(context.expand( '${#Project#runTeardown}' )=='true')
	{
	log.info("Executing TearDown for Suite '" + testSuite.getName() + "'");
	
	for ( testCaseResult in runner.results )
	{
	   currentTestCaseName = testCaseResult.getTestCase().name;  
	   currentTestCase = testCaseResult.getTestCase(); 
	   log.info("Current TestCase : '"+ currentTestCaseName + "'");
	   log.info("Current TestCase Status : '" + testCaseResult.getStatus().toString() + "'");
	   
	   if ( testCaseResult.getStatus().toString() == 'FAILED' )
	   {
	      log.info("Re-executing failed TC");
	      def currentRunnerTC = currentTestCase.run(null, false);
	      log.info("Status on re-execution : '" + currentRunnerTC.status + "'");
	   }
	}
	log.info("Execution of TearDown for Suite '" + testSuite.getName() + "' Completed" );
}</con:tearDownScript><con:reportParameters/></con:testSuite><con:endpointStrategy xsi:type="con:DefaultEndpointStrategy" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:endpoint mode="OVERRIDE">https://qa.p.uvvu.com:7001/${#TestCase#endPoint}</con:endpoint></con:endpointStrategy><con:requirements/><con:properties><con:property><con:name>account_oid</con:name><con:value>E608A05B1095BA3FE0401F0A059926D1</con:value></con:property><con:property><con:name>ADULT_DOB</con:name><con:value>29-Jul-94</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-08-17</con:value></con:property><con:property><con:name>ADULT_MIN_AGE</con:name><con:value>18</con:value></con:property><con:property><con:name>ALID</con:name><con:value>urn:dece:alid:org:200002</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>APID</con:name><con:value>urn:dece:apid:org:200002</con:value></con:property><con:property><con:name>assertionUID</con:name><con:value>E19E3D2D6A904D06E0401F0A05994A7A</con:value></con:property><con:property><con:name>audience</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CertMatchesNodeID</con:name><con:value>YES</con:value></con:property><con:property><con:name>CertMatchesNodeName</con:name><con:value>YES</con:value></con:property><con:property><con:name>certsPath_Linux</con:name><con:value>../../Certs/QALP1/</con:value></con:property><con:property><con:name>certsPath_Windows</con:name><con:value>../../Certs/QALP1/</con:value></con:property><con:property><con:name>CHILD_DOB</con:name><con:value>27-Jul-02</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-08-15</con:value></con:property><con:property><con:name>CHILD_MAX_AGE</con:name><con:value>12</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:org:200002</con:value></con:property><con:property><con:name>clusterNumber</con:name><con:value>1</con:value></con:property><con:property><con:name>coordinatorSchema</con:name><con:value>http://www.decellc.org/schema/2015/03/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_06</con:name><con:value>http://www.decellc.org/schema/2012/12/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_07</con:name><con:value>http://www.decellc.org/schema/2013/06/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_11</con:name><con:value>http://www.decellc.org/schema/2013/10/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_21</con:name><con:value>http://www.decellc.org/schema/2013/10/coordinator</con:value></con:property><con:property><con:name>coords</con:name><con:value>FALKY,COORD-10000,COORD-3034,COORD-2999,COORD-2509,COORD-627,UV-135,UV-340,Coord-2180</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-08-17</con:value></con:property><con:property><con:name>DateOfBirthXML</con:name><con:value>1999-07-19</con:value></con:property><con:property><con:name>DBHost</con:name><con:value>LP1</con:value></con:property><con:property><con:name>DBIdentifier</con:name><con:value>LP1</con:value></con:property><con:property><con:name>DBPassword</con:name><con:value>lp1db_23</con:value></con:property><con:property><con:name>DBUsername</con:name><con:value>DEQA1_APP</con:value></con:property><con:property><con:name>Device_HostName</con:name><con:value>https://qa.d.uvvu.com:7001</con:value></con:property><con:property><con:name>disablePriority</con:name><con:value>P3,CHILD,CLG</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>enablePriorityScript</con:name><con:value>falsedisablePriority=P3,CHILD,CLG</con:value></con:property><con:property><con:name>encodedUserID</con:name><con:value/></con:property><con:property><con:name>ENV</con:name><con:value>QALP1</con:value></con:property><con:property><con:name>eTag</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GeoProfile</con:name><con:value>US</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>user20130716_022720</con:value></con:property><con:property><con:name>JDBCConnStr</con:name><con:value>jdbc:oracle:thin:@stdeqp-clu1-scan.va.neustar.com:2115/stdecqpdb_stdecqa.neustar.com</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Language2</con:name><con:value>de</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>maxUserName</con:name><con:value>64</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>minUserName</con:name><con:value>6</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>NODEACCID</con:name><con:value>E1AF78725D9E6410E0401F0A07997B12</con:value></con:property><con:property><con:name>nodeIdAccportal</con:name><con:value>ACCESS</con:value></con:property><con:property><con:name>nodeIdAccportal2</con:name><con:value>ACCESS_2</con:value></con:property><con:property><con:name>nodeIdAccportalCS</con:name><con:value>ACCESCS</con:value></con:property><con:property><con:name>nodeIdAccportalCS2</con:name><con:value>ACCESSCS_2</con:value></con:property><con:property><con:name>nodeIdCON</con:name><con:value>CON</con:value></con:property><con:property><con:name>nodeIdCON2</con:name><con:value>CON_2</con:value></con:property><con:property><con:name>nodeIdCONCS</con:name><con:value>CON_CS_1</con:value></con:property><con:property><con:name>nodeIdCONCS2</con:name><con:value>CON_CS_2</con:value></con:property><con:property><con:name>nodeIdCoo</con:name><con:value>COO</con:value></con:property><con:property><con:name>nodeIdCoo2</con:name><con:value>COO_2</con:value></con:property><con:property><con:name>nodeIdCoordCS</con:name><con:value>coord:cs</con:value></con:property><con:property><con:name>nodeIdDECE</con:name><con:value>DECE</con:value></con:property><con:property><con:name>nodeIdDECECS</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>nodeIdDECECS1</con:name><con:value>truststore-dece-cs</con:value></con:property><con:property><con:name>nodeIdDEV</con:name><con:value>DEV</con:value></con:property><con:property><con:name>nodeIdDEV2</con:name><con:value>DEV_2</con:value></con:property><con:property><con:name>nodeIdDEVCS</con:name><con:value>DEV_CS_1</con:value></con:property><con:property><con:name>nodeIdDEVCS2</con:name><con:value>DEV_CS_2</con:value></con:property><con:property><con:name>nodeIdDLASP</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>nodeIdDLASP2</con:name><con:value>DLASP_2</con:value></con:property><con:property><con:name>nodeIdDLASPCS</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>nodeIdDLASPCS2</con:name><con:value>DLASP_CS_2</con:value></con:property><con:property><con:name>nodeIdDSP</con:name><con:value>DSP</con:value></con:property><con:property><con:name>nodeIdDSP2</con:name><con:value>DSP_2</con:value></con:property><con:property><con:name>nodeIdDSPCS</con:name><con:value>DSP_CS_1</con:value></con:property><con:property><con:name>nodeIdDSPCS2</con:name><con:value>DSP_CS_2</con:value></con:property><con:property><con:name>nodeIdLLASP</con:name><con:value>LLASP</con:value></con:property><con:property><con:name>nodeIdLLASP2</con:name><con:value>LLASP_2</con:value></con:property><con:property><con:name>nodeIdLLASPCS</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>nodeIdLLASPCS2</con:name><con:value>LLASP_CS_2</con:value></con:property><con:property><con:name>nodeIdportal</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>nodeIdportalCS</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>nodeIdRetailerforDeviceAuthToken</con:name><con:value/></con:property><con:property><con:name>nodeIdRTL</con:name><con:value>RET</con:value></con:property><con:property><con:name>nodeIdRTL1</con:name><con:value>sriniretailer</con:value></con:property><con:property><con:name>nodeIdRTL2</con:name><con:value>RET_2</con:value></con:property><con:property><con:name>nodeIdRTLCS</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>nodeIdRTLCS1</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>nodeIdRTLCS2</con:name><con:value>RET_CS_2</con:value></con:property><con:property><con:name>nodeIdSPCLCS</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E19F934C4E6BFA99E0401F0A05993DA2</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E528648B66BDACF7E0401F0A05994DAF</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E19F95D7CFC268C9E0401F0A079952C9</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E151F333D66812AFE0401F0A07996C63</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E528808A600535F3E0401F0A07996230</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3ATermsOfUse</con:value></con:property><con:property><con:name>Policy_TOU</con:name><con:value>https://qa.c.uvvu.com:7001/Consent/Text/US/urn:dece:type:policy:TermsOfUse:20140811/html</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>projectPath</con:name><con:value>C:\Users\rshrivastava\Desktop</con:value></con:property><con:property><con:name>Provision_HostName</con:name><con:value>https://qa.p.uvvu.com:7001</con:value></con:property><con:property><con:name>Query_HostName</con:name><con:value>https://qa.q.uvvu.com:7001</con:value></con:property><con:property><con:name>Query_HostNameForProxy</con:name><con:value>https://uvqa-proxycache-elb-2009492071.us-west-2.elb.amazonaws.com:7001</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>RandomPwdFlag</con:name><con:value/></con:property><con:property><con:name>Request_XML</con:name><con:value><![CDATA[<User UserClass="urn:dece:role:user:class:${#TestCase#Privilege}" xmlns="${#Project#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#"><Name><GivenName>${#Project#UserName}</GivenName><SurName>${#Project#UserName}</SurName></Name><ContactInfo><PrimaryEmail><Value>${#Project#PrimaryEmail}</Value></PrimaryEmail><AlternateEmail><Value>${#Project#AlternateEmail}</Value></AlternateEmail><Address><PostalAddress>${#Project#PostalAddress}</PostalAddress><PostalCode>${#Project#PostalCode}</PostalCode><Locality>${#Project#Locality}</Locality><StateOrProvince>${#Project#StateOrProvince}</StateOrProvince><Country>${#Project#Country}</Country></Address><TelephoneNumber><Value>${#Project#TelephoneNumber}</Value></TelephoneNumber><MobileTelephoneNumber><Value>${#Project#MobileTelephoneNumber}</Value></MobileTelephoneNumber></ContactInfo><Languages><Language>${#Project#Language1}</Language></Languages><DateOfBirth MeetsAgeOfMajority="${#TestCase#MeetsAgeOfMajority}">${#TestCase#DateOfBirth}</DateOfBirth>${#TestCase#LegalGuardian}<Credentials><Username>${#TestCase#UserName}</Username><Password>${#Project#password}</Password></Credentials><UserRecoveryTokens><RecoveryItem><QuestionID>${#Project#QuestionID1}</QuestionID><QuestionResponse>${#Project#QuestionResponse1}</QuestionResponse></RecoveryItem><RecoveryItem><QuestionID>${#Project#QuestionID2}</QuestionID><QuestionResponse>${#Project#QuestionResponse2}</QuestionResponse></RecoveryItem></UserRecoveryTokens></User>]]></con:value></con:property><con:property><con:name>Request_XML_Buffer</con:name><con:value><![CDATA[<User UserClass="urn:dece:role:user:class:${#TestCase#Privilege}" xmlns="${#Project#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#"><Name><GivenName>${#Project#UserName}</GivenName><SurName>${#Project#UserName}</SurName></Name><ContactInfo><PrimaryEmail><Value>${#Project#PrimaryEmail}</Value></PrimaryEmail><AlternateEmail><Value>${#Project#AlternateEmail}</Value></AlternateEmail><Address><PostalAddress>${#Project#PostalAddress}</PostalAddress><PostalCode>${#Project#PostalCode}</PostalCode><Locality>${#Project#Locality}</Locality><StateOrProvince>${#Project#StateOrProvince}</StateOrProvince><Country>${#Project#Country}</Country></Address><TelephoneNumber><Value>${#Project#TelephoneNumber}</Value></TelephoneNumber><MobileTelephoneNumber><Value>${#Project#MobileTelephoneNumber}</Value></MobileTelephoneNumber></ContactInfo><Languages><Language>${#Project#Language1}</Language></Languages><DateOfBirth MeetsAgeOfMajority="${#TestCase#MeetsAgeOfMajority}">${#TestCase#DateOfBirth}</DateOfBirth>${#TestCase#LegalGuardian}<Credentials><Username>${#TestCase#UserName}</Username><Password>${#Project#password}</Password></Credentials><UserRecoveryTokens><RecoveryItem><QuestionID>${#Project#QuestionID1}</QuestionID><QuestionResponse>${#Project#QuestionResponse1}</QuestionResponse></RecoveryItem><RecoveryItem><QuestionID>${#Project#QuestionID2}</QuestionID><QuestionResponse>${#Project#QuestionResponse2}</QuestionResponse></RecoveryItem></UserRecoveryTokens></User>]]></con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>runTeardown</con:name><con:value>false</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=null</con:value></con:property><con:property><con:name>SAML1</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>scriptsPath_Linux</con:name><con:value>../../GlobalScripts</con:value></con:property><con:property><con:name>scriptsPath_Windows</con:name><con:value>../../GlobalScripts</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>user20130716_022720</con:value></con:property><con:property><con:name>targerHostd</con:name><con:value>qa.d.uvvu.com</con:value></con:property><con:property><con:name>targetDeviceDomain</con:name><con:value>qa.d.uvvu.com:7001</con:value></con:property><con:property><con:name>targetHost</con:name><con:value>qa.p.uvvu.com</con:value></con:property><con:property><con:name>targetHostq</con:name><con:value>qa.q.uvvu.com</con:value></con:property><con:property><con:name>targetPort</con:name><con:value>7001</con:value></con:property><con:property><con:name>targetPortq</con:name><con:value>7001</con:value></con:property><con:property><con:name>targetPort_TOU</con:name><con:value>7002</con:value></con:property><con:property><con:name>targetSystem</con:name><con:value>LP1</con:value></con:property><con:property><con:name>targetURL</con:name><con:value>qa.p.uvvu.com:7001</con:value></con:property><con:property><con:name>targetUrlSHost</con:name><con:value>qa.s.uvvu.com:7001</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>TOUUrl</con:name><con:value>qa.c.uvvu.com:7001</con:value></con:property><con:property><con:name>TOU_AT</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_AU</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_BE</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_CA</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_CH</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_DE</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_FR</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_GB</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_IE</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_LU</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_NL</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_NZ</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_US</con:name><con:value>20140811</con:value></con:property><con:property><con:name>URLEncode</con:name><con:value>NO</con:value></con:property><con:property><con:name>urnaccount</con:name><con:value>urn:dece:accountid:org:dece:</con:value></con:property><con:property><con:name>urnError</con:name><con:value>urn:dece:errorid:org:dece:</con:value></con:property><con:property><con:name>urnNode</con:name><con:value>urn:dece:org:org:dece:</con:value></con:property><con:property><con:name>urntokenType_deviceauthtoken</con:name><con:value>urn:dece:type:tokentype:DeviceAuthToken</con:value></con:property><con:property><con:name>urntokenType_saml</con:name><con:value>urn:dece:type:tokentype:saml2</con:value></con:property><con:property><con:name>urntokenType_userpassword</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Username</con:name><con:value>user20130726_035217</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>V1</con:name><con:value>1</con:value></con:property><con:property><con:name>V2</con:name><con:value>11</con:value></con:property><con:property><con:name>versionMajor</con:name><con:value>2015</con:value></con:property><con:property><con:name>versionMinor</con:name><con:value>02</con:value></con:property><con:property><con:name>versionUrlEncode</con:name><con:value>06</con:value></con:property><con:property><con:name>YOUTH_DOB</con:name><con:value>28-Jul-99</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>yyyy-MM-dd</con:value></con:property><con:property><con:name>YOUTH_MIN_AGE</con:name><con:value>13</con:value></con:property><con:property><con:name>Rights_APID</con:name><con:value>urn:dece:apid:file:INTERACTIVE_MetadataDigitalCreate.txt:39983831</con:value></con:property><con:property><con:name>Rights_ALID</con:name><con:value>urn:dece:alid:file:RTUPDATE_R3_EXAMPLE_ALIDVersion_212395.txt</con:value></con:property><con:property><con:name>Rights_CID</con:name><con:value>urn:dece:cid:file:RTUPDATE_R3_EXAMPLE_CIDVersion_212395.txt</con:value></con:property><con:property><con:name>Batch_HostName</con:name><con:value>https://qa.b.uvvu.com:7001</con:value></con:property><con:property><con:name>coordinatorSchema_02</con:name><con:value>http://www.decellc.org/schema/2015/03/coordinator</con:value></con:property><con:property><con:name>targetHostd</con:name><con:value>qa.d.uvvu.com</con:value></con:property><con:property><con:name>targetPortd</con:name><con:value>7001</con:value></con:property><con:property><con:name>OrgID</con:name><con:value>ISC_R1</con:value></con:property><con:property><con:name>JKSAliasName</con:name><con:value>qalp1</con:value></con:property><con:property><con:name>JKSPassword</con:name><con:value>testing</con:value></con:property><con:property><con:name>cacheDuration</con:name><con:value>86400</con:value></con:property><con:property><con:name>envIdentifier</con:name><con:value>LP1</con:value></con:property><con:property><con:name>targetHostS</con:name><con:value>qa.s.uvvu.com:7001</con:value></con:property><con:property><con:name>targetHostP</con:name><con:value>qa.p.uvvu.com:7001</con:value></con:property><con:property><con:name>targetHostC</con:name><con:value>qa.c.uvvu.com:7001</con:value></con:property><con:property><con:name>targetHostB</con:name><con:value>qa.b.uvvu.com:7001</con:value></con:property></con:properties><con:afterLoadScript/><con:wssContainer/><con:databaseConnectionContainer/><con:reporting><con:reportTemplates/><con:xmlTemplates/><con:parameters/></con:reporting><con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep"><con:script>if(testStepResult.getTestStep().config.type.toString() == "restrequest")
{
	byte [] tempByteArrRequest = testStepResult.getRawRequestData();
	String tempRequest = new String(tempByteArrRequest);

	log.info("-----------------------------&lt;" + testStepResult.getTestStep().getName() + " Request>--------------------------------");
	log.info(tempRequest);
	log.info("-----------------------------&lt;/" + testStepResult.getTestStep().getName() + " Request>--------------------------------");

	byte [] tempByteArrResponse = testStepResult.getRawResponseData();
	String tempResponse = new String(tempByteArrResponse);


	log.info("-----------------------------&lt;" + testStepResult.getTestStep().getName() + " Response>--------------------------------");
	log.info(tempResponse);
	log.info("-----------------------------&lt;/" + testStepResult.getTestStep().getName() + " Response>--------------------------------");
}</con:script></con:eventHandlers><con:eventHandlers type="TestSuiteRunListener.beforeTestCase" name="TestSuiteRunListener.beforeTestCase"><con:script>log.info("################################################################################");</con:script></con:eventHandlers><con:sensitiveInformation/></con:soapui-project>